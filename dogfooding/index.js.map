{"version":3,"file":"index.js","mappings":"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qI,KAAM,QAERX,QAAQ,GAEV,CACE7Q,KAAM,6BACN45I,SAAU,CACRhgG,SAAU,SACV8U,KAAM,6BACNhE,KAAM,iBAERwxF,YAAa,wDACbC,QAAS,SACTzkC,SAAU,CACR0kC,IAAK,QACL5qI,KAAM,SAGV,CACExR,KAAM,iBACN45I,SAAU,CACRhgG,SAAU,SACV8U,KAAM,qBACNktF,MAAM,GAERM,YAAa,iTACbC,QAAS,gBACTzkC,SAAU,CACR0kC,IAAK,QACL5qI,MAAO,SAETX,QAAQ,EACR+qI,MAAM,GAER,CACE57I,KAAM,gBACN45I,SAAU,CACRhgG,SAAU,SACV8U,KAAM,oBACNktF,MAAM,GAERM,YAAa,iTACbC,QAAS,QACTzkC,SAAU,CACR0kC,IAAK,QACL5qI,KAAM,SAERX,QAAQ,EACR+qI,MAAM,GAER,CACE57I,KAAM,gBACN45I,SAAU,CACRhgG,SAAU,SACV8U,KAAM,oBACNktF,MAAM,GAERM,YAAa,oTACbC,QAAS,gBACTzkC,SAAU,CACR0kC,IAAK,QACL5qI,MAAO,UAETX,QAAQ,EACR+qI,MAAM,GAER,CACE57I,KAAM,gBACN45I,SAAU,CACRhgG,SAAU,SACV8U,KAAM,oBACNktF,MAAM,GAERM,YAAa,0TACbC,QAAS,cACTzkC,SAAU,CACR0kC,IAAK,QACL5qI,KAAM,QAERX,QAAQ,EACR+qI,MAAM,GAER,CACE57I,KAAM,gBACN45I,SAAU,CACRhgG,SAAU,SACV8U,KAAM,oBACNktF,MAAM,GAERM,YAAa,4SACbC,QAAS,gBACTzkC,SAAU,CACR0kC,IAAK,QACL5qI,MAAO,SAETX,QAAQ,EACR+qI,MAAM,GAER,CACE57I,KAAM,gBACN45I,SAAU,CACRhgG,SAAU,SACV8U,KAAM,oBACNktF,MAAM,GAERM,YAAa,0SACbC,QAAS,cACTzkC,SAAU,CACR0kC,IAAK,QACL5qI,KAAM,QAERX,QAAQ,EACR+qI,MAAM,GAER,CACE57I,KAAM,aACN45I,SAAU,CACRhgG,SAAU,SACV8U,KAAM,iBACNhE,KAAM,YACNkxF,MAAM,GAERM,YAAa,uLACbC,QAA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,GAER,CACE57I,KAAM,gBACN45I,SAAU,CACRhgG,SAAU,SACV8U,KAAM,gBACNktF,MAAM,GAERM,YAAa,2JACbC,QAAS,gBACTzkC,SAAU,CACR0kC,IAAK,OACL5qI,MAAO,QAEToqI,MAAM,GAER,CACE57I,KAAM,qBACN45I,SAAU,CACRhgG,SAAU,SACV8U,KAAM,qBACNktF,MAAM,GAERM,YAAa,gLACbC,QAAS,gBACTzkC,SAAU,CACR0kC,IAAK,OACL5qI,MAAO,QAEToqI,MAAM,GAER,CACE57I,KAAM,iBACN45I,SAAU,CACRhgG,SAAU,SACV8U,KAAM,qBACNktF,MAAM,GAERM,YAAa,yFACbC,QAAS,UACTzkC,SAAU,CACR0kC,IAAK,QACL5qI,KAAM,OAERX,QAAQ,EACR+qI,MAAM,GAER,CACE57I,KAAM,iBACN45I,SAAU,CACRhgG,SAAU,SACV8U,KAAM,qBACNktF,MAAM,GAERM,YAAa,yFACbC,QAAS,UACTzkC,SAAU,CACR0kC,IAAK,QACL5qI,KAAM,SAERX,QAAQ,EACR+qI,MAAM,GAER,CACE57I,KAAM,eACN45I,SAAU,CACRhgG,SAAU,SACV8U,KAAM,wBAERwtF,YAAa,2GAEf,CACEl8I,KAAM,iBACN45I,SAAU,CACRhgG,SAAU,SACV8U,KAAM,qBACNktF,MAAM,GAERM,YAAa,uFACbC,QAAS,QACTzkC,SAAU,CACR0kC,IAAK,QACL5qI,KAAM,UAERX,QAAQ,EACR+qI,MAAM,GAER,CACE57I,KAAM,gBACN45I,SAAU,CACRhgG,SAAU,SACV8U,KAAM,iBAERwtF,YAAa,qIACbC,QAAS,UACTzkC,SAAU,CACR0kC,IAAK,QACL5qI,KAAM,QAGV,CACExR,KAAM,iBACN45I,SAAU,CACRhgG,SAAU,SACV8U,KAAM,kBAERwtF,YAAa,6HACbC,QAAS,gBACTzkC,SAAU,CACR0kC,IAAK,OACL5qI,MAAO,QAETX,QAAQ,GAEV,CACE7Q,KAAM,SACN45I,SAAU,CACRhgG,SAAU,SACV8U,KAAM,aACNhE,KAAM,UACNkxF,MAAM,GAERM,YAAa,uBACbC,QAAS,gBACTzkC,SAAU,CACR0kC,IAAK,OACL5qI,MAAO,QAET1e,KAAK,EACL8oJ,MAAM,GAER,CACE57I,KAAM,OACN45I,SAAU,CACRhgG,SAAU,SACV8U,KAAM,gBACNktF,MAAM,GAERM,YAAa,sFACbC,QAAS,gBACTzkC,SAAU,CACR0kC,IAAK,QACL5qI,MAAO,SAEToqI,MAAM,GAER,CACE57I,KAAM,KACN45I,SAAU,CACRhgG,SAAU,SACV8U,KAAM,gBAERwtF,YAAa,mEACbC,QAAS,gBACTzkC,SAAU,CACR0kC,IAAK,OACL5qI,MAAO,QAET1e,KAAK,GAEP,CACEkN,KAAM,eACN45I,SAAU,CACRhgG,SAAU,SACV8U,KAAM,gBAERwtF,YAAa,yIACbC,QAAS,YACTzkC,SAAU,CACR0kC,IAAK,OACL5qI,KAAM,UAERX,QAAQ,GAEV,CACE7Q,KAAM,MACN45I,SAAU,CACRhgG,SAAU,SACV8U,KAAM,qBAERwtF,YAAa,qFACbC,QAAS,QACTzkC,SAAU,CACR0kC,IAAK,MACL5qI,KAAM,QAER1e,KAAK,GAEP,CACEkN,KAAM,YACN45I,SAAU,CACRhgG,SAAU,SACV8U,KAAM,mBAERwtF,YAAa,oMACbrrI,QAAQ,GAEV,CACE7Q,KAAM,kBACN45I,SAAU,CACRhgG,SAAU,SACV8U,KAAM,eAERwtF,YAAa,qFACbC,QAAS,QACTzkC,SAAU,CACR0kC,IAAK,QACL5qI,KAAM,WAGV,CACExR,KAAM,gBACN45I,SAAU,CACRhgG,SAAU,SACV8U,KAAM,iBAERwtF,YAAa,sGAEf,CACEl8I,KAAM,WACN45I,SAAU,CACRhgG,SAAU,SACV8U,KAAM,mBAERwtF,YAAa,qGACbC,QAAS,UACTzkC,SAAU,CACR0kC,IAAK,QACL5qI,KAAM,QAGV,CACExR,KAAM,UACN45I,SAAU,CACRhgG,SAAU,SACV8U,KAAM,2BAERwtF,YAAa,wMACbC,QAAS,cACTzkC,SAAU,CACR0kC,IAAK,QACL5qI,KAAM,SAGV,CACExR,KAAM,mBACN45I,SAAU,CACRhgG,SAAU,SACV8U,KAAM,iBACNj1D,KAAM,mBAERyiJ,YAAa,yQAEf,CACEl8I,KAAM,aACN45I,SAAU,CACRhgG,SAAU,SACV8U,KAAM,cACNktF,MAAM,GAERM,YAAa,6EACbC,QAAS,SACTzkC,SAAU,CACR0kC,IAAK,QACL5qI,KAAM,QAERoqI,MAAM,GAER,CACE57I,KAAM,kBACN45I,SAAU,CACRhgG,SAAU,SACV8U,KAAM,0BACNktF,MAAM,GAERM,YAAa,kDACbN,MAAM,GAER,CACE57I,KAAM,iBACN45I,SAAU,CACRhgG,SAAU,SACV8U,KAAM,iBACNktF,MAAM,GAERM,YAAa,gGACbN,MAAM,GAER,CACE57I,KAAM,gBACN45I,SAAU,CACRhgG,SAAU,SACV8U,KAAM,eACNj1D,KAAM,SAERyiJ,YAAa,sFACbrrI,QAAQ,GAEV,CACE7Q,KAAM,mBACN45I,SAAU,CACRhgG,SAAU,SACV8U,KAAM,cACNj1D,KAAM,SAERyiJ,YAAa,gCAEf,CACEl8I,KAAM,qBACN45I,SAAU,CACRhgG,SAAU,SACV8U,KAAM,gBACNj1D,KAAM,SAERyiJ,YAAa,+CAEf,CACEl8I,KAAM,qCACN45I,SAAU,CACRhgG,SAAU,SACV8U,KAAM,iCAERwtF,YAAa,+RAEf,CACEl8I,KAAM,kBACN45I,SAAU,CACRhgG,SAAU,SACV8U,KAAM,iBACNj1D,KAAM,SAERyiJ,YAAa,iFACbrrI,QAAQ,GAEV,CACE7Q,KAAM,sBACN45I,SAAU,CACRhgG,SAAU,SACV8U,KAAM,gBACNktF,MAAM,GAERM,YAAa,sHACbC,QAAS,YACTzkC,SAAU,CACR0kC,KAAM,QACN5qI,KAAM,UAERoqI,MAAM,GAER,CACE57I,KAAM,cACN45I,SAAU,CACRhgG,SAAU,SACV8U,KAAM,cACNhE,KAAM,eACNkxF,MAAM,GAERM,YAAa,qHACbC,QAAS,gBACTzkC,SAAU,CACR0kC,IAAK,OACL5qI,MAAO,QAEToqI,MAAM,GAER,CACE57I,KAAM,UACN45I,SAAU,CACRhgG,SAAU,SACV8U,KAAM,eACNktF,MAAM,GAERM,YAAa,uHACbN,MAAM,GAER,CACE57I,KAAM,uCACN45I,SAAU,CACR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","sources":["webpack://waku-dogfooding/./node_modules/@protobufjs/aspromise/index.js","webpack://waku-dogfooding/./node_modules/@protobufjs/base64/index.js","webpack://waku-dogfooding/./node_modules/@protobufjs/codegen/index.js","webpack://waku-dogfooding/./node_modules/@protobufjs/eventemitter/index.js","webpack://waku-dogfooding/./node_modules/@protobufjs/fetch/index.js","webpack://waku-dogfooding/./node_modules/@protobufjs/float/index.js","webpack://waku-dogfooding/./node_modules/@protobufjs/inquire/index.js","webpack://waku-dogfooding/./node_modules/@protobufjs/path/index.js","webpack://waku-dogfooding/./node_modules/@protobufjs/pool/index.js","webpack://waku-dogfooding/./node_modules/@protobufjs/utf8/index.js","webpack://waku-dogfooding/./node_modules/debug/src/browser.js","webpack://waku-dogfooding/./node_modules/debug/src/common.js","webpack://waku-dogfooding/./node_modules/err-code/index.js","webpack://waku-dogfooding/./node_modules/event-iterator/lib/dom.js","webpack://waku-dogfooding/./node_modules/event-iterator/lib/event-iterator.js","webpack://waku-dogfooding/./node_modules/eventemitter3/index.js","webpack://waku-dogfooding/./node_modules/hashlru/index.js","webpack://waku-dogfooding/./node_modules/hi-base32/src/base32.js","webpack://waku-dogfooding/./node_modules/is-electron/index.js","webpack://waku-dogfooding/./node_modules/is-plain-obj/index.js","webpack://waku-dogfooding/./node_modules/js-sha3/src/sha3.js","webpack://waku-dogfooding/./node_modules/merge-options/index.js","webpack://waku-dogfooding/./node_modules/ms/index.js","webpack://waku-dogfooding/./node_modules/murmurhash3js-revisited/index.js","webpack://waku-dogfooding/./node_modules/murmurhash3js-revisited/lib/murmurHash3js.js","webpack://waku-dogfooding/./node_modules/netmask/lib/netmask.js","webpack://waku-dogfooding/./node_modules/protobufjs/index.js","webpack://waku-dogfooding/./node_modules/protobufjs/src/common.js","webpack://waku-dogfooding/./node_modules/protobufjs/src/converter.js","webpack://waku-dogfooding/./node_modules/protobufjs/src/decoder.js","webpack://waku-dogfooding/./node_modules/protobufjs/src/encoder.js","webpack://waku-dogfooding/./node_modules/protobufjs/src/enum.js","webpack://waku-dogfooding/./node_modules/protobufjs/src/field.js","webpack://waku-dogfooding/./node_modules/protobufjs/src/index-light.js","webpack://waku-dogfooding/./node_modules/protobufjs/src/index-minimal.js","webpack://waku-dogfooding/./node_modules/protobufjs/src/index.js","webpack://waku-dogfooding/./node_modules/protobufjs/src/mapfield.js","webpack://waku-dogfooding/./node_modules/protobufjs/src/message.js","webpack://waku-dogfooding/./node_modules/protobufjs/src/method.js","webpack://waku-dogfooding/./node_modules/protobufjs/src/namespace.js","webpack://waku-dogfooding/./node_modules/protobufjs/src/object.js","webpack://waku-dogfooding/./node_modules/protobufjs/src/oneof.js","webpack://waku-dogfooding/./node_modules/protobufjs/src/parse.js","webpack://waku-dogfooding/./node_modules/protobufjs/src/reader.js","webpack://waku-dogfooding/./node_modules/protobufjs/src/reader_buffer.js","webpack://waku-dogfooding/./node_modules/protobufjs/src/root.js","webpack://waku-dogfooding/./node_modules/protobufjs/src/roots.js","webpack://waku-dogfooding/./node_modules/protobufjs/src/rpc.js","webpack://waku-dogfooding/./node_modules/protobufjs/src/rpc/service.js","webpack://waku-dogfooding/./node_modules/protobufjs/src/service.js","webpack://waku-dogfooding/./node_modules/protobufjs/src/tokenize.js","webpack://waku-dogfooding/./node_modules/protobufjs/src/type.js","webpack://waku-dogfooding/./node_modules/protobufjs/src/types.js","webpack://waku-dogfooding/./node_modules/protobufjs/src/util.js","webpack://waku-dogfooding/./node_modules/protobufjs/src/util/longbits.js","webpack://waku-dogfooding/./node_modules/protobufjs/src/util/minimal.js","webpack://waku-dogfooding/./node_modules/protobufjs/src/verifier.js","webpack://waku-dogfooding/./node_modules/protobufjs/src/wrappers.js","webpack://waku-dogfooding/./node_modules/protobufjs/src/writer.js","webpack://waku-dogfooding/./node_modules/protobufjs/src/writer_buffer.js","webpack://waku-dogfooding/./node_modules/pvtsutils/build/index.js","webpack://waku-dogfooding/webpack/bootstrap","webpack://waku-dogfooding/webpack/runtime/create fake namespace object","webpack://waku-dogfooding/webpack/runtime/amd options","webpack://waku-dogfooding/webpack/runtime/define property getters","webpack://waku-dogfooding/webpack/runtime/hasOwnProperty shorthand","webpack://waku-dogfooding/webpack/runtime/make namespace object","webpack://waku-dogfooding/./node_modules/uint8arrays/dist/src/alloc.js","webpack://waku-dogfooding/./node_modules/uint8-varint/dist/src/index.js","webpack://waku-dogfooding/./node_modules/protons-runtime/dist/src/utils/float.js","webpack://waku-dogfooding/./node_modules/protons-runtime/dist/src/utils/longbits.js","webpack://waku-dogfooding/./node_modules/protons-runtime/dist/src/utils/utf8.js","webpack://waku-dogfooding/./node_modules/protons-runtime/dist/src/utils/reader.js","webpack://waku-dogfooding/./node_modules/protons-runtime/dist/src/decode.js","webpack://waku-dogfooding/./node_modules/multiformats/dist/src/bytes.js","webpack://waku-dogfooding/./node_modules/multiformats/dist/src/vendor/base-x.js","webpack://waku-dogfooding/./node_modules/multiformats/dist/src/bases/base.js","webpack://waku-dogfooding/./node_modules/multiformats/dist/src/bases/base10.js","webpack://waku-dogfooding/./node_modules/multiformats/dist/src/bases/base16.js","webpack://waku-dogfooding/./node_modules/multiformats/dist/src/bases/base2.js","webpack://waku-dogfooding/./node_modules/multiformats/dist/src/bases/base256emoji.js","webpack://waku-dogfooding/./node_modules/multiformats/dist/src/bases/base32.js","webpack://waku-dogfooding/./node_modules/multiformats/dist/src/bases/base36.js","webpack://waku-dogfooding/./node_modules/multiformats/dist/src/bases/base58.js","webpack://waku-dogfooding/./node_modules/multiformats/dist/src/bases/base64.js","webpack://waku-dogfooding/./node_modules/multiformats/dist/src/bases/base8.js","webpack://waku-dogfooding/./node_modules/multiformats/dist/src/bases/identity.js","webpack://waku-dogfooding/./node_modules/multiformats/dist/src/codecs/json.js","webpack://waku-dogfooding/./node_modules/multiformats/dist/src/codecs/raw.js","webpack://waku-dogfooding/./node_modules/multiformats/dist/src/vendor/varint.js","webpack://waku-dogfooding/./node_modules/multiformats/dist/src/varint.js","webpack://waku-dogfooding/./node_modules/multiformats/dist/src/hashes/digest.js","webpack://waku-dogfooding/./node_modules/multiformats/dist/src/hashes/identity.js","webpack://waku-dogfooding/./node_modules/multiformats/dist/src/hashes/hasher.js","webpack://waku-dogfooding/./node_modules/multiformats/dist/src/hashes/sha2-browser.js","webpack://waku-dogfooding/./node_modules/multiformats/dist/src/cid.js","webpack://waku-dogfooding/./node_modules/multiformats/dist/src/basics.js","webpack://waku-dogfooding/./node_modules/uint8arrays/dist/src/util/bases.js","webpack://waku-dogfooding/./node_modules/uint8arrays/dist/src/from-string.js","webpack://waku-dogfooding/./node_modules/protons-runtime/dist/src/utils/writer.js","webpack://waku-dogfooding/./node_modules/protons-runtime/dist/src/utils/pool.js","webpack://waku-dogfooding/./node_modules/protons-runtime/dist/src/encode.js","webpack://waku-dogfooding/./node_modules/protons-runtime/dist/src/codec.js","webpack://waku-dogfooding/./node_modules/@waku/proto/dist/generated/message.js","webpack://waku-dogfooding/./node_modules/@waku/proto/dist/generated/filter.js","webpack://waku-dogfooding/./node_modules/@waku/proto/dist/generated/topic_only_message.js","webpack://waku-dogfooding/./node_modules/@waku/proto/dist/generated/filter_v2.js","webpack://waku-dogfooding/./node_modules/@waku/proto/dist/generated/light_push.js","webpack://waku-dogfooding/./node_modules/@waku/proto/dist/generated/store_v3.js","webpack://waku-dogfooding/./node_modules/@waku/proto/dist/generated/peer_exchange.js","webpack://waku-dogfooding/./node_modules/@waku/proto/dist/generated/metadata.js","webpack://waku-dogfooding/./node_modules/protons-runtime/dist/src/codecs/enum.js","webpack://waku-dogfooding/./node_modules/protons-runtime/dist/src/codecs/message.js","webpack://waku-dogfooding/./node_modules/protons-runtime/dist/src/index.js","webpack://waku-dogfooding/./node_modules/@waku/utils/dist/common/is_defined.js","webpack://waku-dogfooding/./node_modules/@waku/utils/dist/common/group_by.js","webpack://waku-dogfooding/./node_modules/@waku/utils/dist/common/to_async_iterator.js","webpack://waku-dogfooding/./node_modules/@noble/hashes/esm/_assert.js","webpack://waku-dogfooding/./node_modules/@noble/hashes/esm/crypto.js","webpack://waku-dogfooding/./node_modules/@noble/hashes/esm/utils.js","webpack://waku-dogfooding/./node_modules/@noble/hashes/esm/_md.js","webpack://waku-dogfooding/./node_modules/@noble/hashes/esm/sha256.js","webpack://waku-dogfooding/./node_modules/@waku/interfaces/dist/protocols.js","webpack://waku-dogfooding/./node_modules/@waku/interfaces/dist/connection_manager.js","webpack://waku-dogfooding/./node_modules/@waku/interfaces/dist/dns_discovery.js","webpack://waku-dogfooding/./node_modules/@waku/interfaces/dist/constants.js","webpack://waku-dogfooding/./node_modules/@waku/interfaces/dist/health_manager.js","webpack://waku-dogfooding/./node_modules/uint8arrays/dist/src/to-string.js","webpack://waku-dogfooding/./node_modules/@waku/utils/dist/bytes/index.js","webpack://waku-dogfooding/./node_modules/@waku/utils/dist/common/sharding/index.js","webpack://waku-dogfooding/./node_modules/@waku/utils/dist/common/relay_shard_codec.js","webpack://waku-dogfooding/./node_modules/@waku/utils/dist/common/delay.js","webpack://waku-dogfooding/./node_modules/@waku/utils/dist/logger/index.js","webpack://waku-dogfooding/./node_modules/@waku/core/dist/lib/message/version_0.js","webpack://waku-dogfooding/./node_modules/it-all/dist/src/index.js","webpack://waku-dogfooding/./node_modules/uint8arrays/dist/src/concat.js","webpack://waku-dogfooding/./node_modules/uint8arrays/dist/src/equals.js","webpack://waku-dogfooding/./node_modules/uint8arraylist/dist/src/index.js","webpack://waku-dogfooding/./node_modules/it-length-prefixed/dist/src/utils.js","webpack://waku-dogfooding/./node_modules/it-length-prefixed/dist/src/encode.js","webpack://waku-dogfooding/./node_modules/it-length-prefixed/dist/src/errors.js","webpack://waku-dogfooding/./node_modules/it-length-prefixed/dist/src/decode.js","webpack://waku-dogfooding/./node_modules/p-defer/index.js","webpack://waku-dogfooding/./node_modules/it-pushable/dist/src/fifo.js","webpack://waku-dogfooding/./node_modules/it-pushable/dist/src/index.js","webpack://waku-dogfooding/./node_modules/it-merge/dist/src/index.js","webpack://waku-dogfooding/./node_modules/it-pipe/dist/src/index.js","webpack://waku-dogfooding/./node_modules/@waku/core/dist/lib/stream_manager/stream_manager.js","webpack://waku-dogfooding/./node_modules/@waku/core/dist/lib/stream_manager/utils.js","webpack://waku-dogfooding/./node_modules/@waku/core/dist/lib/base_protocol.js","webpack://waku-dogfooding/./node_modules/@waku/utils/dist/libp2p/index.js","webpack://waku-dogfooding/./node_modules/@waku/core/dist/lib/filterPeers.js","webpack://waku-dogfooding/./node_modules/uuid/dist/esm-browser/native.js","webpack://waku-dogfooding/./node_modules/uuid/dist/esm-browser/rng.js","webpack://waku-dogfooding/./node_modules/uuid/dist/esm-browser/stringify.js","webpack://waku-dogfooding/./node_modules/uuid/dist/esm-browser/v4.js","webpack://waku-dogfooding/./node_modules/@waku/core/dist/lib/filter/filter_rpc.js","webpack://waku-dogfooding/./node_modules/@waku/core/dist/lib/filter/index.js","webpack://waku-dogfooding/./node_modules/@waku/core/dist/lib/light_push/push_rpc.js","webpack://waku-dogfooding/./node_modules/@waku/core/dist/lib/light_push/utils.js","webpack://waku-dogfooding/./node_modules/@waku/core/dist/lib/light_push/index.js","webpack://waku-dogfooding/./node_modules/@waku/utils/dist/common/is_size_valid.js","webpack://waku-dogfooding/./node_modules/@waku/core/dist/lib/to_proto_message.js","webpack://waku-dogfooding/./node_modules/@waku/core/dist/lib/store/rpc.js","webpack://waku-dogfooding/./node_modules/@waku/core/dist/lib/store/index.js","webpack://waku-dogfooding/./node_modules/p-timeout/index.js","webpack://waku-dogfooding/./node_modules/p-event/index.js","webpack://waku-dogfooding/./node_modules/@waku/core/dist/lib/wait_for_remote_peer.js","webpack://waku-dogfooding/./node_modules/@libp2p/interface/dist/src/event-target.js","webpack://waku-dogfooding/./node_modules/@waku/core/dist/lib/keep_alive_manager.js","webpack://waku-dogfooding/./node_modules/@waku/core/dist/lib/connection_manager.js","webpack://waku-dogfooding/./node_modules/@waku/core/dist/lib/health_manager.js","webpack://waku-dogfooding/./node_modules/@waku/core/dist/lib/metadata/index.js","webpack://waku-dogfooding/./node_modules/@libp2p/interface/dist/src/peer-id/index.js","webpack://waku-dogfooding/./node_modules/@chainsafe/is-ip/lib/parse.js","webpack://waku-dogfooding/./node_modules/@chainsafe/is-ip/lib/parser.js","webpack://waku-dogfooding/./node_modules/@chainsafe/is-ip/lib/is-ip.js","webpack://waku-dogfooding/./node_modules/@chainsafe/netmask/dist/src/ip.js","webpack://waku-dogfooding/./node_modules/@multiformats/multiaddr/dist/src/ip.js","webpack://waku-dogfooding/./node_modules/@multiformats/multiaddr/dist/src/protocols-table.js","webpack://waku-dogfooding/./node_modules/@multiformats/multiaddr/dist/src/convert.js","webpack://waku-dogfooding/./node_modules/@multiformats/multiaddr/dist/src/codec.js","webpack://waku-dogfooding/./node_modules/@multiformats/multiaddr/dist/src/multiaddr.js","webpack://waku-dogfooding/./node_modules/@multiformats/multiaddr/dist/src/index.js","webpack://waku-dogfooding/./node_modules/@waku/message-hash/dist/index.js","webpack://waku-dogfooding/./node_modules/@waku/sdk/dist/protocols/base_protocol.js","webpack://waku-dogfooding/./node_modules/@waku/sdk/dist/protocols/filter.js","webpack://waku-dogfooding/./node_modules/@waku/sdk/dist/protocols/light_push.js","webpack://waku-dogfooding/./node_modules/@waku/sdk/dist/protocols/store.js","webpack://waku-dogfooding/./node_modules/@waku/sdk/dist/waku.js","webpack://waku-dogfooding/./node_modules/@libp2p/interface/dist/src/errors.js","webpack://waku-dogfooding/./node_modules/@libp2p/crypto/dist/src/util.js","webpack://waku-dogfooding/./node_modules/@noble/hashes/esm/_u64.js","webpack://waku-dogfooding/./node_modules/@noble/hashes/esm/sha512.js","webpack://waku-dogfooding/./node_modules/@noble/curves/esm/abstract/utils.js","webpack://waku-dogfooding/./node_modules/@noble/curves/esm/abstract/modular.js","webpack://waku-dogfooding/./node_modules/@noble/curves/esm/abstract/curve.js","webpack://waku-dogfooding/./node_modules/@noble/curves/esm/abstract/edwards.js","webpack://waku-dogfooding/./node_modules/@noble/curves/esm/abstract/montgomery.js","webpack://waku-dogfooding/./node_modules/@noble/curves/esm/ed25519.js","webpack://waku-dogfooding/./node_modules/@libp2p/crypto/dist/src/keys/ed25519-browser.js","webpack://waku-dogfooding/./node_modules/@libp2p/crypto/dist/src/webcrypto-browser.js","webpack://waku-dogfooding/./node_modules/@libp2p/crypto/dist/src/ciphers/aes-gcm.browser.js","webpack://waku-dogfooding/./node_modules/@libp2p/crypto/dist/src/keys/exporter.js","webpack://waku-dogfooding/./node_modules/@libp2p/crypto/dist/src/keys/keys.js","webpack://waku-dogfooding/./node_modules/@libp2p/crypto/dist/src/keys/ed25519-class.js","webpack://waku-dogfooding/./node_modules/@libp2p/crypto/dist/src/keys/rsa-browser.js","webpack://waku-dogfooding/./node_modules/@noble/hashes/esm/hmac.js","webpack://waku-dogfooding/./node_modules/pvutils/build/utils.es.js","webpack://waku-dogfooding/./node_modules/asn1js/build/index.es.js","webpack://waku-dogfooding/./node_modules/@libp2p/crypto/dist/src/random-bytes.js","webpack://waku-dogfooding/./node_modules/@libp2p/crypto/dist/src/keys/rsa-utils.js","webpack://waku-dogfooding/./node_modules/@noble/hashes/esm/pbkdf2.js","webpack://waku-dogfooding/./node_modules/@libp2p/crypto/dist/src/keys/rsa-class.js","webpack://waku-dogfooding/./node_modules/@noble/curves/esm/abstract/weierstrass.js","webpack://waku-dogfooding/./node_modules/@noble/curves/esm/_shortw_utils.js","webpack://waku-dogfooding/./node_modules/@noble/curves/esm/secp256k1.js","webpack://waku-dogfooding/./node_modules/@libp2p/crypto/dist/src/keys/secp256k1-browser.js","webpack://waku-dogfooding/./node_modules/@libp2p/crypto/dist/src/keys/secp256k1-class.js","webpack://waku-dogfooding/./node_modules/@libp2p/crypto/dist/src/keys/index.js","webpack://waku-dogfooding/./node_modules/@libp2p/interface/dist/src/index.js","webpack://waku-dogfooding/./node_modules/@libp2p/peer-id/dist/src/index.js","webpack://waku-dogfooding/./node_modules/race-signal/dist/src/index.js","webpack://waku-dogfooding/./node_modules/it-queueless-pushable/dist/src/index.js","webpack://waku-dogfooding/./node_modules/it-byte-stream/dist/src/errors.js","webpack://waku-dogfooding/./node_modules/it-byte-stream/dist/src/index.js","webpack://waku-dogfooding/./node_modules/it-length-prefixed-stream/dist/src/errors.js","webpack://waku-dogfooding/./node_modules/it-length-prefixed-stream/dist/src/index.js","webpack://waku-dogfooding/./node_modules/it-pair/dist/src/index.js","webpack://waku-dogfooding/./node_modules/@chainsafe/libp2p-noise/dist/src/constants.js","webpack://waku-dogfooding/./node_modules/@noble/ciphers/esm/_assert.js","webpack://waku-dogfooding/./node_modules/@noble/ciphers/esm/utils.js","webpack://waku-dogfooding/./node_modules/@noble/ciphers/esm/_arx.js","webpack://waku-dogfooding/./node_modules/@noble/ciphers/esm/_poly1305.js","webpack://waku-dogfooding/./node_modules/@noble/ciphers/esm/chacha.js","webpack://waku-dogfooding/./node_modules/@noble/hashes/esm/hkdf.js","webpack://waku-dogfooding/./node_modules/@chainsafe/libp2p-noise/dist/src/crypto/index.browser.js","webpack://waku-dogfooding/./node_modules/@chainsafe/libp2p-noise/dist/src/crypto/js.js","webpack://waku-dogfooding/./node_modules/@chainsafe/libp2p-noise/dist/src/encoder.js","webpack://waku-dogfooding/./node_modules/@chainsafe/libp2p-noise/dist/src/logger.js","webpack://waku-dogfooding/./node_modules/@chainsafe/libp2p-noise/dist/src/errors.js","webpack://waku-dogfooding/./node_modules/@chainsafe/libp2p-noise/dist/src/nonce.js","webpack://waku-dogfooding/./node_modules/@chainsafe/libp2p-noise/dist/src/protocol.js","webpack://waku-dogfooding/./node_modules/@chainsafe/libp2p-noise/dist/src/proto/payload.js","webpack://waku-dogfooding/./node_modules/@chainsafe/libp2p-noise/dist/src/utils.js","webpack://waku-dogfooding/./node_modules/@chainsafe/libp2p-noise/dist/src/noise.js","webpack://waku-dogfooding/./node_modules/@chainsafe/libp2p-noise/dist/src/crypto.js","webpack://waku-dogfooding/./node_modules/@chainsafe/libp2p-noise/dist/src/metrics.js","webpack://waku-dogfooding/./node_modules/@chainsafe/libp2p-noise/dist/src/performHandshake.js","webpack://waku-dogfooding/./node_modules/it-pair/dist/src/duplex.js","webpack://waku-dogfooding/./node_modules/@chainsafe/libp2p-noise/dist/src/streaming.js","webpack://waku-dogfooding/./node_modules/@chainsafe/libp2p-noise/dist/src/index.js","webpack://waku-dogfooding/./node_modules/@libp2p/interface/dist/src/peer-discovery/index.js","webpack://waku-dogfooding/./node_modules/@multiformats/mafmt/dist/src/index.js","webpack://waku-dogfooding/./node_modules/@libp2p/bootstrap/dist/src/index.js","webpack://waku-dogfooding/./node_modules/@libp2p/peer-record/dist/src/peer-record/consts.js","webpack://waku-dogfooding/./node_modules/@libp2p/peer-record/dist/src/peer-record/peer-record.js","webpack://waku-dogfooding/./node_modules/@libp2p/peer-record/dist/src/peer-record/index.js","webpack://waku-dogfooding/./node_modules/@libp2p/utils/dist/src/array-equals.js","webpack://waku-dogfooding/./node_modules/@libp2p/peer-record/dist/src/envelope/envelope.js","webpack://waku-dogfooding/./node_modules/@libp2p/peer-record/dist/src/envelope/index.js","webpack://waku-dogfooding/./node_modules/@libp2p/peer-record/dist/src/errors.js","webpack://waku-dogfooding/./node_modules/@multiformats/multiaddr-matcher/dist/src/index.js","webpack://waku-dogfooding/./node_modules/it-protobuf-stream/dist/src/index.js","webpack://waku-dogfooding/./node_modules/@libp2p/identify/dist/src/pb/message.js","webpack://waku-dogfooding/./node_modules/wherearewe/src/index.js","webpack://waku-dogfooding/./node_modules/@libp2p/identify/dist/src/utils.js","webpack://waku-dogfooding/./node_modules/@libp2p/identify/dist/src/consts.js","webpack://waku-dogfooding/./node_modules/@libp2p/identify/dist/src/identify.js","webpack://waku-dogfooding/./node_modules/@libp2p/identify/dist/src/index.js","webpack://waku-dogfooding/./node_modules/@libp2p/utils/dist/src/close-source.js","webpack://waku-dogfooding/./node_modules/get-iterator/dist/src/index.js","webpack://waku-dogfooding/./node_modules/@libp2p/utils/dist/src/is-promise.js","webpack://waku-dogfooding/./node_modules/delay/index.js","webpack://waku-dogfooding/./node_modules/@libp2p/utils/dist/src/rate-limiter.js","webpack://waku-dogfooding/./node_modules/@libp2p/mplex/dist/src/message-types.js","webpack://waku-dogfooding/./node_modules/@libp2p/mplex/dist/src/decode.js","webpack://waku-dogfooding/./node_modules/@libp2p/mplex/dist/src/encode.js","webpack://waku-dogfooding/./node_modules/@libp2p/utils/dist/src/abstract-stream.js","webpack://waku-dogfooding/./node_modules/@libp2p/mplex/dist/src/stream.js","webpack://waku-dogfooding/./node_modules/@libp2p/mplex/dist/src/mplex.js","webpack://waku-dogfooding/./node_modules/@libp2p/mplex/dist/src/index.js","webpack://waku-dogfooding/./node_modules/it-first/dist/src/index.js","webpack://waku-dogfooding/./node_modules/@libp2p/ping/dist/src/constants.js","webpack://waku-dogfooding/./node_modules/@libp2p/ping/dist/src/ping.js","webpack://waku-dogfooding/./node_modules/@libp2p/ping/dist/src/index.js","webpack://waku-dogfooding/./node_modules/@libp2p/interface/dist/src/transport/index.js","webpack://waku-dogfooding/./node_modules/@multiformats/multiaddr-to-uri/dist/src/index.js","webpack://waku-dogfooding/./node_modules/it-ws/dist/src/ready.js","webpack://waku-dogfooding/./node_modules/it-ws/dist/src/sink.js","webpack://waku-dogfooding/./node_modules/it-ws/dist/src/source.js","webpack://waku-dogfooding/./node_modules/it-ws/dist/src/web-socket.browser.js","webpack://waku-dogfooding/./node_modules/it-ws/dist/src/ws-url.js","webpack://waku-dogfooding/./node_modules/it-ws/dist/src/client.js","webpack://waku-dogfooding/./node_modules/it-ws/dist/src/duplex.js","webpack://waku-dogfooding/./node_modules/progress-events/dist/src/index.js","webpack://waku-dogfooding/./node_modules/@libp2p/websockets/dist/src/filters.js","webpack://waku-dogfooding/./node_modules/@libp2p/websockets/dist/src/constants.js","webpack://waku-dogfooding/./node_modules/@libp2p/websockets/dist/src/index.js","webpack://waku-dogfooding/./node_modules/@libp2p/websockets/dist/src/socket-to-conn.js","webpack://waku-dogfooding/./node_modules/@libp2p/websockets/dist/src/listener.browser.js","webpack://waku-dogfooding/./node_modules/@libp2p/interface/dist/src/content-routing/index.js","webpack://waku-dogfooding/./node_modules/@libp2p/interface/dist/src/peer-routing/index.js","webpack://waku-dogfooding/./node_modules/weald/node_modules/ms/dist/index.mjs","webpack://waku-dogfooding/./node_modules/weald/dist/src/browser.js","webpack://waku-dogfooding/./node_modules/weald/dist/src/common.js","webpack://waku-dogfooding/./node_modules/weald/dist/src/index.js","webpack://waku-dogfooding/./node_modules/@libp2p/logger/dist/src/index.js","webpack://waku-dogfooding/./node_modules/@libp2p/peer-collections/dist/src/util.js","webpack://waku-dogfooding/./node_modules/@libp2p/peer-collections/dist/src/set.js","webpack://waku-dogfooding/./node_modules/@libp2p/peer-id-factory/dist/src/index.js","webpack://waku-dogfooding/./node_modules/@libp2p/peer-collections/dist/src/map.js","webpack://waku-dogfooding/./node_modules/p-queue/dist/priority-queue.js","webpack://waku-dogfooding/./node_modules/p-queue/dist/lower-bound.js","webpack://waku-dogfooding/./node_modules/p-queue/dist/index.js","webpack://waku-dogfooding/./node_modules/observable-webworkers/dist/src/index.js","webpack://waku-dogfooding/./node_modules/mortice/dist/src/constants.js","webpack://waku-dogfooding/./node_modules/mortice/dist/src/browser.js","webpack://waku-dogfooding/./node_modules/mortice/dist/src/utils.js","webpack://waku-dogfooding/./node_modules/mortice/dist/src/index.js","webpack://waku-dogfooding/./node_modules/@libp2p/peer-store/dist/src/errors.js","webpack://waku-dogfooding/./node_modules/@libp2p/peer-store/dist/src/pb/peer.js","webpack://waku-dogfooding/./node_modules/@libp2p/peer-store/dist/src/utils/bytes-to-peer.js","webpack://waku-dogfooding/./node_modules/interface-datastore/dist/src/key.js","webpack://waku-dogfooding/./node_modules/@libp2p/peer-store/dist/src/utils/peer-id-to-datastore-key.js","webpack://waku-dogfooding/./node_modules/@libp2p/peer-store/dist/src/utils/dedupe-addresses.js","webpack://waku-dogfooding/./node_modules/@libp2p/peer-store/dist/src/utils/to-peer-pb.js","webpack://waku-dogfooding/./node_modules/@libp2p/peer-store/dist/src/store.js","webpack://waku-dogfooding/./node_modules/@libp2p/peer-store/dist/src/index.js","webpack://waku-dogfooding/./node_modules/it-drain/dist/src/index.js","webpack://waku-dogfooding/./node_modules/it-filter/dist/src/index.js","webpack://waku-dogfooding/./node_modules/it-peekable/dist/src/index.js","webpack://waku-dogfooding/./node_modules/it-sort/dist/src/index.js","webpack://waku-dogfooding/./node_modules/it-take/dist/src/index.js","webpack://waku-dogfooding/./node_modules/datastore-core/dist/src/base.js","webpack://waku-dogfooding/./node_modules/datastore-core/dist/src/memory.js","webpack://waku-dogfooding/./node_modules/datastore-core/dist/src/errors.js","webpack://waku-dogfooding/./node_modules/libp2p/dist/src/address-manager/index.js","webpack://waku-dogfooding/./node_modules/libp2p/dist/src/address-manager/utils.js","webpack://waku-dogfooding/./node_modules/libp2p/dist/src/components.js","webpack://waku-dogfooding/./node_modules/@libp2p/interface/dist/src/startable.js","webpack://waku-dogfooding/./node_modules/@libp2p/utils/dist/src/private-ip.js","webpack://waku-dogfooding/./node_modules/libp2p/dist/src/config/connection-gater.browser.js","webpack://waku-dogfooding/./node_modules/@libp2p/utils/dist/src/multiaddr/is-private.js","webpack://waku-dogfooding/./node_modules/@libp2p/utils/dist/src/address-sort.js","webpack://waku-dogfooding/./node_modules/@multiformats/dns/dist/src/utils/get-types.js","webpack://waku-dogfooding/./node_modules/@multiformats/dns/dist/src/utils/to-dns-response.js","webpack://waku-dogfooding/./node_modules/@multiformats/dns/dist/src/resolvers/dns-json-over-https.js","webpack://waku-dogfooding/./node_modules/@multiformats/dns/dist/src/index.js","webpack://waku-dogfooding/./node_modules/@multiformats/dns/dist/src/utils/cache.js","webpack://waku-dogfooding/./node_modules/@multiformats/dns/dist/src/dns.js","webpack://waku-dogfooding/./node_modules/@multiformats/dns/dist/src/resolvers/default.browser.js","webpack://waku-dogfooding/./node_modules/@multiformats/multiaddr/dist/src/resolvers/dnsaddr.js","webpack://waku-dogfooding/./node_modules/merge-options/index.mjs","webpack://waku-dogfooding/./node_modules/libp2p/dist/src/errors.js","webpack://waku-dogfooding/./node_modules/libp2p/dist/src/config.js","webpack://waku-dogfooding/./node_modules/libp2p/dist/src/get-peer.js","webpack://waku-dogfooding/./node_modules/race-event/dist/src/index.js","webpack://waku-dogfooding/./node_modules/@libp2p/utils/dist/src/queue/recipient.js","webpack://waku-dogfooding/./node_modules/@libp2p/utils/dist/src/queue/job.js","webpack://waku-dogfooding/./node_modules/@libp2p/utils/dist/src/queue/index.js","webpack://waku-dogfooding/./node_modules/@libp2p/utils/dist/src/peer-queue.js","webpack://waku-dogfooding/./node_modules/libp2p/dist/src/connection-manager/constants.browser.js","webpack://waku-dogfooding/./node_modules/libp2p/dist/src/connection-manager/constants.defaults.js","webpack://waku-dogfooding/./node_modules/libp2p/dist/src/connection-manager/auto-dial.js","webpack://waku-dogfooding/./node_modules/@libp2p/utils/dist/src/close.js","webpack://waku-dogfooding/./node_modules/libp2p/dist/src/connection-manager/connection-pruner.js","webpack://waku-dogfooding/./node_modules/@libp2p/utils/dist/src/priority-queue.js","webpack://waku-dogfooding/./node_modules/any-signal/dist/src/index.js","webpack://waku-dogfooding/./node_modules/libp2p/dist/src/connection-manager/dial-queue.js","webpack://waku-dogfooding/./node_modules/libp2p/dist/src/connection-manager/utils.js","webpack://waku-dogfooding/./node_modules/libp2p/dist/src/connection-manager/index.js","webpack://waku-dogfooding/./node_modules/@libp2p/interface/dist/src/peer-store/tags.js","webpack://waku-dogfooding/./node_modules/@libp2p/utils/dist/src/moving-average.js","webpack://waku-dogfooding/./node_modules/@libp2p/utils/dist/src/adaptive-timeout.js","webpack://waku-dogfooding/./node_modules/libp2p/dist/src/connection-monitor.js","webpack://waku-dogfooding/./node_modules/libp2p/dist/src/content-routing.js","webpack://waku-dogfooding/./node_modules/@libp2p/utils/dist/src/filters/fingerprint.js","webpack://waku-dogfooding/./node_modules/@libp2p/utils/dist/src/filters/utils.js","webpack://waku-dogfooding/./node_modules/@libp2p/utils/dist/src/filters/bucket.js","webpack://waku-dogfooding/./node_modules/@sindresorhus/fnv1a/index.js","webpack://waku-dogfooding/./node_modules/@libp2p/utils/dist/src/filters/hashes.js","webpack://waku-dogfooding/./node_modules/@libp2p/utils/dist/src/filters/cuckoo-filter.js","webpack://waku-dogfooding/./node_modules/@libp2p/utils/dist/src/filters/scalable-cuckoo-filter.js","webpack://waku-dogfooding/./node_modules/it-parallel/dist/src/index.js","webpack://waku-dogfooding/./node_modules/libp2p/dist/src/peer-routing.js","webpack://waku-dogfooding/./node_modules/libp2p/dist/src/random-walk.js","webpack://waku-dogfooding/./node_modules/libp2p/dist/src/registrar.js","webpack://waku-dogfooding/./node_modules/@libp2p/utils/dist/src/tracked-map.js","webpack://waku-dogfooding/./node_modules/libp2p/dist/src/transport-manager.js","webpack://waku-dogfooding/./node_modules/@libp2p/multistream-select/dist/src/constants.js","webpack://waku-dogfooding/./node_modules/@libp2p/multistream-select/dist/src/multistream.js","webpack://waku-dogfooding/./node_modules/@libp2p/multistream-select/dist/src/handle.js","webpack://waku-dogfooding/./node_modules/@libp2p/multistream-select/dist/src/select.js","webpack://waku-dogfooding/./node_modules/@libp2p/interface/dist/src/connection/index.js","webpack://waku-dogfooding/./node_modules/libp2p/dist/src/connection/index.js","webpack://waku-dogfooding/./node_modules/libp2p/dist/src/upgrader.js","webpack://waku-dogfooding/./node_modules/libp2p/dist/src/libp2p.js","webpack://waku-dogfooding/./node_modules/libp2p/dist/src/version.js","webpack://waku-dogfooding/./node_modules/@waku/discovery/dist/dns/constants.js","webpack://waku-dogfooding/./node_modules/@noble/secp256k1/lib/esm/index.js","webpack://waku-dogfooding/./node_modules/@waku/enr/dist/crypto.js","webpack://waku-dogfooding/./node_modules/@waku/enr/dist/constants.js","webpack://waku-dogfooding/./node_modules/@waku/enr/dist/get_multiaddr.js","webpack://waku-dogfooding/./node_modules/@waku/enr/dist/multiaddr_from_fields.js","webpack://waku-dogfooding/./node_modules/@waku/enr/dist/multiaddrs_codec.js","webpack://waku-dogfooding/./node_modules/@waku/enr/dist/waku2_codec.js","webpack://waku-dogfooding/./node_modules/@waku/enr/dist/raw_enr.js","webpack://waku-dogfooding/./node_modules/@waku/enr/dist/v4.js","webpack://waku-dogfooding/./node_modules/@waku/enr/dist/enr.js","webpack://waku-dogfooding/./node_modules/@waku/enr/dist/peer_id.js","webpack://waku-dogfooding/./node_modules/@ethersproject/logger/lib.esm/index.js","webpack://waku-dogfooding/./node_modules/@ethersproject/logger/lib.esm/_version.js","webpack://waku-dogfooding/./node_modules/@ethersproject/bytes/lib.esm/_version.js","webpack://waku-dogfooding/./node_modules/@ethersproject/bytes/lib.esm/index.js","webpack://waku-dogfooding/./node_modules/@ethersproject/rlp/lib.esm/_version.js","webpack://waku-dogfooding/./node_modules/@ethersproject/rlp/lib.esm/index.js","webpack://waku-dogfooding/./node_modules/@waku/enr/dist/decoder.js","webpack://waku-dogfooding/./node_modules/@leichtgewicht/ip-codec/index.mjs","webpack://waku-dogfooding/./node_modules/@leichtgewicht/dns-packet/types.mjs","webpack://waku-dogfooding/./node_modules/@leichtgewicht/dns-packet/rcodes.mjs","webpack://waku-dogfooding/./node_modules/@leichtgewicht/dns-packet/opcodes.mjs","webpack://waku-dogfooding/./node_modules/@leichtgewicht/dns-packet/classes.mjs","webpack://waku-dogfooding/./node_modules/@leichtgewicht/dns-packet/optioncodes.mjs","webpack://waku-dogfooding/./node_modules/utf8-codec/index.mjs","webpack://waku-dogfooding/./node_modules/@leichtgewicht/dns-packet/buffer_utils.mjs","webpack://waku-dogfooding/./node_modules/@leichtgewicht/dns-packet/index.mjs","webpack://waku-dogfooding/./node_modules/@leichtgewicht/base64-codec/index.mjs","webpack://waku-dogfooding/./node_modules/dns-query/common.mjs","webpack://waku-dogfooding/./node_modules/dns-query/lib.browser.mjs","webpack://waku-dogfooding/./node_modules/dns-query/index.mjs","webpack://waku-dogfooding/./node_modules/dns-query/resolvers.mjs","webpack://waku-dogfooding/./node_modules/@waku/discovery/dist/dns/dns_over_https.js","webpack://waku-dogfooding/./node_modules/@waku/discovery/dist/dns/enrtree.js","webpack://waku-dogfooding/./node_modules/@waku/discovery/dist/dns/fetch_nodes.js","webpack://waku-dogfooding/./node_modules/@waku/discovery/dist/dns/dns.js","webpack://waku-dogfooding/./node_modules/@waku/discovery/dist/dns/dns_discovery.js","webpack://waku-dogfooding/./node_modules/@waku/discovery/dist/peer-exchange/rpc.js","webpack://waku-dogfooding/./node_modules/@waku/discovery/dist/peer-exchange/waku_peer_exchange.js","webpack://waku-dogfooding/./node_modules/@waku/discovery/dist/peer-exchange/waku_peer_exchange_discovery.js","webpack://waku-dogfooding/./node_modules/@waku/discovery/dist/local-peer-cache/index.js","webpack://waku-dogfooding/./node_modules/@waku/utils/dist/common/index.js","webpack://waku-dogfooding/./node_modules/@waku/sdk/dist/create/libp2p.js","webpack://waku-dogfooding/./node_modules/libp2p/dist/src/index.js","webpack://waku-dogfooding/./node_modules/@waku/sdk/dist/create/create.js","webpack://waku-dogfooding/./node_modules/@waku/utils/dist/common/sharding/type_guards.js","webpack://waku-dogfooding/./node_modules/@waku/sdk/dist/create/discovery.js","webpack://waku-dogfooding/./src/telemetry_client.ts","webpack://waku-dogfooding/./src/util.ts","webpack://waku-dogfooding/./src/index.ts"],"sourcesContent":["\"use strict\";\r\nmodule.exports = asPromise;\r\n\r\n/**\r\n * Callback as used by {@link util.asPromise}.\r\n * @typedef asPromiseCallback\r\n * @type {function}\r\n * @param {Error|null} error Error, if any\r\n * @param {...*} params Additional arguments\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Returns a promise from a node-style callback function.\r\n * @memberof util\r\n * @param {asPromiseCallback} fn Function to call\r\n * @param {*} ctx Function context\r\n * @param {...*} params Function arguments\r\n * @returns {Promise<*>} Promisified function\r\n */\r\nfunction asPromise(fn, ctx/*, varargs */) {\r\n    var params  = new Array(arguments.length - 1),\r\n        offset  = 0,\r\n        index   = 2,\r\n        pending = true;\r\n    while (index < arguments.length)\r\n        params[offset++] = arguments[index++];\r\n    return new Promise(function executor(resolve, reject) {\r\n        params[offset] = function callback(err/*, varargs */) {\r\n            if (pending) {\r\n                pending = false;\r\n                if (err)\r\n                    reject(err);\r\n                else {\r\n                    var params = new Array(arguments.length - 1),\r\n                        offset = 0;\r\n                    while (offset < params.length)\r\n                        params[offset++] = arguments[offset];\r\n                    resolve.apply(null, params);\r\n                }\r\n            }\r\n        };\r\n        try {\r\n            fn.apply(ctx || null, params);\r\n        } catch (err) {\r\n            if (pending) {\r\n                pending = false;\r\n                reject(err);\r\n            }\r\n        }\r\n    });\r\n}\r\n","\"use strict\";\r\n\r\n/**\r\n * A minimal base64 implementation for number arrays.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar base64 = exports;\r\n\r\n/**\r\n * Calculates the byte length of a base64 encoded string.\r\n * @param {string} string Base64 encoded string\r\n * @returns {number} Byte length\r\n */\r\nbase64.length = function length(string) {\r\n    var p = string.length;\r\n    if (!p)\r\n        return 0;\r\n    var n = 0;\r\n    while (--p % 4 > 1 && string.charAt(p) === \"=\")\r\n        ++n;\r\n    return Math.ceil(string.length * 3) / 4 - n;\r\n};\r\n\r\n// Base64 encoding table\r\nvar b64 = new Array(64);\r\n\r\n// Base64 decoding table\r\nvar s64 = new Array(123);\r\n\r\n// 65..90, 97..122, 48..57, 43, 47\r\nfor (var i = 0; i < 64;)\r\n    s64[b64[i] = i < 26 ? i + 65 : i < 52 ? i + 71 : i < 62 ? i - 4 : i - 59 | 43] = i++;\r\n\r\n/**\r\n * Encodes a buffer to a base64 encoded string.\r\n * @param {Uint8Array} buffer Source buffer\r\n * @param {number} start Source start\r\n * @param {number} end Source end\r\n * @returns {string} Base64 encoded string\r\n */\r\nbase64.encode = function encode(buffer, start, end) {\r\n    var parts = null,\r\n        chunk = [];\r\n    var i = 0, // output index\r\n        j = 0, // goto index\r\n        t;     // temporary\r\n    while (start < end) {\r\n        var b = buffer[start++];\r\n        switch (j) {\r\n            case 0:\r\n                chunk[i++] = b64[b >> 2];\r\n                t = (b & 3) << 4;\r\n                j = 1;\r\n                break;\r\n            case 1:\r\n                chunk[i++] = b64[t | b >> 4];\r\n                t = (b & 15) << 2;\r\n                j = 2;\r\n                break;\r\n            case 2:\r\n                chunk[i++] = b64[t | b >> 6];\r\n                chunk[i++] = b64[b & 63];\r\n                j = 0;\r\n                break;\r\n        }\r\n        if (i > 8191) {\r\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\r\n            i = 0;\r\n        }\r\n    }\r\n    if (j) {\r\n        chunk[i++] = b64[t];\r\n        chunk[i++] = 61;\r\n        if (j === 1)\r\n            chunk[i++] = 61;\r\n    }\r\n    if (parts) {\r\n        if (i)\r\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\r\n        return parts.join(\"\");\r\n    }\r\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\r\n};\r\n\r\nvar invalidEncoding = \"invalid encoding\";\r\n\r\n/**\r\n * Decodes a base64 encoded string to a buffer.\r\n * @param {string} string Source string\r\n * @param {Uint8Array} buffer Destination buffer\r\n * @param {number} offset Destination offset\r\n * @returns {number} Number of bytes written\r\n * @throws {Error} If encoding is invalid\r\n */\r\nbase64.decode = function decode(string, buffer, offset) {\r\n    var start = offset;\r\n    var j = 0, // goto index\r\n        t;     // temporary\r\n    for (var i = 0; i < string.length;) {\r\n        var c = string.charCodeAt(i++);\r\n        if (c === 61 && j > 1)\r\n            break;\r\n        if ((c = s64[c]) === undefined)\r\n            throw Error(invalidEncoding);\r\n        switch (j) {\r\n            case 0:\r\n                t = c;\r\n                j = 1;\r\n                break;\r\n            case 1:\r\n                buffer[offset++] = t << 2 | (c & 48) >> 4;\r\n                t = c;\r\n                j = 2;\r\n                break;\r\n            case 2:\r\n                buffer[offset++] = (t & 15) << 4 | (c & 60) >> 2;\r\n                t = c;\r\n                j = 3;\r\n                break;\r\n            case 3:\r\n                buffer[offset++] = (t & 3) << 6 | c;\r\n                j = 0;\r\n                break;\r\n        }\r\n    }\r\n    if (j === 1)\r\n        throw Error(invalidEncoding);\r\n    return offset - start;\r\n};\r\n\r\n/**\r\n * Tests if the specified string appears to be base64 encoded.\r\n * @param {string} string String to test\r\n * @returns {boolean} `true` if probably base64 encoded, otherwise false\r\n */\r\nbase64.test = function test(string) {\r\n    return /^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/.test(string);\r\n};\r\n","\"use strict\";\r\nmodule.exports = codegen;\r\n\r\n/**\r\n * Begins generating a function.\r\n * @memberof util\r\n * @param {string[]} functionParams Function parameter names\r\n * @param {string} [functionName] Function name if not anonymous\r\n * @returns {Codegen} Appender that appends code to the function's body\r\n */\r\nfunction codegen(functionParams, functionName) {\r\n\r\n    /* istanbul ignore if */\r\n    if (typeof functionParams === \"string\") {\r\n        functionName = functionParams;\r\n        functionParams = undefined;\r\n    }\r\n\r\n    var body = [];\r\n\r\n    /**\r\n     * Appends code to the function's body or finishes generation.\r\n     * @typedef Codegen\r\n     * @type {function}\r\n     * @param {string|Object.<string,*>} [formatStringOrScope] Format string or, to finish the function, an object of additional scope variables, if any\r\n     * @param {...*} [formatParams] Format parameters\r\n     * @returns {Codegen|Function} Itself or the generated function if finished\r\n     * @throws {Error} If format parameter counts do not match\r\n     */\r\n\r\n    function Codegen(formatStringOrScope) {\r\n        // note that explicit array handling below makes this ~50% faster\r\n\r\n        // finish the function\r\n        if (typeof formatStringOrScope !== \"string\") {\r\n            var source = toString();\r\n            if (codegen.verbose)\r\n                console.log(\"codegen: \" + source); // eslint-disable-line no-console\r\n            source = \"return \" + source;\r\n            if (formatStringOrScope) {\r\n                var scopeKeys   = Object.keys(formatStringOrScope),\r\n                    scopeParams = new Array(scopeKeys.length + 1),\r\n                    scopeValues = new Array(scopeKeys.length),\r\n                    scopeOffset = 0;\r\n                while (scopeOffset < scopeKeys.length) {\r\n                    scopeParams[scopeOffset] = scopeKeys[scopeOffset];\r\n                    scopeValues[scopeOffset] = formatStringOrScope[scopeKeys[scopeOffset++]];\r\n                }\r\n                scopeParams[scopeOffset] = source;\r\n                return Function.apply(null, scopeParams).apply(null, scopeValues); // eslint-disable-line no-new-func\r\n            }\r\n            return Function(source)(); // eslint-disable-line no-new-func\r\n        }\r\n\r\n        // otherwise append to body\r\n        var formatParams = new Array(arguments.length - 1),\r\n            formatOffset = 0;\r\n        while (formatOffset < formatParams.length)\r\n            formatParams[formatOffset] = arguments[++formatOffset];\r\n        formatOffset = 0;\r\n        formatStringOrScope = formatStringOrScope.replace(/%([%dfijs])/g, function replace($0, $1) {\r\n            var value = formatParams[formatOffset++];\r\n            switch ($1) {\r\n                case \"d\": case \"f\": return String(Number(value));\r\n                case \"i\": return String(Math.floor(value));\r\n                case \"j\": return JSON.stringify(value);\r\n                case \"s\": return String(value);\r\n            }\r\n            return \"%\";\r\n        });\r\n        if (formatOffset !== formatParams.length)\r\n            throw Error(\"parameter count mismatch\");\r\n        body.push(formatStringOrScope);\r\n        return Codegen;\r\n    }\r\n\r\n    function toString(functionNameOverride) {\r\n        return \"function \" + (functionNameOverride || functionName || \"\") + \"(\" + (functionParams && functionParams.join(\",\") || \"\") + \"){\\n  \" + body.join(\"\\n  \") + \"\\n}\";\r\n    }\r\n\r\n    Codegen.toString = toString;\r\n    return Codegen;\r\n}\r\n\r\n/**\r\n * Begins generating a function.\r\n * @memberof util\r\n * @function codegen\r\n * @param {string} [functionName] Function name if not anonymous\r\n * @returns {Codegen} Appender that appends code to the function's body\r\n * @variation 2\r\n */\r\n\r\n/**\r\n * When set to `true`, codegen will log generated code to console. Useful for debugging.\r\n * @name util.codegen.verbose\r\n * @type {boolean}\r\n */\r\ncodegen.verbose = false;\r\n","\"use strict\";\r\nmodule.exports = EventEmitter;\r\n\r\n/**\r\n * Constructs a new event emitter instance.\r\n * @classdesc A minimal event emitter.\r\n * @memberof util\r\n * @constructor\r\n */\r\nfunction EventEmitter() {\r\n\r\n    /**\r\n     * Registered listeners.\r\n     * @type {Object.<string,*>}\r\n     * @private\r\n     */\r\n    this._listeners = {};\r\n}\r\n\r\n/**\r\n * Registers an event listener.\r\n * @param {string} evt Event name\r\n * @param {function} fn Listener\r\n * @param {*} [ctx] Listener context\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.on = function on(evt, fn, ctx) {\r\n    (this._listeners[evt] || (this._listeners[evt] = [])).push({\r\n        fn  : fn,\r\n        ctx : ctx || this\r\n    });\r\n    return this;\r\n};\r\n\r\n/**\r\n * Removes an event listener or any matching listeners if arguments are omitted.\r\n * @param {string} [evt] Event name. Removes all listeners if omitted.\r\n * @param {function} [fn] Listener to remove. Removes all listeners of `evt` if omitted.\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.off = function off(evt, fn) {\r\n    if (evt === undefined)\r\n        this._listeners = {};\r\n    else {\r\n        if (fn === undefined)\r\n            this._listeners[evt] = [];\r\n        else {\r\n            var listeners = this._listeners[evt];\r\n            for (var i = 0; i < listeners.length;)\r\n                if (listeners[i].fn === fn)\r\n                    listeners.splice(i, 1);\r\n                else\r\n                    ++i;\r\n        }\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Emits an event by calling its listeners with the specified arguments.\r\n * @param {string} evt Event name\r\n * @param {...*} args Arguments\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.emit = function emit(evt) {\r\n    var listeners = this._listeners[evt];\r\n    if (listeners) {\r\n        var args = [],\r\n            i = 1;\r\n        for (; i < arguments.length;)\r\n            args.push(arguments[i++]);\r\n        for (i = 0; i < listeners.length;)\r\n            listeners[i].fn.apply(listeners[i++].ctx, args);\r\n    }\r\n    return this;\r\n};\r\n","\"use strict\";\r\nmodule.exports = fetch;\r\n\r\nvar asPromise = require(\"@protobufjs/aspromise\"),\r\n    inquire   = require(\"@protobufjs/inquire\");\r\n\r\nvar fs = inquire(\"fs\");\r\n\r\n/**\r\n * Node-style callback as used by {@link util.fetch}.\r\n * @typedef FetchCallback\r\n * @type {function}\r\n * @param {?Error} error Error, if any, otherwise `null`\r\n * @param {string} [contents] File contents, if there hasn't been an error\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Options as used by {@link util.fetch}.\r\n * @typedef FetchOptions\r\n * @type {Object}\r\n * @property {boolean} [binary=false] Whether expecting a binary response\r\n * @property {boolean} [xhr=false] If `true`, forces the use of XMLHttpRequest\r\n */\r\n\r\n/**\r\n * Fetches the contents of a file.\r\n * @memberof util\r\n * @param {string} filename File path or url\r\n * @param {FetchOptions} options Fetch options\r\n * @param {FetchCallback} callback Callback function\r\n * @returns {undefined}\r\n */\r\nfunction fetch(filename, options, callback) {\r\n    if (typeof options === \"function\") {\r\n        callback = options;\r\n        options = {};\r\n    } else if (!options)\r\n        options = {};\r\n\r\n    if (!callback)\r\n        return asPromise(fetch, this, filename, options); // eslint-disable-line no-invalid-this\r\n\r\n    // if a node-like filesystem is present, try it first but fall back to XHR if nothing is found.\r\n    if (!options.xhr && fs && fs.readFile)\r\n        return fs.readFile(filename, function fetchReadFileCallback(err, contents) {\r\n            return err && typeof XMLHttpRequest !== \"undefined\"\r\n                ? fetch.xhr(filename, options, callback)\r\n                : err\r\n                ? callback(err)\r\n                : callback(null, options.binary ? contents : contents.toString(\"utf8\"));\r\n        });\r\n\r\n    // use the XHR version otherwise.\r\n    return fetch.xhr(filename, options, callback);\r\n}\r\n\r\n/**\r\n * Fetches the contents of a file.\r\n * @name util.fetch\r\n * @function\r\n * @param {string} path File path or url\r\n * @param {FetchCallback} callback Callback function\r\n * @returns {undefined}\r\n * @variation 2\r\n */\r\n\r\n/**\r\n * Fetches the contents of a file.\r\n * @name util.fetch\r\n * @function\r\n * @param {string} path File path or url\r\n * @param {FetchOptions} [options] Fetch options\r\n * @returns {Promise<string|Uint8Array>} Promise\r\n * @variation 3\r\n */\r\n\r\n/**/\r\nfetch.xhr = function fetch_xhr(filename, options, callback) {\r\n    var xhr = new XMLHttpRequest();\r\n    xhr.onreadystatechange /* works everywhere */ = function fetchOnReadyStateChange() {\r\n\r\n        if (xhr.readyState !== 4)\r\n            return undefined;\r\n\r\n        // local cors security errors return status 0 / empty string, too. afaik this cannot be\r\n        // reliably distinguished from an actually empty file for security reasons. feel free\r\n        // to send a pull request if you are aware of a solution.\r\n        if (xhr.status !== 0 && xhr.status !== 200)\r\n            return callback(Error(\"status \" + xhr.status));\r\n\r\n        // if binary data is expected, make sure that some sort of array is returned, even if\r\n        // ArrayBuffers are not supported. the binary string fallback, however, is unsafe.\r\n        if (options.binary) {\r\n            var buffer = xhr.response;\r\n            if (!buffer) {\r\n                buffer = [];\r\n                for (var i = 0; i < xhr.responseText.length; ++i)\r\n                    buffer.push(xhr.responseText.charCodeAt(i) & 255);\r\n            }\r\n            return callback(null, typeof Uint8Array !== \"undefined\" ? new Uint8Array(buffer) : buffer);\r\n        }\r\n        return callback(null, xhr.responseText);\r\n    };\r\n\r\n    if (options.binary) {\r\n        // ref: https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/Sending_and_Receiving_Binary_Data#Receiving_binary_data_in_older_browsers\r\n        if (\"overrideMimeType\" in xhr)\r\n            xhr.overrideMimeType(\"text/plain; charset=x-user-defined\");\r\n        xhr.responseType = \"arraybuffer\";\r\n    }\r\n\r\n    xhr.open(\"GET\", filename);\r\n    xhr.send();\r\n};\r\n","\"use strict\";\r\n\r\nmodule.exports = factory(factory);\r\n\r\n/**\r\n * Reads / writes floats / doubles from / to buffers.\r\n * @name util.float\r\n * @namespace\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using little endian byte order.\r\n * @name util.float.writeFloatLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using big endian byte order.\r\n * @name util.float.writeFloatBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using little endian byte order.\r\n * @name util.float.readFloatLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using big endian byte order.\r\n * @name util.float.readFloatBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using little endian byte order.\r\n * @name util.float.writeDoubleLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using big endian byte order.\r\n * @name util.float.writeDoubleBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using little endian byte order.\r\n * @name util.float.readDoubleLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using big endian byte order.\r\n * @name util.float.readDoubleBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n// Factory function for the purpose of node-based testing in modified global environments\r\nfunction factory(exports) {\r\n\r\n    // float: typed array\r\n    if (typeof Float32Array !== \"undefined\") (function() {\r\n\r\n        var f32 = new Float32Array([ -0 ]),\r\n            f8b = new Uint8Array(f32.buffer),\r\n            le  = f8b[3] === 128;\r\n\r\n        function writeFloat_f32_cpy(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n        }\r\n\r\n        function writeFloat_f32_rev(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[3];\r\n            buf[pos + 1] = f8b[2];\r\n            buf[pos + 2] = f8b[1];\r\n            buf[pos + 3] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeFloatLE = le ? writeFloat_f32_cpy : writeFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeFloatBE = le ? writeFloat_f32_rev : writeFloat_f32_cpy;\r\n\r\n        function readFloat_f32_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        function readFloat_f32_rev(buf, pos) {\r\n            f8b[3] = buf[pos    ];\r\n            f8b[2] = buf[pos + 1];\r\n            f8b[1] = buf[pos + 2];\r\n            f8b[0] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readFloatLE = le ? readFloat_f32_cpy : readFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.readFloatBE = le ? readFloat_f32_rev : readFloat_f32_cpy;\r\n\r\n    // float: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeFloat_ieee754(writeUint, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0)\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos);\r\n            else if (isNaN(val))\r\n                writeUint(2143289344, buf, pos);\r\n            else if (val > 3.4028234663852886e+38) // +-Infinity\r\n                writeUint((sign << 31 | 2139095040) >>> 0, buf, pos);\r\n            else if (val < 1.1754943508222875e-38) // denormal\r\n                writeUint((sign << 31 | Math.round(val / 1.401298464324817e-45)) >>> 0, buf, pos);\r\n            else {\r\n                var exponent = Math.floor(Math.log(val) / Math.LN2),\r\n                    mantissa = Math.round(val * Math.pow(2, -exponent) * 8388608) & 8388607;\r\n                writeUint((sign << 31 | exponent + 127 << 23 | mantissa) >>> 0, buf, pos);\r\n            }\r\n        }\r\n\r\n        exports.writeFloatLE = writeFloat_ieee754.bind(null, writeUintLE);\r\n        exports.writeFloatBE = writeFloat_ieee754.bind(null, writeUintBE);\r\n\r\n        function readFloat_ieee754(readUint, buf, pos) {\r\n            var uint = readUint(buf, pos),\r\n                sign = (uint >> 31) * 2 + 1,\r\n                exponent = uint >>> 23 & 255,\r\n                mantissa = uint & 8388607;\r\n            return exponent === 255\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 1.401298464324817e-45 * mantissa\r\n                : sign * Math.pow(2, exponent - 150) * (mantissa + 8388608);\r\n        }\r\n\r\n        exports.readFloatLE = readFloat_ieee754.bind(null, readUintLE);\r\n        exports.readFloatBE = readFloat_ieee754.bind(null, readUintBE);\r\n\r\n    })();\r\n\r\n    // double: typed array\r\n    if (typeof Float64Array !== \"undefined\") (function() {\r\n\r\n        var f64 = new Float64Array([-0]),\r\n            f8b = new Uint8Array(f64.buffer),\r\n            le  = f8b[7] === 128;\r\n\r\n        function writeDouble_f64_cpy(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n            buf[pos + 4] = f8b[4];\r\n            buf[pos + 5] = f8b[5];\r\n            buf[pos + 6] = f8b[6];\r\n            buf[pos + 7] = f8b[7];\r\n        }\r\n\r\n        function writeDouble_f64_rev(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[7];\r\n            buf[pos + 1] = f8b[6];\r\n            buf[pos + 2] = f8b[5];\r\n            buf[pos + 3] = f8b[4];\r\n            buf[pos + 4] = f8b[3];\r\n            buf[pos + 5] = f8b[2];\r\n            buf[pos + 6] = f8b[1];\r\n            buf[pos + 7] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleLE = le ? writeDouble_f64_cpy : writeDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleBE = le ? writeDouble_f64_rev : writeDouble_f64_cpy;\r\n\r\n        function readDouble_f64_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            f8b[4] = buf[pos + 4];\r\n            f8b[5] = buf[pos + 5];\r\n            f8b[6] = buf[pos + 6];\r\n            f8b[7] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        function readDouble_f64_rev(buf, pos) {\r\n            f8b[7] = buf[pos    ];\r\n            f8b[6] = buf[pos + 1];\r\n            f8b[5] = buf[pos + 2];\r\n            f8b[4] = buf[pos + 3];\r\n            f8b[3] = buf[pos + 4];\r\n            f8b[2] = buf[pos + 5];\r\n            f8b[1] = buf[pos + 6];\r\n            f8b[0] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readDoubleLE = le ? readDouble_f64_cpy : readDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.readDoubleBE = le ? readDouble_f64_rev : readDouble_f64_cpy;\r\n\r\n    // double: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeDouble_ieee754(writeUint, off0, off1, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos + off1);\r\n            } else if (isNaN(val)) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(2146959360, buf, pos + off1);\r\n            } else if (val > 1.7976931348623157e+308) { // +-Infinity\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint((sign << 31 | 2146435072) >>> 0, buf, pos + off1);\r\n            } else {\r\n                var mantissa;\r\n                if (val < 2.2250738585072014e-308) { // denormal\r\n                    mantissa = val / 5e-324;\r\n                    writeUint(mantissa >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | mantissa / 4294967296) >>> 0, buf, pos + off1);\r\n                } else {\r\n                    var exponent = Math.floor(Math.log(val) / Math.LN2);\r\n                    if (exponent === 1024)\r\n                        exponent = 1023;\r\n                    mantissa = val * Math.pow(2, -exponent);\r\n                    writeUint(mantissa * 4503599627370496 >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | exponent + 1023 << 20 | mantissa * 1048576 & 1048575) >>> 0, buf, pos + off1);\r\n                }\r\n            }\r\n        }\r\n\r\n        exports.writeDoubleLE = writeDouble_ieee754.bind(null, writeUintLE, 0, 4);\r\n        exports.writeDoubleBE = writeDouble_ieee754.bind(null, writeUintBE, 4, 0);\r\n\r\n        function readDouble_ieee754(readUint, off0, off1, buf, pos) {\r\n            var lo = readUint(buf, pos + off0),\r\n                hi = readUint(buf, pos + off1);\r\n            var sign = (hi >> 31) * 2 + 1,\r\n                exponent = hi >>> 20 & 2047,\r\n                mantissa = 4294967296 * (hi & 1048575) + lo;\r\n            return exponent === 2047\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 5e-324 * mantissa\r\n                : sign * Math.pow(2, exponent - 1075) * (mantissa + 4503599627370496);\r\n        }\r\n\r\n        exports.readDoubleLE = readDouble_ieee754.bind(null, readUintLE, 0, 4);\r\n        exports.readDoubleBE = readDouble_ieee754.bind(null, readUintBE, 4, 0);\r\n\r\n    })();\r\n\r\n    return exports;\r\n}\r\n\r\n// uint helpers\r\n\r\nfunction writeUintLE(val, buf, pos) {\r\n    buf[pos    ] =  val        & 255;\r\n    buf[pos + 1] =  val >>> 8  & 255;\r\n    buf[pos + 2] =  val >>> 16 & 255;\r\n    buf[pos + 3] =  val >>> 24;\r\n}\r\n\r\nfunction writeUintBE(val, buf, pos) {\r\n    buf[pos    ] =  val >>> 24;\r\n    buf[pos + 1] =  val >>> 16 & 255;\r\n    buf[pos + 2] =  val >>> 8  & 255;\r\n    buf[pos + 3] =  val        & 255;\r\n}\r\n\r\nfunction readUintLE(buf, pos) {\r\n    return (buf[pos    ]\r\n          | buf[pos + 1] << 8\r\n          | buf[pos + 2] << 16\r\n          | buf[pos + 3] << 24) >>> 0;\r\n}\r\n\r\nfunction readUintBE(buf, pos) {\r\n    return (buf[pos    ] << 24\r\n          | buf[pos + 1] << 16\r\n          | buf[pos + 2] << 8\r\n          | buf[pos + 3]) >>> 0;\r\n}\r\n","\"use strict\";\r\nmodule.exports = inquire;\r\n\r\n/**\r\n * Requires a module only if available.\r\n * @memberof util\r\n * @param {string} moduleName Module to require\r\n * @returns {?Object} Required module if available and not empty, otherwise `null`\r\n */\r\nfunction inquire(moduleName) {\r\n    try {\r\n        var mod = eval(\"quire\".replace(/^/,\"re\"))(moduleName); // eslint-disable-line no-eval\r\n        if (mod && (mod.length || Object.keys(mod).length))\r\n            return mod;\r\n    } catch (e) {} // eslint-disable-line no-empty\r\n    return null;\r\n}\r\n","\"use strict\";\r\n\r\n/**\r\n * A minimal path module to resolve Unix, Windows and URL paths alike.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar path = exports;\r\n\r\nvar isAbsolute =\r\n/**\r\n * Tests if the specified path is absolute.\r\n * @param {string} path Path to test\r\n * @returns {boolean} `true` if path is absolute\r\n */\r\npath.isAbsolute = function isAbsolute(path) {\r\n    return /^(?:\\/|\\w+:)/.test(path);\r\n};\r\n\r\nvar normalize =\r\n/**\r\n * Normalizes the specified path.\r\n * @param {string} path Path to normalize\r\n * @returns {string} Normalized path\r\n */\r\npath.normalize = function normalize(path) {\r\n    path = path.replace(/\\\\/g, \"/\")\r\n               .replace(/\\/{2,}/g, \"/\");\r\n    var parts    = path.split(\"/\"),\r\n        absolute = isAbsolute(path),\r\n        prefix   = \"\";\r\n    if (absolute)\r\n        prefix = parts.shift() + \"/\";\r\n    for (var i = 0; i < parts.length;) {\r\n        if (parts[i] === \"..\") {\r\n            if (i > 0 && parts[i - 1] !== \"..\")\r\n                parts.splice(--i, 2);\r\n            else if (absolute)\r\n                parts.splice(i, 1);\r\n            else\r\n                ++i;\r\n        } else if (parts[i] === \".\")\r\n            parts.splice(i, 1);\r\n        else\r\n            ++i;\r\n    }\r\n    return prefix + parts.join(\"/\");\r\n};\r\n\r\n/**\r\n * Resolves the specified include path against the specified origin path.\r\n * @param {string} originPath Path to the origin file\r\n * @param {string} includePath Include path relative to origin path\r\n * @param {boolean} [alreadyNormalized=false] `true` if both paths are already known to be normalized\r\n * @returns {string} Path to the include file\r\n */\r\npath.resolve = function resolve(originPath, includePath, alreadyNormalized) {\r\n    if (!alreadyNormalized)\r\n        includePath = normalize(includePath);\r\n    if (isAbsolute(includePath))\r\n        return includePath;\r\n    if (!alreadyNormalized)\r\n        originPath = normalize(originPath);\r\n    return (originPath = originPath.replace(/(?:\\/|^)[^/]+$/, \"\")).length ? normalize(originPath + \"/\" + includePath) : includePath;\r\n};\r\n","\"use strict\";\r\nmodule.exports = pool;\r\n\r\n/**\r\n * An allocator as used by {@link util.pool}.\r\n * @typedef PoolAllocator\r\n * @type {function}\r\n * @param {number} size Buffer size\r\n * @returns {Uint8Array} Buffer\r\n */\r\n\r\n/**\r\n * A slicer as used by {@link util.pool}.\r\n * @typedef PoolSlicer\r\n * @type {function}\r\n * @param {number} start Start offset\r\n * @param {number} end End offset\r\n * @returns {Uint8Array} Buffer slice\r\n * @this {Uint8Array}\r\n */\r\n\r\n/**\r\n * A general purpose buffer pool.\r\n * @memberof util\r\n * @function\r\n * @param {PoolAllocator} alloc Allocator\r\n * @param {PoolSlicer} slice Slicer\r\n * @param {number} [size=8192] Slab size\r\n * @returns {PoolAllocator} Pooled allocator\r\n */\r\nfunction pool(alloc, slice, size) {\r\n    var SIZE   = size || 8192;\r\n    var MAX    = SIZE >>> 1;\r\n    var slab   = null;\r\n    var offset = SIZE;\r\n    return function pool_alloc(size) {\r\n        if (size < 1 || size > MAX)\r\n            return alloc(size);\r\n        if (offset + size > SIZE) {\r\n            slab = alloc(SIZE);\r\n            offset = 0;\r\n        }\r\n        var buf = slice.call(slab, offset, offset += size);\r\n        if (offset & 7) // align to 32 bit\r\n            offset = (offset | 7) + 1;\r\n        return buf;\r\n    };\r\n}\r\n","\"use strict\";\r\n\r\n/**\r\n * A minimal UTF8 implementation for number arrays.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar utf8 = exports;\r\n\r\n/**\r\n * Calculates the UTF8 byte length of a string.\r\n * @param {string} string String\r\n * @returns {number} Byte length\r\n */\r\nutf8.length = function utf8_length(string) {\r\n    var len = 0,\r\n        c = 0;\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c = string.charCodeAt(i);\r\n        if (c < 128)\r\n            len += 1;\r\n        else if (c < 2048)\r\n            len += 2;\r\n        else if ((c & 0xFC00) === 0xD800 && (string.charCodeAt(i + 1) & 0xFC00) === 0xDC00) {\r\n            ++i;\r\n            len += 4;\r\n        } else\r\n            len += 3;\r\n    }\r\n    return len;\r\n};\r\n\r\n/**\r\n * Reads UTF8 bytes as a string.\r\n * @param {Uint8Array} buffer Source buffer\r\n * @param {number} start Source start\r\n * @param {number} end Source end\r\n * @returns {string} String read\r\n */\r\nutf8.read = function utf8_read(buffer, start, end) {\r\n    var len = end - start;\r\n    if (len < 1)\r\n        return \"\";\r\n    var parts = null,\r\n        chunk = [],\r\n        i = 0, // char offset\r\n        t;     // temporary\r\n    while (start < end) {\r\n        t = buffer[start++];\r\n        if (t < 128)\r\n            chunk[i++] = t;\r\n        else if (t > 191 && t < 224)\r\n            chunk[i++] = (t & 31) << 6 | buffer[start++] & 63;\r\n        else if (t > 239 && t < 365) {\r\n            t = ((t & 7) << 18 | (buffer[start++] & 63) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63) - 0x10000;\r\n            chunk[i++] = 0xD800 + (t >> 10);\r\n            chunk[i++] = 0xDC00 + (t & 1023);\r\n        } else\r\n            chunk[i++] = (t & 15) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63;\r\n        if (i > 8191) {\r\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\r\n            i = 0;\r\n        }\r\n    }\r\n    if (parts) {\r\n        if (i)\r\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\r\n        return parts.join(\"\");\r\n    }\r\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\r\n};\r\n\r\n/**\r\n * Writes a string as UTF8 bytes.\r\n * @param {string} string Source string\r\n * @param {Uint8Array} buffer Destination buffer\r\n * @param {number} offset Destination offset\r\n * @returns {number} Bytes written\r\n */\r\nutf8.write = function utf8_write(string, buffer, offset) {\r\n    var start = offset,\r\n        c1, // character 1\r\n        c2; // character 2\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c1 = string.charCodeAt(i);\r\n        if (c1 < 128) {\r\n            buffer[offset++] = c1;\r\n        } else if (c1 < 2048) {\r\n            buffer[offset++] = c1 >> 6       | 192;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else if ((c1 & 0xFC00) === 0xD800 && ((c2 = string.charCodeAt(i + 1)) & 0xFC00) === 0xDC00) {\r\n            c1 = 0x10000 + ((c1 & 0x03FF) << 10) + (c2 & 0x03FF);\r\n            ++i;\r\n            buffer[offset++] = c1 >> 18      | 240;\r\n            buffer[offset++] = c1 >> 12 & 63 | 128;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else {\r\n            buffer[offset++] = c1 >> 12      | 224;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        }\r\n    }\r\n    return offset - start;\r\n};\r\n","/* eslint-env browser */\n\n/**\n * This is the web browser implementation of `debug()`.\n */\n\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = localstorage();\nexports.destroy = (() => {\n\tlet warned = false;\n\n\treturn () => {\n\t\tif (!warned) {\n\t\t\twarned = true;\n\t\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t\t}\n\t};\n})();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n\t'#0000CC',\n\t'#0000FF',\n\t'#0033CC',\n\t'#0033FF',\n\t'#0066CC',\n\t'#0066FF',\n\t'#0099CC',\n\t'#0099FF',\n\t'#00CC00',\n\t'#00CC33',\n\t'#00CC66',\n\t'#00CC99',\n\t'#00CCCC',\n\t'#00CCFF',\n\t'#3300CC',\n\t'#3300FF',\n\t'#3333CC',\n\t'#3333FF',\n\t'#3366CC',\n\t'#3366FF',\n\t'#3399CC',\n\t'#3399FF',\n\t'#33CC00',\n\t'#33CC33',\n\t'#33CC66',\n\t'#33CC99',\n\t'#33CCCC',\n\t'#33CCFF',\n\t'#6600CC',\n\t'#6600FF',\n\t'#6633CC',\n\t'#6633FF',\n\t'#66CC00',\n\t'#66CC33',\n\t'#9900CC',\n\t'#9900FF',\n\t'#9933CC',\n\t'#9933FF',\n\t'#99CC00',\n\t'#99CC33',\n\t'#CC0000',\n\t'#CC0033',\n\t'#CC0066',\n\t'#CC0099',\n\t'#CC00CC',\n\t'#CC00FF',\n\t'#CC3300',\n\t'#CC3333',\n\t'#CC3366',\n\t'#CC3399',\n\t'#CC33CC',\n\t'#CC33FF',\n\t'#CC6600',\n\t'#CC6633',\n\t'#CC9900',\n\t'#CC9933',\n\t'#CCCC00',\n\t'#CCCC33',\n\t'#FF0000',\n\t'#FF0033',\n\t'#FF0066',\n\t'#FF0099',\n\t'#FF00CC',\n\t'#FF00FF',\n\t'#FF3300',\n\t'#FF3333',\n\t'#FF3366',\n\t'#FF3399',\n\t'#FF33CC',\n\t'#FF33FF',\n\t'#FF6600',\n\t'#FF6633',\n\t'#FF9900',\n\t'#FF9933',\n\t'#FFCC00',\n\t'#FFCC33'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\n// eslint-disable-next-line complexity\nfunction useColors() {\n\t// NB: In an Electron preload script, document will be defined but not fully\n\t// initialized. Since we know we're in Chrome, we'll just detect this case\n\t// explicitly\n\tif (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {\n\t\treturn true;\n\t}\n\n\t// Internet Explorer and Edge do not support colors.\n\tif (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n\t\treturn false;\n\t}\n\n\tlet m;\n\n\t// Is webkit? http://stackoverflow.com/a/16459606/376773\n\t// document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n\treturn (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n\t\t// Is firebug? http://stackoverflow.com/a/398120/376773\n\t\t(typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n\t\t// Is firefox >= v31?\n\t\t// https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && (m = navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/)) && parseInt(m[1], 10) >= 31) ||\n\t\t// Double check webkit in userAgent just in case we are in a worker\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n\targs[0] = (this.useColors ? '%c' : '') +\n\t\tthis.namespace +\n\t\t(this.useColors ? ' %c' : ' ') +\n\t\targs[0] +\n\t\t(this.useColors ? '%c ' : ' ') +\n\t\t'+' + module.exports.humanize(this.diff);\n\n\tif (!this.useColors) {\n\t\treturn;\n\t}\n\n\tconst c = 'color: ' + this.color;\n\targs.splice(1, 0, c, 'color: inherit');\n\n\t// The final \"%c\" is somewhat tricky, because there could be other\n\t// arguments passed either before or after the %c, so we need to\n\t// figure out the correct index to insert the CSS into\n\tlet index = 0;\n\tlet lastC = 0;\n\targs[0].replace(/%[a-zA-Z%]/g, match => {\n\t\tif (match === '%%') {\n\t\t\treturn;\n\t\t}\n\t\tindex++;\n\t\tif (match === '%c') {\n\t\t\t// We only are interested in the *last* %c\n\t\t\t// (the user may have provided their own)\n\t\t\tlastC = index;\n\t\t}\n\t});\n\n\targs.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.debug()` when available.\n * No-op when `console.debug` is not a \"function\".\n * If `console.debug` is not available, falls back\n * to `console.log`.\n *\n * @api public\n */\nexports.log = console.debug || console.log || (() => {});\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\nfunction save(namespaces) {\n\ttry {\n\t\tif (namespaces) {\n\t\t\texports.storage.setItem('debug', namespaces);\n\t\t} else {\n\t\t\texports.storage.removeItem('debug');\n\t\t}\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\nfunction load() {\n\tlet r;\n\ttry {\n\t\tr = exports.storage.getItem('debug');\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n\n\t// If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n\tif (!r && typeof process !== 'undefined' && 'env' in process) {\n\t\tr = process.env.DEBUG;\n\t}\n\n\treturn r;\n}\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n\ttry {\n\t\t// TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context\n\t\t// The Browser also has localStorage in the global context.\n\t\treturn localStorage;\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\nmodule.exports = require('./common')(exports);\n\nconst {formatters} = module.exports;\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nformatters.j = function (v) {\n\ttry {\n\t\treturn JSON.stringify(v);\n\t} catch (error) {\n\t\treturn '[UnexpectedJSONParseError]: ' + error.message;\n\t}\n};\n","\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n */\n\nfunction setup(env) {\n\tcreateDebug.debug = createDebug;\n\tcreateDebug.default = createDebug;\n\tcreateDebug.coerce = coerce;\n\tcreateDebug.disable = disable;\n\tcreateDebug.enable = enable;\n\tcreateDebug.enabled = enabled;\n\tcreateDebug.humanize = require('ms');\n\tcreateDebug.destroy = destroy;\n\n\tObject.keys(env).forEach(key => {\n\t\tcreateDebug[key] = env[key];\n\t});\n\n\t/**\n\t* The currently active debug mode names, and names to skip.\n\t*/\n\n\tcreateDebug.names = [];\n\tcreateDebug.skips = [];\n\n\t/**\n\t* Map of special \"%n\" handling functions, for the debug \"format\" argument.\n\t*\n\t* Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n\t*/\n\tcreateDebug.formatters = {};\n\n\t/**\n\t* Selects a color for a debug namespace\n\t* @param {String} namespace The namespace string for the debug instance to be colored\n\t* @return {Number|String} An ANSI color code for the given namespace\n\t* @api private\n\t*/\n\tfunction selectColor(namespace) {\n\t\tlet hash = 0;\n\n\t\tfor (let i = 0; i < namespace.length; i++) {\n\t\t\thash = ((hash << 5) - hash) + namespace.charCodeAt(i);\n\t\t\thash |= 0; // Convert to 32bit integer\n\t\t}\n\n\t\treturn createDebug.colors[Math.abs(hash) % createDebug.colors.length];\n\t}\n\tcreateDebug.selectColor = selectColor;\n\n\t/**\n\t* Create a debugger with the given `namespace`.\n\t*\n\t* @param {String} namespace\n\t* @return {Function}\n\t* @api public\n\t*/\n\tfunction createDebug(namespace) {\n\t\tlet prevTime;\n\t\tlet enableOverride = null;\n\t\tlet namespacesCache;\n\t\tlet enabledCache;\n\n\t\tfunction debug(...args) {\n\t\t\t// Disabled?\n\t\t\tif (!debug.enabled) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst self = debug;\n\n\t\t\t// Set `diff` timestamp\n\t\t\tconst curr = Number(new Date());\n\t\t\tconst ms = curr - (prevTime || curr);\n\t\t\tself.diff = ms;\n\t\t\tself.prev = prevTime;\n\t\t\tself.curr = curr;\n\t\t\tprevTime = curr;\n\n\t\t\targs[0] = createDebug.coerce(args[0]);\n\n\t\t\tif (typeof args[0] !== 'string') {\n\t\t\t\t// Anything else let's inspect with %O\n\t\t\t\targs.unshift('%O');\n\t\t\t}\n\n\t\t\t// Apply any `formatters` transformations\n\t\t\tlet index = 0;\n\t\t\targs[0] = args[0].replace(/%([a-zA-Z%])/g, (match, format) => {\n\t\t\t\t// If we encounter an escaped % then don't increase the array index\n\t\t\t\tif (match === '%%') {\n\t\t\t\t\treturn '%';\n\t\t\t\t}\n\t\t\t\tindex++;\n\t\t\t\tconst formatter = createDebug.formatters[format];\n\t\t\t\tif (typeof formatter === 'function') {\n\t\t\t\t\tconst val = args[index];\n\t\t\t\t\tmatch = formatter.call(self, val);\n\n\t\t\t\t\t// Now we need to remove `args[index]` since it's inlined in the `format`\n\t\t\t\t\targs.splice(index, 1);\n\t\t\t\t\tindex--;\n\t\t\t\t}\n\t\t\t\treturn match;\n\t\t\t});\n\n\t\t\t// Apply env-specific formatting (colors, etc.)\n\t\t\tcreateDebug.formatArgs.call(self, args);\n\n\t\t\tconst logFn = self.log || createDebug.log;\n\t\t\tlogFn.apply(self, args);\n\t\t}\n\n\t\tdebug.namespace = namespace;\n\t\tdebug.useColors = createDebug.useColors();\n\t\tdebug.color = createDebug.selectColor(namespace);\n\t\tdebug.extend = extend;\n\t\tdebug.destroy = createDebug.destroy; // XXX Temporary. Will be removed in the next major release.\n\n\t\tObject.defineProperty(debug, 'enabled', {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: false,\n\t\t\tget: () => {\n\t\t\t\tif (enableOverride !== null) {\n\t\t\t\t\treturn enableOverride;\n\t\t\t\t}\n\t\t\t\tif (namespacesCache !== createDebug.namespaces) {\n\t\t\t\t\tnamespacesCache = createDebug.namespaces;\n\t\t\t\t\tenabledCache = createDebug.enabled(namespace);\n\t\t\t\t}\n\n\t\t\t\treturn enabledCache;\n\t\t\t},\n\t\t\tset: v => {\n\t\t\t\tenableOverride = v;\n\t\t\t}\n\t\t});\n\n\t\t// Env-specific initialization logic for debug instances\n\t\tif (typeof createDebug.init === 'function') {\n\t\t\tcreateDebug.init(debug);\n\t\t}\n\n\t\treturn debug;\n\t}\n\n\tfunction extend(namespace, delimiter) {\n\t\tconst newDebug = createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);\n\t\tnewDebug.log = this.log;\n\t\treturn newDebug;\n\t}\n\n\t/**\n\t* Enables a debug mode by namespaces. This can include modes\n\t* separated by a colon and wildcards.\n\t*\n\t* @param {String} namespaces\n\t* @api public\n\t*/\n\tfunction enable(namespaces) {\n\t\tcreateDebug.save(namespaces);\n\t\tcreateDebug.namespaces = namespaces;\n\n\t\tcreateDebug.names = [];\n\t\tcreateDebug.skips = [];\n\n\t\tlet i;\n\t\tconst split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n\t\tconst len = split.length;\n\n\t\tfor (i = 0; i < len; i++) {\n\t\t\tif (!split[i]) {\n\t\t\t\t// ignore empty strings\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tnamespaces = split[i].replace(/\\*/g, '.*?');\n\n\t\t\tif (namespaces[0] === '-') {\n\t\t\t\tcreateDebug.skips.push(new RegExp('^' + namespaces.slice(1) + '$'));\n\t\t\t} else {\n\t\t\t\tcreateDebug.names.push(new RegExp('^' + namespaces + '$'));\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t* Disable debug output.\n\t*\n\t* @return {String} namespaces\n\t* @api public\n\t*/\n\tfunction disable() {\n\t\tconst namespaces = [\n\t\t\t...createDebug.names.map(toNamespace),\n\t\t\t...createDebug.skips.map(toNamespace).map(namespace => '-' + namespace)\n\t\t].join(',');\n\t\tcreateDebug.enable('');\n\t\treturn namespaces;\n\t}\n\n\t/**\n\t* Returns true if the given mode name is enabled, false otherwise.\n\t*\n\t* @param {String} name\n\t* @return {Boolean}\n\t* @api public\n\t*/\n\tfunction enabled(name) {\n\t\tif (name[name.length - 1] === '*') {\n\t\t\treturn true;\n\t\t}\n\n\t\tlet i;\n\t\tlet len;\n\n\t\tfor (i = 0, len = createDebug.skips.length; i < len; i++) {\n\t\t\tif (createDebug.skips[i].test(name)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tfor (i = 0, len = createDebug.names.length; i < len; i++) {\n\t\t\tif (createDebug.names[i].test(name)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t* Convert regexp to namespace\n\t*\n\t* @param {RegExp} regxep\n\t* @return {String} namespace\n\t* @api private\n\t*/\n\tfunction toNamespace(regexp) {\n\t\treturn regexp.toString()\n\t\t\t.substring(2, regexp.toString().length - 2)\n\t\t\t.replace(/\\.\\*\\?$/, '*');\n\t}\n\n\t/**\n\t* Coerce `val`.\n\t*\n\t* @param {Mixed} val\n\t* @return {Mixed}\n\t* @api private\n\t*/\n\tfunction coerce(val) {\n\t\tif (val instanceof Error) {\n\t\t\treturn val.stack || val.message;\n\t\t}\n\t\treturn val;\n\t}\n\n\t/**\n\t* XXX DO NOT USE. This is a temporary stub function.\n\t* XXX It WILL be removed in the next major release.\n\t*/\n\tfunction destroy() {\n\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t}\n\n\tcreateDebug.enable(createDebug.load());\n\n\treturn createDebug;\n}\n\nmodule.exports = setup;\n","'use strict';\n\n/**\n * @typedef {{ [key: string]: any }} Extensions\n * @typedef {Error} Err\n * @property {string} message\n */\n\n/**\n *\n * @param {Error} obj\n * @param {Extensions} props\n * @returns {Error & Extensions}\n */\nfunction assign(obj, props) {\n    for (const key in props) {\n        Object.defineProperty(obj, key, {\n            value: props[key],\n            enumerable: true,\n            configurable: true,\n        });\n    }\n\n    return obj;\n}\n\n/**\n *\n * @param {any} err - An Error\n * @param {string|Extensions} code - A string code or props to set on the error\n * @param {Extensions} [props] - Props to set on the error\n * @returns {Error & Extensions}\n */\nfunction createError(err, code, props) {\n    if (!err || typeof err === 'string') {\n        throw new TypeError('Please pass an Error to err-code');\n    }\n\n    if (!props) {\n        props = {};\n    }\n\n    if (typeof code === 'object') {\n        props = code;\n        code = '';\n    }\n\n    if (code) {\n        props.code = code;\n    }\n\n    try {\n        return assign(err, props);\n    } catch (_) {\n        props.message = err.message;\n        props.stack = err.stack;\n\n        const ErrClass = function () {};\n\n        ErrClass.prototype = Object.create(Object.getPrototypeOf(err));\n\n        // @ts-ignore\n        const output = assign(new ErrClass(), props);\n\n        return output;\n    }\n}\n\nmodule.exports = createError;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst event_iterator_1 = require(\"./event-iterator\");\nexports.EventIterator = event_iterator_1.EventIterator;\nfunction subscribe(event, options, evOptions) {\n    return new event_iterator_1.EventIterator(({ push }) => {\n        this.addEventListener(event, push, options);\n        return () => this.removeEventListener(event, push, options);\n    }, evOptions);\n}\nexports.subscribe = subscribe;\nexports.default = event_iterator_1.EventIterator;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass EventQueue {\n    constructor() {\n        this.pullQueue = [];\n        this.pushQueue = [];\n        this.eventHandlers = {};\n        this.isPaused = false;\n        this.isStopped = false;\n    }\n    push(value) {\n        if (this.isStopped)\n            return;\n        const resolution = { value, done: false };\n        if (this.pullQueue.length) {\n            const placeholder = this.pullQueue.shift();\n            if (placeholder)\n                placeholder.resolve(resolution);\n        }\n        else {\n            this.pushQueue.push(Promise.resolve(resolution));\n            if (this.highWaterMark !== undefined &&\n                this.pushQueue.length >= this.highWaterMark &&\n                !this.isPaused) {\n                this.isPaused = true;\n                if (this.eventHandlers.highWater) {\n                    this.eventHandlers.highWater();\n                }\n                else if (console) {\n                    console.warn(`EventIterator queue reached ${this.pushQueue.length} items`);\n                }\n            }\n        }\n    }\n    stop() {\n        if (this.isStopped)\n            return;\n        this.isStopped = true;\n        this.remove();\n        for (const placeholder of this.pullQueue) {\n            placeholder.resolve({ value: undefined, done: true });\n        }\n        this.pullQueue.length = 0;\n    }\n    fail(error) {\n        if (this.isStopped)\n            return;\n        this.isStopped = true;\n        this.remove();\n        if (this.pullQueue.length) {\n            for (const placeholder of this.pullQueue) {\n                placeholder.reject(error);\n            }\n            this.pullQueue.length = 0;\n        }\n        else {\n            const rejection = Promise.reject(error);\n            /* Attach error handler to avoid leaking an unhandled promise rejection. */\n            rejection.catch(() => { });\n            this.pushQueue.push(rejection);\n        }\n    }\n    remove() {\n        Promise.resolve().then(() => {\n            if (this.removeCallback)\n                this.removeCallback();\n        });\n    }\n    [Symbol.asyncIterator]() {\n        return {\n            next: (value) => {\n                const result = this.pushQueue.shift();\n                if (result) {\n                    if (this.lowWaterMark !== undefined &&\n                        this.pushQueue.length <= this.lowWaterMark &&\n                        this.isPaused) {\n                        this.isPaused = false;\n                        if (this.eventHandlers.lowWater) {\n                            this.eventHandlers.lowWater();\n                        }\n                    }\n                    return result;\n                }\n                else if (this.isStopped) {\n                    return Promise.resolve({ value: undefined, done: true });\n                }\n                else {\n                    return new Promise((resolve, reject) => {\n                        this.pullQueue.push({ resolve, reject });\n                    });\n                }\n            },\n            return: () => {\n                this.isStopped = true;\n                this.pushQueue.length = 0;\n                this.remove();\n                return Promise.resolve({ value: undefined, done: true });\n            },\n        };\n    }\n}\nclass EventIterator {\n    constructor(listen, { highWaterMark = 100, lowWaterMark = 1 } = {}) {\n        const queue = new EventQueue();\n        queue.highWaterMark = highWaterMark;\n        queue.lowWaterMark = lowWaterMark;\n        queue.removeCallback =\n            listen({\n                push: value => queue.push(value),\n                stop: () => queue.stop(),\n                fail: error => queue.fail(error),\n                on: (event, fn) => {\n                    queue.eventHandlers[event] = fn;\n                },\n            }) || (() => { });\n        this[Symbol.asyncIterator] = () => queue[Symbol.asyncIterator]();\n        Object.freeze(this);\n    }\n}\nexports.EventIterator = EventIterator;\nexports.default = EventIterator;\n","'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , prefix = '~';\n\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @private\n */\nfunction Events() {}\n\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n  Events.prototype = Object.create(null);\n\n  //\n  // This hack is needed because the `__proto__` property is still inherited in\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n  //\n  if (!new Events().__proto__) prefix = false;\n}\n\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Add a listener for a given event.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {EventEmitter}\n * @private\n */\nfunction addListener(emitter, event, fn, context, once) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('The listener must be a function');\n  }\n\n  var listener = new EE(fn, context || emitter, once)\n    , evt = prefix ? prefix + event : event;\n\n  if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;\n  else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);\n  else emitter._events[evt] = [emitter._events[evt], listener];\n\n  return emitter;\n}\n\n/**\n * Clear event by name.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} evt The Event name.\n * @private\n */\nfunction clearEvent(emitter, evt) {\n  if (--emitter._eventsCount === 0) emitter._events = new Events();\n  else delete emitter._events[evt];\n}\n\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @public\n */\nfunction EventEmitter() {\n  this._events = new Events();\n  this._eventsCount = 0;\n}\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var names = []\n    , events\n    , name;\n\n  if (this._eventsCount === 0) return names;\n\n  for (name in (events = this._events)) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n\n/**\n * Return the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Array} The registered listeners.\n * @public\n */\nEventEmitter.prototype.listeners = function listeners(event) {\n  var evt = prefix ? prefix + event : event\n    , handlers = this._events[evt];\n\n  if (!handlers) return [];\n  if (handlers.fn) return [handlers.fn];\n\n  for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {\n    ee[i] = handlers[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Return the number of listeners listening to a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Number} The number of listeners.\n * @public\n */\nEventEmitter.prototype.listenerCount = function listenerCount(event) {\n  var evt = prefix ? prefix + event : event\n    , listeners = this._events[evt];\n\n  if (!listeners) return 0;\n  if (listeners.fn) return 1;\n  return listeners.length;\n};\n\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if (listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Add a listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  return addListener(this, event, fn, context, false);\n};\n\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  return addListener(this, event, fn, context, true);\n};\n\n/**\n * Remove the listeners of a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return this;\n  if (!fn) {\n    clearEvent(this, evt);\n    return this;\n  }\n\n  var listeners = this._events[evt];\n\n  if (listeners.fn) {\n    if (\n      listeners.fn === fn &&\n      (!once || listeners.once) &&\n      (!context || listeners.context === context)\n    ) {\n      clearEvent(this, evt);\n    }\n  } else {\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n      if (\n        listeners[i].fn !== fn ||\n        (once && !listeners[i].once) ||\n        (context && listeners[i].context !== context)\n      ) {\n        events.push(listeners[i]);\n      }\n    }\n\n    //\n    // Reset the array, or remove it completely if we have no more listeners.\n    //\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n    else clearEvent(this, evt);\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  var evt;\n\n  if (event) {\n    evt = prefix ? prefix + event : event;\n    if (this._events[evt]) clearEvent(this, evt);\n  } else {\n    this._events = new Events();\n    this._eventsCount = 0;\n  }\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n\n//\n// Expose the module.\n//\nif ('undefined' !== typeof module) {\n  module.exports = EventEmitter;\n}\n","module.exports = function (max) {\n\n  if (!max) throw Error('hashlru must have a max value, of type number, greater than 0')\n\n  var size = 0, cache = Object.create(null), _cache = Object.create(null)\n\n  function update (key, value) {\n    cache[key] = value\n    size ++\n    if(size >= max) {\n      size = 0\n      _cache = cache\n      cache = Object.create(null)\n    }\n  }\n\n  return {\n    has: function (key) {\n      return cache[key] !== undefined || _cache[key] !== undefined\n    },\n    remove: function (key) {\n      if(cache[key] !== undefined)\n        cache[key] = undefined\n      if(_cache[key] !== undefined)\n        _cache[key] = undefined\n    },\n    get: function (key) {\n      var v = cache[key]\n      if(v !== undefined) return v\n      if((v = _cache[key]) !== undefined) {\n        update(key, v)\n        return v\n      }\n    },\n    set: function (key, value) {\n      if(cache[key] !== undefined) cache[key] = value\n      else update(key, value)\n    },\n    clear: function () {\n      cache = Object.create(null)\n      _cache = Object.create(null)\n    }\n  }\n}\n\n\n\n\n\n\n\n","/*\n * [hi-base32]{@link https://github.com/emn178/hi-base32}\n *\n * @version 0.5.0\n * @author Chen, Yi-Cyuan [emn178@gmail.com]\n * @copyright Chen, Yi-Cyuan 2015-2018\n * @license MIT\n */\n/*jslint bitwise: true */\n(function () {\n  'use strict';\n\n  var root = typeof window === 'object' ? window : {};\n  var NODE_JS = !root.HI_BASE32_NO_NODE_JS && typeof process === 'object' && process.versions && process.versions.node;\n  if (NODE_JS) {\n    root = global;\n  }\n  var COMMON_JS = !root.HI_BASE32_NO_COMMON_JS && typeof module === 'object' && module.exports;\n  var AMD = typeof define === 'function' && define.amd;\n  var BASE32_ENCODE_CHAR = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567'.split('');\n  var BASE32_DECODE_CHAR = {\n    'A': 0, 'B': 1, 'C': 2, 'D': 3, 'E': 4, 'F': 5, 'G': 6, 'H': 7, 'I': 8,\n    'J': 9, 'K': 10, 'L': 11, 'M': 12, 'N': 13, 'O': 14, 'P': 15, 'Q': 16,\n    'R': 17, 'S': 18, 'T': 19, 'U': 20, 'V': 21, 'W': 22, 'X': 23, 'Y': 24,\n    'Z': 25, '2': 26, '3': 27, '4': 28, '5': 29, '6': 30, '7': 31\n  };\n\n  var blocks = [0, 0, 0, 0, 0, 0, 0, 0];\n\n  var throwInvalidUtf8 = function (position, partial) {\n    if (partial.length > 10) {\n      partial = '...' + partial.substr(-10);\n    }\n    var err = new Error('Decoded data is not valid UTF-8.'\n      + ' Maybe try base32.decode.asBytes()?'\n      + ' Partial data after reading ' + position + ' bytes: ' + partial + ' <-');\n    err.position = position;\n    throw err;\n  };\n\n  var toUtf8String = function (bytes) {\n    var str = '', length = bytes.length, i = 0, followingChars = 0, b, c;\n    while (i < length) {\n      b = bytes[i++];\n      if (b <= 0x7F) {\n        str += String.fromCharCode(b);\n        continue;\n      } else if (b > 0xBF && b <= 0xDF) {\n        c = b & 0x1F;\n        followingChars = 1;\n      } else if (b <= 0xEF) {\n        c = b & 0x0F;\n        followingChars = 2;\n      } else if (b <= 0xF7) {\n        c = b & 0x07;\n        followingChars = 3;\n      } else {\n        throwInvalidUtf8(i, str);\n      }\n\n      for (var j = 0; j < followingChars; ++j) {\n        b = bytes[i++];\n        if (b < 0x80 || b > 0xBF) {\n          throwInvalidUtf8(i, str);\n        }\n        c <<= 6;\n        c += b & 0x3F;\n      }\n      if (c >= 0xD800 && c <= 0xDFFF) {\n        throwInvalidUtf8(i, str);\n      }\n      if (c > 0x10FFFF) {\n        throwInvalidUtf8(i, str);\n      }\n\n      if (c <= 0xFFFF) {\n        str += String.fromCharCode(c);\n      } else {\n        c -= 0x10000;\n        str += String.fromCharCode((c >> 10) + 0xD800);\n        str += String.fromCharCode((c & 0x3FF) + 0xDC00);\n      }\n    }\n    return str;\n  };\n\n  var decodeAsBytes = function (base32Str) {\n    if (base32Str === '') {\n      return [];\n    } else if (!/^[A-Z2-7=]+$/.test(base32Str)) {\n      throw new Error('Invalid base32 characters');\n    }\n    base32Str = base32Str.replace(/=/g, '');\n    var v1, v2, v3, v4, v5, v6, v7, v8, bytes = [], index = 0, length = base32Str.length;\n\n    // 4 char to 3 bytes\n    for (var i = 0, count = length >> 3 << 3; i < count;) {\n      v1 = BASE32_DECODE_CHAR[base32Str.charAt(i++)];\n      v2 = BASE32_DECODE_CHAR[base32Str.charAt(i++)];\n      v3 = BASE32_DECODE_CHAR[base32Str.charAt(i++)];\n      v4 = BASE32_DECODE_CHAR[base32Str.charAt(i++)];\n      v5 = BASE32_DECODE_CHAR[base32Str.charAt(i++)];\n      v6 = BASE32_DECODE_CHAR[base32Str.charAt(i++)];\n      v7 = BASE32_DECODE_CHAR[base32Str.charAt(i++)];\n      v8 = BASE32_DECODE_CHAR[base32Str.charAt(i++)];\n      bytes[index++] = (v1 << 3 | v2 >>> 2) & 255;\n      bytes[index++] = (v2 << 6 | v3 << 1 | v4 >>> 4) & 255;\n      bytes[index++] = (v4 << 4 | v5 >>> 1) & 255;\n      bytes[index++] = (v5 << 7 | v6 << 2 | v7 >>> 3) & 255;\n      bytes[index++] = (v7 << 5 | v8) & 255;\n    }\n\n    // remain bytes\n    var remain = length - count;\n    if (remain === 2) {\n      v1 = BASE32_DECODE_CHAR[base32Str.charAt(i++)];\n      v2 = BASE32_DECODE_CHAR[base32Str.charAt(i++)];\n      bytes[index++] = (v1 << 3 | v2 >>> 2) & 255;\n    } else if (remain === 4) {\n      v1 = BASE32_DECODE_CHAR[base32Str.charAt(i++)];\n      v2 = BASE32_DECODE_CHAR[base32Str.charAt(i++)];\n      v3 = BASE32_DECODE_CHAR[base32Str.charAt(i++)];\n      v4 = BASE32_DECODE_CHAR[base32Str.charAt(i++)];\n      bytes[index++] = (v1 << 3 | v2 >>> 2) & 255;\n      bytes[index++] = (v2 << 6 | v3 << 1 | v4 >>> 4) & 255;\n    } else if (remain === 5) {\n      v1 = BASE32_DECODE_CHAR[base32Str.charAt(i++)];\n      v2 = BASE32_DECODE_CHAR[base32Str.charAt(i++)];\n      v3 = BASE32_DECODE_CHAR[base32Str.charAt(i++)];\n      v4 = BASE32_DECODE_CHAR[base32Str.charAt(i++)];\n      v5 = BASE32_DECODE_CHAR[base32Str.charAt(i++)];\n      bytes[index++] = (v1 << 3 | v2 >>> 2) & 255;\n      bytes[index++] = (v2 << 6 | v3 << 1 | v4 >>> 4) & 255;\n      bytes[index++] = (v4 << 4 | v5 >>> 1) & 255;\n    } else if (remain === 7) {\n      v1 = BASE32_DECODE_CHAR[base32Str.charAt(i++)];\n      v2 = BASE32_DECODE_CHAR[base32Str.charAt(i++)];\n      v3 = BASE32_DECODE_CHAR[base32Str.charAt(i++)];\n      v4 = BASE32_DECODE_CHAR[base32Str.charAt(i++)];\n      v5 = BASE32_DECODE_CHAR[base32Str.charAt(i++)];\n      v6 = BASE32_DECODE_CHAR[base32Str.charAt(i++)];\n      v7 = BASE32_DECODE_CHAR[base32Str.charAt(i++)];\n      bytes[index++] = (v1 << 3 | v2 >>> 2) & 255;\n      bytes[index++] = (v2 << 6 | v3 << 1 | v4 >>> 4) & 255;\n      bytes[index++] = (v4 << 4 | v5 >>> 1) & 255;\n      bytes[index++] = (v5 << 7 | v6 << 2 | v7 >>> 3) & 255;\n    }\n    return bytes;\n  };\n\n  var encodeAscii = function (str) {\n    var v1, v2, v3, v4, v5, base32Str = '', length = str.length;\n    for (var i = 0, count = parseInt(length / 5) * 5; i < count;) {\n      v1 = str.charCodeAt(i++);\n      v2 = str.charCodeAt(i++);\n      v3 = str.charCodeAt(i++);\n      v4 = str.charCodeAt(i++);\n      v5 = str.charCodeAt(i++);\n      base32Str += BASE32_ENCODE_CHAR[v1 >>> 3] +\n        BASE32_ENCODE_CHAR[(v1 << 2 | v2 >>> 6) & 31] +\n        BASE32_ENCODE_CHAR[(v2 >>> 1) & 31] +\n        BASE32_ENCODE_CHAR[(v2 << 4 | v3 >>> 4) & 31] +\n        BASE32_ENCODE_CHAR[(v3 << 1 | v4 >>> 7) & 31] +\n        BASE32_ENCODE_CHAR[(v4 >>> 2) & 31] +\n        BASE32_ENCODE_CHAR[(v4 << 3 | v5 >>> 5) & 31] +\n        BASE32_ENCODE_CHAR[v5 & 31];\n    }\n\n    // remain char\n    var remain = length - count;\n    if (remain === 1) {\n      v1 = str.charCodeAt(i);\n      base32Str += BASE32_ENCODE_CHAR[v1 >>> 3] +\n        BASE32_ENCODE_CHAR[(v1 << 2) & 31] +\n        '======';\n    } else if (remain === 2) {\n      v1 = str.charCodeAt(i++);\n      v2 = str.charCodeAt(i);\n      base32Str += BASE32_ENCODE_CHAR[v1 >>> 3] +\n        BASE32_ENCODE_CHAR[(v1 << 2 | v2 >>> 6) & 31] +\n        BASE32_ENCODE_CHAR[(v2 >>> 1) & 31] +\n        BASE32_ENCODE_CHAR[(v2 << 4) & 31] +\n        '====';\n    } else if (remain === 3) {\n      v1 = str.charCodeAt(i++);\n      v2 = str.charCodeAt(i++);\n      v3 = str.charCodeAt(i);\n      base32Str += BASE32_ENCODE_CHAR[v1 >>> 3] +\n        BASE32_ENCODE_CHAR[(v1 << 2 | v2 >>> 6) & 31] +\n        BASE32_ENCODE_CHAR[(v2 >>> 1) & 31] +\n        BASE32_ENCODE_CHAR[(v2 << 4 | v3 >>> 4) & 31] +\n        BASE32_ENCODE_CHAR[(v3 << 1) & 31] +\n        '===';\n    } else if (remain === 4) {\n      v1 = str.charCodeAt(i++);\n      v2 = str.charCodeAt(i++);\n      v3 = str.charCodeAt(i++);\n      v4 = str.charCodeAt(i);\n      base32Str += BASE32_ENCODE_CHAR[v1 >>> 3] +\n        BASE32_ENCODE_CHAR[(v1 << 2 | v2 >>> 6) & 31] +\n        BASE32_ENCODE_CHAR[(v2 >>> 1) & 31] +\n        BASE32_ENCODE_CHAR[(v2 << 4 | v3 >>> 4) & 31] +\n        BASE32_ENCODE_CHAR[(v3 << 1 | v4 >>> 7) & 31] +\n        BASE32_ENCODE_CHAR[(v4 >>> 2) & 31] +\n        BASE32_ENCODE_CHAR[(v4 << 3) & 31] +\n        '=';\n    }\n    return base32Str;\n  };\n\n  var encodeUtf8 = function (str) {\n    var v1, v2, v3, v4, v5, code, end = false, base32Str = '',\n      index = 0, i, start = 0, bytes = 0, length = str.length;\n      if (str === '') {\n        return base32Str;\n      }\n    do {\n      blocks[0] = blocks[5];\n      blocks[1] = blocks[6];\n      blocks[2] = blocks[7];\n      for (i = start; index < length && i < 5; ++index) {\n        code = str.charCodeAt(index);\n        if (code < 0x80) {\n          blocks[i++] = code;\n        } else if (code < 0x800) {\n          blocks[i++] = 0xc0 | (code >> 6);\n          blocks[i++] = 0x80 | (code & 0x3f);\n        } else if (code < 0xd800 || code >= 0xe000) {\n          blocks[i++] = 0xe0 | (code >> 12);\n          blocks[i++] = 0x80 | ((code >> 6) & 0x3f);\n          blocks[i++] = 0x80 | (code & 0x3f);\n        } else {\n          code = 0x10000 + (((code & 0x3ff) << 10) | (str.charCodeAt(++index) & 0x3ff));\n          blocks[i++] = 0xf0 | (code >> 18);\n          blocks[i++] = 0x80 | ((code >> 12) & 0x3f);\n          blocks[i++] = 0x80 | ((code >> 6) & 0x3f);\n          blocks[i++] = 0x80 | (code & 0x3f);\n        }\n      }\n      bytes += i - start;\n      start = i - 5;\n      if (index === length) {\n        ++index;\n      }\n      if (index > length && i < 6) {\n        end = true;\n      }\n      v1 = blocks[0];\n      if (i > 4) {\n        v2 = blocks[1];\n        v3 = blocks[2];\n        v4 = blocks[3];\n        v5 = blocks[4];\n        base32Str += BASE32_ENCODE_CHAR[v1 >>> 3] +\n          BASE32_ENCODE_CHAR[(v1 << 2 | v2 >>> 6) & 31] +\n          BASE32_ENCODE_CHAR[(v2 >>> 1) & 31] +\n          BASE32_ENCODE_CHAR[(v2 << 4 | v3 >>> 4) & 31] +\n          BASE32_ENCODE_CHAR[(v3 << 1 | v4 >>> 7) & 31] +\n          BASE32_ENCODE_CHAR[(v4 >>> 2) & 31] +\n          BASE32_ENCODE_CHAR[(v4 << 3 | v5 >>> 5) & 31] +\n          BASE32_ENCODE_CHAR[v5 & 31];\n      } else if (i === 1) {\n        base32Str += BASE32_ENCODE_CHAR[v1 >>> 3] +\n          BASE32_ENCODE_CHAR[(v1 << 2) & 31] +\n          '======';\n      } else if (i === 2) {\n        v2 = blocks[1];\n        base32Str += BASE32_ENCODE_CHAR[v1 >>> 3] +\n          BASE32_ENCODE_CHAR[(v1 << 2 | v2 >>> 6) & 31] +\n          BASE32_ENCODE_CHAR[(v2 >>> 1) & 31] +\n          BASE32_ENCODE_CHAR[(v2 << 4) & 31] +\n          '====';\n      } else if (i === 3) {\n        v2 = blocks[1];\n        v3 = blocks[2];\n        base32Str += BASE32_ENCODE_CHAR[v1 >>> 3] +\n          BASE32_ENCODE_CHAR[(v1 << 2 | v2 >>> 6) & 31] +\n          BASE32_ENCODE_CHAR[(v2 >>> 1) & 31] +\n          BASE32_ENCODE_CHAR[(v2 << 4 | v3 >>> 4) & 31] +\n          BASE32_ENCODE_CHAR[(v3 << 1) & 31] +\n          '===';\n      } else {\n        v2 = blocks[1];\n        v3 = blocks[2];\n        v4 = blocks[3];\n        base32Str += BASE32_ENCODE_CHAR[v1 >>> 3] +\n          BASE32_ENCODE_CHAR[(v1 << 2 | v2 >>> 6) & 31] +\n          BASE32_ENCODE_CHAR[(v2 >>> 1) & 31] +\n          BASE32_ENCODE_CHAR[(v2 << 4 | v3 >>> 4) & 31] +\n          BASE32_ENCODE_CHAR[(v3 << 1 | v4 >>> 7) & 31] +\n          BASE32_ENCODE_CHAR[(v4 >>> 2) & 31] +\n          BASE32_ENCODE_CHAR[(v4 << 3) & 31] +\n          '=';\n      }\n    } while (!end);\n    return base32Str;\n  };\n\n  var encodeBytes = function (bytes) {\n    var v1, v2, v3, v4, v5, base32Str = '', length = bytes.length;\n    for (var i = 0, count = parseInt(length / 5) * 5; i < count;) {\n      v1 = bytes[i++];\n      v2 = bytes[i++];\n      v3 = bytes[i++];\n      v4 = bytes[i++];\n      v5 = bytes[i++];\n      base32Str += BASE32_ENCODE_CHAR[v1 >>> 3] +\n        BASE32_ENCODE_CHAR[(v1 << 2 | v2 >>> 6) & 31] +\n        BASE32_ENCODE_CHAR[(v2 >>> 1) & 31] +\n        BASE32_ENCODE_CHAR[(v2 << 4 | v3 >>> 4) & 31] +\n        BASE32_ENCODE_CHAR[(v3 << 1 | v4 >>> 7) & 31] +\n        BASE32_ENCODE_CHAR[(v4 >>> 2) & 31] +\n        BASE32_ENCODE_CHAR[(v4 << 3 | v5 >>> 5) & 31] +\n        BASE32_ENCODE_CHAR[v5 & 31];\n    }\n\n    // remain char\n    var remain = length - count;\n    if (remain === 1) {\n      v1 = bytes[i];\n      base32Str += BASE32_ENCODE_CHAR[v1 >>> 3] +\n        BASE32_ENCODE_CHAR[(v1 << 2) & 31] +\n        '======';\n    } else if (remain === 2) {\n      v1 = bytes[i++];\n      v2 = bytes[i];\n      base32Str += BASE32_ENCODE_CHAR[v1 >>> 3] +\n        BASE32_ENCODE_CHAR[(v1 << 2 | v2 >>> 6) & 31] +\n        BASE32_ENCODE_CHAR[(v2 >>> 1) & 31] +\n        BASE32_ENCODE_CHAR[(v2 << 4) & 31] +\n        '====';\n    } else if (remain === 3) {\n      v1 = bytes[i++];\n      v2 = bytes[i++];\n      v3 = bytes[i];\n      base32Str += BASE32_ENCODE_CHAR[v1 >>> 3] +\n        BASE32_ENCODE_CHAR[(v1 << 2 | v2 >>> 6) & 31] +\n        BASE32_ENCODE_CHAR[(v2 >>> 1) & 31] +\n        BASE32_ENCODE_CHAR[(v2 << 4 | v3 >>> 4) & 31] +\n        BASE32_ENCODE_CHAR[(v3 << 1) & 31] +\n        '===';\n    } else if (remain === 4) {\n      v1 = bytes[i++];\n      v2 = bytes[i++];\n      v3 = bytes[i++];\n      v4 = bytes[i];\n      base32Str += BASE32_ENCODE_CHAR[v1 >>> 3] +\n        BASE32_ENCODE_CHAR[(v1 << 2 | v2 >>> 6) & 31] +\n        BASE32_ENCODE_CHAR[(v2 >>> 1) & 31] +\n        BASE32_ENCODE_CHAR[(v2 << 4 | v3 >>> 4) & 31] +\n        BASE32_ENCODE_CHAR[(v3 << 1 | v4 >>> 7) & 31] +\n        BASE32_ENCODE_CHAR[(v4 >>> 2) & 31] +\n        BASE32_ENCODE_CHAR[(v4 << 3) & 31] +\n        '=';\n    }\n    return base32Str;\n  };\n\n  var encode = function (input, asciiOnly) {\n    var notString = typeof(input) !== 'string';\n    if (notString && input.constructor === ArrayBuffer) {\n      input = new Uint8Array(input);\n    }\n    if (notString) {\n      return encodeBytes(input);\n    } else if (asciiOnly) {\n      return encodeAscii(input);\n    } else {\n      return encodeUtf8(input);\n    }\n  };\n\n  var decode = function (base32Str, asciiOnly) {\n    if (!asciiOnly) {\n      return toUtf8String(decodeAsBytes(base32Str));\n    }\n    if (base32Str === '') {\n      return '';\n    } else if (!/^[A-Z2-7=]+$/.test(base32Str)) {\n      throw new Error('Invalid base32 characters');\n    }\n    var v1, v2, v3, v4, v5, v6, v7, v8, str = '', length = base32Str.indexOf('=');\n    if (length === -1) {\n      length = base32Str.length;\n    }\n\n    // 8 char to 5 bytes\n    for (var i = 0, count = length >> 3 << 3; i < count;) {\n      v1 = BASE32_DECODE_CHAR[base32Str.charAt(i++)];\n      v2 = BASE32_DECODE_CHAR[base32Str.charAt(i++)];\n      v3 = BASE32_DECODE_CHAR[base32Str.charAt(i++)];\n      v4 = BASE32_DECODE_CHAR[base32Str.charAt(i++)];\n      v5 = BASE32_DECODE_CHAR[base32Str.charAt(i++)];\n      v6 = BASE32_DECODE_CHAR[base32Str.charAt(i++)];\n      v7 = BASE32_DECODE_CHAR[base32Str.charAt(i++)];\n      v8 = BASE32_DECODE_CHAR[base32Str.charAt(i++)];\n      str += String.fromCharCode((v1 << 3 | v2 >>> 2) & 255) +\n        String.fromCharCode((v2 << 6 | v3 << 1 | v4 >>> 4) & 255) +\n        String.fromCharCode((v4 << 4 | v5 >>> 1) & 255) +\n        String.fromCharCode((v5 << 7 | v6 << 2 | v7 >>> 3) & 255) +\n        String.fromCharCode((v7 << 5 | v8) & 255);\n    }\n\n    // remain bytes\n    var remain = length - count;\n    if (remain === 2) {\n      v1 = BASE32_DECODE_CHAR[base32Str.charAt(i++)];\n      v2 = BASE32_DECODE_CHAR[base32Str.charAt(i++)];\n      str += String.fromCharCode((v1 << 3 | v2 >>> 2) & 255);\n    } else if (remain === 4) {\n      v1 = BASE32_DECODE_CHAR[base32Str.charAt(i++)];\n      v2 = BASE32_DECODE_CHAR[base32Str.charAt(i++)];\n      v3 = BASE32_DECODE_CHAR[base32Str.charAt(i++)];\n      v4 = BASE32_DECODE_CHAR[base32Str.charAt(i++)];\n      str += String.fromCharCode((v1 << 3 | v2 >>> 2) & 255) +\n        String.fromCharCode((v2 << 6 | v3 << 1 | v4 >>> 4) & 255);\n    } else if (remain === 5) {\n      v1 = BASE32_DECODE_CHAR[base32Str.charAt(i++)];\n      v2 = BASE32_DECODE_CHAR[base32Str.charAt(i++)];\n      v3 = BASE32_DECODE_CHAR[base32Str.charAt(i++)];\n      v4 = BASE32_DECODE_CHAR[base32Str.charAt(i++)];\n      v5 = BASE32_DECODE_CHAR[base32Str.charAt(i++)];\n      str += String.fromCharCode((v1 << 3 | v2 >>> 2) & 255) +\n        String.fromCharCode((v2 << 6 | v3 << 1 | v4 >>> 4) & 255) +\n        String.fromCharCode((v4 << 4 | v5 >>> 1) & 255);\n    } else if (remain === 7) {\n      v1 = BASE32_DECODE_CHAR[base32Str.charAt(i++)];\n      v2 = BASE32_DECODE_CHAR[base32Str.charAt(i++)];\n      v3 = BASE32_DECODE_CHAR[base32Str.charAt(i++)];\n      v4 = BASE32_DECODE_CHAR[base32Str.charAt(i++)];\n      v5 = BASE32_DECODE_CHAR[base32Str.charAt(i++)];\n      v6 = BASE32_DECODE_CHAR[base32Str.charAt(i++)];\n      v7 = BASE32_DECODE_CHAR[base32Str.charAt(i++)];\n      str += String.fromCharCode((v1 << 3 | v2 >>> 2) & 255) +\n        String.fromCharCode((v2 << 6 | v3 << 1 | v4 >>> 4) & 255) +\n        String.fromCharCode((v4 << 4 | v5 >>> 1) & 255) +\n        String.fromCharCode((v5 << 7 | v6 << 2 | v7 >>> 3) & 255);\n    }\n    return str;\n  };\n\n  var exports = {\n    encode: encode,\n    decode: decode\n  };\n  decode.asBytes = decodeAsBytes;\n\n  if (COMMON_JS) {\n    module.exports = exports;\n  } else {\n    root.base32 = exports;\n    if (AMD) {\n      define(function() {\n        return exports;\n      });\n    }\n  }\n})();\n","// https://github.com/electron/electron/issues/2288\nfunction isElectron() {\n    // Renderer process\n    if (typeof window !== 'undefined' && typeof window.process === 'object' && window.process.type === 'renderer') {\n        return true;\n    }\n\n    // Main process\n    if (typeof process !== 'undefined' && typeof process.versions === 'object' && !!process.versions.electron) {\n        return true;\n    }\n\n    // Detect the user agent when the `nodeIntegration` option is set to false\n    if (typeof navigator === 'object' && typeof navigator.userAgent === 'string' && navigator.userAgent.indexOf('Electron') >= 0) {\n        return true;\n    }\n\n    return false;\n}\n\nmodule.exports = isElectron;\n","'use strict';\n\nmodule.exports = value => {\n\tif (Object.prototype.toString.call(value) !== '[object Object]') {\n\t\treturn false;\n\t}\n\n\tconst prototype = Object.getPrototypeOf(value);\n\treturn prototype === null || prototype === Object.prototype;\n};\n","/**\n * [js-sha3]{@link https://github.com/emn178/js-sha3}\n *\n * @version 0.9.3\n * @author Chen, Yi-Cyuan [emn178@gmail.com]\n * @copyright Chen, Yi-Cyuan 2015-2023\n * @license MIT\n */\n/*jslint bitwise: true */\n(function () {\n  'use strict';\n\n  var INPUT_ERROR = 'input is invalid type';\n  var FINALIZE_ERROR = 'finalize already called';\n  var WINDOW = typeof window === 'object';\n  var root = WINDOW ? window : {};\n  if (root.JS_SHA3_NO_WINDOW) {\n    WINDOW = false;\n  }\n  var WEB_WORKER = !WINDOW && typeof self === 'object';\n  var NODE_JS = !root.JS_SHA3_NO_NODE_JS && typeof process === 'object' && process.versions && process.versions.node;\n  if (NODE_JS) {\n    root = global;\n  } else if (WEB_WORKER) {\n    root = self;\n  }\n  var COMMON_JS = !root.JS_SHA3_NO_COMMON_JS && typeof module === 'object' && module.exports;\n  var AMD = typeof define === 'function' && define.amd;\n  var ARRAY_BUFFER = !root.JS_SHA3_NO_ARRAY_BUFFER && typeof ArrayBuffer !== 'undefined';\n  var HEX_CHARS = '0123456789abcdef'.split('');\n  var SHAKE_PADDING = [31, 7936, 2031616, 520093696];\n  var CSHAKE_PADDING = [4, 1024, 262144, 67108864];\n  var KECCAK_PADDING = [1, 256, 65536, 16777216];\n  var PADDING = [6, 1536, 393216, 100663296];\n  var SHIFT = [0, 8, 16, 24];\n  var RC = [1, 0, 32898, 0, 32906, 2147483648, 2147516416, 2147483648, 32907, 0, 2147483649,\n    0, 2147516545, 2147483648, 32777, 2147483648, 138, 0, 136, 0, 2147516425, 0,\n    2147483658, 0, 2147516555, 0, 139, 2147483648, 32905, 2147483648, 32771,\n    2147483648, 32770, 2147483648, 128, 2147483648, 32778, 0, 2147483658, 2147483648,\n    2147516545, 2147483648, 32896, 2147483648, 2147483649, 0, 2147516424, 2147483648];\n  var BITS = [224, 256, 384, 512];\n  var SHAKE_BITS = [128, 256];\n  var OUTPUT_TYPES = ['hex', 'buffer', 'arrayBuffer', 'array', 'digest'];\n  var CSHAKE_BYTEPAD = {\n    '128': 168,\n    '256': 136\n  };\n\n\n  var isArray = root.JS_SHA3_NO_NODE_JS || !Array.isArray\n    ? function (obj) {\n        return Object.prototype.toString.call(obj) === '[object Array]';\n      }\n    : Array.isArray;\n\n  var isView = (ARRAY_BUFFER && (root.JS_SHA3_NO_ARRAY_BUFFER_IS_VIEW || !ArrayBuffer.isView))\n    ? function (obj) {\n        return typeof obj === 'object' && obj.buffer && obj.buffer.constructor === ArrayBuffer;\n      }\n    : ArrayBuffer.isView;\n\n  // [message: string, isString: bool]\n  var formatMessage = function (message) {\n    var type = typeof message;\n    if (type === 'string') {\n      return [message, true];\n    }\n    if (type !== 'object' || message === null) {\n      throw new Error(INPUT_ERROR);\n    }\n    if (ARRAY_BUFFER && message.constructor === ArrayBuffer) {\n      return [new Uint8Array(message), false];\n    }\n    if (!isArray(message) && !isView(message)) {\n      throw new Error(INPUT_ERROR);\n    }\n    return [message, false];\n  }\n\n  var empty = function (message) {\n    return formatMessage(message)[0].length === 0;\n  };\n\n  var cloneArray = function (array) {\n    var newArray = [];\n    for (var i = 0; i < array.length; ++i) {\n      newArray[i] = array[i];\n    }\n    return newArray;\n  }\n\n  var createOutputMethod = function (bits, padding, outputType) {\n    return function (message) {\n      return new Keccak(bits, padding, bits).update(message)[outputType]();\n    };\n  };\n\n  var createShakeOutputMethod = function (bits, padding, outputType) {\n    return function (message, outputBits) {\n      return new Keccak(bits, padding, outputBits).update(message)[outputType]();\n    };\n  };\n\n  var createCshakeOutputMethod = function (bits, padding, outputType) {\n    return function (message, outputBits, n, s) {\n      return methods['cshake' + bits].update(message, outputBits, n, s)[outputType]();\n    };\n  };\n\n  var createKmacOutputMethod = function (bits, padding, outputType) {\n    return function (key, message, outputBits, s) {\n      return methods['kmac' + bits].update(key, message, outputBits, s)[outputType]();\n    };\n  };\n\n  var createOutputMethods = function (method, createMethod, bits, padding) {\n    for (var i = 0; i < OUTPUT_TYPES.length; ++i) {\n      var type = OUTPUT_TYPES[i];\n      method[type] = createMethod(bits, padding, type);\n    }\n    return method;\n  };\n\n  var createMethod = function (bits, padding) {\n    var method = createOutputMethod(bits, padding, 'hex');\n    method.create = function () {\n      return new Keccak(bits, padding, bits);\n    };\n    method.update = function (message) {\n      return method.create().update(message);\n    };\n    return createOutputMethods(method, createOutputMethod, bits, padding);\n  };\n\n  var createShakeMethod = function (bits, padding) {\n    var method = createShakeOutputMethod(bits, padding, 'hex');\n    method.create = function (outputBits) {\n      return new Keccak(bits, padding, outputBits);\n    };\n    method.update = function (message, outputBits) {\n      return method.create(outputBits).update(message);\n    };\n    return createOutputMethods(method, createShakeOutputMethod, bits, padding);\n  };\n\n  var createCshakeMethod = function (bits, padding) {\n    var w = CSHAKE_BYTEPAD[bits];\n    var method = createCshakeOutputMethod(bits, padding, 'hex');\n    method.create = function (outputBits, n, s) {\n      if (empty(n) && empty(s)) {\n        return methods['shake' + bits].create(outputBits);\n      } else {\n        return new Keccak(bits, padding, outputBits).bytepad([n, s], w);\n      }\n    };\n    method.update = function (message, outputBits, n, s) {\n      return method.create(outputBits, n, s).update(message);\n    };\n    return createOutputMethods(method, createCshakeOutputMethod, bits, padding);\n  };\n\n  var createKmacMethod = function (bits, padding) {\n    var w = CSHAKE_BYTEPAD[bits];\n    var method = createKmacOutputMethod(bits, padding, 'hex');\n    method.create = function (key, outputBits, s) {\n      return new Kmac(bits, padding, outputBits).bytepad(['KMAC', s], w).bytepad([key], w);\n    };\n    method.update = function (key, message, outputBits, s) {\n      return method.create(key, outputBits, s).update(message);\n    };\n    return createOutputMethods(method, createKmacOutputMethod, bits, padding);\n  };\n\n  var algorithms = [\n    { name: 'keccak', padding: KECCAK_PADDING, bits: BITS, createMethod: createMethod },\n    { name: 'sha3', padding: PADDING, bits: BITS, createMethod: createMethod },\n    { name: 'shake', padding: SHAKE_PADDING, bits: SHAKE_BITS, createMethod: createShakeMethod },\n    { name: 'cshake', padding: CSHAKE_PADDING, bits: SHAKE_BITS, createMethod: createCshakeMethod },\n    { name: 'kmac', padding: CSHAKE_PADDING, bits: SHAKE_BITS, createMethod: createKmacMethod }\n  ];\n\n  var methods = {}, methodNames = [];\n\n  for (var i = 0; i < algorithms.length; ++i) {\n    var algorithm = algorithms[i];\n    var bits = algorithm.bits;\n    for (var j = 0; j < bits.length; ++j) {\n      var methodName = algorithm.name + '_' + bits[j];\n      methodNames.push(methodName);\n      methods[methodName] = algorithm.createMethod(bits[j], algorithm.padding);\n      if (algorithm.name !== 'sha3') {\n        var newMethodName = algorithm.name + bits[j];\n        methodNames.push(newMethodName);\n        methods[newMethodName] = methods[methodName];\n      }\n    }\n  }\n\n  function Keccak(bits, padding, outputBits) {\n    this.blocks = [];\n    this.s = [];\n    this.padding = padding;\n    this.outputBits = outputBits;\n    this.reset = true;\n    this.finalized = false;\n    this.block = 0;\n    this.start = 0;\n    this.blockCount = (1600 - (bits << 1)) >> 5;\n    this.byteCount = this.blockCount << 2;\n    this.outputBlocks = outputBits >> 5;\n    this.extraBytes = (outputBits & 31) >> 3;\n\n    for (var i = 0; i < 50; ++i) {\n      this.s[i] = 0;\n    }\n  }\n\n  Keccak.prototype.update = function (message) {\n    if (this.finalized) {\n      throw new Error(FINALIZE_ERROR);\n    }\n    var result = formatMessage(message);\n    message = result[0];\n    var isString = result[1];\n    var blocks = this.blocks, byteCount = this.byteCount, length = message.length,\n      blockCount = this.blockCount, index = 0, s = this.s, i, code;\n\n    while (index < length) {\n      if (this.reset) {\n        this.reset = false;\n        blocks[0] = this.block;\n        for (i = 1; i < blockCount + 1; ++i) {\n          blocks[i] = 0;\n        }\n      }\n      if (isString) {\n        for (i = this.start; index < length && i < byteCount; ++index) {\n          code = message.charCodeAt(index);\n          if (code < 0x80) {\n            blocks[i >> 2] |= code << SHIFT[i++ & 3];\n          } else if (code < 0x800) {\n            blocks[i >> 2] |= (0xc0 | (code >> 6)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n          } else if (code < 0xd800 || code >= 0xe000) {\n            blocks[i >> 2] |= (0xe0 | (code >> 12)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n          } else {\n            code = 0x10000 + (((code & 0x3ff) << 10) | (message.charCodeAt(++index) & 0x3ff));\n            blocks[i >> 2] |= (0xf0 | (code >> 18)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | ((code >> 12) & 0x3f)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n          }\n        }\n      } else {\n        for (i = this.start; index < length && i < byteCount; ++index) {\n          blocks[i >> 2] |= message[index] << SHIFT[i++ & 3];\n        }\n      }\n      this.lastByteIndex = i;\n      if (i >= byteCount) {\n        this.start = i - byteCount;\n        this.block = blocks[blockCount];\n        for (i = 0; i < blockCount; ++i) {\n          s[i] ^= blocks[i];\n        }\n        f(s);\n        this.reset = true;\n      } else {\n        this.start = i;\n      }\n    }\n    return this;\n  };\n\n  Keccak.prototype.encode = function (x, right) {\n    var o = x & 255, n = 1;\n    var bytes = [o];\n    x = x >> 8;\n    o = x & 255;\n    while (o > 0) {\n      bytes.unshift(o);\n      x = x >> 8;\n      o = x & 255;\n      ++n;\n    }\n    if (right) {\n      bytes.push(n);\n    } else {\n      bytes.unshift(n);\n    }\n    this.update(bytes);\n    return bytes.length;\n  };\n\n  Keccak.prototype.encodeString = function (str) {\n    var result = formatMessage(str);\n    str = result[0];\n    var isString = result[1];\n    var bytes = 0, length = str.length;\n    if (isString) {\n      for (var i = 0; i < str.length; ++i) {\n        var code = str.charCodeAt(i);\n        if (code < 0x80) {\n          bytes += 1;\n        } else if (code < 0x800) {\n          bytes += 2;\n        } else if (code < 0xd800 || code >= 0xe000) {\n          bytes += 3;\n        } else {\n          code = 0x10000 + (((code & 0x3ff) << 10) | (str.charCodeAt(++i) & 0x3ff));\n          bytes += 4;\n        }\n      }\n    } else {\n      bytes = length;\n    }\n    bytes += this.encode(bytes * 8);\n    this.update(str);\n    return bytes;\n  };\n\n  Keccak.prototype.bytepad = function (strs, w) {\n    var bytes = this.encode(w);\n    for (var i = 0; i < strs.length; ++i) {\n      bytes += this.encodeString(strs[i]);\n    }\n    var paddingBytes = (w - bytes % w) % w;\n    var zeros = [];\n    zeros.length = paddingBytes;\n    this.update(zeros);\n    return this;\n  };\n\n  Keccak.prototype.finalize = function () {\n    if (this.finalized) {\n      return;\n    }\n    this.finalized = true;\n    var blocks = this.blocks, i = this.lastByteIndex, blockCount = this.blockCount, s = this.s;\n    blocks[i >> 2] |= this.padding[i & 3];\n    if (this.lastByteIndex === this.byteCount) {\n      blocks[0] = blocks[blockCount];\n      for (i = 1; i < blockCount + 1; ++i) {\n        blocks[i] = 0;\n      }\n    }\n    blocks[blockCount - 1] |= 0x80000000;\n    for (i = 0; i < blockCount; ++i) {\n      s[i] ^= blocks[i];\n    }\n    f(s);\n  };\n\n  Keccak.prototype.toString = Keccak.prototype.hex = function () {\n    this.finalize();\n\n    var blockCount = this.blockCount, s = this.s, outputBlocks = this.outputBlocks,\n      extraBytes = this.extraBytes, i = 0, j = 0;\n    var hex = '', block;\n    while (j < outputBlocks) {\n      for (i = 0; i < blockCount && j < outputBlocks; ++i, ++j) {\n        block = s[i];\n        hex += HEX_CHARS[(block >> 4) & 0x0F] + HEX_CHARS[block & 0x0F] +\n          HEX_CHARS[(block >> 12) & 0x0F] + HEX_CHARS[(block >> 8) & 0x0F] +\n          HEX_CHARS[(block >> 20) & 0x0F] + HEX_CHARS[(block >> 16) & 0x0F] +\n          HEX_CHARS[(block >> 28) & 0x0F] + HEX_CHARS[(block >> 24) & 0x0F];\n      }\n      if (j % blockCount === 0) {\n        s = cloneArray(s);\n        f(s);\n        i = 0;\n      }\n    }\n    if (extraBytes) {\n      block = s[i];\n      hex += HEX_CHARS[(block >> 4) & 0x0F] + HEX_CHARS[block & 0x0F];\n      if (extraBytes > 1) {\n        hex += HEX_CHARS[(block >> 12) & 0x0F] + HEX_CHARS[(block >> 8) & 0x0F];\n      }\n      if (extraBytes > 2) {\n        hex += HEX_CHARS[(block >> 20) & 0x0F] + HEX_CHARS[(block >> 16) & 0x0F];\n      }\n    }\n    return hex;\n  };\n\n  Keccak.prototype.arrayBuffer = function () {\n    this.finalize();\n\n    var blockCount = this.blockCount, s = this.s, outputBlocks = this.outputBlocks,\n      extraBytes = this.extraBytes, i = 0, j = 0;\n    var bytes = this.outputBits >> 3;\n    var buffer;\n    if (extraBytes) {\n      buffer = new ArrayBuffer((outputBlocks + 1) << 2);\n    } else {\n      buffer = new ArrayBuffer(bytes);\n    }\n    var array = new Uint32Array(buffer);\n    while (j < outputBlocks) {\n      for (i = 0; i < blockCount && j < outputBlocks; ++i, ++j) {\n        array[j] = s[i];\n      }\n      if (j % blockCount === 0) {\n        s = cloneArray(s);\n        f(s);\n      }\n    }\n    if (extraBytes) {\n      array[j] = s[i];\n      buffer = buffer.slice(0, bytes);\n    }\n    return buffer;\n  };\n\n  Keccak.prototype.buffer = Keccak.prototype.arrayBuffer;\n\n  Keccak.prototype.digest = Keccak.prototype.array = function () {\n    this.finalize();\n\n    var blockCount = this.blockCount, s = this.s, outputBlocks = this.outputBlocks,\n      extraBytes = this.extraBytes, i = 0, j = 0;\n    var array = [], offset, block;\n    while (j < outputBlocks) {\n      for (i = 0; i < blockCount && j < outputBlocks; ++i, ++j) {\n        offset = j << 2;\n        block = s[i];\n        array[offset] = block & 0xFF;\n        array[offset + 1] = (block >> 8) & 0xFF;\n        array[offset + 2] = (block >> 16) & 0xFF;\n        array[offset + 3] = (block >> 24) & 0xFF;\n      }\n      if (j % blockCount === 0) {\n        s = cloneArray(s);\n        f(s);\n      }\n    }\n    if (extraBytes) {\n      offset = j << 2;\n      block = s[i];\n      array[offset] = block & 0xFF;\n      if (extraBytes > 1) {\n        array[offset + 1] = (block >> 8) & 0xFF;\n      }\n      if (extraBytes > 2) {\n        array[offset + 2] = (block >> 16) & 0xFF;\n      }\n    }\n    return array;\n  };\n\n  function Kmac(bits, padding, outputBits) {\n    Keccak.call(this, bits, padding, outputBits);\n  }\n\n  Kmac.prototype = new Keccak();\n\n  Kmac.prototype.finalize = function () {\n    this.encode(this.outputBits, true);\n    return Keccak.prototype.finalize.call(this);\n  };\n\n  var f = function (s) {\n    var h, l, n, c0, c1, c2, c3, c4, c5, c6, c7, c8, c9,\n      b0, b1, b2, b3, b4, b5, b6, b7, b8, b9, b10, b11, b12, b13, b14, b15, b16, b17,\n      b18, b19, b20, b21, b22, b23, b24, b25, b26, b27, b28, b29, b30, b31, b32, b33,\n      b34, b35, b36, b37, b38, b39, b40, b41, b42, b43, b44, b45, b46, b47, b48, b49;\n    for (n = 0; n < 48; n += 2) {\n      c0 = s[0] ^ s[10] ^ s[20] ^ s[30] ^ s[40];\n      c1 = s[1] ^ s[11] ^ s[21] ^ s[31] ^ s[41];\n      c2 = s[2] ^ s[12] ^ s[22] ^ s[32] ^ s[42];\n      c3 = s[3] ^ s[13] ^ s[23] ^ s[33] ^ s[43];\n      c4 = s[4] ^ s[14] ^ s[24] ^ s[34] ^ s[44];\n      c5 = s[5] ^ s[15] ^ s[25] ^ s[35] ^ s[45];\n      c6 = s[6] ^ s[16] ^ s[26] ^ s[36] ^ s[46];\n      c7 = s[7] ^ s[17] ^ s[27] ^ s[37] ^ s[47];\n      c8 = s[8] ^ s[18] ^ s[28] ^ s[38] ^ s[48];\n      c9 = s[9] ^ s[19] ^ s[29] ^ s[39] ^ s[49];\n\n      h = c8 ^ ((c2 << 1) | (c3 >>> 31));\n      l = c9 ^ ((c3 << 1) | (c2 >>> 31));\n      s[0] ^= h;\n      s[1] ^= l;\n      s[10] ^= h;\n      s[11] ^= l;\n      s[20] ^= h;\n      s[21] ^= l;\n      s[30] ^= h;\n      s[31] ^= l;\n      s[40] ^= h;\n      s[41] ^= l;\n      h = c0 ^ ((c4 << 1) | (c5 >>> 31));\n      l = c1 ^ ((c5 << 1) | (c4 >>> 31));\n      s[2] ^= h;\n      s[3] ^= l;\n      s[12] ^= h;\n      s[13] ^= l;\n      s[22] ^= h;\n      s[23] ^= l;\n      s[32] ^= h;\n      s[33] ^= l;\n      s[42] ^= h;\n      s[43] ^= l;\n      h = c2 ^ ((c6 << 1) | (c7 >>> 31));\n      l = c3 ^ ((c7 << 1) | (c6 >>> 31));\n      s[4] ^= h;\n      s[5] ^= l;\n      s[14] ^= h;\n      s[15] ^= l;\n      s[24] ^= h;\n      s[25] ^= l;\n      s[34] ^= h;\n      s[35] ^= l;\n      s[44] ^= h;\n      s[45] ^= l;\n      h = c4 ^ ((c8 << 1) | (c9 >>> 31));\n      l = c5 ^ ((c9 << 1) | (c8 >>> 31));\n      s[6] ^= h;\n      s[7] ^= l;\n      s[16] ^= h;\n      s[17] ^= l;\n      s[26] ^= h;\n      s[27] ^= l;\n      s[36] ^= h;\n      s[37] ^= l;\n      s[46] ^= h;\n      s[47] ^= l;\n      h = c6 ^ ((c0 << 1) | (c1 >>> 31));\n      l = c7 ^ ((c1 << 1) | (c0 >>> 31));\n      s[8] ^= h;\n      s[9] ^= l;\n      s[18] ^= h;\n      s[19] ^= l;\n      s[28] ^= h;\n      s[29] ^= l;\n      s[38] ^= h;\n      s[39] ^= l;\n      s[48] ^= h;\n      s[49] ^= l;\n\n      b0 = s[0];\n      b1 = s[1];\n      b32 = (s[11] << 4) | (s[10] >>> 28);\n      b33 = (s[10] << 4) | (s[11] >>> 28);\n      b14 = (s[20] << 3) | (s[21] >>> 29);\n      b15 = (s[21] << 3) | (s[20] >>> 29);\n      b46 = (s[31] << 9) | (s[30] >>> 23);\n      b47 = (s[30] << 9) | (s[31] >>> 23);\n      b28 = (s[40] << 18) | (s[41] >>> 14);\n      b29 = (s[41] << 18) | (s[40] >>> 14);\n      b20 = (s[2] << 1) | (s[3] >>> 31);\n      b21 = (s[3] << 1) | (s[2] >>> 31);\n      b2 = (s[13] << 12) | (s[12] >>> 20);\n      b3 = (s[12] << 12) | (s[13] >>> 20);\n      b34 = (s[22] << 10) | (s[23] >>> 22);\n      b35 = (s[23] << 10) | (s[22] >>> 22);\n      b16 = (s[33] << 13) | (s[32] >>> 19);\n      b17 = (s[32] << 13) | (s[33] >>> 19);\n      b48 = (s[42] << 2) | (s[43] >>> 30);\n      b49 = (s[43] << 2) | (s[42] >>> 30);\n      b40 = (s[5] << 30) | (s[4] >>> 2);\n      b41 = (s[4] << 30) | (s[5] >>> 2);\n      b22 = (s[14] << 6) | (s[15] >>> 26);\n      b23 = (s[15] << 6) | (s[14] >>> 26);\n      b4 = (s[25] << 11) | (s[24] >>> 21);\n      b5 = (s[24] << 11) | (s[25] >>> 21);\n      b36 = (s[34] << 15) | (s[35] >>> 17);\n      b37 = (s[35] << 15) | (s[34] >>> 17);\n      b18 = (s[45] << 29) | (s[44] >>> 3);\n      b19 = (s[44] << 29) | (s[45] >>> 3);\n      b10 = (s[6] << 28) | (s[7] >>> 4);\n      b11 = (s[7] << 28) | (s[6] >>> 4);\n      b42 = (s[17] << 23) | (s[16] >>> 9);\n      b43 = (s[16] << 23) | (s[17] >>> 9);\n      b24 = (s[26] << 25) | (s[27] >>> 7);\n      b25 = (s[27] << 25) | (s[26] >>> 7);\n      b6 = (s[36] << 21) | (s[37] >>> 11);\n      b7 = (s[37] << 21) | (s[36] >>> 11);\n      b38 = (s[47] << 24) | (s[46] >>> 8);\n      b39 = (s[46] << 24) | (s[47] >>> 8);\n      b30 = (s[8] << 27) | (s[9] >>> 5);\n      b31 = (s[9] << 27) | (s[8] >>> 5);\n      b12 = (s[18] << 20) | (s[19] >>> 12);\n      b13 = (s[19] << 20) | (s[18] >>> 12);\n      b44 = (s[29] << 7) | (s[28] >>> 25);\n      b45 = (s[28] << 7) | (s[29] >>> 25);\n      b26 = (s[38] << 8) | (s[39] >>> 24);\n      b27 = (s[39] << 8) | (s[38] >>> 24);\n      b8 = (s[48] << 14) | (s[49] >>> 18);\n      b9 = (s[49] << 14) | (s[48] >>> 18);\n\n      s[0] = b0 ^ (~b2 & b4);\n      s[1] = b1 ^ (~b3 & b5);\n      s[10] = b10 ^ (~b12 & b14);\n      s[11] = b11 ^ (~b13 & b15);\n      s[20] = b20 ^ (~b22 & b24);\n      s[21] = b21 ^ (~b23 & b25);\n      s[30] = b30 ^ (~b32 & b34);\n      s[31] = b31 ^ (~b33 & b35);\n      s[40] = b40 ^ (~b42 & b44);\n      s[41] = b41 ^ (~b43 & b45);\n      s[2] = b2 ^ (~b4 & b6);\n      s[3] = b3 ^ (~b5 & b7);\n      s[12] = b12 ^ (~b14 & b16);\n      s[13] = b13 ^ (~b15 & b17);\n      s[22] = b22 ^ (~b24 & b26);\n      s[23] = b23 ^ (~b25 & b27);\n      s[32] = b32 ^ (~b34 & b36);\n      s[33] = b33 ^ (~b35 & b37);\n      s[42] = b42 ^ (~b44 & b46);\n      s[43] = b43 ^ (~b45 & b47);\n      s[4] = b4 ^ (~b6 & b8);\n      s[5] = b5 ^ (~b7 & b9);\n      s[14] = b14 ^ (~b16 & b18);\n      s[15] = b15 ^ (~b17 & b19);\n      s[24] = b24 ^ (~b26 & b28);\n      s[25] = b25 ^ (~b27 & b29);\n      s[34] = b34 ^ (~b36 & b38);\n      s[35] = b35 ^ (~b37 & b39);\n      s[44] = b44 ^ (~b46 & b48);\n      s[45] = b45 ^ (~b47 & b49);\n      s[6] = b6 ^ (~b8 & b0);\n      s[7] = b7 ^ (~b9 & b1);\n      s[16] = b16 ^ (~b18 & b10);\n      s[17] = b17 ^ (~b19 & b11);\n      s[26] = b26 ^ (~b28 & b20);\n      s[27] = b27 ^ (~b29 & b21);\n      s[36] = b36 ^ (~b38 & b30);\n      s[37] = b37 ^ (~b39 & b31);\n      s[46] = b46 ^ (~b48 & b40);\n      s[47] = b47 ^ (~b49 & b41);\n      s[8] = b8 ^ (~b0 & b2);\n      s[9] = b9 ^ (~b1 & b3);\n      s[18] = b18 ^ (~b10 & b12);\n      s[19] = b19 ^ (~b11 & b13);\n      s[28] = b28 ^ (~b20 & b22);\n      s[29] = b29 ^ (~b21 & b23);\n      s[38] = b38 ^ (~b30 & b32);\n      s[39] = b39 ^ (~b31 & b33);\n      s[48] = b48 ^ (~b40 & b42);\n      s[49] = b49 ^ (~b41 & b43);\n\n      s[0] ^= RC[n];\n      s[1] ^= RC[n + 1];\n    }\n  };\n\n  if (COMMON_JS) {\n    module.exports = methods;\n  } else {\n    for (i = 0; i < methodNames.length; ++i) {\n      root[methodNames[i]] = methods[methodNames[i]];\n    }\n    if (AMD) {\n      define(function () {\n        return methods;\n      });\n    }\n  }\n})();\n","'use strict';\nconst isOptionObject = require('is-plain-obj');\n\nconst {hasOwnProperty} = Object.prototype;\nconst {propertyIsEnumerable} = Object;\nconst defineProperty = (object, name, value) => Object.defineProperty(object, name, {\n\tvalue,\n\twritable: true,\n\tenumerable: true,\n\tconfigurable: true\n});\n\nconst globalThis = this;\nconst defaultMergeOptions = {\n\tconcatArrays: false,\n\tignoreUndefined: false\n};\n\nconst getEnumerableOwnPropertyKeys = value => {\n\tconst keys = [];\n\n\tfor (const key in value) {\n\t\tif (hasOwnProperty.call(value, key)) {\n\t\t\tkeys.push(key);\n\t\t}\n\t}\n\n\t/* istanbul ignore else  */\n\tif (Object.getOwnPropertySymbols) {\n\t\tconst symbols = Object.getOwnPropertySymbols(value);\n\n\t\tfor (const symbol of symbols) {\n\t\t\tif (propertyIsEnumerable.call(value, symbol)) {\n\t\t\t\tkeys.push(symbol);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn keys;\n};\n\nfunction clone(value) {\n\tif (Array.isArray(value)) {\n\t\treturn cloneArray(value);\n\t}\n\n\tif (isOptionObject(value)) {\n\t\treturn cloneOptionObject(value);\n\t}\n\n\treturn value;\n}\n\nfunction cloneArray(array) {\n\tconst result = array.slice(0, 0);\n\n\tgetEnumerableOwnPropertyKeys(array).forEach(key => {\n\t\tdefineProperty(result, key, clone(array[key]));\n\t});\n\n\treturn result;\n}\n\nfunction cloneOptionObject(object) {\n\tconst result = Object.getPrototypeOf(object) === null ? Object.create(null) : {};\n\n\tgetEnumerableOwnPropertyKeys(object).forEach(key => {\n\t\tdefineProperty(result, key, clone(object[key]));\n\t});\n\n\treturn result;\n}\n\n/**\n * @param {*} merged already cloned\n * @param {*} source something to merge\n * @param {string[]} keys keys to merge\n * @param {Object} config Config Object\n * @returns {*} cloned Object\n */\nconst mergeKeys = (merged, source, keys, config) => {\n\tkeys.forEach(key => {\n\t\tif (typeof source[key] === 'undefined' && config.ignoreUndefined) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Do not recurse into prototype chain of merged\n\t\tif (key in merged && merged[key] !== Object.getPrototypeOf(merged)) {\n\t\t\tdefineProperty(merged, key, merge(merged[key], source[key], config));\n\t\t} else {\n\t\t\tdefineProperty(merged, key, clone(source[key]));\n\t\t}\n\t});\n\n\treturn merged;\n};\n\n/**\n * @param {*} merged already cloned\n * @param {*} source something to merge\n * @param {Object} config Config Object\n * @returns {*} cloned Object\n *\n * see [Array.prototype.concat ( ...arguments )](http://www.ecma-international.org/ecma-262/6.0/#sec-array.prototype.concat)\n */\nconst concatArrays = (merged, source, config) => {\n\tlet result = merged.slice(0, 0);\n\tlet resultIndex = 0;\n\n\t[merged, source].forEach(array => {\n\t\tconst indices = [];\n\n\t\t// `result.concat(array)` with cloning\n\t\tfor (let k = 0; k < array.length; k++) {\n\t\t\tif (!hasOwnProperty.call(array, k)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tindices.push(String(k));\n\n\t\t\tif (array === merged) {\n\t\t\t\t// Already cloned\n\t\t\t\tdefineProperty(result, resultIndex++, array[k]);\n\t\t\t} else {\n\t\t\t\tdefineProperty(result, resultIndex++, clone(array[k]));\n\t\t\t}\n\t\t}\n\n\t\t// Merge non-index keys\n\t\tresult = mergeKeys(result, array, getEnumerableOwnPropertyKeys(array).filter(key => !indices.includes(key)), config);\n\t});\n\n\treturn result;\n};\n\n/**\n * @param {*} merged already cloned\n * @param {*} source something to merge\n * @param {Object} config Config Object\n * @returns {*} cloned Object\n */\nfunction merge(merged, source, config) {\n\tif (config.concatArrays && Array.isArray(merged) && Array.isArray(source)) {\n\t\treturn concatArrays(merged, source, config);\n\t}\n\n\tif (!isOptionObject(source) || !isOptionObject(merged)) {\n\t\treturn clone(source);\n\t}\n\n\treturn mergeKeys(merged, source, getEnumerableOwnPropertyKeys(source), config);\n}\n\nmodule.exports = function (...options) {\n\tconst config = merge(clone(defaultMergeOptions), (this !== globalThis && this) || {}, defaultMergeOptions);\n\tlet merged = {_: {}};\n\n\tfor (const option of options) {\n\t\tif (option === undefined) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (!isOptionObject(option)) {\n\t\t\tthrow new TypeError('`' + option + '` is not an Option Object');\n\t\t}\n\n\t\tmerged = merge(merged, {_: option}, config);\n\t}\n\n\treturn merged._;\n};\n","/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar w = d * 7;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function (val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isFinite(val)) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^(-?(?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'weeks':\n    case 'week':\n    case 'w':\n      return n * w;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (msAbs >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (msAbs >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (msAbs >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return plural(ms, msAbs, d, 'day');\n  }\n  if (msAbs >= h) {\n    return plural(ms, msAbs, h, 'hour');\n  }\n  if (msAbs >= m) {\n    return plural(ms, msAbs, m, 'minute');\n  }\n  if (msAbs >= s) {\n    return plural(ms, msAbs, s, 'second');\n  }\n  return ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, msAbs, n, name) {\n  var isPlural = msAbs >= n * 1.5;\n  return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');\n}\n","module.exports = require('./lib/murmurHash3js');\n","/* jshint -W086: true */\n// +----------------------------------------------------------------------+\n// | murmurHash3js.js v3.0.1 // https://github.com/pid/murmurHash3js\n// | A javascript implementation of MurmurHash3's x86 hashing algorithms. |\n// |----------------------------------------------------------------------|\n// | Copyright (c) 2012-2015 Karan Lyons                                       |\n// | https://github.com/karanlyons/murmurHash3.js/blob/c1778f75792abef7bdd74bc85d2d4e1a3d25cfe9/murmurHash3.js |\n// | Freely distributable under the MIT license.                          |\n// +----------------------------------------------------------------------+\n\n;(function (root, undefined) {\n    'use strict';\n\n    // Create a local object that'll be exported or referenced globally.\n    var library = {\n        'version': '3.0.0',\n        'x86': {},\n        'x64': {},\n        'inputValidation': true\n    };\n\n    // PRIVATE FUNCTIONS\n    // -----------------\n\n    function _validBytes(bytes) {\n        // check the input is an array or a typed array\n        if (!Array.isArray(bytes) && !ArrayBuffer.isView(bytes)) {\n            return false;\n        }\n\n        // check all bytes are actually bytes\n        for (var i = 0; i < bytes.length; i++) {\n            if (!Number.isInteger(bytes[i]) || bytes[i] < 0 || bytes[i] > 255) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    function _x86Multiply(m, n) {\n        //\n        // Given two 32bit ints, returns the two multiplied together as a\n        // 32bit int.\n        //\n\n        return ((m & 0xffff) * n) + ((((m >>> 16) * n) & 0xffff) << 16);\n    }\n\n    function _x86Rotl(m, n) {\n        //\n        // Given a 32bit int and an int representing a number of bit positions,\n        // returns the 32bit int rotated left by that number of positions.\n        //\n\n        return (m << n) | (m >>> (32 - n));\n    }\n\n    function _x86Fmix(h) {\n        //\n        // Given a block, returns murmurHash3's final x86 mix of that block.\n        //\n\n        h ^= h >>> 16;\n        h = _x86Multiply(h, 0x85ebca6b);\n        h ^= h >>> 13;\n        h = _x86Multiply(h, 0xc2b2ae35);\n        h ^= h >>> 16;\n\n        return h;\n    }\n\n    function _x64Add(m, n) {\n        //\n        // Given two 64bit ints (as an array of two 32bit ints) returns the two\n        // added together as a 64bit int (as an array of two 32bit ints).\n        //\n\n        m = [m[0] >>> 16, m[0] & 0xffff, m[1] >>> 16, m[1] & 0xffff];\n        n = [n[0] >>> 16, n[0] & 0xffff, n[1] >>> 16, n[1] & 0xffff];\n        var o = [0, 0, 0, 0];\n\n        o[3] += m[3] + n[3];\n        o[2] += o[3] >>> 16;\n        o[3] &= 0xffff;\n\n        o[2] += m[2] + n[2];\n        o[1] += o[2] >>> 16;\n        o[2] &= 0xffff;\n\n        o[1] += m[1] + n[1];\n        o[0] += o[1] >>> 16;\n        o[1] &= 0xffff;\n\n        o[0] += m[0] + n[0];\n        o[0] &= 0xffff;\n\n        return [(o[0] << 16) | o[1], (o[2] << 16) | o[3]];\n    }\n\n    function _x64Multiply(m, n) {\n        //\n        // Given two 64bit ints (as an array of two 32bit ints) returns the two\n        // multiplied together as a 64bit int (as an array of two 32bit ints).\n        //\n\n        m = [m[0] >>> 16, m[0] & 0xffff, m[1] >>> 16, m[1] & 0xffff];\n        n = [n[0] >>> 16, n[0] & 0xffff, n[1] >>> 16, n[1] & 0xffff];\n        var o = [0, 0, 0, 0];\n\n        o[3] += m[3] * n[3];\n        o[2] += o[3] >>> 16;\n        o[3] &= 0xffff;\n\n        o[2] += m[2] * n[3];\n        o[1] += o[2] >>> 16;\n        o[2] &= 0xffff;\n\n        o[2] += m[3] * n[2];\n        o[1] += o[2] >>> 16;\n        o[2] &= 0xffff;\n\n        o[1] += m[1] * n[3];\n        o[0] += o[1] >>> 16;\n        o[1] &= 0xffff;\n\n        o[1] += m[2] * n[2];\n        o[0] += o[1] >>> 16;\n        o[1] &= 0xffff;\n\n        o[1] += m[3] * n[1];\n        o[0] += o[1] >>> 16;\n        o[1] &= 0xffff;\n\n        o[0] += (m[0] * n[3]) + (m[1] * n[2]) + (m[2] * n[1]) + (m[3] * n[0]);\n        o[0] &= 0xffff;\n\n        return [(o[0] << 16) | o[1], (o[2] << 16) | o[3]];\n    }\n\n    function _x64Rotl(m, n) {\n        //\n        // Given a 64bit int (as an array of two 32bit ints) and an int\n        // representing a number of bit positions, returns the 64bit int (as an\n        // array of two 32bit ints) rotated left by that number of positions.\n        //\n\n        n %= 64;\n\n        if (n === 32) {\n            return [m[1], m[0]];\n        } else if (n < 32) {\n            return [(m[0] << n) | (m[1] >>> (32 - n)), (m[1] << n) | (m[0] >>> (32 - n))];\n        } else {\n            n -= 32;\n            return [(m[1] << n) | (m[0] >>> (32 - n)), (m[0] << n) | (m[1] >>> (32 - n))];\n        }\n    }\n\n    function _x64LeftShift(m, n) {\n        //\n        // Given a 64bit int (as an array of two 32bit ints) and an int\n        // representing a number of bit positions, returns the 64bit int (as an\n        // array of two 32bit ints) shifted left by that number of positions.\n        //\n\n        n %= 64;\n\n        if (n === 0) {\n            return m;\n        } else if (n < 32) {\n            return [(m[0] << n) | (m[1] >>> (32 - n)), m[1] << n];\n        } else {\n            return [m[1] << (n - 32), 0];\n        }\n    }\n\n    function _x64Xor(m, n) {\n        //\n        // Given two 64bit ints (as an array of two 32bit ints) returns the two\n        // xored together as a 64bit int (as an array of two 32bit ints).\n        //\n\n        return [m[0] ^ n[0], m[1] ^ n[1]];\n    }\n\n    function _x64Fmix(h) {\n        //\n        // Given a block, returns murmurHash3's final x64 mix of that block.\n        // (`[0, h[0] >>> 1]` is a 33 bit unsigned right shift. This is the\n        // only place where we need to right shift 64bit ints.)\n        //\n\n        h = _x64Xor(h, [0, h[0] >>> 1]);\n        h = _x64Multiply(h, [0xff51afd7, 0xed558ccd]);\n        h = _x64Xor(h, [0, h[0] >>> 1]);\n        h = _x64Multiply(h, [0xc4ceb9fe, 0x1a85ec53]);\n        h = _x64Xor(h, [0, h[0] >>> 1]);\n\n        return h;\n    }\n\n    // PUBLIC FUNCTIONS\n    // ----------------\n\n    library.x86.hash32 = function (bytes, seed) {\n        //\n        // Given a string and an optional seed as an int, returns a 32 bit hash\n        // using the x86 flavor of MurmurHash3, as an unsigned int.\n        //\n        if (library.inputValidation && !_validBytes(bytes)) {\n            return undefined;\n        }\n        seed = seed || 0;\n\n        var remainder = bytes.length % 4;\n        var blocks = bytes.length - remainder;\n\n        var h1 = seed;\n\n        var k1 = 0;\n\n        var c1 = 0xcc9e2d51;\n        var c2 = 0x1b873593;\n\n        for (var i = 0; i < blocks; i = i + 4) {\n            k1 = (bytes[i]) | (bytes[i + 1] << 8) | (bytes[i + 2] << 16) | (bytes[i + 3] << 24);\n\n            k1 = _x86Multiply(k1, c1);\n            k1 = _x86Rotl(k1, 15);\n            k1 = _x86Multiply(k1, c2);\n\n            h1 ^= k1;\n            h1 = _x86Rotl(h1, 13);\n            h1 = _x86Multiply(h1, 5) + 0xe6546b64;\n        }\n\n        k1 = 0;\n\n        switch (remainder) {\n            case 3:\n                k1 ^= bytes[i + 2] << 16;\n\n            case 2:\n                k1 ^= bytes[i + 1] << 8;\n\n            case 1:\n                k1 ^= bytes[i];\n                k1 = _x86Multiply(k1, c1);\n                k1 = _x86Rotl(k1, 15);\n                k1 = _x86Multiply(k1, c2);\n                h1 ^= k1;\n        }\n\n        h1 ^= bytes.length;\n        h1 = _x86Fmix(h1);\n\n        return h1 >>> 0;\n    };\n\n    library.x86.hash128 = function (bytes, seed) {\n        //\n        // Given a string and an optional seed as an int, returns a 128 bit\n        // hash using the x86 flavor of MurmurHash3, as an unsigned hex.\n        //\n        if (library.inputValidation && !_validBytes(bytes)) {\n            return undefined;\n        }\n\n        seed = seed || 0;\n        var remainder = bytes.length % 16;\n        var blocks = bytes.length - remainder;\n\n        var h1 = seed;\n        var h2 = seed;\n        var h3 = seed;\n        var h4 = seed;\n\n        var k1 = 0;\n        var k2 = 0;\n        var k3 = 0;\n        var k4 = 0;\n\n        var c1 = 0x239b961b;\n        var c2 = 0xab0e9789;\n        var c3 = 0x38b34ae5;\n        var c4 = 0xa1e38b93;\n\n        for (var i = 0; i < blocks; i = i + 16) {\n            k1 = (bytes[i]) | (bytes[i + 1] << 8) | (bytes[i + 2] << 16) | (bytes[i + 3] << 24);\n            k2 = (bytes[i + 4]) | (bytes[i + 5] << 8) | (bytes[i + 6] << 16) | (bytes[i + 7] << 24);\n            k3 = (bytes[i + 8]) | (bytes[i + 9] << 8) | (bytes[i + 10] << 16) | (bytes[i + 11] << 24);\n            k4 = (bytes[i + 12]) | (bytes[i + 13] << 8) | (bytes[i + 14] << 16) | (bytes[i + 15] << 24);\n\n            k1 = _x86Multiply(k1, c1);\n            k1 = _x86Rotl(k1, 15);\n            k1 = _x86Multiply(k1, c2);\n            h1 ^= k1;\n\n            h1 = _x86Rotl(h1, 19);\n            h1 += h2;\n            h1 = _x86Multiply(h1, 5) + 0x561ccd1b;\n\n            k2 = _x86Multiply(k2, c2);\n            k2 = _x86Rotl(k2, 16);\n            k2 = _x86Multiply(k2, c3);\n            h2 ^= k2;\n\n            h2 = _x86Rotl(h2, 17);\n            h2 += h3;\n            h2 = _x86Multiply(h2, 5) + 0x0bcaa747;\n\n            k3 = _x86Multiply(k3, c3);\n            k3 = _x86Rotl(k3, 17);\n            k3 = _x86Multiply(k3, c4);\n            h3 ^= k3;\n\n            h3 = _x86Rotl(h3, 15);\n            h3 += h4;\n            h3 = _x86Multiply(h3, 5) + 0x96cd1c35;\n\n            k4 = _x86Multiply(k4, c4);\n            k4 = _x86Rotl(k4, 18);\n            k4 = _x86Multiply(k4, c1);\n            h4 ^= k4;\n\n            h4 = _x86Rotl(h4, 13);\n            h4 += h1;\n            h4 = _x86Multiply(h4, 5) + 0x32ac3b17;\n        }\n\n        k1 = 0;\n        k2 = 0;\n        k3 = 0;\n        k4 = 0;\n\n        switch (remainder) {\n            case 15:\n                k4 ^= bytes[i + 14] << 16;\n\n            case 14:\n                k4 ^= bytes[i + 13] << 8;\n\n            case 13:\n                k4 ^= bytes[i + 12];\n                k4 = _x86Multiply(k4, c4);\n                k4 = _x86Rotl(k4, 18);\n                k4 = _x86Multiply(k4, c1);\n                h4 ^= k4;\n\n            case 12:\n                k3 ^= bytes[i + 11] << 24;\n\n            case 11:\n                k3 ^= bytes[i + 10] << 16;\n\n            case 10:\n                k3 ^= bytes[i + 9] << 8;\n\n            case 9:\n                k3 ^= bytes[i + 8];\n                k3 = _x86Multiply(k3, c3);\n                k3 = _x86Rotl(k3, 17);\n                k3 = _x86Multiply(k3, c4);\n                h3 ^= k3;\n\n            case 8:\n                k2 ^= bytes[i + 7] << 24;\n\n            case 7:\n                k2 ^= bytes[i + 6] << 16;\n\n            case 6:\n                k2 ^= bytes[i + 5] << 8;\n\n            case 5:\n                k2 ^= bytes[i + 4];\n                k2 = _x86Multiply(k2, c2);\n                k2 = _x86Rotl(k2, 16);\n                k2 = _x86Multiply(k2, c3);\n                h2 ^= k2;\n\n            case 4:\n                k1 ^= bytes[i + 3] << 24;\n\n            case 3:\n                k1 ^= bytes[i + 2] << 16;\n\n            case 2:\n                k1 ^= bytes[i + 1] << 8;\n\n            case 1:\n                k1 ^= bytes[i];\n                k1 = _x86Multiply(k1, c1);\n                k1 = _x86Rotl(k1, 15);\n                k1 = _x86Multiply(k1, c2);\n                h1 ^= k1;\n        }\n\n        h1 ^= bytes.length;\n        h2 ^= bytes.length;\n        h3 ^= bytes.length;\n        h4 ^= bytes.length;\n\n        h1 += h2;\n        h1 += h3;\n        h1 += h4;\n        h2 += h1;\n        h3 += h1;\n        h4 += h1;\n\n        h1 = _x86Fmix(h1);\n        h2 = _x86Fmix(h2);\n        h3 = _x86Fmix(h3);\n        h4 = _x86Fmix(h4);\n\n        h1 += h2;\n        h1 += h3;\n        h1 += h4;\n        h2 += h1;\n        h3 += h1;\n        h4 += h1;\n\n        return (\"00000000\" + (h1 >>> 0).toString(16)).slice(-8) + (\"00000000\" + (h2 >>> 0).toString(16)).slice(-8) + (\"00000000\" + (h3 >>> 0).toString(16)).slice(-8) + (\"00000000\" + (h4 >>> 0).toString(16)).slice(-8);\n    };\n\n    library.x64.hash128 = function (bytes, seed) {\n        //\n        // Given a string and an optional seed as an int, returns a 128 bit\n        // hash using the x64 flavor of MurmurHash3, as an unsigned hex.\n        //\n        if (library.inputValidation && !_validBytes(bytes)) {\n            return undefined;\n        }\n        seed = seed || 0;\n\n        var remainder = bytes.length % 16;\n        var blocks = bytes.length - remainder;\n\n        var h1 = [0, seed];\n        var h2 = [0, seed];\n\n        var k1 = [0, 0];\n        var k2 = [0, 0];\n\n        var c1 = [0x87c37b91, 0x114253d5];\n        var c2 = [0x4cf5ad43, 0x2745937f];\n\n        for (var i = 0; i < blocks; i = i + 16) {\n            k1 = [(bytes[i + 4]) | (bytes[i + 5] << 8) | (bytes[i + 6] << 16) | (bytes[i + 7] << 24), (bytes[i]) |\n                (bytes[i + 1] << 8) | (bytes[i + 2] << 16) | (bytes[i + 3] << 24)];\n            k2 = [(bytes[i + 12]) | (bytes[i + 13] << 8) | (bytes[i + 14] << 16) | (bytes[i + 15] << 24), (bytes[i + 8]) |\n                (bytes[i + 9] << 8) | (bytes[i + 10] << 16) | (bytes[i + 11] << 24)];\n\n            k1 = _x64Multiply(k1, c1);\n            k1 = _x64Rotl(k1, 31);\n            k1 = _x64Multiply(k1, c2);\n            h1 = _x64Xor(h1, k1);\n\n            h1 = _x64Rotl(h1, 27);\n            h1 = _x64Add(h1, h2);\n            h1 = _x64Add(_x64Multiply(h1, [0, 5]), [0, 0x52dce729]);\n\n            k2 = _x64Multiply(k2, c2);\n            k2 = _x64Rotl(k2, 33);\n            k2 = _x64Multiply(k2, c1);\n            h2 = _x64Xor(h2, k2);\n\n            h2 = _x64Rotl(h2, 31);\n            h2 = _x64Add(h2, h1);\n            h2 = _x64Add(_x64Multiply(h2, [0, 5]), [0, 0x38495ab5]);\n        }\n\n        k1 = [0, 0];\n        k2 = [0, 0];\n\n        switch (remainder) {\n            case 15:\n                k2 = _x64Xor(k2, _x64LeftShift([0, bytes[i + 14]], 48));\n\n            case 14:\n                k2 = _x64Xor(k2, _x64LeftShift([0, bytes[i + 13]], 40));\n\n            case 13:\n                k2 = _x64Xor(k2, _x64LeftShift([0, bytes[i + 12]], 32));\n\n            case 12:\n                k2 = _x64Xor(k2, _x64LeftShift([0, bytes[i + 11]], 24));\n\n            case 11:\n                k2 = _x64Xor(k2, _x64LeftShift([0, bytes[i + 10]], 16));\n\n            case 10:\n                k2 = _x64Xor(k2, _x64LeftShift([0, bytes[i + 9]], 8));\n\n            case 9:\n                k2 = _x64Xor(k2, [0, bytes[i + 8]]);\n                k2 = _x64Multiply(k2, c2);\n                k2 = _x64Rotl(k2, 33);\n                k2 = _x64Multiply(k2, c1);\n                h2 = _x64Xor(h2, k2);\n\n            case 8:\n                k1 = _x64Xor(k1, _x64LeftShift([0, bytes[i + 7]], 56));\n\n            case 7:\n                k1 = _x64Xor(k1, _x64LeftShift([0, bytes[i + 6]], 48));\n\n            case 6:\n                k1 = _x64Xor(k1, _x64LeftShift([0, bytes[i + 5]], 40));\n\n            case 5:\n                k1 = _x64Xor(k1, _x64LeftShift([0, bytes[i + 4]], 32));\n\n            case 4:\n                k1 = _x64Xor(k1, _x64LeftShift([0, bytes[i + 3]], 24));\n\n            case 3:\n                k1 = _x64Xor(k1, _x64LeftShift([0, bytes[i + 2]], 16));\n\n            case 2:\n                k1 = _x64Xor(k1, _x64LeftShift([0, bytes[i + 1]], 8));\n\n            case 1:\n                k1 = _x64Xor(k1, [0, bytes[i]]);\n                k1 = _x64Multiply(k1, c1);\n                k1 = _x64Rotl(k1, 31);\n                k1 = _x64Multiply(k1, c2);\n                h1 = _x64Xor(h1, k1);\n        }\n\n        h1 = _x64Xor(h1, [0, bytes.length]);\n        h2 = _x64Xor(h2, [0, bytes.length]);\n\n        h1 = _x64Add(h1, h2);\n        h2 = _x64Add(h2, h1);\n\n        h1 = _x64Fmix(h1);\n        h2 = _x64Fmix(h2);\n\n        h1 = _x64Add(h1, h2);\n        h2 = _x64Add(h2, h1);\n\n        return (\"00000000\" + (h1[0] >>> 0).toString(16)).slice(-8) + (\"00000000\" + (h1[1] >>> 0).toString(16)).slice(-8) + (\"00000000\" + (h2[0] >>> 0).toString(16)).slice(-8) + (\"00000000\" + (h2[1] >>> 0).toString(16)).slice(-8);\n    };\n\n    // INITIALIZATION\n    // --------------\n\n    // Export murmurHash3 for CommonJS, either as an AMD module or just as part\n    // of the global object.\n    if (typeof exports !== 'undefined') {\n\n        if (typeof module !== 'undefined' && module.exports) {\n            exports = module.exports = library;\n        }\n\n        exports.murmurHash3 = library;\n\n    } else if (typeof define === 'function' && define.amd) {\n\n        define([], function () {\n            return library;\n        });\n    } else {\n\n        // Use murmurHash3.noConflict to restore `murmurHash3` back to its\n        // original value. Returns a reference to the library object, to allow\n        // it to be used under a different name.\n        library._murmurHash3 = root.murmurHash3;\n\n        library.noConflict = function () {\n            root.murmurHash3 = library._murmurHash3;\n            library._murmurHash3 = undefined;\n            library.noConflict = undefined;\n\n            return library;\n        };\n\n        root.murmurHash3 = library;\n    }\n})(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var Netmask, atob, chr, chr0, chrA, chra, ip2long, long2ip;\n\n  long2ip = function(long) {\n    var a, b, c, d;\n    a = (long & (0xff << 24)) >>> 24;\n    b = (long & (0xff << 16)) >>> 16;\n    c = (long & (0xff << 8)) >>> 8;\n    d = long & 0xff;\n    return [a, b, c, d].join('.');\n  };\n\n  ip2long = function(ip) {\n    var b, c, i, j, n, ref;\n    b = [];\n    for (i = j = 0; j <= 3; i = ++j) {\n      if (ip.length === 0) {\n        break;\n      }\n      if (i > 0) {\n        if (ip[0] !== '.') {\n          throw new Error('Invalid IP');\n        }\n        ip = ip.substring(1);\n      }\n      ref = atob(ip), n = ref[0], c = ref[1];\n      ip = ip.substring(c);\n      b.push(n);\n    }\n    if (ip.length !== 0) {\n      throw new Error('Invalid IP');\n    }\n    switch (b.length) {\n      case 1:\n        if (b[0] > 0xFFFFFFFF) {\n          throw new Error('Invalid IP');\n        }\n        return b[0] >>> 0;\n      case 2:\n        if (b[0] > 0xFF || b[1] > 0xFFFFFF) {\n          throw new Error('Invalid IP');\n        }\n        return (b[0] << 24 | b[1]) >>> 0;\n      case 3:\n        if (b[0] > 0xFF || b[1] > 0xFF || b[2] > 0xFFFF) {\n          throw new Error('Invalid IP');\n        }\n        return (b[0] << 24 | b[1] << 16 | b[2]) >>> 0;\n      case 4:\n        if (b[0] > 0xFF || b[1] > 0xFF || b[2] > 0xFF || b[3] > 0xFF) {\n          throw new Error('Invalid IP');\n        }\n        return (b[0] << 24 | b[1] << 16 | b[2] << 8 | b[3]) >>> 0;\n      default:\n        throw new Error('Invalid IP');\n    }\n  };\n\n  chr = function(b) {\n    return b.charCodeAt(0);\n  };\n\n  chr0 = chr('0');\n\n  chra = chr('a');\n\n  chrA = chr('A');\n\n  atob = function(s) {\n    var base, dmax, i, n, start;\n    n = 0;\n    base = 10;\n    dmax = '9';\n    i = 0;\n    if (s.length > 1 && s[i] === '0') {\n      if (s[i + 1] === 'x' || s[i + 1] === 'X') {\n        i += 2;\n        base = 16;\n      } else if ('0' <= s[i + 1] && s[i + 1] <= '9') {\n        i++;\n        base = 8;\n        dmax = '7';\n      }\n    }\n    start = i;\n    while (i < s.length) {\n      if ('0' <= s[i] && s[i] <= dmax) {\n        n = (n * base + (chr(s[i]) - chr0)) >>> 0;\n      } else if (base === 16) {\n        if ('a' <= s[i] && s[i] <= 'f') {\n          n = (n * base + (10 + chr(s[i]) - chra)) >>> 0;\n        } else if ('A' <= s[i] && s[i] <= 'F') {\n          n = (n * base + (10 + chr(s[i]) - chrA)) >>> 0;\n        } else {\n          break;\n        }\n      } else {\n        break;\n      }\n      if (n > 0xFFFFFFFF) {\n        throw new Error('too large');\n      }\n      i++;\n    }\n    if (i === start) {\n      throw new Error('empty octet');\n    }\n    return [n, i];\n  };\n\n  Netmask = (function() {\n    function Netmask(net, mask) {\n      var error, i, j, ref;\n      if (typeof net !== 'string') {\n        throw new Error(\"Missing `net' parameter\");\n      }\n      if (!mask) {\n        ref = net.split('/', 2), net = ref[0], mask = ref[1];\n      }\n      if (!mask) {\n        mask = 32;\n      }\n      if (typeof mask === 'string' && mask.indexOf('.') > -1) {\n        try {\n          this.maskLong = ip2long(mask);\n        } catch (error1) {\n          error = error1;\n          throw new Error(\"Invalid mask: \" + mask);\n        }\n        for (i = j = 32; j >= 0; i = --j) {\n          if (this.maskLong === (0xffffffff << (32 - i)) >>> 0) {\n            this.bitmask = i;\n            break;\n          }\n        }\n      } else if (mask || mask === 0) {\n        this.bitmask = parseInt(mask, 10);\n        this.maskLong = 0;\n        if (this.bitmask > 0) {\n          this.maskLong = (0xffffffff << (32 - this.bitmask)) >>> 0;\n        }\n      } else {\n        throw new Error(\"Invalid mask: empty\");\n      }\n      try {\n        this.netLong = (ip2long(net) & this.maskLong) >>> 0;\n      } catch (error1) {\n        error = error1;\n        throw new Error(\"Invalid net address: \" + net);\n      }\n      if (!(this.bitmask <= 32)) {\n        throw new Error(\"Invalid mask for ip4: \" + mask);\n      }\n      this.size = Math.pow(2, 32 - this.bitmask);\n      this.base = long2ip(this.netLong);\n      this.mask = long2ip(this.maskLong);\n      this.hostmask = long2ip(~this.maskLong);\n      this.first = this.bitmask <= 30 ? long2ip(this.netLong + 1) : this.base;\n      this.last = this.bitmask <= 30 ? long2ip(this.netLong + this.size - 2) : long2ip(this.netLong + this.size - 1);\n      this.broadcast = this.bitmask <= 30 ? long2ip(this.netLong + this.size - 1) : void 0;\n    }\n\n    Netmask.prototype.contains = function(ip) {\n      if (typeof ip === 'string' && (ip.indexOf('/') > 0 || ip.split('.').length !== 4)) {\n        ip = new Netmask(ip);\n      }\n      if (ip instanceof Netmask) {\n        return this.contains(ip.base) && this.contains(ip.broadcast || ip.last);\n      } else {\n        return (ip2long(ip) & this.maskLong) >>> 0 === (this.netLong & this.maskLong) >>> 0;\n      }\n    };\n\n    Netmask.prototype.next = function(count) {\n      if (count == null) {\n        count = 1;\n      }\n      return new Netmask(long2ip(this.netLong + (this.size * count)), this.mask);\n    };\n\n    Netmask.prototype.forEach = function(fn) {\n      var index, lastLong, long;\n      long = ip2long(this.first);\n      lastLong = ip2long(this.last);\n      index = 0;\n      while (long <= lastLong) {\n        fn(long2ip(long), long, index);\n        index++;\n        long++;\n      }\n    };\n\n    Netmask.prototype.toString = function() {\n      return this.base + \"/\" + this.bitmask;\n    };\n\n    return Netmask;\n\n  })();\n\n  exports.ip2long = ip2long;\n\n  exports.long2ip = long2ip;\n\n  exports.Netmask = Netmask;\n\n}).call(this);\n","// full library entry point.\n\n\"use strict\";\nmodule.exports = require(\"./src/index\");\n","\"use strict\";\nmodule.exports = common;\n\nvar commonRe = /\\/|\\./;\n\n/**\n * Provides common type definitions.\n * Can also be used to provide additional google types or your own custom types.\n * @param {string} name Short name as in `google/protobuf/[name].proto` or full file name\n * @param {Object.<string,*>} json JSON definition within `google.protobuf` if a short name, otherwise the file's root definition\n * @returns {undefined}\n * @property {INamespace} google/protobuf/any.proto Any\n * @property {INamespace} google/protobuf/duration.proto Duration\n * @property {INamespace} google/protobuf/empty.proto Empty\n * @property {INamespace} google/protobuf/field_mask.proto FieldMask\n * @property {INamespace} google/protobuf/struct.proto Struct, Value, NullValue and ListValue\n * @property {INamespace} google/protobuf/timestamp.proto Timestamp\n * @property {INamespace} google/protobuf/wrappers.proto Wrappers\n * @example\n * // manually provides descriptor.proto (assumes google/protobuf/ namespace and .proto extension)\n * protobuf.common(\"descriptor\", descriptorJson);\n *\n * // manually provides a custom definition (uses my.foo namespace)\n * protobuf.common(\"my/foo/bar.proto\", myFooBarJson);\n */\nfunction common(name, json) {\n    if (!commonRe.test(name)) {\n        name = \"google/protobuf/\" + name + \".proto\";\n        json = { nested: { google: { nested: { protobuf: { nested: json } } } } };\n    }\n    common[name] = json;\n}\n\n// Not provided because of limited use (feel free to discuss or to provide yourself):\n//\n// google/protobuf/descriptor.proto\n// google/protobuf/source_context.proto\n// google/protobuf/type.proto\n//\n// Stripped and pre-parsed versions of these non-bundled files are instead available as part of\n// the repository or package within the google/protobuf directory.\n\ncommon(\"any\", {\n\n    /**\n     * Properties of a google.protobuf.Any message.\n     * @interface IAny\n     * @type {Object}\n     * @property {string} [typeUrl]\n     * @property {Uint8Array} [bytes]\n     * @memberof common\n     */\n    Any: {\n        fields: {\n            type_url: {\n                type: \"string\",\n                id: 1\n            },\n            value: {\n                type: \"bytes\",\n                id: 2\n            }\n        }\n    }\n});\n\nvar timeType;\n\ncommon(\"duration\", {\n\n    /**\n     * Properties of a google.protobuf.Duration message.\n     * @interface IDuration\n     * @type {Object}\n     * @property {number|Long} [seconds]\n     * @property {number} [nanos]\n     * @memberof common\n     */\n    Duration: timeType = {\n        fields: {\n            seconds: {\n                type: \"int64\",\n                id: 1\n            },\n            nanos: {\n                type: \"int32\",\n                id: 2\n            }\n        }\n    }\n});\n\ncommon(\"timestamp\", {\n\n    /**\n     * Properties of a google.protobuf.Timestamp message.\n     * @interface ITimestamp\n     * @type {Object}\n     * @property {number|Long} [seconds]\n     * @property {number} [nanos]\n     * @memberof common\n     */\n    Timestamp: timeType\n});\n\ncommon(\"empty\", {\n\n    /**\n     * Properties of a google.protobuf.Empty message.\n     * @interface IEmpty\n     * @memberof common\n     */\n    Empty: {\n        fields: {}\n    }\n});\n\ncommon(\"struct\", {\n\n    /**\n     * Properties of a google.protobuf.Struct message.\n     * @interface IStruct\n     * @type {Object}\n     * @property {Object.<string,IValue>} [fields]\n     * @memberof common\n     */\n    Struct: {\n        fields: {\n            fields: {\n                keyType: \"string\",\n                type: \"Value\",\n                id: 1\n            }\n        }\n    },\n\n    /**\n     * Properties of a google.protobuf.Value message.\n     * @interface IValue\n     * @type {Object}\n     * @property {string} [kind]\n     * @property {0} [nullValue]\n     * @property {number} [numberValue]\n     * @property {string} [stringValue]\n     * @property {boolean} [boolValue]\n     * @property {IStruct} [structValue]\n     * @property {IListValue} [listValue]\n     * @memberof common\n     */\n    Value: {\n        oneofs: {\n            kind: {\n                oneof: [\n                    \"nullValue\",\n                    \"numberValue\",\n                    \"stringValue\",\n                    \"boolValue\",\n                    \"structValue\",\n                    \"listValue\"\n                ]\n            }\n        },\n        fields: {\n            nullValue: {\n                type: \"NullValue\",\n                id: 1\n            },\n            numberValue: {\n                type: \"double\",\n                id: 2\n            },\n            stringValue: {\n                type: \"string\",\n                id: 3\n            },\n            boolValue: {\n                type: \"bool\",\n                id: 4\n            },\n            structValue: {\n                type: \"Struct\",\n                id: 5\n            },\n            listValue: {\n                type: \"ListValue\",\n                id: 6\n            }\n        }\n    },\n\n    NullValue: {\n        values: {\n            NULL_VALUE: 0\n        }\n    },\n\n    /**\n     * Properties of a google.protobuf.ListValue message.\n     * @interface IListValue\n     * @type {Object}\n     * @property {Array.<IValue>} [values]\n     * @memberof common\n     */\n    ListValue: {\n        fields: {\n            values: {\n                rule: \"repeated\",\n                type: \"Value\",\n                id: 1\n            }\n        }\n    }\n});\n\ncommon(\"wrappers\", {\n\n    /**\n     * Properties of a google.protobuf.DoubleValue message.\n     * @interface IDoubleValue\n     * @type {Object}\n     * @property {number} [value]\n     * @memberof common\n     */\n    DoubleValue: {\n        fields: {\n            value: {\n                type: \"double\",\n                id: 1\n            }\n        }\n    },\n\n    /**\n     * Properties of a google.protobuf.FloatValue message.\n     * @interface IFloatValue\n     * @type {Object}\n     * @property {number} [value]\n     * @memberof common\n     */\n    FloatValue: {\n        fields: {\n            value: {\n                type: \"float\",\n                id: 1\n            }\n        }\n    },\n\n    /**\n     * Properties of a google.protobuf.Int64Value message.\n     * @interface IInt64Value\n     * @type {Object}\n     * @property {number|Long} [value]\n     * @memberof common\n     */\n    Int64Value: {\n        fields: {\n            value: {\n                type: \"int64\",\n                id: 1\n            }\n        }\n    },\n\n    /**\n     * Properties of a google.protobuf.UInt64Value message.\n     * @interface IUInt64Value\n     * @type {Object}\n     * @property {number|Long} [value]\n     * @memberof common\n     */\n    UInt64Value: {\n        fields: {\n            value: {\n                type: \"uint64\",\n                id: 1\n            }\n        }\n    },\n\n    /**\n     * Properties of a google.protobuf.Int32Value message.\n     * @interface IInt32Value\n     * @type {Object}\n     * @property {number} [value]\n     * @memberof common\n     */\n    Int32Value: {\n        fields: {\n            value: {\n                type: \"int32\",\n                id: 1\n            }\n        }\n    },\n\n    /**\n     * Properties of a google.protobuf.UInt32Value message.\n     * @interface IUInt32Value\n     * @type {Object}\n     * @property {number} [value]\n     * @memberof common\n     */\n    UInt32Value: {\n        fields: {\n            value: {\n                type: \"uint32\",\n                id: 1\n            }\n        }\n    },\n\n    /**\n     * Properties of a google.protobuf.BoolValue message.\n     * @interface IBoolValue\n     * @type {Object}\n     * @property {boolean} [value]\n     * @memberof common\n     */\n    BoolValue: {\n        fields: {\n            value: {\n                type: \"bool\",\n                id: 1\n            }\n        }\n    },\n\n    /**\n     * Properties of a google.protobuf.StringValue message.\n     * @interface IStringValue\n     * @type {Object}\n     * @property {string} [value]\n     * @memberof common\n     */\n    StringValue: {\n        fields: {\n            value: {\n                type: \"string\",\n                id: 1\n            }\n        }\n    },\n\n    /**\n     * Properties of a google.protobuf.BytesValue message.\n     * @interface IBytesValue\n     * @type {Object}\n     * @property {Uint8Array} [value]\n     * @memberof common\n     */\n    BytesValue: {\n        fields: {\n            value: {\n                type: \"bytes\",\n                id: 1\n            }\n        }\n    }\n});\n\ncommon(\"field_mask\", {\n\n    /**\n     * Properties of a google.protobuf.FieldMask message.\n     * @interface IDoubleValue\n     * @type {Object}\n     * @property {number} [value]\n     * @memberof common\n     */\n    FieldMask: {\n        fields: {\n            paths: {\n                rule: \"repeated\",\n                type: \"string\",\n                id: 1\n            }\n        }\n    }\n});\n\n/**\n * Gets the root definition of the specified common proto file.\n *\n * Bundled definitions are:\n * - google/protobuf/any.proto\n * - google/protobuf/duration.proto\n * - google/protobuf/empty.proto\n * - google/protobuf/field_mask.proto\n * - google/protobuf/struct.proto\n * - google/protobuf/timestamp.proto\n * - google/protobuf/wrappers.proto\n *\n * @param {string} file Proto file name\n * @returns {INamespace|null} Root definition or `null` if not defined\n */\ncommon.get = function get(file) {\n    return common[file] || null;\n};\n","\"use strict\";\n/**\n * Runtime message from/to plain object converters.\n * @namespace\n */\nvar converter = exports;\n\nvar Enum = require(\"./enum\"),\n    util = require(\"./util\");\n\n/**\n * Generates a partial value fromObject conveter.\n * @param {Codegen} gen Codegen instance\n * @param {Field} field Reflected field\n * @param {number} fieldIndex Field index\n * @param {string} prop Property reference\n * @returns {Codegen} Codegen instance\n * @ignore\n */\nfunction genValuePartial_fromObject(gen, field, fieldIndex, prop) {\n    var defaultAlreadyEmitted = false;\n    /* eslint-disable no-unexpected-multiline, block-scoped-var, no-redeclare */\n    if (field.resolvedType) {\n        if (field.resolvedType instanceof Enum) { gen\n            (\"switch(d%s){\", prop);\n            for (var values = field.resolvedType.values, keys = Object.keys(values), i = 0; i < keys.length; ++i) {\n                // enum unknown values passthrough\n                if (values[keys[i]] === field.typeDefault && !defaultAlreadyEmitted) { gen\n                    (\"default:\")\n                        (\"if(typeof(d%s)===\\\"number\\\"){m%s=d%s;break}\", prop, prop, prop);\n                    if (!field.repeated) gen // fallback to default value only for\n                                             // arrays, to avoid leaving holes.\n                        (\"break\");           // for non-repeated fields, just ignore\n                    defaultAlreadyEmitted = true;\n                }\n                gen\n                (\"case%j:\", keys[i])\n                (\"case %i:\", values[keys[i]])\n                    (\"m%s=%j\", prop, values[keys[i]])\n                    (\"break\");\n            } gen\n            (\"}\");\n        } else gen\n            (\"if(typeof d%s!==\\\"object\\\")\", prop)\n                (\"throw TypeError(%j)\", field.fullName + \": object expected\")\n            (\"m%s=types[%i].fromObject(d%s)\", prop, fieldIndex, prop);\n    } else {\n        var isUnsigned = false;\n        switch (field.type) {\n            case \"double\":\n            case \"float\": gen\n                (\"m%s=Number(d%s)\", prop, prop); // also catches \"NaN\", \"Infinity\"\n                break;\n            case \"uint32\":\n            case \"fixed32\": gen\n                (\"m%s=d%s>>>0\", prop, prop);\n                break;\n            case \"int32\":\n            case \"sint32\":\n            case \"sfixed32\": gen\n                (\"m%s=d%s|0\", prop, prop);\n                break;\n            case \"uint64\":\n                isUnsigned = true;\n                // eslint-disable-next-line no-fallthrough\n            case \"int64\":\n            case \"sint64\":\n            case \"fixed64\":\n            case \"sfixed64\": gen\n                (\"if(util.Long)\")\n                    (\"(m%s=util.Long.fromValue(d%s)).unsigned=%j\", prop, prop, isUnsigned)\n                (\"else if(typeof d%s===\\\"string\\\")\", prop)\n                    (\"m%s=parseInt(d%s,10)\", prop, prop)\n                (\"else if(typeof d%s===\\\"number\\\")\", prop)\n                    (\"m%s=d%s\", prop, prop)\n                (\"else if(typeof d%s===\\\"object\\\")\", prop)\n                    (\"m%s=new util.LongBits(d%s.low>>>0,d%s.high>>>0).toNumber(%s)\", prop, prop, prop, isUnsigned ? \"true\" : \"\");\n                break;\n            case \"bytes\": gen\n                (\"if(typeof d%s===\\\"string\\\")\", prop)\n                    (\"util.base64.decode(d%s,m%s=util.newBuffer(util.base64.length(d%s)),0)\", prop, prop, prop)\n                (\"else if(d%s.length >= 0)\", prop)\n                    (\"m%s=d%s\", prop, prop);\n                break;\n            case \"string\": gen\n                (\"m%s=String(d%s)\", prop, prop);\n                break;\n            case \"bool\": gen\n                (\"m%s=Boolean(d%s)\", prop, prop);\n                break;\n            /* default: gen\n                (\"m%s=d%s\", prop, prop);\n                break; */\n        }\n    }\n    return gen;\n    /* eslint-enable no-unexpected-multiline, block-scoped-var, no-redeclare */\n}\n\n/**\n * Generates a plain object to runtime message converter specific to the specified message type.\n * @param {Type} mtype Message type\n * @returns {Codegen} Codegen instance\n */\nconverter.fromObject = function fromObject(mtype) {\n    /* eslint-disable no-unexpected-multiline, block-scoped-var, no-redeclare */\n    var fields = mtype.fieldsArray;\n    var gen = util.codegen([\"d\"], mtype.name + \"$fromObject\")\n    (\"if(d instanceof this.ctor)\")\n        (\"return d\");\n    if (!fields.length) return gen\n    (\"return new this.ctor\");\n    gen\n    (\"var m=new this.ctor\");\n    for (var i = 0; i < fields.length; ++i) {\n        var field  = fields[i].resolve(),\n            prop   = util.safeProp(field.name);\n\n        // Map fields\n        if (field.map) { gen\n    (\"if(d%s){\", prop)\n        (\"if(typeof d%s!==\\\"object\\\")\", prop)\n            (\"throw TypeError(%j)\", field.fullName + \": object expected\")\n        (\"m%s={}\", prop)\n        (\"for(var ks=Object.keys(d%s),i=0;i<ks.length;++i){\", prop);\n            genValuePartial_fromObject(gen, field, /* not sorted */ i, prop + \"[ks[i]]\")\n        (\"}\")\n    (\"}\");\n\n        // Repeated fields\n        } else if (field.repeated) { gen\n    (\"if(d%s){\", prop)\n        (\"if(!Array.isArray(d%s))\", prop)\n            (\"throw TypeError(%j)\", field.fullName + \": array expected\")\n        (\"m%s=[]\", prop)\n        (\"for(var i=0;i<d%s.length;++i){\", prop);\n            genValuePartial_fromObject(gen, field, /* not sorted */ i, prop + \"[i]\")\n        (\"}\")\n    (\"}\");\n\n        // Non-repeated fields\n        } else {\n            if (!(field.resolvedType instanceof Enum)) gen // no need to test for null/undefined if an enum (uses switch)\n    (\"if(d%s!=null){\", prop); // !== undefined && !== null\n        genValuePartial_fromObject(gen, field, /* not sorted */ i, prop);\n            if (!(field.resolvedType instanceof Enum)) gen\n    (\"}\");\n        }\n    } return gen\n    (\"return m\");\n    /* eslint-enable no-unexpected-multiline, block-scoped-var, no-redeclare */\n};\n\n/**\n * Generates a partial value toObject converter.\n * @param {Codegen} gen Codegen instance\n * @param {Field} field Reflected field\n * @param {number} fieldIndex Field index\n * @param {string} prop Property reference\n * @returns {Codegen} Codegen instance\n * @ignore\n */\nfunction genValuePartial_toObject(gen, field, fieldIndex, prop) {\n    /* eslint-disable no-unexpected-multiline, block-scoped-var, no-redeclare */\n    if (field.resolvedType) {\n        if (field.resolvedType instanceof Enum) gen\n            (\"d%s=o.enums===String?(types[%i].values[m%s]===undefined?m%s:types[%i].values[m%s]):m%s\", prop, fieldIndex, prop, prop, fieldIndex, prop, prop);\n        else gen\n            (\"d%s=types[%i].toObject(m%s,o)\", prop, fieldIndex, prop);\n    } else {\n        var isUnsigned = false;\n        switch (field.type) {\n            case \"double\":\n            case \"float\": gen\n            (\"d%s=o.json&&!isFinite(m%s)?String(m%s):m%s\", prop, prop, prop, prop);\n                break;\n            case \"uint64\":\n                isUnsigned = true;\n                // eslint-disable-next-line no-fallthrough\n            case \"int64\":\n            case \"sint64\":\n            case \"fixed64\":\n            case \"sfixed64\": gen\n            (\"if(typeof m%s===\\\"number\\\")\", prop)\n                (\"d%s=o.longs===String?String(m%s):m%s\", prop, prop, prop)\n            (\"else\") // Long-like\n                (\"d%s=o.longs===String?util.Long.prototype.toString.call(m%s):o.longs===Number?new util.LongBits(m%s.low>>>0,m%s.high>>>0).toNumber(%s):m%s\", prop, prop, prop, prop, isUnsigned ? \"true\": \"\", prop);\n                break;\n            case \"bytes\": gen\n            (\"d%s=o.bytes===String?util.base64.encode(m%s,0,m%s.length):o.bytes===Array?Array.prototype.slice.call(m%s):m%s\", prop, prop, prop, prop, prop);\n                break;\n            default: gen\n            (\"d%s=m%s\", prop, prop);\n                break;\n        }\n    }\n    return gen;\n    /* eslint-enable no-unexpected-multiline, block-scoped-var, no-redeclare */\n}\n\n/**\n * Generates a runtime message to plain object converter specific to the specified message type.\n * @param {Type} mtype Message type\n * @returns {Codegen} Codegen instance\n */\nconverter.toObject = function toObject(mtype) {\n    /* eslint-disable no-unexpected-multiline, block-scoped-var, no-redeclare */\n    var fields = mtype.fieldsArray.slice().sort(util.compareFieldsById);\n    if (!fields.length)\n        return util.codegen()(\"return {}\");\n    var gen = util.codegen([\"m\", \"o\"], mtype.name + \"$toObject\")\n    (\"if(!o)\")\n        (\"o={}\")\n    (\"var d={}\");\n\n    var repeatedFields = [],\n        mapFields = [],\n        normalFields = [],\n        i = 0;\n    for (; i < fields.length; ++i)\n        if (!fields[i].partOf)\n            ( fields[i].resolve().repeated ? repeatedFields\n            : fields[i].map ? mapFields\n            : normalFields).push(fields[i]);\n\n    if (repeatedFields.length) { gen\n    (\"if(o.arrays||o.defaults){\");\n        for (i = 0; i < repeatedFields.length; ++i) gen\n        (\"d%s=[]\", util.safeProp(repeatedFields[i].name));\n        gen\n    (\"}\");\n    }\n\n    if (mapFields.length) { gen\n    (\"if(o.objects||o.defaults){\");\n        for (i = 0; i < mapFields.length; ++i) gen\n        (\"d%s={}\", util.safeProp(mapFields[i].name));\n        gen\n    (\"}\");\n    }\n\n    if (normalFields.length) { gen\n    (\"if(o.defaults){\");\n        for (i = 0; i < normalFields.length; ++i) {\n            var field = normalFields[i],\n                prop  = util.safeProp(field.name);\n            if (field.resolvedType instanceof Enum) gen\n        (\"d%s=o.enums===String?%j:%j\", prop, field.resolvedType.valuesById[field.typeDefault], field.typeDefault);\n            else if (field.long) gen\n        (\"if(util.Long){\")\n            (\"var n=new util.Long(%i,%i,%j)\", field.typeDefault.low, field.typeDefault.high, field.typeDefault.unsigned)\n            (\"d%s=o.longs===String?n.toString():o.longs===Number?n.toNumber():n\", prop)\n        (\"}else\")\n            (\"d%s=o.longs===String?%j:%i\", prop, field.typeDefault.toString(), field.typeDefault.toNumber());\n            else if (field.bytes) {\n                var arrayDefault = \"[\" + Array.prototype.slice.call(field.typeDefault).join(\",\") + \"]\";\n                gen\n        (\"if(o.bytes===String)d%s=%j\", prop, String.fromCharCode.apply(String, field.typeDefault))\n        (\"else{\")\n            (\"d%s=%s\", prop, arrayDefault)\n            (\"if(o.bytes!==Array)d%s=util.newBuffer(d%s)\", prop, prop)\n        (\"}\");\n            } else gen\n        (\"d%s=%j\", prop, field.typeDefault); // also messages (=null)\n        } gen\n    (\"}\");\n    }\n    var hasKs2 = false;\n    for (i = 0; i < fields.length; ++i) {\n        var field = fields[i],\n            index = mtype._fieldsArray.indexOf(field),\n            prop  = util.safeProp(field.name);\n        if (field.map) {\n            if (!hasKs2) { hasKs2 = true; gen\n    (\"var ks2\");\n            } gen\n    (\"if(m%s&&(ks2=Object.keys(m%s)).length){\", prop, prop)\n        (\"d%s={}\", prop)\n        (\"for(var j=0;j<ks2.length;++j){\");\n            genValuePartial_toObject(gen, field, /* sorted */ index, prop + \"[ks2[j]]\")\n        (\"}\");\n        } else if (field.repeated) { gen\n    (\"if(m%s&&m%s.length){\", prop, prop)\n        (\"d%s=[]\", prop)\n        (\"for(var j=0;j<m%s.length;++j){\", prop);\n            genValuePartial_toObject(gen, field, /* sorted */ index, prop + \"[j]\")\n        (\"}\");\n        } else { gen\n    (\"if(m%s!=null&&m.hasOwnProperty(%j)){\", prop, field.name); // !== undefined && !== null\n        genValuePartial_toObject(gen, field, /* sorted */ index, prop);\n        if (field.partOf) gen\n        (\"if(o.oneofs)\")\n            (\"d%s=%j\", util.safeProp(field.partOf.name), field.name);\n        }\n        gen\n    (\"}\");\n    }\n    return gen\n    (\"return d\");\n    /* eslint-enable no-unexpected-multiline, block-scoped-var, no-redeclare */\n};\n","\"use strict\";\nmodule.exports = decoder;\n\nvar Enum    = require(\"./enum\"),\n    types   = require(\"./types\"),\n    util    = require(\"./util\");\n\nfunction missing(field) {\n    return \"missing required '\" + field.name + \"'\";\n}\n\n/**\n * Generates a decoder specific to the specified message type.\n * @param {Type} mtype Message type\n * @returns {Codegen} Codegen instance\n */\nfunction decoder(mtype) {\n    /* eslint-disable no-unexpected-multiline */\n    var gen = util.codegen([\"r\", \"l\"], mtype.name + \"$decode\")\n    (\"if(!(r instanceof Reader))\")\n        (\"r=Reader.create(r)\")\n    (\"var c=l===undefined?r.len:r.pos+l,m=new this.ctor\" + (mtype.fieldsArray.filter(function(field) { return field.map; }).length ? \",k,value\" : \"\"))\n    (\"while(r.pos<c){\")\n        (\"var t=r.uint32()\");\n    if (mtype.group) gen\n        (\"if((t&7)===4)\")\n            (\"break\");\n    gen\n        (\"switch(t>>>3){\");\n\n    var i = 0;\n    for (; i < /* initializes */ mtype.fieldsArray.length; ++i) {\n        var field = mtype._fieldsArray[i].resolve(),\n            type  = field.resolvedType instanceof Enum ? \"int32\" : field.type,\n            ref   = \"m\" + util.safeProp(field.name); gen\n            (\"case %i: {\", field.id);\n\n        // Map fields\n        if (field.map) { gen\n                (\"if(%s===util.emptyObject)\", ref)\n                    (\"%s={}\", ref)\n                (\"var c2 = r.uint32()+r.pos\");\n\n            if (types.defaults[field.keyType] !== undefined) gen\n                (\"k=%j\", types.defaults[field.keyType]);\n            else gen\n                (\"k=null\");\n\n            if (types.defaults[type] !== undefined) gen\n                (\"value=%j\", types.defaults[type]);\n            else gen\n                (\"value=null\");\n\n            gen\n                (\"while(r.pos<c2){\")\n                    (\"var tag2=r.uint32()\")\n                    (\"switch(tag2>>>3){\")\n                        (\"case 1: k=r.%s(); break\", field.keyType)\n                        (\"case 2:\");\n\n            if (types.basic[type] === undefined) gen\n                            (\"value=types[%i].decode(r,r.uint32())\", i); // can't be groups\n            else gen\n                            (\"value=r.%s()\", type);\n\n            gen\n                            (\"break\")\n                        (\"default:\")\n                            (\"r.skipType(tag2&7)\")\n                            (\"break\")\n                    (\"}\")\n                (\"}\");\n\n            if (types.long[field.keyType] !== undefined) gen\n                (\"%s[typeof k===\\\"object\\\"?util.longToHash(k):k]=value\", ref);\n            else gen\n                (\"%s[k]=value\", ref);\n\n        // Repeated fields\n        } else if (field.repeated) { gen\n\n                (\"if(!(%s&&%s.length))\", ref, ref)\n                    (\"%s=[]\", ref);\n\n            // Packable (always check for forward and backward compatiblity)\n            if (types.packed[type] !== undefined) gen\n                (\"if((t&7)===2){\")\n                    (\"var c2=r.uint32()+r.pos\")\n                    (\"while(r.pos<c2)\")\n                        (\"%s.push(r.%s())\", ref, type)\n                (\"}else\");\n\n            // Non-packed\n            if (types.basic[type] === undefined) gen(field.resolvedType.group\n                    ? \"%s.push(types[%i].decode(r))\"\n                    : \"%s.push(types[%i].decode(r,r.uint32()))\", ref, i);\n            else gen\n                    (\"%s.push(r.%s())\", ref, type);\n\n        // Non-repeated\n        } else if (types.basic[type] === undefined) gen(field.resolvedType.group\n                ? \"%s=types[%i].decode(r)\"\n                : \"%s=types[%i].decode(r,r.uint32())\", ref, i);\n        else gen\n                (\"%s=r.%s()\", ref, type);\n        gen\n                (\"break\")\n            (\"}\");\n        // Unknown fields\n    } gen\n            (\"default:\")\n                (\"r.skipType(t&7)\")\n                (\"break\")\n\n        (\"}\")\n    (\"}\");\n\n    // Field presence\n    for (i = 0; i < mtype._fieldsArray.length; ++i) {\n        var rfield = mtype._fieldsArray[i];\n        if (rfield.required) gen\n    (\"if(!m.hasOwnProperty(%j))\", rfield.name)\n        (\"throw util.ProtocolError(%j,{instance:m})\", missing(rfield));\n    }\n\n    return gen\n    (\"return m\");\n    /* eslint-enable no-unexpected-multiline */\n}\n","\"use strict\";\nmodule.exports = encoder;\n\nvar Enum     = require(\"./enum\"),\n    types    = require(\"./types\"),\n    util     = require(\"./util\");\n\n/**\n * Generates a partial message type encoder.\n * @param {Codegen} gen Codegen instance\n * @param {Field} field Reflected field\n * @param {number} fieldIndex Field index\n * @param {string} ref Variable reference\n * @returns {Codegen} Codegen instance\n * @ignore\n */\nfunction genTypePartial(gen, field, fieldIndex, ref) {\n    return field.resolvedType.group\n        ? gen(\"types[%i].encode(%s,w.uint32(%i)).uint32(%i)\", fieldIndex, ref, (field.id << 3 | 3) >>> 0, (field.id << 3 | 4) >>> 0)\n        : gen(\"types[%i].encode(%s,w.uint32(%i).fork()).ldelim()\", fieldIndex, ref, (field.id << 3 | 2) >>> 0);\n}\n\n/**\n * Generates an encoder specific to the specified message type.\n * @param {Type} mtype Message type\n * @returns {Codegen} Codegen instance\n */\nfunction encoder(mtype) {\n    /* eslint-disable no-unexpected-multiline, block-scoped-var, no-redeclare */\n    var gen = util.codegen([\"m\", \"w\"], mtype.name + \"$encode\")\n    (\"if(!w)\")\n        (\"w=Writer.create()\");\n\n    var i, ref;\n\n    // \"when a message is serialized its known fields should be written sequentially by field number\"\n    var fields = /* initializes */ mtype.fieldsArray.slice().sort(util.compareFieldsById);\n\n    for (var i = 0; i < fields.length; ++i) {\n        var field    = fields[i].resolve(),\n            index    = mtype._fieldsArray.indexOf(field),\n            type     = field.resolvedType instanceof Enum ? \"int32\" : field.type,\n            wireType = types.basic[type];\n            ref      = \"m\" + util.safeProp(field.name);\n\n        // Map fields\n        if (field.map) {\n            gen\n    (\"if(%s!=null&&Object.hasOwnProperty.call(m,%j)){\", ref, field.name) // !== undefined && !== null\n        (\"for(var ks=Object.keys(%s),i=0;i<ks.length;++i){\", ref)\n            (\"w.uint32(%i).fork().uint32(%i).%s(ks[i])\", (field.id << 3 | 2) >>> 0, 8 | types.mapKey[field.keyType], field.keyType);\n            if (wireType === undefined) gen\n            (\"types[%i].encode(%s[ks[i]],w.uint32(18).fork()).ldelim().ldelim()\", index, ref); // can't be groups\n            else gen\n            (\".uint32(%i).%s(%s[ks[i]]).ldelim()\", 16 | wireType, type, ref);\n            gen\n        (\"}\")\n    (\"}\");\n\n            // Repeated fields\n        } else if (field.repeated) { gen\n    (\"if(%s!=null&&%s.length){\", ref, ref); // !== undefined && !== null\n\n            // Packed repeated\n            if (field.packed && types.packed[type] !== undefined) { gen\n\n        (\"w.uint32(%i).fork()\", (field.id << 3 | 2) >>> 0)\n        (\"for(var i=0;i<%s.length;++i)\", ref)\n            (\"w.%s(%s[i])\", type, ref)\n        (\"w.ldelim()\");\n\n            // Non-packed\n            } else { gen\n\n        (\"for(var i=0;i<%s.length;++i)\", ref);\n                if (wireType === undefined)\n            genTypePartial(gen, field, index, ref + \"[i]\");\n                else gen\n            (\"w.uint32(%i).%s(%s[i])\", (field.id << 3 | wireType) >>> 0, type, ref);\n\n            } gen\n    (\"}\");\n\n        // Non-repeated\n        } else {\n            if (field.optional) gen\n    (\"if(%s!=null&&Object.hasOwnProperty.call(m,%j))\", ref, field.name); // !== undefined && !== null\n\n            if (wireType === undefined)\n        genTypePartial(gen, field, index, ref);\n            else gen\n        (\"w.uint32(%i).%s(%s)\", (field.id << 3 | wireType) >>> 0, type, ref);\n\n        }\n    }\n\n    return gen\n    (\"return w\");\n    /* eslint-enable no-unexpected-multiline, block-scoped-var, no-redeclare */\n}\n","\"use strict\";\nmodule.exports = Enum;\n\n// extends ReflectionObject\nvar ReflectionObject = require(\"./object\");\n((Enum.prototype = Object.create(ReflectionObject.prototype)).constructor = Enum).className = \"Enum\";\n\nvar Namespace = require(\"./namespace\"),\n    util = require(\"./util\");\n\n/**\n * Constructs a new enum instance.\n * @classdesc Reflected enum.\n * @extends ReflectionObject\n * @constructor\n * @param {string} name Unique name within its namespace\n * @param {Object.<string,number>} [values] Enum values as an object, by name\n * @param {Object.<string,*>} [options] Declared options\n * @param {string} [comment] The comment for this enum\n * @param {Object.<string,string>} [comments] The value comments for this enum\n * @param {Object.<string,Object<string,*>>|undefined} [valuesOptions] The value options for this enum\n */\nfunction Enum(name, values, options, comment, comments, valuesOptions) {\n    ReflectionObject.call(this, name, options);\n\n    if (values && typeof values !== \"object\")\n        throw TypeError(\"values must be an object\");\n\n    /**\n     * Enum values by id.\n     * @type {Object.<number,string>}\n     */\n    this.valuesById = {};\n\n    /**\n     * Enum values by name.\n     * @type {Object.<string,number>}\n     */\n    this.values = Object.create(this.valuesById); // toJSON, marker\n\n    /**\n     * Enum comment text.\n     * @type {string|null}\n     */\n    this.comment = comment;\n\n    /**\n     * Value comment texts, if any.\n     * @type {Object.<string,string>}\n     */\n    this.comments = comments || {};\n\n    /**\n     * Values options, if any\n     * @type {Object<string, Object<string, *>>|undefined}\n     */\n    this.valuesOptions = valuesOptions;\n\n    /**\n     * Reserved ranges, if any.\n     * @type {Array.<number[]|string>}\n     */\n    this.reserved = undefined; // toJSON\n\n    // Note that values inherit valuesById on their prototype which makes them a TypeScript-\n    // compatible enum. This is used by pbts to write actual enum definitions that work for\n    // static and reflection code alike instead of emitting generic object definitions.\n\n    if (values)\n        for (var keys = Object.keys(values), i = 0; i < keys.length; ++i)\n            if (typeof values[keys[i]] === \"number\") // use forward entries only\n                this.valuesById[ this.values[keys[i]] = values[keys[i]] ] = keys[i];\n}\n\n/**\n * Enum descriptor.\n * @interface IEnum\n * @property {Object.<string,number>} values Enum values\n * @property {Object.<string,*>} [options] Enum options\n */\n\n/**\n * Constructs an enum from an enum descriptor.\n * @param {string} name Enum name\n * @param {IEnum} json Enum descriptor\n * @returns {Enum} Created enum\n * @throws {TypeError} If arguments are invalid\n */\nEnum.fromJSON = function fromJSON(name, json) {\n    var enm = new Enum(name, json.values, json.options, json.comment, json.comments);\n    enm.reserved = json.reserved;\n    return enm;\n};\n\n/**\n * Converts this enum to an enum descriptor.\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {IEnum} Enum descriptor\n */\nEnum.prototype.toJSON = function toJSON(toJSONOptions) {\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\n    return util.toObject([\n        \"options\"       , this.options,\n        \"valuesOptions\" , this.valuesOptions,\n        \"values\"        , this.values,\n        \"reserved\"      , this.reserved && this.reserved.length ? this.reserved : undefined,\n        \"comment\"       , keepComments ? this.comment : undefined,\n        \"comments\"      , keepComments ? this.comments : undefined\n    ]);\n};\n\n/**\n * Adds a value to this enum.\n * @param {string} name Value name\n * @param {number} id Value id\n * @param {string} [comment] Comment, if any\n * @param {Object.<string, *>|undefined} [options] Options, if any\n * @returns {Enum} `this`\n * @throws {TypeError} If arguments are invalid\n * @throws {Error} If there is already a value with this name or id\n */\nEnum.prototype.add = function add(name, id, comment, options) {\n    // utilized by the parser but not by .fromJSON\n\n    if (!util.isString(name))\n        throw TypeError(\"name must be a string\");\n\n    if (!util.isInteger(id))\n        throw TypeError(\"id must be an integer\");\n\n    if (this.values[name] !== undefined)\n        throw Error(\"duplicate name '\" + name + \"' in \" + this);\n\n    if (this.isReservedId(id))\n        throw Error(\"id \" + id + \" is reserved in \" + this);\n\n    if (this.isReservedName(name))\n        throw Error(\"name '\" + name + \"' is reserved in \" + this);\n\n    if (this.valuesById[id] !== undefined) {\n        if (!(this.options && this.options.allow_alias))\n            throw Error(\"duplicate id \" + id + \" in \" + this);\n        this.values[name] = id;\n    } else\n        this.valuesById[this.values[name] = id] = name;\n\n    if (options) {\n        if (this.valuesOptions === undefined)\n            this.valuesOptions = {};\n        this.valuesOptions[name] = options || null;\n    }\n\n    this.comments[name] = comment || null;\n    return this;\n};\n\n/**\n * Removes a value from this enum\n * @param {string} name Value name\n * @returns {Enum} `this`\n * @throws {TypeError} If arguments are invalid\n * @throws {Error} If `name` is not a name of this enum\n */\nEnum.prototype.remove = function remove(name) {\n\n    if (!util.isString(name))\n        throw TypeError(\"name must be a string\");\n\n    var val = this.values[name];\n    if (val == null)\n        throw Error(\"name '\" + name + \"' does not exist in \" + this);\n\n    delete this.valuesById[val];\n    delete this.values[name];\n    delete this.comments[name];\n    if (this.valuesOptions)\n        delete this.valuesOptions[name];\n\n    return this;\n};\n\n/**\n * Tests if the specified id is reserved.\n * @param {number} id Id to test\n * @returns {boolean} `true` if reserved, otherwise `false`\n */\nEnum.prototype.isReservedId = function isReservedId(id) {\n    return Namespace.isReservedId(this.reserved, id);\n};\n\n/**\n * Tests if the specified name is reserved.\n * @param {string} name Name to test\n * @returns {boolean} `true` if reserved, otherwise `false`\n */\nEnum.prototype.isReservedName = function isReservedName(name) {\n    return Namespace.isReservedName(this.reserved, name);\n};\n","\"use strict\";\nmodule.exports = Field;\n\n// extends ReflectionObject\nvar ReflectionObject = require(\"./object\");\n((Field.prototype = Object.create(ReflectionObject.prototype)).constructor = Field).className = \"Field\";\n\nvar Enum  = require(\"./enum\"),\n    types = require(\"./types\"),\n    util  = require(\"./util\");\n\nvar Type; // cyclic\n\nvar ruleRe = /^required|optional|repeated$/;\n\n/**\n * Constructs a new message field instance. Note that {@link MapField|map fields} have their own class.\n * @name Field\n * @classdesc Reflected message field.\n * @extends FieldBase\n * @constructor\n * @param {string} name Unique name within its namespace\n * @param {number} id Unique id within its namespace\n * @param {string} type Value type\n * @param {string|Object.<string,*>} [rule=\"optional\"] Field rule\n * @param {string|Object.<string,*>} [extend] Extended type if different from parent\n * @param {Object.<string,*>} [options] Declared options\n */\n\n/**\n * Constructs a field from a field descriptor.\n * @param {string} name Field name\n * @param {IField} json Field descriptor\n * @returns {Field} Created field\n * @throws {TypeError} If arguments are invalid\n */\nField.fromJSON = function fromJSON(name, json) {\n    return new Field(name, json.id, json.type, json.rule, json.extend, json.options, json.comment);\n};\n\n/**\n * Not an actual constructor. Use {@link Field} instead.\n * @classdesc Base class of all reflected message fields. This is not an actual class but here for the sake of having consistent type definitions.\n * @exports FieldBase\n * @extends ReflectionObject\n * @constructor\n * @param {string} name Unique name within its namespace\n * @param {number} id Unique id within its namespace\n * @param {string} type Value type\n * @param {string|Object.<string,*>} [rule=\"optional\"] Field rule\n * @param {string|Object.<string,*>} [extend] Extended type if different from parent\n * @param {Object.<string,*>} [options] Declared options\n * @param {string} [comment] Comment associated with this field\n */\nfunction Field(name, id, type, rule, extend, options, comment) {\n\n    if (util.isObject(rule)) {\n        comment = extend;\n        options = rule;\n        rule = extend = undefined;\n    } else if (util.isObject(extend)) {\n        comment = options;\n        options = extend;\n        extend = undefined;\n    }\n\n    ReflectionObject.call(this, name, options);\n\n    if (!util.isInteger(id) || id < 0)\n        throw TypeError(\"id must be a non-negative integer\");\n\n    if (!util.isString(type))\n        throw TypeError(\"type must be a string\");\n\n    if (rule !== undefined && !ruleRe.test(rule = rule.toString().toLowerCase()))\n        throw TypeError(\"rule must be a string rule\");\n\n    if (extend !== undefined && !util.isString(extend))\n        throw TypeError(\"extend must be a string\");\n\n    /**\n     * Field rule, if any.\n     * @type {string|undefined}\n     */\n    if (rule === \"proto3_optional\") {\n        rule = \"optional\";\n    }\n    this.rule = rule && rule !== \"optional\" ? rule : undefined; // toJSON\n\n    /**\n     * Field type.\n     * @type {string}\n     */\n    this.type = type; // toJSON\n\n    /**\n     * Unique field id.\n     * @type {number}\n     */\n    this.id = id; // toJSON, marker\n\n    /**\n     * Extended type if different from parent.\n     * @type {string|undefined}\n     */\n    this.extend = extend || undefined; // toJSON\n\n    /**\n     * Whether this field is required.\n     * @type {boolean}\n     */\n    this.required = rule === \"required\";\n\n    /**\n     * Whether this field is optional.\n     * @type {boolean}\n     */\n    this.optional = !this.required;\n\n    /**\n     * Whether this field is repeated.\n     * @type {boolean}\n     */\n    this.repeated = rule === \"repeated\";\n\n    /**\n     * Whether this field is a map or not.\n     * @type {boolean}\n     */\n    this.map = false;\n\n    /**\n     * Message this field belongs to.\n     * @type {Type|null}\n     */\n    this.message = null;\n\n    /**\n     * OneOf this field belongs to, if any,\n     * @type {OneOf|null}\n     */\n    this.partOf = null;\n\n    /**\n     * The field type's default value.\n     * @type {*}\n     */\n    this.typeDefault = null;\n\n    /**\n     * The field's default value on prototypes.\n     * @type {*}\n     */\n    this.defaultValue = null;\n\n    /**\n     * Whether this field's value should be treated as a long.\n     * @type {boolean}\n     */\n    this.long = util.Long ? types.long[type] !== undefined : /* istanbul ignore next */ false;\n\n    /**\n     * Whether this field's value is a buffer.\n     * @type {boolean}\n     */\n    this.bytes = type === \"bytes\";\n\n    /**\n     * Resolved type if not a basic type.\n     * @type {Type|Enum|null}\n     */\n    this.resolvedType = null;\n\n    /**\n     * Sister-field within the extended type if a declaring extension field.\n     * @type {Field|null}\n     */\n    this.extensionField = null;\n\n    /**\n     * Sister-field within the declaring namespace if an extended field.\n     * @type {Field|null}\n     */\n    this.declaringField = null;\n\n    /**\n     * Internally remembers whether this field is packed.\n     * @type {boolean|null}\n     * @private\n     */\n    this._packed = null;\n\n    /**\n     * Comment for this field.\n     * @type {string|null}\n     */\n    this.comment = comment;\n}\n\n/**\n * Determines whether this field is packed. Only relevant when repeated and working with proto2.\n * @name Field#packed\n * @type {boolean}\n * @readonly\n */\nObject.defineProperty(Field.prototype, \"packed\", {\n    get: function() {\n        // defaults to packed=true if not explicity set to false\n        if (this._packed === null)\n            this._packed = this.getOption(\"packed\") !== false;\n        return this._packed;\n    }\n});\n\n/**\n * @override\n */\nField.prototype.setOption = function setOption(name, value, ifNotSet) {\n    if (name === \"packed\") // clear cached before setting\n        this._packed = null;\n    return ReflectionObject.prototype.setOption.call(this, name, value, ifNotSet);\n};\n\n/**\n * Field descriptor.\n * @interface IField\n * @property {string} [rule=\"optional\"] Field rule\n * @property {string} type Field type\n * @property {number} id Field id\n * @property {Object.<string,*>} [options] Field options\n */\n\n/**\n * Extension field descriptor.\n * @interface IExtensionField\n * @extends IField\n * @property {string} extend Extended type\n */\n\n/**\n * Converts this field to a field descriptor.\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {IField} Field descriptor\n */\nField.prototype.toJSON = function toJSON(toJSONOptions) {\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\n    return util.toObject([\n        \"rule\"    , this.rule !== \"optional\" && this.rule || undefined,\n        \"type\"    , this.type,\n        \"id\"      , this.id,\n        \"extend\"  , this.extend,\n        \"options\" , this.options,\n        \"comment\" , keepComments ? this.comment : undefined\n    ]);\n};\n\n/**\n * Resolves this field's type references.\n * @returns {Field} `this`\n * @throws {Error} If any reference cannot be resolved\n */\nField.prototype.resolve = function resolve() {\n\n    if (this.resolved)\n        return this;\n\n    if ((this.typeDefault = types.defaults[this.type]) === undefined) { // if not a basic type, resolve it\n        this.resolvedType = (this.declaringField ? this.declaringField.parent : this.parent).lookupTypeOrEnum(this.type);\n        if (this.resolvedType instanceof Type)\n            this.typeDefault = null;\n        else // instanceof Enum\n            this.typeDefault = this.resolvedType.values[Object.keys(this.resolvedType.values)[0]]; // first defined\n    } else if (this.options && this.options.proto3_optional) {\n        // proto3 scalar value marked optional; should default to null\n        this.typeDefault = null;\n    }\n\n    // use explicitly set default value if present\n    if (this.options && this.options[\"default\"] != null) {\n        this.typeDefault = this.options[\"default\"];\n        if (this.resolvedType instanceof Enum && typeof this.typeDefault === \"string\")\n            this.typeDefault = this.resolvedType.values[this.typeDefault];\n    }\n\n    // remove unnecessary options\n    if (this.options) {\n        if (this.options.packed === true || this.options.packed !== undefined && this.resolvedType && !(this.resolvedType instanceof Enum))\n            delete this.options.packed;\n        if (!Object.keys(this.options).length)\n            this.options = undefined;\n    }\n\n    // convert to internal data type if necesssary\n    if (this.long) {\n        this.typeDefault = util.Long.fromNumber(this.typeDefault, this.type.charAt(0) === \"u\");\n\n        /* istanbul ignore else */\n        if (Object.freeze)\n            Object.freeze(this.typeDefault); // long instances are meant to be immutable anyway (i.e. use small int cache that even requires it)\n\n    } else if (this.bytes && typeof this.typeDefault === \"string\") {\n        var buf;\n        if (util.base64.test(this.typeDefault))\n            util.base64.decode(this.typeDefault, buf = util.newBuffer(util.base64.length(this.typeDefault)), 0);\n        else\n            util.utf8.write(this.typeDefault, buf = util.newBuffer(util.utf8.length(this.typeDefault)), 0);\n        this.typeDefault = buf;\n    }\n\n    // take special care of maps and repeated fields\n    if (this.map)\n        this.defaultValue = util.emptyObject;\n    else if (this.repeated)\n        this.defaultValue = util.emptyArray;\n    else\n        this.defaultValue = this.typeDefault;\n\n    // ensure proper value on prototype\n    if (this.parent instanceof Type)\n        this.parent.ctor.prototype[this.name] = this.defaultValue;\n\n    return ReflectionObject.prototype.resolve.call(this);\n};\n\n/**\n * Decorator function as returned by {@link Field.d} and {@link MapField.d} (TypeScript).\n * @typedef FieldDecorator\n * @type {function}\n * @param {Object} prototype Target prototype\n * @param {string} fieldName Field name\n * @returns {undefined}\n */\n\n/**\n * Field decorator (TypeScript).\n * @name Field.d\n * @function\n * @param {number} fieldId Field id\n * @param {\"double\"|\"float\"|\"int32\"|\"uint32\"|\"sint32\"|\"fixed32\"|\"sfixed32\"|\"int64\"|\"uint64\"|\"sint64\"|\"fixed64\"|\"sfixed64\"|\"string\"|\"bool\"|\"bytes\"|Object} fieldType Field type\n * @param {\"optional\"|\"required\"|\"repeated\"} [fieldRule=\"optional\"] Field rule\n * @param {T} [defaultValue] Default value\n * @returns {FieldDecorator} Decorator function\n * @template T extends number | number[] | Long | Long[] | string | string[] | boolean | boolean[] | Uint8Array | Uint8Array[] | Buffer | Buffer[]\n */\nField.d = function decorateField(fieldId, fieldType, fieldRule, defaultValue) {\n\n    // submessage: decorate the submessage and use its name as the type\n    if (typeof fieldType === \"function\")\n        fieldType = util.decorateType(fieldType).name;\n\n    // enum reference: create a reflected copy of the enum and keep reuseing it\n    else if (fieldType && typeof fieldType === \"object\")\n        fieldType = util.decorateEnum(fieldType).name;\n\n    return function fieldDecorator(prototype, fieldName) {\n        util.decorateType(prototype.constructor)\n            .add(new Field(fieldName, fieldId, fieldType, fieldRule, { \"default\": defaultValue }));\n    };\n};\n\n/**\n * Field decorator (TypeScript).\n * @name Field.d\n * @function\n * @param {number} fieldId Field id\n * @param {Constructor<T>|string} fieldType Field type\n * @param {\"optional\"|\"required\"|\"repeated\"} [fieldRule=\"optional\"] Field rule\n * @returns {FieldDecorator} Decorator function\n * @template T extends Message<T>\n * @variation 2\n */\n// like Field.d but without a default value\n\n// Sets up cyclic dependencies (called in index-light)\nField._configure = function configure(Type_) {\n    Type = Type_;\n};\n","\"use strict\";\nvar protobuf = module.exports = require(\"./index-minimal\");\n\nprotobuf.build = \"light\";\n\n/**\n * A node-style callback as used by {@link load} and {@link Root#load}.\n * @typedef LoadCallback\n * @type {function}\n * @param {Error|null} error Error, if any, otherwise `null`\n * @param {Root} [root] Root, if there hasn't been an error\n * @returns {undefined}\n */\n\n/**\n * Loads one or multiple .proto or preprocessed .json files into a common root namespace and calls the callback.\n * @param {string|string[]} filename One or multiple files to load\n * @param {Root} root Root namespace, defaults to create a new one if omitted.\n * @param {LoadCallback} callback Callback function\n * @returns {undefined}\n * @see {@link Root#load}\n */\nfunction load(filename, root, callback) {\n    if (typeof root === \"function\") {\n        callback = root;\n        root = new protobuf.Root();\n    } else if (!root)\n        root = new protobuf.Root();\n    return root.load(filename, callback);\n}\n\n/**\n * Loads one or multiple .proto or preprocessed .json files into a common root namespace and calls the callback.\n * @name load\n * @function\n * @param {string|string[]} filename One or multiple files to load\n * @param {LoadCallback} callback Callback function\n * @returns {undefined}\n * @see {@link Root#load}\n * @variation 2\n */\n// function load(filename:string, callback:LoadCallback):undefined\n\n/**\n * Loads one or multiple .proto or preprocessed .json files into a common root namespace and returns a promise.\n * @name load\n * @function\n * @param {string|string[]} filename One or multiple files to load\n * @param {Root} [root] Root namespace, defaults to create a new one if omitted.\n * @returns {Promise<Root>} Promise\n * @see {@link Root#load}\n * @variation 3\n */\n// function load(filename:string, [root:Root]):Promise<Root>\n\nprotobuf.load = load;\n\n/**\n * Synchronously loads one or multiple .proto or preprocessed .json files into a common root namespace (node only).\n * @param {string|string[]} filename One or multiple files to load\n * @param {Root} [root] Root namespace, defaults to create a new one if omitted.\n * @returns {Root} Root namespace\n * @throws {Error} If synchronous fetching is not supported (i.e. in browsers) or if a file's syntax is invalid\n * @see {@link Root#loadSync}\n */\nfunction loadSync(filename, root) {\n    if (!root)\n        root = new protobuf.Root();\n    return root.loadSync(filename);\n}\n\nprotobuf.loadSync = loadSync;\n\n// Serialization\nprotobuf.encoder          = require(\"./encoder\");\nprotobuf.decoder          = require(\"./decoder\");\nprotobuf.verifier         = require(\"./verifier\");\nprotobuf.converter        = require(\"./converter\");\n\n// Reflection\nprotobuf.ReflectionObject = require(\"./object\");\nprotobuf.Namespace        = require(\"./namespace\");\nprotobuf.Root             = require(\"./root\");\nprotobuf.Enum             = require(\"./enum\");\nprotobuf.Type             = require(\"./type\");\nprotobuf.Field            = require(\"./field\");\nprotobuf.OneOf            = require(\"./oneof\");\nprotobuf.MapField         = require(\"./mapfield\");\nprotobuf.Service          = require(\"./service\");\nprotobuf.Method           = require(\"./method\");\n\n// Runtime\nprotobuf.Message          = require(\"./message\");\nprotobuf.wrappers         = require(\"./wrappers\");\n\n// Utility\nprotobuf.types            = require(\"./types\");\nprotobuf.util             = require(\"./util\");\n\n// Set up possibly cyclic reflection dependencies\nprotobuf.ReflectionObject._configure(protobuf.Root);\nprotobuf.Namespace._configure(protobuf.Type, protobuf.Service, protobuf.Enum);\nprotobuf.Root._configure(protobuf.Type);\nprotobuf.Field._configure(protobuf.Type);\n","\"use strict\";\nvar protobuf = exports;\n\n/**\n * Build type, one of `\"full\"`, `\"light\"` or `\"minimal\"`.\n * @name build\n * @type {string}\n * @const\n */\nprotobuf.build = \"minimal\";\n\n// Serialization\nprotobuf.Writer       = require(\"./writer\");\nprotobuf.BufferWriter = require(\"./writer_buffer\");\nprotobuf.Reader       = require(\"./reader\");\nprotobuf.BufferReader = require(\"./reader_buffer\");\n\n// Utility\nprotobuf.util         = require(\"./util/minimal\");\nprotobuf.rpc          = require(\"./rpc\");\nprotobuf.roots        = require(\"./roots\");\nprotobuf.configure    = configure;\n\n/* istanbul ignore next */\n/**\n * Reconfigures the library according to the environment.\n * @returns {undefined}\n */\nfunction configure() {\n    protobuf.util._configure();\n    protobuf.Writer._configure(protobuf.BufferWriter);\n    protobuf.Reader._configure(protobuf.BufferReader);\n}\n\n// Set up buffer utility according to the environment\nconfigure();\n","\"use strict\";\nvar protobuf = module.exports = require(\"./index-light\");\n\nprotobuf.build = \"full\";\n\n// Parser\nprotobuf.tokenize         = require(\"./tokenize\");\nprotobuf.parse            = require(\"./parse\");\nprotobuf.common           = require(\"./common\");\n\n// Configure parser\nprotobuf.Root._configure(protobuf.Type, protobuf.parse, protobuf.common);\n","\"use strict\";\nmodule.exports = MapField;\n\n// extends Field\nvar Field = require(\"./field\");\n((MapField.prototype = Object.create(Field.prototype)).constructor = MapField).className = \"MapField\";\n\nvar types   = require(\"./types\"),\n    util    = require(\"./util\");\n\n/**\n * Constructs a new map field instance.\n * @classdesc Reflected map field.\n * @extends FieldBase\n * @constructor\n * @param {string} name Unique name within its namespace\n * @param {number} id Unique id within its namespace\n * @param {string} keyType Key type\n * @param {string} type Value type\n * @param {Object.<string,*>} [options] Declared options\n * @param {string} [comment] Comment associated with this field\n */\nfunction MapField(name, id, keyType, type, options, comment) {\n    Field.call(this, name, id, type, undefined, undefined, options, comment);\n\n    /* istanbul ignore if */\n    if (!util.isString(keyType))\n        throw TypeError(\"keyType must be a string\");\n\n    /**\n     * Key type.\n     * @type {string}\n     */\n    this.keyType = keyType; // toJSON, marker\n\n    /**\n     * Resolved key type if not a basic type.\n     * @type {ReflectionObject|null}\n     */\n    this.resolvedKeyType = null;\n\n    // Overrides Field#map\n    this.map = true;\n}\n\n/**\n * Map field descriptor.\n * @interface IMapField\n * @extends {IField}\n * @property {string} keyType Key type\n */\n\n/**\n * Extension map field descriptor.\n * @interface IExtensionMapField\n * @extends IMapField\n * @property {string} extend Extended type\n */\n\n/**\n * Constructs a map field from a map field descriptor.\n * @param {string} name Field name\n * @param {IMapField} json Map field descriptor\n * @returns {MapField} Created map field\n * @throws {TypeError} If arguments are invalid\n */\nMapField.fromJSON = function fromJSON(name, json) {\n    return new MapField(name, json.id, json.keyType, json.type, json.options, json.comment);\n};\n\n/**\n * Converts this map field to a map field descriptor.\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {IMapField} Map field descriptor\n */\nMapField.prototype.toJSON = function toJSON(toJSONOptions) {\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\n    return util.toObject([\n        \"keyType\" , this.keyType,\n        \"type\"    , this.type,\n        \"id\"      , this.id,\n        \"extend\"  , this.extend,\n        \"options\" , this.options,\n        \"comment\" , keepComments ? this.comment : undefined\n    ]);\n};\n\n/**\n * @override\n */\nMapField.prototype.resolve = function resolve() {\n    if (this.resolved)\n        return this;\n\n    // Besides a value type, map fields have a key type that may be \"any scalar type except for floating point types and bytes\"\n    if (types.mapKey[this.keyType] === undefined)\n        throw Error(\"invalid key type: \" + this.keyType);\n\n    return Field.prototype.resolve.call(this);\n};\n\n/**\n * Map field decorator (TypeScript).\n * @name MapField.d\n * @function\n * @param {number} fieldId Field id\n * @param {\"int32\"|\"uint32\"|\"sint32\"|\"fixed32\"|\"sfixed32\"|\"int64\"|\"uint64\"|\"sint64\"|\"fixed64\"|\"sfixed64\"|\"bool\"|\"string\"} fieldKeyType Field key type\n * @param {\"double\"|\"float\"|\"int32\"|\"uint32\"|\"sint32\"|\"fixed32\"|\"sfixed32\"|\"int64\"|\"uint64\"|\"sint64\"|\"fixed64\"|\"sfixed64\"|\"bool\"|\"string\"|\"bytes\"|Object|Constructor<{}>} fieldValueType Field value type\n * @returns {FieldDecorator} Decorator function\n * @template T extends { [key: string]: number | Long | string | boolean | Uint8Array | Buffer | number[] | Message<{}> }\n */\nMapField.d = function decorateMapField(fieldId, fieldKeyType, fieldValueType) {\n\n    // submessage value: decorate the submessage and use its name as the type\n    if (typeof fieldValueType === \"function\")\n        fieldValueType = util.decorateType(fieldValueType).name;\n\n    // enum reference value: create a reflected copy of the enum and keep reuseing it\n    else if (fieldValueType && typeof fieldValueType === \"object\")\n        fieldValueType = util.decorateEnum(fieldValueType).name;\n\n    return function mapFieldDecorator(prototype, fieldName) {\n        util.decorateType(prototype.constructor)\n            .add(new MapField(fieldName, fieldId, fieldKeyType, fieldValueType));\n    };\n};\n","\"use strict\";\nmodule.exports = Message;\n\nvar util = require(\"./util/minimal\");\n\n/**\n * Constructs a new message instance.\n * @classdesc Abstract runtime message.\n * @constructor\n * @param {Properties<T>} [properties] Properties to set\n * @template T extends object = object\n */\nfunction Message(properties) {\n    // not used internally\n    if (properties)\n        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n            this[keys[i]] = properties[keys[i]];\n}\n\n/**\n * Reference to the reflected type.\n * @name Message.$type\n * @type {Type}\n * @readonly\n */\n\n/**\n * Reference to the reflected type.\n * @name Message#$type\n * @type {Type}\n * @readonly\n */\n\n/*eslint-disable valid-jsdoc*/\n\n/**\n * Creates a new message of this type using the specified properties.\n * @param {Object.<string,*>} [properties] Properties to set\n * @returns {Message<T>} Message instance\n * @template T extends Message<T>\n * @this Constructor<T>\n */\nMessage.create = function create(properties) {\n    return this.$type.create(properties);\n};\n\n/**\n * Encodes a message of this type.\n * @param {T|Object.<string,*>} message Message to encode\n * @param {Writer} [writer] Writer to use\n * @returns {Writer} Writer\n * @template T extends Message<T>\n * @this Constructor<T>\n */\nMessage.encode = function encode(message, writer) {\n    return this.$type.encode(message, writer);\n};\n\n/**\n * Encodes a message of this type preceeded by its length as a varint.\n * @param {T|Object.<string,*>} message Message to encode\n * @param {Writer} [writer] Writer to use\n * @returns {Writer} Writer\n * @template T extends Message<T>\n * @this Constructor<T>\n */\nMessage.encodeDelimited = function encodeDelimited(message, writer) {\n    return this.$type.encodeDelimited(message, writer);\n};\n\n/**\n * Decodes a message of this type.\n * @name Message.decode\n * @function\n * @param {Reader|Uint8Array} reader Reader or buffer to decode\n * @returns {T} Decoded message\n * @template T extends Message<T>\n * @this Constructor<T>\n */\nMessage.decode = function decode(reader) {\n    return this.$type.decode(reader);\n};\n\n/**\n * Decodes a message of this type preceeded by its length as a varint.\n * @name Message.decodeDelimited\n * @function\n * @param {Reader|Uint8Array} reader Reader or buffer to decode\n * @returns {T} Decoded message\n * @template T extends Message<T>\n * @this Constructor<T>\n */\nMessage.decodeDelimited = function decodeDelimited(reader) {\n    return this.$type.decodeDelimited(reader);\n};\n\n/**\n * Verifies a message of this type.\n * @name Message.verify\n * @function\n * @param {Object.<string,*>} message Plain object to verify\n * @returns {string|null} `null` if valid, otherwise the reason why it is not\n */\nMessage.verify = function verify(message) {\n    return this.$type.verify(message);\n};\n\n/**\n * Creates a new message of this type from a plain object. Also converts values to their respective internal types.\n * @param {Object.<string,*>} object Plain object\n * @returns {T} Message instance\n * @template T extends Message<T>\n * @this Constructor<T>\n */\nMessage.fromObject = function fromObject(object) {\n    return this.$type.fromObject(object);\n};\n\n/**\n * Creates a plain object from a message of this type. Also converts values to other types if specified.\n * @param {T} message Message instance\n * @param {IConversionOptions} [options] Conversion options\n * @returns {Object.<string,*>} Plain object\n * @template T extends Message<T>\n * @this Constructor<T>\n */\nMessage.toObject = function toObject(message, options) {\n    return this.$type.toObject(message, options);\n};\n\n/**\n * Converts this message to JSON.\n * @returns {Object.<string,*>} JSON object\n */\nMessage.prototype.toJSON = function toJSON() {\n    return this.$type.toObject(this, util.toJSONOptions);\n};\n\n/*eslint-enable valid-jsdoc*/","\"use strict\";\nmodule.exports = Method;\n\n// extends ReflectionObject\nvar ReflectionObject = require(\"./object\");\n((Method.prototype = Object.create(ReflectionObject.prototype)).constructor = Method).className = \"Method\";\n\nvar util = require(\"./util\");\n\n/**\n * Constructs a new service method instance.\n * @classdesc Reflected service method.\n * @extends ReflectionObject\n * @constructor\n * @param {string} name Method name\n * @param {string|undefined} type Method type, usually `\"rpc\"`\n * @param {string} requestType Request message type\n * @param {string} responseType Response message type\n * @param {boolean|Object.<string,*>} [requestStream] Whether the request is streamed\n * @param {boolean|Object.<string,*>} [responseStream] Whether the response is streamed\n * @param {Object.<string,*>} [options] Declared options\n * @param {string} [comment] The comment for this method\n * @param {Object.<string,*>} [parsedOptions] Declared options, properly parsed into an object\n */\nfunction Method(name, type, requestType, responseType, requestStream, responseStream, options, comment, parsedOptions) {\n\n    /* istanbul ignore next */\n    if (util.isObject(requestStream)) {\n        options = requestStream;\n        requestStream = responseStream = undefined;\n    } else if (util.isObject(responseStream)) {\n        options = responseStream;\n        responseStream = undefined;\n    }\n\n    /* istanbul ignore if */\n    if (!(type === undefined || util.isString(type)))\n        throw TypeError(\"type must be a string\");\n\n    /* istanbul ignore if */\n    if (!util.isString(requestType))\n        throw TypeError(\"requestType must be a string\");\n\n    /* istanbul ignore if */\n    if (!util.isString(responseType))\n        throw TypeError(\"responseType must be a string\");\n\n    ReflectionObject.call(this, name, options);\n\n    /**\n     * Method type.\n     * @type {string}\n     */\n    this.type = type || \"rpc\"; // toJSON\n\n    /**\n     * Request type.\n     * @type {string}\n     */\n    this.requestType = requestType; // toJSON, marker\n\n    /**\n     * Whether requests are streamed or not.\n     * @type {boolean|undefined}\n     */\n    this.requestStream = requestStream ? true : undefined; // toJSON\n\n    /**\n     * Response type.\n     * @type {string}\n     */\n    this.responseType = responseType; // toJSON\n\n    /**\n     * Whether responses are streamed or not.\n     * @type {boolean|undefined}\n     */\n    this.responseStream = responseStream ? true : undefined; // toJSON\n\n    /**\n     * Resolved request type.\n     * @type {Type|null}\n     */\n    this.resolvedRequestType = null;\n\n    /**\n     * Resolved response type.\n     * @type {Type|null}\n     */\n    this.resolvedResponseType = null;\n\n    /**\n     * Comment for this method\n     * @type {string|null}\n     */\n    this.comment = comment;\n\n    /**\n     * Options properly parsed into an object\n     */\n    this.parsedOptions = parsedOptions;\n}\n\n/**\n * Method descriptor.\n * @interface IMethod\n * @property {string} [type=\"rpc\"] Method type\n * @property {string} requestType Request type\n * @property {string} responseType Response type\n * @property {boolean} [requestStream=false] Whether requests are streamed\n * @property {boolean} [responseStream=false] Whether responses are streamed\n * @property {Object.<string,*>} [options] Method options\n * @property {string} comment Method comments\n * @property {Object.<string,*>} [parsedOptions] Method options properly parsed into an object\n */\n\n/**\n * Constructs a method from a method descriptor.\n * @param {string} name Method name\n * @param {IMethod} json Method descriptor\n * @returns {Method} Created method\n * @throws {TypeError} If arguments are invalid\n */\nMethod.fromJSON = function fromJSON(name, json) {\n    return new Method(name, json.type, json.requestType, json.responseType, json.requestStream, json.responseStream, json.options, json.comment, json.parsedOptions);\n};\n\n/**\n * Converts this method to a method descriptor.\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {IMethod} Method descriptor\n */\nMethod.prototype.toJSON = function toJSON(toJSONOptions) {\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\n    return util.toObject([\n        \"type\"           , this.type !== \"rpc\" && /* istanbul ignore next */ this.type || undefined,\n        \"requestType\"    , this.requestType,\n        \"requestStream\"  , this.requestStream,\n        \"responseType\"   , this.responseType,\n        \"responseStream\" , this.responseStream,\n        \"options\"        , this.options,\n        \"comment\"        , keepComments ? this.comment : undefined,\n        \"parsedOptions\"  , this.parsedOptions,\n    ]);\n};\n\n/**\n * @override\n */\nMethod.prototype.resolve = function resolve() {\n\n    /* istanbul ignore if */\n    if (this.resolved)\n        return this;\n\n    this.resolvedRequestType = this.parent.lookupType(this.requestType);\n    this.resolvedResponseType = this.parent.lookupType(this.responseType);\n\n    return ReflectionObject.prototype.resolve.call(this);\n};\n","\"use strict\";\nmodule.exports = Namespace;\n\n// extends ReflectionObject\nvar ReflectionObject = require(\"./object\");\n((Namespace.prototype = Object.create(ReflectionObject.prototype)).constructor = Namespace).className = \"Namespace\";\n\nvar Field    = require(\"./field\"),\n    util     = require(\"./util\"),\n    OneOf    = require(\"./oneof\");\n\nvar Type,    // cyclic\n    Service,\n    Enum;\n\n/**\n * Constructs a new namespace instance.\n * @name Namespace\n * @classdesc Reflected namespace.\n * @extends NamespaceBase\n * @constructor\n * @param {string} name Namespace name\n * @param {Object.<string,*>} [options] Declared options\n */\n\n/**\n * Constructs a namespace from JSON.\n * @memberof Namespace\n * @function\n * @param {string} name Namespace name\n * @param {Object.<string,*>} json JSON object\n * @returns {Namespace} Created namespace\n * @throws {TypeError} If arguments are invalid\n */\nNamespace.fromJSON = function fromJSON(name, json) {\n    return new Namespace(name, json.options).addJSON(json.nested);\n};\n\n/**\n * Converts an array of reflection objects to JSON.\n * @memberof Namespace\n * @param {ReflectionObject[]} array Object array\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {Object.<string,*>|undefined} JSON object or `undefined` when array is empty\n */\nfunction arrayToJSON(array, toJSONOptions) {\n    if (!(array && array.length))\n        return undefined;\n    var obj = {};\n    for (var i = 0; i < array.length; ++i)\n        obj[array[i].name] = array[i].toJSON(toJSONOptions);\n    return obj;\n}\n\nNamespace.arrayToJSON = arrayToJSON;\n\n/**\n * Tests if the specified id is reserved.\n * @param {Array.<number[]|string>|undefined} reserved Array of reserved ranges and names\n * @param {number} id Id to test\n * @returns {boolean} `true` if reserved, otherwise `false`\n */\nNamespace.isReservedId = function isReservedId(reserved, id) {\n    if (reserved)\n        for (var i = 0; i < reserved.length; ++i)\n            if (typeof reserved[i] !== \"string\" && reserved[i][0] <= id && reserved[i][1] > id)\n                return true;\n    return false;\n};\n\n/**\n * Tests if the specified name is reserved.\n * @param {Array.<number[]|string>|undefined} reserved Array of reserved ranges and names\n * @param {string} name Name to test\n * @returns {boolean} `true` if reserved, otherwise `false`\n */\nNamespace.isReservedName = function isReservedName(reserved, name) {\n    if (reserved)\n        for (var i = 0; i < reserved.length; ++i)\n            if (reserved[i] === name)\n                return true;\n    return false;\n};\n\n/**\n * Not an actual constructor. Use {@link Namespace} instead.\n * @classdesc Base class of all reflection objects containing nested objects. This is not an actual class but here for the sake of having consistent type definitions.\n * @exports NamespaceBase\n * @extends ReflectionObject\n * @abstract\n * @constructor\n * @param {string} name Namespace name\n * @param {Object.<string,*>} [options] Declared options\n * @see {@link Namespace}\n */\nfunction Namespace(name, options) {\n    ReflectionObject.call(this, name, options);\n\n    /**\n     * Nested objects by name.\n     * @type {Object.<string,ReflectionObject>|undefined}\n     */\n    this.nested = undefined; // toJSON\n\n    /**\n     * Cached nested objects as an array.\n     * @type {ReflectionObject[]|null}\n     * @private\n     */\n    this._nestedArray = null;\n}\n\nfunction clearCache(namespace) {\n    namespace._nestedArray = null;\n    return namespace;\n}\n\n/**\n * Nested objects of this namespace as an array for iteration.\n * @name NamespaceBase#nestedArray\n * @type {ReflectionObject[]}\n * @readonly\n */\nObject.defineProperty(Namespace.prototype, \"nestedArray\", {\n    get: function() {\n        return this._nestedArray || (this._nestedArray = util.toArray(this.nested));\n    }\n});\n\n/**\n * Namespace descriptor.\n * @interface INamespace\n * @property {Object.<string,*>} [options] Namespace options\n * @property {Object.<string,AnyNestedObject>} [nested] Nested object descriptors\n */\n\n/**\n * Any extension field descriptor.\n * @typedef AnyExtensionField\n * @type {IExtensionField|IExtensionMapField}\n */\n\n/**\n * Any nested object descriptor.\n * @typedef AnyNestedObject\n * @type {IEnum|IType|IService|AnyExtensionField|INamespace|IOneOf}\n */\n\n/**\n * Converts this namespace to a namespace descriptor.\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {INamespace} Namespace descriptor\n */\nNamespace.prototype.toJSON = function toJSON(toJSONOptions) {\n    return util.toObject([\n        \"options\" , this.options,\n        \"nested\"  , arrayToJSON(this.nestedArray, toJSONOptions)\n    ]);\n};\n\n/**\n * Adds nested objects to this namespace from nested object descriptors.\n * @param {Object.<string,AnyNestedObject>} nestedJson Any nested object descriptors\n * @returns {Namespace} `this`\n */\nNamespace.prototype.addJSON = function addJSON(nestedJson) {\n    var ns = this;\n    /* istanbul ignore else */\n    if (nestedJson) {\n        for (var names = Object.keys(nestedJson), i = 0, nested; i < names.length; ++i) {\n            nested = nestedJson[names[i]];\n            ns.add( // most to least likely\n                ( nested.fields !== undefined\n                ? Type.fromJSON\n                : nested.values !== undefined\n                ? Enum.fromJSON\n                : nested.methods !== undefined\n                ? Service.fromJSON\n                : nested.id !== undefined\n                ? Field.fromJSON\n                : Namespace.fromJSON )(names[i], nested)\n            );\n        }\n    }\n    return this;\n};\n\n/**\n * Gets the nested object of the specified name.\n * @param {string} name Nested object name\n * @returns {ReflectionObject|null} The reflection object or `null` if it doesn't exist\n */\nNamespace.prototype.get = function get(name) {\n    return this.nested && this.nested[name]\n        || null;\n};\n\n/**\n * Gets the values of the nested {@link Enum|enum} of the specified name.\n * This methods differs from {@link Namespace#get|get} in that it returns an enum's values directly and throws instead of returning `null`.\n * @param {string} name Nested enum name\n * @returns {Object.<string,number>} Enum values\n * @throws {Error} If there is no such enum\n */\nNamespace.prototype.getEnum = function getEnum(name) {\n    if (this.nested && this.nested[name] instanceof Enum)\n        return this.nested[name].values;\n    throw Error(\"no such enum: \" + name);\n};\n\n/**\n * Adds a nested object to this namespace.\n * @param {ReflectionObject} object Nested object to add\n * @returns {Namespace} `this`\n * @throws {TypeError} If arguments are invalid\n * @throws {Error} If there is already a nested object with this name\n */\nNamespace.prototype.add = function add(object) {\n\n    if (!(object instanceof Field && object.extend !== undefined || object instanceof Type  || object instanceof OneOf || object instanceof Enum || object instanceof Service || object instanceof Namespace))\n        throw TypeError(\"object must be a valid nested object\");\n\n    if (!this.nested)\n        this.nested = {};\n    else {\n        var prev = this.get(object.name);\n        if (prev) {\n            if (prev instanceof Namespace && object instanceof Namespace && !(prev instanceof Type || prev instanceof Service)) {\n                // replace plain namespace but keep existing nested elements and options\n                var nested = prev.nestedArray;\n                for (var i = 0; i < nested.length; ++i)\n                    object.add(nested[i]);\n                this.remove(prev);\n                if (!this.nested)\n                    this.nested = {};\n                object.setOptions(prev.options, true);\n\n            } else\n                throw Error(\"duplicate name '\" + object.name + \"' in \" + this);\n        }\n    }\n    this.nested[object.name] = object;\n    object.onAdd(this);\n    return clearCache(this);\n};\n\n/**\n * Removes a nested object from this namespace.\n * @param {ReflectionObject} object Nested object to remove\n * @returns {Namespace} `this`\n * @throws {TypeError} If arguments are invalid\n * @throws {Error} If `object` is not a member of this namespace\n */\nNamespace.prototype.remove = function remove(object) {\n\n    if (!(object instanceof ReflectionObject))\n        throw TypeError(\"object must be a ReflectionObject\");\n    if (object.parent !== this)\n        throw Error(object + \" is not a member of \" + this);\n\n    delete this.nested[object.name];\n    if (!Object.keys(this.nested).length)\n        this.nested = undefined;\n\n    object.onRemove(this);\n    return clearCache(this);\n};\n\n/**\n * Defines additial namespaces within this one if not yet existing.\n * @param {string|string[]} path Path to create\n * @param {*} [json] Nested types to create from JSON\n * @returns {Namespace} Pointer to the last namespace created or `this` if path is empty\n */\nNamespace.prototype.define = function define(path, json) {\n\n    if (util.isString(path))\n        path = path.split(\".\");\n    else if (!Array.isArray(path))\n        throw TypeError(\"illegal path\");\n    if (path && path.length && path[0] === \"\")\n        throw Error(\"path must be relative\");\n\n    var ptr = this;\n    while (path.length > 0) {\n        var part = path.shift();\n        if (ptr.nested && ptr.nested[part]) {\n            ptr = ptr.nested[part];\n            if (!(ptr instanceof Namespace))\n                throw Error(\"path conflicts with non-namespace objects\");\n        } else\n            ptr.add(ptr = new Namespace(part));\n    }\n    if (json)\n        ptr.addJSON(json);\n    return ptr;\n};\n\n/**\n * Resolves this namespace's and all its nested objects' type references. Useful to validate a reflection tree, but comes at a cost.\n * @returns {Namespace} `this`\n */\nNamespace.prototype.resolveAll = function resolveAll() {\n    var nested = this.nestedArray, i = 0;\n    while (i < nested.length)\n        if (nested[i] instanceof Namespace)\n            nested[i++].resolveAll();\n        else\n            nested[i++].resolve();\n    return this.resolve();\n};\n\n/**\n * Recursively looks up the reflection object matching the specified path in the scope of this namespace.\n * @param {string|string[]} path Path to look up\n * @param {*|Array.<*>} filterTypes Filter types, any combination of the constructors of `protobuf.Type`, `protobuf.Enum`, `protobuf.Service` etc.\n * @param {boolean} [parentAlreadyChecked=false] If known, whether the parent has already been checked\n * @returns {ReflectionObject|null} Looked up object or `null` if none could be found\n */\nNamespace.prototype.lookup = function lookup(path, filterTypes, parentAlreadyChecked) {\n\n    /* istanbul ignore next */\n    if (typeof filterTypes === \"boolean\") {\n        parentAlreadyChecked = filterTypes;\n        filterTypes = undefined;\n    } else if (filterTypes && !Array.isArray(filterTypes))\n        filterTypes = [ filterTypes ];\n\n    if (util.isString(path) && path.length) {\n        if (path === \".\")\n            return this.root;\n        path = path.split(\".\");\n    } else if (!path.length)\n        return this;\n\n    // Start at root if path is absolute\n    if (path[0] === \"\")\n        return this.root.lookup(path.slice(1), filterTypes);\n\n    // Test if the first part matches any nested object, and if so, traverse if path contains more\n    var found = this.get(path[0]);\n    if (found) {\n        if (path.length === 1) {\n            if (!filterTypes || filterTypes.indexOf(found.constructor) > -1)\n                return found;\n        } else if (found instanceof Namespace && (found = found.lookup(path.slice(1), filterTypes, true)))\n            return found;\n\n    // Otherwise try each nested namespace\n    } else\n        for (var i = 0; i < this.nestedArray.length; ++i)\n            if (this._nestedArray[i] instanceof Namespace && (found = this._nestedArray[i].lookup(path, filterTypes, true)))\n                return found;\n\n    // If there hasn't been a match, try again at the parent\n    if (this.parent === null || parentAlreadyChecked)\n        return null;\n    return this.parent.lookup(path, filterTypes);\n};\n\n/**\n * Looks up the reflection object at the specified path, relative to this namespace.\n * @name NamespaceBase#lookup\n * @function\n * @param {string|string[]} path Path to look up\n * @param {boolean} [parentAlreadyChecked=false] Whether the parent has already been checked\n * @returns {ReflectionObject|null} Looked up object or `null` if none could be found\n * @variation 2\n */\n// lookup(path: string, [parentAlreadyChecked: boolean])\n\n/**\n * Looks up the {@link Type|type} at the specified path, relative to this namespace.\n * Besides its signature, this methods differs from {@link Namespace#lookup|lookup} in that it throws instead of returning `null`.\n * @param {string|string[]} path Path to look up\n * @returns {Type} Looked up type\n * @throws {Error} If `path` does not point to a type\n */\nNamespace.prototype.lookupType = function lookupType(path) {\n    var found = this.lookup(path, [ Type ]);\n    if (!found)\n        throw Error(\"no such type: \" + path);\n    return found;\n};\n\n/**\n * Looks up the values of the {@link Enum|enum} at the specified path, relative to this namespace.\n * Besides its signature, this methods differs from {@link Namespace#lookup|lookup} in that it throws instead of returning `null`.\n * @param {string|string[]} path Path to look up\n * @returns {Enum} Looked up enum\n * @throws {Error} If `path` does not point to an enum\n */\nNamespace.prototype.lookupEnum = function lookupEnum(path) {\n    var found = this.lookup(path, [ Enum ]);\n    if (!found)\n        throw Error(\"no such Enum '\" + path + \"' in \" + this);\n    return found;\n};\n\n/**\n * Looks up the {@link Type|type} or {@link Enum|enum} at the specified path, relative to this namespace.\n * Besides its signature, this methods differs from {@link Namespace#lookup|lookup} in that it throws instead of returning `null`.\n * @param {string|string[]} path Path to look up\n * @returns {Type} Looked up type or enum\n * @throws {Error} If `path` does not point to a type or enum\n */\nNamespace.prototype.lookupTypeOrEnum = function lookupTypeOrEnum(path) {\n    var found = this.lookup(path, [ Type, Enum ]);\n    if (!found)\n        throw Error(\"no such Type or Enum '\" + path + \"' in \" + this);\n    return found;\n};\n\n/**\n * Looks up the {@link Service|service} at the specified path, relative to this namespace.\n * Besides its signature, this methods differs from {@link Namespace#lookup|lookup} in that it throws instead of returning `null`.\n * @param {string|string[]} path Path to look up\n * @returns {Service} Looked up service\n * @throws {Error} If `path` does not point to a service\n */\nNamespace.prototype.lookupService = function lookupService(path) {\n    var found = this.lookup(path, [ Service ]);\n    if (!found)\n        throw Error(\"no such Service '\" + path + \"' in \" + this);\n    return found;\n};\n\n// Sets up cyclic dependencies (called in index-light)\nNamespace._configure = function(Type_, Service_, Enum_) {\n    Type    = Type_;\n    Service = Service_;\n    Enum    = Enum_;\n};\n","\"use strict\";\nmodule.exports = ReflectionObject;\n\nReflectionObject.className = \"ReflectionObject\";\n\nvar util = require(\"./util\");\n\nvar Root; // cyclic\n\n/**\n * Constructs a new reflection object instance.\n * @classdesc Base class of all reflection objects.\n * @constructor\n * @param {string} name Object name\n * @param {Object.<string,*>} [options] Declared options\n * @abstract\n */\nfunction ReflectionObject(name, options) {\n\n    if (!util.isString(name))\n        throw TypeError(\"name must be a string\");\n\n    if (options && !util.isObject(options))\n        throw TypeError(\"options must be an object\");\n\n    /**\n     * Options.\n     * @type {Object.<string,*>|undefined}\n     */\n    this.options = options; // toJSON\n\n    /**\n     * Parsed Options.\n     * @type {Array.<Object.<string,*>>|undefined}\n     */\n    this.parsedOptions = null;\n\n    /**\n     * Unique name within its namespace.\n     * @type {string}\n     */\n    this.name = name;\n\n    /**\n     * Parent namespace.\n     * @type {Namespace|null}\n     */\n    this.parent = null;\n\n    /**\n     * Whether already resolved or not.\n     * @type {boolean}\n     */\n    this.resolved = false;\n\n    /**\n     * Comment text, if any.\n     * @type {string|null}\n     */\n    this.comment = null;\n\n    /**\n     * Defining file name.\n     * @type {string|null}\n     */\n    this.filename = null;\n}\n\nObject.defineProperties(ReflectionObject.prototype, {\n\n    /**\n     * Reference to the root namespace.\n     * @name ReflectionObject#root\n     * @type {Root}\n     * @readonly\n     */\n    root: {\n        get: function() {\n            var ptr = this;\n            while (ptr.parent !== null)\n                ptr = ptr.parent;\n            return ptr;\n        }\n    },\n\n    /**\n     * Full name including leading dot.\n     * @name ReflectionObject#fullName\n     * @type {string}\n     * @readonly\n     */\n    fullName: {\n        get: function() {\n            var path = [ this.name ],\n                ptr = this.parent;\n            while (ptr) {\n                path.unshift(ptr.name);\n                ptr = ptr.parent;\n            }\n            return path.join(\".\");\n        }\n    }\n});\n\n/**\n * Converts this reflection object to its descriptor representation.\n * @returns {Object.<string,*>} Descriptor\n * @abstract\n */\nReflectionObject.prototype.toJSON = /* istanbul ignore next */ function toJSON() {\n    throw Error(); // not implemented, shouldn't happen\n};\n\n/**\n * Called when this object is added to a parent.\n * @param {ReflectionObject} parent Parent added to\n * @returns {undefined}\n */\nReflectionObject.prototype.onAdd = function onAdd(parent) {\n    if (this.parent && this.parent !== parent)\n        this.parent.remove(this);\n    this.parent = parent;\n    this.resolved = false;\n    var root = parent.root;\n    if (root instanceof Root)\n        root._handleAdd(this);\n};\n\n/**\n * Called when this object is removed from a parent.\n * @param {ReflectionObject} parent Parent removed from\n * @returns {undefined}\n */\nReflectionObject.prototype.onRemove = function onRemove(parent) {\n    var root = parent.root;\n    if (root instanceof Root)\n        root._handleRemove(this);\n    this.parent = null;\n    this.resolved = false;\n};\n\n/**\n * Resolves this objects type references.\n * @returns {ReflectionObject} `this`\n */\nReflectionObject.prototype.resolve = function resolve() {\n    if (this.resolved)\n        return this;\n    if (this.root instanceof Root)\n        this.resolved = true; // only if part of a root\n    return this;\n};\n\n/**\n * Gets an option value.\n * @param {string} name Option name\n * @returns {*} Option value or `undefined` if not set\n */\nReflectionObject.prototype.getOption = function getOption(name) {\n    if (this.options)\n        return this.options[name];\n    return undefined;\n};\n\n/**\n * Sets an option.\n * @param {string} name Option name\n * @param {*} value Option value\n * @param {boolean} [ifNotSet] Sets the option only if it isn't currently set\n * @returns {ReflectionObject} `this`\n */\nReflectionObject.prototype.setOption = function setOption(name, value, ifNotSet) {\n    if (!ifNotSet || !this.options || this.options[name] === undefined)\n        (this.options || (this.options = {}))[name] = value;\n    return this;\n};\n\n/**\n * Sets a parsed option.\n * @param {string} name parsed Option name\n * @param {*} value Option value\n * @param {string} propName dot '.' delimited full path of property within the option to set. if undefined\\empty, will add a new option with that value\n * @returns {ReflectionObject} `this`\n */\nReflectionObject.prototype.setParsedOption = function setParsedOption(name, value, propName) {\n    if (!this.parsedOptions) {\n        this.parsedOptions = [];\n    }\n    var parsedOptions = this.parsedOptions;\n    if (propName) {\n        // If setting a sub property of an option then try to merge it\n        // with an existing option\n        var opt = parsedOptions.find(function (opt) {\n            return Object.prototype.hasOwnProperty.call(opt, name);\n        });\n        if (opt) {\n            // If we found an existing option - just merge the property value\n            var newValue = opt[name];\n            util.setProperty(newValue, propName, value);\n        } else {\n            // otherwise, create a new option, set it's property and add it to the list\n            opt = {};\n            opt[name] = util.setProperty({}, propName, value);\n            parsedOptions.push(opt);\n        }\n    } else {\n        // Always create a new option when setting the value of the option itself\n        var newOpt = {};\n        newOpt[name] = value;\n        parsedOptions.push(newOpt);\n    }\n    return this;\n};\n\n/**\n * Sets multiple options.\n * @param {Object.<string,*>} options Options to set\n * @param {boolean} [ifNotSet] Sets an option only if it isn't currently set\n * @returns {ReflectionObject} `this`\n */\nReflectionObject.prototype.setOptions = function setOptions(options, ifNotSet) {\n    if (options)\n        for (var keys = Object.keys(options), i = 0; i < keys.length; ++i)\n            this.setOption(keys[i], options[keys[i]], ifNotSet);\n    return this;\n};\n\n/**\n * Converts this instance to its string representation.\n * @returns {string} Class name[, space, full name]\n */\nReflectionObject.prototype.toString = function toString() {\n    var className = this.constructor.className,\n        fullName  = this.fullName;\n    if (fullName.length)\n        return className + \" \" + fullName;\n    return className;\n};\n\n// Sets up cyclic dependencies (called in index-light)\nReflectionObject._configure = function(Root_) {\n    Root = Root_;\n};\n","\"use strict\";\nmodule.exports = OneOf;\n\n// extends ReflectionObject\nvar ReflectionObject = require(\"./object\");\n((OneOf.prototype = Object.create(ReflectionObject.prototype)).constructor = OneOf).className = \"OneOf\";\n\nvar Field = require(\"./field\"),\n    util  = require(\"./util\");\n\n/**\n * Constructs a new oneof instance.\n * @classdesc Reflected oneof.\n * @extends ReflectionObject\n * @constructor\n * @param {string} name Oneof name\n * @param {string[]|Object.<string,*>} [fieldNames] Field names\n * @param {Object.<string,*>} [options] Declared options\n * @param {string} [comment] Comment associated with this field\n */\nfunction OneOf(name, fieldNames, options, comment) {\n    if (!Array.isArray(fieldNames)) {\n        options = fieldNames;\n        fieldNames = undefined;\n    }\n    ReflectionObject.call(this, name, options);\n\n    /* istanbul ignore if */\n    if (!(fieldNames === undefined || Array.isArray(fieldNames)))\n        throw TypeError(\"fieldNames must be an Array\");\n\n    /**\n     * Field names that belong to this oneof.\n     * @type {string[]}\n     */\n    this.oneof = fieldNames || []; // toJSON, marker\n\n    /**\n     * Fields that belong to this oneof as an array for iteration.\n     * @type {Field[]}\n     * @readonly\n     */\n    this.fieldsArray = []; // declared readonly for conformance, possibly not yet added to parent\n\n    /**\n     * Comment for this field.\n     * @type {string|null}\n     */\n    this.comment = comment;\n}\n\n/**\n * Oneof descriptor.\n * @interface IOneOf\n * @property {Array.<string>} oneof Oneof field names\n * @property {Object.<string,*>} [options] Oneof options\n */\n\n/**\n * Constructs a oneof from a oneof descriptor.\n * @param {string} name Oneof name\n * @param {IOneOf} json Oneof descriptor\n * @returns {OneOf} Created oneof\n * @throws {TypeError} If arguments are invalid\n */\nOneOf.fromJSON = function fromJSON(name, json) {\n    return new OneOf(name, json.oneof, json.options, json.comment);\n};\n\n/**\n * Converts this oneof to a oneof descriptor.\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {IOneOf} Oneof descriptor\n */\nOneOf.prototype.toJSON = function toJSON(toJSONOptions) {\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\n    return util.toObject([\n        \"options\" , this.options,\n        \"oneof\"   , this.oneof,\n        \"comment\" , keepComments ? this.comment : undefined\n    ]);\n};\n\n/**\n * Adds the fields of the specified oneof to the parent if not already done so.\n * @param {OneOf} oneof The oneof\n * @returns {undefined}\n * @inner\n * @ignore\n */\nfunction addFieldsToParent(oneof) {\n    if (oneof.parent)\n        for (var i = 0; i < oneof.fieldsArray.length; ++i)\n            if (!oneof.fieldsArray[i].parent)\n                oneof.parent.add(oneof.fieldsArray[i]);\n}\n\n/**\n * Adds a field to this oneof and removes it from its current parent, if any.\n * @param {Field} field Field to add\n * @returns {OneOf} `this`\n */\nOneOf.prototype.add = function add(field) {\n\n    /* istanbul ignore if */\n    if (!(field instanceof Field))\n        throw TypeError(\"field must be a Field\");\n\n    if (field.parent && field.parent !== this.parent)\n        field.parent.remove(field);\n    this.oneof.push(field.name);\n    this.fieldsArray.push(field);\n    field.partOf = this; // field.parent remains null\n    addFieldsToParent(this);\n    return this;\n};\n\n/**\n * Removes a field from this oneof and puts it back to the oneof's parent.\n * @param {Field} field Field to remove\n * @returns {OneOf} `this`\n */\nOneOf.prototype.remove = function remove(field) {\n\n    /* istanbul ignore if */\n    if (!(field instanceof Field))\n        throw TypeError(\"field must be a Field\");\n\n    var index = this.fieldsArray.indexOf(field);\n\n    /* istanbul ignore if */\n    if (index < 0)\n        throw Error(field + \" is not a member of \" + this);\n\n    this.fieldsArray.splice(index, 1);\n    index = this.oneof.indexOf(field.name);\n\n    /* istanbul ignore else */\n    if (index > -1) // theoretical\n        this.oneof.splice(index, 1);\n\n    field.partOf = null;\n    return this;\n};\n\n/**\n * @override\n */\nOneOf.prototype.onAdd = function onAdd(parent) {\n    ReflectionObject.prototype.onAdd.call(this, parent);\n    var self = this;\n    // Collect present fields\n    for (var i = 0; i < this.oneof.length; ++i) {\n        var field = parent.get(this.oneof[i]);\n        if (field && !field.partOf) {\n            field.partOf = self;\n            self.fieldsArray.push(field);\n        }\n    }\n    // Add not yet present fields\n    addFieldsToParent(this);\n};\n\n/**\n * @override\n */\nOneOf.prototype.onRemove = function onRemove(parent) {\n    for (var i = 0, field; i < this.fieldsArray.length; ++i)\n        if ((field = this.fieldsArray[i]).parent)\n            field.parent.remove(field);\n    ReflectionObject.prototype.onRemove.call(this, parent);\n};\n\n/**\n * Decorator function as returned by {@link OneOf.d} (TypeScript).\n * @typedef OneOfDecorator\n * @type {function}\n * @param {Object} prototype Target prototype\n * @param {string} oneofName OneOf name\n * @returns {undefined}\n */\n\n/**\n * OneOf decorator (TypeScript).\n * @function\n * @param {...string} fieldNames Field names\n * @returns {OneOfDecorator} Decorator function\n * @template T extends string\n */\nOneOf.d = function decorateOneOf() {\n    var fieldNames = new Array(arguments.length),\n        index = 0;\n    while (index < arguments.length)\n        fieldNames[index] = arguments[index++];\n    return function oneOfDecorator(prototype, oneofName) {\n        util.decorateType(prototype.constructor)\n            .add(new OneOf(oneofName, fieldNames));\n        Object.defineProperty(prototype, oneofName, {\n            get: util.oneOfGetter(fieldNames),\n            set: util.oneOfSetter(fieldNames)\n        });\n    };\n};\n","\"use strict\";\nmodule.exports = parse;\n\nparse.filename = null;\nparse.defaults = { keepCase: false };\n\nvar tokenize  = require(\"./tokenize\"),\n    Root      = require(\"./root\"),\n    Type      = require(\"./type\"),\n    Field     = require(\"./field\"),\n    MapField  = require(\"./mapfield\"),\n    OneOf     = require(\"./oneof\"),\n    Enum      = require(\"./enum\"),\n    Service   = require(\"./service\"),\n    Method    = require(\"./method\"),\n    types     = require(\"./types\"),\n    util      = require(\"./util\");\n\nvar base10Re    = /^[1-9][0-9]*$/,\n    base10NegRe = /^-?[1-9][0-9]*$/,\n    base16Re    = /^0[x][0-9a-fA-F]+$/,\n    base16NegRe = /^-?0[x][0-9a-fA-F]+$/,\n    base8Re     = /^0[0-7]+$/,\n    base8NegRe  = /^-?0[0-7]+$/,\n    numberRe    = /^(?![eE])[0-9]*(?:\\.[0-9]*)?(?:[eE][+-]?[0-9]+)?$/,\n    nameRe      = /^[a-zA-Z_][a-zA-Z_0-9]*$/,\n    typeRefRe   = /^(?:\\.?[a-zA-Z_][a-zA-Z_0-9]*)(?:\\.[a-zA-Z_][a-zA-Z_0-9]*)*$/,\n    fqTypeRefRe = /^(?:\\.[a-zA-Z_][a-zA-Z_0-9]*)+$/;\n\n/**\n * Result object returned from {@link parse}.\n * @interface IParserResult\n * @property {string|undefined} package Package name, if declared\n * @property {string[]|undefined} imports Imports, if any\n * @property {string[]|undefined} weakImports Weak imports, if any\n * @property {string|undefined} syntax Syntax, if specified (either `\"proto2\"` or `\"proto3\"`)\n * @property {Root} root Populated root instance\n */\n\n/**\n * Options modifying the behavior of {@link parse}.\n * @interface IParseOptions\n * @property {boolean} [keepCase=false] Keeps field casing instead of converting to camel case\n * @property {boolean} [alternateCommentMode=false] Recognize double-slash comments in addition to doc-block comments.\n * @property {boolean} [preferTrailingComment=false] Use trailing comment when both leading comment and trailing comment exist.\n */\n\n/**\n * Options modifying the behavior of JSON serialization.\n * @interface IToJSONOptions\n * @property {boolean} [keepComments=false] Serializes comments.\n */\n\n/**\n * Parses the given .proto source and returns an object with the parsed contents.\n * @param {string} source Source contents\n * @param {Root} root Root to populate\n * @param {IParseOptions} [options] Parse options. Defaults to {@link parse.defaults} when omitted.\n * @returns {IParserResult} Parser result\n * @property {string} filename=null Currently processing file name for error reporting, if known\n * @property {IParseOptions} defaults Default {@link IParseOptions}\n */\nfunction parse(source, root, options) {\n    /* eslint-disable callback-return */\n    if (!(root instanceof Root)) {\n        options = root;\n        root = new Root();\n    }\n    if (!options)\n        options = parse.defaults;\n\n    var preferTrailingComment = options.preferTrailingComment || false;\n    var tn = tokenize(source, options.alternateCommentMode || false),\n        next = tn.next,\n        push = tn.push,\n        peek = tn.peek,\n        skip = tn.skip,\n        cmnt = tn.cmnt;\n\n    var head = true,\n        pkg,\n        imports,\n        weakImports,\n        syntax,\n        isProto3 = false;\n\n    var ptr = root;\n\n    var applyCase = options.keepCase ? function(name) { return name; } : util.camelCase;\n\n    /* istanbul ignore next */\n    function illegal(token, name, insideTryCatch) {\n        var filename = parse.filename;\n        if (!insideTryCatch)\n            parse.filename = null;\n        return Error(\"illegal \" + (name || \"token\") + \" '\" + token + \"' (\" + (filename ? filename + \", \" : \"\") + \"line \" + tn.line + \")\");\n    }\n\n    function readString() {\n        var values = [],\n            token;\n        do {\n            /* istanbul ignore if */\n            if ((token = next()) !== \"\\\"\" && token !== \"'\")\n                throw illegal(token);\n\n            values.push(next());\n            skip(token);\n            token = peek();\n        } while (token === \"\\\"\" || token === \"'\");\n        return values.join(\"\");\n    }\n\n    function readValue(acceptTypeRef) {\n        var token = next();\n        switch (token) {\n            case \"'\":\n            case \"\\\"\":\n                push(token);\n                return readString();\n            case \"true\": case \"TRUE\":\n                return true;\n            case \"false\": case \"FALSE\":\n                return false;\n        }\n        try {\n            return parseNumber(token, /* insideTryCatch */ true);\n        } catch (e) {\n\n            /* istanbul ignore else */\n            if (acceptTypeRef && typeRefRe.test(token))\n                return token;\n\n            /* istanbul ignore next */\n            throw illegal(token, \"value\");\n        }\n    }\n\n    function readRanges(target, acceptStrings) {\n        var token, start;\n        do {\n            if (acceptStrings && ((token = peek()) === \"\\\"\" || token === \"'\"))\n                target.push(readString());\n            else\n                target.push([ start = parseId(next()), skip(\"to\", true) ? parseId(next()) : start ]);\n        } while (skip(\",\", true));\n        var dummy = {options: undefined};\n        dummy.setOption = function(name, value) {\n          if (this.options === undefined) this.options = {};\n          this.options[name] = value;\n        };\n        ifBlock(\n            dummy,\n            function parseRange_block(token) {\n              /* istanbul ignore else */\n              if (token === \"option\") {\n                parseOption(dummy, token);  // skip\n                skip(\";\");\n              } else\n                throw illegal(token);\n            },\n            function parseRange_line() {\n              parseInlineOptions(dummy);  // skip\n            });\n    }\n\n    function parseNumber(token, insideTryCatch) {\n        var sign = 1;\n        if (token.charAt(0) === \"-\") {\n            sign = -1;\n            token = token.substring(1);\n        }\n        switch (token) {\n            case \"inf\": case \"INF\": case \"Inf\":\n                return sign * Infinity;\n            case \"nan\": case \"NAN\": case \"Nan\": case \"NaN\":\n                return NaN;\n            case \"0\":\n                return 0;\n        }\n        if (base10Re.test(token))\n            return sign * parseInt(token, 10);\n        if (base16Re.test(token))\n            return sign * parseInt(token, 16);\n        if (base8Re.test(token))\n            return sign * parseInt(token, 8);\n\n        /* istanbul ignore else */\n        if (numberRe.test(token))\n            return sign * parseFloat(token);\n\n        /* istanbul ignore next */\n        throw illegal(token, \"number\", insideTryCatch);\n    }\n\n    function parseId(token, acceptNegative) {\n        switch (token) {\n            case \"max\": case \"MAX\": case \"Max\":\n                return 536870911;\n            case \"0\":\n                return 0;\n        }\n\n        /* istanbul ignore if */\n        if (!acceptNegative && token.charAt(0) === \"-\")\n            throw illegal(token, \"id\");\n\n        if (base10NegRe.test(token))\n            return parseInt(token, 10);\n        if (base16NegRe.test(token))\n            return parseInt(token, 16);\n\n        /* istanbul ignore else */\n        if (base8NegRe.test(token))\n            return parseInt(token, 8);\n\n        /* istanbul ignore next */\n        throw illegal(token, \"id\");\n    }\n\n    function parsePackage() {\n\n        /* istanbul ignore if */\n        if (pkg !== undefined)\n            throw illegal(\"package\");\n\n        pkg = next();\n\n        /* istanbul ignore if */\n        if (!typeRefRe.test(pkg))\n            throw illegal(pkg, \"name\");\n\n        ptr = ptr.define(pkg);\n        skip(\";\");\n    }\n\n    function parseImport() {\n        var token = peek();\n        var whichImports;\n        switch (token) {\n            case \"weak\":\n                whichImports = weakImports || (weakImports = []);\n                next();\n                break;\n            case \"public\":\n                next();\n                // eslint-disable-next-line no-fallthrough\n            default:\n                whichImports = imports || (imports = []);\n                break;\n        }\n        token = readString();\n        skip(\";\");\n        whichImports.push(token);\n    }\n\n    function parseSyntax() {\n        skip(\"=\");\n        syntax = readString();\n        isProto3 = syntax === \"proto3\";\n\n        /* istanbul ignore if */\n        if (!isProto3 && syntax !== \"proto2\")\n            throw illegal(syntax, \"syntax\");\n\n        // Syntax is needed to understand the meaning of the optional field rule\n        // Otherwise the meaning is ambiguous between proto2 and proto3\n        root.setOption(\"syntax\", syntax);\n\n        skip(\";\");\n    }\n\n    function parseCommon(parent, token) {\n        switch (token) {\n\n            case \"option\":\n                parseOption(parent, token);\n                skip(\";\");\n                return true;\n\n            case \"message\":\n                parseType(parent, token);\n                return true;\n\n            case \"enum\":\n                parseEnum(parent, token);\n                return true;\n\n            case \"service\":\n                parseService(parent, token);\n                return true;\n\n            case \"extend\":\n                parseExtension(parent, token);\n                return true;\n        }\n        return false;\n    }\n\n    function ifBlock(obj, fnIf, fnElse) {\n        var trailingLine = tn.line;\n        if (obj) {\n            if(typeof obj.comment !== \"string\") {\n              obj.comment = cmnt(); // try block-type comment\n            }\n            obj.filename = parse.filename;\n        }\n        if (skip(\"{\", true)) {\n            var token;\n            while ((token = next()) !== \"}\")\n                fnIf(token);\n            skip(\";\", true);\n        } else {\n            if (fnElse)\n                fnElse();\n            skip(\";\");\n            if (obj && (typeof obj.comment !== \"string\" || preferTrailingComment))\n                obj.comment = cmnt(trailingLine) || obj.comment; // try line-type comment\n        }\n    }\n\n    function parseType(parent, token) {\n\n        /* istanbul ignore if */\n        if (!nameRe.test(token = next()))\n            throw illegal(token, \"type name\");\n\n        var type = new Type(token);\n        ifBlock(type, function parseType_block(token) {\n            if (parseCommon(type, token))\n                return;\n\n            switch (token) {\n\n                case \"map\":\n                    parseMapField(type, token);\n                    break;\n\n                case \"required\":\n                case \"repeated\":\n                    parseField(type, token);\n                    break;\n\n                case \"optional\":\n                    /* istanbul ignore if */\n                    if (isProto3) {\n                        parseField(type, \"proto3_optional\");\n                    } else {\n                        parseField(type, \"optional\");\n                    }\n                    break;\n\n                case \"oneof\":\n                    parseOneOf(type, token);\n                    break;\n\n                case \"extensions\":\n                    readRanges(type.extensions || (type.extensions = []));\n                    break;\n\n                case \"reserved\":\n                    readRanges(type.reserved || (type.reserved = []), true);\n                    break;\n\n                default:\n                    /* istanbul ignore if */\n                    if (!isProto3 || !typeRefRe.test(token))\n                        throw illegal(token);\n\n                    push(token);\n                    parseField(type, \"optional\");\n                    break;\n            }\n        });\n        parent.add(type);\n    }\n\n    function parseField(parent, rule, extend) {\n        var type = next();\n        if (type === \"group\") {\n            parseGroup(parent, rule);\n            return;\n        }\n        // Type names can consume multiple tokens, in multiple variants:\n        //    package.subpackage   field       tokens: \"package.subpackage\" [TYPE NAME ENDS HERE] \"field\"\n        //    package . subpackage field       tokens: \"package\" \".\" \"subpackage\" [TYPE NAME ENDS HERE] \"field\"\n        //    package.  subpackage field       tokens: \"package.\" \"subpackage\" [TYPE NAME ENDS HERE] \"field\"\n        //    package  .subpackage field       tokens: \"package\" \".subpackage\" [TYPE NAME ENDS HERE] \"field\"\n        // Keep reading tokens until we get a type name with no period at the end,\n        // and the next token does not start with a period.\n        while (type.endsWith(\".\") || peek().startsWith(\".\")) {\n            type += next();\n        }\n\n        /* istanbul ignore if */\n        if (!typeRefRe.test(type))\n            throw illegal(type, \"type\");\n\n        var name = next();\n\n        /* istanbul ignore if */\n        if (!nameRe.test(name))\n            throw illegal(name, \"name\");\n\n        name = applyCase(name);\n        skip(\"=\");\n\n        var field = new Field(name, parseId(next()), type, rule, extend);\n        ifBlock(field, function parseField_block(token) {\n\n            /* istanbul ignore else */\n            if (token === \"option\") {\n                parseOption(field, token);\n                skip(\";\");\n            } else\n                throw illegal(token);\n\n        }, function parseField_line() {\n            parseInlineOptions(field);\n        });\n\n        if (rule === \"proto3_optional\") {\n            // for proto3 optional fields, we create a single-member Oneof to mimic \"optional\" behavior\n            var oneof = new OneOf(\"_\" + name);\n            field.setOption(\"proto3_optional\", true);\n            oneof.add(field);\n            parent.add(oneof);\n        } else {\n            parent.add(field);\n        }\n\n        // JSON defaults to packed=true if not set so we have to set packed=false explicity when\n        // parsing proto2 descriptors without the option, where applicable. This must be done for\n        // all known packable types and anything that could be an enum (= is not a basic type).\n        if (!isProto3 && field.repeated && (types.packed[type] !== undefined || types.basic[type] === undefined))\n            field.setOption(\"packed\", false, /* ifNotSet */ true);\n    }\n\n    function parseGroup(parent, rule) {\n        var name = next();\n\n        /* istanbul ignore if */\n        if (!nameRe.test(name))\n            throw illegal(name, \"name\");\n\n        var fieldName = util.lcFirst(name);\n        if (name === fieldName)\n            name = util.ucFirst(name);\n        skip(\"=\");\n        var id = parseId(next());\n        var type = new Type(name);\n        type.group = true;\n        var field = new Field(fieldName, id, name, rule);\n        field.filename = parse.filename;\n        ifBlock(type, function parseGroup_block(token) {\n            switch (token) {\n\n                case \"option\":\n                    parseOption(type, token);\n                    skip(\";\");\n                    break;\n\n                case \"required\":\n                case \"repeated\":\n                    parseField(type, token);\n                    break;\n\n                case \"optional\":\n                    /* istanbul ignore if */\n                    if (isProto3) {\n                        parseField(type, \"proto3_optional\");\n                    } else {\n                        parseField(type, \"optional\");\n                    }\n                    break;\n\n                case \"message\":\n                    parseType(type, token);\n                    break;\n\n                case \"enum\":\n                    parseEnum(type, token);\n                    break;\n\n                /* istanbul ignore next */\n                default:\n                    throw illegal(token); // there are no groups with proto3 semantics\n            }\n        });\n        parent.add(type)\n              .add(field);\n    }\n\n    function parseMapField(parent) {\n        skip(\"<\");\n        var keyType = next();\n\n        /* istanbul ignore if */\n        if (types.mapKey[keyType] === undefined)\n            throw illegal(keyType, \"type\");\n\n        skip(\",\");\n        var valueType = next();\n\n        /* istanbul ignore if */\n        if (!typeRefRe.test(valueType))\n            throw illegal(valueType, \"type\");\n\n        skip(\">\");\n        var name = next();\n\n        /* istanbul ignore if */\n        if (!nameRe.test(name))\n            throw illegal(name, \"name\");\n\n        skip(\"=\");\n        var field = new MapField(applyCase(name), parseId(next()), keyType, valueType);\n        ifBlock(field, function parseMapField_block(token) {\n\n            /* istanbul ignore else */\n            if (token === \"option\") {\n                parseOption(field, token);\n                skip(\";\");\n            } else\n                throw illegal(token);\n\n        }, function parseMapField_line() {\n            parseInlineOptions(field);\n        });\n        parent.add(field);\n    }\n\n    function parseOneOf(parent, token) {\n\n        /* istanbul ignore if */\n        if (!nameRe.test(token = next()))\n            throw illegal(token, \"name\");\n\n        var oneof = new OneOf(applyCase(token));\n        ifBlock(oneof, function parseOneOf_block(token) {\n            if (token === \"option\") {\n                parseOption(oneof, token);\n                skip(\";\");\n            } else {\n                push(token);\n                parseField(oneof, \"optional\");\n            }\n        });\n        parent.add(oneof);\n    }\n\n    function parseEnum(parent, token) {\n\n        /* istanbul ignore if */\n        if (!nameRe.test(token = next()))\n            throw illegal(token, \"name\");\n\n        var enm = new Enum(token);\n        ifBlock(enm, function parseEnum_block(token) {\n          switch(token) {\n            case \"option\":\n              parseOption(enm, token);\n              skip(\";\");\n              break;\n\n            case \"reserved\":\n              readRanges(enm.reserved || (enm.reserved = []), true);\n              break;\n\n            default:\n              parseEnumValue(enm, token);\n          }\n        });\n        parent.add(enm);\n    }\n\n    function parseEnumValue(parent, token) {\n\n        /* istanbul ignore if */\n        if (!nameRe.test(token))\n            throw illegal(token, \"name\");\n\n        skip(\"=\");\n        var value = parseId(next(), true),\n            dummy = {\n                options: undefined\n            };\n        dummy.setOption = function(name, value) {\n            if (this.options === undefined)\n                this.options = {};\n            this.options[name] = value;\n        };\n        ifBlock(dummy, function parseEnumValue_block(token) {\n\n            /* istanbul ignore else */\n            if (token === \"option\") {\n                parseOption(dummy, token); // skip\n                skip(\";\");\n            } else\n                throw illegal(token);\n\n        }, function parseEnumValue_line() {\n            parseInlineOptions(dummy); // skip\n        });\n        parent.add(token, value, dummy.comment, dummy.options);\n    }\n\n    function parseOption(parent, token) {\n        var isCustom = skip(\"(\", true);\n\n        /* istanbul ignore if */\n        if (!typeRefRe.test(token = next()))\n            throw illegal(token, \"name\");\n\n        var name = token;\n        var option = name;\n        var propName;\n\n        if (isCustom) {\n            skip(\")\");\n            name = \"(\" + name + \")\";\n            option = name;\n            token = peek();\n            if (fqTypeRefRe.test(token)) {\n                propName = token.slice(1); //remove '.' before property name\n                name += token;\n                next();\n            }\n        }\n        skip(\"=\");\n        var optionValue = parseOptionValue(parent, name);\n        setParsedOption(parent, option, optionValue, propName);\n    }\n\n    function parseOptionValue(parent, name) {\n        // { a: \"foo\" b { c: \"bar\" } }\n        if (skip(\"{\", true)) {\n            var objectResult = {};\n\n            while (!skip(\"}\", true)) {\n                /* istanbul ignore if */\n                if (!nameRe.test(token = next())) {\n                    throw illegal(token, \"name\");\n                }\n                if (token === null) {\n                  throw illegal(token, \"end of input\");\n                }\n\n                var value;\n                var propName = token;\n\n                skip(\":\", true);\n\n                if (peek() === \"{\")\n                    value = parseOptionValue(parent, name + \".\" + token);\n                else if (peek() === \"[\") {\n                    // option (my_option) = {\n                    //     repeated_value: [ \"foo\", \"bar\" ]\n                    // };\n                    value = [];\n                    var lastValue;\n                    if (skip(\"[\", true)) {\n                        do {\n                            lastValue = readValue(true);\n                            value.push(lastValue);\n                        } while (skip(\",\", true));\n                        skip(\"]\");\n                        if (typeof lastValue !== \"undefined\") {\n                            setOption(parent, name + \".\" + token, lastValue);\n                        }\n                    }\n                } else {\n                    value = readValue(true);\n                    setOption(parent, name + \".\" + token, value);\n                }\n\n                var prevValue = objectResult[propName];\n\n                if (prevValue)\n                    value = [].concat(prevValue).concat(value);\n\n                objectResult[propName] = value;\n\n                // Semicolons and commas can be optional\n                skip(\",\", true);\n                skip(\";\", true);\n            }\n\n            return objectResult;\n        }\n\n        var simpleValue = readValue(true);\n        setOption(parent, name, simpleValue);\n        return simpleValue;\n        // Does not enforce a delimiter to be universal\n    }\n\n    function setOption(parent, name, value) {\n        if (parent.setOption)\n            parent.setOption(name, value);\n    }\n\n    function setParsedOption(parent, name, value, propName) {\n        if (parent.setParsedOption)\n            parent.setParsedOption(name, value, propName);\n    }\n\n    function parseInlineOptions(parent) {\n        if (skip(\"[\", true)) {\n            do {\n                parseOption(parent, \"option\");\n            } while (skip(\",\", true));\n            skip(\"]\");\n        }\n        return parent;\n    }\n\n    function parseService(parent, token) {\n\n        /* istanbul ignore if */\n        if (!nameRe.test(token = next()))\n            throw illegal(token, \"service name\");\n\n        var service = new Service(token);\n        ifBlock(service, function parseService_block(token) {\n            if (parseCommon(service, token))\n                return;\n\n            /* istanbul ignore else */\n            if (token === \"rpc\")\n                parseMethod(service, token);\n            else\n                throw illegal(token);\n        });\n        parent.add(service);\n    }\n\n    function parseMethod(parent, token) {\n        // Get the comment of the preceding line now (if one exists) in case the\n        // method is defined across multiple lines.\n        var commentText = cmnt();\n\n        var type = token;\n\n        /* istanbul ignore if */\n        if (!nameRe.test(token = next()))\n            throw illegal(token, \"name\");\n\n        var name = token,\n            requestType, requestStream,\n            responseType, responseStream;\n\n        skip(\"(\");\n        if (skip(\"stream\", true))\n            requestStream = true;\n\n        /* istanbul ignore if */\n        if (!typeRefRe.test(token = next()))\n            throw illegal(token);\n\n        requestType = token;\n        skip(\")\"); skip(\"returns\"); skip(\"(\");\n        if (skip(\"stream\", true))\n            responseStream = true;\n\n        /* istanbul ignore if */\n        if (!typeRefRe.test(token = next()))\n            throw illegal(token);\n\n        responseType = token;\n        skip(\")\");\n\n        var method = new Method(name, type, requestType, responseType, requestStream, responseStream);\n        method.comment = commentText;\n        ifBlock(method, function parseMethod_block(token) {\n\n            /* istanbul ignore else */\n            if (token === \"option\") {\n                parseOption(method, token);\n                skip(\";\");\n            } else\n                throw illegal(token);\n\n        });\n        parent.add(method);\n    }\n\n    function parseExtension(parent, token) {\n\n        /* istanbul ignore if */\n        if (!typeRefRe.test(token = next()))\n            throw illegal(token, \"reference\");\n\n        var reference = token;\n        ifBlock(null, function parseExtension_block(token) {\n            switch (token) {\n\n                case \"required\":\n                case \"repeated\":\n                    parseField(parent, token, reference);\n                    break;\n\n                case \"optional\":\n                    /* istanbul ignore if */\n                    if (isProto3) {\n                        parseField(parent, \"proto3_optional\", reference);\n                    } else {\n                        parseField(parent, \"optional\", reference);\n                    }\n                    break;\n\n                default:\n                    /* istanbul ignore if */\n                    if (!isProto3 || !typeRefRe.test(token))\n                        throw illegal(token);\n                    push(token);\n                    parseField(parent, \"optional\", reference);\n                    break;\n            }\n        });\n    }\n\n    var token;\n    while ((token = next()) !== null) {\n        switch (token) {\n\n            case \"package\":\n\n                /* istanbul ignore if */\n                if (!head)\n                    throw illegal(token);\n\n                parsePackage();\n                break;\n\n            case \"import\":\n\n                /* istanbul ignore if */\n                if (!head)\n                    throw illegal(token);\n\n                parseImport();\n                break;\n\n            case \"syntax\":\n\n                /* istanbul ignore if */\n                if (!head)\n                    throw illegal(token);\n\n                parseSyntax();\n                break;\n\n            case \"option\":\n\n                parseOption(ptr, token);\n                skip(\";\");\n                break;\n\n            default:\n\n                /* istanbul ignore else */\n                if (parseCommon(ptr, token)) {\n                    head = false;\n                    continue;\n                }\n\n                /* istanbul ignore next */\n                throw illegal(token);\n        }\n    }\n\n    parse.filename = null;\n    return {\n        \"package\"     : pkg,\n        \"imports\"     : imports,\n         weakImports  : weakImports,\n         syntax       : syntax,\n         root         : root\n    };\n}\n\n/**\n * Parses the given .proto source and returns an object with the parsed contents.\n * @name parse\n * @function\n * @param {string} source Source contents\n * @param {IParseOptions} [options] Parse options. Defaults to {@link parse.defaults} when omitted.\n * @returns {IParserResult} Parser result\n * @property {string} filename=null Currently processing file name for error reporting, if known\n * @property {IParseOptions} defaults Default {@link IParseOptions}\n * @variation 2\n */\n","\"use strict\";\nmodule.exports = Reader;\n\nvar util      = require(\"./util/minimal\");\n\nvar BufferReader; // cyclic\n\nvar LongBits  = util.LongBits,\n    utf8      = util.utf8;\n\n/* istanbul ignore next */\nfunction indexOutOfRange(reader, writeLength) {\n    return RangeError(\"index out of range: \" + reader.pos + \" + \" + (writeLength || 1) + \" > \" + reader.len);\n}\n\n/**\n * Constructs a new reader instance using the specified buffer.\n * @classdesc Wire format reader using `Uint8Array` if available, otherwise `Array`.\n * @constructor\n * @param {Uint8Array} buffer Buffer to read from\n */\nfunction Reader(buffer) {\n\n    /**\n     * Read buffer.\n     * @type {Uint8Array}\n     */\n    this.buf = buffer;\n\n    /**\n     * Read buffer position.\n     * @type {number}\n     */\n    this.pos = 0;\n\n    /**\n     * Read buffer length.\n     * @type {number}\n     */\n    this.len = buffer.length;\n}\n\nvar create_array = typeof Uint8Array !== \"undefined\"\n    ? function create_typed_array(buffer) {\n        if (buffer instanceof Uint8Array || Array.isArray(buffer))\n            return new Reader(buffer);\n        throw Error(\"illegal buffer\");\n    }\n    /* istanbul ignore next */\n    : function create_array(buffer) {\n        if (Array.isArray(buffer))\n            return new Reader(buffer);\n        throw Error(\"illegal buffer\");\n    };\n\nvar create = function create() {\n    return util.Buffer\n        ? function create_buffer_setup(buffer) {\n            return (Reader.create = function create_buffer(buffer) {\n                return util.Buffer.isBuffer(buffer)\n                    ? new BufferReader(buffer)\n                    /* istanbul ignore next */\n                    : create_array(buffer);\n            })(buffer);\n        }\n        /* istanbul ignore next */\n        : create_array;\n};\n\n/**\n * Creates a new reader using the specified buffer.\n * @function\n * @param {Uint8Array|Buffer} buffer Buffer to read from\n * @returns {Reader|BufferReader} A {@link BufferReader} if `buffer` is a Buffer, otherwise a {@link Reader}\n * @throws {Error} If `buffer` is not a valid buffer\n */\nReader.create = create();\n\nReader.prototype._slice = util.Array.prototype.subarray || /* istanbul ignore next */ util.Array.prototype.slice;\n\n/**\n * Reads a varint as an unsigned 32 bit value.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.uint32 = (function read_uint32_setup() {\n    var value = 4294967295; // optimizer type-hint, tends to deopt otherwise (?!)\n    return function read_uint32() {\n        value = (         this.buf[this.pos] & 127       ) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) <<  7) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) << 14) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) << 21) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] &  15) << 28) >>> 0; if (this.buf[this.pos++] < 128) return value;\n\n        /* istanbul ignore if */\n        if ((this.pos += 5) > this.len) {\n            this.pos = this.len;\n            throw indexOutOfRange(this, 10);\n        }\n        return value;\n    };\n})();\n\n/**\n * Reads a varint as a signed 32 bit value.\n * @returns {number} Value read\n */\nReader.prototype.int32 = function read_int32() {\n    return this.uint32() | 0;\n};\n\n/**\n * Reads a zig-zag encoded varint as a signed 32 bit value.\n * @returns {number} Value read\n */\nReader.prototype.sint32 = function read_sint32() {\n    var value = this.uint32();\n    return value >>> 1 ^ -(value & 1) | 0;\n};\n\n/* eslint-disable no-invalid-this */\n\nfunction readLongVarint() {\n    // tends to deopt with local vars for octet etc.\n    var bits = new LongBits(0, 0);\n    var i = 0;\n    if (this.len - this.pos > 4) { // fast route (lo)\n        for (; i < 4; ++i) {\n            // 1st..4th\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n        // 5th\n        bits.lo = (bits.lo | (this.buf[this.pos] & 127) << 28) >>> 0;\n        bits.hi = (bits.hi | (this.buf[this.pos] & 127) >>  4) >>> 0;\n        if (this.buf[this.pos++] < 128)\n            return bits;\n        i = 0;\n    } else {\n        for (; i < 3; ++i) {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n            // 1st..3th\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n        // 4th\n        bits.lo = (bits.lo | (this.buf[this.pos++] & 127) << i * 7) >>> 0;\n        return bits;\n    }\n    if (this.len - this.pos > 4) { // fast route (hi)\n        for (; i < 5; ++i) {\n            // 6th..10th\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n    } else {\n        for (; i < 5; ++i) {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n            // 6th..10th\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n    }\n    /* istanbul ignore next */\n    throw Error(\"invalid varint encoding\");\n}\n\n/* eslint-enable no-invalid-this */\n\n/**\n * Reads a varint as a signed 64 bit value.\n * @name Reader#int64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a varint as an unsigned 64 bit value.\n * @name Reader#uint64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a zig-zag encoded varint as a signed 64 bit value.\n * @name Reader#sint64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a varint as a boolean.\n * @returns {boolean} Value read\n */\nReader.prototype.bool = function read_bool() {\n    return this.uint32() !== 0;\n};\n\nfunction readFixed32_end(buf, end) { // note that this uses `end`, not `pos`\n    return (buf[end - 4]\n          | buf[end - 3] << 8\n          | buf[end - 2] << 16\n          | buf[end - 1] << 24) >>> 0;\n}\n\n/**\n * Reads fixed 32 bits as an unsigned 32 bit integer.\n * @returns {number} Value read\n */\nReader.prototype.fixed32 = function read_fixed32() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    return readFixed32_end(this.buf, this.pos += 4);\n};\n\n/**\n * Reads fixed 32 bits as a signed 32 bit integer.\n * @returns {number} Value read\n */\nReader.prototype.sfixed32 = function read_sfixed32() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    return readFixed32_end(this.buf, this.pos += 4) | 0;\n};\n\n/* eslint-disable no-invalid-this */\n\nfunction readFixed64(/* this: Reader */) {\n\n    /* istanbul ignore if */\n    if (this.pos + 8 > this.len)\n        throw indexOutOfRange(this, 8);\n\n    return new LongBits(readFixed32_end(this.buf, this.pos += 4), readFixed32_end(this.buf, this.pos += 4));\n}\n\n/* eslint-enable no-invalid-this */\n\n/**\n * Reads fixed 64 bits.\n * @name Reader#fixed64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads zig-zag encoded fixed 64 bits.\n * @name Reader#sfixed64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a float (32 bit) as a number.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.float = function read_float() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    var value = util.float.readFloatLE(this.buf, this.pos);\n    this.pos += 4;\n    return value;\n};\n\n/**\n * Reads a double (64 bit float) as a number.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.double = function read_double() {\n\n    /* istanbul ignore if */\n    if (this.pos + 8 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    var value = util.float.readDoubleLE(this.buf, this.pos);\n    this.pos += 8;\n    return value;\n};\n\n/**\n * Reads a sequence of bytes preceeded by its length as a varint.\n * @returns {Uint8Array} Value read\n */\nReader.prototype.bytes = function read_bytes() {\n    var length = this.uint32(),\n        start  = this.pos,\n        end    = this.pos + length;\n\n    /* istanbul ignore if */\n    if (end > this.len)\n        throw indexOutOfRange(this, length);\n\n    this.pos += length;\n    if (Array.isArray(this.buf)) // plain array\n        return this.buf.slice(start, end);\n\n    if (start === end) { // fix for IE 10/Win8 and others' subarray returning array of size 1\n        var nativeBuffer = util.Buffer;\n        return nativeBuffer\n            ? nativeBuffer.alloc(0)\n            : new this.buf.constructor(0);\n    }\n    return this._slice.call(this.buf, start, end);\n};\n\n/**\n * Reads a string preceeded by its byte length as a varint.\n * @returns {string} Value read\n */\nReader.prototype.string = function read_string() {\n    var bytes = this.bytes();\n    return utf8.read(bytes, 0, bytes.length);\n};\n\n/**\n * Skips the specified number of bytes if specified, otherwise skips a varint.\n * @param {number} [length] Length if known, otherwise a varint is assumed\n * @returns {Reader} `this`\n */\nReader.prototype.skip = function skip(length) {\n    if (typeof length === \"number\") {\n        /* istanbul ignore if */\n        if (this.pos + length > this.len)\n            throw indexOutOfRange(this, length);\n        this.pos += length;\n    } else {\n        do {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n        } while (this.buf[this.pos++] & 128);\n    }\n    return this;\n};\n\n/**\n * Skips the next element of the specified wire type.\n * @param {number} wireType Wire type received\n * @returns {Reader} `this`\n */\nReader.prototype.skipType = function(wireType) {\n    switch (wireType) {\n        case 0:\n            this.skip();\n            break;\n        case 1:\n            this.skip(8);\n            break;\n        case 2:\n            this.skip(this.uint32());\n            break;\n        case 3:\n            while ((wireType = this.uint32() & 7) !== 4) {\n                this.skipType(wireType);\n            }\n            break;\n        case 5:\n            this.skip(4);\n            break;\n\n        /* istanbul ignore next */\n        default:\n            throw Error(\"invalid wire type \" + wireType + \" at offset \" + this.pos);\n    }\n    return this;\n};\n\nReader._configure = function(BufferReader_) {\n    BufferReader = BufferReader_;\n    Reader.create = create();\n    BufferReader._configure();\n\n    var fn = util.Long ? \"toLong\" : /* istanbul ignore next */ \"toNumber\";\n    util.merge(Reader.prototype, {\n\n        int64: function read_int64() {\n            return readLongVarint.call(this)[fn](false);\n        },\n\n        uint64: function read_uint64() {\n            return readLongVarint.call(this)[fn](true);\n        },\n\n        sint64: function read_sint64() {\n            return readLongVarint.call(this).zzDecode()[fn](false);\n        },\n\n        fixed64: function read_fixed64() {\n            return readFixed64.call(this)[fn](true);\n        },\n\n        sfixed64: function read_sfixed64() {\n            return readFixed64.call(this)[fn](false);\n        }\n\n    });\n};\n","\"use strict\";\nmodule.exports = BufferReader;\n\n// extends Reader\nvar Reader = require(\"./reader\");\n(BufferReader.prototype = Object.create(Reader.prototype)).constructor = BufferReader;\n\nvar util = require(\"./util/minimal\");\n\n/**\n * Constructs a new buffer reader instance.\n * @classdesc Wire format reader using node buffers.\n * @extends Reader\n * @constructor\n * @param {Buffer} buffer Buffer to read from\n */\nfunction BufferReader(buffer) {\n    Reader.call(this, buffer);\n\n    /**\n     * Read buffer.\n     * @name BufferReader#buf\n     * @type {Buffer}\n     */\n}\n\nBufferReader._configure = function () {\n    /* istanbul ignore else */\n    if (util.Buffer)\n        BufferReader.prototype._slice = util.Buffer.prototype.slice;\n};\n\n\n/**\n * @override\n */\nBufferReader.prototype.string = function read_string_buffer() {\n    var len = this.uint32(); // modifies pos\n    return this.buf.utf8Slice\n        ? this.buf.utf8Slice(this.pos, this.pos = Math.min(this.pos + len, this.len))\n        : this.buf.toString(\"utf-8\", this.pos, this.pos = Math.min(this.pos + len, this.len));\n};\n\n/**\n * Reads a sequence of bytes preceeded by its length as a varint.\n * @name BufferReader#bytes\n * @function\n * @returns {Buffer} Value read\n */\n\nBufferReader._configure();\n","\"use strict\";\nmodule.exports = Root;\n\n// extends Namespace\nvar Namespace = require(\"./namespace\");\n((Root.prototype = Object.create(Namespace.prototype)).constructor = Root).className = \"Root\";\n\nvar Field   = require(\"./field\"),\n    Enum    = require(\"./enum\"),\n    OneOf   = require(\"./oneof\"),\n    util    = require(\"./util\");\n\nvar Type,   // cyclic\n    parse,  // might be excluded\n    common; // \"\n\n/**\n * Constructs a new root namespace instance.\n * @classdesc Root namespace wrapping all types, enums, services, sub-namespaces etc. that belong together.\n * @extends NamespaceBase\n * @constructor\n * @param {Object.<string,*>} [options] Top level options\n */\nfunction Root(options) {\n    Namespace.call(this, \"\", options);\n\n    /**\n     * Deferred extension fields.\n     * @type {Field[]}\n     */\n    this.deferred = [];\n\n    /**\n     * Resolved file names of loaded files.\n     * @type {string[]}\n     */\n    this.files = [];\n}\n\n/**\n * Loads a namespace descriptor into a root namespace.\n * @param {INamespace} json Nameespace descriptor\n * @param {Root} [root] Root namespace, defaults to create a new one if omitted\n * @returns {Root} Root namespace\n */\nRoot.fromJSON = function fromJSON(json, root) {\n    if (!root)\n        root = new Root();\n    if (json.options)\n        root.setOptions(json.options);\n    return root.addJSON(json.nested);\n};\n\n/**\n * Resolves the path of an imported file, relative to the importing origin.\n * This method exists so you can override it with your own logic in case your imports are scattered over multiple directories.\n * @function\n * @param {string} origin The file name of the importing file\n * @param {string} target The file name being imported\n * @returns {string|null} Resolved path to `target` or `null` to skip the file\n */\nRoot.prototype.resolvePath = util.path.resolve;\n\n/**\n * Fetch content from file path or url\n * This method exists so you can override it with your own logic.\n * @function\n * @param {string} path File path or url\n * @param {FetchCallback} callback Callback function\n * @returns {undefined}\n */\nRoot.prototype.fetch = util.fetch;\n\n// A symbol-like function to safely signal synchronous loading\n/* istanbul ignore next */\nfunction SYNC() {} // eslint-disable-line no-empty-function\n\n/**\n * Loads one or multiple .proto or preprocessed .json files into this root namespace and calls the callback.\n * @param {string|string[]} filename Names of one or multiple files to load\n * @param {IParseOptions} options Parse options\n * @param {LoadCallback} callback Callback function\n * @returns {undefined}\n */\nRoot.prototype.load = function load(filename, options, callback) {\n    if (typeof options === \"function\") {\n        callback = options;\n        options = undefined;\n    }\n    var self = this;\n    if (!callback)\n        return util.asPromise(load, self, filename, options);\n\n    var sync = callback === SYNC; // undocumented\n\n    // Finishes loading by calling the callback (exactly once)\n    function finish(err, root) {\n        /* istanbul ignore if */\n        if (!callback)\n            return;\n        if (sync)\n            throw err;\n        var cb = callback;\n        callback = null;\n        cb(err, root);\n    }\n\n    // Bundled definition existence checking\n    function getBundledFileName(filename) {\n        var idx = filename.lastIndexOf(\"google/protobuf/\");\n        if (idx > -1) {\n            var altname = filename.substring(idx);\n            if (altname in common) return altname;\n        }\n        return null;\n    }\n\n    // Processes a single file\n    function process(filename, source) {\n        try {\n            if (util.isString(source) && source.charAt(0) === \"{\")\n                source = JSON.parse(source);\n            if (!util.isString(source))\n                self.setOptions(source.options).addJSON(source.nested);\n            else {\n                parse.filename = filename;\n                var parsed = parse(source, self, options),\n                    resolved,\n                    i = 0;\n                if (parsed.imports)\n                    for (; i < parsed.imports.length; ++i)\n                        if (resolved = getBundledFileName(parsed.imports[i]) || self.resolvePath(filename, parsed.imports[i]))\n                            fetch(resolved);\n                if (parsed.weakImports)\n                    for (i = 0; i < parsed.weakImports.length; ++i)\n                        if (resolved = getBundledFileName(parsed.weakImports[i]) || self.resolvePath(filename, parsed.weakImports[i]))\n                            fetch(resolved, true);\n            }\n        } catch (err) {\n            finish(err);\n        }\n        if (!sync && !queued)\n            finish(null, self); // only once anyway\n    }\n\n    // Fetches a single file\n    function fetch(filename, weak) {\n        filename = getBundledFileName(filename) || filename;\n\n        // Skip if already loaded / attempted\n        if (self.files.indexOf(filename) > -1)\n            return;\n        self.files.push(filename);\n\n        // Shortcut bundled definitions\n        if (filename in common) {\n            if (sync)\n                process(filename, common[filename]);\n            else {\n                ++queued;\n                setTimeout(function() {\n                    --queued;\n                    process(filename, common[filename]);\n                });\n            }\n            return;\n        }\n\n        // Otherwise fetch from disk or network\n        if (sync) {\n            var source;\n            try {\n                source = util.fs.readFileSync(filename).toString(\"utf8\");\n            } catch (err) {\n                if (!weak)\n                    finish(err);\n                return;\n            }\n            process(filename, source);\n        } else {\n            ++queued;\n            self.fetch(filename, function(err, source) {\n                --queued;\n                /* istanbul ignore if */\n                if (!callback)\n                    return; // terminated meanwhile\n                if (err) {\n                    /* istanbul ignore else */\n                    if (!weak)\n                        finish(err);\n                    else if (!queued) // can't be covered reliably\n                        finish(null, self);\n                    return;\n                }\n                process(filename, source);\n            });\n        }\n    }\n    var queued = 0;\n\n    // Assembling the root namespace doesn't require working type\n    // references anymore, so we can load everything in parallel\n    if (util.isString(filename))\n        filename = [ filename ];\n    for (var i = 0, resolved; i < filename.length; ++i)\n        if (resolved = self.resolvePath(\"\", filename[i]))\n            fetch(resolved);\n\n    if (sync)\n        return self;\n    if (!queued)\n        finish(null, self);\n    return undefined;\n};\n// function load(filename:string, options:IParseOptions, callback:LoadCallback):undefined\n\n/**\n * Loads one or multiple .proto or preprocessed .json files into this root namespace and calls the callback.\n * @function Root#load\n * @param {string|string[]} filename Names of one or multiple files to load\n * @param {LoadCallback} callback Callback function\n * @returns {undefined}\n * @variation 2\n */\n// function load(filename:string, callback:LoadCallback):undefined\n\n/**\n * Loads one or multiple .proto or preprocessed .json files into this root namespace and returns a promise.\n * @function Root#load\n * @param {string|string[]} filename Names of one or multiple files to load\n * @param {IParseOptions} [options] Parse options. Defaults to {@link parse.defaults} when omitted.\n * @returns {Promise<Root>} Promise\n * @variation 3\n */\n// function load(filename:string, [options:IParseOptions]):Promise<Root>\n\n/**\n * Synchronously loads one or multiple .proto or preprocessed .json files into this root namespace (node only).\n * @function Root#loadSync\n * @param {string|string[]} filename Names of one or multiple files to load\n * @param {IParseOptions} [options] Parse options. Defaults to {@link parse.defaults} when omitted.\n * @returns {Root} Root namespace\n * @throws {Error} If synchronous fetching is not supported (i.e. in browsers) or if a file's syntax is invalid\n */\nRoot.prototype.loadSync = function loadSync(filename, options) {\n    if (!util.isNode)\n        throw Error(\"not supported\");\n    return this.load(filename, options, SYNC);\n};\n\n/**\n * @override\n */\nRoot.prototype.resolveAll = function resolveAll() {\n    if (this.deferred.length)\n        throw Error(\"unresolvable extensions: \" + this.deferred.map(function(field) {\n            return \"'extend \" + field.extend + \"' in \" + field.parent.fullName;\n        }).join(\", \"));\n    return Namespace.prototype.resolveAll.call(this);\n};\n\n// only uppercased (and thus conflict-free) children are exposed, see below\nvar exposeRe = /^[A-Z]/;\n\n/**\n * Handles a deferred declaring extension field by creating a sister field to represent it within its extended type.\n * @param {Root} root Root instance\n * @param {Field} field Declaring extension field witin the declaring type\n * @returns {boolean} `true` if successfully added to the extended type, `false` otherwise\n * @inner\n * @ignore\n */\nfunction tryHandleExtension(root, field) {\n    var extendedType = field.parent.lookup(field.extend);\n    if (extendedType) {\n        var sisterField = new Field(field.fullName, field.id, field.type, field.rule, undefined, field.options);\n        //do not allow to extend same field twice to prevent the error\n        if (extendedType.get(sisterField.name)) {\n            return true;\n        }\n        sisterField.declaringField = field;\n        field.extensionField = sisterField;\n        extendedType.add(sisterField);\n        return true;\n    }\n    return false;\n}\n\n/**\n * Called when any object is added to this root or its sub-namespaces.\n * @param {ReflectionObject} object Object added\n * @returns {undefined}\n * @private\n */\nRoot.prototype._handleAdd = function _handleAdd(object) {\n    if (object instanceof Field) {\n\n        if (/* an extension field (implies not part of a oneof) */ object.extend !== undefined && /* not already handled */ !object.extensionField)\n            if (!tryHandleExtension(this, object))\n                this.deferred.push(object);\n\n    } else if (object instanceof Enum) {\n\n        if (exposeRe.test(object.name))\n            object.parent[object.name] = object.values; // expose enum values as property of its parent\n\n    } else if (!(object instanceof OneOf)) /* everything else is a namespace */ {\n\n        if (object instanceof Type) // Try to handle any deferred extensions\n            for (var i = 0; i < this.deferred.length;)\n                if (tryHandleExtension(this, this.deferred[i]))\n                    this.deferred.splice(i, 1);\n                else\n                    ++i;\n        for (var j = 0; j < /* initializes */ object.nestedArray.length; ++j) // recurse into the namespace\n            this._handleAdd(object._nestedArray[j]);\n        if (exposeRe.test(object.name))\n            object.parent[object.name] = object; // expose namespace as property of its parent\n    }\n\n    // The above also adds uppercased (and thus conflict-free) nested types, services and enums as\n    // properties of namespaces just like static code does. This allows using a .d.ts generated for\n    // a static module with reflection-based solutions where the condition is met.\n};\n\n/**\n * Called when any object is removed from this root or its sub-namespaces.\n * @param {ReflectionObject} object Object removed\n * @returns {undefined}\n * @private\n */\nRoot.prototype._handleRemove = function _handleRemove(object) {\n    if (object instanceof Field) {\n\n        if (/* an extension field */ object.extend !== undefined) {\n            if (/* already handled */ object.extensionField) { // remove its sister field\n                object.extensionField.parent.remove(object.extensionField);\n                object.extensionField = null;\n            } else { // cancel the extension\n                var index = this.deferred.indexOf(object);\n                /* istanbul ignore else */\n                if (index > -1)\n                    this.deferred.splice(index, 1);\n            }\n        }\n\n    } else if (object instanceof Enum) {\n\n        if (exposeRe.test(object.name))\n            delete object.parent[object.name]; // unexpose enum values\n\n    } else if (object instanceof Namespace) {\n\n        for (var i = 0; i < /* initializes */ object.nestedArray.length; ++i) // recurse into the namespace\n            this._handleRemove(object._nestedArray[i]);\n\n        if (exposeRe.test(object.name))\n            delete object.parent[object.name]; // unexpose namespaces\n\n    }\n};\n\n// Sets up cyclic dependencies (called in index-light)\nRoot._configure = function(Type_, parse_, common_) {\n    Type   = Type_;\n    parse  = parse_;\n    common = common_;\n};\n","\"use strict\";\nmodule.exports = {};\n\n/**\n * Named roots.\n * This is where pbjs stores generated structures (the option `-r, --root` specifies a name).\n * Can also be used manually to make roots available across modules.\n * @name roots\n * @type {Object.<string,Root>}\n * @example\n * // pbjs -r myroot -o compiled.js ...\n *\n * // in another module:\n * require(\"./compiled.js\");\n *\n * // in any subsequent module:\n * var root = protobuf.roots[\"myroot\"];\n */\n","\"use strict\";\n\n/**\n * Streaming RPC helpers.\n * @namespace\n */\nvar rpc = exports;\n\n/**\n * RPC implementation passed to {@link Service#create} performing a service request on network level, i.e. by utilizing http requests or websockets.\n * @typedef RPCImpl\n * @type {function}\n * @param {Method|rpc.ServiceMethod<Message<{}>,Message<{}>>} method Reflected or static method being called\n * @param {Uint8Array} requestData Request data\n * @param {RPCImplCallback} callback Callback function\n * @returns {undefined}\n * @example\n * function rpcImpl(method, requestData, callback) {\n *     if (protobuf.util.lcFirst(method.name) !== \"myMethod\") // compatible with static code\n *         throw Error(\"no such method\");\n *     asynchronouslyObtainAResponse(requestData, function(err, responseData) {\n *         callback(err, responseData);\n *     });\n * }\n */\n\n/**\n * Node-style callback as used by {@link RPCImpl}.\n * @typedef RPCImplCallback\n * @type {function}\n * @param {Error|null} error Error, if any, otherwise `null`\n * @param {Uint8Array|null} [response] Response data or `null` to signal end of stream, if there hasn't been an error\n * @returns {undefined}\n */\n\nrpc.Service = require(\"./rpc/service\");\n","\"use strict\";\nmodule.exports = Service;\n\nvar util = require(\"../util/minimal\");\n\n// Extends EventEmitter\n(Service.prototype = Object.create(util.EventEmitter.prototype)).constructor = Service;\n\n/**\n * A service method callback as used by {@link rpc.ServiceMethod|ServiceMethod}.\n *\n * Differs from {@link RPCImplCallback} in that it is an actual callback of a service method which may not return `response = null`.\n * @typedef rpc.ServiceMethodCallback\n * @template TRes extends Message<TRes>\n * @type {function}\n * @param {Error|null} error Error, if any\n * @param {TRes} [response] Response message\n * @returns {undefined}\n */\n\n/**\n * A service method part of a {@link rpc.Service} as created by {@link Service.create}.\n * @typedef rpc.ServiceMethod\n * @template TReq extends Message<TReq>\n * @template TRes extends Message<TRes>\n * @type {function}\n * @param {TReq|Properties<TReq>} request Request message or plain object\n * @param {rpc.ServiceMethodCallback<TRes>} [callback] Node-style callback called with the error, if any, and the response message\n * @returns {Promise<Message<TRes>>} Promise if `callback` has been omitted, otherwise `undefined`\n */\n\n/**\n * Constructs a new RPC service instance.\n * @classdesc An RPC service as returned by {@link Service#create}.\n * @exports rpc.Service\n * @extends util.EventEmitter\n * @constructor\n * @param {RPCImpl} rpcImpl RPC implementation\n * @param {boolean} [requestDelimited=false] Whether requests are length-delimited\n * @param {boolean} [responseDelimited=false] Whether responses are length-delimited\n */\nfunction Service(rpcImpl, requestDelimited, responseDelimited) {\n\n    if (typeof rpcImpl !== \"function\")\n        throw TypeError(\"rpcImpl must be a function\");\n\n    util.EventEmitter.call(this);\n\n    /**\n     * RPC implementation. Becomes `null` once the service is ended.\n     * @type {RPCImpl|null}\n     */\n    this.rpcImpl = rpcImpl;\n\n    /**\n     * Whether requests are length-delimited.\n     * @type {boolean}\n     */\n    this.requestDelimited = Boolean(requestDelimited);\n\n    /**\n     * Whether responses are length-delimited.\n     * @type {boolean}\n     */\n    this.responseDelimited = Boolean(responseDelimited);\n}\n\n/**\n * Calls a service method through {@link rpc.Service#rpcImpl|rpcImpl}.\n * @param {Method|rpc.ServiceMethod<TReq,TRes>} method Reflected or static method\n * @param {Constructor<TReq>} requestCtor Request constructor\n * @param {Constructor<TRes>} responseCtor Response constructor\n * @param {TReq|Properties<TReq>} request Request message or plain object\n * @param {rpc.ServiceMethodCallback<TRes>} callback Service callback\n * @returns {undefined}\n * @template TReq extends Message<TReq>\n * @template TRes extends Message<TRes>\n */\nService.prototype.rpcCall = function rpcCall(method, requestCtor, responseCtor, request, callback) {\n\n    if (!request)\n        throw TypeError(\"request must be specified\");\n\n    var self = this;\n    if (!callback)\n        return util.asPromise(rpcCall, self, method, requestCtor, responseCtor, request);\n\n    if (!self.rpcImpl) {\n        setTimeout(function() { callback(Error(\"already ended\")); }, 0);\n        return undefined;\n    }\n\n    try {\n        return self.rpcImpl(\n            method,\n            requestCtor[self.requestDelimited ? \"encodeDelimited\" : \"encode\"](request).finish(),\n            function rpcCallback(err, response) {\n\n                if (err) {\n                    self.emit(\"error\", err, method);\n                    return callback(err);\n                }\n\n                if (response === null) {\n                    self.end(/* endedByRPC */ true);\n                    return undefined;\n                }\n\n                if (!(response instanceof responseCtor)) {\n                    try {\n                        response = responseCtor[self.responseDelimited ? \"decodeDelimited\" : \"decode\"](response);\n                    } catch (err) {\n                        self.emit(\"error\", err, method);\n                        return callback(err);\n                    }\n                }\n\n                self.emit(\"data\", response, method);\n                return callback(null, response);\n            }\n        );\n    } catch (err) {\n        self.emit(\"error\", err, method);\n        setTimeout(function() { callback(err); }, 0);\n        return undefined;\n    }\n};\n\n/**\n * Ends this service and emits the `end` event.\n * @param {boolean} [endedByRPC=false] Whether the service has been ended by the RPC implementation.\n * @returns {rpc.Service} `this`\n */\nService.prototype.end = function end(endedByRPC) {\n    if (this.rpcImpl) {\n        if (!endedByRPC) // signal end to rpcImpl\n            this.rpcImpl(null, null, null);\n        this.rpcImpl = null;\n        this.emit(\"end\").off();\n    }\n    return this;\n};\n","\"use strict\";\nmodule.exports = Service;\n\n// extends Namespace\nvar Namespace = require(\"./namespace\");\n((Service.prototype = Object.create(Namespace.prototype)).constructor = Service).className = \"Service\";\n\nvar Method = require(\"./method\"),\n    util   = require(\"./util\"),\n    rpc    = require(\"./rpc\");\n\n/**\n * Constructs a new service instance.\n * @classdesc Reflected service.\n * @extends NamespaceBase\n * @constructor\n * @param {string} name Service name\n * @param {Object.<string,*>} [options] Service options\n * @throws {TypeError} If arguments are invalid\n */\nfunction Service(name, options) {\n    Namespace.call(this, name, options);\n\n    /**\n     * Service methods.\n     * @type {Object.<string,Method>}\n     */\n    this.methods = {}; // toJSON, marker\n\n    /**\n     * Cached methods as an array.\n     * @type {Method[]|null}\n     * @private\n     */\n    this._methodsArray = null;\n}\n\n/**\n * Service descriptor.\n * @interface IService\n * @extends INamespace\n * @property {Object.<string,IMethod>} methods Method descriptors\n */\n\n/**\n * Constructs a service from a service descriptor.\n * @param {string} name Service name\n * @param {IService} json Service descriptor\n * @returns {Service} Created service\n * @throws {TypeError} If arguments are invalid\n */\nService.fromJSON = function fromJSON(name, json) {\n    var service = new Service(name, json.options);\n    /* istanbul ignore else */\n    if (json.methods)\n        for (var names = Object.keys(json.methods), i = 0; i < names.length; ++i)\n            service.add(Method.fromJSON(names[i], json.methods[names[i]]));\n    if (json.nested)\n        service.addJSON(json.nested);\n    service.comment = json.comment;\n    return service;\n};\n\n/**\n * Converts this service to a service descriptor.\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {IService} Service descriptor\n */\nService.prototype.toJSON = function toJSON(toJSONOptions) {\n    var inherited = Namespace.prototype.toJSON.call(this, toJSONOptions);\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\n    return util.toObject([\n        \"options\" , inherited && inherited.options || undefined,\n        \"methods\" , Namespace.arrayToJSON(this.methodsArray, toJSONOptions) || /* istanbul ignore next */ {},\n        \"nested\"  , inherited && inherited.nested || undefined,\n        \"comment\" , keepComments ? this.comment : undefined\n    ]);\n};\n\n/**\n * Methods of this service as an array for iteration.\n * @name Service#methodsArray\n * @type {Method[]}\n * @readonly\n */\nObject.defineProperty(Service.prototype, \"methodsArray\", {\n    get: function() {\n        return this._methodsArray || (this._methodsArray = util.toArray(this.methods));\n    }\n});\n\nfunction clearCache(service) {\n    service._methodsArray = null;\n    return service;\n}\n\n/**\n * @override\n */\nService.prototype.get = function get(name) {\n    return this.methods[name]\n        || Namespace.prototype.get.call(this, name);\n};\n\n/**\n * @override\n */\nService.prototype.resolveAll = function resolveAll() {\n    var methods = this.methodsArray;\n    for (var i = 0; i < methods.length; ++i)\n        methods[i].resolve();\n    return Namespace.prototype.resolve.call(this);\n};\n\n/**\n * @override\n */\nService.prototype.add = function add(object) {\n\n    /* istanbul ignore if */\n    if (this.get(object.name))\n        throw Error(\"duplicate name '\" + object.name + \"' in \" + this);\n\n    if (object instanceof Method) {\n        this.methods[object.name] = object;\n        object.parent = this;\n        return clearCache(this);\n    }\n    return Namespace.prototype.add.call(this, object);\n};\n\n/**\n * @override\n */\nService.prototype.remove = function remove(object) {\n    if (object instanceof Method) {\n\n        /* istanbul ignore if */\n        if (this.methods[object.name] !== object)\n            throw Error(object + \" is not a member of \" + this);\n\n        delete this.methods[object.name];\n        object.parent = null;\n        return clearCache(this);\n    }\n    return Namespace.prototype.remove.call(this, object);\n};\n\n/**\n * Creates a runtime service using the specified rpc implementation.\n * @param {RPCImpl} rpcImpl RPC implementation\n * @param {boolean} [requestDelimited=false] Whether requests are length-delimited\n * @param {boolean} [responseDelimited=false] Whether responses are length-delimited\n * @returns {rpc.Service} RPC service. Useful where requests and/or responses are streamed.\n */\nService.prototype.create = function create(rpcImpl, requestDelimited, responseDelimited) {\n    var rpcService = new rpc.Service(rpcImpl, requestDelimited, responseDelimited);\n    for (var i = 0, method; i < /* initializes */ this.methodsArray.length; ++i) {\n        var methodName = util.lcFirst((method = this._methodsArray[i]).resolve().name).replace(/[^$\\w_]/g, \"\");\n        rpcService[methodName] = util.codegen([\"r\",\"c\"], util.isReserved(methodName) ? methodName + \"_\" : methodName)(\"return this.rpcCall(m,q,s,r,c)\")({\n            m: method,\n            q: method.resolvedRequestType.ctor,\n            s: method.resolvedResponseType.ctor\n        });\n    }\n    return rpcService;\n};\n","\"use strict\";\nmodule.exports = tokenize;\n\nvar delimRe        = /[\\s{}=;:[\\],'\"()<>]/g,\n    stringDoubleRe = /(?:\"([^\"\\\\]*(?:\\\\.[^\"\\\\]*)*)\")/g,\n    stringSingleRe = /(?:'([^'\\\\]*(?:\\\\.[^'\\\\]*)*)')/g;\n\nvar setCommentRe = /^ *[*/]+ */,\n    setCommentAltRe = /^\\s*\\*?\\/*/,\n    setCommentSplitRe = /\\n/g,\n    whitespaceRe = /\\s/,\n    unescapeRe = /\\\\(.?)/g;\n\nvar unescapeMap = {\n    \"0\": \"\\0\",\n    \"r\": \"\\r\",\n    \"n\": \"\\n\",\n    \"t\": \"\\t\"\n};\n\n/**\n * Unescapes a string.\n * @param {string} str String to unescape\n * @returns {string} Unescaped string\n * @property {Object.<string,string>} map Special characters map\n * @memberof tokenize\n */\nfunction unescape(str) {\n    return str.replace(unescapeRe, function($0, $1) {\n        switch ($1) {\n            case \"\\\\\":\n            case \"\":\n                return $1;\n            default:\n                return unescapeMap[$1] || \"\";\n        }\n    });\n}\n\ntokenize.unescape = unescape;\n\n/**\n * Gets the next token and advances.\n * @typedef TokenizerHandleNext\n * @type {function}\n * @returns {string|null} Next token or `null` on eof\n */\n\n/**\n * Peeks for the next token.\n * @typedef TokenizerHandlePeek\n * @type {function}\n * @returns {string|null} Next token or `null` on eof\n */\n\n/**\n * Pushes a token back to the stack.\n * @typedef TokenizerHandlePush\n * @type {function}\n * @param {string} token Token\n * @returns {undefined}\n */\n\n/**\n * Skips the next token.\n * @typedef TokenizerHandleSkip\n * @type {function}\n * @param {string} expected Expected token\n * @param {boolean} [optional=false] If optional\n * @returns {boolean} Whether the token matched\n * @throws {Error} If the token didn't match and is not optional\n */\n\n/**\n * Gets the comment on the previous line or, alternatively, the line comment on the specified line.\n * @typedef TokenizerHandleCmnt\n * @type {function}\n * @param {number} [line] Line number\n * @returns {string|null} Comment text or `null` if none\n */\n\n/**\n * Handle object returned from {@link tokenize}.\n * @interface ITokenizerHandle\n * @property {TokenizerHandleNext} next Gets the next token and advances (`null` on eof)\n * @property {TokenizerHandlePeek} peek Peeks for the next token (`null` on eof)\n * @property {TokenizerHandlePush} push Pushes a token back to the stack\n * @property {TokenizerHandleSkip} skip Skips a token, returns its presence and advances or, if non-optional and not present, throws\n * @property {TokenizerHandleCmnt} cmnt Gets the comment on the previous line or the line comment on the specified line, if any\n * @property {number} line Current line number\n */\n\n/**\n * Tokenizes the given .proto source and returns an object with useful utility functions.\n * @param {string} source Source contents\n * @param {boolean} alternateCommentMode Whether we should activate alternate comment parsing mode.\n * @returns {ITokenizerHandle} Tokenizer handle\n */\nfunction tokenize(source, alternateCommentMode) {\n    /* eslint-disable callback-return */\n    source = source.toString();\n\n    var offset = 0,\n        length = source.length,\n        line = 1,\n        lastCommentLine = 0,\n        comments = {};\n\n    var stack = [];\n\n    var stringDelim = null;\n\n    /* istanbul ignore next */\n    /**\n     * Creates an error for illegal syntax.\n     * @param {string} subject Subject\n     * @returns {Error} Error created\n     * @inner\n     */\n    function illegal(subject) {\n        return Error(\"illegal \" + subject + \" (line \" + line + \")\");\n    }\n\n    /**\n     * Reads a string till its end.\n     * @returns {string} String read\n     * @inner\n     */\n    function readString() {\n        var re = stringDelim === \"'\" ? stringSingleRe : stringDoubleRe;\n        re.lastIndex = offset - 1;\n        var match = re.exec(source);\n        if (!match)\n            throw illegal(\"string\");\n        offset = re.lastIndex;\n        push(stringDelim);\n        stringDelim = null;\n        return unescape(match[1]);\n    }\n\n    /**\n     * Gets the character at `pos` within the source.\n     * @param {number} pos Position\n     * @returns {string} Character\n     * @inner\n     */\n    function charAt(pos) {\n        return source.charAt(pos);\n    }\n\n    /**\n     * Sets the current comment text.\n     * @param {number} start Start offset\n     * @param {number} end End offset\n     * @param {boolean} isLeading set if a leading comment\n     * @returns {undefined}\n     * @inner\n     */\n    function setComment(start, end, isLeading) {\n        var comment = {\n            type: source.charAt(start++),\n            lineEmpty: false,\n            leading: isLeading,\n        };\n        var lookback;\n        if (alternateCommentMode) {\n            lookback = 2;  // alternate comment parsing: \"//\" or \"/*\"\n        } else {\n            lookback = 3;  // \"///\" or \"/**\"\n        }\n        var commentOffset = start - lookback,\n            c;\n        do {\n            if (--commentOffset < 0 ||\n                    (c = source.charAt(commentOffset)) === \"\\n\") {\n                comment.lineEmpty = true;\n                break;\n            }\n        } while (c === \" \" || c === \"\\t\");\n        var lines = source\n            .substring(start, end)\n            .split(setCommentSplitRe);\n        for (var i = 0; i < lines.length; ++i)\n            lines[i] = lines[i]\n                .replace(alternateCommentMode ? setCommentAltRe : setCommentRe, \"\")\n                .trim();\n        comment.text = lines\n            .join(\"\\n\")\n            .trim();\n\n        comments[line] = comment;\n        lastCommentLine = line;\n    }\n\n    function isDoubleSlashCommentLine(startOffset) {\n        var endOffset = findEndOfLine(startOffset);\n\n        // see if remaining line matches comment pattern\n        var lineText = source.substring(startOffset, endOffset);\n        var isComment = /^\\s*\\/\\//.test(lineText);\n        return isComment;\n    }\n\n    function findEndOfLine(cursor) {\n        // find end of cursor's line\n        var endOffset = cursor;\n        while (endOffset < length && charAt(endOffset) !== \"\\n\") {\n            endOffset++;\n        }\n        return endOffset;\n    }\n\n    /**\n     * Obtains the next token.\n     * @returns {string|null} Next token or `null` on eof\n     * @inner\n     */\n    function next() {\n        if (stack.length > 0)\n            return stack.shift();\n        if (stringDelim)\n            return readString();\n        var repeat,\n            prev,\n            curr,\n            start,\n            isDoc,\n            isLeadingComment = offset === 0;\n        do {\n            if (offset === length)\n                return null;\n            repeat = false;\n            while (whitespaceRe.test(curr = charAt(offset))) {\n                if (curr === \"\\n\") {\n                    isLeadingComment = true;\n                    ++line;\n                }\n                if (++offset === length)\n                    return null;\n            }\n\n            if (charAt(offset) === \"/\") {\n                if (++offset === length) {\n                    throw illegal(\"comment\");\n                }\n                if (charAt(offset) === \"/\") { // Line\n                    if (!alternateCommentMode) {\n                        // check for triple-slash comment\n                        isDoc = charAt(start = offset + 1) === \"/\";\n\n                        while (charAt(++offset) !== \"\\n\") {\n                            if (offset === length) {\n                                return null;\n                            }\n                        }\n                        ++offset;\n                        if (isDoc) {\n                            setComment(start, offset - 1, isLeadingComment);\n                            // Trailing comment cannot not be multi-line,\n                            // so leading comment state should be reset to handle potential next comments\n                            isLeadingComment = true;\n                        }\n                        ++line;\n                        repeat = true;\n                    } else {\n                        // check for double-slash comments, consolidating consecutive lines\n                        start = offset;\n                        isDoc = false;\n                        if (isDoubleSlashCommentLine(offset - 1)) {\n                            isDoc = true;\n                            do {\n                                offset = findEndOfLine(offset);\n                                if (offset === length) {\n                                    break;\n                                }\n                                offset++;\n                                if (!isLeadingComment) {\n                                    // Trailing comment cannot not be multi-line\n                                    break;\n                                }\n                            } while (isDoubleSlashCommentLine(offset));\n                        } else {\n                            offset = Math.min(length, findEndOfLine(offset) + 1);\n                        }\n                        if (isDoc) {\n                            setComment(start, offset, isLeadingComment);\n                            isLeadingComment = true;\n                        }\n                        line++;\n                        repeat = true;\n                    }\n                } else if ((curr = charAt(offset)) === \"*\") { /* Block */\n                    // check for /** (regular comment mode) or /* (alternate comment mode)\n                    start = offset + 1;\n                    isDoc = alternateCommentMode || charAt(start) === \"*\";\n                    do {\n                        if (curr === \"\\n\") {\n                            ++line;\n                        }\n                        if (++offset === length) {\n                            throw illegal(\"comment\");\n                        }\n                        prev = curr;\n                        curr = charAt(offset);\n                    } while (prev !== \"*\" || curr !== \"/\");\n                    ++offset;\n                    if (isDoc) {\n                        setComment(start, offset - 2, isLeadingComment);\n                        isLeadingComment = true;\n                    }\n                    repeat = true;\n                } else {\n                    return \"/\";\n                }\n            }\n        } while (repeat);\n\n        // offset !== length if we got here\n\n        var end = offset;\n        delimRe.lastIndex = 0;\n        var delim = delimRe.test(charAt(end++));\n        if (!delim)\n            while (end < length && !delimRe.test(charAt(end)))\n                ++end;\n        var token = source.substring(offset, offset = end);\n        if (token === \"\\\"\" || token === \"'\")\n            stringDelim = token;\n        return token;\n    }\n\n    /**\n     * Pushes a token back to the stack.\n     * @param {string} token Token\n     * @returns {undefined}\n     * @inner\n     */\n    function push(token) {\n        stack.push(token);\n    }\n\n    /**\n     * Peeks for the next token.\n     * @returns {string|null} Token or `null` on eof\n     * @inner\n     */\n    function peek() {\n        if (!stack.length) {\n            var token = next();\n            if (token === null)\n                return null;\n            push(token);\n        }\n        return stack[0];\n    }\n\n    /**\n     * Skips a token.\n     * @param {string} expected Expected token\n     * @param {boolean} [optional=false] Whether the token is optional\n     * @returns {boolean} `true` when skipped, `false` if not\n     * @throws {Error} When a required token is not present\n     * @inner\n     */\n    function skip(expected, optional) {\n        var actual = peek(),\n            equals = actual === expected;\n        if (equals) {\n            next();\n            return true;\n        }\n        if (!optional)\n            throw illegal(\"token '\" + actual + \"', '\" + expected + \"' expected\");\n        return false;\n    }\n\n    /**\n     * Gets a comment.\n     * @param {number} [trailingLine] Line number if looking for a trailing comment\n     * @returns {string|null} Comment text\n     * @inner\n     */\n    function cmnt(trailingLine) {\n        var ret = null;\n        var comment;\n        if (trailingLine === undefined) {\n            comment = comments[line - 1];\n            delete comments[line - 1];\n            if (comment && (alternateCommentMode || comment.type === \"*\" || comment.lineEmpty)) {\n                ret = comment.leading ? comment.text : null;\n            }\n        } else {\n            /* istanbul ignore else */\n            if (lastCommentLine < trailingLine) {\n                peek();\n            }\n            comment = comments[trailingLine];\n            delete comments[trailingLine];\n            if (comment && !comment.lineEmpty && (alternateCommentMode || comment.type === \"/\")) {\n                ret = comment.leading ? null : comment.text;\n            }\n        }\n        return ret;\n    }\n\n    return Object.defineProperty({\n        next: next,\n        peek: peek,\n        push: push,\n        skip: skip,\n        cmnt: cmnt\n    }, \"line\", {\n        get: function() { return line; }\n    });\n    /* eslint-enable callback-return */\n}\n","\"use strict\";\nmodule.exports = Type;\n\n// extends Namespace\nvar Namespace = require(\"./namespace\");\n((Type.prototype = Object.create(Namespace.prototype)).constructor = Type).className = \"Type\";\n\nvar Enum      = require(\"./enum\"),\n    OneOf     = require(\"./oneof\"),\n    Field     = require(\"./field\"),\n    MapField  = require(\"./mapfield\"),\n    Service   = require(\"./service\"),\n    Message   = require(\"./message\"),\n    Reader    = require(\"./reader\"),\n    Writer    = require(\"./writer\"),\n    util      = require(\"./util\"),\n    encoder   = require(\"./encoder\"),\n    decoder   = require(\"./decoder\"),\n    verifier  = require(\"./verifier\"),\n    converter = require(\"./converter\"),\n    wrappers  = require(\"./wrappers\");\n\n/**\n * Constructs a new reflected message type instance.\n * @classdesc Reflected message type.\n * @extends NamespaceBase\n * @constructor\n * @param {string} name Message name\n * @param {Object.<string,*>} [options] Declared options\n */\nfunction Type(name, options) {\n    Namespace.call(this, name, options);\n\n    /**\n     * Message fields.\n     * @type {Object.<string,Field>}\n     */\n    this.fields = {};  // toJSON, marker\n\n    /**\n     * Oneofs declared within this namespace, if any.\n     * @type {Object.<string,OneOf>}\n     */\n    this.oneofs = undefined; // toJSON\n\n    /**\n     * Extension ranges, if any.\n     * @type {number[][]}\n     */\n    this.extensions = undefined; // toJSON\n\n    /**\n     * Reserved ranges, if any.\n     * @type {Array.<number[]|string>}\n     */\n    this.reserved = undefined; // toJSON\n\n    /*?\n     * Whether this type is a legacy group.\n     * @type {boolean|undefined}\n     */\n    this.group = undefined; // toJSON\n\n    /**\n     * Cached fields by id.\n     * @type {Object.<number,Field>|null}\n     * @private\n     */\n    this._fieldsById = null;\n\n    /**\n     * Cached fields as an array.\n     * @type {Field[]|null}\n     * @private\n     */\n    this._fieldsArray = null;\n\n    /**\n     * Cached oneofs as an array.\n     * @type {OneOf[]|null}\n     * @private\n     */\n    this._oneofsArray = null;\n\n    /**\n     * Cached constructor.\n     * @type {Constructor<{}>}\n     * @private\n     */\n    this._ctor = null;\n}\n\nObject.defineProperties(Type.prototype, {\n\n    /**\n     * Message fields by id.\n     * @name Type#fieldsById\n     * @type {Object.<number,Field>}\n     * @readonly\n     */\n    fieldsById: {\n        get: function() {\n\n            /* istanbul ignore if */\n            if (this._fieldsById)\n                return this._fieldsById;\n\n            this._fieldsById = {};\n            for (var names = Object.keys(this.fields), i = 0; i < names.length; ++i) {\n                var field = this.fields[names[i]],\n                    id = field.id;\n\n                /* istanbul ignore if */\n                if (this._fieldsById[id])\n                    throw Error(\"duplicate id \" + id + \" in \" + this);\n\n                this._fieldsById[id] = field;\n            }\n            return this._fieldsById;\n        }\n    },\n\n    /**\n     * Fields of this message as an array for iteration.\n     * @name Type#fieldsArray\n     * @type {Field[]}\n     * @readonly\n     */\n    fieldsArray: {\n        get: function() {\n            return this._fieldsArray || (this._fieldsArray = util.toArray(this.fields));\n        }\n    },\n\n    /**\n     * Oneofs of this message as an array for iteration.\n     * @name Type#oneofsArray\n     * @type {OneOf[]}\n     * @readonly\n     */\n    oneofsArray: {\n        get: function() {\n            return this._oneofsArray || (this._oneofsArray = util.toArray(this.oneofs));\n        }\n    },\n\n    /**\n     * The registered constructor, if any registered, otherwise a generic constructor.\n     * Assigning a function replaces the internal constructor. If the function does not extend {@link Message} yet, its prototype will be setup accordingly and static methods will be populated. If it already extends {@link Message}, it will just replace the internal constructor.\n     * @name Type#ctor\n     * @type {Constructor<{}>}\n     */\n    ctor: {\n        get: function() {\n            return this._ctor || (this.ctor = Type.generateConstructor(this)());\n        },\n        set: function(ctor) {\n\n            // Ensure proper prototype\n            var prototype = ctor.prototype;\n            if (!(prototype instanceof Message)) {\n                (ctor.prototype = new Message()).constructor = ctor;\n                util.merge(ctor.prototype, prototype);\n            }\n\n            // Classes and messages reference their reflected type\n            ctor.$type = ctor.prototype.$type = this;\n\n            // Mix in static methods\n            util.merge(ctor, Message, true);\n\n            this._ctor = ctor;\n\n            // Messages have non-enumerable default values on their prototype\n            var i = 0;\n            for (; i < /* initializes */ this.fieldsArray.length; ++i)\n                this._fieldsArray[i].resolve(); // ensures a proper value\n\n            // Messages have non-enumerable getters and setters for each virtual oneof field\n            var ctorProperties = {};\n            for (i = 0; i < /* initializes */ this.oneofsArray.length; ++i)\n                ctorProperties[this._oneofsArray[i].resolve().name] = {\n                    get: util.oneOfGetter(this._oneofsArray[i].oneof),\n                    set: util.oneOfSetter(this._oneofsArray[i].oneof)\n                };\n            if (i)\n                Object.defineProperties(ctor.prototype, ctorProperties);\n        }\n    }\n});\n\n/**\n * Generates a constructor function for the specified type.\n * @param {Type} mtype Message type\n * @returns {Codegen} Codegen instance\n */\nType.generateConstructor = function generateConstructor(mtype) {\n    /* eslint-disable no-unexpected-multiline */\n    var gen = util.codegen([\"p\"], mtype.name);\n    // explicitly initialize mutable object/array fields so that these aren't just inherited from the prototype\n    for (var i = 0, field; i < mtype.fieldsArray.length; ++i)\n        if ((field = mtype._fieldsArray[i]).map) gen\n            (\"this%s={}\", util.safeProp(field.name));\n        else if (field.repeated) gen\n            (\"this%s=[]\", util.safeProp(field.name));\n    return gen\n    (\"if(p)for(var ks=Object.keys(p),i=0;i<ks.length;++i)if(p[ks[i]]!=null)\") // omit undefined or null\n        (\"this[ks[i]]=p[ks[i]]\");\n    /* eslint-enable no-unexpected-multiline */\n};\n\nfunction clearCache(type) {\n    type._fieldsById = type._fieldsArray = type._oneofsArray = null;\n    delete type.encode;\n    delete type.decode;\n    delete type.verify;\n    return type;\n}\n\n/**\n * Message type descriptor.\n * @interface IType\n * @extends INamespace\n * @property {Object.<string,IOneOf>} [oneofs] Oneof descriptors\n * @property {Object.<string,IField>} fields Field descriptors\n * @property {number[][]} [extensions] Extension ranges\n * @property {Array.<number[]|string>} [reserved] Reserved ranges\n * @property {boolean} [group=false] Whether a legacy group or not\n */\n\n/**\n * Creates a message type from a message type descriptor.\n * @param {string} name Message name\n * @param {IType} json Message type descriptor\n * @returns {Type} Created message type\n */\nType.fromJSON = function fromJSON(name, json) {\n    var type = new Type(name, json.options);\n    type.extensions = json.extensions;\n    type.reserved = json.reserved;\n    var names = Object.keys(json.fields),\n        i = 0;\n    for (; i < names.length; ++i)\n        type.add(\n            ( typeof json.fields[names[i]].keyType !== \"undefined\"\n            ? MapField.fromJSON\n            : Field.fromJSON )(names[i], json.fields[names[i]])\n        );\n    if (json.oneofs)\n        for (names = Object.keys(json.oneofs), i = 0; i < names.length; ++i)\n            type.add(OneOf.fromJSON(names[i], json.oneofs[names[i]]));\n    if (json.nested)\n        for (names = Object.keys(json.nested), i = 0; i < names.length; ++i) {\n            var nested = json.nested[names[i]];\n            type.add( // most to least likely\n                ( nested.id !== undefined\n                ? Field.fromJSON\n                : nested.fields !== undefined\n                ? Type.fromJSON\n                : nested.values !== undefined\n                ? Enum.fromJSON\n                : nested.methods !== undefined\n                ? Service.fromJSON\n                : Namespace.fromJSON )(names[i], nested)\n            );\n        }\n    if (json.extensions && json.extensions.length)\n        type.extensions = json.extensions;\n    if (json.reserved && json.reserved.length)\n        type.reserved = json.reserved;\n    if (json.group)\n        type.group = true;\n    if (json.comment)\n        type.comment = json.comment;\n    return type;\n};\n\n/**\n * Converts this message type to a message type descriptor.\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {IType} Message type descriptor\n */\nType.prototype.toJSON = function toJSON(toJSONOptions) {\n    var inherited = Namespace.prototype.toJSON.call(this, toJSONOptions);\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\n    return util.toObject([\n        \"options\"    , inherited && inherited.options || undefined,\n        \"oneofs\"     , Namespace.arrayToJSON(this.oneofsArray, toJSONOptions),\n        \"fields\"     , Namespace.arrayToJSON(this.fieldsArray.filter(function(obj) { return !obj.declaringField; }), toJSONOptions) || {},\n        \"extensions\" , this.extensions && this.extensions.length ? this.extensions : undefined,\n        \"reserved\"   , this.reserved && this.reserved.length ? this.reserved : undefined,\n        \"group\"      , this.group || undefined,\n        \"nested\"     , inherited && inherited.nested || undefined,\n        \"comment\"    , keepComments ? this.comment : undefined\n    ]);\n};\n\n/**\n * @override\n */\nType.prototype.resolveAll = function resolveAll() {\n    var fields = this.fieldsArray, i = 0;\n    while (i < fields.length)\n        fields[i++].resolve();\n    var oneofs = this.oneofsArray; i = 0;\n    while (i < oneofs.length)\n        oneofs[i++].resolve();\n    return Namespace.prototype.resolveAll.call(this);\n};\n\n/**\n * @override\n */\nType.prototype.get = function get(name) {\n    return this.fields[name]\n        || this.oneofs && this.oneofs[name]\n        || this.nested && this.nested[name]\n        || null;\n};\n\n/**\n * Adds a nested object to this type.\n * @param {ReflectionObject} object Nested object to add\n * @returns {Type} `this`\n * @throws {TypeError} If arguments are invalid\n * @throws {Error} If there is already a nested object with this name or, if a field, when there is already a field with this id\n */\nType.prototype.add = function add(object) {\n\n    if (this.get(object.name))\n        throw Error(\"duplicate name '\" + object.name + \"' in \" + this);\n\n    if (object instanceof Field && object.extend === undefined) {\n        // NOTE: Extension fields aren't actual fields on the declaring type, but nested objects.\n        // The root object takes care of adding distinct sister-fields to the respective extended\n        // type instead.\n\n        // avoids calling the getter if not absolutely necessary because it's called quite frequently\n        if (this._fieldsById ? /* istanbul ignore next */ this._fieldsById[object.id] : this.fieldsById[object.id])\n            throw Error(\"duplicate id \" + object.id + \" in \" + this);\n        if (this.isReservedId(object.id))\n            throw Error(\"id \" + object.id + \" is reserved in \" + this);\n        if (this.isReservedName(object.name))\n            throw Error(\"name '\" + object.name + \"' is reserved in \" + this);\n\n        if (object.parent)\n            object.parent.remove(object);\n        this.fields[object.name] = object;\n        object.message = this;\n        object.onAdd(this);\n        return clearCache(this);\n    }\n    if (object instanceof OneOf) {\n        if (!this.oneofs)\n            this.oneofs = {};\n        this.oneofs[object.name] = object;\n        object.onAdd(this);\n        return clearCache(this);\n    }\n    return Namespace.prototype.add.call(this, object);\n};\n\n/**\n * Removes a nested object from this type.\n * @param {ReflectionObject} object Nested object to remove\n * @returns {Type} `this`\n * @throws {TypeError} If arguments are invalid\n * @throws {Error} If `object` is not a member of this type\n */\nType.prototype.remove = function remove(object) {\n    if (object instanceof Field && object.extend === undefined) {\n        // See Type#add for the reason why extension fields are excluded here.\n\n        /* istanbul ignore if */\n        if (!this.fields || this.fields[object.name] !== object)\n            throw Error(object + \" is not a member of \" + this);\n\n        delete this.fields[object.name];\n        object.parent = null;\n        object.onRemove(this);\n        return clearCache(this);\n    }\n    if (object instanceof OneOf) {\n\n        /* istanbul ignore if */\n        if (!this.oneofs || this.oneofs[object.name] !== object)\n            throw Error(object + \" is not a member of \" + this);\n\n        delete this.oneofs[object.name];\n        object.parent = null;\n        object.onRemove(this);\n        return clearCache(this);\n    }\n    return Namespace.prototype.remove.call(this, object);\n};\n\n/**\n * Tests if the specified id is reserved.\n * @param {number} id Id to test\n * @returns {boolean} `true` if reserved, otherwise `false`\n */\nType.prototype.isReservedId = function isReservedId(id) {\n    return Namespace.isReservedId(this.reserved, id);\n};\n\n/**\n * Tests if the specified name is reserved.\n * @param {string} name Name to test\n * @returns {boolean} `true` if reserved, otherwise `false`\n */\nType.prototype.isReservedName = function isReservedName(name) {\n    return Namespace.isReservedName(this.reserved, name);\n};\n\n/**\n * Creates a new message of this type using the specified properties.\n * @param {Object.<string,*>} [properties] Properties to set\n * @returns {Message<{}>} Message instance\n */\nType.prototype.create = function create(properties) {\n    return new this.ctor(properties);\n};\n\n/**\n * Sets up {@link Type#encode|encode}, {@link Type#decode|decode} and {@link Type#verify|verify}.\n * @returns {Type} `this`\n */\nType.prototype.setup = function setup() {\n    // Sets up everything at once so that the prototype chain does not have to be re-evaluated\n    // multiple times (V8, soft-deopt prototype-check).\n\n    var fullName = this.fullName,\n        types    = [];\n    for (var i = 0; i < /* initializes */ this.fieldsArray.length; ++i)\n        types.push(this._fieldsArray[i].resolve().resolvedType);\n\n    // Replace setup methods with type-specific generated functions\n    this.encode = encoder(this)({\n        Writer : Writer,\n        types  : types,\n        util   : util\n    });\n    this.decode = decoder(this)({\n        Reader : Reader,\n        types  : types,\n        util   : util\n    });\n    this.verify = verifier(this)({\n        types : types,\n        util  : util\n    });\n    this.fromObject = converter.fromObject(this)({\n        types : types,\n        util  : util\n    });\n    this.toObject = converter.toObject(this)({\n        types : types,\n        util  : util\n    });\n\n    // Inject custom wrappers for common types\n    var wrapper = wrappers[fullName];\n    if (wrapper) {\n        var originalThis = Object.create(this);\n        // if (wrapper.fromObject) {\n            originalThis.fromObject = this.fromObject;\n            this.fromObject = wrapper.fromObject.bind(originalThis);\n        // }\n        // if (wrapper.toObject) {\n            originalThis.toObject = this.toObject;\n            this.toObject = wrapper.toObject.bind(originalThis);\n        // }\n    }\n\n    return this;\n};\n\n/**\n * Encodes a message of this type. Does not implicitly {@link Type#verify|verify} messages.\n * @param {Message<{}>|Object.<string,*>} message Message instance or plain object\n * @param {Writer} [writer] Writer to encode to\n * @returns {Writer} writer\n */\nType.prototype.encode = function encode_setup(message, writer) {\n    return this.setup().encode(message, writer); // overrides this method\n};\n\n/**\n * Encodes a message of this type preceeded by its byte length as a varint. Does not implicitly {@link Type#verify|verify} messages.\n * @param {Message<{}>|Object.<string,*>} message Message instance or plain object\n * @param {Writer} [writer] Writer to encode to\n * @returns {Writer} writer\n */\nType.prototype.encodeDelimited = function encodeDelimited(message, writer) {\n    return this.encode(message, writer && writer.len ? writer.fork() : writer).ldelim();\n};\n\n/**\n * Decodes a message of this type.\n * @param {Reader|Uint8Array} reader Reader or buffer to decode from\n * @param {number} [length] Length of the message, if known beforehand\n * @returns {Message<{}>} Decoded message\n * @throws {Error} If the payload is not a reader or valid buffer\n * @throws {util.ProtocolError<{}>} If required fields are missing\n */\nType.prototype.decode = function decode_setup(reader, length) {\n    return this.setup().decode(reader, length); // overrides this method\n};\n\n/**\n * Decodes a message of this type preceeded by its byte length as a varint.\n * @param {Reader|Uint8Array} reader Reader or buffer to decode from\n * @returns {Message<{}>} Decoded message\n * @throws {Error} If the payload is not a reader or valid buffer\n * @throws {util.ProtocolError} If required fields are missing\n */\nType.prototype.decodeDelimited = function decodeDelimited(reader) {\n    if (!(reader instanceof Reader))\n        reader = Reader.create(reader);\n    return this.decode(reader, reader.uint32());\n};\n\n/**\n * Verifies that field values are valid and that required fields are present.\n * @param {Object.<string,*>} message Plain object to verify\n * @returns {null|string} `null` if valid, otherwise the reason why it is not\n */\nType.prototype.verify = function verify_setup(message) {\n    return this.setup().verify(message); // overrides this method\n};\n\n/**\n * Creates a new message of this type from a plain object. Also converts values to their respective internal types.\n * @param {Object.<string,*>} object Plain object to convert\n * @returns {Message<{}>} Message instance\n */\nType.prototype.fromObject = function fromObject(object) {\n    return this.setup().fromObject(object);\n};\n\n/**\n * Conversion options as used by {@link Type#toObject} and {@link Message.toObject}.\n * @interface IConversionOptions\n * @property {Function} [longs] Long conversion type.\n * Valid values are `String` and `Number` (the global types).\n * Defaults to copy the present value, which is a possibly unsafe number without and a {@link Long} with a long library.\n * @property {Function} [enums] Enum value conversion type.\n * Only valid value is `String` (the global type).\n * Defaults to copy the present value, which is the numeric id.\n * @property {Function} [bytes] Bytes value conversion type.\n * Valid values are `Array` and (a base64 encoded) `String` (the global types).\n * Defaults to copy the present value, which usually is a Buffer under node and an Uint8Array in the browser.\n * @property {boolean} [defaults=false] Also sets default values on the resulting object\n * @property {boolean} [arrays=false] Sets empty arrays for missing repeated fields even if `defaults=false`\n * @property {boolean} [objects=false] Sets empty objects for missing map fields even if `defaults=false`\n * @property {boolean} [oneofs=false] Includes virtual oneof properties set to the present field's name, if any\n * @property {boolean} [json=false] Performs additional JSON compatibility conversions, i.e. NaN and Infinity to strings\n */\n\n/**\n * Creates a plain object from a message of this type. Also converts values to other types if specified.\n * @param {Message<{}>} message Message instance\n * @param {IConversionOptions} [options] Conversion options\n * @returns {Object.<string,*>} Plain object\n */\nType.prototype.toObject = function toObject(message, options) {\n    return this.setup().toObject(message, options);\n};\n\n/**\n * Decorator function as returned by {@link Type.d} (TypeScript).\n * @typedef TypeDecorator\n * @type {function}\n * @param {Constructor<T>} target Target constructor\n * @returns {undefined}\n * @template T extends Message<T>\n */\n\n/**\n * Type decorator (TypeScript).\n * @param {string} [typeName] Type name, defaults to the constructor's name\n * @returns {TypeDecorator<T>} Decorator function\n * @template T extends Message<T>\n */\nType.d = function decorateType(typeName) {\n    return function typeDecorator(target) {\n        util.decorateType(target, typeName);\n    };\n};\n","\"use strict\";\n\n/**\n * Common type constants.\n * @namespace\n */\nvar types = exports;\n\nvar util = require(\"./util\");\n\nvar s = [\n    \"double\",   // 0\n    \"float\",    // 1\n    \"int32\",    // 2\n    \"uint32\",   // 3\n    \"sint32\",   // 4\n    \"fixed32\",  // 5\n    \"sfixed32\", // 6\n    \"int64\",    // 7\n    \"uint64\",   // 8\n    \"sint64\",   // 9\n    \"fixed64\",  // 10\n    \"sfixed64\", // 11\n    \"bool\",     // 12\n    \"string\",   // 13\n    \"bytes\"     // 14\n];\n\nfunction bake(values, offset) {\n    var i = 0, o = {};\n    offset |= 0;\n    while (i < values.length) o[s[i + offset]] = values[i++];\n    return o;\n}\n\n/**\n * Basic type wire types.\n * @type {Object.<string,number>}\n * @const\n * @property {number} double=1 Fixed64 wire type\n * @property {number} float=5 Fixed32 wire type\n * @property {number} int32=0 Varint wire type\n * @property {number} uint32=0 Varint wire type\n * @property {number} sint32=0 Varint wire type\n * @property {number} fixed32=5 Fixed32 wire type\n * @property {number} sfixed32=5 Fixed32 wire type\n * @property {number} int64=0 Varint wire type\n * @property {number} uint64=0 Varint wire type\n * @property {number} sint64=0 Varint wire type\n * @property {number} fixed64=1 Fixed64 wire type\n * @property {number} sfixed64=1 Fixed64 wire type\n * @property {number} bool=0 Varint wire type\n * @property {number} string=2 Ldelim wire type\n * @property {number} bytes=2 Ldelim wire type\n */\ntypes.basic = bake([\n    /* double   */ 1,\n    /* float    */ 5,\n    /* int32    */ 0,\n    /* uint32   */ 0,\n    /* sint32   */ 0,\n    /* fixed32  */ 5,\n    /* sfixed32 */ 5,\n    /* int64    */ 0,\n    /* uint64   */ 0,\n    /* sint64   */ 0,\n    /* fixed64  */ 1,\n    /* sfixed64 */ 1,\n    /* bool     */ 0,\n    /* string   */ 2,\n    /* bytes    */ 2\n]);\n\n/**\n * Basic type defaults.\n * @type {Object.<string,*>}\n * @const\n * @property {number} double=0 Double default\n * @property {number} float=0 Float default\n * @property {number} int32=0 Int32 default\n * @property {number} uint32=0 Uint32 default\n * @property {number} sint32=0 Sint32 default\n * @property {number} fixed32=0 Fixed32 default\n * @property {number} sfixed32=0 Sfixed32 default\n * @property {number} int64=0 Int64 default\n * @property {number} uint64=0 Uint64 default\n * @property {number} sint64=0 Sint32 default\n * @property {number} fixed64=0 Fixed64 default\n * @property {number} sfixed64=0 Sfixed64 default\n * @property {boolean} bool=false Bool default\n * @property {string} string=\"\" String default\n * @property {Array.<number>} bytes=Array(0) Bytes default\n * @property {null} message=null Message default\n */\ntypes.defaults = bake([\n    /* double   */ 0,\n    /* float    */ 0,\n    /* int32    */ 0,\n    /* uint32   */ 0,\n    /* sint32   */ 0,\n    /* fixed32  */ 0,\n    /* sfixed32 */ 0,\n    /* int64    */ 0,\n    /* uint64   */ 0,\n    /* sint64   */ 0,\n    /* fixed64  */ 0,\n    /* sfixed64 */ 0,\n    /* bool     */ false,\n    /* string   */ \"\",\n    /* bytes    */ util.emptyArray,\n    /* message  */ null\n]);\n\n/**\n * Basic long type wire types.\n * @type {Object.<string,number>}\n * @const\n * @property {number} int64=0 Varint wire type\n * @property {number} uint64=0 Varint wire type\n * @property {number} sint64=0 Varint wire type\n * @property {number} fixed64=1 Fixed64 wire type\n * @property {number} sfixed64=1 Fixed64 wire type\n */\ntypes.long = bake([\n    /* int64    */ 0,\n    /* uint64   */ 0,\n    /* sint64   */ 0,\n    /* fixed64  */ 1,\n    /* sfixed64 */ 1\n], 7);\n\n/**\n * Allowed types for map keys with their associated wire type.\n * @type {Object.<string,number>}\n * @const\n * @property {number} int32=0 Varint wire type\n * @property {number} uint32=0 Varint wire type\n * @property {number} sint32=0 Varint wire type\n * @property {number} fixed32=5 Fixed32 wire type\n * @property {number} sfixed32=5 Fixed32 wire type\n * @property {number} int64=0 Varint wire type\n * @property {number} uint64=0 Varint wire type\n * @property {number} sint64=0 Varint wire type\n * @property {number} fixed64=1 Fixed64 wire type\n * @property {number} sfixed64=1 Fixed64 wire type\n * @property {number} bool=0 Varint wire type\n * @property {number} string=2 Ldelim wire type\n */\ntypes.mapKey = bake([\n    /* int32    */ 0,\n    /* uint32   */ 0,\n    /* sint32   */ 0,\n    /* fixed32  */ 5,\n    /* sfixed32 */ 5,\n    /* int64    */ 0,\n    /* uint64   */ 0,\n    /* sint64   */ 0,\n    /* fixed64  */ 1,\n    /* sfixed64 */ 1,\n    /* bool     */ 0,\n    /* string   */ 2\n], 2);\n\n/**\n * Allowed types for packed repeated fields with their associated wire type.\n * @type {Object.<string,number>}\n * @const\n * @property {number} double=1 Fixed64 wire type\n * @property {number} float=5 Fixed32 wire type\n * @property {number} int32=0 Varint wire type\n * @property {number} uint32=0 Varint wire type\n * @property {number} sint32=0 Varint wire type\n * @property {number} fixed32=5 Fixed32 wire type\n * @property {number} sfixed32=5 Fixed32 wire type\n * @property {number} int64=0 Varint wire type\n * @property {number} uint64=0 Varint wire type\n * @property {number} sint64=0 Varint wire type\n * @property {number} fixed64=1 Fixed64 wire type\n * @property {number} sfixed64=1 Fixed64 wire type\n * @property {number} bool=0 Varint wire type\n */\ntypes.packed = bake([\n    /* double   */ 1,\n    /* float    */ 5,\n    /* int32    */ 0,\n    /* uint32   */ 0,\n    /* sint32   */ 0,\n    /* fixed32  */ 5,\n    /* sfixed32 */ 5,\n    /* int64    */ 0,\n    /* uint64   */ 0,\n    /* sint64   */ 0,\n    /* fixed64  */ 1,\n    /* sfixed64 */ 1,\n    /* bool     */ 0\n]);\n","\"use strict\";\n\n/**\n * Various utility functions.\n * @namespace\n */\nvar util = module.exports = require(\"./util/minimal\");\n\nvar roots = require(\"./roots\");\n\nvar Type, // cyclic\n    Enum;\n\nutil.codegen = require(\"@protobufjs/codegen\");\nutil.fetch   = require(\"@protobufjs/fetch\");\nutil.path    = require(\"@protobufjs/path\");\n\n/**\n * Node's fs module if available.\n * @type {Object.<string,*>}\n */\nutil.fs = util.inquire(\"fs\");\n\n/**\n * Converts an object's values to an array.\n * @param {Object.<string,*>} object Object to convert\n * @returns {Array.<*>} Converted array\n */\nutil.toArray = function toArray(object) {\n    if (object) {\n        var keys  = Object.keys(object),\n            array = new Array(keys.length),\n            index = 0;\n        while (index < keys.length)\n            array[index] = object[keys[index++]];\n        return array;\n    }\n    return [];\n};\n\n/**\n * Converts an array of keys immediately followed by their respective value to an object, omitting undefined values.\n * @param {Array.<*>} array Array to convert\n * @returns {Object.<string,*>} Converted object\n */\nutil.toObject = function toObject(array) {\n    var object = {},\n        index  = 0;\n    while (index < array.length) {\n        var key = array[index++],\n            val = array[index++];\n        if (val !== undefined)\n            object[key] = val;\n    }\n    return object;\n};\n\nvar safePropBackslashRe = /\\\\/g,\n    safePropQuoteRe     = /\"/g;\n\n/**\n * Tests whether the specified name is a reserved word in JS.\n * @param {string} name Name to test\n * @returns {boolean} `true` if reserved, otherwise `false`\n */\nutil.isReserved = function isReserved(name) {\n    return /^(?:do|if|in|for|let|new|try|var|case|else|enum|eval|false|null|this|true|void|with|break|catch|class|const|super|throw|while|yield|delete|export|import|public|return|static|switch|typeof|default|extends|finally|package|private|continue|debugger|function|arguments|interface|protected|implements|instanceof)$/.test(name);\n};\n\n/**\n * Returns a safe property accessor for the specified property name.\n * @param {string} prop Property name\n * @returns {string} Safe accessor\n */\nutil.safeProp = function safeProp(prop) {\n    if (!/^[$\\w_]+$/.test(prop) || util.isReserved(prop))\n        return \"[\\\"\" + prop.replace(safePropBackslashRe, \"\\\\\\\\\").replace(safePropQuoteRe, \"\\\\\\\"\") + \"\\\"]\";\n    return \".\" + prop;\n};\n\n/**\n * Converts the first character of a string to upper case.\n * @param {string} str String to convert\n * @returns {string} Converted string\n */\nutil.ucFirst = function ucFirst(str) {\n    return str.charAt(0).toUpperCase() + str.substring(1);\n};\n\nvar camelCaseRe = /_([a-z])/g;\n\n/**\n * Converts a string to camel case.\n * @param {string} str String to convert\n * @returns {string} Converted string\n */\nutil.camelCase = function camelCase(str) {\n    return str.substring(0, 1)\n         + str.substring(1)\n               .replace(camelCaseRe, function($0, $1) { return $1.toUpperCase(); });\n};\n\n/**\n * Compares reflected fields by id.\n * @param {Field} a First field\n * @param {Field} b Second field\n * @returns {number} Comparison value\n */\nutil.compareFieldsById = function compareFieldsById(a, b) {\n    return a.id - b.id;\n};\n\n/**\n * Decorator helper for types (TypeScript).\n * @param {Constructor<T>} ctor Constructor function\n * @param {string} [typeName] Type name, defaults to the constructor's name\n * @returns {Type} Reflected type\n * @template T extends Message<T>\n * @property {Root} root Decorators root\n */\nutil.decorateType = function decorateType(ctor, typeName) {\n\n    /* istanbul ignore if */\n    if (ctor.$type) {\n        if (typeName && ctor.$type.name !== typeName) {\n            util.decorateRoot.remove(ctor.$type);\n            ctor.$type.name = typeName;\n            util.decorateRoot.add(ctor.$type);\n        }\n        return ctor.$type;\n    }\n\n    /* istanbul ignore next */\n    if (!Type)\n        Type = require(\"./type\");\n\n    var type = new Type(typeName || ctor.name);\n    util.decorateRoot.add(type);\n    type.ctor = ctor; // sets up .encode, .decode etc.\n    Object.defineProperty(ctor, \"$type\", { value: type, enumerable: false });\n    Object.defineProperty(ctor.prototype, \"$type\", { value: type, enumerable: false });\n    return type;\n};\n\nvar decorateEnumIndex = 0;\n\n/**\n * Decorator helper for enums (TypeScript).\n * @param {Object} object Enum object\n * @returns {Enum} Reflected enum\n */\nutil.decorateEnum = function decorateEnum(object) {\n\n    /* istanbul ignore if */\n    if (object.$type)\n        return object.$type;\n\n    /* istanbul ignore next */\n    if (!Enum)\n        Enum = require(\"./enum\");\n\n    var enm = new Enum(\"Enum\" + decorateEnumIndex++, object);\n    util.decorateRoot.add(enm);\n    Object.defineProperty(object, \"$type\", { value: enm, enumerable: false });\n    return enm;\n};\n\n\n/**\n * Sets the value of a property by property path. If a value already exists, it is turned to an array\n * @param {Object.<string,*>} dst Destination object\n * @param {string} path dot '.' delimited path of the property to set\n * @param {Object} value the value to set\n * @returns {Object.<string,*>} Destination object\n */\nutil.setProperty = function setProperty(dst, path, value) {\n    function setProp(dst, path, value) {\n        var part = path.shift();\n        if (part === \"__proto__\" || part === \"prototype\") {\n          return dst;\n        }\n        if (path.length > 0) {\n            dst[part] = setProp(dst[part] || {}, path, value);\n        } else {\n            var prevValue = dst[part];\n            if (prevValue)\n                value = [].concat(prevValue).concat(value);\n            dst[part] = value;\n        }\n        return dst;\n    }\n\n    if (typeof dst !== \"object\")\n        throw TypeError(\"dst must be an object\");\n    if (!path)\n        throw TypeError(\"path must be specified\");\n\n    path = path.split(\".\");\n    return setProp(dst, path, value);\n};\n\n/**\n * Decorator root (TypeScript).\n * @name util.decorateRoot\n * @type {Root}\n * @readonly\n */\nObject.defineProperty(util, \"decorateRoot\", {\n    get: function() {\n        return roots[\"decorated\"] || (roots[\"decorated\"] = new (require(\"./root\"))());\n    }\n});\n","\"use strict\";\nmodule.exports = LongBits;\n\nvar util = require(\"../util/minimal\");\n\n/**\n * Constructs new long bits.\n * @classdesc Helper class for working with the low and high bits of a 64 bit value.\n * @memberof util\n * @constructor\n * @param {number} lo Low 32 bits, unsigned\n * @param {number} hi High 32 bits, unsigned\n */\nfunction LongBits(lo, hi) {\n\n    // note that the casts below are theoretically unnecessary as of today, but older statically\n    // generated converter code might still call the ctor with signed 32bits. kept for compat.\n\n    /**\n     * Low bits.\n     * @type {number}\n     */\n    this.lo = lo >>> 0;\n\n    /**\n     * High bits.\n     * @type {number}\n     */\n    this.hi = hi >>> 0;\n}\n\n/**\n * Zero bits.\n * @memberof util.LongBits\n * @type {util.LongBits}\n */\nvar zero = LongBits.zero = new LongBits(0, 0);\n\nzero.toNumber = function() { return 0; };\nzero.zzEncode = zero.zzDecode = function() { return this; };\nzero.length = function() { return 1; };\n\n/**\n * Zero hash.\n * @memberof util.LongBits\n * @type {string}\n */\nvar zeroHash = LongBits.zeroHash = \"\\0\\0\\0\\0\\0\\0\\0\\0\";\n\n/**\n * Constructs new long bits from the specified number.\n * @param {number} value Value\n * @returns {util.LongBits} Instance\n */\nLongBits.fromNumber = function fromNumber(value) {\n    if (value === 0)\n        return zero;\n    var sign = value < 0;\n    if (sign)\n        value = -value;\n    var lo = value >>> 0,\n        hi = (value - lo) / 4294967296 >>> 0;\n    if (sign) {\n        hi = ~hi >>> 0;\n        lo = ~lo >>> 0;\n        if (++lo > 4294967295) {\n            lo = 0;\n            if (++hi > 4294967295)\n                hi = 0;\n        }\n    }\n    return new LongBits(lo, hi);\n};\n\n/**\n * Constructs new long bits from a number, long or string.\n * @param {Long|number|string} value Value\n * @returns {util.LongBits} Instance\n */\nLongBits.from = function from(value) {\n    if (typeof value === \"number\")\n        return LongBits.fromNumber(value);\n    if (util.isString(value)) {\n        /* istanbul ignore else */\n        if (util.Long)\n            value = util.Long.fromString(value);\n        else\n            return LongBits.fromNumber(parseInt(value, 10));\n    }\n    return value.low || value.high ? new LongBits(value.low >>> 0, value.high >>> 0) : zero;\n};\n\n/**\n * Converts this long bits to a possibly unsafe JavaScript number.\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {number} Possibly unsafe number\n */\nLongBits.prototype.toNumber = function toNumber(unsigned) {\n    if (!unsigned && this.hi >>> 31) {\n        var lo = ~this.lo + 1 >>> 0,\n            hi = ~this.hi     >>> 0;\n        if (!lo)\n            hi = hi + 1 >>> 0;\n        return -(lo + hi * 4294967296);\n    }\n    return this.lo + this.hi * 4294967296;\n};\n\n/**\n * Converts this long bits to a long.\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {Long} Long\n */\nLongBits.prototype.toLong = function toLong(unsigned) {\n    return util.Long\n        ? new util.Long(this.lo | 0, this.hi | 0, Boolean(unsigned))\n        /* istanbul ignore next */\n        : { low: this.lo | 0, high: this.hi | 0, unsigned: Boolean(unsigned) };\n};\n\nvar charCodeAt = String.prototype.charCodeAt;\n\n/**\n * Constructs new long bits from the specified 8 characters long hash.\n * @param {string} hash Hash\n * @returns {util.LongBits} Bits\n */\nLongBits.fromHash = function fromHash(hash) {\n    if (hash === zeroHash)\n        return zero;\n    return new LongBits(\n        ( charCodeAt.call(hash, 0)\n        | charCodeAt.call(hash, 1) << 8\n        | charCodeAt.call(hash, 2) << 16\n        | charCodeAt.call(hash, 3) << 24) >>> 0\n    ,\n        ( charCodeAt.call(hash, 4)\n        | charCodeAt.call(hash, 5) << 8\n        | charCodeAt.call(hash, 6) << 16\n        | charCodeAt.call(hash, 7) << 24) >>> 0\n    );\n};\n\n/**\n * Converts this long bits to a 8 characters long hash.\n * @returns {string} Hash\n */\nLongBits.prototype.toHash = function toHash() {\n    return String.fromCharCode(\n        this.lo        & 255,\n        this.lo >>> 8  & 255,\n        this.lo >>> 16 & 255,\n        this.lo >>> 24      ,\n        this.hi        & 255,\n        this.hi >>> 8  & 255,\n        this.hi >>> 16 & 255,\n        this.hi >>> 24\n    );\n};\n\n/**\n * Zig-zag encodes this long bits.\n * @returns {util.LongBits} `this`\n */\nLongBits.prototype.zzEncode = function zzEncode() {\n    var mask =   this.hi >> 31;\n    this.hi  = ((this.hi << 1 | this.lo >>> 31) ^ mask) >>> 0;\n    this.lo  = ( this.lo << 1                   ^ mask) >>> 0;\n    return this;\n};\n\n/**\n * Zig-zag decodes this long bits.\n * @returns {util.LongBits} `this`\n */\nLongBits.prototype.zzDecode = function zzDecode() {\n    var mask = -(this.lo & 1);\n    this.lo  = ((this.lo >>> 1 | this.hi << 31) ^ mask) >>> 0;\n    this.hi  = ( this.hi >>> 1                  ^ mask) >>> 0;\n    return this;\n};\n\n/**\n * Calculates the length of this longbits when encoded as a varint.\n * @returns {number} Length\n */\nLongBits.prototype.length = function length() {\n    var part0 =  this.lo,\n        part1 = (this.lo >>> 28 | this.hi << 4) >>> 0,\n        part2 =  this.hi >>> 24;\n    return part2 === 0\n         ? part1 === 0\n           ? part0 < 16384\n             ? part0 < 128 ? 1 : 2\n             : part0 < 2097152 ? 3 : 4\n           : part1 < 16384\n             ? part1 < 128 ? 5 : 6\n             : part1 < 2097152 ? 7 : 8\n         : part2 < 128 ? 9 : 10;\n};\n","\"use strict\";\nvar util = exports;\n\n// used to return a Promise where callback is omitted\nutil.asPromise = require(\"@protobufjs/aspromise\");\n\n// converts to / from base64 encoded strings\nutil.base64 = require(\"@protobufjs/base64\");\n\n// base class of rpc.Service\nutil.EventEmitter = require(\"@protobufjs/eventemitter\");\n\n// float handling accross browsers\nutil.float = require(\"@protobufjs/float\");\n\n// requires modules optionally and hides the call from bundlers\nutil.inquire = require(\"@protobufjs/inquire\");\n\n// converts to / from utf8 encoded strings\nutil.utf8 = require(\"@protobufjs/utf8\");\n\n// provides a node-like buffer pool in the browser\nutil.pool = require(\"@protobufjs/pool\");\n\n// utility to work with the low and high bits of a 64 bit value\nutil.LongBits = require(\"./longbits\");\n\n/**\n * Whether running within node or not.\n * @memberof util\n * @type {boolean}\n */\nutil.isNode = Boolean(typeof global !== \"undefined\"\n                   && global\n                   && global.process\n                   && global.process.versions\n                   && global.process.versions.node);\n\n/**\n * Global object reference.\n * @memberof util\n * @type {Object}\n */\nutil.global = util.isNode && global\n           || typeof window !== \"undefined\" && window\n           || typeof self   !== \"undefined\" && self\n           || this; // eslint-disable-line no-invalid-this\n\n/**\n * An immuable empty array.\n * @memberof util\n * @type {Array.<*>}\n * @const\n */\nutil.emptyArray = Object.freeze ? Object.freeze([]) : /* istanbul ignore next */ []; // used on prototypes\n\n/**\n * An immutable empty object.\n * @type {Object}\n * @const\n */\nutil.emptyObject = Object.freeze ? Object.freeze({}) : /* istanbul ignore next */ {}; // used on prototypes\n\n/**\n * Tests if the specified value is an integer.\n * @function\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is an integer\n */\nutil.isInteger = Number.isInteger || /* istanbul ignore next */ function isInteger(value) {\n    return typeof value === \"number\" && isFinite(value) && Math.floor(value) === value;\n};\n\n/**\n * Tests if the specified value is a string.\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is a string\n */\nutil.isString = function isString(value) {\n    return typeof value === \"string\" || value instanceof String;\n};\n\n/**\n * Tests if the specified value is a non-null object.\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is a non-null object\n */\nutil.isObject = function isObject(value) {\n    return value && typeof value === \"object\";\n};\n\n/**\n * Checks if a property on a message is considered to be present.\n * This is an alias of {@link util.isSet}.\n * @function\n * @param {Object} obj Plain object or message instance\n * @param {string} prop Property name\n * @returns {boolean} `true` if considered to be present, otherwise `false`\n */\nutil.isset =\n\n/**\n * Checks if a property on a message is considered to be present.\n * @param {Object} obj Plain object or message instance\n * @param {string} prop Property name\n * @returns {boolean} `true` if considered to be present, otherwise `false`\n */\nutil.isSet = function isSet(obj, prop) {\n    var value = obj[prop];\n    if (value != null && obj.hasOwnProperty(prop)) // eslint-disable-line eqeqeq, no-prototype-builtins\n        return typeof value !== \"object\" || (Array.isArray(value) ? value.length : Object.keys(value).length) > 0;\n    return false;\n};\n\n/**\n * Any compatible Buffer instance.\n * This is a minimal stand-alone definition of a Buffer instance. The actual type is that exported by node's typings.\n * @interface Buffer\n * @extends Uint8Array\n */\n\n/**\n * Node's Buffer class if available.\n * @type {Constructor<Buffer>}\n */\nutil.Buffer = (function() {\n    try {\n        var Buffer = util.inquire(\"buffer\").Buffer;\n        // refuse to use non-node buffers if not explicitly assigned (perf reasons):\n        return Buffer.prototype.utf8Write ? Buffer : /* istanbul ignore next */ null;\n    } catch (e) {\n        /* istanbul ignore next */\n        return null;\n    }\n})();\n\n// Internal alias of or polyfull for Buffer.from.\nutil._Buffer_from = null;\n\n// Internal alias of or polyfill for Buffer.allocUnsafe.\nutil._Buffer_allocUnsafe = null;\n\n/**\n * Creates a new buffer of whatever type supported by the environment.\n * @param {number|number[]} [sizeOrArray=0] Buffer size or number array\n * @returns {Uint8Array|Buffer} Buffer\n */\nutil.newBuffer = function newBuffer(sizeOrArray) {\n    /* istanbul ignore next */\n    return typeof sizeOrArray === \"number\"\n        ? util.Buffer\n            ? util._Buffer_allocUnsafe(sizeOrArray)\n            : new util.Array(sizeOrArray)\n        : util.Buffer\n            ? util._Buffer_from(sizeOrArray)\n            : typeof Uint8Array === \"undefined\"\n                ? sizeOrArray\n                : new Uint8Array(sizeOrArray);\n};\n\n/**\n * Array implementation used in the browser. `Uint8Array` if supported, otherwise `Array`.\n * @type {Constructor<Uint8Array>}\n */\nutil.Array = typeof Uint8Array !== \"undefined\" ? Uint8Array /* istanbul ignore next */ : Array;\n\n/**\n * Any compatible Long instance.\n * This is a minimal stand-alone definition of a Long instance. The actual type is that exported by long.js.\n * @interface Long\n * @property {number} low Low bits\n * @property {number} high High bits\n * @property {boolean} unsigned Whether unsigned or not\n */\n\n/**\n * Long.js's Long class if available.\n * @type {Constructor<Long>}\n */\nutil.Long = /* istanbul ignore next */ util.global.dcodeIO && /* istanbul ignore next */ util.global.dcodeIO.Long\n         || /* istanbul ignore next */ util.global.Long\n         || util.inquire(\"long\");\n\n/**\n * Regular expression used to verify 2 bit (`bool`) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key2Re = /^true|false|0|1$/;\n\n/**\n * Regular expression used to verify 32 bit (`int32` etc.) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key32Re = /^-?(?:0|[1-9][0-9]*)$/;\n\n/**\n * Regular expression used to verify 64 bit (`int64` etc.) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key64Re = /^(?:[\\\\x00-\\\\xff]{8}|-?(?:0|[1-9][0-9]*))$/;\n\n/**\n * Converts a number or long to an 8 characters long hash string.\n * @param {Long|number} value Value to convert\n * @returns {string} Hash\n */\nutil.longToHash = function longToHash(value) {\n    return value\n        ? util.LongBits.from(value).toHash()\n        : util.LongBits.zeroHash;\n};\n\n/**\n * Converts an 8 characters long hash string to a long or number.\n * @param {string} hash Hash\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {Long|number} Original value\n */\nutil.longFromHash = function longFromHash(hash, unsigned) {\n    var bits = util.LongBits.fromHash(hash);\n    if (util.Long)\n        return util.Long.fromBits(bits.lo, bits.hi, unsigned);\n    return bits.toNumber(Boolean(unsigned));\n};\n\n/**\n * Merges the properties of the source object into the destination object.\n * @memberof util\n * @param {Object.<string,*>} dst Destination object\n * @param {Object.<string,*>} src Source object\n * @param {boolean} [ifNotSet=false] Merges only if the key is not already set\n * @returns {Object.<string,*>} Destination object\n */\nfunction merge(dst, src, ifNotSet) { // used by converters\n    for (var keys = Object.keys(src), i = 0; i < keys.length; ++i)\n        if (dst[keys[i]] === undefined || !ifNotSet)\n            dst[keys[i]] = src[keys[i]];\n    return dst;\n}\n\nutil.merge = merge;\n\n/**\n * Converts the first character of a string to lower case.\n * @param {string} str String to convert\n * @returns {string} Converted string\n */\nutil.lcFirst = function lcFirst(str) {\n    return str.charAt(0).toLowerCase() + str.substring(1);\n};\n\n/**\n * Creates a custom error constructor.\n * @memberof util\n * @param {string} name Error name\n * @returns {Constructor<Error>} Custom error constructor\n */\nfunction newError(name) {\n\n    function CustomError(message, properties) {\n\n        if (!(this instanceof CustomError))\n            return new CustomError(message, properties);\n\n        // Error.call(this, message);\n        // ^ just returns a new error instance because the ctor can be called as a function\n\n        Object.defineProperty(this, \"message\", { get: function() { return message; } });\n\n        /* istanbul ignore next */\n        if (Error.captureStackTrace) // node\n            Error.captureStackTrace(this, CustomError);\n        else\n            Object.defineProperty(this, \"stack\", { value: new Error().stack || \"\" });\n\n        if (properties)\n            merge(this, properties);\n    }\n\n    CustomError.prototype = Object.create(Error.prototype, {\n        constructor: {\n            value: CustomError,\n            writable: true,\n            enumerable: false,\n            configurable: true,\n        },\n        name: {\n            get: function get() { return name; },\n            set: undefined,\n            enumerable: false,\n            // configurable: false would accurately preserve the behavior of\n            // the original, but I'm guessing that was not intentional.\n            // For an actual error subclass, this property would\n            // be configurable.\n            configurable: true,\n        },\n        toString: {\n            value: function value() { return this.name + \": \" + this.message; },\n            writable: true,\n            enumerable: false,\n            configurable: true,\n        },\n    });\n\n    return CustomError;\n}\n\nutil.newError = newError;\n\n/**\n * Constructs a new protocol error.\n * @classdesc Error subclass indicating a protocol specifc error.\n * @memberof util\n * @extends Error\n * @template T extends Message<T>\n * @constructor\n * @param {string} message Error message\n * @param {Object.<string,*>} [properties] Additional properties\n * @example\n * try {\n *     MyMessage.decode(someBuffer); // throws if required fields are missing\n * } catch (e) {\n *     if (e instanceof ProtocolError && e.instance)\n *         console.log(\"decoded so far: \" + JSON.stringify(e.instance));\n * }\n */\nutil.ProtocolError = newError(\"ProtocolError\");\n\n/**\n * So far decoded message instance.\n * @name util.ProtocolError#instance\n * @type {Message<T>}\n */\n\n/**\n * A OneOf getter as returned by {@link util.oneOfGetter}.\n * @typedef OneOfGetter\n * @type {function}\n * @returns {string|undefined} Set field name, if any\n */\n\n/**\n * Builds a getter for a oneof's present field name.\n * @param {string[]} fieldNames Field names\n * @returns {OneOfGetter} Unbound getter\n */\nutil.oneOfGetter = function getOneOf(fieldNames) {\n    var fieldMap = {};\n    for (var i = 0; i < fieldNames.length; ++i)\n        fieldMap[fieldNames[i]] = 1;\n\n    /**\n     * @returns {string|undefined} Set field name, if any\n     * @this Object\n     * @ignore\n     */\n    return function() { // eslint-disable-line consistent-return\n        for (var keys = Object.keys(this), i = keys.length - 1; i > -1; --i)\n            if (fieldMap[keys[i]] === 1 && this[keys[i]] !== undefined && this[keys[i]] !== null)\n                return keys[i];\n    };\n};\n\n/**\n * A OneOf setter as returned by {@link util.oneOfSetter}.\n * @typedef OneOfSetter\n * @type {function}\n * @param {string|undefined} value Field name\n * @returns {undefined}\n */\n\n/**\n * Builds a setter for a oneof's present field name.\n * @param {string[]} fieldNames Field names\n * @returns {OneOfSetter} Unbound setter\n */\nutil.oneOfSetter = function setOneOf(fieldNames) {\n\n    /**\n     * @param {string} name Field name\n     * @returns {undefined}\n     * @this Object\n     * @ignore\n     */\n    return function(name) {\n        for (var i = 0; i < fieldNames.length; ++i)\n            if (fieldNames[i] !== name)\n                delete this[fieldNames[i]];\n    };\n};\n\n/**\n * Default conversion options used for {@link Message#toJSON} implementations.\n *\n * These options are close to proto3's JSON mapping with the exception that internal types like Any are handled just like messages. More precisely:\n *\n * - Longs become strings\n * - Enums become string keys\n * - Bytes become base64 encoded strings\n * - (Sub-)Messages become plain objects\n * - Maps become plain objects with all string keys\n * - Repeated fields become arrays\n * - NaN and Infinity for float and double fields become strings\n *\n * @type {IConversionOptions}\n * @see https://developers.google.com/protocol-buffers/docs/proto3?hl=en#json\n */\nutil.toJSONOptions = {\n    longs: String,\n    enums: String,\n    bytes: String,\n    json: true\n};\n\n// Sets up buffer utility according to the environment (called in index-minimal)\nutil._configure = function() {\n    var Buffer = util.Buffer;\n    /* istanbul ignore if */\n    if (!Buffer) {\n        util._Buffer_from = util._Buffer_allocUnsafe = null;\n        return;\n    }\n    // because node 4.x buffers are incompatible & immutable\n    // see: https://github.com/dcodeIO/protobuf.js/pull/665\n    util._Buffer_from = Buffer.from !== Uint8Array.from && Buffer.from ||\n        /* istanbul ignore next */\n        function Buffer_from(value, encoding) {\n            return new Buffer(value, encoding);\n        };\n    util._Buffer_allocUnsafe = Buffer.allocUnsafe ||\n        /* istanbul ignore next */\n        function Buffer_allocUnsafe(size) {\n            return new Buffer(size);\n        };\n};\n","\"use strict\";\nmodule.exports = verifier;\n\nvar Enum      = require(\"./enum\"),\n    util      = require(\"./util\");\n\nfunction invalid(field, expected) {\n    return field.name + \": \" + expected + (field.repeated && expected !== \"array\" ? \"[]\" : field.map && expected !== \"object\" ? \"{k:\"+field.keyType+\"}\" : \"\") + \" expected\";\n}\n\n/**\n * Generates a partial value verifier.\n * @param {Codegen} gen Codegen instance\n * @param {Field} field Reflected field\n * @param {number} fieldIndex Field index\n * @param {string} ref Variable reference\n * @returns {Codegen} Codegen instance\n * @ignore\n */\nfunction genVerifyValue(gen, field, fieldIndex, ref) {\n    /* eslint-disable no-unexpected-multiline */\n    if (field.resolvedType) {\n        if (field.resolvedType instanceof Enum) { gen\n            (\"switch(%s){\", ref)\n                (\"default:\")\n                    (\"return%j\", invalid(field, \"enum value\"));\n            for (var keys = Object.keys(field.resolvedType.values), j = 0; j < keys.length; ++j) gen\n                (\"case %i:\", field.resolvedType.values[keys[j]]);\n            gen\n                    (\"break\")\n            (\"}\");\n        } else {\n            gen\n            (\"{\")\n                (\"var e=types[%i].verify(%s);\", fieldIndex, ref)\n                (\"if(e)\")\n                    (\"return%j+e\", field.name + \".\")\n            (\"}\");\n        }\n    } else {\n        switch (field.type) {\n            case \"int32\":\n            case \"uint32\":\n            case \"sint32\":\n            case \"fixed32\":\n            case \"sfixed32\": gen\n                (\"if(!util.isInteger(%s))\", ref)\n                    (\"return%j\", invalid(field, \"integer\"));\n                break;\n            case \"int64\":\n            case \"uint64\":\n            case \"sint64\":\n            case \"fixed64\":\n            case \"sfixed64\": gen\n                (\"if(!util.isInteger(%s)&&!(%s&&util.isInteger(%s.low)&&util.isInteger(%s.high)))\", ref, ref, ref, ref)\n                    (\"return%j\", invalid(field, \"integer|Long\"));\n                break;\n            case \"float\":\n            case \"double\": gen\n                (\"if(typeof %s!==\\\"number\\\")\", ref)\n                    (\"return%j\", invalid(field, \"number\"));\n                break;\n            case \"bool\": gen\n                (\"if(typeof %s!==\\\"boolean\\\")\", ref)\n                    (\"return%j\", invalid(field, \"boolean\"));\n                break;\n            case \"string\": gen\n                (\"if(!util.isString(%s))\", ref)\n                    (\"return%j\", invalid(field, \"string\"));\n                break;\n            case \"bytes\": gen\n                (\"if(!(%s&&typeof %s.length===\\\"number\\\"||util.isString(%s)))\", ref, ref, ref)\n                    (\"return%j\", invalid(field, \"buffer\"));\n                break;\n        }\n    }\n    return gen;\n    /* eslint-enable no-unexpected-multiline */\n}\n\n/**\n * Generates a partial key verifier.\n * @param {Codegen} gen Codegen instance\n * @param {Field} field Reflected field\n * @param {string} ref Variable reference\n * @returns {Codegen} Codegen instance\n * @ignore\n */\nfunction genVerifyKey(gen, field, ref) {\n    /* eslint-disable no-unexpected-multiline */\n    switch (field.keyType) {\n        case \"int32\":\n        case \"uint32\":\n        case \"sint32\":\n        case \"fixed32\":\n        case \"sfixed32\": gen\n            (\"if(!util.key32Re.test(%s))\", ref)\n                (\"return%j\", invalid(field, \"integer key\"));\n            break;\n        case \"int64\":\n        case \"uint64\":\n        case \"sint64\":\n        case \"fixed64\":\n        case \"sfixed64\": gen\n            (\"if(!util.key64Re.test(%s))\", ref) // see comment above: x is ok, d is not\n                (\"return%j\", invalid(field, \"integer|Long key\"));\n            break;\n        case \"bool\": gen\n            (\"if(!util.key2Re.test(%s))\", ref)\n                (\"return%j\", invalid(field, \"boolean key\"));\n            break;\n    }\n    return gen;\n    /* eslint-enable no-unexpected-multiline */\n}\n\n/**\n * Generates a verifier specific to the specified message type.\n * @param {Type} mtype Message type\n * @returns {Codegen} Codegen instance\n */\nfunction verifier(mtype) {\n    /* eslint-disable no-unexpected-multiline */\n\n    var gen = util.codegen([\"m\"], mtype.name + \"$verify\")\n    (\"if(typeof m!==\\\"object\\\"||m===null)\")\n        (\"return%j\", \"object expected\");\n    var oneofs = mtype.oneofsArray,\n        seenFirstField = {};\n    if (oneofs.length) gen\n    (\"var p={}\");\n\n    for (var i = 0; i < /* initializes */ mtype.fieldsArray.length; ++i) {\n        var field = mtype._fieldsArray[i].resolve(),\n            ref   = \"m\" + util.safeProp(field.name);\n\n        if (field.optional) gen\n        (\"if(%s!=null&&m.hasOwnProperty(%j)){\", ref, field.name); // !== undefined && !== null\n\n        // map fields\n        if (field.map) { gen\n            (\"if(!util.isObject(%s))\", ref)\n                (\"return%j\", invalid(field, \"object\"))\n            (\"var k=Object.keys(%s)\", ref)\n            (\"for(var i=0;i<k.length;++i){\");\n                genVerifyKey(gen, field, \"k[i]\");\n                genVerifyValue(gen, field, i, ref + \"[k[i]]\")\n            (\"}\");\n\n        // repeated fields\n        } else if (field.repeated) { gen\n            (\"if(!Array.isArray(%s))\", ref)\n                (\"return%j\", invalid(field, \"array\"))\n            (\"for(var i=0;i<%s.length;++i){\", ref);\n                genVerifyValue(gen, field, i, ref + \"[i]\")\n            (\"}\");\n\n        // required or present fields\n        } else {\n            if (field.partOf) {\n                var oneofProp = util.safeProp(field.partOf.name);\n                if (seenFirstField[field.partOf.name] === 1) gen\n            (\"if(p%s===1)\", oneofProp)\n                (\"return%j\", field.partOf.name + \": multiple values\");\n                seenFirstField[field.partOf.name] = 1;\n                gen\n            (\"p%s=1\", oneofProp);\n            }\n            genVerifyValue(gen, field, i, ref);\n        }\n        if (field.optional) gen\n        (\"}\");\n    }\n    return gen\n    (\"return null\");\n    /* eslint-enable no-unexpected-multiline */\n}","\"use strict\";\n\n/**\n * Wrappers for common types.\n * @type {Object.<string,IWrapper>}\n * @const\n */\nvar wrappers = exports;\n\nvar Message = require(\"./message\");\n\n/**\n * From object converter part of an {@link IWrapper}.\n * @typedef WrapperFromObjectConverter\n * @type {function}\n * @param {Object.<string,*>} object Plain object\n * @returns {Message<{}>} Message instance\n * @this Type\n */\n\n/**\n * To object converter part of an {@link IWrapper}.\n * @typedef WrapperToObjectConverter\n * @type {function}\n * @param {Message<{}>} message Message instance\n * @param {IConversionOptions} [options] Conversion options\n * @returns {Object.<string,*>} Plain object\n * @this Type\n */\n\n/**\n * Common type wrapper part of {@link wrappers}.\n * @interface IWrapper\n * @property {WrapperFromObjectConverter} [fromObject] From object converter\n * @property {WrapperToObjectConverter} [toObject] To object converter\n */\n\n// Custom wrapper for Any\nwrappers[\".google.protobuf.Any\"] = {\n\n    fromObject: function(object) {\n\n        // unwrap value type if mapped\n        if (object && object[\"@type\"]) {\n             // Only use fully qualified type name after the last '/'\n            var name = object[\"@type\"].substring(object[\"@type\"].lastIndexOf(\"/\") + 1);\n            var type = this.lookup(name);\n            /* istanbul ignore else */\n            if (type) {\n                // type_url does not accept leading \".\"\n                var type_url = object[\"@type\"].charAt(0) === \".\" ?\n                    object[\"@type\"].slice(1) : object[\"@type\"];\n                // type_url prefix is optional, but path seperator is required\n                if (type_url.indexOf(\"/\") === -1) {\n                    type_url = \"/\" + type_url;\n                }\n                return this.create({\n                    type_url: type_url,\n                    value: type.encode(type.fromObject(object)).finish()\n                });\n            }\n        }\n\n        return this.fromObject(object);\n    },\n\n    toObject: function(message, options) {\n\n        // Default prefix\n        var googleApi = \"type.googleapis.com/\";\n        var prefix = \"\";\n        var name = \"\";\n\n        // decode value if requested and unmapped\n        if (options && options.json && message.type_url && message.value) {\n            // Only use fully qualified type name after the last '/'\n            name = message.type_url.substring(message.type_url.lastIndexOf(\"/\") + 1);\n            // Separate the prefix used\n            prefix = message.type_url.substring(0, message.type_url.lastIndexOf(\"/\") + 1);\n            var type = this.lookup(name);\n            /* istanbul ignore else */\n            if (type)\n                message = type.decode(message.value);\n        }\n\n        // wrap value if unmapped\n        if (!(message instanceof this.ctor) && message instanceof Message) {\n            var object = message.$type.toObject(message, options);\n            var messageName = message.$type.fullName[0] === \".\" ?\n                message.$type.fullName.slice(1) : message.$type.fullName;\n            // Default to type.googleapis.com prefix if no prefix is used\n            if (prefix === \"\") {\n                prefix = googleApi;\n            }\n            name = prefix + messageName;\n            object[\"@type\"] = name;\n            return object;\n        }\n\n        return this.toObject(message, options);\n    }\n};\n","\"use strict\";\nmodule.exports = Writer;\n\nvar util      = require(\"./util/minimal\");\n\nvar BufferWriter; // cyclic\n\nvar LongBits  = util.LongBits,\n    base64    = util.base64,\n    utf8      = util.utf8;\n\n/**\n * Constructs a new writer operation instance.\n * @classdesc Scheduled writer operation.\n * @constructor\n * @param {function(*, Uint8Array, number)} fn Function to call\n * @param {number} len Value byte length\n * @param {*} val Value to write\n * @ignore\n */\nfunction Op(fn, len, val) {\n\n    /**\n     * Function to call.\n     * @type {function(Uint8Array, number, *)}\n     */\n    this.fn = fn;\n\n    /**\n     * Value byte length.\n     * @type {number}\n     */\n    this.len = len;\n\n    /**\n     * Next operation.\n     * @type {Writer.Op|undefined}\n     */\n    this.next = undefined;\n\n    /**\n     * Value to write.\n     * @type {*}\n     */\n    this.val = val; // type varies\n}\n\n/* istanbul ignore next */\nfunction noop() {} // eslint-disable-line no-empty-function\n\n/**\n * Constructs a new writer state instance.\n * @classdesc Copied writer state.\n * @memberof Writer\n * @constructor\n * @param {Writer} writer Writer to copy state from\n * @ignore\n */\nfunction State(writer) {\n\n    /**\n     * Current head.\n     * @type {Writer.Op}\n     */\n    this.head = writer.head;\n\n    /**\n     * Current tail.\n     * @type {Writer.Op}\n     */\n    this.tail = writer.tail;\n\n    /**\n     * Current buffer length.\n     * @type {number}\n     */\n    this.len = writer.len;\n\n    /**\n     * Next state.\n     * @type {State|null}\n     */\n    this.next = writer.states;\n}\n\n/**\n * Constructs a new writer instance.\n * @classdesc Wire format writer using `Uint8Array` if available, otherwise `Array`.\n * @constructor\n */\nfunction Writer() {\n\n    /**\n     * Current length.\n     * @type {number}\n     */\n    this.len = 0;\n\n    /**\n     * Operations head.\n     * @type {Object}\n     */\n    this.head = new Op(noop, 0, 0);\n\n    /**\n     * Operations tail\n     * @type {Object}\n     */\n    this.tail = this.head;\n\n    /**\n     * Linked forked states.\n     * @type {Object|null}\n     */\n    this.states = null;\n\n    // When a value is written, the writer calculates its byte length and puts it into a linked\n    // list of operations to perform when finish() is called. This both allows us to allocate\n    // buffers of the exact required size and reduces the amount of work we have to do compared\n    // to first calculating over objects and then encoding over objects. In our case, the encoding\n    // part is just a linked list walk calling operations with already prepared values.\n}\n\nvar create = function create() {\n    return util.Buffer\n        ? function create_buffer_setup() {\n            return (Writer.create = function create_buffer() {\n                return new BufferWriter();\n            })();\n        }\n        /* istanbul ignore next */\n        : function create_array() {\n            return new Writer();\n        };\n};\n\n/**\n * Creates a new writer.\n * @function\n * @returns {BufferWriter|Writer} A {@link BufferWriter} when Buffers are supported, otherwise a {@link Writer}\n */\nWriter.create = create();\n\n/**\n * Allocates a buffer of the specified size.\n * @param {number} size Buffer size\n * @returns {Uint8Array} Buffer\n */\nWriter.alloc = function alloc(size) {\n    return new util.Array(size);\n};\n\n// Use Uint8Array buffer pool in the browser, just like node does with buffers\n/* istanbul ignore else */\nif (util.Array !== Array)\n    Writer.alloc = util.pool(Writer.alloc, util.Array.prototype.subarray);\n\n/**\n * Pushes a new operation to the queue.\n * @param {function(Uint8Array, number, *)} fn Function to call\n * @param {number} len Value byte length\n * @param {number} val Value to write\n * @returns {Writer} `this`\n * @private\n */\nWriter.prototype._push = function push(fn, len, val) {\n    this.tail = this.tail.next = new Op(fn, len, val);\n    this.len += len;\n    return this;\n};\n\nfunction writeByte(val, buf, pos) {\n    buf[pos] = val & 255;\n}\n\nfunction writeVarint32(val, buf, pos) {\n    while (val > 127) {\n        buf[pos++] = val & 127 | 128;\n        val >>>= 7;\n    }\n    buf[pos] = val;\n}\n\n/**\n * Constructs a new varint writer operation instance.\n * @classdesc Scheduled varint writer operation.\n * @extends Op\n * @constructor\n * @param {number} len Value byte length\n * @param {number} val Value to write\n * @ignore\n */\nfunction VarintOp(len, val) {\n    this.len = len;\n    this.next = undefined;\n    this.val = val;\n}\n\nVarintOp.prototype = Object.create(Op.prototype);\nVarintOp.prototype.fn = writeVarint32;\n\n/**\n * Writes an unsigned 32 bit value as a varint.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.uint32 = function write_uint32(value) {\n    // here, the call to this.push has been inlined and a varint specific Op subclass is used.\n    // uint32 is by far the most frequently used operation and benefits significantly from this.\n    this.len += (this.tail = this.tail.next = new VarintOp(\n        (value = value >>> 0)\n                < 128       ? 1\n        : value < 16384     ? 2\n        : value < 2097152   ? 3\n        : value < 268435456 ? 4\n        :                     5,\n    value)).len;\n    return this;\n};\n\n/**\n * Writes a signed 32 bit value as a varint.\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.int32 = function write_int32(value) {\n    return value < 0\n        ? this._push(writeVarint64, 10, LongBits.fromNumber(value)) // 10 bytes per spec\n        : this.uint32(value);\n};\n\n/**\n * Writes a 32 bit value as a varint, zig-zag encoded.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.sint32 = function write_sint32(value) {\n    return this.uint32((value << 1 ^ value >> 31) >>> 0);\n};\n\nfunction writeVarint64(val, buf, pos) {\n    while (val.hi) {\n        buf[pos++] = val.lo & 127 | 128;\n        val.lo = (val.lo >>> 7 | val.hi << 25) >>> 0;\n        val.hi >>>= 7;\n    }\n    while (val.lo > 127) {\n        buf[pos++] = val.lo & 127 | 128;\n        val.lo = val.lo >>> 7;\n    }\n    buf[pos++] = val.lo;\n}\n\n/**\n * Writes an unsigned 64 bit value as a varint.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.uint64 = function write_uint64(value) {\n    var bits = LongBits.from(value);\n    return this._push(writeVarint64, bits.length(), bits);\n};\n\n/**\n * Writes a signed 64 bit value as a varint.\n * @function\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.int64 = Writer.prototype.uint64;\n\n/**\n * Writes a signed 64 bit value as a varint, zig-zag encoded.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.sint64 = function write_sint64(value) {\n    var bits = LongBits.from(value).zzEncode();\n    return this._push(writeVarint64, bits.length(), bits);\n};\n\n/**\n * Writes a boolish value as a varint.\n * @param {boolean} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.bool = function write_bool(value) {\n    return this._push(writeByte, 1, value ? 1 : 0);\n};\n\nfunction writeFixed32(val, buf, pos) {\n    buf[pos    ] =  val         & 255;\n    buf[pos + 1] =  val >>> 8   & 255;\n    buf[pos + 2] =  val >>> 16  & 255;\n    buf[pos + 3] =  val >>> 24;\n}\n\n/**\n * Writes an unsigned 32 bit value as fixed 32 bits.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.fixed32 = function write_fixed32(value) {\n    return this._push(writeFixed32, 4, value >>> 0);\n};\n\n/**\n * Writes a signed 32 bit value as fixed 32 bits.\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.sfixed32 = Writer.prototype.fixed32;\n\n/**\n * Writes an unsigned 64 bit value as fixed 64 bits.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.fixed64 = function write_fixed64(value) {\n    var bits = LongBits.from(value);\n    return this._push(writeFixed32, 4, bits.lo)._push(writeFixed32, 4, bits.hi);\n};\n\n/**\n * Writes a signed 64 bit value as fixed 64 bits.\n * @function\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.sfixed64 = Writer.prototype.fixed64;\n\n/**\n * Writes a float (32 bit).\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.float = function write_float(value) {\n    return this._push(util.float.writeFloatLE, 4, value);\n};\n\n/**\n * Writes a double (64 bit float).\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.double = function write_double(value) {\n    return this._push(util.float.writeDoubleLE, 8, value);\n};\n\nvar writeBytes = util.Array.prototype.set\n    ? function writeBytes_set(val, buf, pos) {\n        buf.set(val, pos); // also works for plain array values\n    }\n    /* istanbul ignore next */\n    : function writeBytes_for(val, buf, pos) {\n        for (var i = 0; i < val.length; ++i)\n            buf[pos + i] = val[i];\n    };\n\n/**\n * Writes a sequence of bytes.\n * @param {Uint8Array|string} value Buffer or base64 encoded string to write\n * @returns {Writer} `this`\n */\nWriter.prototype.bytes = function write_bytes(value) {\n    var len = value.length >>> 0;\n    if (!len)\n        return this._push(writeByte, 1, 0);\n    if (util.isString(value)) {\n        var buf = Writer.alloc(len = base64.length(value));\n        base64.decode(value, buf, 0);\n        value = buf;\n    }\n    return this.uint32(len)._push(writeBytes, len, value);\n};\n\n/**\n * Writes a string.\n * @param {string} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.string = function write_string(value) {\n    var len = utf8.length(value);\n    return len\n        ? this.uint32(len)._push(utf8.write, len, value)\n        : this._push(writeByte, 1, 0);\n};\n\n/**\n * Forks this writer's state by pushing it to a stack.\n * Calling {@link Writer#reset|reset} or {@link Writer#ldelim|ldelim} resets the writer to the previous state.\n * @returns {Writer} `this`\n */\nWriter.prototype.fork = function fork() {\n    this.states = new State(this);\n    this.head = this.tail = new Op(noop, 0, 0);\n    this.len = 0;\n    return this;\n};\n\n/**\n * Resets this instance to the last state.\n * @returns {Writer} `this`\n */\nWriter.prototype.reset = function reset() {\n    if (this.states) {\n        this.head   = this.states.head;\n        this.tail   = this.states.tail;\n        this.len    = this.states.len;\n        this.states = this.states.next;\n    } else {\n        this.head = this.tail = new Op(noop, 0, 0);\n        this.len  = 0;\n    }\n    return this;\n};\n\n/**\n * Resets to the last state and appends the fork state's current write length as a varint followed by its operations.\n * @returns {Writer} `this`\n */\nWriter.prototype.ldelim = function ldelim() {\n    var head = this.head,\n        tail = this.tail,\n        len  = this.len;\n    this.reset().uint32(len);\n    if (len) {\n        this.tail.next = head.next; // skip noop\n        this.tail = tail;\n        this.len += len;\n    }\n    return this;\n};\n\n/**\n * Finishes the write operation.\n * @returns {Uint8Array} Finished buffer\n */\nWriter.prototype.finish = function finish() {\n    var head = this.head.next, // skip noop\n        buf  = this.constructor.alloc(this.len),\n        pos  = 0;\n    while (head) {\n        head.fn(head.val, buf, pos);\n        pos += head.len;\n        head = head.next;\n    }\n    // this.head = this.tail = null;\n    return buf;\n};\n\nWriter._configure = function(BufferWriter_) {\n    BufferWriter = BufferWriter_;\n    Writer.create = create();\n    BufferWriter._configure();\n};\n","\"use strict\";\nmodule.exports = BufferWriter;\n\n// extends Writer\nvar Writer = require(\"./writer\");\n(BufferWriter.prototype = Object.create(Writer.prototype)).constructor = BufferWriter;\n\nvar util = require(\"./util/minimal\");\n\n/**\n * Constructs a new buffer writer instance.\n * @classdesc Wire format writer using node buffers.\n * @extends Writer\n * @constructor\n */\nfunction BufferWriter() {\n    Writer.call(this);\n}\n\nBufferWriter._configure = function () {\n    /**\n     * Allocates a buffer of the specified size.\n     * @function\n     * @param {number} size Buffer size\n     * @returns {Buffer} Buffer\n     */\n    BufferWriter.alloc = util._Buffer_allocUnsafe;\n\n    BufferWriter.writeBytesBuffer = util.Buffer && util.Buffer.prototype instanceof Uint8Array && util.Buffer.prototype.set.name === \"set\"\n        ? function writeBytesBuffer_set(val, buf, pos) {\n          buf.set(val, pos); // faster than copy (requires node >= 4 where Buffers extend Uint8Array and set is properly inherited)\n          // also works for plain array values\n        }\n        /* istanbul ignore next */\n        : function writeBytesBuffer_copy(val, buf, pos) {\n          if (val.copy) // Buffer values\n            val.copy(buf, pos, 0, val.length);\n          else for (var i = 0; i < val.length;) // plain array values\n            buf[pos++] = val[i++];\n        };\n};\n\n\n/**\n * @override\n */\nBufferWriter.prototype.bytes = function write_bytes_buffer(value) {\n    if (util.isString(value))\n        value = util._Buffer_from(value, \"base64\");\n    var len = value.length >>> 0;\n    this.uint32(len);\n    if (len)\n        this._push(BufferWriter.writeBytesBuffer, len, value);\n    return this;\n};\n\nfunction writeStringBuffer(val, buf, pos) {\n    if (val.length < 40) // plain js is faster for short strings (probably due to redundant assertions)\n        util.utf8.write(val, buf, pos);\n    else if (buf.utf8Write)\n        buf.utf8Write(val, pos);\n    else\n        buf.write(val, pos);\n}\n\n/**\n * @override\n */\nBufferWriter.prototype.string = function write_string_buffer(value) {\n    var len = util.Buffer.byteLength(value);\n    this.uint32(len);\n    if (len)\n        this._push(writeStringBuffer, len, value);\n    return this;\n};\n\n\n/**\n * Finishes the write operation.\n * @name BufferWriter#finish\n * @function\n * @returns {Buffer} Finished buffer\n */\n\nBufferWriter._configure();\n","/*!\n * MIT License\n * \n * Copyright (c) 2017-2022 Peculiar Ventures, LLC\n * \n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n * \n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n * \n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * \n */\n\n'use strict';\n\nconst ARRAY_BUFFER_NAME = \"[object ArrayBuffer]\";\nclass BufferSourceConverter {\n    static isArrayBuffer(data) {\n        return Object.prototype.toString.call(data) === ARRAY_BUFFER_NAME;\n    }\n    static toArrayBuffer(data) {\n        if (this.isArrayBuffer(data)) {\n            return data;\n        }\n        if (data.byteLength === data.buffer.byteLength) {\n            return data.buffer;\n        }\n        if (data.byteOffset === 0 && data.byteLength === data.buffer.byteLength) {\n            return data.buffer;\n        }\n        return this.toUint8Array(data.buffer)\n            .slice(data.byteOffset, data.byteOffset + data.byteLength)\n            .buffer;\n    }\n    static toUint8Array(data) {\n        return this.toView(data, Uint8Array);\n    }\n    static toView(data, type) {\n        if (data.constructor === type) {\n            return data;\n        }\n        if (this.isArrayBuffer(data)) {\n            return new type(data);\n        }\n        if (this.isArrayBufferView(data)) {\n            return new type(data.buffer, data.byteOffset, data.byteLength);\n        }\n        throw new TypeError(\"The provided value is not of type '(ArrayBuffer or ArrayBufferView)'\");\n    }\n    static isBufferSource(data) {\n        return this.isArrayBufferView(data)\n            || this.isArrayBuffer(data);\n    }\n    static isArrayBufferView(data) {\n        return ArrayBuffer.isView(data)\n            || (data && this.isArrayBuffer(data.buffer));\n    }\n    static isEqual(a, b) {\n        const aView = BufferSourceConverter.toUint8Array(a);\n        const bView = BufferSourceConverter.toUint8Array(b);\n        if (aView.length !== bView.byteLength) {\n            return false;\n        }\n        for (let i = 0; i < aView.length; i++) {\n            if (aView[i] !== bView[i]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    static concat(...args) {\n        let buffers;\n        if (Array.isArray(args[0]) && !(args[1] instanceof Function)) {\n            buffers = args[0];\n        }\n        else if (Array.isArray(args[0]) && args[1] instanceof Function) {\n            buffers = args[0];\n        }\n        else {\n            if (args[args.length - 1] instanceof Function) {\n                buffers = args.slice(0, args.length - 1);\n            }\n            else {\n                buffers = args;\n            }\n        }\n        let size = 0;\n        for (const buffer of buffers) {\n            size += buffer.byteLength;\n        }\n        const res = new Uint8Array(size);\n        let offset = 0;\n        for (const buffer of buffers) {\n            const view = this.toUint8Array(buffer);\n            res.set(view, offset);\n            offset += view.length;\n        }\n        if (args[args.length - 1] instanceof Function) {\n            return this.toView(res, args[args.length - 1]);\n        }\n        return res.buffer;\n    }\n}\n\nconst STRING_TYPE = \"string\";\nconst HEX_REGEX = /^[0-9a-f]+$/i;\nconst BASE64_REGEX = /^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/;\nconst BASE64URL_REGEX = /^[a-zA-Z0-9-_]+$/;\nclass Utf8Converter {\n    static fromString(text) {\n        const s = unescape(encodeURIComponent(text));\n        const uintArray = new Uint8Array(s.length);\n        for (let i = 0; i < s.length; i++) {\n            uintArray[i] = s.charCodeAt(i);\n        }\n        return uintArray.buffer;\n    }\n    static toString(buffer) {\n        const buf = BufferSourceConverter.toUint8Array(buffer);\n        let encodedString = \"\";\n        for (let i = 0; i < buf.length; i++) {\n            encodedString += String.fromCharCode(buf[i]);\n        }\n        const decodedString = decodeURIComponent(escape(encodedString));\n        return decodedString;\n    }\n}\nclass Utf16Converter {\n    static toString(buffer, littleEndian = false) {\n        const arrayBuffer = BufferSourceConverter.toArrayBuffer(buffer);\n        const dataView = new DataView(arrayBuffer);\n        let res = \"\";\n        for (let i = 0; i < arrayBuffer.byteLength; i += 2) {\n            const code = dataView.getUint16(i, littleEndian);\n            res += String.fromCharCode(code);\n        }\n        return res;\n    }\n    static fromString(text, littleEndian = false) {\n        const res = new ArrayBuffer(text.length * 2);\n        const dataView = new DataView(res);\n        for (let i = 0; i < text.length; i++) {\n            dataView.setUint16(i * 2, text.charCodeAt(i), littleEndian);\n        }\n        return res;\n    }\n}\nclass Convert {\n    static isHex(data) {\n        return typeof data === STRING_TYPE\n            && HEX_REGEX.test(data);\n    }\n    static isBase64(data) {\n        return typeof data === STRING_TYPE\n            && BASE64_REGEX.test(data);\n    }\n    static isBase64Url(data) {\n        return typeof data === STRING_TYPE\n            && BASE64URL_REGEX.test(data);\n    }\n    static ToString(buffer, enc = \"utf8\") {\n        const buf = BufferSourceConverter.toUint8Array(buffer);\n        switch (enc.toLowerCase()) {\n            case \"utf8\":\n                return this.ToUtf8String(buf);\n            case \"binary\":\n                return this.ToBinary(buf);\n            case \"hex\":\n                return this.ToHex(buf);\n            case \"base64\":\n                return this.ToBase64(buf);\n            case \"base64url\":\n                return this.ToBase64Url(buf);\n            case \"utf16le\":\n                return Utf16Converter.toString(buf, true);\n            case \"utf16\":\n            case \"utf16be\":\n                return Utf16Converter.toString(buf);\n            default:\n                throw new Error(`Unknown type of encoding '${enc}'`);\n        }\n    }\n    static FromString(str, enc = \"utf8\") {\n        if (!str) {\n            return new ArrayBuffer(0);\n        }\n        switch (enc.toLowerCase()) {\n            case \"utf8\":\n                return this.FromUtf8String(str);\n            case \"binary\":\n                return this.FromBinary(str);\n            case \"hex\":\n                return this.FromHex(str);\n            case \"base64\":\n                return this.FromBase64(str);\n            case \"base64url\":\n                return this.FromBase64Url(str);\n            case \"utf16le\":\n                return Utf16Converter.fromString(str, true);\n            case \"utf16\":\n            case \"utf16be\":\n                return Utf16Converter.fromString(str);\n            default:\n                throw new Error(`Unknown type of encoding '${enc}'`);\n        }\n    }\n    static ToBase64(buffer) {\n        const buf = BufferSourceConverter.toUint8Array(buffer);\n        if (typeof btoa !== \"undefined\") {\n            const binary = this.ToString(buf, \"binary\");\n            return btoa(binary);\n        }\n        else {\n            return Buffer.from(buf).toString(\"base64\");\n        }\n    }\n    static FromBase64(base64) {\n        const formatted = this.formatString(base64);\n        if (!formatted) {\n            return new ArrayBuffer(0);\n        }\n        if (!Convert.isBase64(formatted)) {\n            throw new TypeError(\"Argument 'base64Text' is not Base64 encoded\");\n        }\n        if (typeof atob !== \"undefined\") {\n            return this.FromBinary(atob(formatted));\n        }\n        else {\n            return new Uint8Array(Buffer.from(formatted, \"base64\")).buffer;\n        }\n    }\n    static FromBase64Url(base64url) {\n        const formatted = this.formatString(base64url);\n        if (!formatted) {\n            return new ArrayBuffer(0);\n        }\n        if (!Convert.isBase64Url(formatted)) {\n            throw new TypeError(\"Argument 'base64url' is not Base64Url encoded\");\n        }\n        return this.FromBase64(this.Base64Padding(formatted.replace(/\\-/g, \"+\").replace(/\\_/g, \"/\")));\n    }\n    static ToBase64Url(data) {\n        return this.ToBase64(data).replace(/\\+/g, \"-\").replace(/\\//g, \"_\").replace(/\\=/g, \"\");\n    }\n    static FromUtf8String(text, encoding = Convert.DEFAULT_UTF8_ENCODING) {\n        switch (encoding) {\n            case \"ascii\":\n                return this.FromBinary(text);\n            case \"utf8\":\n                return Utf8Converter.fromString(text);\n            case \"utf16\":\n            case \"utf16be\":\n                return Utf16Converter.fromString(text);\n            case \"utf16le\":\n            case \"usc2\":\n                return Utf16Converter.fromString(text, true);\n            default:\n                throw new Error(`Unknown type of encoding '${encoding}'`);\n        }\n    }\n    static ToUtf8String(buffer, encoding = Convert.DEFAULT_UTF8_ENCODING) {\n        switch (encoding) {\n            case \"ascii\":\n                return this.ToBinary(buffer);\n            case \"utf8\":\n                return Utf8Converter.toString(buffer);\n            case \"utf16\":\n            case \"utf16be\":\n                return Utf16Converter.toString(buffer);\n            case \"utf16le\":\n            case \"usc2\":\n                return Utf16Converter.toString(buffer, true);\n            default:\n                throw new Error(`Unknown type of encoding '${encoding}'`);\n        }\n    }\n    static FromBinary(text) {\n        const stringLength = text.length;\n        const resultView = new Uint8Array(stringLength);\n        for (let i = 0; i < stringLength; i++) {\n            resultView[i] = text.charCodeAt(i);\n        }\n        return resultView.buffer;\n    }\n    static ToBinary(buffer) {\n        const buf = BufferSourceConverter.toUint8Array(buffer);\n        let res = \"\";\n        for (let i = 0; i < buf.length; i++) {\n            res += String.fromCharCode(buf[i]);\n        }\n        return res;\n    }\n    static ToHex(buffer) {\n        const buf = BufferSourceConverter.toUint8Array(buffer);\n        let result = \"\";\n        const len = buf.length;\n        for (let i = 0; i < len; i++) {\n            const byte = buf[i];\n            if (byte < 16) {\n                result += \"0\";\n            }\n            result += byte.toString(16);\n        }\n        return result;\n    }\n    static FromHex(hexString) {\n        let formatted = this.formatString(hexString);\n        if (!formatted) {\n            return new ArrayBuffer(0);\n        }\n        if (!Convert.isHex(formatted)) {\n            throw new TypeError(\"Argument 'hexString' is not HEX encoded\");\n        }\n        if (formatted.length % 2) {\n            formatted = `0${formatted}`;\n        }\n        const res = new Uint8Array(formatted.length / 2);\n        for (let i = 0; i < formatted.length; i = i + 2) {\n            const c = formatted.slice(i, i + 2);\n            res[i / 2] = parseInt(c, 16);\n        }\n        return res.buffer;\n    }\n    static ToUtf16String(buffer, littleEndian = false) {\n        return Utf16Converter.toString(buffer, littleEndian);\n    }\n    static FromUtf16String(text, littleEndian = false) {\n        return Utf16Converter.fromString(text, littleEndian);\n    }\n    static Base64Padding(base64) {\n        const padCount = 4 - (base64.length % 4);\n        if (padCount < 4) {\n            for (let i = 0; i < padCount; i++) {\n                base64 += \"=\";\n            }\n        }\n        return base64;\n    }\n    static formatString(data) {\n        return (data === null || data === void 0 ? void 0 : data.replace(/[\\n\\r\\t ]/g, \"\")) || \"\";\n    }\n}\nConvert.DEFAULT_UTF8_ENCODING = \"utf8\";\n\nfunction assign(target, ...sources) {\n    const res = arguments[0];\n    for (let i = 1; i < arguments.length; i++) {\n        const obj = arguments[i];\n        for (const prop in obj) {\n            res[prop] = obj[prop];\n        }\n    }\n    return res;\n}\nfunction combine(...buf) {\n    const totalByteLength = buf.map((item) => item.byteLength).reduce((prev, cur) => prev + cur);\n    const res = new Uint8Array(totalByteLength);\n    let currentPos = 0;\n    buf.map((item) => new Uint8Array(item)).forEach((arr) => {\n        for (const item2 of arr) {\n            res[currentPos++] = item2;\n        }\n    });\n    return res.buffer;\n}\nfunction isEqual(bytes1, bytes2) {\n    if (!(bytes1 && bytes2)) {\n        return false;\n    }\n    if (bytes1.byteLength !== bytes2.byteLength) {\n        return false;\n    }\n    const b1 = new Uint8Array(bytes1);\n    const b2 = new Uint8Array(bytes2);\n    for (let i = 0; i < bytes1.byteLength; i++) {\n        if (b1[i] !== b2[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n\nexports.BufferSourceConverter = BufferSourceConverter;\nexports.Convert = Convert;\nexports.assign = assign;\nexports.combine = combine;\nexports.isEqual = isEqual;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","__webpack_require__.amdO = {};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/**\n * Returns a `Uint8Array` of the requested size. Referenced memory will\n * be initialized to 0.\n */\nexport function alloc(size = 0) {\n    return new Uint8Array(size);\n}\n/**\n * Where possible returns a Uint8Array of the requested size that references\n * uninitialized memory. Only use if you are certain you will immediately\n * overwrite every value in the returned `Uint8Array`.\n */\nexport function allocUnsafe(size = 0) {\n    return new Uint8Array(size);\n}\n//# sourceMappingURL=alloc.js.map","/* eslint-disable no-fallthrough */\nimport { allocUnsafe } from 'uint8arrays/alloc';\nconst N1 = Math.pow(2, 7);\nconst N2 = Math.pow(2, 14);\nconst N3 = Math.pow(2, 21);\nconst N4 = Math.pow(2, 28);\nconst N5 = Math.pow(2, 35);\nconst N6 = Math.pow(2, 42);\nconst N7 = Math.pow(2, 49);\n/** Most significant bit of a byte */\nconst MSB = 0x80;\n/** Rest of the bits in a byte */\nconst REST = 0x7f;\nexport function encodingLength(value) {\n    if (value < N1) {\n        return 1;\n    }\n    if (value < N2) {\n        return 2;\n    }\n    if (value < N3) {\n        return 3;\n    }\n    if (value < N4) {\n        return 4;\n    }\n    if (value < N5) {\n        return 5;\n    }\n    if (value < N6) {\n        return 6;\n    }\n    if (value < N7) {\n        return 7;\n    }\n    if (Number.MAX_SAFE_INTEGER != null && value > Number.MAX_SAFE_INTEGER) {\n        throw new RangeError('Could not encode varint');\n    }\n    return 8;\n}\nexport function encodeUint8Array(value, buf, offset = 0) {\n    switch (encodingLength(value)) {\n        case 8: {\n            buf[offset++] = (value & 0xFF) | MSB;\n            value /= 128;\n        }\n        case 7: {\n            buf[offset++] = (value & 0xFF) | MSB;\n            value /= 128;\n        }\n        case 6: {\n            buf[offset++] = (value & 0xFF) | MSB;\n            value /= 128;\n        }\n        case 5: {\n            buf[offset++] = (value & 0xFF) | MSB;\n            value /= 128;\n        }\n        case 4: {\n            buf[offset++] = (value & 0xFF) | MSB;\n            value >>>= 7;\n        }\n        case 3: {\n            buf[offset++] = (value & 0xFF) | MSB;\n            value >>>= 7;\n        }\n        case 2: {\n            buf[offset++] = (value & 0xFF) | MSB;\n            value >>>= 7;\n        }\n        case 1: {\n            buf[offset++] = (value & 0xFF);\n            value >>>= 7;\n            break;\n        }\n        default: throw new Error('unreachable');\n    }\n    return buf;\n}\nexport function encodeUint8ArrayList(value, buf, offset = 0) {\n    switch (encodingLength(value)) {\n        case 8: {\n            buf.set(offset++, (value & 0xFF) | MSB);\n            value /= 128;\n        }\n        case 7: {\n            buf.set(offset++, (value & 0xFF) | MSB);\n            value /= 128;\n        }\n        case 6: {\n            buf.set(offset++, (value & 0xFF) | MSB);\n            value /= 128;\n        }\n        case 5: {\n            buf.set(offset++, (value & 0xFF) | MSB);\n            value /= 128;\n        }\n        case 4: {\n            buf.set(offset++, (value & 0xFF) | MSB);\n            value >>>= 7;\n        }\n        case 3: {\n            buf.set(offset++, (value & 0xFF) | MSB);\n            value >>>= 7;\n        }\n        case 2: {\n            buf.set(offset++, (value & 0xFF) | MSB);\n            value >>>= 7;\n        }\n        case 1: {\n            buf.set(offset++, (value & 0xFF));\n            value >>>= 7;\n            break;\n        }\n        default: throw new Error('unreachable');\n    }\n    return buf;\n}\nexport function decodeUint8Array(buf, offset) {\n    let b = buf[offset];\n    let res = 0;\n    res += b & REST;\n    if (b < MSB) {\n        return res;\n    }\n    b = buf[offset + 1];\n    res += (b & REST) << 7;\n    if (b < MSB) {\n        return res;\n    }\n    b = buf[offset + 2];\n    res += (b & REST) << 14;\n    if (b < MSB) {\n        return res;\n    }\n    b = buf[offset + 3];\n    res += (b & REST) << 21;\n    if (b < MSB) {\n        return res;\n    }\n    b = buf[offset + 4];\n    res += (b & REST) * N4;\n    if (b < MSB) {\n        return res;\n    }\n    b = buf[offset + 5];\n    res += (b & REST) * N5;\n    if (b < MSB) {\n        return res;\n    }\n    b = buf[offset + 6];\n    res += (b & REST) * N6;\n    if (b < MSB) {\n        return res;\n    }\n    b = buf[offset + 7];\n    res += (b & REST) * N7;\n    if (b < MSB) {\n        return res;\n    }\n    throw new RangeError('Could not decode varint');\n}\nexport function decodeUint8ArrayList(buf, offset) {\n    let b = buf.get(offset);\n    let res = 0;\n    res += b & REST;\n    if (b < MSB) {\n        return res;\n    }\n    b = buf.get(offset + 1);\n    res += (b & REST) << 7;\n    if (b < MSB) {\n        return res;\n    }\n    b = buf.get(offset + 2);\n    res += (b & REST) << 14;\n    if (b < MSB) {\n        return res;\n    }\n    b = buf.get(offset + 3);\n    res += (b & REST) << 21;\n    if (b < MSB) {\n        return res;\n    }\n    b = buf.get(offset + 4);\n    res += (b & REST) * N4;\n    if (b < MSB) {\n        return res;\n    }\n    b = buf.get(offset + 5);\n    res += (b & REST) * N5;\n    if (b < MSB) {\n        return res;\n    }\n    b = buf.get(offset + 6);\n    res += (b & REST) * N6;\n    if (b < MSB) {\n        return res;\n    }\n    b = buf.get(offset + 7);\n    res += (b & REST) * N7;\n    if (b < MSB) {\n        return res;\n    }\n    throw new RangeError('Could not decode varint');\n}\nexport function encode(value, buf, offset = 0) {\n    if (buf == null) {\n        buf = allocUnsafe(encodingLength(value));\n    }\n    if (buf instanceof Uint8Array) {\n        return encodeUint8Array(value, buf, offset);\n    }\n    else {\n        return encodeUint8ArrayList(value, buf, offset);\n    }\n}\nexport function decode(buf, offset = 0) {\n    if (buf instanceof Uint8Array) {\n        return decodeUint8Array(buf, offset);\n    }\n    else {\n        return decodeUint8ArrayList(buf, offset);\n    }\n}\n//# sourceMappingURL=index.js.map","const f32 = new Float32Array([-0]);\nconst f8b = new Uint8Array(f32.buffer);\n/**\n * Writes a 32 bit float to a buffer using little endian byte order\n */\nexport function writeFloatLE(val, buf, pos) {\n    f32[0] = val;\n    buf[pos] = f8b[0];\n    buf[pos + 1] = f8b[1];\n    buf[pos + 2] = f8b[2];\n    buf[pos + 3] = f8b[3];\n}\n/**\n * Writes a 32 bit float to a buffer using big endian byte order\n */\nexport function writeFloatBE(val, buf, pos) {\n    f32[0] = val;\n    buf[pos] = f8b[3];\n    buf[pos + 1] = f8b[2];\n    buf[pos + 2] = f8b[1];\n    buf[pos + 3] = f8b[0];\n}\n/**\n * Reads a 32 bit float from a buffer using little endian byte order\n */\nexport function readFloatLE(buf, pos) {\n    f8b[0] = buf[pos];\n    f8b[1] = buf[pos + 1];\n    f8b[2] = buf[pos + 2];\n    f8b[3] = buf[pos + 3];\n    return f32[0];\n}\n/**\n * Reads a 32 bit float from a buffer using big endian byte order\n */\nexport function readFloatBE(buf, pos) {\n    f8b[3] = buf[pos];\n    f8b[2] = buf[pos + 1];\n    f8b[1] = buf[pos + 2];\n    f8b[0] = buf[pos + 3];\n    return f32[0];\n}\nconst f64 = new Float64Array([-0]);\nconst d8b = new Uint8Array(f64.buffer);\n/**\n * Writes a 64 bit double to a buffer using little endian byte order\n */\nexport function writeDoubleLE(val, buf, pos) {\n    f64[0] = val;\n    buf[pos] = d8b[0];\n    buf[pos + 1] = d8b[1];\n    buf[pos + 2] = d8b[2];\n    buf[pos + 3] = d8b[3];\n    buf[pos + 4] = d8b[4];\n    buf[pos + 5] = d8b[5];\n    buf[pos + 6] = d8b[6];\n    buf[pos + 7] = d8b[7];\n}\n/**\n * Writes a 64 bit double to a buffer using big endian byte order\n */\nexport function writeDoubleBE(val, buf, pos) {\n    f64[0] = val;\n    buf[pos] = d8b[7];\n    buf[pos + 1] = d8b[6];\n    buf[pos + 2] = d8b[5];\n    buf[pos + 3] = d8b[4];\n    buf[pos + 4] = d8b[3];\n    buf[pos + 5] = d8b[2];\n    buf[pos + 6] = d8b[1];\n    buf[pos + 7] = d8b[0];\n}\n/**\n * Reads a 64 bit double from a buffer using little endian byte order\n */\nexport function readDoubleLE(buf, pos) {\n    d8b[0] = buf[pos];\n    d8b[1] = buf[pos + 1];\n    d8b[2] = buf[pos + 2];\n    d8b[3] = buf[pos + 3];\n    d8b[4] = buf[pos + 4];\n    d8b[5] = buf[pos + 5];\n    d8b[6] = buf[pos + 6];\n    d8b[7] = buf[pos + 7];\n    return f64[0];\n}\n/**\n * Reads a 64 bit double from a buffer using big endian byte order\n */\nexport function readDoubleBE(buf, pos) {\n    d8b[7] = buf[pos];\n    d8b[6] = buf[pos + 1];\n    d8b[5] = buf[pos + 2];\n    d8b[4] = buf[pos + 3];\n    d8b[3] = buf[pos + 4];\n    d8b[2] = buf[pos + 5];\n    d8b[1] = buf[pos + 6];\n    d8b[0] = buf[pos + 7];\n    return f64[0];\n}\n//# sourceMappingURL=float.js.map","// the largest BigInt we can safely downcast to a Number\nconst MAX_SAFE_NUMBER_INTEGER = BigInt(Number.MAX_SAFE_INTEGER);\nconst MIN_SAFE_NUMBER_INTEGER = BigInt(Number.MIN_SAFE_INTEGER);\n/**\n * Constructs new long bits.\n *\n * @classdesc Helper class for working with the low and high bits of a 64 bit value.\n * @memberof util\n * @function Object() { [native code] }\n * @param {number} lo - Low 32 bits, unsigned\n * @param {number} hi - High 32 bits, unsigned\n */\nexport class LongBits {\n    lo;\n    hi;\n    constructor(lo, hi) {\n        // note that the casts below are theoretically unnecessary as of today, but older statically\n        // generated converter code might still call the ctor with signed 32bits. kept for compat.\n        /**\n         * Low bits\n         */\n        this.lo = lo | 0;\n        /**\n         * High bits\n         */\n        this.hi = hi | 0;\n    }\n    /**\n     * Converts this long bits to a possibly unsafe JavaScript number\n     */\n    toNumber(unsigned = false) {\n        if (!unsigned && (this.hi >>> 31) > 0) {\n            const lo = ~this.lo + 1 >>> 0;\n            let hi = ~this.hi >>> 0;\n            if (lo === 0) {\n                hi = hi + 1 >>> 0;\n            }\n            return -(lo + hi * 4294967296);\n        }\n        return this.lo + this.hi * 4294967296;\n    }\n    /**\n     * Converts this long bits to a bigint\n     */\n    toBigInt(unsigned = false) {\n        if (unsigned) {\n            return BigInt(this.lo >>> 0) + (BigInt(this.hi >>> 0) << 32n);\n        }\n        if ((this.hi >>> 31) !== 0) {\n            const lo = ~this.lo + 1 >>> 0;\n            let hi = ~this.hi >>> 0;\n            if (lo === 0) {\n                hi = hi + 1 >>> 0;\n            }\n            return -(BigInt(lo) + (BigInt(hi) << 32n));\n        }\n        return BigInt(this.lo >>> 0) + (BigInt(this.hi >>> 0) << 32n);\n    }\n    /**\n     * Converts this long bits to a string\n     */\n    toString(unsigned = false) {\n        return this.toBigInt(unsigned).toString();\n    }\n    /**\n     * Zig-zag encodes this long bits\n     */\n    zzEncode() {\n        const mask = this.hi >> 31;\n        this.hi = ((this.hi << 1 | this.lo >>> 31) ^ mask) >>> 0;\n        this.lo = (this.lo << 1 ^ mask) >>> 0;\n        return this;\n    }\n    /**\n     * Zig-zag decodes this long bits\n     */\n    zzDecode() {\n        const mask = -(this.lo & 1);\n        this.lo = ((this.lo >>> 1 | this.hi << 31) ^ mask) >>> 0;\n        this.hi = (this.hi >>> 1 ^ mask) >>> 0;\n        return this;\n    }\n    /**\n     * Calculates the length of this longbits when encoded as a varint.\n     */\n    length() {\n        const part0 = this.lo;\n        const part1 = (this.lo >>> 28 | this.hi << 4) >>> 0;\n        const part2 = this.hi >>> 24;\n        return part2 === 0\n            ? part1 === 0\n                ? part0 < 16384\n                    ? part0 < 128 ? 1 : 2\n                    : part0 < 2097152 ? 3 : 4\n                : part1 < 16384\n                    ? part1 < 128 ? 5 : 6\n                    : part1 < 2097152 ? 7 : 8\n            : part2 < 128 ? 9 : 10;\n    }\n    /**\n     * Constructs new long bits from the specified number\n     */\n    static fromBigInt(value) {\n        if (value === 0n) {\n            return zero;\n        }\n        if (value < MAX_SAFE_NUMBER_INTEGER && value > MIN_SAFE_NUMBER_INTEGER) {\n            return this.fromNumber(Number(value));\n        }\n        const negative = value < 0n;\n        if (negative) {\n            value = -value;\n        }\n        let hi = value >> 32n;\n        let lo = value - (hi << 32n);\n        if (negative) {\n            hi = ~hi | 0n;\n            lo = ~lo | 0n;\n            if (++lo > TWO_32) {\n                lo = 0n;\n                if (++hi > TWO_32) {\n                    hi = 0n;\n                }\n            }\n        }\n        return new LongBits(Number(lo), Number(hi));\n    }\n    /**\n     * Constructs new long bits from the specified number\n     */\n    static fromNumber(value) {\n        if (value === 0) {\n            return zero;\n        }\n        const sign = value < 0;\n        if (sign) {\n            value = -value;\n        }\n        let lo = value >>> 0;\n        let hi = (value - lo) / 4294967296 >>> 0;\n        if (sign) {\n            hi = ~hi >>> 0;\n            lo = ~lo >>> 0;\n            if (++lo > 4294967295) {\n                lo = 0;\n                if (++hi > 4294967295) {\n                    hi = 0;\n                }\n            }\n        }\n        return new LongBits(lo, hi);\n    }\n    /**\n     * Constructs new long bits from a number, long or string\n     */\n    static from(value) {\n        if (typeof value === 'number') {\n            return LongBits.fromNumber(value);\n        }\n        if (typeof value === 'bigint') {\n            return LongBits.fromBigInt(value);\n        }\n        if (typeof value === 'string') {\n            return LongBits.fromBigInt(BigInt(value));\n        }\n        return value.low != null || value.high != null ? new LongBits(value.low >>> 0, value.high >>> 0) : zero;\n    }\n}\nconst zero = new LongBits(0, 0);\nzero.toBigInt = function () { return 0n; };\nzero.zzEncode = zero.zzDecode = function () { return this; };\nzero.length = function () { return 1; };\nconst TWO_32 = 4294967296n;\n//# sourceMappingURL=longbits.js.map","/**\n * Calculates the UTF8 byte length of a string\n */\nexport function length(string) {\n    let len = 0;\n    let c = 0;\n    for (let i = 0; i < string.length; ++i) {\n        c = string.charCodeAt(i);\n        if (c < 128) {\n            len += 1;\n        }\n        else if (c < 2048) {\n            len += 2;\n        }\n        else if ((c & 0xFC00) === 0xD800 && (string.charCodeAt(i + 1) & 0xFC00) === 0xDC00) {\n            ++i;\n            len += 4;\n        }\n        else {\n            len += 3;\n        }\n    }\n    return len;\n}\n/**\n * Reads UTF8 bytes as a string\n */\nexport function read(buffer, start, end) {\n    const len = end - start;\n    if (len < 1) {\n        return '';\n    }\n    let parts;\n    const chunk = [];\n    let i = 0; // char offset\n    let t; // temporary\n    while (start < end) {\n        t = buffer[start++];\n        if (t < 128) {\n            chunk[i++] = t;\n        }\n        else if (t > 191 && t < 224) {\n            chunk[i++] = (t & 31) << 6 | buffer[start++] & 63;\n        }\n        else if (t > 239 && t < 365) {\n            t = ((t & 7) << 18 | (buffer[start++] & 63) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63) - 0x10000;\n            chunk[i++] = 0xD800 + (t >> 10);\n            chunk[i++] = 0xDC00 + (t & 1023);\n        }\n        else {\n            chunk[i++] = (t & 15) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63;\n        }\n        if (i > 8191) {\n            (parts ?? (parts = [])).push(String.fromCharCode.apply(String, chunk));\n            i = 0;\n        }\n    }\n    if (parts != null) {\n        if (i > 0) {\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\n        }\n        return parts.join('');\n    }\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\n}\n/**\n * Writes a string as UTF8 bytes\n */\nexport function write(string, buffer, offset) {\n    const start = offset;\n    let c1; // character 1\n    let c2; // character 2\n    for (let i = 0; i < string.length; ++i) {\n        c1 = string.charCodeAt(i);\n        if (c1 < 128) {\n            buffer[offset++] = c1;\n        }\n        else if (c1 < 2048) {\n            buffer[offset++] = c1 >> 6 | 192;\n            buffer[offset++] = c1 & 63 | 128;\n        }\n        else if ((c1 & 0xFC00) === 0xD800 && ((c2 = string.charCodeAt(i + 1)) & 0xFC00) === 0xDC00) {\n            c1 = 0x10000 + ((c1 & 0x03FF) << 10) + (c2 & 0x03FF);\n            ++i;\n            buffer[offset++] = c1 >> 18 | 240;\n            buffer[offset++] = c1 >> 12 & 63 | 128;\n            buffer[offset++] = c1 >> 6 & 63 | 128;\n            buffer[offset++] = c1 & 63 | 128;\n        }\n        else {\n            buffer[offset++] = c1 >> 12 | 224;\n            buffer[offset++] = c1 >> 6 & 63 | 128;\n            buffer[offset++] = c1 & 63 | 128;\n        }\n    }\n    return offset - start;\n}\n//# sourceMappingURL=utf8.js.map","import { decodeUint8Array, encodingLength } from 'uint8-varint';\nimport { readFloatLE, readDoubleLE } from './float.js';\nimport { LongBits } from './longbits.js';\nimport * as utf8 from './utf8.js';\n/* istanbul ignore next */\nfunction indexOutOfRange(reader, writeLength) {\n    return RangeError(`index out of range: ${reader.pos} + ${writeLength ?? 1} > ${reader.len}`);\n}\nfunction readFixed32End(buf, end) {\n    return (buf[end - 4] |\n        buf[end - 3] << 8 |\n        buf[end - 2] << 16 |\n        buf[end - 1] << 24) >>> 0;\n}\n/**\n * Constructs a new reader instance using the specified buffer.\n */\nexport class Uint8ArrayReader {\n    buf;\n    pos;\n    len;\n    _slice = Uint8Array.prototype.subarray;\n    constructor(buffer) {\n        /**\n         * Read buffer\n         */\n        this.buf = buffer;\n        /**\n         * Read buffer position\n         */\n        this.pos = 0;\n        /**\n         * Read buffer length\n         */\n        this.len = buffer.length;\n    }\n    /**\n     * Reads a varint as an unsigned 32 bit value\n     */\n    uint32() {\n        let value = 4294967295;\n        value = (this.buf[this.pos] & 127) >>> 0;\n        if (this.buf[this.pos++] < 128)\n            return value;\n        value = (value | (this.buf[this.pos] & 127) << 7) >>> 0;\n        if (this.buf[this.pos++] < 128)\n            return value;\n        value = (value | (this.buf[this.pos] & 127) << 14) >>> 0;\n        if (this.buf[this.pos++] < 128)\n            return value;\n        value = (value | (this.buf[this.pos] & 127) << 21) >>> 0;\n        if (this.buf[this.pos++] < 128)\n            return value;\n        value = (value | (this.buf[this.pos] & 15) << 28) >>> 0;\n        if (this.buf[this.pos++] < 128)\n            return value;\n        if ((this.pos += 5) > this.len) {\n            this.pos = this.len;\n            throw indexOutOfRange(this, 10);\n        }\n        return value;\n    }\n    /**\n     * Reads a varint as a signed 32 bit value\n     */\n    int32() {\n        return this.uint32() | 0;\n    }\n    /**\n     * Reads a zig-zag encoded varint as a signed 32 bit value\n     */\n    sint32() {\n        const value = this.uint32();\n        return value >>> 1 ^ -(value & 1) | 0;\n    }\n    /**\n     * Reads a varint as a boolean\n     */\n    bool() {\n        return this.uint32() !== 0;\n    }\n    /**\n     * Reads fixed 32 bits as an unsigned 32 bit integer\n     */\n    fixed32() {\n        if (this.pos + 4 > this.len) {\n            throw indexOutOfRange(this, 4);\n        }\n        const res = readFixed32End(this.buf, this.pos += 4);\n        return res;\n    }\n    /**\n     * Reads fixed 32 bits as a signed 32 bit integer\n     */\n    sfixed32() {\n        if (this.pos + 4 > this.len) {\n            throw indexOutOfRange(this, 4);\n        }\n        const res = readFixed32End(this.buf, this.pos += 4) | 0;\n        return res;\n    }\n    /**\n     * Reads a float (32 bit) as a number\n     */\n    float() {\n        if (this.pos + 4 > this.len) {\n            throw indexOutOfRange(this, 4);\n        }\n        const value = readFloatLE(this.buf, this.pos);\n        this.pos += 4;\n        return value;\n    }\n    /**\n     * Reads a double (64 bit float) as a number\n     */\n    double() {\n        /* istanbul ignore if */\n        if (this.pos + 8 > this.len) {\n            throw indexOutOfRange(this, 4);\n        }\n        const value = readDoubleLE(this.buf, this.pos);\n        this.pos += 8;\n        return value;\n    }\n    /**\n     * Reads a sequence of bytes preceded by its length as a varint\n     */\n    bytes() {\n        const length = this.uint32();\n        const start = this.pos;\n        const end = this.pos + length;\n        /* istanbul ignore if */\n        if (end > this.len) {\n            throw indexOutOfRange(this, length);\n        }\n        this.pos += length;\n        return start === end // fix for IE 10/Win8 and others' subarray returning array of size 1\n            ? new Uint8Array(0)\n            : this.buf.subarray(start, end);\n    }\n    /**\n     * Reads a string preceded by its byte length as a varint\n     */\n    string() {\n        const bytes = this.bytes();\n        return utf8.read(bytes, 0, bytes.length);\n    }\n    /**\n     * Skips the specified number of bytes if specified, otherwise skips a varint\n     */\n    skip(length) {\n        if (typeof length === 'number') {\n            /* istanbul ignore if */\n            if (this.pos + length > this.len) {\n                throw indexOutOfRange(this, length);\n            }\n            this.pos += length;\n        }\n        else {\n            do {\n                /* istanbul ignore if */\n                if (this.pos >= this.len) {\n                    throw indexOutOfRange(this);\n                }\n            } while ((this.buf[this.pos++] & 128) !== 0);\n        }\n        return this;\n    }\n    /**\n     * Skips the next element of the specified wire type\n     */\n    skipType(wireType) {\n        switch (wireType) {\n            case 0:\n                this.skip();\n                break;\n            case 1:\n                this.skip(8);\n                break;\n            case 2:\n                this.skip(this.uint32());\n                break;\n            case 3:\n                while ((wireType = this.uint32() & 7) !== 4) {\n                    this.skipType(wireType);\n                }\n                break;\n            case 5:\n                this.skip(4);\n                break;\n            /* istanbul ignore next */\n            default:\n                throw Error(`invalid wire type ${wireType} at offset ${this.pos}`);\n        }\n        return this;\n    }\n    readLongVarint() {\n        // tends to deopt with local vars for octet etc.\n        const bits = new LongBits(0, 0);\n        let i = 0;\n        if (this.len - this.pos > 4) { // fast route (lo)\n            for (; i < 4; ++i) {\n                // 1st..4th\n                bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n                if (this.buf[this.pos++] < 128) {\n                    return bits;\n                }\n            }\n            // 5th\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << 28) >>> 0;\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) >> 4) >>> 0;\n            if (this.buf[this.pos++] < 128) {\n                return bits;\n            }\n            i = 0;\n        }\n        else {\n            for (; i < 3; ++i) {\n                /* istanbul ignore if */\n                if (this.pos >= this.len) {\n                    throw indexOutOfRange(this);\n                }\n                // 1st..3th\n                bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n                if (this.buf[this.pos++] < 128) {\n                    return bits;\n                }\n            }\n            // 4th\n            bits.lo = (bits.lo | (this.buf[this.pos++] & 127) << i * 7) >>> 0;\n            return bits;\n        }\n        if (this.len - this.pos > 4) { // fast route (hi)\n            for (; i < 5; ++i) {\n                // 6th..10th\n                bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n                if (this.buf[this.pos++] < 128) {\n                    return bits;\n                }\n            }\n        }\n        else {\n            for (; i < 5; ++i) {\n                if (this.pos >= this.len) {\n                    throw indexOutOfRange(this);\n                }\n                // 6th..10th\n                bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n                if (this.buf[this.pos++] < 128) {\n                    return bits;\n                }\n            }\n        }\n        throw Error('invalid varint encoding');\n    }\n    readFixed64() {\n        if (this.pos + 8 > this.len) {\n            throw indexOutOfRange(this, 8);\n        }\n        const lo = readFixed32End(this.buf, this.pos += 4);\n        const hi = readFixed32End(this.buf, this.pos += 4);\n        return new LongBits(lo, hi);\n    }\n    /**\n     * Reads a varint as a signed 64 bit value\n     */\n    int64() {\n        return this.readLongVarint().toBigInt();\n    }\n    /**\n     * Reads a varint as a signed 64 bit value returned as a possibly unsafe\n     * JavaScript number\n     */\n    int64Number() {\n        return this.readLongVarint().toNumber();\n    }\n    /**\n     * Reads a varint as a signed 64 bit value returned as a string\n     */\n    int64String() {\n        return this.readLongVarint().toString();\n    }\n    /**\n     * Reads a varint as an unsigned 64 bit value\n     */\n    uint64() {\n        return this.readLongVarint().toBigInt(true);\n    }\n    /**\n     * Reads a varint as an unsigned 64 bit value returned as a possibly unsafe\n     * JavaScript number\n     */\n    uint64Number() {\n        const value = decodeUint8Array(this.buf, this.pos);\n        this.pos += encodingLength(value);\n        return value;\n    }\n    /**\n     * Reads a varint as an unsigned 64 bit value returned as a string\n     */\n    uint64String() {\n        return this.readLongVarint().toString(true);\n    }\n    /**\n     * Reads a zig-zag encoded varint as a signed 64 bit value\n     */\n    sint64() {\n        return this.readLongVarint().zzDecode().toBigInt();\n    }\n    /**\n     * Reads a zig-zag encoded varint as a signed 64 bit value returned as a\n     * possibly unsafe JavaScript number\n     */\n    sint64Number() {\n        return this.readLongVarint().zzDecode().toNumber();\n    }\n    /**\n     * Reads a zig-zag encoded varint as a signed 64 bit value returned as a\n     * string\n     */\n    sint64String() {\n        return this.readLongVarint().zzDecode().toString();\n    }\n    /**\n     * Reads fixed 64 bits\n     */\n    fixed64() {\n        return this.readFixed64().toBigInt();\n    }\n    /**\n     * Reads fixed 64 bits returned as a possibly unsafe JavaScript number\n     */\n    fixed64Number() {\n        return this.readFixed64().toNumber();\n    }\n    /**\n     * Reads fixed 64 bits returned as a string\n     */\n    fixed64String() {\n        return this.readFixed64().toString();\n    }\n    /**\n     * Reads zig-zag encoded fixed 64 bits\n     */\n    sfixed64() {\n        return this.readFixed64().toBigInt();\n    }\n    /**\n     * Reads zig-zag encoded fixed 64 bits returned as a possibly unsafe\n     * JavaScript number\n     */\n    sfixed64Number() {\n        return this.readFixed64().toNumber();\n    }\n    /**\n     * Reads zig-zag encoded fixed 64 bits returned as a string\n     */\n    sfixed64String() {\n        return this.readFixed64().toString();\n    }\n}\nexport function createReader(buf) {\n    return new Uint8ArrayReader(buf instanceof Uint8Array ? buf : buf.subarray());\n}\n//# sourceMappingURL=reader.js.map","import { createReader } from './utils/reader.js';\nexport function decodeMessage(buf, codec, opts) {\n    const reader = createReader(buf);\n    return codec.decode(reader, undefined, opts);\n}\n//# sourceMappingURL=decode.js.map","export const empty = new Uint8Array(0);\nexport function toHex(d) {\n    return d.reduce((hex, byte) => hex + byte.toString(16).padStart(2, '0'), '');\n}\nexport function fromHex(hex) {\n    const hexes = hex.match(/../g);\n    return hexes != null ? new Uint8Array(hexes.map(b => parseInt(b, 16))) : empty;\n}\nexport function equals(aa, bb) {\n    if (aa === bb)\n        return true;\n    if (aa.byteLength !== bb.byteLength) {\n        return false;\n    }\n    for (let ii = 0; ii < aa.byteLength; ii++) {\n        if (aa[ii] !== bb[ii]) {\n            return false;\n        }\n    }\n    return true;\n}\nexport function coerce(o) {\n    if (o instanceof Uint8Array && o.constructor.name === 'Uint8Array')\n        return o;\n    if (o instanceof ArrayBuffer)\n        return new Uint8Array(o);\n    if (ArrayBuffer.isView(o)) {\n        return new Uint8Array(o.buffer, o.byteOffset, o.byteLength);\n    }\n    throw new Error('Unknown type, must be binary type');\n}\nexport function isBinary(o) {\n    return o instanceof ArrayBuffer || ArrayBuffer.isView(o);\n}\nexport function fromString(str) {\n    return new TextEncoder().encode(str);\n}\nexport function toString(b) {\n    return new TextDecoder().decode(b);\n}\n//# sourceMappingURL=bytes.js.map","/* eslint-disable */\n// base-x encoding / decoding\n// Copyright (c) 2018 base-x contributors\n// Copyright (c) 2014-2018 The Bitcoin Core developers (base58.cpp)\n// Distributed under the MIT software license, see the accompanying\n// file LICENSE or http://www.opensource.org/licenses/mit-license.php.\n/**\n * @param {string} ALPHABET\n * @param {any} name\n */\nfunction base(ALPHABET, name) {\n    if (ALPHABET.length >= 255) {\n        throw new TypeError('Alphabet too long');\n    }\n    var BASE_MAP = new Uint8Array(256);\n    for (var j = 0; j < BASE_MAP.length; j++) {\n        BASE_MAP[j] = 255;\n    }\n    for (var i = 0; i < ALPHABET.length; i++) {\n        var x = ALPHABET.charAt(i);\n        var xc = x.charCodeAt(0);\n        if (BASE_MAP[xc] !== 255) {\n            throw new TypeError(x + ' is ambiguous');\n        }\n        BASE_MAP[xc] = i;\n    }\n    var BASE = ALPHABET.length;\n    var LEADER = ALPHABET.charAt(0);\n    var FACTOR = Math.log(BASE) / Math.log(256); // log(BASE) / log(256), rounded up\n    var iFACTOR = Math.log(256) / Math.log(BASE); // log(256) / log(BASE), rounded up\n    /**\n     * @param {any[] | Iterable<number>} source\n     */\n    function encode(source) {\n        // @ts-ignore\n        if (source instanceof Uint8Array)\n            ;\n        else if (ArrayBuffer.isView(source)) {\n            source = new Uint8Array(source.buffer, source.byteOffset, source.byteLength);\n        }\n        else if (Array.isArray(source)) {\n            source = Uint8Array.from(source);\n        }\n        if (!(source instanceof Uint8Array)) {\n            throw new TypeError('Expected Uint8Array');\n        }\n        if (source.length === 0) {\n            return '';\n        }\n        // Skip & count leading zeroes.\n        var zeroes = 0;\n        var length = 0;\n        var pbegin = 0;\n        var pend = source.length;\n        while (pbegin !== pend && source[pbegin] === 0) {\n            pbegin++;\n            zeroes++;\n        }\n        // Allocate enough space in big-endian base58 representation.\n        var size = ((pend - pbegin) * iFACTOR + 1) >>> 0;\n        var b58 = new Uint8Array(size);\n        // Process the bytes.\n        while (pbegin !== pend) {\n            var carry = source[pbegin];\n            // Apply \"b58 = b58 * 256 + ch\".\n            var i = 0;\n            for (var it1 = size - 1; (carry !== 0 || i < length) && (it1 !== -1); it1--, i++) {\n                carry += (256 * b58[it1]) >>> 0;\n                b58[it1] = (carry % BASE) >>> 0;\n                carry = (carry / BASE) >>> 0;\n            }\n            if (carry !== 0) {\n                throw new Error('Non-zero carry');\n            }\n            length = i;\n            pbegin++;\n        }\n        // Skip leading zeroes in base58 result.\n        var it2 = size - length;\n        while (it2 !== size && b58[it2] === 0) {\n            it2++;\n        }\n        // Translate the result into a string.\n        var str = LEADER.repeat(zeroes);\n        for (; it2 < size; ++it2) {\n            str += ALPHABET.charAt(b58[it2]);\n        }\n        return str;\n    }\n    /**\n     * @param {string | string[]} source\n     */\n    function decodeUnsafe(source) {\n        if (typeof source !== 'string') {\n            throw new TypeError('Expected String');\n        }\n        if (source.length === 0) {\n            return new Uint8Array();\n        }\n        var psz = 0;\n        // Skip leading spaces.\n        if (source[psz] === ' ') {\n            return;\n        }\n        // Skip and count leading '1's.\n        var zeroes = 0;\n        var length = 0;\n        while (source[psz] === LEADER) {\n            zeroes++;\n            psz++;\n        }\n        // Allocate enough space in big-endian base256 representation.\n        var size = (((source.length - psz) * FACTOR) + 1) >>> 0; // log(58) / log(256), rounded up.\n        var b256 = new Uint8Array(size);\n        // Process the characters.\n        while (source[psz]) {\n            // Decode character\n            var carry = BASE_MAP[source.charCodeAt(psz)];\n            // Invalid character\n            if (carry === 255) {\n                return;\n            }\n            var i = 0;\n            for (var it3 = size - 1; (carry !== 0 || i < length) && (it3 !== -1); it3--, i++) {\n                carry += (BASE * b256[it3]) >>> 0;\n                b256[it3] = (carry % 256) >>> 0;\n                carry = (carry / 256) >>> 0;\n            }\n            if (carry !== 0) {\n                throw new Error('Non-zero carry');\n            }\n            length = i;\n            psz++;\n        }\n        // Skip trailing spaces.\n        if (source[psz] === ' ') {\n            return;\n        }\n        // Skip leading zeroes in b256.\n        var it4 = size - length;\n        while (it4 !== size && b256[it4] === 0) {\n            it4++;\n        }\n        var vch = new Uint8Array(zeroes + (size - it4));\n        var j = zeroes;\n        while (it4 !== size) {\n            vch[j++] = b256[it4++];\n        }\n        return vch;\n    }\n    /**\n     * @param {string | string[]} string\n     */\n    function decode(string) {\n        var buffer = decodeUnsafe(string);\n        if (buffer) {\n            return buffer;\n        }\n        throw new Error(`Non-${name} character`);\n    }\n    return {\n        encode: encode,\n        decodeUnsafe: decodeUnsafe,\n        decode: decode\n    };\n}\nvar src = base;\nvar _brrp__multiformats_scope_baseX = src;\nexport default _brrp__multiformats_scope_baseX;\n//# sourceMappingURL=base-x.js.map","import { coerce } from '../bytes.js';\nimport basex from '../vendor/base-x.js';\n/**\n * Class represents both BaseEncoder and MultibaseEncoder meaning it\n * can be used to encode to multibase or base encode without multibase\n * prefix.\n */\nclass Encoder {\n    name;\n    prefix;\n    baseEncode;\n    constructor(name, prefix, baseEncode) {\n        this.name = name;\n        this.prefix = prefix;\n        this.baseEncode = baseEncode;\n    }\n    encode(bytes) {\n        if (bytes instanceof Uint8Array) {\n            return `${this.prefix}${this.baseEncode(bytes)}`;\n        }\n        else {\n            throw Error('Unknown type, must be binary type');\n        }\n    }\n}\n/**\n * Class represents both BaseDecoder and MultibaseDecoder so it could be used\n * to decode multibases (with matching prefix) or just base decode strings\n * with corresponding base encoding.\n */\nclass Decoder {\n    name;\n    prefix;\n    baseDecode;\n    prefixCodePoint;\n    constructor(name, prefix, baseDecode) {\n        this.name = name;\n        this.prefix = prefix;\n        const prefixCodePoint = prefix.codePointAt(0);\n        /* c8 ignore next 3 */\n        if (prefixCodePoint === undefined) {\n            throw new Error('Invalid prefix character');\n        }\n        this.prefixCodePoint = prefixCodePoint;\n        this.baseDecode = baseDecode;\n    }\n    decode(text) {\n        if (typeof text === 'string') {\n            if (text.codePointAt(0) !== this.prefixCodePoint) {\n                throw Error(`Unable to decode multibase string ${JSON.stringify(text)}, ${this.name} decoder only supports inputs prefixed with ${this.prefix}`);\n            }\n            return this.baseDecode(text.slice(this.prefix.length));\n        }\n        else {\n            throw Error('Can only multibase decode strings');\n        }\n    }\n    or(decoder) {\n        return or(this, decoder);\n    }\n}\nclass ComposedDecoder {\n    decoders;\n    constructor(decoders) {\n        this.decoders = decoders;\n    }\n    or(decoder) {\n        return or(this, decoder);\n    }\n    decode(input) {\n        const prefix = input[0];\n        const decoder = this.decoders[prefix];\n        if (decoder != null) {\n            return decoder.decode(input);\n        }\n        else {\n            throw RangeError(`Unable to decode multibase string ${JSON.stringify(input)}, only inputs prefixed with ${Object.keys(this.decoders)} are supported`);\n        }\n    }\n}\nexport function or(left, right) {\n    // eslint-disable-next-line @typescript-eslint/consistent-type-assertions\n    return new ComposedDecoder({\n        ...(left.decoders ?? { [left.prefix]: left }),\n        ...(right.decoders ?? { [right.prefix]: right })\n    });\n}\nexport class Codec {\n    name;\n    prefix;\n    baseEncode;\n    baseDecode;\n    encoder;\n    decoder;\n    constructor(name, prefix, baseEncode, baseDecode) {\n        this.name = name;\n        this.prefix = prefix;\n        this.baseEncode = baseEncode;\n        this.baseDecode = baseDecode;\n        this.encoder = new Encoder(name, prefix, baseEncode);\n        this.decoder = new Decoder(name, prefix, baseDecode);\n    }\n    encode(input) {\n        return this.encoder.encode(input);\n    }\n    decode(input) {\n        return this.decoder.decode(input);\n    }\n}\nexport function from({ name, prefix, encode, decode }) {\n    return new Codec(name, prefix, encode, decode);\n}\nexport function baseX({ name, prefix, alphabet }) {\n    const { encode, decode } = basex(alphabet, name);\n    return from({\n        prefix,\n        name,\n        encode,\n        decode: (text) => coerce(decode(text))\n    });\n}\nfunction decode(string, alphabet, bitsPerChar, name) {\n    // Build the character lookup table:\n    const codes = {};\n    for (let i = 0; i < alphabet.length; ++i) {\n        codes[alphabet[i]] = i;\n    }\n    // Count the padding bytes:\n    let end = string.length;\n    while (string[end - 1] === '=') {\n        --end;\n    }\n    // Allocate the output:\n    const out = new Uint8Array((end * bitsPerChar / 8) | 0);\n    // Parse the data:\n    let bits = 0; // Number of bits currently in the buffer\n    let buffer = 0; // Bits waiting to be written out, MSB first\n    let written = 0; // Next byte to write\n    for (let i = 0; i < end; ++i) {\n        // Read one character from the string:\n        const value = codes[string[i]];\n        if (value === undefined) {\n            throw new SyntaxError(`Non-${name} character`);\n        }\n        // Append the bits to the buffer:\n        buffer = (buffer << bitsPerChar) | value;\n        bits += bitsPerChar;\n        // Write out some bits if the buffer has a byte's worth:\n        if (bits >= 8) {\n            bits -= 8;\n            out[written++] = 0xff & (buffer >> bits);\n        }\n    }\n    // Verify that we have received just enough bits:\n    if (bits >= bitsPerChar || (0xff & (buffer << (8 - bits))) !== 0) {\n        throw new SyntaxError('Unexpected end of data');\n    }\n    return out;\n}\nfunction encode(data, alphabet, bitsPerChar) {\n    const pad = alphabet[alphabet.length - 1] === '=';\n    const mask = (1 << bitsPerChar) - 1;\n    let out = '';\n    let bits = 0; // Number of bits currently in the buffer\n    let buffer = 0; // Bits waiting to be written out, MSB first\n    for (let i = 0; i < data.length; ++i) {\n        // Slurp data into the buffer:\n        buffer = (buffer << 8) | data[i];\n        bits += 8;\n        // Write out as much as we can:\n        while (bits > bitsPerChar) {\n            bits -= bitsPerChar;\n            out += alphabet[mask & (buffer >> bits)];\n        }\n    }\n    // Partial character:\n    if (bits !== 0) {\n        out += alphabet[mask & (buffer << (bitsPerChar - bits))];\n    }\n    // Add padding characters until we hit a byte boundary:\n    if (pad) {\n        while (((out.length * bitsPerChar) & 7) !== 0) {\n            out += '=';\n        }\n    }\n    return out;\n}\n/**\n * RFC4648 Factory\n */\nexport function rfc4648({ name, prefix, bitsPerChar, alphabet }) {\n    return from({\n        prefix,\n        name,\n        encode(input) {\n            return encode(input, alphabet, bitsPerChar);\n        },\n        decode(input) {\n            return decode(input, alphabet, bitsPerChar, name);\n        }\n    });\n}\n//# sourceMappingURL=base.js.map","import { baseX } from './base.js';\nexport const base10 = baseX({\n    prefix: '9',\n    name: 'base10',\n    alphabet: '0123456789'\n});\n//# sourceMappingURL=base10.js.map","import { rfc4648 } from './base.js';\nexport const base16 = rfc4648({\n    prefix: 'f',\n    name: 'base16',\n    alphabet: '0123456789abcdef',\n    bitsPerChar: 4\n});\nexport const base16upper = rfc4648({\n    prefix: 'F',\n    name: 'base16upper',\n    alphabet: '0123456789ABCDEF',\n    bitsPerChar: 4\n});\n//# sourceMappingURL=base16.js.map","import { rfc4648 } from './base.js';\nexport const base2 = rfc4648({\n    prefix: '0',\n    name: 'base2',\n    alphabet: '01',\n    bitsPerChar: 1\n});\n//# sourceMappingURL=base2.js.map","import { from } from './base.js';\nconst alphabet = Array.from('🚀🪐☄🛰🌌🌑🌒🌓🌔🌕🌖🌗🌘🌍🌏🌎🐉☀💻🖥💾💿😂❤😍🤣😊🙏💕😭😘👍😅👏😁🔥🥰💔💖💙😢🤔😆🙄💪😉☺👌🤗💜😔😎😇🌹🤦🎉💞✌✨🤷😱😌🌸🙌😋💗💚😏💛🙂💓🤩😄😀🖤😃💯🙈👇🎶😒🤭❣😜💋👀😪😑💥🙋😞😩😡🤪👊🥳😥🤤👉💃😳✋😚😝😴🌟😬🙃🍀🌷😻😓⭐✅🥺🌈😈🤘💦✔😣🏃💐☹🎊💘😠☝😕🌺🎂🌻😐🖕💝🙊😹🗣💫💀👑🎵🤞😛🔴😤🌼😫⚽🤙☕🏆🤫👈😮🙆🍻🍃🐶💁😲🌿🧡🎁⚡🌞🎈❌✊👋😰🤨😶🤝🚶💰🍓💢🤟🙁🚨💨🤬✈🎀🍺🤓😙💟🌱😖👶🥴▶➡❓💎💸⬇😨🌚🦋😷🕺⚠🙅😟😵👎🤲🤠🤧📌🔵💅🧐🐾🍒😗🤑🌊🤯🐷☎💧😯💆👆🎤🙇🍑❄🌴💣🐸💌📍🥀🤢👅💡💩👐📸👻🤐🤮🎼🥵🚩🍎🍊👼💍📣🥂');\nconst alphabetBytesToChars = (alphabet.reduce((p, c, i) => { p[i] = c; return p; }, ([])));\nconst alphabetCharsToBytes = (alphabet.reduce((p, c, i) => {\n    const codePoint = c.codePointAt(0);\n    if (codePoint == null) {\n        throw new Error(`Invalid character: ${c}`);\n    }\n    p[codePoint] = i;\n    return p;\n}, ([])));\nfunction encode(data) {\n    return data.reduce((p, c) => {\n        p += alphabetBytesToChars[c];\n        return p;\n    }, '');\n}\nfunction decode(str) {\n    const byts = [];\n    for (const char of str) {\n        const codePoint = char.codePointAt(0);\n        if (codePoint == null) {\n            throw new Error(`Invalid character: ${char}`);\n        }\n        const byt = alphabetCharsToBytes[codePoint];\n        if (byt == null) {\n            throw new Error(`Non-base256emoji character: ${char}`);\n        }\n        byts.push(byt);\n    }\n    return new Uint8Array(byts);\n}\nexport const base256emoji = from({\n    prefix: '🚀',\n    name: 'base256emoji',\n    encode,\n    decode\n});\n//# sourceMappingURL=base256emoji.js.map","import { rfc4648 } from './base.js';\nexport const base32 = rfc4648({\n    prefix: 'b',\n    name: 'base32',\n    alphabet: 'abcdefghijklmnopqrstuvwxyz234567',\n    bitsPerChar: 5\n});\nexport const base32upper = rfc4648({\n    prefix: 'B',\n    name: 'base32upper',\n    alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567',\n    bitsPerChar: 5\n});\nexport const base32pad = rfc4648({\n    prefix: 'c',\n    name: 'base32pad',\n    alphabet: 'abcdefghijklmnopqrstuvwxyz234567=',\n    bitsPerChar: 5\n});\nexport const base32padupper = rfc4648({\n    prefix: 'C',\n    name: 'base32padupper',\n    alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=',\n    bitsPerChar: 5\n});\nexport const base32hex = rfc4648({\n    prefix: 'v',\n    name: 'base32hex',\n    alphabet: '0123456789abcdefghijklmnopqrstuv',\n    bitsPerChar: 5\n});\nexport const base32hexupper = rfc4648({\n    prefix: 'V',\n    name: 'base32hexupper',\n    alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUV',\n    bitsPerChar: 5\n});\nexport const base32hexpad = rfc4648({\n    prefix: 't',\n    name: 'base32hexpad',\n    alphabet: '0123456789abcdefghijklmnopqrstuv=',\n    bitsPerChar: 5\n});\nexport const base32hexpadupper = rfc4648({\n    prefix: 'T',\n    name: 'base32hexpadupper',\n    alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUV=',\n    bitsPerChar: 5\n});\nexport const base32z = rfc4648({\n    prefix: 'h',\n    name: 'base32z',\n    alphabet: 'ybndrfg8ejkmcpqxot1uwisza345h769',\n    bitsPerChar: 5\n});\n//# sourceMappingURL=base32.js.map","import { baseX } from './base.js';\nexport const base36 = baseX({\n    prefix: 'k',\n    name: 'base36',\n    alphabet: '0123456789abcdefghijklmnopqrstuvwxyz'\n});\nexport const base36upper = baseX({\n    prefix: 'K',\n    name: 'base36upper',\n    alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n});\n//# sourceMappingURL=base36.js.map","import { baseX } from './base.js';\nexport const base58btc = baseX({\n    name: 'base58btc',\n    prefix: 'z',\n    alphabet: '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n});\nexport const base58flickr = baseX({\n    name: 'base58flickr',\n    prefix: 'Z',\n    alphabet: '123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ'\n});\n//# sourceMappingURL=base58.js.map","import { rfc4648 } from './base.js';\nexport const base64 = rfc4648({\n    prefix: 'm',\n    name: 'base64',\n    alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/',\n    bitsPerChar: 6\n});\nexport const base64pad = rfc4648({\n    prefix: 'M',\n    name: 'base64pad',\n    alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=',\n    bitsPerChar: 6\n});\nexport const base64url = rfc4648({\n    prefix: 'u',\n    name: 'base64url',\n    alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_',\n    bitsPerChar: 6\n});\nexport const base64urlpad = rfc4648({\n    prefix: 'U',\n    name: 'base64urlpad',\n    alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=',\n    bitsPerChar: 6\n});\n//# sourceMappingURL=base64.js.map","import { rfc4648 } from './base.js';\nexport const base8 = rfc4648({\n    prefix: '7',\n    name: 'base8',\n    alphabet: '01234567',\n    bitsPerChar: 3\n});\n//# sourceMappingURL=base8.js.map","import { fromString, toString } from '../bytes.js';\nimport { from } from './base.js';\nexport const identity = from({\n    prefix: '\\x00',\n    name: 'identity',\n    encode: (buf) => toString(buf),\n    decode: (str) => fromString(str)\n});\n//# sourceMappingURL=identity.js.map","const textEncoder = new TextEncoder();\nconst textDecoder = new TextDecoder();\nexport const name = 'json';\nexport const code = 0x0200;\nexport function encode(node) {\n    return textEncoder.encode(JSON.stringify(node));\n}\nexport function decode(data) {\n    return JSON.parse(textDecoder.decode(data));\n}\n//# sourceMappingURL=json.js.map","import { coerce } from '../bytes.js';\nexport const name = 'raw';\nexport const code = 0x55;\nexport function encode(node) {\n    return coerce(node);\n}\nexport function decode(data) {\n    return coerce(data);\n}\n//# sourceMappingURL=raw.js.map","/* eslint-disable */\nvar encode_1 = encode;\nvar MSB = 0x80, REST = 0x7F, MSBALL = ~REST, INT = Math.pow(2, 31);\n/**\n * @param {number} num\n * @param {number[]} out\n * @param {number} offset\n */\nfunction encode(num, out, offset) {\n    out = out || [];\n    offset = offset || 0;\n    var oldOffset = offset;\n    while (num >= INT) {\n        out[offset++] = (num & 0xFF) | MSB;\n        num /= 128;\n    }\n    while (num & MSBALL) {\n        out[offset++] = (num & 0xFF) | MSB;\n        num >>>= 7;\n    }\n    out[offset] = num | 0;\n    // @ts-ignore\n    encode.bytes = offset - oldOffset + 1;\n    return out;\n}\nvar decode = read;\nvar MSB$1 = 0x80, REST$1 = 0x7F;\n/**\n * @param {string | any[]} buf\n * @param {number} offset\n */\nfunction read(buf, offset) {\n    var res = 0, offset = offset || 0, shift = 0, counter = offset, b, l = buf.length;\n    do {\n        if (counter >= l) {\n            // @ts-ignore\n            read.bytes = 0;\n            throw new RangeError('Could not decode varint');\n        }\n        b = buf[counter++];\n        res += shift < 28\n            ? (b & REST$1) << shift\n            : (b & REST$1) * Math.pow(2, shift);\n        shift += 7;\n    } while (b >= MSB$1);\n    // @ts-ignore\n    read.bytes = counter - offset;\n    return res;\n}\nvar N1 = Math.pow(2, 7);\nvar N2 = Math.pow(2, 14);\nvar N3 = Math.pow(2, 21);\nvar N4 = Math.pow(2, 28);\nvar N5 = Math.pow(2, 35);\nvar N6 = Math.pow(2, 42);\nvar N7 = Math.pow(2, 49);\nvar N8 = Math.pow(2, 56);\nvar N9 = Math.pow(2, 63);\nvar length = function (/** @type {number} */ value) {\n    return (value < N1 ? 1\n        : value < N2 ? 2\n            : value < N3 ? 3\n                : value < N4 ? 4\n                    : value < N5 ? 5\n                        : value < N6 ? 6\n                            : value < N7 ? 7\n                                : value < N8 ? 8\n                                    : value < N9 ? 9\n                                        : 10);\n};\nvar varint = {\n    encode: encode_1,\n    decode: decode,\n    encodingLength: length\n};\nvar _brrp_varint = varint;\nexport default _brrp_varint;\n//# sourceMappingURL=varint.js.map","import varint from './vendor/varint.js';\nexport function decode(data, offset = 0) {\n    const code = varint.decode(data, offset);\n    return [code, varint.decode.bytes];\n}\nexport function encodeTo(int, target, offset = 0) {\n    varint.encode(int, target, offset);\n    return target;\n}\nexport function encodingLength(int) {\n    return varint.encodingLength(int);\n}\n//# sourceMappingURL=varint.js.map","import { coerce, equals as equalBytes } from '../bytes.js';\nimport * as varint from '../varint.js';\n/**\n * Creates a multihash digest.\n */\nexport function create(code, digest) {\n    const size = digest.byteLength;\n    const sizeOffset = varint.encodingLength(code);\n    const digestOffset = sizeOffset + varint.encodingLength(size);\n    const bytes = new Uint8Array(digestOffset + size);\n    varint.encodeTo(code, bytes, 0);\n    varint.encodeTo(size, bytes, sizeOffset);\n    bytes.set(digest, digestOffset);\n    return new Digest(code, size, digest, bytes);\n}\n/**\n * Turns bytes representation of multihash digest into an instance.\n */\nexport function decode(multihash) {\n    const bytes = coerce(multihash);\n    const [code, sizeOffset] = varint.decode(bytes);\n    const [size, digestOffset] = varint.decode(bytes.subarray(sizeOffset));\n    const digest = bytes.subarray(sizeOffset + digestOffset);\n    if (digest.byteLength !== size) {\n        throw new Error('Incorrect length');\n    }\n    return new Digest(code, size, digest, bytes);\n}\nexport function equals(a, b) {\n    if (a === b) {\n        return true;\n    }\n    else {\n        const data = b;\n        return (a.code === data.code &&\n            a.size === data.size &&\n            data.bytes instanceof Uint8Array &&\n            equalBytes(a.bytes, data.bytes));\n    }\n}\n/**\n * Represents a multihash digest which carries information about the\n * hashing algorithm and an actual hash digest.\n */\nexport class Digest {\n    code;\n    size;\n    digest;\n    bytes;\n    /**\n     * Creates a multihash digest.\n     */\n    constructor(code, size, digest, bytes) {\n        this.code = code;\n        this.size = size;\n        this.digest = digest;\n        this.bytes = bytes;\n    }\n}\n/**\n * Used to check that the passed multihash has the passed code\n */\nexport function hasCode(digest, code) {\n    return digest.code === code;\n}\n//# sourceMappingURL=digest.js.map","import { coerce } from '../bytes.js';\nimport * as Digest from './digest.js';\nconst code = 0x0;\nconst name = 'identity';\nconst encode = coerce;\nfunction digest(input) {\n    return Digest.create(code, encode(input));\n}\nexport const identity = { code, name, encode, digest };\n//# sourceMappingURL=identity.js.map","import * as Digest from './digest.js';\nexport function from({ name, code, encode }) {\n    return new Hasher(name, code, encode);\n}\n/**\n * Hasher represents a hashing algorithm implementation that produces as\n * `MultihashDigest`.\n */\nexport class Hasher {\n    name;\n    code;\n    encode;\n    constructor(name, code, encode) {\n        this.name = name;\n        this.code = code;\n        this.encode = encode;\n    }\n    digest(input) {\n        if (input instanceof Uint8Array) {\n            const result = this.encode(input);\n            return result instanceof Uint8Array\n                ? Digest.create(this.code, result)\n                /* c8 ignore next 1 */\n                : result.then(digest => Digest.create(this.code, digest));\n        }\n        else {\n            throw Error('Unknown type, must be binary type');\n            /* c8 ignore next 1 */\n        }\n    }\n}\n//# sourceMappingURL=hasher.js.map","/* global crypto */\nimport { from } from './hasher.js';\nfunction sha(name) {\n    return async (data) => new Uint8Array(await crypto.subtle.digest(name, data));\n}\nexport const sha256 = from({\n    name: 'sha2-256',\n    code: 0x12,\n    encode: sha('SHA-256')\n});\nexport const sha512 = from({\n    name: 'sha2-512',\n    code: 0x13,\n    encode: sha('SHA-512')\n});\n//# sourceMappingURL=sha2-browser.js.map","import { base32 } from './bases/base32.js';\nimport { base36 } from './bases/base36.js';\nimport { base58btc } from './bases/base58.js';\nimport { coerce } from './bytes.js';\nimport * as Digest from './hashes/digest.js';\nimport * as varint from './varint.js';\n// This way TS will also expose all the types from module\nexport * from './link/interface.js';\nexport function format(link, base) {\n    const { bytes, version } = link;\n    switch (version) {\n        case 0:\n            return toStringV0(bytes, baseCache(link), base ?? base58btc.encoder);\n        default:\n            return toStringV1(bytes, baseCache(link), (base ?? base32.encoder));\n    }\n}\nexport function toJSON(link) {\n    return {\n        '/': format(link)\n    };\n}\nexport function fromJSON(json) {\n    return CID.parse(json['/']);\n}\nconst cache = new WeakMap();\nfunction baseCache(cid) {\n    const baseCache = cache.get(cid);\n    if (baseCache == null) {\n        const baseCache = new Map();\n        cache.set(cid, baseCache);\n        return baseCache;\n    }\n    return baseCache;\n}\nexport class CID {\n    code;\n    version;\n    multihash;\n    bytes;\n    '/';\n    /**\n     * @param version - Version of the CID\n     * @param code - Code of the codec content is encoded in, see https://github.com/multiformats/multicodec/blob/master/table.csv\n     * @param multihash - (Multi)hash of the of the content.\n     */\n    constructor(version, code, multihash, bytes) {\n        this.code = code;\n        this.version = version;\n        this.multihash = multihash;\n        this.bytes = bytes;\n        // flag to serializers that this is a CID and\n        // should be treated specially\n        this['/'] = bytes;\n    }\n    /**\n     * Signalling `cid.asCID === cid` has been replaced with `cid['/'] === cid.bytes`\n     * please either use `CID.asCID(cid)` or switch to new signalling mechanism\n     *\n     * @deprecated\n     */\n    get asCID() {\n        return this;\n    }\n    // ArrayBufferView\n    get byteOffset() {\n        return this.bytes.byteOffset;\n    }\n    // ArrayBufferView\n    get byteLength() {\n        return this.bytes.byteLength;\n    }\n    toV0() {\n        switch (this.version) {\n            case 0: {\n                return this;\n            }\n            case 1: {\n                const { code, multihash } = this;\n                if (code !== DAG_PB_CODE) {\n                    throw new Error('Cannot convert a non dag-pb CID to CIDv0');\n                }\n                // sha2-256\n                if (multihash.code !== SHA_256_CODE) {\n                    throw new Error('Cannot convert non sha2-256 multihash CID to CIDv0');\n                }\n                return (CID.createV0(multihash));\n            }\n            default: {\n                throw Error(`Can not convert CID version ${this.version} to version 0. This is a bug please report`);\n            }\n        }\n    }\n    toV1() {\n        switch (this.version) {\n            case 0: {\n                const { code, digest } = this.multihash;\n                const multihash = Digest.create(code, digest);\n                return (CID.createV1(this.code, multihash));\n            }\n            case 1: {\n                return this;\n            }\n            default: {\n                throw Error(`Can not convert CID version ${this.version} to version 1. This is a bug please report`);\n            }\n        }\n    }\n    equals(other) {\n        return CID.equals(this, other);\n    }\n    static equals(self, other) {\n        const unknown = other;\n        return (unknown != null &&\n            self.code === unknown.code &&\n            self.version === unknown.version &&\n            Digest.equals(self.multihash, unknown.multihash));\n    }\n    toString(base) {\n        return format(this, base);\n    }\n    toJSON() {\n        return { '/': format(this) };\n    }\n    link() {\n        return this;\n    }\n    [Symbol.toStringTag] = 'CID';\n    // Legacy\n    [Symbol.for('nodejs.util.inspect.custom')]() {\n        return `CID(${this.toString()})`;\n    }\n    /**\n     * Takes any input `value` and returns a `CID` instance if it was\n     * a `CID` otherwise returns `null`. If `value` is instanceof `CID`\n     * it will return value back. If `value` is not instance of this CID\n     * class, but is compatible CID it will return new instance of this\n     * `CID` class. Otherwise returns null.\n     *\n     * This allows two different incompatible versions of CID library to\n     * co-exist and interop as long as binary interface is compatible.\n     */\n    static asCID(input) {\n        if (input == null) {\n            return null;\n        }\n        const value = input;\n        if (value instanceof CID) {\n            // If value is instance of CID then we're all set.\n            return value;\n        }\n        else if ((value['/'] != null && value['/'] === value.bytes) || value.asCID === value) {\n            // If value isn't instance of this CID class but `this.asCID === this` or\n            // `value['/'] === value.bytes` is true it is CID instance coming from a\n            // different implementation (diff version or duplicate). In that case we\n            // rebase it to this `CID` implementation so caller is guaranteed to get\n            // instance with expected API.\n            const { version, code, multihash, bytes } = value;\n            return new CID(version, code, multihash, bytes ?? encodeCID(version, code, multihash.bytes));\n        }\n        else if (value[cidSymbol] === true) {\n            // If value is a CID from older implementation that used to be tagged via\n            // symbol we still rebase it to the this `CID` implementation by\n            // delegating that to a constructor.\n            const { version, multihash, code } = value;\n            const digest = Digest.decode(multihash);\n            return CID.create(version, code, digest);\n        }\n        else {\n            // Otherwise value is not a CID (or an incompatible version of it) in\n            // which case we return `null`.\n            return null;\n        }\n    }\n    /**\n     * @param version - Version of the CID\n     * @param code - Code of the codec content is encoded in, see https://github.com/multiformats/multicodec/blob/master/table.csv\n     * @param digest - (Multi)hash of the of the content.\n     */\n    static create(version, code, digest) {\n        if (typeof code !== 'number') {\n            throw new Error('String codecs are no longer supported');\n        }\n        if (!(digest.bytes instanceof Uint8Array)) {\n            throw new Error('Invalid digest');\n        }\n        switch (version) {\n            case 0: {\n                if (code !== DAG_PB_CODE) {\n                    throw new Error(`Version 0 CID must use dag-pb (code: ${DAG_PB_CODE}) block encoding`);\n                }\n                else {\n                    return new CID(version, code, digest, digest.bytes);\n                }\n            }\n            case 1: {\n                const bytes = encodeCID(version, code, digest.bytes);\n                return new CID(version, code, digest, bytes);\n            }\n            default: {\n                throw new Error('Invalid version');\n            }\n        }\n    }\n    /**\n     * Simplified version of `create` for CIDv0.\n     */\n    static createV0(digest) {\n        return CID.create(0, DAG_PB_CODE, digest);\n    }\n    /**\n     * Simplified version of `create` for CIDv1.\n     *\n     * @param code - Content encoding format code.\n     * @param digest - Multihash of the content.\n     */\n    static createV1(code, digest) {\n        return CID.create(1, code, digest);\n    }\n    /**\n     * Decoded a CID from its binary representation. The byte array must contain\n     * only the CID with no additional bytes.\n     *\n     * An error will be thrown if the bytes provided do not contain a valid\n     * binary representation of a CID.\n     */\n    static decode(bytes) {\n        const [cid, remainder] = CID.decodeFirst(bytes);\n        if (remainder.length !== 0) {\n            throw new Error('Incorrect length');\n        }\n        return cid;\n    }\n    /**\n     * Decoded a CID from its binary representation at the beginning of a byte\n     * array.\n     *\n     * Returns an array with the first element containing the CID and the second\n     * element containing the remainder of the original byte array. The remainder\n     * will be a zero-length byte array if the provided bytes only contained a\n     * binary CID representation.\n     */\n    static decodeFirst(bytes) {\n        const specs = CID.inspectBytes(bytes);\n        const prefixSize = specs.size - specs.multihashSize;\n        const multihashBytes = coerce(bytes.subarray(prefixSize, prefixSize + specs.multihashSize));\n        if (multihashBytes.byteLength !== specs.multihashSize) {\n            throw new Error('Incorrect length');\n        }\n        const digestBytes = multihashBytes.subarray(specs.multihashSize - specs.digestSize);\n        const digest = new Digest.Digest(specs.multihashCode, specs.digestSize, digestBytes, multihashBytes);\n        const cid = specs.version === 0\n            ? CID.createV0(digest)\n            : CID.createV1(specs.codec, digest);\n        return [cid, bytes.subarray(specs.size)];\n    }\n    /**\n     * Inspect the initial bytes of a CID to determine its properties.\n     *\n     * Involves decoding up to 4 varints. Typically this will require only 4 to 6\n     * bytes but for larger multicodec code values and larger multihash digest\n     * lengths these varints can be quite large. It is recommended that at least\n     * 10 bytes be made available in the `initialBytes` argument for a complete\n     * inspection.\n     */\n    static inspectBytes(initialBytes) {\n        let offset = 0;\n        const next = () => {\n            const [i, length] = varint.decode(initialBytes.subarray(offset));\n            offset += length;\n            return i;\n        };\n        let version = next();\n        let codec = DAG_PB_CODE;\n        if (version === 18) {\n            // CIDv0\n            version = 0;\n            offset = 0;\n        }\n        else {\n            codec = next();\n        }\n        if (version !== 0 && version !== 1) {\n            throw new RangeError(`Invalid CID version ${version}`);\n        }\n        const prefixSize = offset;\n        const multihashCode = next(); // multihash code\n        const digestSize = next(); // multihash length\n        const size = offset + digestSize;\n        const multihashSize = size - prefixSize;\n        return { version, codec, multihashCode, digestSize, multihashSize, size };\n    }\n    /**\n     * Takes cid in a string representation and creates an instance. If `base`\n     * decoder is not provided will use a default from the configuration. It will\n     * throw an error if encoding of the CID is not compatible with supplied (or\n     * a default decoder).\n     */\n    static parse(source, base) {\n        const [prefix, bytes] = parseCIDtoBytes(source, base);\n        const cid = CID.decode(bytes);\n        if (cid.version === 0 && source[0] !== 'Q') {\n            throw Error('Version 0 CID string must not include multibase prefix');\n        }\n        // Cache string representation to avoid computing it on `this.toString()`\n        baseCache(cid).set(prefix, source);\n        return cid;\n    }\n}\nfunction parseCIDtoBytes(source, base) {\n    switch (source[0]) {\n        // CIDv0 is parsed differently\n        case 'Q': {\n            const decoder = base ?? base58btc;\n            return [\n                base58btc.prefix,\n                decoder.decode(`${base58btc.prefix}${source}`)\n            ];\n        }\n        case base58btc.prefix: {\n            const decoder = base ?? base58btc;\n            return [base58btc.prefix, decoder.decode(source)];\n        }\n        case base32.prefix: {\n            const decoder = base ?? base32;\n            return [base32.prefix, decoder.decode(source)];\n        }\n        case base36.prefix: {\n            const decoder = base ?? base36;\n            return [base36.prefix, decoder.decode(source)];\n        }\n        default: {\n            if (base == null) {\n                throw Error('To parse non base32, base36 or base58btc encoded CID multibase decoder must be provided');\n            }\n            return [source[0], base.decode(source)];\n        }\n    }\n}\nfunction toStringV0(bytes, cache, base) {\n    const { prefix } = base;\n    if (prefix !== base58btc.prefix) {\n        throw Error(`Cannot string encode V0 in ${base.name} encoding`);\n    }\n    const cid = cache.get(prefix);\n    if (cid == null) {\n        const cid = base.encode(bytes).slice(1);\n        cache.set(prefix, cid);\n        return cid;\n    }\n    else {\n        return cid;\n    }\n}\nfunction toStringV1(bytes, cache, base) {\n    const { prefix } = base;\n    const cid = cache.get(prefix);\n    if (cid == null) {\n        const cid = base.encode(bytes);\n        cache.set(prefix, cid);\n        return cid;\n    }\n    else {\n        return cid;\n    }\n}\nconst DAG_PB_CODE = 0x70;\nconst SHA_256_CODE = 0x12;\nfunction encodeCID(version, code, multihash) {\n    const codeOffset = varint.encodingLength(version);\n    const hashOffset = codeOffset + varint.encodingLength(code);\n    const bytes = new Uint8Array(hashOffset + multihash.byteLength);\n    varint.encodeTo(version, bytes, 0);\n    varint.encodeTo(code, bytes, codeOffset);\n    bytes.set(multihash, hashOffset);\n    return bytes;\n}\nconst cidSymbol = Symbol.for('@ipld/js-cid/CID');\n//# sourceMappingURL=cid.js.map","import * as base10 from './bases/base10.js';\nimport * as base16 from './bases/base16.js';\nimport * as base2 from './bases/base2.js';\nimport * as base256emoji from './bases/base256emoji.js';\nimport * as base32 from './bases/base32.js';\nimport * as base36 from './bases/base36.js';\nimport * as base58 from './bases/base58.js';\nimport * as base64 from './bases/base64.js';\nimport * as base8 from './bases/base8.js';\nimport * as identityBase from './bases/identity.js';\nimport * as json from './codecs/json.js';\nimport * as raw from './codecs/raw.js';\nimport * as identity from './hashes/identity.js';\nimport * as sha2 from './hashes/sha2.js';\nimport { CID, hasher, digest, varint, bytes } from './index.js';\nexport const bases = { ...identityBase, ...base2, ...base8, ...base10, ...base16, ...base32, ...base36, ...base58, ...base64, ...base256emoji };\nexport const hashes = { ...sha2, ...identity };\nexport const codecs = { raw, json };\nexport { CID, hasher, digest, varint, bytes };\n//# sourceMappingURL=basics.js.map","import { bases } from 'multiformats/basics';\nimport { allocUnsafe } from '#alloc';\nfunction createCodec(name, prefix, encode, decode) {\n    return {\n        name,\n        prefix,\n        encoder: {\n            name,\n            prefix,\n            encode\n        },\n        decoder: {\n            decode\n        }\n    };\n}\nconst string = createCodec('utf8', 'u', (buf) => {\n    const decoder = new TextDecoder('utf8');\n    return 'u' + decoder.decode(buf);\n}, (str) => {\n    const encoder = new TextEncoder();\n    return encoder.encode(str.substring(1));\n});\nconst ascii = createCodec('ascii', 'a', (buf) => {\n    let string = 'a';\n    for (let i = 0; i < buf.length; i++) {\n        string += String.fromCharCode(buf[i]);\n    }\n    return string;\n}, (str) => {\n    str = str.substring(1);\n    const buf = allocUnsafe(str.length);\n    for (let i = 0; i < str.length; i++) {\n        buf[i] = str.charCodeAt(i);\n    }\n    return buf;\n});\nconst BASES = {\n    utf8: string,\n    'utf-8': string,\n    hex: bases.base16,\n    latin1: ascii,\n    ascii,\n    binary: ascii,\n    ...bases\n};\nexport default BASES;\n//# sourceMappingURL=bases.js.map","import bases, {} from './util/bases.js';\n/**\n * Create a `Uint8Array` from the passed string\n *\n * Supports `utf8`, `utf-8`, `hex`, and any encoding supported by the multiformats module.\n *\n * Also `ascii` which is similar to node's 'binary' encoding.\n */\nexport function fromString(string, encoding = 'utf8') {\n    const base = bases[encoding];\n    if (base == null) {\n        throw new Error(`Unsupported encoding \"${encoding}\"`);\n    }\n    // add multibase prefix\n    return base.decoder.decode(`${base.prefix}${string}`); // eslint-disable-line @typescript-eslint/restrict-template-expressions\n}\n//# sourceMappingURL=from-string.js.map","import { encodeUint8Array, encodingLength } from 'uint8-varint';\nimport { allocUnsafe } from 'uint8arrays/alloc';\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string';\nimport { writeFloatLE, writeDoubleLE } from './float.js';\nimport { LongBits } from './longbits.js';\nimport pool from './pool.js';\nimport * as utf8 from './utf8.js';\n/**\n * Constructs a new writer operation instance.\n *\n * @classdesc Scheduled writer operation\n */\nclass Op {\n    /**\n     * Function to call\n     */\n    fn;\n    /**\n     * Value byte length\n     */\n    len;\n    /**\n     * Next operation\n     */\n    next;\n    /**\n     * Value to write\n     */\n    val;\n    constructor(fn, len, val) {\n        this.fn = fn;\n        this.len = len;\n        this.next = undefined;\n        this.val = val; // type varies\n    }\n}\n/* istanbul ignore next */\nfunction noop() { } // eslint-disable-line no-empty-function\n/**\n * Constructs a new writer state instance\n */\nclass State {\n    /**\n     * Current head\n     */\n    head;\n    /**\n     * Current tail\n     */\n    tail;\n    /**\n     * Current buffer length\n     */\n    len;\n    /**\n     * Next state\n     */\n    next;\n    constructor(writer) {\n        this.head = writer.head;\n        this.tail = writer.tail;\n        this.len = writer.len;\n        this.next = writer.states;\n    }\n}\nconst bufferPool = pool();\n/**\n * Allocates a buffer of the specified size\n */\nfunction alloc(size) {\n    if (globalThis.Buffer != null) {\n        return allocUnsafe(size);\n    }\n    return bufferPool(size);\n}\n/**\n * When a value is written, the writer calculates its byte length and puts it into a linked\n * list of operations to perform when finish() is called. This both allows us to allocate\n * buffers of the exact required size and reduces the amount of work we have to do compared\n * to first calculating over objects and then encoding over objects. In our case, the encoding\n * part is just a linked list walk calling operations with already prepared values.\n */\nclass Uint8ArrayWriter {\n    /**\n     * Current length\n     */\n    len;\n    /**\n     * Operations head\n     */\n    head;\n    /**\n     * Operations tail\n     */\n    tail;\n    /**\n     * Linked forked states\n     */\n    states;\n    constructor() {\n        this.len = 0;\n        this.head = new Op(noop, 0, 0);\n        this.tail = this.head;\n        this.states = null;\n    }\n    /**\n     * Pushes a new operation to the queue\n     */\n    _push(fn, len, val) {\n        this.tail = this.tail.next = new Op(fn, len, val);\n        this.len += len;\n        return this;\n    }\n    /**\n     * Writes an unsigned 32 bit value as a varint\n     */\n    uint32(value) {\n        // here, the call to this.push has been inlined and a varint specific Op subclass is used.\n        // uint32 is by far the most frequently used operation and benefits significantly from this.\n        this.len += (this.tail = this.tail.next = new VarintOp((value = value >>> 0) <\n            128\n            ? 1\n            : value < 16384\n                ? 2\n                : value < 2097152\n                    ? 3\n                    : value < 268435456\n                        ? 4\n                        : 5, value)).len;\n        return this;\n    }\n    /**\n     * Writes a signed 32 bit value as a varint`\n     */\n    int32(value) {\n        return value < 0\n            ? this._push(writeVarint64, 10, LongBits.fromNumber(value)) // 10 bytes per spec\n            : this.uint32(value);\n    }\n    /**\n     * Writes a 32 bit value as a varint, zig-zag encoded\n     */\n    sint32(value) {\n        return this.uint32((value << 1 ^ value >> 31) >>> 0);\n    }\n    /**\n     * Writes an unsigned 64 bit value as a varint\n     */\n    uint64(value) {\n        const bits = LongBits.fromBigInt(value);\n        return this._push(writeVarint64, bits.length(), bits);\n    }\n    /**\n     * Writes an unsigned 64 bit value as a varint\n     */\n    uint64Number(value) {\n        return this._push(encodeUint8Array, encodingLength(value), value);\n    }\n    /**\n     * Writes an unsigned 64 bit value as a varint\n     */\n    uint64String(value) {\n        return this.uint64(BigInt(value));\n    }\n    /**\n     * Writes a signed 64 bit value as a varint\n     */\n    int64(value) {\n        return this.uint64(value);\n    }\n    /**\n     * Writes a signed 64 bit value as a varint\n     */\n    int64Number(value) {\n        return this.uint64Number(value);\n    }\n    /**\n     * Writes a signed 64 bit value as a varint\n     */\n    int64String(value) {\n        return this.uint64String(value);\n    }\n    /**\n     * Writes a signed 64 bit value as a varint, zig-zag encoded\n     */\n    sint64(value) {\n        const bits = LongBits.fromBigInt(value).zzEncode();\n        return this._push(writeVarint64, bits.length(), bits);\n    }\n    /**\n     * Writes a signed 64 bit value as a varint, zig-zag encoded\n     */\n    sint64Number(value) {\n        const bits = LongBits.fromNumber(value).zzEncode();\n        return this._push(writeVarint64, bits.length(), bits);\n    }\n    /**\n     * Writes a signed 64 bit value as a varint, zig-zag encoded\n     */\n    sint64String(value) {\n        return this.sint64(BigInt(value));\n    }\n    /**\n     * Writes a boolish value as a varint\n     */\n    bool(value) {\n        return this._push(writeByte, 1, value ? 1 : 0);\n    }\n    /**\n     * Writes an unsigned 32 bit value as fixed 32 bits\n     */\n    fixed32(value) {\n        return this._push(writeFixed32, 4, value >>> 0);\n    }\n    /**\n     * Writes a signed 32 bit value as fixed 32 bits\n     */\n    sfixed32(value) {\n        return this.fixed32(value);\n    }\n    /**\n     * Writes an unsigned 64 bit value as fixed 64 bits\n     */\n    fixed64(value) {\n        const bits = LongBits.fromBigInt(value);\n        return this._push(writeFixed32, 4, bits.lo)._push(writeFixed32, 4, bits.hi);\n    }\n    /**\n     * Writes an unsigned 64 bit value as fixed 64 bits\n     */\n    fixed64Number(value) {\n        const bits = LongBits.fromNumber(value);\n        return this._push(writeFixed32, 4, bits.lo)._push(writeFixed32, 4, bits.hi);\n    }\n    /**\n     * Writes an unsigned 64 bit value as fixed 64 bits\n     */\n    fixed64String(value) {\n        return this.fixed64(BigInt(value));\n    }\n    /**\n     * Writes a signed 64 bit value as fixed 64 bits\n     */\n    sfixed64(value) {\n        return this.fixed64(value);\n    }\n    /**\n     * Writes a signed 64 bit value as fixed 64 bits\n     */\n    sfixed64Number(value) {\n        return this.fixed64Number(value);\n    }\n    /**\n     * Writes a signed 64 bit value as fixed 64 bits\n     */\n    sfixed64String(value) {\n        return this.fixed64String(value);\n    }\n    /**\n     * Writes a float (32 bit)\n     */\n    float(value) {\n        return this._push(writeFloatLE, 4, value);\n    }\n    /**\n     * Writes a double (64 bit float).\n     *\n     * @function\n     * @param {number} value - Value to write\n     * @returns {Writer} `this`\n     */\n    double(value) {\n        return this._push(writeDoubleLE, 8, value);\n    }\n    /**\n     * Writes a sequence of bytes\n     */\n    bytes(value) {\n        const len = value.length >>> 0;\n        if (len === 0) {\n            return this._push(writeByte, 1, 0);\n        }\n        return this.uint32(len)._push(writeBytes, len, value);\n    }\n    /**\n     * Writes a string\n     */\n    string(value) {\n        const len = utf8.length(value);\n        return len !== 0\n            ? this.uint32(len)._push(utf8.write, len, value)\n            : this._push(writeByte, 1, 0);\n    }\n    /**\n     * Forks this writer's state by pushing it to a stack.\n     * Calling {@link Writer#reset|reset} or {@link Writer#ldelim|ldelim} resets the writer to the previous state.\n     */\n    fork() {\n        this.states = new State(this);\n        this.head = this.tail = new Op(noop, 0, 0);\n        this.len = 0;\n        return this;\n    }\n    /**\n     * Resets this instance to the last state\n     */\n    reset() {\n        if (this.states != null) {\n            this.head = this.states.head;\n            this.tail = this.states.tail;\n            this.len = this.states.len;\n            this.states = this.states.next;\n        }\n        else {\n            this.head = this.tail = new Op(noop, 0, 0);\n            this.len = 0;\n        }\n        return this;\n    }\n    /**\n     * Resets to the last state and appends the fork state's current write length as a varint followed by its operations.\n     */\n    ldelim() {\n        const head = this.head;\n        const tail = this.tail;\n        const len = this.len;\n        this.reset().uint32(len);\n        if (len !== 0) {\n            this.tail.next = head.next; // skip noop\n            this.tail = tail;\n            this.len += len;\n        }\n        return this;\n    }\n    /**\n     * Finishes the write operation\n     */\n    finish() {\n        let head = this.head.next; // skip noop\n        const buf = alloc(this.len);\n        let pos = 0;\n        while (head != null) {\n            head.fn(head.val, buf, pos);\n            pos += head.len;\n            head = head.next;\n        }\n        // this.head = this.tail = null;\n        return buf;\n    }\n}\nfunction writeByte(val, buf, pos) {\n    buf[pos] = val & 255;\n}\nfunction writeVarint32(val, buf, pos) {\n    while (val > 127) {\n        buf[pos++] = val & 127 | 128;\n        val >>>= 7;\n    }\n    buf[pos] = val;\n}\n/**\n * Constructs a new varint writer operation instance.\n *\n * @classdesc Scheduled varint writer operation\n */\nclass VarintOp extends Op {\n    next;\n    constructor(len, val) {\n        super(writeVarint32, len, val);\n        this.next = undefined;\n    }\n}\nfunction writeVarint64(val, buf, pos) {\n    while (val.hi !== 0) {\n        buf[pos++] = val.lo & 127 | 128;\n        val.lo = (val.lo >>> 7 | val.hi << 25) >>> 0;\n        val.hi >>>= 7;\n    }\n    while (val.lo > 127) {\n        buf[pos++] = val.lo & 127 | 128;\n        val.lo = val.lo >>> 7;\n    }\n    buf[pos++] = val.lo;\n}\nfunction writeFixed32(val, buf, pos) {\n    buf[pos] = val & 255;\n    buf[pos + 1] = val >>> 8 & 255;\n    buf[pos + 2] = val >>> 16 & 255;\n    buf[pos + 3] = val >>> 24;\n}\nfunction writeBytes(val, buf, pos) {\n    buf.set(val, pos);\n}\nif (globalThis.Buffer != null) {\n    Uint8ArrayWriter.prototype.bytes = function (value) {\n        const len = value.length >>> 0;\n        this.uint32(len);\n        if (len > 0) {\n            this._push(writeBytesBuffer, len, value);\n        }\n        return this;\n    };\n    Uint8ArrayWriter.prototype.string = function (value) {\n        const len = globalThis.Buffer.byteLength(value);\n        this.uint32(len);\n        if (len > 0) {\n            this._push(writeStringBuffer, len, value);\n        }\n        return this;\n    };\n}\nfunction writeBytesBuffer(val, buf, pos) {\n    buf.set(val, pos); // faster than copy (requires node >= 4 where Buffers extend Uint8Array and set is properly inherited)\n    // also works for plain array values\n}\nfunction writeStringBuffer(val, buf, pos) {\n    if (val.length < 40) {\n        // plain js is faster for short strings (probably due to redundant assertions)\n        utf8.write(val, buf, pos);\n        // @ts-expect-error buf isn't a Uint8Array?\n    }\n    else if (buf.utf8Write != null) {\n        // @ts-expect-error buf isn't a Uint8Array?\n        buf.utf8Write(val, pos);\n    }\n    else {\n        buf.set(uint8ArrayFromString(val), pos);\n    }\n}\n/**\n * Creates a new writer\n */\nexport function createWriter() {\n    return new Uint8ArrayWriter();\n}\n//# sourceMappingURL=writer.js.map","import { allocUnsafe } from 'uint8arrays/alloc';\n/**\n * A general purpose buffer pool\n */\nexport default function pool(size) {\n    const SIZE = size ?? 8192;\n    const MAX = SIZE >>> 1;\n    let slab;\n    let offset = SIZE;\n    return function poolAlloc(size) {\n        if (size < 1 || size > MAX) {\n            return allocUnsafe(size);\n        }\n        if (offset + size > SIZE) {\n            slab = allocUnsafe(SIZE);\n            offset = 0;\n        }\n        const buf = slab.subarray(offset, offset += size);\n        if ((offset & 7) !== 0) {\n            // align to 32 bit\n            offset = (offset | 7) + 1;\n        }\n        return buf;\n    };\n}\n//# sourceMappingURL=pool.js.map","import { createWriter } from './utils/writer.js';\nexport function encodeMessage(message, codec) {\n    const w = createWriter();\n    codec.encode(message, w, {\n        lengthDelimited: false\n    });\n    return w.finish();\n}\n//# sourceMappingURL=encode.js.map","// https://developers.google.com/protocol-buffers/docs/encoding#structure\nexport var CODEC_TYPES;\n(function (CODEC_TYPES) {\n    CODEC_TYPES[CODEC_TYPES[\"VARINT\"] = 0] = \"VARINT\";\n    CODEC_TYPES[CODEC_TYPES[\"BIT64\"] = 1] = \"BIT64\";\n    CODEC_TYPES[CODEC_TYPES[\"LENGTH_DELIMITED\"] = 2] = \"LENGTH_DELIMITED\";\n    CODEC_TYPES[CODEC_TYPES[\"START_GROUP\"] = 3] = \"START_GROUP\";\n    CODEC_TYPES[CODEC_TYPES[\"END_GROUP\"] = 4] = \"END_GROUP\";\n    CODEC_TYPES[CODEC_TYPES[\"BIT32\"] = 5] = \"BIT32\";\n})(CODEC_TYPES || (CODEC_TYPES = {}));\nexport function createCodec(name, type, encode, decode) {\n    return {\n        name,\n        type,\n        encode,\n        decode\n    };\n}\n//# sourceMappingURL=codec.js.map","/* eslint-disable import/export */\n/* eslint-disable complexity */\n/* eslint-disable @typescript-eslint/no-namespace */\n/* eslint-disable @typescript-eslint/no-unnecessary-boolean-literal-compare */\n/* eslint-disable @typescript-eslint/no-empty-interface */\nimport { decodeMessage, encodeMessage, message } from 'protons-runtime';\nimport { alloc as uint8ArrayAlloc } from 'uint8arrays/alloc';\nexport var RateLimitProof;\n(function (RateLimitProof) {\n    let _codec;\n    RateLimitProof.codec = () => {\n        if (_codec == null) {\n            _codec = message((obj, w, opts = {}) => {\n                if (opts.lengthDelimited !== false) {\n                    w.fork();\n                }\n                if ((obj.proof != null && obj.proof.byteLength > 0)) {\n                    w.uint32(10);\n                    w.bytes(obj.proof);\n                }\n                if ((obj.merkleRoot != null && obj.merkleRoot.byteLength > 0)) {\n                    w.uint32(18);\n                    w.bytes(obj.merkleRoot);\n                }\n                if ((obj.epoch != null && obj.epoch.byteLength > 0)) {\n                    w.uint32(26);\n                    w.bytes(obj.epoch);\n                }\n                if ((obj.shareX != null && obj.shareX.byteLength > 0)) {\n                    w.uint32(34);\n                    w.bytes(obj.shareX);\n                }\n                if ((obj.shareY != null && obj.shareY.byteLength > 0)) {\n                    w.uint32(42);\n                    w.bytes(obj.shareY);\n                }\n                if ((obj.nullifier != null && obj.nullifier.byteLength > 0)) {\n                    w.uint32(50);\n                    w.bytes(obj.nullifier);\n                }\n                if ((obj.rlnIdentifier != null && obj.rlnIdentifier.byteLength > 0)) {\n                    w.uint32(58);\n                    w.bytes(obj.rlnIdentifier);\n                }\n                if (opts.lengthDelimited !== false) {\n                    w.ldelim();\n                }\n            }, (reader, length, opts = {}) => {\n                const obj = {\n                    proof: uint8ArrayAlloc(0),\n                    merkleRoot: uint8ArrayAlloc(0),\n                    epoch: uint8ArrayAlloc(0),\n                    shareX: uint8ArrayAlloc(0),\n                    shareY: uint8ArrayAlloc(0),\n                    nullifier: uint8ArrayAlloc(0),\n                    rlnIdentifier: uint8ArrayAlloc(0)\n                };\n                const end = length == null ? reader.len : reader.pos + length;\n                while (reader.pos < end) {\n                    const tag = reader.uint32();\n                    switch (tag >>> 3) {\n                        case 1: {\n                            obj.proof = reader.bytes();\n                            break;\n                        }\n                        case 2: {\n                            obj.merkleRoot = reader.bytes();\n                            break;\n                        }\n                        case 3: {\n                            obj.epoch = reader.bytes();\n                            break;\n                        }\n                        case 4: {\n                            obj.shareX = reader.bytes();\n                            break;\n                        }\n                        case 5: {\n                            obj.shareY = reader.bytes();\n                            break;\n                        }\n                        case 6: {\n                            obj.nullifier = reader.bytes();\n                            break;\n                        }\n                        case 7: {\n                            obj.rlnIdentifier = reader.bytes();\n                            break;\n                        }\n                        default: {\n                            reader.skipType(tag & 7);\n                            break;\n                        }\n                    }\n                }\n                return obj;\n            });\n        }\n        return _codec;\n    };\n    RateLimitProof.encode = (obj) => {\n        return encodeMessage(obj, RateLimitProof.codec());\n    };\n    RateLimitProof.decode = (buf, opts) => {\n        return decodeMessage(buf, RateLimitProof.codec(), opts);\n    };\n})(RateLimitProof || (RateLimitProof = {}));\nexport var WakuMessage;\n(function (WakuMessage) {\n    let _codec;\n    WakuMessage.codec = () => {\n        if (_codec == null) {\n            _codec = message((obj, w, opts = {}) => {\n                if (opts.lengthDelimited !== false) {\n                    w.fork();\n                }\n                if ((obj.payload != null && obj.payload.byteLength > 0)) {\n                    w.uint32(10);\n                    w.bytes(obj.payload);\n                }\n                if ((obj.contentTopic != null && obj.contentTopic !== '')) {\n                    w.uint32(18);\n                    w.string(obj.contentTopic);\n                }\n                if (obj.version != null) {\n                    w.uint32(24);\n                    w.uint32(obj.version);\n                }\n                if (obj.timestamp != null) {\n                    w.uint32(80);\n                    w.sint64(obj.timestamp);\n                }\n                if (obj.meta != null) {\n                    w.uint32(90);\n                    w.bytes(obj.meta);\n                }\n                if (obj.rateLimitProof != null) {\n                    w.uint32(170);\n                    RateLimitProof.codec().encode(obj.rateLimitProof, w);\n                }\n                if (obj.ephemeral != null) {\n                    w.uint32(248);\n                    w.bool(obj.ephemeral);\n                }\n                if (opts.lengthDelimited !== false) {\n                    w.ldelim();\n                }\n            }, (reader, length, opts = {}) => {\n                const obj = {\n                    payload: uint8ArrayAlloc(0),\n                    contentTopic: ''\n                };\n                const end = length == null ? reader.len : reader.pos + length;\n                while (reader.pos < end) {\n                    const tag = reader.uint32();\n                    switch (tag >>> 3) {\n                        case 1: {\n                            obj.payload = reader.bytes();\n                            break;\n                        }\n                        case 2: {\n                            obj.contentTopic = reader.string();\n                            break;\n                        }\n                        case 3: {\n                            obj.version = reader.uint32();\n                            break;\n                        }\n                        case 10: {\n                            obj.timestamp = reader.sint64();\n                            break;\n                        }\n                        case 11: {\n                            obj.meta = reader.bytes();\n                            break;\n                        }\n                        case 21: {\n                            obj.rateLimitProof = RateLimitProof.codec().decode(reader, reader.uint32(), {\n                                limits: opts.limits?.rateLimitProof\n                            });\n                            break;\n                        }\n                        case 31: {\n                            obj.ephemeral = reader.bool();\n                            break;\n                        }\n                        default: {\n                            reader.skipType(tag & 7);\n                            break;\n                        }\n                    }\n                }\n                return obj;\n            });\n        }\n        return _codec;\n    };\n    WakuMessage.encode = (obj) => {\n        return encodeMessage(obj, WakuMessage.codec());\n    };\n    WakuMessage.decode = (buf, opts) => {\n        return decodeMessage(buf, WakuMessage.codec(), opts);\n    };\n})(WakuMessage || (WakuMessage = {}));\n//# sourceMappingURL=message.js.map","/* eslint-disable import/export */\n/* eslint-disable complexity */\n/* eslint-disable @typescript-eslint/no-namespace */\n/* eslint-disable @typescript-eslint/no-unnecessary-boolean-literal-compare */\n/* eslint-disable @typescript-eslint/no-empty-interface */\nimport { decodeMessage, encodeMessage, MaxLengthError, message } from 'protons-runtime';\nimport { alloc as uint8ArrayAlloc } from 'uint8arrays/alloc';\nexport var FilterRequest;\n(function (FilterRequest) {\n    let ContentFilter;\n    (function (ContentFilter) {\n        let _codec;\n        ContentFilter.codec = () => {\n            if (_codec == null) {\n                _codec = message((obj, w, opts = {}) => {\n                    if (opts.lengthDelimited !== false) {\n                        w.fork();\n                    }\n                    if ((obj.contentTopic != null && obj.contentTopic !== '')) {\n                        w.uint32(10);\n                        w.string(obj.contentTopic);\n                    }\n                    if (opts.lengthDelimited !== false) {\n                        w.ldelim();\n                    }\n                }, (reader, length, opts = {}) => {\n                    const obj = {\n                        contentTopic: ''\n                    };\n                    const end = length == null ? reader.len : reader.pos + length;\n                    while (reader.pos < end) {\n                        const tag = reader.uint32();\n                        switch (tag >>> 3) {\n                            case 1: {\n                                obj.contentTopic = reader.string();\n                                break;\n                            }\n                            default: {\n                                reader.skipType(tag & 7);\n                                break;\n                            }\n                        }\n                    }\n                    return obj;\n                });\n            }\n            return _codec;\n        };\n        ContentFilter.encode = (obj) => {\n            return encodeMessage(obj, ContentFilter.codec());\n        };\n        ContentFilter.decode = (buf, opts) => {\n            return decodeMessage(buf, ContentFilter.codec(), opts);\n        };\n    })(ContentFilter = FilterRequest.ContentFilter || (FilterRequest.ContentFilter = {}));\n    let _codec;\n    FilterRequest.codec = () => {\n        if (_codec == null) {\n            _codec = message((obj, w, opts = {}) => {\n                if (opts.lengthDelimited !== false) {\n                    w.fork();\n                }\n                if ((obj.subscribe != null && obj.subscribe !== false)) {\n                    w.uint32(8);\n                    w.bool(obj.subscribe);\n                }\n                if ((obj.topic != null && obj.topic !== '')) {\n                    w.uint32(18);\n                    w.string(obj.topic);\n                }\n                if (obj.contentFilters != null) {\n                    for (const value of obj.contentFilters) {\n                        w.uint32(26);\n                        FilterRequest.ContentFilter.codec().encode(value, w);\n                    }\n                }\n                if (opts.lengthDelimited !== false) {\n                    w.ldelim();\n                }\n            }, (reader, length, opts = {}) => {\n                const obj = {\n                    subscribe: false,\n                    topic: '',\n                    contentFilters: []\n                };\n                const end = length == null ? reader.len : reader.pos + length;\n                while (reader.pos < end) {\n                    const tag = reader.uint32();\n                    switch (tag >>> 3) {\n                        case 1: {\n                            obj.subscribe = reader.bool();\n                            break;\n                        }\n                        case 2: {\n                            obj.topic = reader.string();\n                            break;\n                        }\n                        case 3: {\n                            if (opts.limits?.contentFilters != null && obj.contentFilters.length === opts.limits.contentFilters) {\n                                throw new MaxLengthError('Decode error - map field \"contentFilters\" had too many elements');\n                            }\n                            obj.contentFilters.push(FilterRequest.ContentFilter.codec().decode(reader, reader.uint32(), {\n                                limits: opts.limits?.contentFilters$\n                            }));\n                            break;\n                        }\n                        default: {\n                            reader.skipType(tag & 7);\n                            break;\n                        }\n                    }\n                }\n                return obj;\n            });\n        }\n        return _codec;\n    };\n    FilterRequest.encode = (obj) => {\n        return encodeMessage(obj, FilterRequest.codec());\n    };\n    FilterRequest.decode = (buf, opts) => {\n        return decodeMessage(buf, FilterRequest.codec(), opts);\n    };\n})(FilterRequest || (FilterRequest = {}));\nexport var MessagePush;\n(function (MessagePush) {\n    let _codec;\n    MessagePush.codec = () => {\n        if (_codec == null) {\n            _codec = message((obj, w, opts = {}) => {\n                if (opts.lengthDelimited !== false) {\n                    w.fork();\n                }\n                if (obj.messages != null) {\n                    for (const value of obj.messages) {\n                        w.uint32(10);\n                        WakuMessage.codec().encode(value, w);\n                    }\n                }\n                if (opts.lengthDelimited !== false) {\n                    w.ldelim();\n                }\n            }, (reader, length, opts = {}) => {\n                const obj = {\n                    messages: []\n                };\n                const end = length == null ? reader.len : reader.pos + length;\n                while (reader.pos < end) {\n                    const tag = reader.uint32();\n                    switch (tag >>> 3) {\n                        case 1: {\n                            if (opts.limits?.messages != null && obj.messages.length === opts.limits.messages) {\n                                throw new MaxLengthError('Decode error - map field \"messages\" had too many elements');\n                            }\n                            obj.messages.push(WakuMessage.codec().decode(reader, reader.uint32(), {\n                                limits: opts.limits?.messages$\n                            }));\n                            break;\n                        }\n                        default: {\n                            reader.skipType(tag & 7);\n                            break;\n                        }\n                    }\n                }\n                return obj;\n            });\n        }\n        return _codec;\n    };\n    MessagePush.encode = (obj) => {\n        return encodeMessage(obj, MessagePush.codec());\n    };\n    MessagePush.decode = (buf, opts) => {\n        return decodeMessage(buf, MessagePush.codec(), opts);\n    };\n})(MessagePush || (MessagePush = {}));\nexport var FilterRpc;\n(function (FilterRpc) {\n    let _codec;\n    FilterRpc.codec = () => {\n        if (_codec == null) {\n            _codec = message((obj, w, opts = {}) => {\n                if (opts.lengthDelimited !== false) {\n                    w.fork();\n                }\n                if ((obj.requestId != null && obj.requestId !== '')) {\n                    w.uint32(10);\n                    w.string(obj.requestId);\n                }\n                if (obj.request != null) {\n                    w.uint32(18);\n                    FilterRequest.codec().encode(obj.request, w);\n                }\n                if (obj.push != null) {\n                    w.uint32(26);\n                    MessagePush.codec().encode(obj.push, w);\n                }\n                if (opts.lengthDelimited !== false) {\n                    w.ldelim();\n                }\n            }, (reader, length, opts = {}) => {\n                const obj = {\n                    requestId: ''\n                };\n                const end = length == null ? reader.len : reader.pos + length;\n                while (reader.pos < end) {\n                    const tag = reader.uint32();\n                    switch (tag >>> 3) {\n                        case 1: {\n                            obj.requestId = reader.string();\n                            break;\n                        }\n                        case 2: {\n                            obj.request = FilterRequest.codec().decode(reader, reader.uint32(), {\n                                limits: opts.limits?.request\n                            });\n                            break;\n                        }\n                        case 3: {\n                            obj.push = MessagePush.codec().decode(reader, reader.uint32(), {\n                                limits: opts.limits?.push\n                            });\n                            break;\n                        }\n                        default: {\n                            reader.skipType(tag & 7);\n                            break;\n                        }\n                    }\n                }\n                return obj;\n            });\n        }\n        return _codec;\n    };\n    FilterRpc.encode = (obj) => {\n        return encodeMessage(obj, FilterRpc.codec());\n    };\n    FilterRpc.decode = (buf, opts) => {\n        return decodeMessage(buf, FilterRpc.codec(), opts);\n    };\n})(FilterRpc || (FilterRpc = {}));\nexport var RateLimitProof;\n(function (RateLimitProof) {\n    let _codec;\n    RateLimitProof.codec = () => {\n        if (_codec == null) {\n            _codec = message((obj, w, opts = {}) => {\n                if (opts.lengthDelimited !== false) {\n                    w.fork();\n                }\n                if ((obj.proof != null && obj.proof.byteLength > 0)) {\n                    w.uint32(10);\n                    w.bytes(obj.proof);\n                }\n                if ((obj.merkleRoot != null && obj.merkleRoot.byteLength > 0)) {\n                    w.uint32(18);\n                    w.bytes(obj.merkleRoot);\n                }\n                if ((obj.epoch != null && obj.epoch.byteLength > 0)) {\n                    w.uint32(26);\n                    w.bytes(obj.epoch);\n                }\n                if ((obj.shareX != null && obj.shareX.byteLength > 0)) {\n                    w.uint32(34);\n                    w.bytes(obj.shareX);\n                }\n                if ((obj.shareY != null && obj.shareY.byteLength > 0)) {\n                    w.uint32(42);\n                    w.bytes(obj.shareY);\n                }\n                if ((obj.nullifier != null && obj.nullifier.byteLength > 0)) {\n                    w.uint32(50);\n                    w.bytes(obj.nullifier);\n                }\n                if ((obj.rlnIdentifier != null && obj.rlnIdentifier.byteLength > 0)) {\n                    w.uint32(58);\n                    w.bytes(obj.rlnIdentifier);\n                }\n                if (opts.lengthDelimited !== false) {\n                    w.ldelim();\n                }\n            }, (reader, length, opts = {}) => {\n                const obj = {\n                    proof: uint8ArrayAlloc(0),\n                    merkleRoot: uint8ArrayAlloc(0),\n                    epoch: uint8ArrayAlloc(0),\n                    shareX: uint8ArrayAlloc(0),\n                    shareY: uint8ArrayAlloc(0),\n                    nullifier: uint8ArrayAlloc(0),\n                    rlnIdentifier: uint8ArrayAlloc(0)\n                };\n                const end = length == null ? reader.len : reader.pos + length;\n                while (reader.pos < end) {\n                    const tag = reader.uint32();\n                    switch (tag >>> 3) {\n                        case 1: {\n                            obj.proof = reader.bytes();\n                            break;\n                        }\n                        case 2: {\n                            obj.merkleRoot = reader.bytes();\n                            break;\n                        }\n                        case 3: {\n                            obj.epoch = reader.bytes();\n                            break;\n                        }\n                        case 4: {\n                            obj.shareX = reader.bytes();\n                            break;\n                        }\n                        case 5: {\n                            obj.shareY = reader.bytes();\n                            break;\n                        }\n                        case 6: {\n                            obj.nullifier = reader.bytes();\n                            break;\n                        }\n                        case 7: {\n                            obj.rlnIdentifier = reader.bytes();\n                            break;\n                        }\n                        default: {\n                            reader.skipType(tag & 7);\n                            break;\n                        }\n                    }\n                }\n                return obj;\n            });\n        }\n        return _codec;\n    };\n    RateLimitProof.encode = (obj) => {\n        return encodeMessage(obj, RateLimitProof.codec());\n    };\n    RateLimitProof.decode = (buf, opts) => {\n        return decodeMessage(buf, RateLimitProof.codec(), opts);\n    };\n})(RateLimitProof || (RateLimitProof = {}));\nexport var WakuMessage;\n(function (WakuMessage) {\n    let _codec;\n    WakuMessage.codec = () => {\n        if (_codec == null) {\n            _codec = message((obj, w, opts = {}) => {\n                if (opts.lengthDelimited !== false) {\n                    w.fork();\n                }\n                if ((obj.payload != null && obj.payload.byteLength > 0)) {\n                    w.uint32(10);\n                    w.bytes(obj.payload);\n                }\n                if ((obj.contentTopic != null && obj.contentTopic !== '')) {\n                    w.uint32(18);\n                    w.string(obj.contentTopic);\n                }\n                if (obj.version != null) {\n                    w.uint32(24);\n                    w.uint32(obj.version);\n                }\n                if (obj.timestamp != null) {\n                    w.uint32(80);\n                    w.sint64(obj.timestamp);\n                }\n                if (obj.meta != null) {\n                    w.uint32(90);\n                    w.bytes(obj.meta);\n                }\n                if (obj.rateLimitProof != null) {\n                    w.uint32(170);\n                    RateLimitProof.codec().encode(obj.rateLimitProof, w);\n                }\n                if (obj.ephemeral != null) {\n                    w.uint32(248);\n                    w.bool(obj.ephemeral);\n                }\n                if (opts.lengthDelimited !== false) {\n                    w.ldelim();\n                }\n            }, (reader, length, opts = {}) => {\n                const obj = {\n                    payload: uint8ArrayAlloc(0),\n                    contentTopic: ''\n                };\n                const end = length == null ? reader.len : reader.pos + length;\n                while (reader.pos < end) {\n                    const tag = reader.uint32();\n                    switch (tag >>> 3) {\n                        case 1: {\n                            obj.payload = reader.bytes();\n                            break;\n                        }\n                        case 2: {\n                            obj.contentTopic = reader.string();\n                            break;\n                        }\n                        case 3: {\n                            obj.version = reader.uint32();\n                            break;\n                        }\n                        case 10: {\n                            obj.timestamp = reader.sint64();\n                            break;\n                        }\n                        case 11: {\n                            obj.meta = reader.bytes();\n                            break;\n                        }\n                        case 21: {\n                            obj.rateLimitProof = RateLimitProof.codec().decode(reader, reader.uint32(), {\n                                limits: opts.limits?.rateLimitProof\n                            });\n                            break;\n                        }\n                        case 31: {\n                            obj.ephemeral = reader.bool();\n                            break;\n                        }\n                        default: {\n                            reader.skipType(tag & 7);\n                            break;\n                        }\n                    }\n                }\n                return obj;\n            });\n        }\n        return _codec;\n    };\n    WakuMessage.encode = (obj) => {\n        return encodeMessage(obj, WakuMessage.codec());\n    };\n    WakuMessage.decode = (buf, opts) => {\n        return decodeMessage(buf, WakuMessage.codec(), opts);\n    };\n})(WakuMessage || (WakuMessage = {}));\n//# sourceMappingURL=filter.js.map","/* eslint-disable import/export */\n/* eslint-disable complexity */\n/* eslint-disable @typescript-eslint/no-namespace */\n/* eslint-disable @typescript-eslint/no-unnecessary-boolean-literal-compare */\n/* eslint-disable @typescript-eslint/no-empty-interface */\nimport { decodeMessage, encodeMessage, message } from 'protons-runtime';\nexport var TopicOnlyMessage;\n(function (TopicOnlyMessage) {\n    let _codec;\n    TopicOnlyMessage.codec = () => {\n        if (_codec == null) {\n            _codec = message((obj, w, opts = {}) => {\n                if (opts.lengthDelimited !== false) {\n                    w.fork();\n                }\n                if ((obj.contentTopic != null && obj.contentTopic !== '')) {\n                    w.uint32(18);\n                    w.string(obj.contentTopic);\n                }\n                if (opts.lengthDelimited !== false) {\n                    w.ldelim();\n                }\n            }, (reader, length, opts = {}) => {\n                const obj = {\n                    contentTopic: ''\n                };\n                const end = length == null ? reader.len : reader.pos + length;\n                while (reader.pos < end) {\n                    const tag = reader.uint32();\n                    switch (tag >>> 3) {\n                        case 2: {\n                            obj.contentTopic = reader.string();\n                            break;\n                        }\n                        default: {\n                            reader.skipType(tag & 7);\n                            break;\n                        }\n                    }\n                }\n                return obj;\n            });\n        }\n        return _codec;\n    };\n    TopicOnlyMessage.encode = (obj) => {\n        return encodeMessage(obj, TopicOnlyMessage.codec());\n    };\n    TopicOnlyMessage.decode = (buf, opts) => {\n        return decodeMessage(buf, TopicOnlyMessage.codec(), opts);\n    };\n})(TopicOnlyMessage || (TopicOnlyMessage = {}));\n//# sourceMappingURL=topic_only_message.js.map","/* eslint-disable import/export */\n/* eslint-disable complexity */\n/* eslint-disable @typescript-eslint/no-namespace */\n/* eslint-disable @typescript-eslint/no-unnecessary-boolean-literal-compare */\n/* eslint-disable @typescript-eslint/no-empty-interface */\nimport { decodeMessage, encodeMessage, enumeration, MaxLengthError, message } from 'protons-runtime';\nimport { alloc as uint8ArrayAlloc } from 'uint8arrays/alloc';\nexport var FilterSubscribeRequest;\n(function (FilterSubscribeRequest) {\n    let FilterSubscribeType;\n    (function (FilterSubscribeType) {\n        FilterSubscribeType[\"SUBSCRIBER_PING\"] = \"SUBSCRIBER_PING\";\n        FilterSubscribeType[\"SUBSCRIBE\"] = \"SUBSCRIBE\";\n        FilterSubscribeType[\"UNSUBSCRIBE\"] = \"UNSUBSCRIBE\";\n        FilterSubscribeType[\"UNSUBSCRIBE_ALL\"] = \"UNSUBSCRIBE_ALL\";\n    })(FilterSubscribeType = FilterSubscribeRequest.FilterSubscribeType || (FilterSubscribeRequest.FilterSubscribeType = {}));\n    let __FilterSubscribeTypeValues;\n    (function (__FilterSubscribeTypeValues) {\n        __FilterSubscribeTypeValues[__FilterSubscribeTypeValues[\"SUBSCRIBER_PING\"] = 0] = \"SUBSCRIBER_PING\";\n        __FilterSubscribeTypeValues[__FilterSubscribeTypeValues[\"SUBSCRIBE\"] = 1] = \"SUBSCRIBE\";\n        __FilterSubscribeTypeValues[__FilterSubscribeTypeValues[\"UNSUBSCRIBE\"] = 2] = \"UNSUBSCRIBE\";\n        __FilterSubscribeTypeValues[__FilterSubscribeTypeValues[\"UNSUBSCRIBE_ALL\"] = 3] = \"UNSUBSCRIBE_ALL\";\n    })(__FilterSubscribeTypeValues || (__FilterSubscribeTypeValues = {}));\n    (function (FilterSubscribeType) {\n        FilterSubscribeType.codec = () => {\n            return enumeration(__FilterSubscribeTypeValues);\n        };\n    })(FilterSubscribeType = FilterSubscribeRequest.FilterSubscribeType || (FilterSubscribeRequest.FilterSubscribeType = {}));\n    let _codec;\n    FilterSubscribeRequest.codec = () => {\n        if (_codec == null) {\n            _codec = message((obj, w, opts = {}) => {\n                if (opts.lengthDelimited !== false) {\n                    w.fork();\n                }\n                if ((obj.requestId != null && obj.requestId !== '')) {\n                    w.uint32(10);\n                    w.string(obj.requestId);\n                }\n                if (obj.filterSubscribeType != null && __FilterSubscribeTypeValues[obj.filterSubscribeType] !== 0) {\n                    w.uint32(16);\n                    FilterSubscribeRequest.FilterSubscribeType.codec().encode(obj.filterSubscribeType, w);\n                }\n                if (obj.pubsubTopic != null) {\n                    w.uint32(82);\n                    w.string(obj.pubsubTopic);\n                }\n                if (obj.contentTopics != null) {\n                    for (const value of obj.contentTopics) {\n                        w.uint32(90);\n                        w.string(value);\n                    }\n                }\n                if (opts.lengthDelimited !== false) {\n                    w.ldelim();\n                }\n            }, (reader, length, opts = {}) => {\n                const obj = {\n                    requestId: '',\n                    filterSubscribeType: FilterSubscribeType.SUBSCRIBER_PING,\n                    contentTopics: []\n                };\n                const end = length == null ? reader.len : reader.pos + length;\n                while (reader.pos < end) {\n                    const tag = reader.uint32();\n                    switch (tag >>> 3) {\n                        case 1: {\n                            obj.requestId = reader.string();\n                            break;\n                        }\n                        case 2: {\n                            obj.filterSubscribeType = FilterSubscribeRequest.FilterSubscribeType.codec().decode(reader);\n                            break;\n                        }\n                        case 10: {\n                            obj.pubsubTopic = reader.string();\n                            break;\n                        }\n                        case 11: {\n                            if (opts.limits?.contentTopics != null && obj.contentTopics.length === opts.limits.contentTopics) {\n                                throw new MaxLengthError('Decode error - map field \"contentTopics\" had too many elements');\n                            }\n                            obj.contentTopics.push(reader.string());\n                            break;\n                        }\n                        default: {\n                            reader.skipType(tag & 7);\n                            break;\n                        }\n                    }\n                }\n                return obj;\n            });\n        }\n        return _codec;\n    };\n    FilterSubscribeRequest.encode = (obj) => {\n        return encodeMessage(obj, FilterSubscribeRequest.codec());\n    };\n    FilterSubscribeRequest.decode = (buf, opts) => {\n        return decodeMessage(buf, FilterSubscribeRequest.codec(), opts);\n    };\n})(FilterSubscribeRequest || (FilterSubscribeRequest = {}));\nexport var FilterSubscribeResponse;\n(function (FilterSubscribeResponse) {\n    let _codec;\n    FilterSubscribeResponse.codec = () => {\n        if (_codec == null) {\n            _codec = message((obj, w, opts = {}) => {\n                if (opts.lengthDelimited !== false) {\n                    w.fork();\n                }\n                if ((obj.requestId != null && obj.requestId !== '')) {\n                    w.uint32(10);\n                    w.string(obj.requestId);\n                }\n                if ((obj.statusCode != null && obj.statusCode !== 0)) {\n                    w.uint32(80);\n                    w.uint32(obj.statusCode);\n                }\n                if (obj.statusDesc != null) {\n                    w.uint32(90);\n                    w.string(obj.statusDesc);\n                }\n                if (opts.lengthDelimited !== false) {\n                    w.ldelim();\n                }\n            }, (reader, length, opts = {}) => {\n                const obj = {\n                    requestId: '',\n                    statusCode: 0\n                };\n                const end = length == null ? reader.len : reader.pos + length;\n                while (reader.pos < end) {\n                    const tag = reader.uint32();\n                    switch (tag >>> 3) {\n                        case 1: {\n                            obj.requestId = reader.string();\n                            break;\n                        }\n                        case 10: {\n                            obj.statusCode = reader.uint32();\n                            break;\n                        }\n                        case 11: {\n                            obj.statusDesc = reader.string();\n                            break;\n                        }\n                        default: {\n                            reader.skipType(tag & 7);\n                            break;\n                        }\n                    }\n                }\n                return obj;\n            });\n        }\n        return _codec;\n    };\n    FilterSubscribeResponse.encode = (obj) => {\n        return encodeMessage(obj, FilterSubscribeResponse.codec());\n    };\n    FilterSubscribeResponse.decode = (buf, opts) => {\n        return decodeMessage(buf, FilterSubscribeResponse.codec(), opts);\n    };\n})(FilterSubscribeResponse || (FilterSubscribeResponse = {}));\nexport var MessagePush;\n(function (MessagePush) {\n    let _codec;\n    MessagePush.codec = () => {\n        if (_codec == null) {\n            _codec = message((obj, w, opts = {}) => {\n                if (opts.lengthDelimited !== false) {\n                    w.fork();\n                }\n                if (obj.wakuMessage != null) {\n                    w.uint32(10);\n                    WakuMessage.codec().encode(obj.wakuMessage, w);\n                }\n                if (obj.pubsubTopic != null) {\n                    w.uint32(18);\n                    w.string(obj.pubsubTopic);\n                }\n                if (opts.lengthDelimited !== false) {\n                    w.ldelim();\n                }\n            }, (reader, length, opts = {}) => {\n                const obj = {};\n                const end = length == null ? reader.len : reader.pos + length;\n                while (reader.pos < end) {\n                    const tag = reader.uint32();\n                    switch (tag >>> 3) {\n                        case 1: {\n                            obj.wakuMessage = WakuMessage.codec().decode(reader, reader.uint32(), {\n                                limits: opts.limits?.wakuMessage\n                            });\n                            break;\n                        }\n                        case 2: {\n                            obj.pubsubTopic = reader.string();\n                            break;\n                        }\n                        default: {\n                            reader.skipType(tag & 7);\n                            break;\n                        }\n                    }\n                }\n                return obj;\n            });\n        }\n        return _codec;\n    };\n    MessagePush.encode = (obj) => {\n        return encodeMessage(obj, MessagePush.codec());\n    };\n    MessagePush.decode = (buf, opts) => {\n        return decodeMessage(buf, MessagePush.codec(), opts);\n    };\n})(MessagePush || (MessagePush = {}));\nexport var RateLimitProof;\n(function (RateLimitProof) {\n    let _codec;\n    RateLimitProof.codec = () => {\n        if (_codec == null) {\n            _codec = message((obj, w, opts = {}) => {\n                if (opts.lengthDelimited !== false) {\n                    w.fork();\n                }\n                if ((obj.proof != null && obj.proof.byteLength > 0)) {\n                    w.uint32(10);\n                    w.bytes(obj.proof);\n                }\n                if ((obj.merkleRoot != null && obj.merkleRoot.byteLength > 0)) {\n                    w.uint32(18);\n                    w.bytes(obj.merkleRoot);\n                }\n                if ((obj.epoch != null && obj.epoch.byteLength > 0)) {\n                    w.uint32(26);\n                    w.bytes(obj.epoch);\n                }\n                if ((obj.shareX != null && obj.shareX.byteLength > 0)) {\n                    w.uint32(34);\n                    w.bytes(obj.shareX);\n                }\n                if ((obj.shareY != null && obj.shareY.byteLength > 0)) {\n                    w.uint32(42);\n                    w.bytes(obj.shareY);\n                }\n                if ((obj.nullifier != null && obj.nullifier.byteLength > 0)) {\n                    w.uint32(50);\n                    w.bytes(obj.nullifier);\n                }\n                if ((obj.rlnIdentifier != null && obj.rlnIdentifier.byteLength > 0)) {\n                    w.uint32(58);\n                    w.bytes(obj.rlnIdentifier);\n                }\n                if (opts.lengthDelimited !== false) {\n                    w.ldelim();\n                }\n            }, (reader, length, opts = {}) => {\n                const obj = {\n                    proof: uint8ArrayAlloc(0),\n                    merkleRoot: uint8ArrayAlloc(0),\n                    epoch: uint8ArrayAlloc(0),\n                    shareX: uint8ArrayAlloc(0),\n                    shareY: uint8ArrayAlloc(0),\n                    nullifier: uint8ArrayAlloc(0),\n                    rlnIdentifier: uint8ArrayAlloc(0)\n                };\n                const end = length == null ? reader.len : reader.pos + length;\n                while (reader.pos < end) {\n                    const tag = reader.uint32();\n                    switch (tag >>> 3) {\n                        case 1: {\n                            obj.proof = reader.bytes();\n                            break;\n                        }\n                        case 2: {\n                            obj.merkleRoot = reader.bytes();\n                            break;\n                        }\n                        case 3: {\n                            obj.epoch = reader.bytes();\n                            break;\n                        }\n                        case 4: {\n                            obj.shareX = reader.bytes();\n                            break;\n                        }\n                        case 5: {\n                            obj.shareY = reader.bytes();\n                            break;\n                        }\n                        case 6: {\n                            obj.nullifier = reader.bytes();\n                            break;\n                        }\n                        case 7: {\n                            obj.rlnIdentifier = reader.bytes();\n                            break;\n                        }\n                        default: {\n                            reader.skipType(tag & 7);\n                            break;\n                        }\n                    }\n                }\n                return obj;\n            });\n        }\n        return _codec;\n    };\n    RateLimitProof.encode = (obj) => {\n        return encodeMessage(obj, RateLimitProof.codec());\n    };\n    RateLimitProof.decode = (buf, opts) => {\n        return decodeMessage(buf, RateLimitProof.codec(), opts);\n    };\n})(RateLimitProof || (RateLimitProof = {}));\nexport var WakuMessage;\n(function (WakuMessage) {\n    let _codec;\n    WakuMessage.codec = () => {\n        if (_codec == null) {\n            _codec = message((obj, w, opts = {}) => {\n                if (opts.lengthDelimited !== false) {\n                    w.fork();\n                }\n                if ((obj.payload != null && obj.payload.byteLength > 0)) {\n                    w.uint32(10);\n                    w.bytes(obj.payload);\n                }\n                if ((obj.contentTopic != null && obj.contentTopic !== '')) {\n                    w.uint32(18);\n                    w.string(obj.contentTopic);\n                }\n                if (obj.version != null) {\n                    w.uint32(24);\n                    w.uint32(obj.version);\n                }\n                if (obj.timestamp != null) {\n                    w.uint32(80);\n                    w.sint64(obj.timestamp);\n                }\n                if (obj.meta != null) {\n                    w.uint32(90);\n                    w.bytes(obj.meta);\n                }\n                if (obj.rateLimitProof != null) {\n                    w.uint32(170);\n                    RateLimitProof.codec().encode(obj.rateLimitProof, w);\n                }\n                if (obj.ephemeral != null) {\n                    w.uint32(248);\n                    w.bool(obj.ephemeral);\n                }\n                if (opts.lengthDelimited !== false) {\n                    w.ldelim();\n                }\n            }, (reader, length, opts = {}) => {\n                const obj = {\n                    payload: uint8ArrayAlloc(0),\n                    contentTopic: ''\n                };\n                const end = length == null ? reader.len : reader.pos + length;\n                while (reader.pos < end) {\n                    const tag = reader.uint32();\n                    switch (tag >>> 3) {\n                        case 1: {\n                            obj.payload = reader.bytes();\n                            break;\n                        }\n                        case 2: {\n                            obj.contentTopic = reader.string();\n                            break;\n                        }\n                        case 3: {\n                            obj.version = reader.uint32();\n                            break;\n                        }\n                        case 10: {\n                            obj.timestamp = reader.sint64();\n                            break;\n                        }\n                        case 11: {\n                            obj.meta = reader.bytes();\n                            break;\n                        }\n                        case 21: {\n                            obj.rateLimitProof = RateLimitProof.codec().decode(reader, reader.uint32(), {\n                                limits: opts.limits?.rateLimitProof\n                            });\n                            break;\n                        }\n                        case 31: {\n                            obj.ephemeral = reader.bool();\n                            break;\n                        }\n                        default: {\n                            reader.skipType(tag & 7);\n                            break;\n                        }\n                    }\n                }\n                return obj;\n            });\n        }\n        return _codec;\n    };\n    WakuMessage.encode = (obj) => {\n        return encodeMessage(obj, WakuMessage.codec());\n    };\n    WakuMessage.decode = (buf, opts) => {\n        return decodeMessage(buf, WakuMessage.codec(), opts);\n    };\n})(WakuMessage || (WakuMessage = {}));\n//# sourceMappingURL=filter_v2.js.map","/* eslint-disable import/export */\n/* eslint-disable complexity */\n/* eslint-disable @typescript-eslint/no-namespace */\n/* eslint-disable @typescript-eslint/no-unnecessary-boolean-literal-compare */\n/* eslint-disable @typescript-eslint/no-empty-interface */\nimport { decodeMessage, encodeMessage, message } from 'protons-runtime';\nimport { alloc as uint8ArrayAlloc } from 'uint8arrays/alloc';\nexport var PushRequest;\n(function (PushRequest) {\n    let _codec;\n    PushRequest.codec = () => {\n        if (_codec == null) {\n            _codec = message((obj, w, opts = {}) => {\n                if (opts.lengthDelimited !== false) {\n                    w.fork();\n                }\n                if ((obj.pubsubTopic != null && obj.pubsubTopic !== '')) {\n                    w.uint32(10);\n                    w.string(obj.pubsubTopic);\n                }\n                if (obj.message != null) {\n                    w.uint32(18);\n                    WakuMessage.codec().encode(obj.message, w);\n                }\n                if (opts.lengthDelimited !== false) {\n                    w.ldelim();\n                }\n            }, (reader, length, opts = {}) => {\n                const obj = {\n                    pubsubTopic: ''\n                };\n                const end = length == null ? reader.len : reader.pos + length;\n                while (reader.pos < end) {\n                    const tag = reader.uint32();\n                    switch (tag >>> 3) {\n                        case 1: {\n                            obj.pubsubTopic = reader.string();\n                            break;\n                        }\n                        case 2: {\n                            obj.message = WakuMessage.codec().decode(reader, reader.uint32(), {\n                                limits: opts.limits?.message\n                            });\n                            break;\n                        }\n                        default: {\n                            reader.skipType(tag & 7);\n                            break;\n                        }\n                    }\n                }\n                return obj;\n            });\n        }\n        return _codec;\n    };\n    PushRequest.encode = (obj) => {\n        return encodeMessage(obj, PushRequest.codec());\n    };\n    PushRequest.decode = (buf, opts) => {\n        return decodeMessage(buf, PushRequest.codec(), opts);\n    };\n})(PushRequest || (PushRequest = {}));\nexport var PushResponse;\n(function (PushResponse) {\n    let _codec;\n    PushResponse.codec = () => {\n        if (_codec == null) {\n            _codec = message((obj, w, opts = {}) => {\n                if (opts.lengthDelimited !== false) {\n                    w.fork();\n                }\n                if ((obj.isSuccess != null && obj.isSuccess !== false)) {\n                    w.uint32(8);\n                    w.bool(obj.isSuccess);\n                }\n                if (obj.info != null) {\n                    w.uint32(18);\n                    w.string(obj.info);\n                }\n                if (opts.lengthDelimited !== false) {\n                    w.ldelim();\n                }\n            }, (reader, length, opts = {}) => {\n                const obj = {\n                    isSuccess: false\n                };\n                const end = length == null ? reader.len : reader.pos + length;\n                while (reader.pos < end) {\n                    const tag = reader.uint32();\n                    switch (tag >>> 3) {\n                        case 1: {\n                            obj.isSuccess = reader.bool();\n                            break;\n                        }\n                        case 2: {\n                            obj.info = reader.string();\n                            break;\n                        }\n                        default: {\n                            reader.skipType(tag & 7);\n                            break;\n                        }\n                    }\n                }\n                return obj;\n            });\n        }\n        return _codec;\n    };\n    PushResponse.encode = (obj) => {\n        return encodeMessage(obj, PushResponse.codec());\n    };\n    PushResponse.decode = (buf, opts) => {\n        return decodeMessage(buf, PushResponse.codec(), opts);\n    };\n})(PushResponse || (PushResponse = {}));\nexport var PushRpc;\n(function (PushRpc) {\n    let _codec;\n    PushRpc.codec = () => {\n        if (_codec == null) {\n            _codec = message((obj, w, opts = {}) => {\n                if (opts.lengthDelimited !== false) {\n                    w.fork();\n                }\n                if ((obj.requestId != null && obj.requestId !== '')) {\n                    w.uint32(10);\n                    w.string(obj.requestId);\n                }\n                if (obj.request != null) {\n                    w.uint32(18);\n                    PushRequest.codec().encode(obj.request, w);\n                }\n                if (obj.response != null) {\n                    w.uint32(26);\n                    PushResponse.codec().encode(obj.response, w);\n                }\n                if (opts.lengthDelimited !== false) {\n                    w.ldelim();\n                }\n            }, (reader, length, opts = {}) => {\n                const obj = {\n                    requestId: ''\n                };\n                const end = length == null ? reader.len : reader.pos + length;\n                while (reader.pos < end) {\n                    const tag = reader.uint32();\n                    switch (tag >>> 3) {\n                        case 1: {\n                            obj.requestId = reader.string();\n                            break;\n                        }\n                        case 2: {\n                            obj.request = PushRequest.codec().decode(reader, reader.uint32(), {\n                                limits: opts.limits?.request\n                            });\n                            break;\n                        }\n                        case 3: {\n                            obj.response = PushResponse.codec().decode(reader, reader.uint32(), {\n                                limits: opts.limits?.response\n                            });\n                            break;\n                        }\n                        default: {\n                            reader.skipType(tag & 7);\n                            break;\n                        }\n                    }\n                }\n                return obj;\n            });\n        }\n        return _codec;\n    };\n    PushRpc.encode = (obj) => {\n        return encodeMessage(obj, PushRpc.codec());\n    };\n    PushRpc.decode = (buf, opts) => {\n        return decodeMessage(buf, PushRpc.codec(), opts);\n    };\n})(PushRpc || (PushRpc = {}));\nexport var RateLimitProof;\n(function (RateLimitProof) {\n    let _codec;\n    RateLimitProof.codec = () => {\n        if (_codec == null) {\n            _codec = message((obj, w, opts = {}) => {\n                if (opts.lengthDelimited !== false) {\n                    w.fork();\n                }\n                if ((obj.proof != null && obj.proof.byteLength > 0)) {\n                    w.uint32(10);\n                    w.bytes(obj.proof);\n                }\n                if ((obj.merkleRoot != null && obj.merkleRoot.byteLength > 0)) {\n                    w.uint32(18);\n                    w.bytes(obj.merkleRoot);\n                }\n                if ((obj.epoch != null && obj.epoch.byteLength > 0)) {\n                    w.uint32(26);\n                    w.bytes(obj.epoch);\n                }\n                if ((obj.shareX != null && obj.shareX.byteLength > 0)) {\n                    w.uint32(34);\n                    w.bytes(obj.shareX);\n                }\n                if ((obj.shareY != null && obj.shareY.byteLength > 0)) {\n                    w.uint32(42);\n                    w.bytes(obj.shareY);\n                }\n                if ((obj.nullifier != null && obj.nullifier.byteLength > 0)) {\n                    w.uint32(50);\n                    w.bytes(obj.nullifier);\n                }\n                if ((obj.rlnIdentifier != null && obj.rlnIdentifier.byteLength > 0)) {\n                    w.uint32(58);\n                    w.bytes(obj.rlnIdentifier);\n                }\n                if (opts.lengthDelimited !== false) {\n                    w.ldelim();\n                }\n            }, (reader, length, opts = {}) => {\n                const obj = {\n                    proof: uint8ArrayAlloc(0),\n                    merkleRoot: uint8ArrayAlloc(0),\n                    epoch: uint8ArrayAlloc(0),\n                    shareX: uint8ArrayAlloc(0),\n                    shareY: uint8ArrayAlloc(0),\n                    nullifier: uint8ArrayAlloc(0),\n                    rlnIdentifier: uint8ArrayAlloc(0)\n                };\n                const end = length == null ? reader.len : reader.pos + length;\n                while (reader.pos < end) {\n                    const tag = reader.uint32();\n                    switch (tag >>> 3) {\n                        case 1: {\n                            obj.proof = reader.bytes();\n                            break;\n                        }\n                        case 2: {\n                            obj.merkleRoot = reader.bytes();\n                            break;\n                        }\n                        case 3: {\n                            obj.epoch = reader.bytes();\n                            break;\n                        }\n                        case 4: {\n                            obj.shareX = reader.bytes();\n                            break;\n                        }\n                        case 5: {\n                            obj.shareY = reader.bytes();\n                            break;\n                        }\n                        case 6: {\n                            obj.nullifier = reader.bytes();\n                            break;\n                        }\n                        case 7: {\n                            obj.rlnIdentifier = reader.bytes();\n                            break;\n                        }\n                        default: {\n                            reader.skipType(tag & 7);\n                            break;\n                        }\n                    }\n                }\n                return obj;\n            });\n        }\n        return _codec;\n    };\n    RateLimitProof.encode = (obj) => {\n        return encodeMessage(obj, RateLimitProof.codec());\n    };\n    RateLimitProof.decode = (buf, opts) => {\n        return decodeMessage(buf, RateLimitProof.codec(), opts);\n    };\n})(RateLimitProof || (RateLimitProof = {}));\nexport var WakuMessage;\n(function (WakuMessage) {\n    let _codec;\n    WakuMessage.codec = () => {\n        if (_codec == null) {\n            _codec = message((obj, w, opts = {}) => {\n                if (opts.lengthDelimited !== false) {\n                    w.fork();\n                }\n                if ((obj.payload != null && obj.payload.byteLength > 0)) {\n                    w.uint32(10);\n                    w.bytes(obj.payload);\n                }\n                if ((obj.contentTopic != null && obj.contentTopic !== '')) {\n                    w.uint32(18);\n                    w.string(obj.contentTopic);\n                }\n                if (obj.version != null) {\n                    w.uint32(24);\n                    w.uint32(obj.version);\n                }\n                if (obj.timestamp != null) {\n                    w.uint32(80);\n                    w.sint64(obj.timestamp);\n                }\n                if (obj.meta != null) {\n                    w.uint32(90);\n                    w.bytes(obj.meta);\n                }\n                if (obj.rateLimitProof != null) {\n                    w.uint32(170);\n                    RateLimitProof.codec().encode(obj.rateLimitProof, w);\n                }\n                if (obj.ephemeral != null) {\n                    w.uint32(248);\n                    w.bool(obj.ephemeral);\n                }\n                if (opts.lengthDelimited !== false) {\n                    w.ldelim();\n                }\n            }, (reader, length, opts = {}) => {\n                const obj = {\n                    payload: uint8ArrayAlloc(0),\n                    contentTopic: ''\n                };\n                const end = length == null ? reader.len : reader.pos + length;\n                while (reader.pos < end) {\n                    const tag = reader.uint32();\n                    switch (tag >>> 3) {\n                        case 1: {\n                            obj.payload = reader.bytes();\n                            break;\n                        }\n                        case 2: {\n                            obj.contentTopic = reader.string();\n                            break;\n                        }\n                        case 3: {\n                            obj.version = reader.uint32();\n                            break;\n                        }\n                        case 10: {\n                            obj.timestamp = reader.sint64();\n                            break;\n                        }\n                        case 11: {\n                            obj.meta = reader.bytes();\n                            break;\n                        }\n                        case 21: {\n                            obj.rateLimitProof = RateLimitProof.codec().decode(reader, reader.uint32(), {\n                                limits: opts.limits?.rateLimitProof\n                            });\n                            break;\n                        }\n                        case 31: {\n                            obj.ephemeral = reader.bool();\n                            break;\n                        }\n                        default: {\n                            reader.skipType(tag & 7);\n                            break;\n                        }\n                    }\n                }\n                return obj;\n            });\n        }\n        return _codec;\n    };\n    WakuMessage.encode = (obj) => {\n        return encodeMessage(obj, WakuMessage.codec());\n    };\n    WakuMessage.decode = (buf, opts) => {\n        return decodeMessage(buf, WakuMessage.codec(), opts);\n    };\n})(WakuMessage || (WakuMessage = {}));\n//# sourceMappingURL=light_push.js.map","/* eslint-disable import/export */\n/* eslint-disable complexity */\n/* eslint-disable @typescript-eslint/no-namespace */\n/* eslint-disable @typescript-eslint/no-unnecessary-boolean-literal-compare */\n/* eslint-disable @typescript-eslint/no-empty-interface */\nimport { decodeMessage, encodeMessage, MaxLengthError, message } from 'protons-runtime';\nimport { alloc as uint8ArrayAlloc } from 'uint8arrays/alloc';\nexport var WakuMessageKeyValue;\n(function (WakuMessageKeyValue) {\n    let _codec;\n    WakuMessageKeyValue.codec = () => {\n        if (_codec == null) {\n            _codec = message((obj, w, opts = {}) => {\n                if (opts.lengthDelimited !== false) {\n                    w.fork();\n                }\n                if (obj.messageHash != null) {\n                    w.uint32(10);\n                    w.bytes(obj.messageHash);\n                }\n                if (obj.message != null) {\n                    w.uint32(18);\n                    WakuMessage.codec().encode(obj.message, w);\n                }\n                if (obj.pubsubTopic != null) {\n                    w.uint32(26);\n                    w.string(obj.pubsubTopic);\n                }\n                if (opts.lengthDelimited !== false) {\n                    w.ldelim();\n                }\n            }, (reader, length, opts = {}) => {\n                const obj = {};\n                const end = length == null ? reader.len : reader.pos + length;\n                while (reader.pos < end) {\n                    const tag = reader.uint32();\n                    switch (tag >>> 3) {\n                        case 1: {\n                            obj.messageHash = reader.bytes();\n                            break;\n                        }\n                        case 2: {\n                            obj.message = WakuMessage.codec().decode(reader, reader.uint32(), {\n                                limits: opts.limits?.message\n                            });\n                            break;\n                        }\n                        case 3: {\n                            obj.pubsubTopic = reader.string();\n                            break;\n                        }\n                        default: {\n                            reader.skipType(tag & 7);\n                            break;\n                        }\n                    }\n                }\n                return obj;\n            });\n        }\n        return _codec;\n    };\n    WakuMessageKeyValue.encode = (obj) => {\n        return encodeMessage(obj, WakuMessageKeyValue.codec());\n    };\n    WakuMessageKeyValue.decode = (buf, opts) => {\n        return decodeMessage(buf, WakuMessageKeyValue.codec(), opts);\n    };\n})(WakuMessageKeyValue || (WakuMessageKeyValue = {}));\nexport var StoreQueryRequest;\n(function (StoreQueryRequest) {\n    let _codec;\n    StoreQueryRequest.codec = () => {\n        if (_codec == null) {\n            _codec = message((obj, w, opts = {}) => {\n                if (opts.lengthDelimited !== false) {\n                    w.fork();\n                }\n                if ((obj.requestId != null && obj.requestId !== '')) {\n                    w.uint32(10);\n                    w.string(obj.requestId);\n                }\n                if ((obj.includeData != null && obj.includeData !== false)) {\n                    w.uint32(16);\n                    w.bool(obj.includeData);\n                }\n                if (obj.pubsubTopic != null) {\n                    w.uint32(82);\n                    w.string(obj.pubsubTopic);\n                }\n                if (obj.contentTopics != null) {\n                    for (const value of obj.contentTopics) {\n                        w.uint32(90);\n                        w.string(value);\n                    }\n                }\n                if (obj.timeStart != null) {\n                    w.uint32(96);\n                    w.sint64(obj.timeStart);\n                }\n                if (obj.timeEnd != null) {\n                    w.uint32(104);\n                    w.sint64(obj.timeEnd);\n                }\n                if (obj.messageHashes != null) {\n                    for (const value of obj.messageHashes) {\n                        w.uint32(162);\n                        w.bytes(value);\n                    }\n                }\n                if (obj.paginationCursor != null) {\n                    w.uint32(410);\n                    w.bytes(obj.paginationCursor);\n                }\n                if ((obj.paginationForward != null && obj.paginationForward !== false)) {\n                    w.uint32(416);\n                    w.bool(obj.paginationForward);\n                }\n                if (obj.paginationLimit != null) {\n                    w.uint32(424);\n                    w.uint64(obj.paginationLimit);\n                }\n                if (opts.lengthDelimited !== false) {\n                    w.ldelim();\n                }\n            }, (reader, length, opts = {}) => {\n                const obj = {\n                    requestId: '',\n                    includeData: false,\n                    contentTopics: [],\n                    messageHashes: [],\n                    paginationForward: false\n                };\n                const end = length == null ? reader.len : reader.pos + length;\n                while (reader.pos < end) {\n                    const tag = reader.uint32();\n                    switch (tag >>> 3) {\n                        case 1: {\n                            obj.requestId = reader.string();\n                            break;\n                        }\n                        case 2: {\n                            obj.includeData = reader.bool();\n                            break;\n                        }\n                        case 10: {\n                            obj.pubsubTopic = reader.string();\n                            break;\n                        }\n                        case 11: {\n                            if (opts.limits?.contentTopics != null && obj.contentTopics.length === opts.limits.contentTopics) {\n                                throw new MaxLengthError('Decode error - map field \"contentTopics\" had too many elements');\n                            }\n                            obj.contentTopics.push(reader.string());\n                            break;\n                        }\n                        case 12: {\n                            obj.timeStart = reader.sint64();\n                            break;\n                        }\n                        case 13: {\n                            obj.timeEnd = reader.sint64();\n                            break;\n                        }\n                        case 20: {\n                            if (opts.limits?.messageHashes != null && obj.messageHashes.length === opts.limits.messageHashes) {\n                                throw new MaxLengthError('Decode error - map field \"messageHashes\" had too many elements');\n                            }\n                            obj.messageHashes.push(reader.bytes());\n                            break;\n                        }\n                        case 51: {\n                            obj.paginationCursor = reader.bytes();\n                            break;\n                        }\n                        case 52: {\n                            obj.paginationForward = reader.bool();\n                            break;\n                        }\n                        case 53: {\n                            obj.paginationLimit = reader.uint64();\n                            break;\n                        }\n                        default: {\n                            reader.skipType(tag & 7);\n                            break;\n                        }\n                    }\n                }\n                return obj;\n            });\n        }\n        return _codec;\n    };\n    StoreQueryRequest.encode = (obj) => {\n        return encodeMessage(obj, StoreQueryRequest.codec());\n    };\n    StoreQueryRequest.decode = (buf, opts) => {\n        return decodeMessage(buf, StoreQueryRequest.codec(), opts);\n    };\n})(StoreQueryRequest || (StoreQueryRequest = {}));\nexport var StoreQueryResponse;\n(function (StoreQueryResponse) {\n    let _codec;\n    StoreQueryResponse.codec = () => {\n        if (_codec == null) {\n            _codec = message((obj, w, opts = {}) => {\n                if (opts.lengthDelimited !== false) {\n                    w.fork();\n                }\n                if ((obj.requestId != null && obj.requestId !== '')) {\n                    w.uint32(10);\n                    w.string(obj.requestId);\n                }\n                if (obj.statusCode != null) {\n                    w.uint32(80);\n                    w.uint32(obj.statusCode);\n                }\n                if (obj.statusDesc != null) {\n                    w.uint32(90);\n                    w.string(obj.statusDesc);\n                }\n                if (obj.messages != null) {\n                    for (const value of obj.messages) {\n                        w.uint32(162);\n                        WakuMessageKeyValue.codec().encode(value, w);\n                    }\n                }\n                if (obj.paginationCursor != null) {\n                    w.uint32(410);\n                    w.bytes(obj.paginationCursor);\n                }\n                if (opts.lengthDelimited !== false) {\n                    w.ldelim();\n                }\n            }, (reader, length, opts = {}) => {\n                const obj = {\n                    requestId: '',\n                    messages: []\n                };\n                const end = length == null ? reader.len : reader.pos + length;\n                while (reader.pos < end) {\n                    const tag = reader.uint32();\n                    switch (tag >>> 3) {\n                        case 1: {\n                            obj.requestId = reader.string();\n                            break;\n                        }\n                        case 10: {\n                            obj.statusCode = reader.uint32();\n                            break;\n                        }\n                        case 11: {\n                            obj.statusDesc = reader.string();\n                            break;\n                        }\n                        case 20: {\n                            if (opts.limits?.messages != null && obj.messages.length === opts.limits.messages) {\n                                throw new MaxLengthError('Decode error - map field \"messages\" had too many elements');\n                            }\n                            obj.messages.push(WakuMessageKeyValue.codec().decode(reader, reader.uint32(), {\n                                limits: opts.limits?.messages$\n                            }));\n                            break;\n                        }\n                        case 51: {\n                            obj.paginationCursor = reader.bytes();\n                            break;\n                        }\n                        default: {\n                            reader.skipType(tag & 7);\n                            break;\n                        }\n                    }\n                }\n                return obj;\n            });\n        }\n        return _codec;\n    };\n    StoreQueryResponse.encode = (obj) => {\n        return encodeMessage(obj, StoreQueryResponse.codec());\n    };\n    StoreQueryResponse.decode = (buf, opts) => {\n        return decodeMessage(buf, StoreQueryResponse.codec(), opts);\n    };\n})(StoreQueryResponse || (StoreQueryResponse = {}));\nexport var RateLimitProof;\n(function (RateLimitProof) {\n    let _codec;\n    RateLimitProof.codec = () => {\n        if (_codec == null) {\n            _codec = message((obj, w, opts = {}) => {\n                if (opts.lengthDelimited !== false) {\n                    w.fork();\n                }\n                if ((obj.proof != null && obj.proof.byteLength > 0)) {\n                    w.uint32(10);\n                    w.bytes(obj.proof);\n                }\n                if ((obj.merkleRoot != null && obj.merkleRoot.byteLength > 0)) {\n                    w.uint32(18);\n                    w.bytes(obj.merkleRoot);\n                }\n                if ((obj.epoch != null && obj.epoch.byteLength > 0)) {\n                    w.uint32(26);\n                    w.bytes(obj.epoch);\n                }\n                if ((obj.shareX != null && obj.shareX.byteLength > 0)) {\n                    w.uint32(34);\n                    w.bytes(obj.shareX);\n                }\n                if ((obj.shareY != null && obj.shareY.byteLength > 0)) {\n                    w.uint32(42);\n                    w.bytes(obj.shareY);\n                }\n                if ((obj.nullifier != null && obj.nullifier.byteLength > 0)) {\n                    w.uint32(50);\n                    w.bytes(obj.nullifier);\n                }\n                if ((obj.rlnIdentifier != null && obj.rlnIdentifier.byteLength > 0)) {\n                    w.uint32(58);\n                    w.bytes(obj.rlnIdentifier);\n                }\n                if (opts.lengthDelimited !== false) {\n                    w.ldelim();\n                }\n            }, (reader, length, opts = {}) => {\n                const obj = {\n                    proof: uint8ArrayAlloc(0),\n                    merkleRoot: uint8ArrayAlloc(0),\n                    epoch: uint8ArrayAlloc(0),\n                    shareX: uint8ArrayAlloc(0),\n                    shareY: uint8ArrayAlloc(0),\n                    nullifier: uint8ArrayAlloc(0),\n                    rlnIdentifier: uint8ArrayAlloc(0)\n                };\n                const end = length == null ? reader.len : reader.pos + length;\n                while (reader.pos < end) {\n                    const tag = reader.uint32();\n                    switch (tag >>> 3) {\n                        case 1: {\n                            obj.proof = reader.bytes();\n                            break;\n                        }\n                        case 2: {\n                            obj.merkleRoot = reader.bytes();\n                            break;\n                        }\n                        case 3: {\n                            obj.epoch = reader.bytes();\n                            break;\n                        }\n                        case 4: {\n                            obj.shareX = reader.bytes();\n                            break;\n                        }\n                        case 5: {\n                            obj.shareY = reader.bytes();\n                            break;\n                        }\n                        case 6: {\n                            obj.nullifier = reader.bytes();\n                            break;\n                        }\n                        case 7: {\n                            obj.rlnIdentifier = reader.bytes();\n                            break;\n                        }\n                        default: {\n                            reader.skipType(tag & 7);\n                            break;\n                        }\n                    }\n                }\n                return obj;\n            });\n        }\n        return _codec;\n    };\n    RateLimitProof.encode = (obj) => {\n        return encodeMessage(obj, RateLimitProof.codec());\n    };\n    RateLimitProof.decode = (buf, opts) => {\n        return decodeMessage(buf, RateLimitProof.codec(), opts);\n    };\n})(RateLimitProof || (RateLimitProof = {}));\nexport var WakuMessage;\n(function (WakuMessage) {\n    let _codec;\n    WakuMessage.codec = () => {\n        if (_codec == null) {\n            _codec = message((obj, w, opts = {}) => {\n                if (opts.lengthDelimited !== false) {\n                    w.fork();\n                }\n                if ((obj.payload != null && obj.payload.byteLength > 0)) {\n                    w.uint32(10);\n                    w.bytes(obj.payload);\n                }\n                if ((obj.contentTopic != null && obj.contentTopic !== '')) {\n                    w.uint32(18);\n                    w.string(obj.contentTopic);\n                }\n                if (obj.version != null) {\n                    w.uint32(24);\n                    w.uint32(obj.version);\n                }\n                if (obj.timestamp != null) {\n                    w.uint32(80);\n                    w.sint64(obj.timestamp);\n                }\n                if (obj.meta != null) {\n                    w.uint32(90);\n                    w.bytes(obj.meta);\n                }\n                if (obj.rateLimitProof != null) {\n                    w.uint32(170);\n                    RateLimitProof.codec().encode(obj.rateLimitProof, w);\n                }\n                if (obj.ephemeral != null) {\n                    w.uint32(248);\n                    w.bool(obj.ephemeral);\n                }\n                if (opts.lengthDelimited !== false) {\n                    w.ldelim();\n                }\n            }, (reader, length, opts = {}) => {\n                const obj = {\n                    payload: uint8ArrayAlloc(0),\n                    contentTopic: ''\n                };\n                const end = length == null ? reader.len : reader.pos + length;\n                while (reader.pos < end) {\n                    const tag = reader.uint32();\n                    switch (tag >>> 3) {\n                        case 1: {\n                            obj.payload = reader.bytes();\n                            break;\n                        }\n                        case 2: {\n                            obj.contentTopic = reader.string();\n                            break;\n                        }\n                        case 3: {\n                            obj.version = reader.uint32();\n                            break;\n                        }\n                        case 10: {\n                            obj.timestamp = reader.sint64();\n                            break;\n                        }\n                        case 11: {\n                            obj.meta = reader.bytes();\n                            break;\n                        }\n                        case 21: {\n                            obj.rateLimitProof = RateLimitProof.codec().decode(reader, reader.uint32(), {\n                                limits: opts.limits?.rateLimitProof\n                            });\n                            break;\n                        }\n                        case 31: {\n                            obj.ephemeral = reader.bool();\n                            break;\n                        }\n                        default: {\n                            reader.skipType(tag & 7);\n                            break;\n                        }\n                    }\n                }\n                return obj;\n            });\n        }\n        return _codec;\n    };\n    WakuMessage.encode = (obj) => {\n        return encodeMessage(obj, WakuMessage.codec());\n    };\n    WakuMessage.decode = (buf, opts) => {\n        return decodeMessage(buf, WakuMessage.codec(), opts);\n    };\n})(WakuMessage || (WakuMessage = {}));\n//# sourceMappingURL=store_v3.js.map","/* eslint-disable import/export */\n/* eslint-disable complexity */\n/* eslint-disable @typescript-eslint/no-namespace */\n/* eslint-disable @typescript-eslint/no-unnecessary-boolean-literal-compare */\n/* eslint-disable @typescript-eslint/no-empty-interface */\nimport { decodeMessage, encodeMessage, MaxLengthError, message } from 'protons-runtime';\nexport var PeerInfo;\n(function (PeerInfo) {\n    let _codec;\n    PeerInfo.codec = () => {\n        if (_codec == null) {\n            _codec = message((obj, w, opts = {}) => {\n                if (opts.lengthDelimited !== false) {\n                    w.fork();\n                }\n                if (obj.enr != null) {\n                    w.uint32(10);\n                    w.bytes(obj.enr);\n                }\n                if (opts.lengthDelimited !== false) {\n                    w.ldelim();\n                }\n            }, (reader, length, opts = {}) => {\n                const obj = {};\n                const end = length == null ? reader.len : reader.pos + length;\n                while (reader.pos < end) {\n                    const tag = reader.uint32();\n                    switch (tag >>> 3) {\n                        case 1: {\n                            obj.enr = reader.bytes();\n                            break;\n                        }\n                        default: {\n                            reader.skipType(tag & 7);\n                            break;\n                        }\n                    }\n                }\n                return obj;\n            });\n        }\n        return _codec;\n    };\n    PeerInfo.encode = (obj) => {\n        return encodeMessage(obj, PeerInfo.codec());\n    };\n    PeerInfo.decode = (buf, opts) => {\n        return decodeMessage(buf, PeerInfo.codec(), opts);\n    };\n})(PeerInfo || (PeerInfo = {}));\nexport var PeerExchangeQuery;\n(function (PeerExchangeQuery) {\n    let _codec;\n    PeerExchangeQuery.codec = () => {\n        if (_codec == null) {\n            _codec = message((obj, w, opts = {}) => {\n                if (opts.lengthDelimited !== false) {\n                    w.fork();\n                }\n                if (obj.numPeers != null) {\n                    w.uint32(8);\n                    w.uint64(obj.numPeers);\n                }\n                if (opts.lengthDelimited !== false) {\n                    w.ldelim();\n                }\n            }, (reader, length, opts = {}) => {\n                const obj = {};\n                const end = length == null ? reader.len : reader.pos + length;\n                while (reader.pos < end) {\n                    const tag = reader.uint32();\n                    switch (tag >>> 3) {\n                        case 1: {\n                            obj.numPeers = reader.uint64();\n                            break;\n                        }\n                        default: {\n                            reader.skipType(tag & 7);\n                            break;\n                        }\n                    }\n                }\n                return obj;\n            });\n        }\n        return _codec;\n    };\n    PeerExchangeQuery.encode = (obj) => {\n        return encodeMessage(obj, PeerExchangeQuery.codec());\n    };\n    PeerExchangeQuery.decode = (buf, opts) => {\n        return decodeMessage(buf, PeerExchangeQuery.codec(), opts);\n    };\n})(PeerExchangeQuery || (PeerExchangeQuery = {}));\nexport var PeerExchangeResponse;\n(function (PeerExchangeResponse) {\n    let _codec;\n    PeerExchangeResponse.codec = () => {\n        if (_codec == null) {\n            _codec = message((obj, w, opts = {}) => {\n                if (opts.lengthDelimited !== false) {\n                    w.fork();\n                }\n                if (obj.peerInfos != null) {\n                    for (const value of obj.peerInfos) {\n                        w.uint32(10);\n                        PeerInfo.codec().encode(value, w);\n                    }\n                }\n                if (opts.lengthDelimited !== false) {\n                    w.ldelim();\n                }\n            }, (reader, length, opts = {}) => {\n                const obj = {\n                    peerInfos: []\n                };\n                const end = length == null ? reader.len : reader.pos + length;\n                while (reader.pos < end) {\n                    const tag = reader.uint32();\n                    switch (tag >>> 3) {\n                        case 1: {\n                            if (opts.limits?.peerInfos != null && obj.peerInfos.length === opts.limits.peerInfos) {\n                                throw new MaxLengthError('Decode error - map field \"peerInfos\" had too many elements');\n                            }\n                            obj.peerInfos.push(PeerInfo.codec().decode(reader, reader.uint32(), {\n                                limits: opts.limits?.peerInfos$\n                            }));\n                            break;\n                        }\n                        default: {\n                            reader.skipType(tag & 7);\n                            break;\n                        }\n                    }\n                }\n                return obj;\n            });\n        }\n        return _codec;\n    };\n    PeerExchangeResponse.encode = (obj) => {\n        return encodeMessage(obj, PeerExchangeResponse.codec());\n    };\n    PeerExchangeResponse.decode = (buf, opts) => {\n        return decodeMessage(buf, PeerExchangeResponse.codec(), opts);\n    };\n})(PeerExchangeResponse || (PeerExchangeResponse = {}));\nexport var PeerExchangeRPC;\n(function (PeerExchangeRPC) {\n    let _codec;\n    PeerExchangeRPC.codec = () => {\n        if (_codec == null) {\n            _codec = message((obj, w, opts = {}) => {\n                if (opts.lengthDelimited !== false) {\n                    w.fork();\n                }\n                if (obj.query != null) {\n                    w.uint32(10);\n                    PeerExchangeQuery.codec().encode(obj.query, w);\n                }\n                if (obj.response != null) {\n                    w.uint32(18);\n                    PeerExchangeResponse.codec().encode(obj.response, w);\n                }\n                if (opts.lengthDelimited !== false) {\n                    w.ldelim();\n                }\n            }, (reader, length, opts = {}) => {\n                const obj = {};\n                const end = length == null ? reader.len : reader.pos + length;\n                while (reader.pos < end) {\n                    const tag = reader.uint32();\n                    switch (tag >>> 3) {\n                        case 1: {\n                            obj.query = PeerExchangeQuery.codec().decode(reader, reader.uint32(), {\n                                limits: opts.limits?.query\n                            });\n                            break;\n                        }\n                        case 2: {\n                            obj.response = PeerExchangeResponse.codec().decode(reader, reader.uint32(), {\n                                limits: opts.limits?.response\n                            });\n                            break;\n                        }\n                        default: {\n                            reader.skipType(tag & 7);\n                            break;\n                        }\n                    }\n                }\n                return obj;\n            });\n        }\n        return _codec;\n    };\n    PeerExchangeRPC.encode = (obj) => {\n        return encodeMessage(obj, PeerExchangeRPC.codec());\n    };\n    PeerExchangeRPC.decode = (buf, opts) => {\n        return decodeMessage(buf, PeerExchangeRPC.codec(), opts);\n    };\n})(PeerExchangeRPC || (PeerExchangeRPC = {}));\n//# sourceMappingURL=peer_exchange.js.map","/* eslint-disable import/export */\n/* eslint-disable complexity */\n/* eslint-disable @typescript-eslint/no-namespace */\n/* eslint-disable @typescript-eslint/no-unnecessary-boolean-literal-compare */\n/* eslint-disable @typescript-eslint/no-empty-interface */\nimport { decodeMessage, encodeMessage, MaxLengthError, message } from 'protons-runtime';\nexport var WakuMetadataRequest;\n(function (WakuMetadataRequest) {\n    let _codec;\n    WakuMetadataRequest.codec = () => {\n        if (_codec == null) {\n            _codec = message((obj, w, opts = {}) => {\n                if (opts.lengthDelimited !== false) {\n                    w.fork();\n                }\n                if (obj.clusterId != null) {\n                    w.uint32(8);\n                    w.uint32(obj.clusterId);\n                }\n                if (obj.shards != null) {\n                    for (const value of obj.shards) {\n                        w.uint32(16);\n                        w.uint32(value);\n                    }\n                }\n                if (opts.lengthDelimited !== false) {\n                    w.ldelim();\n                }\n            }, (reader, length, opts = {}) => {\n                const obj = {\n                    shards: []\n                };\n                const end = length == null ? reader.len : reader.pos + length;\n                while (reader.pos < end) {\n                    const tag = reader.uint32();\n                    switch (tag >>> 3) {\n                        case 1: {\n                            obj.clusterId = reader.uint32();\n                            break;\n                        }\n                        case 2: {\n                            if (opts.limits?.shards != null && obj.shards.length === opts.limits.shards) {\n                                throw new MaxLengthError('Decode error - map field \"shards\" had too many elements');\n                            }\n                            obj.shards.push(reader.uint32());\n                            break;\n                        }\n                        default: {\n                            reader.skipType(tag & 7);\n                            break;\n                        }\n                    }\n                }\n                return obj;\n            });\n        }\n        return _codec;\n    };\n    WakuMetadataRequest.encode = (obj) => {\n        return encodeMessage(obj, WakuMetadataRequest.codec());\n    };\n    WakuMetadataRequest.decode = (buf, opts) => {\n        return decodeMessage(buf, WakuMetadataRequest.codec(), opts);\n    };\n})(WakuMetadataRequest || (WakuMetadataRequest = {}));\nexport var WakuMetadataResponse;\n(function (WakuMetadataResponse) {\n    let _codec;\n    WakuMetadataResponse.codec = () => {\n        if (_codec == null) {\n            _codec = message((obj, w, opts = {}) => {\n                if (opts.lengthDelimited !== false) {\n                    w.fork();\n                }\n                if (obj.clusterId != null) {\n                    w.uint32(8);\n                    w.uint32(obj.clusterId);\n                }\n                if (obj.shards != null) {\n                    for (const value of obj.shards) {\n                        w.uint32(16);\n                        w.uint32(value);\n                    }\n                }\n                if (opts.lengthDelimited !== false) {\n                    w.ldelim();\n                }\n            }, (reader, length, opts = {}) => {\n                const obj = {\n                    shards: []\n                };\n                const end = length == null ? reader.len : reader.pos + length;\n                while (reader.pos < end) {\n                    const tag = reader.uint32();\n                    switch (tag >>> 3) {\n                        case 1: {\n                            obj.clusterId = reader.uint32();\n                            break;\n                        }\n                        case 2: {\n                            if (opts.limits?.shards != null && obj.shards.length === opts.limits.shards) {\n                                throw new MaxLengthError('Decode error - map field \"shards\" had too many elements');\n                            }\n                            obj.shards.push(reader.uint32());\n                            break;\n                        }\n                        default: {\n                            reader.skipType(tag & 7);\n                            break;\n                        }\n                    }\n                }\n                return obj;\n            });\n        }\n        return _codec;\n    };\n    WakuMetadataResponse.encode = (obj) => {\n        return encodeMessage(obj, WakuMetadataResponse.codec());\n    };\n    WakuMetadataResponse.decode = (buf, opts) => {\n        return decodeMessage(buf, WakuMetadataResponse.codec(), opts);\n    };\n})(WakuMetadataResponse || (WakuMetadataResponse = {}));\n//# sourceMappingURL=metadata.js.map","import { createCodec, CODEC_TYPES } from '../codec.js';\nexport function enumeration(v) {\n    function findValue(val) {\n        // Use the reverse mapping to look up the enum key for the stored value\n        // https://www.typescriptlang.org/docs/handbook/enums.html#reverse-mappings\n        if (v[val.toString()] == null) {\n            throw new Error('Invalid enum value');\n        }\n        return v[val];\n    }\n    const encode = function enumEncode(val, writer) {\n        const enumValue = findValue(val);\n        writer.int32(enumValue);\n    };\n    const decode = function enumDecode(reader) {\n        const val = reader.int32();\n        return findValue(val);\n    };\n    // @ts-expect-error yeah yeah\n    return createCodec('enum', CODEC_TYPES.VARINT, encode, decode);\n}\n//# sourceMappingURL=enum.js.map","import { createCodec, CODEC_TYPES } from '../codec.js';\nexport function message(encode, decode) {\n    return createCodec('message', CODEC_TYPES.LENGTH_DELIMITED, encode, decode);\n}\n//# sourceMappingURL=message.js.map","/**\n * @packageDocumentation\n *\n * This module contains serialization/deserialization code used when encoding/decoding protobufs.\n *\n * It should be declared as a dependency of your project:\n *\n * ```console\n * npm i protons-runtime\n * ```\n */\nexport { decodeMessage } from './decode.js';\nexport { encodeMessage } from './encode.js';\nexport { enumeration } from './codecs/enum.js';\nexport { message } from './codecs/message.js';\nexport { createReader as reader } from './utils/reader.js';\nexport { createWriter as writer } from './utils/writer.js';\n/**\n * This will be removed in a future release\n *\n * @deprecated\n */\nexport class CodeError extends Error {\n    code;\n    constructor(message, code) {\n        super(message);\n        this.code = code;\n    }\n}\n/**\n * Thrown when a repeated field has too many elements\n */\nexport class MaxLengthError extends Error {\n    /**\n     * This will be removed in a future release\n     *\n     * @deprecated use the `.name` property instead\n     */\n    code = 'ERR_MAX_LENGTH';\n    name = 'MaxLengthError';\n}\n/**\n * Thrown when a map has too many elements\n */\nexport class MaxSizeError extends Error {\n    /**\n     * This will be removed in a future release\n     *\n     * @deprecated use the `.name` property instead\n     */\n    code = 'ERR_MAX_SIZE';\n    name = 'MaxSizeError';\n}\nexport class ParseError extends Error {\n    /**\n     * This will be removed in a future release\n     *\n     * @deprecated use the `.name` property instead\n     */\n    code = 'ERR_PARSE_ERROR';\n    name = 'ParseError';\n}\nexport class NoMessagesFoundError extends Error {\n    /**\n     * This will be removed in a future release\n     *\n     * @deprecated use the `.name` property instead\n     */\n    code = 'ERR_NO_MESSAGES_FOUND';\n    name = 'NoMessagesFoundError';\n}\n//# sourceMappingURL=index.js.map","export function isDefined(value) {\n    return Boolean(value);\n}\n//# sourceMappingURL=is_defined.js.map","export function groupByContentTopic(values) {\n    const groupedDecoders = new Map();\n    values.forEach((value) => {\n        let decs = groupedDecoders.get(value.contentTopic);\n        if (!decs) {\n            groupedDecoders.set(value.contentTopic, []);\n            decs = groupedDecoders.get(value.contentTopic);\n        }\n        decs.push(value);\n    });\n    return groupedDecoders;\n}\n//# sourceMappingURL=group_by.js.map","const FRAME_RATE = 60;\n/**\n * Function that transforms IReceiver subscription to iterable stream of data.\n * @param receiver - object that allows to be subscribed to;\n * @param decoder - parameter to be passed to receiver for subscription;\n * @param options - options for receiver for subscription;\n * @param iteratorOptions - optional configuration for iterator;\n * @returns iterator and stop function to terminate it.\n */\nexport async function toAsyncIterator(receiver, decoder, iteratorOptions) {\n    const iteratorDelay = iteratorOptions?.iteratorDelay ?? FRAME_RATE;\n    const messages = [];\n    let unsubscribe;\n    unsubscribe = await receiver.subscribeWithUnsubscribe(decoder, (message) => {\n        messages.push(message);\n    });\n    const isWithTimeout = Number.isInteger(iteratorOptions?.timeoutMs);\n    const timeoutMs = iteratorOptions?.timeoutMs ?? 0;\n    const startTime = Date.now();\n    async function* iterator() {\n        while (true) {\n            if (isWithTimeout && Date.now() - startTime >= timeoutMs) {\n                return;\n            }\n            await wait(iteratorDelay);\n            const message = messages.shift();\n            if (!unsubscribe && messages.length === 0) {\n                return message;\n            }\n            if (!message && unsubscribe) {\n                continue;\n            }\n            yield message;\n        }\n    }\n    return {\n        iterator: iterator(),\n        async stop() {\n            if (unsubscribe) {\n                await unsubscribe();\n                unsubscribe = undefined;\n            }\n        }\n    };\n}\nfunction wait(ms) {\n    return new Promise((resolve) => {\n        setTimeout(resolve, ms);\n    });\n}\n//# sourceMappingURL=to_async_iterator.js.map","function number(n) {\n    if (!Number.isSafeInteger(n) || n < 0)\n        throw new Error(`positive integer expected, not ${n}`);\n}\nfunction bool(b) {\n    if (typeof b !== 'boolean')\n        throw new Error(`boolean expected, not ${b}`);\n}\n// copied from utils\nexport function isBytes(a) {\n    return (a instanceof Uint8Array ||\n        (a != null && typeof a === 'object' && a.constructor.name === 'Uint8Array'));\n}\nfunction bytes(b, ...lengths) {\n    if (!isBytes(b))\n        throw new Error('Uint8Array expected');\n    if (lengths.length > 0 && !lengths.includes(b.length))\n        throw new Error(`Uint8Array expected of length ${lengths}, not of length=${b.length}`);\n}\nfunction hash(h) {\n    if (typeof h !== 'function' || typeof h.create !== 'function')\n        throw new Error('Hash should be wrapped by utils.wrapConstructor');\n    number(h.outputLen);\n    number(h.blockLen);\n}\nfunction exists(instance, checkFinished = true) {\n    if (instance.destroyed)\n        throw new Error('Hash instance has been destroyed');\n    if (checkFinished && instance.finished)\n        throw new Error('Hash#digest() has already been called');\n}\nfunction output(out, instance) {\n    bytes(out);\n    const min = instance.outputLen;\n    if (out.length < min) {\n        throw new Error(`digestInto() expects output buffer of length at least ${min}`);\n    }\n}\nexport { number, bool, bytes, hash, exists, output };\nconst assert = { number, bool, bytes, hash, exists, output };\nexport default assert;\n//# sourceMappingURL=_assert.js.map","export const crypto = typeof globalThis === 'object' && 'crypto' in globalThis ? globalThis.crypto : undefined;\n//# sourceMappingURL=crypto.js.map","/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// We use WebCrypto aka globalThis.crypto, which exists in browsers and node.js 16+.\n// node.js versions earlier than v19 don't declare it in global scope.\n// For node.js, package.json#exports field mapping rewrites import\n// from `crypto` to `cryptoNode`, which imports native module.\n// Makes the utils un-importable in browsers without a bundler.\n// Once node.js 18 is deprecated (2025-04-30), we can just drop the import.\nimport { crypto } from '@noble/hashes/crypto';\nimport { bytes as abytes } from './_assert.js';\n// export { isBytes } from './_assert.js';\n// We can't reuse isBytes from _assert, because somehow this causes huge perf issues\nexport function isBytes(a) {\n    return (a instanceof Uint8Array ||\n        (a != null && typeof a === 'object' && a.constructor.name === 'Uint8Array'));\n}\n// Cast array to different type\nexport const u8 = (arr) => new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\nexport const u32 = (arr) => new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\n// Cast array to view\nexport const createView = (arr) => new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n// The rotate right (circular right shift) operation for uint32\nexport const rotr = (word, shift) => (word << (32 - shift)) | (word >>> shift);\n// The rotate left (circular left shift) operation for uint32\nexport const rotl = (word, shift) => (word << shift) | ((word >>> (32 - shift)) >>> 0);\nexport const isLE = new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44;\n// The byte swap operation for uint32\nexport const byteSwap = (word) => ((word << 24) & 0xff000000) |\n    ((word << 8) & 0xff0000) |\n    ((word >>> 8) & 0xff00) |\n    ((word >>> 24) & 0xff);\n// Conditionally byte swap if on a big-endian platform\nexport const byteSwapIfBE = isLE ? (n) => n : (n) => byteSwap(n);\n// In place byte swap for Uint32Array\nexport function byteSwap32(arr) {\n    for (let i = 0; i < arr.length; i++) {\n        arr[i] = byteSwap(arr[i]);\n    }\n}\n// Array where index 0xf0 (240) is mapped to string 'f0'\nconst hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) => i.toString(16).padStart(2, '0'));\n/**\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nexport function bytesToHex(bytes) {\n    abytes(bytes);\n    // pre-caching improves the speed 6x\n    let hex = '';\n    for (let i = 0; i < bytes.length; i++) {\n        hex += hexes[bytes[i]];\n    }\n    return hex;\n}\n// We use optimized technique to convert hex string to byte array\nconst asciis = { _0: 48, _9: 57, _A: 65, _F: 70, _a: 97, _f: 102 };\nfunction asciiToBase16(char) {\n    if (char >= asciis._0 && char <= asciis._9)\n        return char - asciis._0;\n    if (char >= asciis._A && char <= asciis._F)\n        return char - (asciis._A - 10);\n    if (char >= asciis._a && char <= asciis._f)\n        return char - (asciis._a - 10);\n    return;\n}\n/**\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nexport function hexToBytes(hex) {\n    if (typeof hex !== 'string')\n        throw new Error('hex string expected, got ' + typeof hex);\n    const hl = hex.length;\n    const al = hl / 2;\n    if (hl % 2)\n        throw new Error('padded hex string expected, got unpadded hex of length ' + hl);\n    const array = new Uint8Array(al);\n    for (let ai = 0, hi = 0; ai < al; ai++, hi += 2) {\n        const n1 = asciiToBase16(hex.charCodeAt(hi));\n        const n2 = asciiToBase16(hex.charCodeAt(hi + 1));\n        if (n1 === undefined || n2 === undefined) {\n            const char = hex[hi] + hex[hi + 1];\n            throw new Error('hex string expected, got non-hex character \"' + char + '\" at index ' + hi);\n        }\n        array[ai] = n1 * 16 + n2;\n    }\n    return array;\n}\n// There is no setImmediate in browser and setTimeout is slow.\n// call of async fn will return Promise, which will be fullfiled only on\n// next scheduler queue processing step and this is exactly what we need.\nexport const nextTick = async () => { };\n// Returns control to thread each 'tick' ms to avoid blocking\nexport async function asyncLoop(iters, tick, cb) {\n    let ts = Date.now();\n    for (let i = 0; i < iters; i++) {\n        cb(i);\n        // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n        const diff = Date.now() - ts;\n        if (diff >= 0 && diff < tick)\n            continue;\n        await nextTick();\n        ts += diff;\n    }\n}\n/**\n * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])\n */\nexport function utf8ToBytes(str) {\n    if (typeof str !== 'string')\n        throw new Error(`utf8ToBytes expected string, got ${typeof str}`);\n    return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\n/**\n * Normalizes (non-hex) string or Uint8Array to Uint8Array.\n * Warning: when Uint8Array is passed, it would NOT get copied.\n * Keep in mind for future mutable operations.\n */\nexport function toBytes(data) {\n    if (typeof data === 'string')\n        data = utf8ToBytes(data);\n    abytes(data);\n    return data;\n}\n/**\n * Copies several Uint8Arrays into one.\n */\nexport function concatBytes(...arrays) {\n    let sum = 0;\n    for (let i = 0; i < arrays.length; i++) {\n        const a = arrays[i];\n        abytes(a);\n        sum += a.length;\n    }\n    const res = new Uint8Array(sum);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const a = arrays[i];\n        res.set(a, pad);\n        pad += a.length;\n    }\n    return res;\n}\n// For runtime check if class implements interface\nexport class Hash {\n    // Safe version that clones internal state\n    clone() {\n        return this._cloneInto();\n    }\n}\nconst toStr = {}.toString;\nexport function checkOpts(defaults, opts) {\n    if (opts !== undefined && toStr.call(opts) !== '[object Object]')\n        throw new Error('Options should be object or undefined');\n    const merged = Object.assign(defaults, opts);\n    return merged;\n}\nexport function wrapConstructor(hashCons) {\n    const hashC = (msg) => hashCons().update(toBytes(msg)).digest();\n    const tmp = hashCons();\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = () => hashCons();\n    return hashC;\n}\nexport function wrapConstructorWithOpts(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\nexport function wrapXOFConstructorWithOpts(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\n/**\n * Secure PRNG. Uses `crypto.getRandomValues`, which defers to OS.\n */\nexport function randomBytes(bytesLength = 32) {\n    if (crypto && typeof crypto.getRandomValues === 'function') {\n        return crypto.getRandomValues(new Uint8Array(bytesLength));\n    }\n    // Legacy Node.js compatibility\n    if (crypto && typeof crypto.randomBytes === 'function') {\n        return crypto.randomBytes(bytesLength);\n    }\n    throw new Error('crypto.getRandomValues must be defined');\n}\n//# sourceMappingURL=utils.js.map","import { exists, output } from './_assert.js';\nimport { Hash, createView, toBytes } from './utils.js';\n/**\n * Polyfill for Safari 14\n */\nfunction setBigUint64(view, byteOffset, value, isLE) {\n    if (typeof view.setBigUint64 === 'function')\n        return view.setBigUint64(byteOffset, value, isLE);\n    const _32n = BigInt(32);\n    const _u32_max = BigInt(0xffffffff);\n    const wh = Number((value >> _32n) & _u32_max);\n    const wl = Number(value & _u32_max);\n    const h = isLE ? 4 : 0;\n    const l = isLE ? 0 : 4;\n    view.setUint32(byteOffset + h, wh, isLE);\n    view.setUint32(byteOffset + l, wl, isLE);\n}\n/**\n * Choice: a ? b : c\n */\nexport const Chi = (a, b, c) => (a & b) ^ (~a & c);\n/**\n * Majority function, true if any two inputs is true\n */\nexport const Maj = (a, b, c) => (a & b) ^ (a & c) ^ (b & c);\n/**\n * Merkle-Damgard hash construction base class.\n * Could be used to create MD5, RIPEMD, SHA1, SHA2.\n */\nexport class HashMD extends Hash {\n    constructor(blockLen, outputLen, padOffset, isLE) {\n        super();\n        this.blockLen = blockLen;\n        this.outputLen = outputLen;\n        this.padOffset = padOffset;\n        this.isLE = isLE;\n        this.finished = false;\n        this.length = 0;\n        this.pos = 0;\n        this.destroyed = false;\n        this.buffer = new Uint8Array(blockLen);\n        this.view = createView(this.buffer);\n    }\n    update(data) {\n        exists(this);\n        const { view, buffer, blockLen } = this;\n        data = toBytes(data);\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            // Fast path: we have at least one block in input, cast it to view and process\n            if (take === blockLen) {\n                const dataView = createView(data);\n                for (; blockLen <= len - pos; pos += blockLen)\n                    this.process(dataView, pos);\n                continue;\n            }\n            buffer.set(data.subarray(pos, pos + take), this.pos);\n            this.pos += take;\n            pos += take;\n            if (this.pos === blockLen) {\n                this.process(view, 0);\n                this.pos = 0;\n            }\n        }\n        this.length += data.length;\n        this.roundClean();\n        return this;\n    }\n    digestInto(out) {\n        exists(this);\n        output(out, this);\n        this.finished = true;\n        // Padding\n        // We can avoid allocation of buffer for padding completely if it\n        // was previously not allocated here. But it won't change performance.\n        const { buffer, view, blockLen, isLE } = this;\n        let { pos } = this;\n        // append the bit '1' to the message\n        buffer[pos++] = 0b10000000;\n        this.buffer.subarray(pos).fill(0);\n        // we have less than padOffset left in buffer, so we cannot put length in\n        // current block, need process it and pad again\n        if (this.padOffset > blockLen - pos) {\n            this.process(view, 0);\n            pos = 0;\n        }\n        // Pad until full block byte with zeros\n        for (let i = pos; i < blockLen; i++)\n            buffer[i] = 0;\n        // Note: sha512 requires length to be 128bit integer, but length in JS will overflow before that\n        // You need to write around 2 exabytes (u64_max / 8 / (1024**6)) for this to happen.\n        // So we just write lowest 64 bits of that value.\n        setBigUint64(view, blockLen - 8, BigInt(this.length * 8), isLE);\n        this.process(view, 0);\n        const oview = createView(out);\n        const len = this.outputLen;\n        // NOTE: we do division by 4 later, which should be fused in single op with modulo by JIT\n        if (len % 4)\n            throw new Error('_sha2: outputLen should be aligned to 32bit');\n        const outLen = len / 4;\n        const state = this.get();\n        if (outLen > state.length)\n            throw new Error('_sha2: outputLen bigger than state');\n        for (let i = 0; i < outLen; i++)\n            oview.setUint32(4 * i, state[i], isLE);\n    }\n    digest() {\n        const { buffer, outputLen } = this;\n        this.digestInto(buffer);\n        const res = buffer.slice(0, outputLen);\n        this.destroy();\n        return res;\n    }\n    _cloneInto(to) {\n        to || (to = new this.constructor());\n        to.set(...this.get());\n        const { blockLen, buffer, length, finished, destroyed, pos } = this;\n        to.length = length;\n        to.pos = pos;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        if (length % blockLen)\n            to.buffer.set(buffer);\n        return to;\n    }\n}\n//# sourceMappingURL=_md.js.map","import { HashMD, Chi, Maj } from './_md.js';\nimport { rotr, wrapConstructor } from './utils.js';\n// SHA2-256 need to try 2^128 hashes to execute birthday attack.\n// BTC network is doing 2^67 hashes/sec as per early 2023.\n// Round constants:\n// first 32 bits of the fractional parts of the cube roots of the first 64 primes 2..311)\n// prettier-ignore\nconst SHA256_K = /* @__PURE__ */ new Uint32Array([\n    0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n    0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n    0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n    0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n    0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n    0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n    0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n    0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n]);\n// Initial state:\n// first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19\n// prettier-ignore\nconst SHA256_IV = /* @__PURE__ */ new Uint32Array([\n    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n]);\n// Temporary buffer, not used to store anything between runs\n// Named this way because it matches specification.\nconst SHA256_W = /* @__PURE__ */ new Uint32Array(64);\nexport class SHA256 extends HashMD {\n    constructor() {\n        super(64, 32, 8, false);\n        // We cannot use array here since array allows indexing by variable\n        // which means optimizer/compiler cannot use registers.\n        this.A = SHA256_IV[0] | 0;\n        this.B = SHA256_IV[1] | 0;\n        this.C = SHA256_IV[2] | 0;\n        this.D = SHA256_IV[3] | 0;\n        this.E = SHA256_IV[4] | 0;\n        this.F = SHA256_IV[5] | 0;\n        this.G = SHA256_IV[6] | 0;\n        this.H = SHA256_IV[7] | 0;\n    }\n    get() {\n        const { A, B, C, D, E, F, G, H } = this;\n        return [A, B, C, D, E, F, G, H];\n    }\n    // prettier-ignore\n    set(A, B, C, D, E, F, G, H) {\n        this.A = A | 0;\n        this.B = B | 0;\n        this.C = C | 0;\n        this.D = D | 0;\n        this.E = E | 0;\n        this.F = F | 0;\n        this.G = G | 0;\n        this.H = H | 0;\n    }\n    process(view, offset) {\n        // Extend the first 16 words into the remaining 48 words w[16..63] of the message schedule array\n        for (let i = 0; i < 16; i++, offset += 4)\n            SHA256_W[i] = view.getUint32(offset, false);\n        for (let i = 16; i < 64; i++) {\n            const W15 = SHA256_W[i - 15];\n            const W2 = SHA256_W[i - 2];\n            const s0 = rotr(W15, 7) ^ rotr(W15, 18) ^ (W15 >>> 3);\n            const s1 = rotr(W2, 17) ^ rotr(W2, 19) ^ (W2 >>> 10);\n            SHA256_W[i] = (s1 + SHA256_W[i - 7] + s0 + SHA256_W[i - 16]) | 0;\n        }\n        // Compression function main loop, 64 rounds\n        let { A, B, C, D, E, F, G, H } = this;\n        for (let i = 0; i < 64; i++) {\n            const sigma1 = rotr(E, 6) ^ rotr(E, 11) ^ rotr(E, 25);\n            const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n            const sigma0 = rotr(A, 2) ^ rotr(A, 13) ^ rotr(A, 22);\n            const T2 = (sigma0 + Maj(A, B, C)) | 0;\n            H = G;\n            G = F;\n            F = E;\n            E = (D + T1) | 0;\n            D = C;\n            C = B;\n            B = A;\n            A = (T1 + T2) | 0;\n        }\n        // Add the compressed chunk to the current hash value\n        A = (A + this.A) | 0;\n        B = (B + this.B) | 0;\n        C = (C + this.C) | 0;\n        D = (D + this.D) | 0;\n        E = (E + this.E) | 0;\n        F = (F + this.F) | 0;\n        G = (G + this.G) | 0;\n        H = (H + this.H) | 0;\n        this.set(A, B, C, D, E, F, G, H);\n    }\n    roundClean() {\n        SHA256_W.fill(0);\n    }\n    destroy() {\n        this.set(0, 0, 0, 0, 0, 0, 0, 0);\n        this.buffer.fill(0);\n    }\n}\n// Constants from https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf\nclass SHA224 extends SHA256 {\n    constructor() {\n        super();\n        this.A = 0xc1059ed8 | 0;\n        this.B = 0x367cd507 | 0;\n        this.C = 0x3070dd17 | 0;\n        this.D = 0xf70e5939 | 0;\n        this.E = 0xffc00b31 | 0;\n        this.F = 0x68581511 | 0;\n        this.G = 0x64f98fa7 | 0;\n        this.H = 0xbefa4fa4 | 0;\n        this.outputLen = 28;\n    }\n}\n/**\n * SHA2-256 hash function\n * @param message - data that would be hashed\n */\nexport const sha256 = /* @__PURE__ */ wrapConstructor(() => new SHA256());\n/**\n * SHA2-224 hash function\n */\nexport const sha224 = /* @__PURE__ */ wrapConstructor(() => new SHA224());\n//# sourceMappingURL=sha256.js.map","export var Protocols;\n(function (Protocols) {\n    Protocols[\"Relay\"] = \"relay\";\n    Protocols[\"Store\"] = \"store\";\n    Protocols[\"LightPush\"] = \"lightpush\";\n    Protocols[\"Filter\"] = \"filter\";\n})(Protocols || (Protocols = {}));\nexport var ProtocolError;\n(function (ProtocolError) {\n    /** Could not determine the origin of the fault. Best to check connectivity and try again */\n    ProtocolError[\"GENERIC_FAIL\"] = \"Generic error\";\n    /**\n     * Failure to protobuf encode the message. This is not recoverable and needs\n     * further investigation.\n     */\n    ProtocolError[\"ENCODE_FAILED\"] = \"Failed to encode\";\n    /**\n     * Failure to protobuf decode the message. May be due to a remote peer issue,\n     * ensuring that messages are sent via several peer enable mitigation of this error.\n     */\n    ProtocolError[\"DECODE_FAILED\"] = \"Failed to decode\";\n    /**\n     * The message payload is empty, making the message invalid. Ensure that a non-empty\n     * payload is set on the outgoing message.\n     */\n    ProtocolError[\"EMPTY_PAYLOAD\"] = \"Payload is empty\";\n    /**\n     * The message size is above the maximum message size allowed on the Waku Network.\n     * Compressing the message or using an alternative strategy for large messages is recommended.\n     */\n    ProtocolError[\"SIZE_TOO_BIG\"] = \"Size is too big\";\n    /**\n     * The PubsubTopic passed to the send function is not configured on the Waku node.\n     * Please ensure that the PubsubTopic is used when initializing the Waku node.\n     */\n    ProtocolError[\"TOPIC_NOT_CONFIGURED\"] = \"Topic not configured\";\n    /**\n     * The pubsub topic configured on the decoder does not match the pubsub topic setup on the protocol.\n     * Ensure that the pubsub topic used for decoder creation is the same as the one used for protocol.\n     */\n    ProtocolError[\"TOPIC_DECODER_MISMATCH\"] = \"Topic decoder mismatch\";\n    /**\n     * The topics passed in the decoders do not match each other, or don't exist at all.\n     * Ensure that all the pubsub topics used in the decoders are valid and match each other.\n     */\n    ProtocolError[\"INVALID_DECODER_TOPICS\"] = \"Invalid decoder topics\";\n    /**\n     * Failure to find a peer with suitable protocols. This may due to a connection issue.\n     * Mitigation can be: retrying after a given time period, display connectivity issue\n     * to user or listening for `peer:connected:bootstrap` or `peer:connected:peer-exchange`\n     * on the connection manager before retrying.\n     */\n    ProtocolError[\"NO_PEER_AVAILABLE\"] = \"No peer available\";\n    /**\n     * Failure to find a stream to the peer. This may be because the connection with the peer is not still alive.\n     * Mitigation can be: retrying after a given time period, or mitigation for `NO_PEER_AVAILABLE` can be used.\n     */\n    ProtocolError[\"NO_STREAM_AVAILABLE\"] = \"No stream available\";\n    /**\n     * The remote peer did not behave as expected. Mitigation for `NO_PEER_AVAILABLE`\n     * or `DECODE_FAILED` can be used.\n     */\n    ProtocolError[\"NO_RESPONSE\"] = \"No response received\";\n    /**\n     * The remote peer rejected the message. Information provided by the remote peer\n     * is logged. Review message validity, or mitigation for `NO_PEER_AVAILABLE`\n     * or `DECODE_FAILED` can be used.\n     */\n    ProtocolError[\"REMOTE_PEER_REJECTED\"] = \"Remote peer rejected\";\n    /**\n     * The protocol request timed out without a response. This may be due to a connection issue.\n     * Mitigation can be: retrying after a given time period\n     */\n    ProtocolError[\"REQUEST_TIMEOUT\"] = \"Request timeout\";\n    /**\n     * Missing credentials info message.\n     * nwaku: https://github.com/waku-org/nwaku/blob/c3cb06ac6c03f0f382d3941ea53b330f6a8dd127/waku/waku_rln_relay/group_manager/group_manager_base.nim#L186\n     */\n    ProtocolError[\"RLN_IDENTITY_MISSING\"] = \"Identity credentials are not set\";\n    /**\n     * Membership index missing info message.\n     * nwaku: https://github.com/waku-org/nwaku/blob/c3cb06ac6c03f0f382d3941ea53b330f6a8dd127/waku/waku_rln_relay/group_manager/group_manager_base.nim#L188\n     */\n    ProtocolError[\"RLN_MEMBERSHIP_INDEX\"] = \"Membership index is not set\";\n    /**\n     * Message limit is missing.\n     * nwaku: https://github.com/waku-org/nwaku/blob/c3cb06ac6c03f0f382d3941ea53b330f6a8dd127/waku/waku_rln_relay/group_manager/group_manager_base.nim#L190\n     */\n    ProtocolError[\"RLN_LIMIT_MISSING\"] = \"User message limit is not set\";\n    /**\n     * General proof generation error message.\n     * nwaku: https://github.com/waku-org/nwaku/blob/c3cb06ac6c03f0f382d3941ea53b330f6a8dd127/waku/waku_rln_relay/group_manager/group_manager_base.nim#L201C19-L201C42\n     */\n    ProtocolError[\"RLN_PROOF_GENERATION\"] = \"Proof generation failed\";\n})(ProtocolError || (ProtocolError = {}));\n//# sourceMappingURL=protocols.js.map","export var Tags;\n(function (Tags) {\n    Tags[\"BOOTSTRAP\"] = \"bootstrap\";\n    Tags[\"PEER_EXCHANGE\"] = \"peer-exchange\";\n    Tags[\"LOCAL\"] = \"local-peer-cache\";\n})(Tags || (Tags = {}));\nexport var EPeersByDiscoveryEvents;\n(function (EPeersByDiscoveryEvents) {\n    EPeersByDiscoveryEvents[\"PEER_DISCOVERY_BOOTSTRAP\"] = \"peer:discovery:bootstrap\";\n    EPeersByDiscoveryEvents[\"PEER_DISCOVERY_PEER_EXCHANGE\"] = \"peer:discovery:peer-exchange\";\n    EPeersByDiscoveryEvents[\"PEER_CONNECT_BOOTSTRAP\"] = \"peer:connected:bootstrap\";\n    EPeersByDiscoveryEvents[\"PEER_CONNECT_PEER_EXCHANGE\"] = \"peer:connected:peer-exchange\";\n})(EPeersByDiscoveryEvents || (EPeersByDiscoveryEvents = {}));\nexport var EConnectionStateEvents;\n(function (EConnectionStateEvents) {\n    EConnectionStateEvents[\"CONNECTION_STATUS\"] = \"waku:connection\";\n})(EConnectionStateEvents || (EConnectionStateEvents = {}));\n//# sourceMappingURL=connection_manager.js.map","export const DNS_DISCOVERY_TAG = \"@waku/bootstrap\";\n//# sourceMappingURL=dns_discovery.js.map","/**\n * The default cluster ID for The Waku Network\n */\nexport const DEFAULT_CLUSTER_ID = 1;\n/**\n * DefaultShardInfo is default configuration for The Waku Network.\n */\nexport const DefaultShardInfo = {\n    clusterId: DEFAULT_CLUSTER_ID,\n    shards: [0, 1, 2, 3, 4, 5, 6, 7, 8]\n};\nexport const DefaultNetworkConfig = DefaultShardInfo;\n//# sourceMappingURL=constants.js.map","export var HealthStatus;\n(function (HealthStatus) {\n    HealthStatus[\"Unhealthy\"] = \"Unhealthy\";\n    HealthStatus[\"MinimallyHealthy\"] = \"MinimallyHealthy\";\n    HealthStatus[\"SufficientlyHealthy\"] = \"SufficientlyHealthy\";\n})(HealthStatus || (HealthStatus = {}));\n//# sourceMappingURL=health_manager.js.map","import bases, {} from './util/bases.js';\n/**\n * Turns a `Uint8Array` into a string.\n *\n * Supports `utf8`, `utf-8` and any encoding supported by the multibase module.\n *\n * Also `ascii` which is similar to node's 'binary' encoding.\n */\nexport function toString(array, encoding = 'utf8') {\n    const base = bases[encoding];\n    if (base == null) {\n        throw new Error(`Unsupported encoding \"${encoding}\"`);\n    }\n    // strip multibase prefix\n    return base.encoder.encode(array).substring(1);\n}\n//# sourceMappingURL=to-string.js.map","import { fromString } from \"uint8arrays/from-string\";\nimport { toString } from \"uint8arrays/to-string\";\n/**\n * Convert input to a byte array.\n *\n * Handles both `0x` prefixed and non-prefixed strings.\n */\nexport function hexToBytes(hex) {\n    if (typeof hex === \"string\") {\n        const _hex = hex.replace(/^0x/i, \"\");\n        return fromString(_hex.toLowerCase(), \"base16\");\n    }\n    return hex;\n}\nexport function numberToBytes(value) {\n    const buffer = new ArrayBuffer(8);\n    const view = new DataView(buffer);\n    if (typeof value === \"number\") {\n        view.setFloat64(0, value, false);\n    }\n    else {\n        view.setBigInt64(0, value, false);\n    }\n    return new Uint8Array(buffer);\n}\n/**\n * Convert byte array to hex string (no `0x` prefix).\n */\nexport const bytesToHex = (bytes) => toString(bytes, \"base16\");\n/**\n * Decode byte array to utf-8 string.\n */\nexport const bytesToUtf8 = (b) => toString(b, \"utf8\");\n/**\n * Encode utf-8 string to byte array.\n */\nexport const utf8ToBytes = (s) => fromString(s, \"utf8\");\n/**\n * Concatenate using Uint8Arrays as `Buffer` has a different behavior with `DataView`\n */\nexport function concat(byteArrays, totalLength) {\n    const len = totalLength ?? byteArrays.reduce((acc, curr) => acc + curr.length, 0);\n    const res = new Uint8Array(len);\n    let offset = 0;\n    for (const bytes of byteArrays) {\n        res.set(bytes, offset);\n        offset += bytes.length;\n    }\n    return res;\n}\n//# sourceMappingURL=index.js.map","import { sha256 } from \"@noble/hashes/sha256\";\nimport { DEFAULT_CLUSTER_ID } from \"@waku/interfaces\";\nimport { concat, utf8ToBytes } from \"../../bytes/index.js\";\nimport { isAutoSharding, isStaticSharding } from \"./type_guards.js\";\nexport * from \"./type_guards.js\";\nexport function derivePubsubTopicsFromNetworkConfig(networkConfig) {\n    if (isStaticSharding(networkConfig)) {\n        if (networkConfig.shards.length === 0) {\n            throw new Error(\"Invalid shards configuration: please provide at least one shard\");\n        }\n        return shardInfoToPubsubTopics(networkConfig);\n    }\n    else if (isAutoSharding(networkConfig)) {\n        if (networkConfig.contentTopics.length === 0) {\n            throw new Error(\"Invalid content topics configuration: please provide at least one content topic\");\n        }\n        return networkConfig.contentTopics.map((contentTopic) => contentTopicToPubsubTopic(contentTopic, networkConfig.clusterId));\n    }\n    else {\n        throw new Error(\"Unknown shard config. Please use ShardInfo or ContentTopicInfo\");\n    }\n}\nexport const singleShardInfoToPubsubTopic = (shardInfo) => {\n    if (shardInfo.shard === undefined)\n        throw new Error(\"Invalid shard\");\n    return `/waku/2/rs/${shardInfo.clusterId ?? DEFAULT_CLUSTER_ID}/${shardInfo.shard}`;\n};\nexport const singleShardInfosToShardInfo = (singleShardInfos) => {\n    if (singleShardInfos.length === 0)\n        throw new Error(\"Invalid shard\");\n    const clusterIds = singleShardInfos.map((shardInfo) => shardInfo.clusterId);\n    if (new Set(clusterIds).size !== 1) {\n        throw new Error(\"Passed shard infos have different clusterIds\");\n    }\n    const shards = singleShardInfos\n        .map((shardInfo) => shardInfo.shard)\n        .filter((shard) => shard !== undefined);\n    return {\n        clusterId: singleShardInfos[0].clusterId,\n        shards\n    };\n};\nexport const shardInfoToPubsubTopics = (shardInfo) => {\n    if (\"contentTopics\" in shardInfo && shardInfo.contentTopics) {\n        // Autosharding: explicitly defined content topics\n        return Array.from(new Set(shardInfo.contentTopics.map((contentTopic) => contentTopicToPubsubTopic(contentTopic, shardInfo.clusterId))));\n    }\n    else if (\"shards\" in shardInfo) {\n        // Static sharding\n        if (shardInfo.shards === undefined)\n            throw new Error(\"Invalid shard\");\n        return Array.from(new Set(shardInfo.shards.map((index) => `/waku/2/rs/${shardInfo.clusterId ?? DEFAULT_CLUSTER_ID}/${index}`)));\n    }\n    else if (\"application\" in shardInfo && \"version\" in shardInfo) {\n        // Autosharding: single shard from application and version\n        return [\n            contentTopicToPubsubTopic(`/${shardInfo.application}/${shardInfo.version}/default/default`, shardInfo.clusterId)\n        ];\n    }\n    else {\n        throw new Error(\"Missing required configuration in shard parameters\");\n    }\n};\nexport const pubsubTopicToSingleShardInfo = (pubsubTopics) => {\n    const parts = pubsubTopics.split(\"/\");\n    if (parts.length != 6 ||\n        parts[1] !== \"waku\" ||\n        parts[2] !== \"2\" ||\n        parts[3] !== \"rs\")\n        throw new Error(\"Invalid pubsub topic\");\n    const clusterId = parseInt(parts[4]);\n    const shard = parseInt(parts[5]);\n    if (isNaN(clusterId) || isNaN(shard))\n        throw new Error(\"Invalid clusterId or shard\");\n    return {\n        clusterId,\n        shard\n    };\n};\nexport const pubsubTopicsToShardInfo = (pubsubTopics) => {\n    const shardInfoSet = new Set();\n    const clusterIds = new Set();\n    for (const topic of pubsubTopics) {\n        const { clusterId, shard } = pubsubTopicToSingleShardInfo(topic);\n        shardInfoSet.add(`${clusterId}:${shard}`);\n        clusterIds.add(clusterId);\n    }\n    if (shardInfoSet.size === 0) {\n        throw new Error(\"No valid pubsub topics provided\");\n    }\n    if (clusterIds.size > 1) {\n        throw new Error(\"Pubsub topics from multiple cluster IDs are not supported\");\n    }\n    const clusterId = clusterIds.values().next().value;\n    const shards = Array.from(shardInfoSet).map((info) => parseInt(info.split(\":\")[1]));\n    return {\n        clusterId,\n        shards\n    };\n};\n//TODO: move part of BaseProtocol instead of utils\n// return `ProtocolError.TOPIC_NOT_CONFIGURED` instead of throwing\nexport function ensurePubsubTopicIsConfigured(pubsubTopic, configuredTopics) {\n    if (!configuredTopics.includes(pubsubTopic)) {\n        throw new Error(`Pubsub topic ${pubsubTopic} has not been configured on this instance. Configured topics are: ${configuredTopics}. Please update your configuration by passing in the topic during Waku node instantiation.`);\n    }\n}\n/**\n * Given a string, will throw an error if it is not formatted as a valid content topic for autosharding based on https://rfc.vac.dev/spec/51/\n * @param contentTopic String to validate\n * @returns Object with each content topic field as an attribute\n */\nexport function ensureValidContentTopic(contentTopic) {\n    const parts = contentTopic.split(\"/\");\n    if (parts.length < 5 || parts.length > 6) {\n        throw Error(\"Content topic format is invalid\");\n    }\n    // Validate generation field if present\n    let generation = 0;\n    if (parts.length == 6) {\n        generation = parseInt(parts[1]);\n        if (isNaN(generation)) {\n            throw new Error(\"Invalid generation field in content topic\");\n        }\n        if (generation > 0) {\n            throw new Error(\"Generation greater than 0 is not supported\");\n        }\n    }\n    // Validate remaining fields\n    const fields = parts.splice(-4);\n    // Validate application field\n    if (fields[0].length == 0) {\n        throw new Error(\"Application field cannot be empty\");\n    }\n    // Validate version field\n    if (fields[1].length == 0) {\n        throw new Error(\"Version field cannot be empty\");\n    }\n    // Validate topic name field\n    if (fields[2].length == 0) {\n        throw new Error(\"Topic name field cannot be empty\");\n    }\n    // Validate encoding field\n    if (fields[3].length == 0) {\n        throw new Error(\"Encoding field cannot be empty\");\n    }\n    return {\n        generation,\n        application: fields[0],\n        version: fields[1],\n        topicName: fields[2],\n        encoding: fields[3]\n    };\n}\n/**\n * Given a string, determines which autoshard index to use for its pubsub topic.\n * Based on the algorithm described in the RFC: https://rfc.vac.dev/spec/51//#algorithm\n */\nexport function contentTopicToShardIndex(contentTopic, networkShards = 8) {\n    const { application, version } = ensureValidContentTopic(contentTopic);\n    const digest = sha256(concat([utf8ToBytes(application), utf8ToBytes(version)]));\n    const dataview = new DataView(digest.buffer.slice(-8));\n    return Number(dataview.getBigUint64(0, false) % BigInt(networkShards));\n}\nexport function contentTopicToPubsubTopic(contentTopic, clusterId = DEFAULT_CLUSTER_ID, networkShards = 8) {\n    if (!contentTopic) {\n        throw Error(\"Content topic must be specified\");\n    }\n    const shardIndex = contentTopicToShardIndex(contentTopic, networkShards);\n    return `/waku/2/rs/${clusterId}/${shardIndex}`;\n}\n/**\n * Given an array of content topics, groups them together by their Pubsub topic as derived using the algorithm for autosharding.\n * If any of the content topics are not properly formatted, the function will throw an error.\n */\nexport function contentTopicsByPubsubTopic(contentTopics, clusterId = DEFAULT_CLUSTER_ID, networkShards = 8) {\n    const groupedContentTopics = new Map();\n    for (const contentTopic of contentTopics) {\n        const pubsubTopic = contentTopicToPubsubTopic(contentTopic, clusterId, networkShards);\n        let topics = groupedContentTopics.get(pubsubTopic);\n        if (!topics) {\n            groupedContentTopics.set(pubsubTopic, []);\n            topics = groupedContentTopics.get(pubsubTopic);\n        }\n        topics.push(contentTopic);\n    }\n    return groupedContentTopics;\n}\n/**\n * Used when creating encoders/decoders to determine which pubsub topic to use\n */\nexport function determinePubsubTopic(contentTopic, \n// TODO: make it accept ShardInfo https://github.com/waku-org/js-waku/issues/2086\npubsubTopicShardInfo) {\n    if (typeof pubsubTopicShardInfo == \"string\") {\n        return pubsubTopicShardInfo;\n    }\n    return pubsubTopicShardInfo?.shard !== undefined\n        ? singleShardInfoToPubsubTopic(pubsubTopicShardInfo)\n        : contentTopicToPubsubTopic(contentTopic, pubsubTopicShardInfo?.clusterId ?? DEFAULT_CLUSTER_ID);\n}\n/**\n * Validates sharding configuration and sets defaults where possible.\n * @returns Validated sharding parameters, with any missing values set to defaults\n */\nexport const ensureShardingConfigured = (networkConfig) => {\n    const clusterId = networkConfig.clusterId ?? DEFAULT_CLUSTER_ID;\n    const shards = \"shards\" in networkConfig ? networkConfig.shards : [];\n    const contentTopics = \"contentTopics\" in networkConfig ? networkConfig.contentTopics : [];\n    const isShardsConfigured = shards && shards.length > 0;\n    const isContentTopicsConfigured = contentTopics && contentTopics.length > 0;\n    if (isShardsConfigured) {\n        return {\n            shardInfo: { clusterId, shards },\n            pubsubTopics: shardInfoToPubsubTopics({ clusterId, shards })\n        };\n    }\n    if (isContentTopicsConfigured) {\n        const pubsubTopics = Array.from(new Set(contentTopics.map((topic) => contentTopicToPubsubTopic(topic, clusterId))));\n        const shards = Array.from(new Set(contentTopics.map((topic) => contentTopicToShardIndex(topic))));\n        return {\n            shardInfo: { clusterId, shards },\n            pubsubTopics\n        };\n    }\n    throw new Error(\"Missing minimum required configuration options for static sharding or autosharding.\");\n};\n//# sourceMappingURL=index.js.map","export const decodeRelayShard = (bytes) => {\n    // explicitly converting to Uint8Array to avoid Buffer\n    // https://github.com/libp2p/js-libp2p/issues/2146\n    bytes = new Uint8Array(bytes);\n    if (bytes.length < 3)\n        throw new Error(\"Insufficient data\");\n    const view = new DataView(bytes.buffer);\n    const clusterId = view.getUint16(0);\n    const shards = [];\n    if (bytes.length === 130) {\n        // rsv format (Bit Vector)\n        for (let i = 0; i < 1024; i++) {\n            const byteIndex = Math.floor(i / 8) + 2; // Adjusted for the 2-byte cluster field\n            const bitIndex = 7 - (i % 8);\n            if (view.getUint8(byteIndex) & (1 << bitIndex)) {\n                shards.push(i);\n            }\n        }\n    }\n    else {\n        // rs format (Index List)\n        const numIndices = view.getUint8(2);\n        for (let i = 0, offset = 3; i < numIndices; i++, offset += 2) {\n            if (offset + 1 >= bytes.length)\n                throw new Error(\"Unexpected end of data\");\n            shards.push(view.getUint16(offset));\n        }\n    }\n    return { clusterId, shards };\n};\nexport const encodeRelayShard = (shardInfo) => {\n    const { clusterId, shards } = shardInfo;\n    const totalLength = shards.length >= 64 ? 130 : 3 + 2 * shards.length;\n    const buffer = new ArrayBuffer(totalLength);\n    const view = new DataView(buffer);\n    view.setUint16(0, clusterId);\n    if (shards.length >= 64) {\n        // rsv format (Bit Vector)\n        for (const index of shards) {\n            const byteIndex = Math.floor(index / 8) + 2; // Adjusted for the 2-byte cluster field\n            const bitIndex = 7 - (index % 8);\n            view.setUint8(byteIndex, view.getUint8(byteIndex) | (1 << bitIndex));\n        }\n    }\n    else {\n        // rs format (Index List)\n        view.setUint8(2, shards.length);\n        for (let i = 0, offset = 3; i < shards.length; i++, offset += 2) {\n            view.setUint16(offset, shards[i]);\n        }\n    }\n    return new Uint8Array(buffer);\n};\n//# sourceMappingURL=relay_shard_codec.js.map","export async function delay(ms) {\n    return new Promise((resolve) => setTimeout(resolve, ms));\n}\n//# sourceMappingURL=delay.js.map","import debug from \"debug\";\nconst APP_NAME = \"waku\";\nexport class Logger {\n    _info;\n    _warn;\n    _error;\n    static createDebugNamespace(level, prefix) {\n        return prefix ? `${APP_NAME}:${level}:${prefix}` : `${APP_NAME}:${level}`;\n    }\n    constructor(prefix) {\n        this._info = debug(Logger.createDebugNamespace(\"info\", prefix));\n        this._warn = debug(Logger.createDebugNamespace(\"warn\", prefix));\n        this._error = debug(Logger.createDebugNamespace(\"error\", prefix));\n    }\n    get info() {\n        return this._info;\n    }\n    get warn() {\n        return this._warn;\n    }\n    get error() {\n        return this._error;\n    }\n    log(level, ...args) {\n        const logger = this[level];\n        logger(...args);\n    }\n}\n//# sourceMappingURL=index.js.map","import { proto_message as proto } from \"@waku/proto\";\nimport { determinePubsubTopic, Logger } from \"@waku/utils\";\nconst log = new Logger(\"message:version-0\");\nconst OneMillion = BigInt(1_000_000);\nexport const Version = 0;\nexport { proto };\nexport class DecodedMessage {\n    pubsubTopic;\n    proto;\n    constructor(pubsubTopic, proto) {\n        this.pubsubTopic = pubsubTopic;\n        this.proto = proto;\n    }\n    get ephemeral() {\n        return Boolean(this.proto.ephemeral);\n    }\n    get payload() {\n        return this.proto.payload;\n    }\n    get contentTopic() {\n        return this.proto.contentTopic;\n    }\n    get _rawTimestamp() {\n        return this.proto.timestamp;\n    }\n    get timestamp() {\n        // In the case we receive a value that is bigger than JS's max number,\n        // we catch the error and return undefined.\n        try {\n            if (this.proto.timestamp) {\n                // nanoseconds 10^-9 to milliseconds 10^-3\n                const timestamp = this.proto.timestamp / OneMillion;\n                return new Date(Number(timestamp));\n            }\n            return;\n        }\n        catch (e) {\n            return;\n        }\n    }\n    get meta() {\n        return this.proto.meta;\n    }\n    get version() {\n        // https://rfc.vac.dev/spec/14/\n        // > If omitted, the value SHOULD be interpreted as version 0.\n        return this.proto.version ?? 0;\n    }\n    get rateLimitProof() {\n        return this.proto.rateLimitProof;\n    }\n}\nexport class Encoder {\n    contentTopic;\n    ephemeral;\n    pubsubTopic;\n    metaSetter;\n    constructor(contentTopic, ephemeral = false, pubsubTopic, metaSetter) {\n        this.contentTopic = contentTopic;\n        this.ephemeral = ephemeral;\n        this.pubsubTopic = pubsubTopic;\n        this.metaSetter = metaSetter;\n        if (!contentTopic || contentTopic === \"\") {\n            throw new Error(\"Content topic must be specified\");\n        }\n    }\n    async toWire(message) {\n        return proto.WakuMessage.encode(await this.toProtoObj(message));\n    }\n    async toProtoObj(message) {\n        const timestamp = message.timestamp ?? new Date();\n        const protoMessage = {\n            payload: message.payload,\n            version: Version,\n            contentTopic: this.contentTopic,\n            timestamp: BigInt(timestamp.valueOf()) * OneMillion,\n            meta: undefined,\n            rateLimitProof: message.rateLimitProof,\n            ephemeral: this.ephemeral\n        };\n        if (this.metaSetter) {\n            const meta = this.metaSetter(protoMessage);\n            return { ...protoMessage, meta };\n        }\n        return protoMessage;\n    }\n}\n/**\n * Creates an encoder that encode messages without Waku level encryption or signature.\n *\n * An encoder is used to encode messages in the [14/WAKU2-MESSAGE](https://rfc.vac.dev/spec/14/)\n * format to be sent over the Waku network. The resulting encoder can then be\n * pass to { @link @waku/interfaces!ISender.send } to automatically encode outgoing\n * messages.\n */\nexport function createEncoder({ pubsubTopic, pubsubTopicShardInfo, contentTopic, ephemeral, metaSetter }) {\n    return new Encoder(contentTopic, ephemeral, determinePubsubTopic(contentTopic, pubsubTopic ?? pubsubTopicShardInfo), metaSetter);\n}\nexport class Decoder {\n    pubsubTopic;\n    contentTopic;\n    constructor(pubsubTopic, contentTopic) {\n        this.pubsubTopic = pubsubTopic;\n        this.contentTopic = contentTopic;\n        if (!contentTopic || contentTopic === \"\") {\n            throw new Error(\"Content topic must be specified\");\n        }\n    }\n    fromWireToProtoObj(bytes) {\n        const protoMessage = proto.WakuMessage.decode(bytes);\n        return Promise.resolve({\n            payload: protoMessage.payload,\n            contentTopic: protoMessage.contentTopic,\n            version: protoMessage.version ?? undefined,\n            timestamp: protoMessage.timestamp ?? undefined,\n            meta: protoMessage.meta ?? undefined,\n            rateLimitProof: protoMessage.rateLimitProof ?? undefined,\n            ephemeral: protoMessage.ephemeral ?? false\n        });\n    }\n    async fromProtoObj(pubsubTopic, proto) {\n        // https://rfc.vac.dev/spec/14/\n        // > If omitted, the value SHOULD be interpreted as version 0.\n        if (proto.version ?? 0 !== Version) {\n            log.error(\"Failed to decode due to incorrect version, expected:\", Version, \", actual:\", proto.version);\n            return Promise.resolve(undefined);\n        }\n        return new DecodedMessage(pubsubTopic, proto);\n    }\n}\n/**\n * Creates a decoder that decode messages without Waku level encryption.\n *\n * A decoder is used to decode messages from the [14/WAKU2-MESSAGE](https://rfc.vac.dev/spec/14/)\n * format when received from the Waku network. The resulting decoder can then be\n * pass to { @link @waku/interfaces!IReceiver.subscribe } to automatically decode incoming\n * messages.\n *\n * @param contentTopic The resulting decoder will only decode messages with this content topic.\n */\nexport function createDecoder(contentTopic, pubsubTopicShardInfo) {\n    return new Decoder(determinePubsubTopic(contentTopic, pubsubTopicShardInfo), contentTopic);\n}\n//# sourceMappingURL=version_0.js.map","/**\n * @packageDocumentation\n *\n * For when you need a one-liner to collect iterable values.\n *\n * @example\n *\n * ```javascript\n * import all from 'it-all'\n *\n * // This can also be an iterator, etc\n * const values = function * () {\n *   yield * [0, 1, 2, 3, 4]\n * }\n *\n * const arr = all(values)\n *\n * console.info(arr) // 0, 1, 2, 3, 4\n * ```\n *\n * Async sources must be awaited:\n *\n * ```javascript\n * const values = async function * () {\n *   yield * [0, 1, 2, 3, 4]\n * }\n *\n * const arr = await all(values())\n *\n * console.info(arr) // 0, 1, 2, 3, 4\n * ```\n */\nfunction isAsyncIterable(thing) {\n    return thing[Symbol.asyncIterator] != null;\n}\nfunction all(source) {\n    if (isAsyncIterable(source)) {\n        return (async () => {\n            const arr = [];\n            for await (const entry of source) {\n                arr.push(entry);\n            }\n            return arr;\n        })();\n    }\n    const arr = [];\n    for (const entry of source) {\n        arr.push(entry);\n    }\n    return arr;\n}\nexport default all;\n//# sourceMappingURL=index.js.map","import { allocUnsafe } from '#alloc';\nimport { asUint8Array } from '#util/as-uint8array';\n/**\n * Returns a new Uint8Array created by concatenating the passed Uint8Arrays\n */\nexport function concat(arrays, length) {\n    if (length == null) {\n        length = arrays.reduce((acc, curr) => acc + curr.length, 0);\n    }\n    const output = allocUnsafe(length);\n    let offset = 0;\n    for (const arr of arrays) {\n        output.set(arr, offset);\n        offset += arr.length;\n    }\n    return asUint8Array(output);\n}\n//# sourceMappingURL=concat.js.map","/**\n * Returns true if the two passed Uint8Arrays have the same content\n */\nexport function equals(a, b) {\n    if (a === b) {\n        return true;\n    }\n    if (a.byteLength !== b.byteLength) {\n        return false;\n    }\n    for (let i = 0; i < a.byteLength; i++) {\n        if (a[i] !== b[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n//# sourceMappingURL=equals.js.map","/**\n * @packageDocumentation\n *\n * A class that lets you do operations over a list of Uint8Arrays without\n * copying them.\n *\n * ```js\n * import { Uint8ArrayList } from 'uint8arraylist'\n *\n * const list = new Uint8ArrayList()\n * list.append(Uint8Array.from([0, 1, 2]))\n * list.append(Uint8Array.from([3, 4, 5]))\n *\n * list.subarray()\n * // -> Uint8Array([0, 1, 2, 3, 4, 5])\n *\n * list.consume(3)\n * list.subarray()\n * // -> Uint8Array([3, 4, 5])\n *\n * // you can also iterate over the list\n * for (const buf of list) {\n *   // ..do something with `buf`\n * }\n *\n * list.subarray(0, 1)\n * // -> Uint8Array([0])\n * ```\n *\n * ## Converting Uint8ArrayLists to Uint8Arrays\n *\n * There are two ways to turn a `Uint8ArrayList` into a `Uint8Array` - `.slice` and `.subarray` and one way to turn a `Uint8ArrayList` into a `Uint8ArrayList` with different contents - `.sublist`.\n *\n * ### slice\n *\n * Slice follows the same semantics as [Uint8Array.slice](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/slice) in that it creates a new `Uint8Array` and copies bytes into it using an optional offset & length.\n *\n * ```js\n * const list = new Uint8ArrayList()\n * list.append(Uint8Array.from([0, 1, 2]))\n * list.append(Uint8Array.from([3, 4, 5]))\n *\n * list.slice(0, 1)\n * // -> Uint8Array([0])\n * ```\n *\n * ### subarray\n *\n * Subarray attempts to follow the same semantics as [Uint8Array.subarray](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/subarray) with one important different - this is a no-copy operation, unless the requested bytes span two internal buffers in which case it is a copy operation.\n *\n * ```js\n * const list = new Uint8ArrayList()\n * list.append(Uint8Array.from([0, 1, 2]))\n * list.append(Uint8Array.from([3, 4, 5]))\n *\n * list.subarray(0, 1)\n * // -> Uint8Array([0]) - no-copy\n *\n * list.subarray(2, 5)\n * // -> Uint8Array([2, 3, 4]) - copy\n * ```\n *\n * ### sublist\n *\n * Sublist creates and returns a new `Uint8ArrayList` that shares the underlying buffers with the original so is always a no-copy operation.\n *\n * ```js\n * const list = new Uint8ArrayList()\n * list.append(Uint8Array.from([0, 1, 2]))\n * list.append(Uint8Array.from([3, 4, 5]))\n *\n * list.sublist(0, 1)\n * // -> Uint8ArrayList([0]) - no-copy\n *\n * list.sublist(2, 5)\n * // -> Uint8ArrayList([2], [3, 4]) - no-copy\n * ```\n *\n * ## Inspiration\n *\n * Borrows liberally from [bl](https://www.npmjs.com/package/bl) but only uses native JS types.\n */\nimport { allocUnsafe, alloc } from 'uint8arrays/alloc';\nimport { concat } from 'uint8arrays/concat';\nimport { equals } from 'uint8arrays/equals';\nconst symbol = Symbol.for('@achingbrain/uint8arraylist');\nfunction findBufAndOffset(bufs, index) {\n    if (index == null || index < 0) {\n        throw new RangeError('index is out of bounds');\n    }\n    let offset = 0;\n    for (const buf of bufs) {\n        const bufEnd = offset + buf.byteLength;\n        if (index < bufEnd) {\n            return {\n                buf,\n                index: index - offset\n            };\n        }\n        offset = bufEnd;\n    }\n    throw new RangeError('index is out of bounds');\n}\n/**\n * Check if object is a CID instance\n *\n * @example\n *\n * ```js\n * import { isUint8ArrayList, Uint8ArrayList } from 'uint8arraylist'\n *\n * isUint8ArrayList(true) // false\n * isUint8ArrayList([]) // false\n * isUint8ArrayList(new Uint8ArrayList()) // true\n * ```\n */\nexport function isUint8ArrayList(value) {\n    return Boolean(value?.[symbol]);\n}\nexport class Uint8ArrayList {\n    bufs;\n    length;\n    [symbol] = true;\n    constructor(...data) {\n        this.bufs = [];\n        this.length = 0;\n        if (data.length > 0) {\n            this.appendAll(data);\n        }\n    }\n    *[Symbol.iterator]() {\n        yield* this.bufs;\n    }\n    get byteLength() {\n        return this.length;\n    }\n    /**\n     * Add one or more `bufs` to the end of this Uint8ArrayList\n     */\n    append(...bufs) {\n        this.appendAll(bufs);\n    }\n    /**\n     * Add all `bufs` to the end of this Uint8ArrayList\n     */\n    appendAll(bufs) {\n        let length = 0;\n        for (const buf of bufs) {\n            if (buf instanceof Uint8Array) {\n                length += buf.byteLength;\n                this.bufs.push(buf);\n            }\n            else if (isUint8ArrayList(buf)) {\n                length += buf.byteLength;\n                this.bufs.push(...buf.bufs);\n            }\n            else {\n                throw new Error('Could not append value, must be an Uint8Array or a Uint8ArrayList');\n            }\n        }\n        this.length += length;\n    }\n    /**\n     * Add one or more `bufs` to the start of this Uint8ArrayList\n     */\n    prepend(...bufs) {\n        this.prependAll(bufs);\n    }\n    /**\n     * Add all `bufs` to the start of this Uint8ArrayList\n     */\n    prependAll(bufs) {\n        let length = 0;\n        for (const buf of bufs.reverse()) {\n            if (buf instanceof Uint8Array) {\n                length += buf.byteLength;\n                this.bufs.unshift(buf);\n            }\n            else if (isUint8ArrayList(buf)) {\n                length += buf.byteLength;\n                this.bufs.unshift(...buf.bufs);\n            }\n            else {\n                throw new Error('Could not prepend value, must be an Uint8Array or a Uint8ArrayList');\n            }\n        }\n        this.length += length;\n    }\n    /**\n     * Read the value at `index`\n     */\n    get(index) {\n        const res = findBufAndOffset(this.bufs, index);\n        return res.buf[res.index];\n    }\n    /**\n     * Set the value at `index` to `value`\n     */\n    set(index, value) {\n        const res = findBufAndOffset(this.bufs, index);\n        res.buf[res.index] = value;\n    }\n    /**\n     * Copy bytes from `buf` to the index specified by `offset`\n     */\n    write(buf, offset = 0) {\n        if (buf instanceof Uint8Array) {\n            for (let i = 0; i < buf.length; i++) {\n                this.set(offset + i, buf[i]);\n            }\n        }\n        else if (isUint8ArrayList(buf)) {\n            for (let i = 0; i < buf.length; i++) {\n                this.set(offset + i, buf.get(i));\n            }\n        }\n        else {\n            throw new Error('Could not write value, must be an Uint8Array or a Uint8ArrayList');\n        }\n    }\n    /**\n     * Remove bytes from the front of the pool\n     */\n    consume(bytes) {\n        // first, normalize the argument, in accordance with how Buffer does it\n        bytes = Math.trunc(bytes);\n        // do nothing if not a positive number\n        if (Number.isNaN(bytes) || bytes <= 0) {\n            return;\n        }\n        // if consuming all bytes, skip iterating\n        if (bytes === this.byteLength) {\n            this.bufs = [];\n            this.length = 0;\n            return;\n        }\n        while (this.bufs.length > 0) {\n            if (bytes >= this.bufs[0].byteLength) {\n                bytes -= this.bufs[0].byteLength;\n                this.length -= this.bufs[0].byteLength;\n                this.bufs.shift();\n            }\n            else {\n                this.bufs[0] = this.bufs[0].subarray(bytes);\n                this.length -= bytes;\n                break;\n            }\n        }\n    }\n    /**\n     * Extracts a section of an array and returns a new array.\n     *\n     * This is a copy operation as it is with Uint8Arrays and Arrays\n     * - note this is different to the behaviour of Node Buffers.\n     */\n    slice(beginInclusive, endExclusive) {\n        const { bufs, length } = this._subList(beginInclusive, endExclusive);\n        return concat(bufs, length);\n    }\n    /**\n     * Returns a alloc from the given start and end element index.\n     *\n     * In the best case where the data extracted comes from a single Uint8Array\n     * internally this is a no-copy operation otherwise it is a copy operation.\n     */\n    subarray(beginInclusive, endExclusive) {\n        const { bufs, length } = this._subList(beginInclusive, endExclusive);\n        if (bufs.length === 1) {\n            return bufs[0];\n        }\n        return concat(bufs, length);\n    }\n    /**\n     * Returns a allocList from the given start and end element index.\n     *\n     * This is a no-copy operation.\n     */\n    sublist(beginInclusive, endExclusive) {\n        const { bufs, length } = this._subList(beginInclusive, endExclusive);\n        const list = new Uint8ArrayList();\n        list.length = length;\n        // don't loop, just set the bufs\n        list.bufs = [...bufs];\n        return list;\n    }\n    _subList(beginInclusive, endExclusive) {\n        beginInclusive = beginInclusive ?? 0;\n        endExclusive = endExclusive ?? this.length;\n        if (beginInclusive < 0) {\n            beginInclusive = this.length + beginInclusive;\n        }\n        if (endExclusive < 0) {\n            endExclusive = this.length + endExclusive;\n        }\n        if (beginInclusive < 0 || endExclusive > this.length) {\n            throw new RangeError('index is out of bounds');\n        }\n        if (beginInclusive === endExclusive) {\n            return { bufs: [], length: 0 };\n        }\n        if (beginInclusive === 0 && endExclusive === this.length) {\n            return { bufs: this.bufs, length: this.length };\n        }\n        const bufs = [];\n        let offset = 0;\n        for (let i = 0; i < this.bufs.length; i++) {\n            const buf = this.bufs[i];\n            const bufStart = offset;\n            const bufEnd = bufStart + buf.byteLength;\n            // for next loop\n            offset = bufEnd;\n            if (beginInclusive >= bufEnd) {\n                // start after this buf\n                continue;\n            }\n            const sliceStartInBuf = beginInclusive >= bufStart && beginInclusive < bufEnd;\n            const sliceEndsInBuf = endExclusive > bufStart && endExclusive <= bufEnd;\n            if (sliceStartInBuf && sliceEndsInBuf) {\n                // slice is wholly contained within this buffer\n                if (beginInclusive === bufStart && endExclusive === bufEnd) {\n                    // requested whole buffer\n                    bufs.push(buf);\n                    break;\n                }\n                // requested part of buffer\n                const start = beginInclusive - bufStart;\n                bufs.push(buf.subarray(start, start + (endExclusive - beginInclusive)));\n                break;\n            }\n            if (sliceStartInBuf) {\n                // slice starts in this buffer\n                if (beginInclusive === 0) {\n                    // requested whole buffer\n                    bufs.push(buf);\n                    continue;\n                }\n                // requested part of buffer\n                bufs.push(buf.subarray(beginInclusive - bufStart));\n                continue;\n            }\n            if (sliceEndsInBuf) {\n                if (endExclusive === bufEnd) {\n                    // requested whole buffer\n                    bufs.push(buf);\n                    break;\n                }\n                // requested part of buffer\n                bufs.push(buf.subarray(0, endExclusive - bufStart));\n                break;\n            }\n            // slice started before this buffer and ends after it\n            bufs.push(buf);\n        }\n        return { bufs, length: endExclusive - beginInclusive };\n    }\n    indexOf(search, offset = 0) {\n        if (!isUint8ArrayList(search) && !(search instanceof Uint8Array)) {\n            throw new TypeError('The \"value\" argument must be a Uint8ArrayList or Uint8Array');\n        }\n        const needle = search instanceof Uint8Array ? search : search.subarray();\n        offset = Number(offset ?? 0);\n        if (isNaN(offset)) {\n            offset = 0;\n        }\n        if (offset < 0) {\n            offset = this.length + offset;\n        }\n        if (offset < 0) {\n            offset = 0;\n        }\n        if (search.length === 0) {\n            return offset > this.length ? this.length : offset;\n        }\n        // https://en.wikipedia.org/wiki/Boyer%E2%80%93Moore_string-search_algorithm\n        const M = needle.byteLength;\n        if (M === 0) {\n            throw new TypeError('search must be at least 1 byte long');\n        }\n        // radix\n        const radix = 256;\n        const rightmostPositions = new Int32Array(radix);\n        // position of the rightmost occurrence of the byte c in the pattern\n        for (let c = 0; c < radix; c++) {\n            // -1 for bytes not in pattern\n            rightmostPositions[c] = -1;\n        }\n        for (let j = 0; j < M; j++) {\n            // rightmost position for bytes in pattern\n            rightmostPositions[needle[j]] = j;\n        }\n        // Return offset of first match, -1 if no match\n        const right = rightmostPositions;\n        const lastIndex = this.byteLength - needle.byteLength;\n        const lastPatIndex = needle.byteLength - 1;\n        let skip;\n        for (let i = offset; i <= lastIndex; i += skip) {\n            skip = 0;\n            for (let j = lastPatIndex; j >= 0; j--) {\n                const char = this.get(i + j);\n                if (needle[j] !== char) {\n                    skip = Math.max(1, j - right[char]);\n                    break;\n                }\n            }\n            if (skip === 0) {\n                return i;\n            }\n        }\n        return -1;\n    }\n    getInt8(byteOffset) {\n        const buf = this.subarray(byteOffset, byteOffset + 1);\n        const view = new DataView(buf.buffer, buf.byteOffset, buf.byteLength);\n        return view.getInt8(0);\n    }\n    setInt8(byteOffset, value) {\n        const buf = allocUnsafe(1);\n        const view = new DataView(buf.buffer, buf.byteOffset, buf.byteLength);\n        view.setInt8(0, value);\n        this.write(buf, byteOffset);\n    }\n    getInt16(byteOffset, littleEndian) {\n        const buf = this.subarray(byteOffset, byteOffset + 2);\n        const view = new DataView(buf.buffer, buf.byteOffset, buf.byteLength);\n        return view.getInt16(0, littleEndian);\n    }\n    setInt16(byteOffset, value, littleEndian) {\n        const buf = alloc(2);\n        const view = new DataView(buf.buffer, buf.byteOffset, buf.byteLength);\n        view.setInt16(0, value, littleEndian);\n        this.write(buf, byteOffset);\n    }\n    getInt32(byteOffset, littleEndian) {\n        const buf = this.subarray(byteOffset, byteOffset + 4);\n        const view = new DataView(buf.buffer, buf.byteOffset, buf.byteLength);\n        return view.getInt32(0, littleEndian);\n    }\n    setInt32(byteOffset, value, littleEndian) {\n        const buf = alloc(4);\n        const view = new DataView(buf.buffer, buf.byteOffset, buf.byteLength);\n        view.setInt32(0, value, littleEndian);\n        this.write(buf, byteOffset);\n    }\n    getBigInt64(byteOffset, littleEndian) {\n        const buf = this.subarray(byteOffset, byteOffset + 8);\n        const view = new DataView(buf.buffer, buf.byteOffset, buf.byteLength);\n        return view.getBigInt64(0, littleEndian);\n    }\n    setBigInt64(byteOffset, value, littleEndian) {\n        const buf = alloc(8);\n        const view = new DataView(buf.buffer, buf.byteOffset, buf.byteLength);\n        view.setBigInt64(0, value, littleEndian);\n        this.write(buf, byteOffset);\n    }\n    getUint8(byteOffset) {\n        const buf = this.subarray(byteOffset, byteOffset + 1);\n        const view = new DataView(buf.buffer, buf.byteOffset, buf.byteLength);\n        return view.getUint8(0);\n    }\n    setUint8(byteOffset, value) {\n        const buf = allocUnsafe(1);\n        const view = new DataView(buf.buffer, buf.byteOffset, buf.byteLength);\n        view.setUint8(0, value);\n        this.write(buf, byteOffset);\n    }\n    getUint16(byteOffset, littleEndian) {\n        const buf = this.subarray(byteOffset, byteOffset + 2);\n        const view = new DataView(buf.buffer, buf.byteOffset, buf.byteLength);\n        return view.getUint16(0, littleEndian);\n    }\n    setUint16(byteOffset, value, littleEndian) {\n        const buf = alloc(2);\n        const view = new DataView(buf.buffer, buf.byteOffset, buf.byteLength);\n        view.setUint16(0, value, littleEndian);\n        this.write(buf, byteOffset);\n    }\n    getUint32(byteOffset, littleEndian) {\n        const buf = this.subarray(byteOffset, byteOffset + 4);\n        const view = new DataView(buf.buffer, buf.byteOffset, buf.byteLength);\n        return view.getUint32(0, littleEndian);\n    }\n    setUint32(byteOffset, value, littleEndian) {\n        const buf = alloc(4);\n        const view = new DataView(buf.buffer, buf.byteOffset, buf.byteLength);\n        view.setUint32(0, value, littleEndian);\n        this.write(buf, byteOffset);\n    }\n    getBigUint64(byteOffset, littleEndian) {\n        const buf = this.subarray(byteOffset, byteOffset + 8);\n        const view = new DataView(buf.buffer, buf.byteOffset, buf.byteLength);\n        return view.getBigUint64(0, littleEndian);\n    }\n    setBigUint64(byteOffset, value, littleEndian) {\n        const buf = alloc(8);\n        const view = new DataView(buf.buffer, buf.byteOffset, buf.byteLength);\n        view.setBigUint64(0, value, littleEndian);\n        this.write(buf, byteOffset);\n    }\n    getFloat32(byteOffset, littleEndian) {\n        const buf = this.subarray(byteOffset, byteOffset + 4);\n        const view = new DataView(buf.buffer, buf.byteOffset, buf.byteLength);\n        return view.getFloat32(0, littleEndian);\n    }\n    setFloat32(byteOffset, value, littleEndian) {\n        const buf = alloc(4);\n        const view = new DataView(buf.buffer, buf.byteOffset, buf.byteLength);\n        view.setFloat32(0, value, littleEndian);\n        this.write(buf, byteOffset);\n    }\n    getFloat64(byteOffset, littleEndian) {\n        const buf = this.subarray(byteOffset, byteOffset + 8);\n        const view = new DataView(buf.buffer, buf.byteOffset, buf.byteLength);\n        return view.getFloat64(0, littleEndian);\n    }\n    setFloat64(byteOffset, value, littleEndian) {\n        const buf = alloc(8);\n        const view = new DataView(buf.buffer, buf.byteOffset, buf.byteLength);\n        view.setFloat64(0, value, littleEndian);\n        this.write(buf, byteOffset);\n    }\n    equals(other) {\n        if (other == null) {\n            return false;\n        }\n        if (!(other instanceof Uint8ArrayList)) {\n            return false;\n        }\n        if (other.bufs.length !== this.bufs.length) {\n            return false;\n        }\n        for (let i = 0; i < this.bufs.length; i++) {\n            if (!equals(this.bufs[i], other.bufs[i])) {\n                return false;\n            }\n        }\n        return true;\n    }\n    /**\n     * Create a Uint8ArrayList from a pre-existing list of Uint8Arrays.  Use this\n     * method if you know the total size of all the Uint8Arrays ahead of time.\n     */\n    static fromUint8Arrays(bufs, length) {\n        const list = new Uint8ArrayList();\n        list.bufs = bufs;\n        if (length == null) {\n            length = bufs.reduce((acc, curr) => acc + curr.byteLength, 0);\n        }\n        list.length = length;\n        return list;\n    }\n}\n/*\nfunction indexOf (needle: Uint8Array, haystack: Uint8Array, offset = 0) {\n  for (let i = offset; i < haystack.byteLength; i++) {\n    for (let j = 0; j < needle.length; j++) {\n      if (haystack[i + j] !== needle[j]) {\n        break\n      }\n\n      if (j === needle.byteLength -1) {\n        return i\n      }\n    }\n\n    if (haystack.byteLength - i < needle.byteLength) {\n      break\n    }\n  }\n\n  return -1\n}\n*/\n//# sourceMappingURL=index.js.map","export function isAsyncIterable(thing) {\n    return thing[Symbol.asyncIterator] != null;\n}\n//# sourceMappingURL=utils.js.map","import * as varint from 'uint8-varint';\nimport { Uint8ArrayList } from 'uint8arraylist';\nimport { allocUnsafe } from 'uint8arrays/alloc';\nimport { isAsyncIterable } from './utils.js';\nconst defaultEncoder = (length) => {\n    const lengthLength = varint.encodingLength(length);\n    const lengthBuf = allocUnsafe(lengthLength);\n    varint.encode(length, lengthBuf);\n    defaultEncoder.bytes = lengthLength;\n    return lengthBuf;\n};\ndefaultEncoder.bytes = 0;\nexport function encode(source, options) {\n    options = options ?? {};\n    const encodeLength = options.lengthEncoder ?? defaultEncoder;\n    function* maybeYield(chunk) {\n        // length + data\n        const length = encodeLength(chunk.byteLength);\n        // yield only Uint8Arrays\n        if (length instanceof Uint8Array) {\n            yield length;\n        }\n        else {\n            yield* length;\n        }\n        // yield only Uint8Arrays\n        if (chunk instanceof Uint8Array) {\n            yield chunk;\n        }\n        else {\n            yield* chunk;\n        }\n    }\n    if (isAsyncIterable(source)) {\n        return (async function* () {\n            for await (const chunk of source) {\n                yield* maybeYield(chunk);\n            }\n        })();\n    }\n    return (function* () {\n        for (const chunk of source) {\n            yield* maybeYield(chunk);\n        }\n    })();\n}\nencode.single = (chunk, options) => {\n    options = options ?? {};\n    const encodeLength = options.lengthEncoder ?? defaultEncoder;\n    return new Uint8ArrayList(encodeLength(chunk.byteLength), chunk);\n};\n//# sourceMappingURL=encode.js.map","/**\n * The reported length of the next data message was not a positive integer\n */\nexport class InvalidMessageLengthError extends Error {\n    name = 'InvalidMessageLengthError';\n    code = 'ERR_INVALID_MSG_LENGTH';\n}\n/**\n * The reported length of the next data message was larger than the configured\n * max allowable value\n */\nexport class InvalidDataLengthError extends Error {\n    name = 'InvalidDataLengthError';\n    code = 'ERR_MSG_DATA_TOO_LONG';\n}\n/**\n * The varint used to specify the length of the next data message contained more\n * bytes than the configured max allowable value\n */\nexport class InvalidDataLengthLengthError extends Error {\n    name = 'InvalidDataLengthLengthError';\n    code = 'ERR_MSG_LENGTH_TOO_LONG';\n}\n/**\n * The incoming stream ended before the expected number of bytes were read\n */\nexport class UnexpectedEOFError extends Error {\n    name = 'UnexpectedEOFError';\n    code = 'ERR_UNEXPECTED_EOF';\n}\n//# sourceMappingURL=errors.js.map","/* eslint max-depth: [\"error\", 6] */\nimport * as varint from 'uint8-varint';\nimport { Uint8ArrayList } from 'uint8arraylist';\nimport { InvalidDataLengthError, InvalidDataLengthLengthError, InvalidMessageLengthError, UnexpectedEOFError } from './errors.js';\nimport { isAsyncIterable } from './utils.js';\n// Maximum length of the length section of the message\nexport const MAX_LENGTH_LENGTH = 8; // Varint.encode(Number.MAX_SAFE_INTEGER).length\n// Maximum length of the data section of the message\nexport const MAX_DATA_LENGTH = 1024 * 1024 * 4;\nvar ReadMode;\n(function (ReadMode) {\n    ReadMode[ReadMode[\"LENGTH\"] = 0] = \"LENGTH\";\n    ReadMode[ReadMode[\"DATA\"] = 1] = \"DATA\";\n})(ReadMode || (ReadMode = {}));\nconst defaultDecoder = (buf) => {\n    const length = varint.decode(buf);\n    defaultDecoder.bytes = varint.encodingLength(length);\n    return length;\n};\ndefaultDecoder.bytes = 0;\nexport function decode(source, options) {\n    const buffer = new Uint8ArrayList();\n    let mode = ReadMode.LENGTH;\n    let dataLength = -1;\n    const lengthDecoder = options?.lengthDecoder ?? defaultDecoder;\n    const maxLengthLength = options?.maxLengthLength ?? MAX_LENGTH_LENGTH;\n    const maxDataLength = options?.maxDataLength ?? MAX_DATA_LENGTH;\n    function* maybeYield() {\n        while (buffer.byteLength > 0) {\n            if (mode === ReadMode.LENGTH) {\n                // read length, ignore errors for short reads\n                try {\n                    dataLength = lengthDecoder(buffer);\n                    if (dataLength < 0) {\n                        throw new InvalidMessageLengthError('Invalid message length');\n                    }\n                    if (dataLength > maxDataLength) {\n                        throw new InvalidDataLengthError('Message length too long');\n                    }\n                    const dataLengthLength = lengthDecoder.bytes;\n                    buffer.consume(dataLengthLength);\n                    if (options?.onLength != null) {\n                        options.onLength(dataLength);\n                    }\n                    mode = ReadMode.DATA;\n                }\n                catch (err) {\n                    if (err instanceof RangeError) {\n                        if (buffer.byteLength > maxLengthLength) {\n                            throw new InvalidDataLengthLengthError('Message length length too long');\n                        }\n                        break;\n                    }\n                    throw err;\n                }\n            }\n            if (mode === ReadMode.DATA) {\n                if (buffer.byteLength < dataLength) {\n                    // not enough data, wait for more\n                    break;\n                }\n                const data = buffer.sublist(0, dataLength);\n                buffer.consume(dataLength);\n                if (options?.onData != null) {\n                    options.onData(data);\n                }\n                yield data;\n                mode = ReadMode.LENGTH;\n            }\n        }\n    }\n    if (isAsyncIterable(source)) {\n        return (async function* () {\n            for await (const buf of source) {\n                buffer.append(buf);\n                yield* maybeYield();\n            }\n            if (buffer.byteLength > 0) {\n                throw new UnexpectedEOFError('Unexpected end of input');\n            }\n        })();\n    }\n    return (function* () {\n        for (const buf of source) {\n            buffer.append(buf);\n            yield* maybeYield();\n        }\n        if (buffer.byteLength > 0) {\n            throw new UnexpectedEOFError('Unexpected end of input');\n        }\n    })();\n}\ndecode.fromReader = (reader, options) => {\n    let byteLength = 1; // Read single byte chunks until the length is known\n    const varByteSource = (async function* () {\n        while (true) {\n            try {\n                const { done, value } = await reader.next(byteLength);\n                if (done === true) {\n                    return;\n                }\n                if (value != null) {\n                    yield value;\n                }\n            }\n            catch (err) {\n                if (err.code === 'ERR_UNDER_READ') {\n                    return { done: true, value: null };\n                }\n                throw err;\n            }\n            finally {\n                // Reset the byteLength so we continue to check for varints\n                byteLength = 1;\n            }\n        }\n    }());\n    /**\n     * Once the length has been parsed, read chunk for that length\n     */\n    const onLength = (l) => { byteLength = l; };\n    return decode(varByteSource, {\n        ...(options ?? {}),\n        onLength\n    });\n};\n//# sourceMappingURL=decode.js.map","export default function pDefer() {\n\tconst deferred = {};\n\n\tdeferred.promise = new Promise((resolve, reject) => {\n\t\tdeferred.resolve = resolve;\n\t\tdeferred.reject = reject;\n\t});\n\n\treturn deferred;\n}\n","// ported from https://www.npmjs.com/package/fast-fifo\nclass FixedFIFO {\n    buffer;\n    mask;\n    top;\n    btm;\n    next;\n    constructor(hwm) {\n        if (!(hwm > 0) || ((hwm - 1) & hwm) !== 0) {\n            throw new Error('Max size for a FixedFIFO should be a power of two');\n        }\n        this.buffer = new Array(hwm);\n        this.mask = hwm - 1;\n        this.top = 0;\n        this.btm = 0;\n        this.next = null;\n    }\n    push(data) {\n        if (this.buffer[this.top] !== undefined) {\n            return false;\n        }\n        this.buffer[this.top] = data;\n        this.top = (this.top + 1) & this.mask;\n        return true;\n    }\n    shift() {\n        const last = this.buffer[this.btm];\n        if (last === undefined) {\n            return undefined;\n        }\n        this.buffer[this.btm] = undefined;\n        this.btm = (this.btm + 1) & this.mask;\n        return last;\n    }\n    isEmpty() {\n        return this.buffer[this.btm] === undefined;\n    }\n}\nexport class FIFO {\n    size;\n    hwm;\n    head;\n    tail;\n    constructor(options = {}) {\n        this.hwm = options.splitLimit ?? 16;\n        this.head = new FixedFIFO(this.hwm);\n        this.tail = this.head;\n        this.size = 0;\n    }\n    calculateSize(obj) {\n        if (obj?.byteLength != null) {\n            return obj.byteLength;\n        }\n        return 1;\n    }\n    push(val) {\n        if (val?.value != null) {\n            this.size += this.calculateSize(val.value);\n        }\n        if (!this.head.push(val)) {\n            const prev = this.head;\n            this.head = prev.next = new FixedFIFO(2 * this.head.buffer.length);\n            this.head.push(val);\n        }\n    }\n    shift() {\n        let val = this.tail.shift();\n        if (val === undefined && (this.tail.next != null)) {\n            const next = this.tail.next;\n            this.tail.next = null;\n            this.tail = next;\n            val = this.tail.shift();\n        }\n        if (val?.value != null) {\n            this.size -= this.calculateSize(val.value);\n        }\n        return val;\n    }\n    isEmpty() {\n        return this.head.isEmpty();\n    }\n}\n//# sourceMappingURL=fifo.js.map","/**\n * @packageDocumentation\n *\n * An iterable that you can push values into.\n *\n * @example\n *\n * ```js\n * import { pushable } from 'it-pushable'\n *\n * const source = pushable()\n *\n * setTimeout(() => source.push('hello'), 100)\n * setTimeout(() => source.push('world'), 200)\n * setTimeout(() => source.end(), 300)\n *\n * const start = Date.now()\n *\n * for await (const value of source) {\n *   console.log(`got \"${value}\" after ${Date.now() - start}ms`)\n * }\n * console.log(`done after ${Date.now() - start}ms`)\n *\n * // Output:\n * // got \"hello\" after 105ms\n * // got \"world\" after 207ms\n * // done after 309ms\n * ```\n *\n * @example\n *\n * ```js\n * import { pushableV } from 'it-pushable'\n * import all from 'it-all'\n *\n * const source = pushableV()\n *\n * source.push(1)\n * source.push(2)\n * source.push(3)\n * source.end()\n *\n * console.info(await all(source))\n *\n * // Output:\n * // [ [1, 2, 3] ]\n * ```\n */\nimport deferred from 'p-defer';\nimport { FIFO } from './fifo.js';\nexport class AbortError extends Error {\n    type;\n    code;\n    constructor(message, code) {\n        super(message ?? 'The operation was aborted');\n        this.type = 'aborted';\n        this.code = code ?? 'ABORT_ERR';\n    }\n}\nexport function pushable(options = {}) {\n    const getNext = (buffer) => {\n        const next = buffer.shift();\n        if (next == null) {\n            return { done: true };\n        }\n        if (next.error != null) {\n            throw next.error;\n        }\n        return {\n            done: next.done === true,\n            // @ts-expect-error if done is false, value will be present\n            value: next.value\n        };\n    };\n    return _pushable(getNext, options);\n}\nexport function pushableV(options = {}) {\n    const getNext = (buffer) => {\n        let next;\n        const values = [];\n        while (!buffer.isEmpty()) {\n            next = buffer.shift();\n            if (next == null) {\n                break;\n            }\n            if (next.error != null) {\n                throw next.error;\n            }\n            if (next.done === false) {\n                // @ts-expect-error if done is false value should be pushed\n                values.push(next.value);\n            }\n        }\n        if (next == null) {\n            return { done: true };\n        }\n        return {\n            done: next.done === true,\n            value: values\n        };\n    };\n    return _pushable(getNext, options);\n}\nfunction _pushable(getNext, options) {\n    options = options ?? {};\n    let onEnd = options.onEnd;\n    let buffer = new FIFO();\n    let pushable;\n    let onNext;\n    let ended;\n    let drain = deferred();\n    const waitNext = async () => {\n        try {\n            if (!buffer.isEmpty()) {\n                return getNext(buffer);\n            }\n            if (ended) {\n                return { done: true };\n            }\n            return await new Promise((resolve, reject) => {\n                onNext = (next) => {\n                    onNext = null;\n                    buffer.push(next);\n                    try {\n                        resolve(getNext(buffer));\n                    }\n                    catch (err) {\n                        reject(err);\n                    }\n                    return pushable;\n                };\n            });\n        }\n        finally {\n            if (buffer.isEmpty()) {\n                // settle promise in the microtask queue to give consumers a chance to\n                // await after calling .push\n                queueMicrotask(() => {\n                    drain.resolve();\n                    drain = deferred();\n                });\n            }\n        }\n    };\n    const bufferNext = (next) => {\n        if (onNext != null) {\n            return onNext(next);\n        }\n        buffer.push(next);\n        return pushable;\n    };\n    const bufferError = (err) => {\n        buffer = new FIFO();\n        if (onNext != null) {\n            return onNext({ error: err });\n        }\n        buffer.push({ error: err });\n        return pushable;\n    };\n    const push = (value) => {\n        if (ended) {\n            return pushable;\n        }\n        // @ts-expect-error `byteLength` is not declared on PushType\n        if (options?.objectMode !== true && value?.byteLength == null) {\n            throw new Error('objectMode was not true but tried to push non-Uint8Array value');\n        }\n        return bufferNext({ done: false, value });\n    };\n    const end = (err) => {\n        if (ended)\n            return pushable;\n        ended = true;\n        return (err != null) ? bufferError(err) : bufferNext({ done: true });\n    };\n    const _return = () => {\n        buffer = new FIFO();\n        end();\n        return { done: true };\n    };\n    const _throw = (err) => {\n        end(err);\n        return { done: true };\n    };\n    pushable = {\n        [Symbol.asyncIterator]() { return this; },\n        next: waitNext,\n        return: _return,\n        throw: _throw,\n        push,\n        end,\n        get readableLength() {\n            return buffer.size;\n        },\n        onEmpty: async (options) => {\n            const signal = options?.signal;\n            signal?.throwIfAborted();\n            if (buffer.isEmpty()) {\n                return;\n            }\n            let cancel;\n            let listener;\n            if (signal != null) {\n                cancel = new Promise((resolve, reject) => {\n                    listener = () => {\n                        reject(new AbortError());\n                    };\n                    signal.addEventListener('abort', listener);\n                });\n            }\n            try {\n                await Promise.race([\n                    drain.promise,\n                    cancel\n                ]);\n            }\n            finally {\n                if (listener != null && signal != null) {\n                    signal?.removeEventListener('abort', listener);\n                }\n            }\n        }\n    };\n    if (onEnd == null) {\n        return pushable;\n    }\n    const _pushable = pushable;\n    pushable = {\n        [Symbol.asyncIterator]() { return this; },\n        next() {\n            return _pushable.next();\n        },\n        throw(err) {\n            _pushable.throw(err);\n            if (onEnd != null) {\n                onEnd(err);\n                onEnd = undefined;\n            }\n            return { done: true };\n        },\n        return() {\n            _pushable.return();\n            if (onEnd != null) {\n                onEnd();\n                onEnd = undefined;\n            }\n            return { done: true };\n        },\n        push,\n        end(err) {\n            _pushable.end(err);\n            if (onEnd != null) {\n                onEnd(err);\n                onEnd = undefined;\n            }\n            return pushable;\n        },\n        get readableLength() {\n            return _pushable.readableLength;\n        },\n        onEmpty: (opts) => {\n            return _pushable.onEmpty(opts);\n        }\n    };\n    return pushable;\n}\n//# sourceMappingURL=index.js.map","/**\n * @packageDocumentation\n *\n * Merge several (async)iterables into one, yield values as they arrive.\n *\n * Nb. sources are iterated over in parallel so the order of emitted items is not guaranteed.\n *\n * @example\n *\n * ```javascript\n * import merge from 'it-merge'\n * import all from 'it-all'\n *\n * // This can also be an iterator, generator, etc\n * const values1 = [0, 1, 2, 3, 4]\n * const values2 = [5, 6, 7, 8, 9]\n *\n * const arr = all(merge(values1, values2))\n *\n * console.info(arr) // 0, 1, 2, 3, 4, 5, 6, 7, 8, 9\n * ```\n *\n * Async sources must be awaited:\n *\n * ```javascript\n * import merge from 'it-merge'\n * import all from 'it-all'\n *\n * // This can also be an iterator, async iterator, generator, etc\n * const values1 = async function * () {\n *   yield * [0, 1, 2, 3, 4]\n * }\n * const values2 = async function * () {\n *   yield * [5, 6, 7, 8, 9]\n * }\n *\n * const arr = await all(merge(values1(), values2()))\n *\n * console.info(arr) // 0, 1, 5, 6, 2, 3, 4, 7, 8, 9  <- nb. order is not guaranteed\n * ```\n */\nimport { pushable } from 'it-pushable';\nfunction isAsyncIterable(thing) {\n    return thing[Symbol.asyncIterator] != null;\n}\nfunction merge(...sources) {\n    const syncSources = [];\n    for (const source of sources) {\n        if (!isAsyncIterable(source)) {\n            syncSources.push(source);\n        }\n    }\n    if (syncSources.length === sources.length) {\n        // all sources are synchronous\n        return (function* () {\n            for (const source of syncSources) {\n                yield* source;\n            }\n        })();\n    }\n    return (async function* () {\n        const output = pushable({\n            objectMode: true\n        });\n        void Promise.resolve().then(async () => {\n            try {\n                await Promise.all(sources.map(async (source) => {\n                    for await (const item of source) {\n                        output.push(item);\n                    }\n                }));\n                output.end();\n            }\n            catch (err) {\n                output.end(err);\n            }\n        });\n        yield* output;\n    })();\n}\nexport default merge;\n//# sourceMappingURL=index.js.map","import { pushable } from 'it-pushable';\nimport merge from 'it-merge';\nexport function pipe(first, ...rest) {\n    if (first == null) {\n        throw new Error('Empty pipeline');\n    }\n    // Duplex at start: wrap in function and return duplex source\n    if (isDuplex(first)) {\n        const duplex = first;\n        first = () => duplex.source;\n        // Iterable at start: wrap in function\n    }\n    else if (isIterable(first) || isAsyncIterable(first)) {\n        const source = first;\n        first = () => source;\n    }\n    const fns = [first, ...rest];\n    if (fns.length > 1) {\n        // Duplex at end: use duplex sink\n        if (isDuplex(fns[fns.length - 1])) {\n            fns[fns.length - 1] = fns[fns.length - 1].sink;\n        }\n    }\n    if (fns.length > 2) {\n        // Duplex in the middle, consume source with duplex sink and return duplex source\n        for (let i = 1; i < fns.length - 1; i++) {\n            if (isDuplex(fns[i])) {\n                fns[i] = duplexPipelineFn(fns[i]);\n            }\n        }\n    }\n    return rawPipe(...fns);\n}\nexport const rawPipe = (...fns) => {\n    let res;\n    while (fns.length > 0) {\n        res = fns.shift()(res);\n    }\n    return res;\n};\nconst isAsyncIterable = (obj) => {\n    return obj?.[Symbol.asyncIterator] != null;\n};\nconst isIterable = (obj) => {\n    return obj?.[Symbol.iterator] != null;\n};\nconst isDuplex = (obj) => {\n    if (obj == null) {\n        return false;\n    }\n    return obj.sink != null && obj.source != null;\n};\nconst duplexPipelineFn = (duplex) => {\n    return (source) => {\n        const p = duplex.sink(source);\n        if (p?.then != null) {\n            const stream = pushable({\n                objectMode: true\n            });\n            p.then(() => {\n                stream.end();\n            }, (err) => {\n                stream.end(err);\n            });\n            let sourceWrap;\n            const source = duplex.source;\n            if (isAsyncIterable(source)) {\n                sourceWrap = async function* () {\n                    yield* source;\n                    stream.end();\n                };\n            }\n            else if (isIterable(source)) {\n                sourceWrap = function* () {\n                    yield* source;\n                    stream.end();\n                };\n            }\n            else {\n                throw new Error('Unknown duplex source type - must be Iterable or AsyncIterable');\n            }\n            return merge(stream, sourceWrap());\n        }\n        return duplex.source;\n    };\n};\n//# sourceMappingURL=index.js.map","import { Logger } from \"@waku/utils\";\nimport { selectConnection } from \"./utils.js\";\nconst CONNECTION_TIMEOUT = 5_000;\nconst RETRY_BACKOFF_BASE = 1_000;\nconst MAX_RETRIES = 3;\nexport class StreamManager {\n    multicodec;\n    getConnections;\n    addEventListener;\n    streamPool;\n    log;\n    constructor(multicodec, getConnections, addEventListener) {\n        this.multicodec = multicodec;\n        this.getConnections = getConnections;\n        this.addEventListener = addEventListener;\n        this.log = new Logger(`stream-manager:${multicodec}`);\n        this.streamPool = new Map();\n        this.addEventListener(\"peer:update\", this.handlePeerUpdateStreamPool);\n    }\n    async getStream(peer) {\n        const peerIdStr = peer.id.toString();\n        const streamPromise = this.streamPool.get(peerIdStr);\n        if (!streamPromise) {\n            return this.createStream(peer);\n        }\n        this.streamPool.delete(peerIdStr);\n        this.prepareStream(peer);\n        try {\n            const stream = await streamPromise;\n            if (stream && stream.status !== \"closed\") {\n                return stream;\n            }\n        }\n        catch (error) {\n            this.log.warn(`Failed to get stream for ${peerIdStr} -- `, error);\n            this.log.warn(\"Attempting to create a new stream for the peer\");\n        }\n        return this.createStream(peer);\n    }\n    async createStream(peer, retries = 0) {\n        const connections = this.getConnections(peer.id);\n        const connection = selectConnection(connections);\n        if (!connection) {\n            throw new Error(\"Failed to get a connection to the peer\");\n        }\n        try {\n            return await connection.newStream(this.multicodec);\n        }\n        catch (error) {\n            if (retries < MAX_RETRIES) {\n                const backoff = RETRY_BACKOFF_BASE * Math.pow(2, retries);\n                await new Promise((resolve) => setTimeout(resolve, backoff));\n                return this.createStream(peer, retries + 1);\n            }\n            throw new Error(`Failed to create a new stream for ${peer.id.toString()} -- ` + error);\n        }\n    }\n    prepareStream(peer) {\n        const timeoutPromise = new Promise((resolve) => setTimeout(resolve, CONNECTION_TIMEOUT));\n        const streamPromise = Promise.race([\n            this.createStream(peer),\n            timeoutPromise.then(() => {\n                throw new Error(\"Connection timeout\");\n            })\n        ]).catch((error) => {\n            this.log.error(`Failed to prepare a new stream for ${peer.id.toString()} -- `, error);\n        });\n        this.streamPool.set(peer.id.toString(), streamPromise);\n    }\n    handlePeerUpdateStreamPool = (evt) => {\n        const { peer } = evt.detail;\n        if (peer.protocols.includes(this.multicodec)) {\n            const isConnected = this.isConnectedTo(peer.id);\n            if (isConnected) {\n                this.log.info(`Preemptively opening a stream to ${peer.id.toString()}`);\n                this.prepareStream(peer);\n            }\n            else {\n                const peerIdStr = peer.id.toString();\n                this.streamPool.delete(peerIdStr);\n                this.log.info(`Removed pending stream for disconnected peer ${peerIdStr}`);\n            }\n        }\n    };\n    isConnectedTo(peerId) {\n        const connections = this.getConnections(peerId);\n        return connections.some((connection) => connection.status === \"open\");\n    }\n}\n//# sourceMappingURL=stream_manager.js.map","export function selectConnection(connections) {\n    if (!connections.length)\n        return;\n    if (connections.length === 1)\n        return connections[0];\n    let latestConnection;\n    connections.forEach((connection) => {\n        if (connection.status === \"open\") {\n            if (!latestConnection) {\n                latestConnection = connection;\n            }\n            else if (connection.timeline.open > latestConnection.timeline.open) {\n                latestConnection = connection;\n            }\n        }\n    });\n    return latestConnection;\n}\n//# sourceMappingURL=utils.js.map","import { pubsubTopicsToShardInfo } from \"@waku/utils\";\nimport { getConnectedPeersForProtocolAndShard, getPeersForProtocol, sortPeersByLatency } from \"@waku/utils/libp2p\";\nimport { filterPeersByDiscovery } from \"./filterPeers.js\";\nimport { StreamManager } from \"./stream_manager/index.js\";\n/**\n * A class with predefined helpers, to be used as a base to implement Waku\n * Protocols.\n */\nexport class BaseProtocol {\n    multicodec;\n    components;\n    log;\n    pubsubTopics;\n    addLibp2pEventListener;\n    removeLibp2pEventListener;\n    streamManager;\n    constructor(multicodec, components, log, pubsubTopics) {\n        this.multicodec = multicodec;\n        this.components = components;\n        this.log = log;\n        this.pubsubTopics = pubsubTopics;\n        this.addLibp2pEventListener = components.events.addEventListener.bind(components.events);\n        this.removeLibp2pEventListener = components.events.removeEventListener.bind(components.events);\n        this.streamManager = new StreamManager(multicodec, components.connectionManager.getConnections.bind(components.connectionManager), this.addLibp2pEventListener);\n    }\n    async getStream(peer) {\n        return this.streamManager.getStream(peer);\n    }\n    get peerStore() {\n        return this.components.peerStore;\n    }\n    /**\n     * Returns known peers from the address book (`libp2p.peerStore`) that support\n     * the class protocol. Waku may or may not be currently connected to these\n     * peers.\n     */\n    async allPeers() {\n        return getPeersForProtocol(this.peerStore, [this.multicodec]);\n    }\n    async connectedPeers() {\n        const peers = await this.allPeers();\n        return peers.filter((peer) => {\n            return (this.components.connectionManager.getConnections(peer.id).length > 0);\n        });\n    }\n    /**\n     * Retrieves a list of connected peers that support the protocol. The list is sorted by latency.\n     *\n     * @param numPeers - The total number of peers to retrieve. If 0, all peers are returned.\n     * @param maxBootstrapPeers - The maximum number of bootstrap peers to retrieve.\n  \n    * @returns A list of peers that support the protocol sorted by latency.\n    */\n    async getPeers({ numPeers, maxBootstrapPeers } = {\n        maxBootstrapPeers: 1,\n        numPeers: 0\n    }) {\n        // Retrieve all connected peers that support the protocol & shard (if configured)\n        const connectedPeersForProtocolAndShard = await getConnectedPeersForProtocolAndShard(this.components.connectionManager.getConnections(), this.peerStore, [this.multicodec], pubsubTopicsToShardInfo(this.pubsubTopics));\n        // Filter the peers based on discovery & number of peers requested\n        const filteredPeers = filterPeersByDiscovery(connectedPeersForProtocolAndShard, numPeers, maxBootstrapPeers);\n        // Sort the peers by latency\n        const sortedFilteredPeers = await sortPeersByLatency(this.peerStore, filteredPeers);\n        if (sortedFilteredPeers.length === 0) {\n            this.log.warn(\"No peers found. Ensure you have a connection to the network.\");\n        }\n        if (sortedFilteredPeers.length < numPeers) {\n            this.log.warn(`Only ${sortedFilteredPeers.length} peers found. Requested ${numPeers}.`);\n        }\n        return sortedFilteredPeers;\n    }\n}\n//# sourceMappingURL=base_protocol.js.map","import { bytesToUtf8 } from \"../bytes/index.js\";\nimport { decodeRelayShard } from \"../common/relay_shard_codec.js\";\n/**\n * Returns a pseudo-random peer that supports the given protocol.\n * Useful for protocols such as store and light push\n */\nexport function selectRandomPeer(peers) {\n    if (peers.length === 0)\n        return;\n    const index = Math.round(Math.random() * (peers.length - 1));\n    return peers[index];\n}\n/**\n * Function to sort peers by latency from lowest to highest\n * @param peerStore - The Libp2p PeerStore\n * @param peers - The list of peers to choose from\n * @returns Sorted array of peers by latency\n */\nexport async function sortPeersByLatency(peerStore, peers) {\n    if (peers.length === 0)\n        return [];\n    const results = await Promise.all(peers.map(async (peer) => {\n        try {\n            const pingBytes = (await peerStore.get(peer.id)).metadata.get(\"ping\");\n            if (!pingBytes)\n                return { peer, ping: Infinity };\n            const ping = Number(bytesToUtf8(pingBytes));\n            return { peer, ping };\n        }\n        catch (error) {\n            return { peer, ping: Infinity };\n        }\n    }));\n    // filter out null values\n    const validResults = results.filter((result) => result !== null);\n    return validResults\n        .sort((a, b) => a.ping - b.ping)\n        .map((result) => result.peer);\n}\n/**\n * Returns the list of peers that supports the given protocol.\n */\nexport async function getPeersForProtocol(peerStore, protocols) {\n    const peers = [];\n    await peerStore.forEach((peer) => {\n        for (let i = 0; i < protocols.length; i++) {\n            if (peer.protocols.includes(protocols[i])) {\n                peers.push(peer);\n                break;\n            }\n        }\n    });\n    return peers;\n}\nexport async function getConnectedPeersForProtocolAndShard(connections, peerStore, protocols, shardInfo) {\n    const openConnections = connections.filter((connection) => connection.status === \"open\");\n    const peerPromises = openConnections.map(async (connection) => {\n        const peer = await peerStore.get(connection.remotePeer);\n        const supportsProtocol = protocols.some((protocol) => peer.protocols.includes(protocol));\n        if (supportsProtocol) {\n            if (shardInfo) {\n                const encodedPeerShardInfo = peer.metadata.get(\"shardInfo\");\n                const peerShardInfo = encodedPeerShardInfo && decodeRelayShard(encodedPeerShardInfo);\n                if (peerShardInfo && shardInfo.clusterId === peerShardInfo.clusterId) {\n                    return peer;\n                }\n            }\n            else {\n                return peer;\n            }\n        }\n        return null;\n    });\n    const peersWithNulls = await Promise.all(peerPromises);\n    return peersWithNulls.filter((peer) => peer !== null);\n}\n//# sourceMappingURL=index.js.map","import { Tags } from \"@waku/interfaces\";\n/**\n * Retrieves a list of peers based on the specified criteria:\n * 1. If numPeers is 0, return all peers\n * 2. Bootstrap peers are prioritized\n * 3. Non-bootstrap peers are randomly selected to fill up to numPeers\n *\n * @param peers - The list of peers to filter from.\n * @param numPeers - The total number of peers to retrieve. If 0, all peers are returned, irrespective of `maxBootstrapPeers`.\n * @param maxBootstrapPeers - The maximum number of bootstrap peers to retrieve.\n * @returns An array of peers based on the specified criteria.\n */\nexport function filterPeersByDiscovery(peers, numPeers, maxBootstrapPeers) {\n    // Collect the bootstrap peers up to the specified maximum\n    let bootstrapPeers = peers\n        .filter((peer) => peer.tags.has(Tags.BOOTSTRAP))\n        .slice(0, maxBootstrapPeers);\n    // If numPeers is less than the number of bootstrap peers, adjust the bootstrapPeers array\n    if (numPeers > 0 && numPeers < bootstrapPeers.length) {\n        bootstrapPeers = bootstrapPeers.slice(0, numPeers);\n    }\n    // Collect non-bootstrap peers\n    const nonBootstrapPeers = peers.filter((peer) => !peer.tags.has(Tags.BOOTSTRAP));\n    // If numPeers is 0, return all peers\n    if (numPeers === 0) {\n        return [...bootstrapPeers, ...nonBootstrapPeers];\n    }\n    // Initialize the list of selected peers with the bootstrap peers\n    const selectedPeers = [...bootstrapPeers];\n    // Fill up to numPeers with remaining random peers if needed\n    while (selectedPeers.length < numPeers && nonBootstrapPeers.length > 0) {\n        const randomIndex = Math.floor(Math.random() * nonBootstrapPeers.length);\n        const randomPeer = nonBootstrapPeers.splice(randomIndex, 1)[0];\n        selectedPeers.push(randomPeer);\n    }\n    return selectedPeers;\n}\n//# sourceMappingURL=filterPeers.js.map","const randomUUID = typeof crypto !== 'undefined' && crypto.randomUUID && crypto.randomUUID.bind(crypto);\nexport default {\n  randomUUID\n};","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nlet getRandomValues;\nconst rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nconst byteToHex = [];\n\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).slice(1));\n}\n\nexport function unsafeStringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  return byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]];\n}\n\nfunction stringify(arr, offset = 0) {\n  const uuid = unsafeStringify(arr, offset); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import native from './native.js';\nimport rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  if (native.randomUUID && !buf && !options) {\n    return native.randomUUID();\n  }\n\n  options = options || {};\n  const rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (let i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return unsafeStringify(rnds);\n}\n\nexport default v4;","import { proto_filter_v2 as proto } from \"@waku/proto\";\nimport { v4 as uuid } from \"uuid\";\n/**\n * FilterPushRPC represents a message conforming to the Waku FilterPush protocol.\n * Protocol documentation: https://rfc.vac.dev/spec/12/\n */\nexport class FilterPushRpc {\n    proto;\n    constructor(proto) {\n        this.proto = proto;\n    }\n    static decode(bytes) {\n        const res = proto.MessagePush.decode(bytes);\n        return new FilterPushRpc(res);\n    }\n    encode() {\n        return proto.MessagePush.encode(this.proto);\n    }\n    get wakuMessage() {\n        return this.proto.wakuMessage;\n    }\n    /**\n     * Get the pubsub topic from the FilterPushRpc object.\n     * @returns string\n     */\n    get pubsubTopic() {\n        return this.proto.pubsubTopic;\n    }\n}\nexport class FilterSubscribeRpc {\n    proto;\n    constructor(proto) {\n        this.proto = proto;\n    }\n    static createSubscribeRequest(pubsubTopic, contentTopics) {\n        return new FilterSubscribeRpc({\n            requestId: uuid(),\n            filterSubscribeType: proto.FilterSubscribeRequest.FilterSubscribeType.SUBSCRIBE,\n            pubsubTopic,\n            contentTopics\n        });\n    }\n    static createUnsubscribeRequest(pubsubTopic, contentTopics) {\n        return new FilterSubscribeRpc({\n            requestId: uuid(),\n            filterSubscribeType: proto.FilterSubscribeRequest.FilterSubscribeType.UNSUBSCRIBE,\n            pubsubTopic,\n            contentTopics\n        });\n    }\n    static createUnsubscribeAllRequest(pubsubTopic) {\n        return new FilterSubscribeRpc({\n            requestId: uuid(),\n            filterSubscribeType: proto.FilterSubscribeRequest.FilterSubscribeType.UNSUBSCRIBE_ALL,\n            pubsubTopic,\n            contentTopics: []\n        });\n    }\n    static createSubscriberPingRequest() {\n        return new FilterSubscribeRpc({\n            requestId: uuid(),\n            filterSubscribeType: proto.FilterSubscribeRequest.FilterSubscribeType.SUBSCRIBER_PING,\n            pubsubTopic: \"\",\n            contentTopics: []\n        });\n    }\n    static decode(bytes) {\n        const res = proto.FilterSubscribeRequest.decode(bytes);\n        return new FilterSubscribeRpc(res);\n    }\n    encode() {\n        return proto.FilterSubscribeRequest.encode(this.proto);\n    }\n    get filterSubscribeType() {\n        return this.proto.filterSubscribeType;\n    }\n    get requestId() {\n        return this.proto.requestId;\n    }\n    get pubsubTopic() {\n        return this.proto.pubsubTopic;\n    }\n    get contentTopics() {\n        return this.proto.contentTopics;\n    }\n}\nexport class FilterSubscribeResponse {\n    proto;\n    constructor(proto) {\n        this.proto = proto;\n    }\n    static decode(bytes) {\n        const res = proto.FilterSubscribeResponse.decode(bytes);\n        return new FilterSubscribeResponse(res);\n    }\n    encode() {\n        return proto.FilterSubscribeResponse.encode(this.proto);\n    }\n    get statusCode() {\n        return this.proto.statusCode;\n    }\n    get statusDesc() {\n        return this.proto.statusDesc;\n    }\n    get requestId() {\n        return this.proto.requestId;\n    }\n}\n//# sourceMappingURL=filter_rpc.js.map","import { ProtocolError } from \"@waku/interfaces\";\nimport { Logger } from \"@waku/utils\";\nimport all from \"it-all\";\nimport * as lp from \"it-length-prefixed\";\nimport { pipe } from \"it-pipe\";\nimport { BaseProtocol } from \"../base_protocol.js\";\nimport { FilterPushRpc, FilterSubscribeResponse, FilterSubscribeRpc } from \"./filter_rpc.js\";\nconst log = new Logger(\"filter:v2\");\nexport const FilterCodecs = {\n    SUBSCRIBE: \"/vac/waku/filter-subscribe/2.0.0-beta1\",\n    PUSH: \"/vac/waku/filter-push/2.0.0-beta1\"\n};\nexport class FilterCore extends BaseProtocol {\n    handleIncomingMessage;\n    pubsubTopics;\n    constructor(handleIncomingMessage, pubsubTopics, libp2p) {\n        super(FilterCodecs.SUBSCRIBE, libp2p.components, log, pubsubTopics);\n        this.handleIncomingMessage = handleIncomingMessage;\n        this.pubsubTopics = pubsubTopics;\n        libp2p\n            .handle(FilterCodecs.PUSH, this.onRequest.bind(this), {\n            maxInboundStreams: 100\n        })\n            .catch((e) => {\n            log.error(\"Failed to register \", FilterCodecs.PUSH, e);\n        });\n    }\n    async subscribe(pubsubTopic, peer, contentTopics) {\n        const stream = await this.getStream(peer);\n        const request = FilterSubscribeRpc.createSubscribeRequest(pubsubTopic, contentTopics);\n        let res;\n        try {\n            res = await pipe([request.encode()], lp.encode, stream, lp.decode, async (source) => await all(source));\n        }\n        catch (error) {\n            log.error(\"Failed to send subscribe request\", error);\n            return {\n                success: null,\n                failure: {\n                    error: ProtocolError.GENERIC_FAIL,\n                    peerId: peer.id\n                }\n            };\n        }\n        const { statusCode, requestId, statusDesc } = FilterSubscribeResponse.decode(res[0].slice());\n        if (statusCode < 200 || statusCode >= 300) {\n            log.error(`Filter subscribe request ${requestId} failed with status code ${statusCode}: ${statusDesc}`);\n            return {\n                failure: {\n                    error: ProtocolError.REMOTE_PEER_REJECTED,\n                    peerId: peer.id\n                },\n                success: null\n            };\n        }\n        return {\n            failure: null,\n            success: peer.id\n        };\n    }\n    async unsubscribe(pubsubTopic, peer, contentTopics) {\n        let stream;\n        try {\n            stream = await this.getStream(peer);\n        }\n        catch (error) {\n            log.error(`Failed to get a stream for remote peer${peer.id.toString()}`, error);\n            return {\n                success: null,\n                failure: {\n                    error: ProtocolError.NO_STREAM_AVAILABLE,\n                    peerId: peer.id\n                }\n            };\n        }\n        const unsubscribeRequest = FilterSubscribeRpc.createUnsubscribeRequest(pubsubTopic, contentTopics);\n        try {\n            await pipe([unsubscribeRequest.encode()], lp.encode, stream.sink);\n        }\n        catch (error) {\n            log.error(\"Failed to send unsubscribe request\", error);\n            return {\n                success: null,\n                failure: {\n                    error: ProtocolError.GENERIC_FAIL,\n                    peerId: peer.id\n                }\n            };\n        }\n        return {\n            success: peer.id,\n            failure: null\n        };\n    }\n    async unsubscribeAll(pubsubTopic, peer) {\n        const stream = await this.getStream(peer);\n        const request = FilterSubscribeRpc.createUnsubscribeAllRequest(pubsubTopic);\n        const res = await pipe([request.encode()], lp.encode, stream, lp.decode, async (source) => await all(source));\n        if (!res || !res.length) {\n            return {\n                failure: {\n                    error: ProtocolError.NO_RESPONSE,\n                    peerId: peer.id\n                },\n                success: null\n            };\n        }\n        const { statusCode, requestId, statusDesc } = FilterSubscribeResponse.decode(res[0].slice());\n        if (statusCode < 200 || statusCode >= 300) {\n            log.error(`Filter unsubscribe all request ${requestId} failed with status code ${statusCode}: ${statusDesc}`);\n            return {\n                failure: {\n                    error: ProtocolError.REMOTE_PEER_REJECTED,\n                    peerId: peer.id\n                },\n                success: null\n            };\n        }\n        return {\n            failure: null,\n            success: peer.id\n        };\n    }\n    async ping(peer) {\n        let stream;\n        try {\n            stream = await this.getStream(peer);\n        }\n        catch (error) {\n            log.error(`Failed to get a stream for remote peer${peer.id.toString()}`, error);\n            return {\n                success: null,\n                failure: {\n                    error: ProtocolError.NO_STREAM_AVAILABLE,\n                    peerId: peer.id\n                }\n            };\n        }\n        const request = FilterSubscribeRpc.createSubscriberPingRequest();\n        let res;\n        try {\n            res = await pipe([request.encode()], lp.encode, stream, lp.decode, async (source) => await all(source));\n        }\n        catch (error) {\n            log.error(\"Failed to send ping request\", error);\n            return {\n                success: null,\n                failure: {\n                    error: ProtocolError.GENERIC_FAIL,\n                    peerId: peer.id\n                }\n            };\n        }\n        if (!res || !res.length) {\n            return {\n                success: null,\n                failure: {\n                    error: ProtocolError.NO_RESPONSE,\n                    peerId: peer.id\n                }\n            };\n        }\n        const { statusCode, requestId, statusDesc } = FilterSubscribeResponse.decode(res[0].slice());\n        if (statusCode < 200 || statusCode >= 300) {\n            log.error(`Filter ping request ${requestId} failed with status code ${statusCode}: ${statusDesc}`);\n            return {\n                success: null,\n                failure: {\n                    error: ProtocolError.REMOTE_PEER_REJECTED,\n                    peerId: peer.id\n                }\n            };\n        }\n        return {\n            success: peer.id,\n            failure: null\n        };\n    }\n    onRequest(streamData) {\n        const { connection, stream } = streamData;\n        const { remotePeer } = connection;\n        log.info(`Received message from ${remotePeer.toString()}`);\n        try {\n            pipe(stream, lp.decode, async (source) => {\n                for await (const bytes of source) {\n                    const response = FilterPushRpc.decode(bytes.slice());\n                    const { pubsubTopic, wakuMessage } = response;\n                    if (!wakuMessage) {\n                        log.error(\"Received empty message\");\n                        return;\n                    }\n                    if (!pubsubTopic) {\n                        log.error(\"Pubsub topic missing from push message\");\n                        return;\n                    }\n                    await this.handleIncomingMessage(pubsubTopic, wakuMessage, connection.remotePeer.toString());\n                }\n            }).then(() => {\n                log.info(\"Receiving pipe closed.\");\n            }, (e) => {\n                log.error(\"Error with receiving pipe\", e);\n            });\n        }\n        catch (e) {\n            log.error(\"Error decoding message\", e);\n        }\n    }\n}\n//# sourceMappingURL=index.js.map","import { proto_lightpush as proto } from \"@waku/proto\";\nimport { v4 as uuid } from \"uuid\";\nexport class PushRpc {\n    proto;\n    constructor(proto) {\n        this.proto = proto;\n    }\n    static createRequest(message, pubsubTopic) {\n        return new PushRpc({\n            requestId: uuid(),\n            request: {\n                message: message,\n                pubsubTopic: pubsubTopic\n            },\n            response: undefined\n        });\n    }\n    static decode(bytes) {\n        const res = proto.PushRpc.decode(bytes);\n        return new PushRpc(res);\n    }\n    encode() {\n        return proto.PushRpc.encode(this.proto);\n    }\n    get query() {\n        return this.proto.request;\n    }\n    get response() {\n        return this.proto.response;\n    }\n}\n//# sourceMappingURL=push_rpc.js.map","import { ProtocolError } from \"@waku/interfaces\";\n// should match nwaku\n// https://github.com/waku-org/nwaku/blob/c3cb06ac6c03f0f382d3941ea53b330f6a8dd127/waku/waku_rln_relay/rln_relay.nim#L309\n// https://github.com/waku-org/nwaku/blob/c3cb06ac6c03f0f382d3941ea53b330f6a8dd127/tests/waku_rln_relay/rln/waku_rln_relay_utils.nim#L20\nconst RLN_GENERATION_PREFIX_ERROR = \"could not generate rln-v2 proof\";\nexport const isRLNResponseError = (info) => {\n    if (!info) {\n        return false;\n    }\n    return info.includes(RLN_GENERATION_PREFIX_ERROR);\n};\nexport const matchRLNErrorMessage = (info) => {\n    const rlnErrorMap = {\n        [ProtocolError.RLN_IDENTITY_MISSING]: ProtocolError.RLN_IDENTITY_MISSING,\n        [ProtocolError.RLN_MEMBERSHIP_INDEX]: ProtocolError.RLN_MEMBERSHIP_INDEX,\n        [ProtocolError.RLN_LIMIT_MISSING]: ProtocolError.RLN_LIMIT_MISSING\n    };\n    const infoLowerCase = info.toLowerCase();\n    for (const errorKey in rlnErrorMap) {\n        if (infoLowerCase.includes(errorKey.toLowerCase())) {\n            return rlnErrorMap[errorKey];\n        }\n    }\n    return ProtocolError.RLN_PROOF_GENERATION;\n};\n//# sourceMappingURL=utils.js.map","import { ProtocolError } from \"@waku/interfaces\";\nimport { PushResponse } from \"@waku/proto\";\nimport { isMessageSizeUnderCap } from \"@waku/utils\";\nimport { Logger } from \"@waku/utils\";\nimport all from \"it-all\";\nimport * as lp from \"it-length-prefixed\";\nimport { pipe } from \"it-pipe\";\nimport { Uint8ArrayList } from \"uint8arraylist\";\nimport { BaseProtocol } from \"../base_protocol.js\";\nimport { PushRpc } from \"./push_rpc.js\";\nimport { isRLNResponseError, matchRLNErrorMessage } from \"./utils.js\";\nconst log = new Logger(\"light-push\");\nexport const LightPushCodec = \"/vac/waku/lightpush/2.0.0-beta1\";\nexport { PushResponse };\n/**\n * Implements the [Waku v2 Light Push protocol](https://rfc.vac.dev/spec/19/).\n */\nexport class LightPushCore extends BaseProtocol {\n    pubsubTopics;\n    constructor(pubsubTopics, libp2p) {\n        super(LightPushCodec, libp2p.components, log, pubsubTopics);\n        this.pubsubTopics = pubsubTopics;\n    }\n    async preparePushMessage(encoder, message) {\n        try {\n            if (!message.payload || message.payload.length === 0) {\n                log.error(\"Failed to send waku light push: payload is empty\");\n                return { query: null, error: ProtocolError.EMPTY_PAYLOAD };\n            }\n            if (!(await isMessageSizeUnderCap(encoder, message))) {\n                log.error(\"Failed to send waku light push: message is bigger than 1MB\");\n                return { query: null, error: ProtocolError.SIZE_TOO_BIG };\n            }\n            const protoMessage = await encoder.toProtoObj(message);\n            if (!protoMessage) {\n                log.error(\"Failed to encode to protoMessage, aborting push\");\n                return {\n                    query: null,\n                    error: ProtocolError.ENCODE_FAILED\n                };\n            }\n            const query = PushRpc.createRequest(protoMessage, encoder.pubsubTopic);\n            return { query, error: null };\n        }\n        catch (error) {\n            log.error(\"Failed to prepare push message\", error);\n            return {\n                query: null,\n                error: ProtocolError.GENERIC_FAIL\n            };\n        }\n    }\n    async send(encoder, message, peer) {\n        const { query, error: preparationError } = await this.preparePushMessage(encoder, message);\n        if (preparationError || !query) {\n            return {\n                success: null,\n                failure: {\n                    error: preparationError,\n                    peerId: peer.id\n                }\n            };\n        }\n        let stream;\n        try {\n            stream = await this.getStream(peer);\n        }\n        catch (error) {\n            log.error(\"Failed to get stream\", error);\n            return {\n                success: null,\n                failure: {\n                    error: ProtocolError.NO_STREAM_AVAILABLE,\n                    peerId: peer.id\n                }\n            };\n        }\n        let res;\n        try {\n            res = await pipe([query.encode()], lp.encode, stream, lp.decode, async (source) => await all(source));\n        }\n        catch (err) {\n            log.error(\"Failed to send waku light push request\", err);\n            return {\n                success: null,\n                failure: {\n                    error: ProtocolError.GENERIC_FAIL,\n                    peerId: peer.id\n                }\n            };\n        }\n        const bytes = new Uint8ArrayList();\n        res.forEach((chunk) => {\n            bytes.append(chunk);\n        });\n        let response;\n        try {\n            response = PushRpc.decode(bytes).response;\n        }\n        catch (err) {\n            log.error(\"Failed to decode push reply\", err);\n            return {\n                success: null,\n                failure: {\n                    error: ProtocolError.DECODE_FAILED,\n                    peerId: peer.id\n                }\n            };\n        }\n        if (!response) {\n            log.error(\"Remote peer fault: No response in PushRPC\");\n            return {\n                success: null,\n                failure: {\n                    error: ProtocolError.NO_RESPONSE,\n                    peerId: peer.id\n                }\n            };\n        }\n        if (isRLNResponseError(response.info)) {\n            const rlnErrorCase = matchRLNErrorMessage(response.info);\n            log.error(\"Remote peer rejected the message: \", rlnErrorCase);\n            return {\n                success: null,\n                failure: {\n                    error: rlnErrorCase,\n                    peerId: peer.id\n                }\n            };\n        }\n        if (!response.isSuccess) {\n            log.error(\"Remote peer rejected the message: \", response.info);\n            return {\n                success: null,\n                failure: {\n                    error: ProtocolError.REMOTE_PEER_REJECTED,\n                    peerId: peer.id\n                }\n            };\n        }\n        return { success: peer.id, failure: null };\n    }\n}\n//# sourceMappingURL=index.js.map","const MB = 1024 ** 2;\nconst SIZE_CAP_IN_MB = 1;\n/**\n * Return whether the size of the message is under the upper limit for the network.\n * This performs a protobuf encoding! If you have access to the fully encoded message,\n * use {@link isSizeUnderCapBuf} instead.\n * @param message\n * @param encoder\n */\nexport async function isMessageSizeUnderCap(encoder, message) {\n    const buf = await encoder.toWire(message);\n    if (!buf)\n        return false;\n    return isWireSizeUnderCap(buf);\n}\nexport const isWireSizeUnderCap = (buf) => buf.length / MB <= SIZE_CAP_IN_MB;\n//# sourceMappingURL=is_size_valid.js.map","const EmptyMessage = {\n    payload: new Uint8Array(),\n    contentTopic: \"\",\n    version: undefined,\n    timestamp: undefined,\n    meta: undefined,\n    rateLimitProof: undefined,\n    ephemeral: undefined\n};\nexport function toProtoMessage(wire) {\n    return { ...EmptyMessage, ...wire };\n}\n//# sourceMappingURL=to_proto_message.js.map","import { proto_store as proto } from \"@waku/proto\";\nimport { v4 as uuid } from \"uuid\";\n// https://github.com/waku-org/nwaku/blob/7205f95cff9f49ca0bb762e8fd0bf56a6a7f3b3b/waku/waku_store/common.nim#L12\nexport const DEFAULT_PAGE_SIZE = 20;\nexport const MAX_PAGE_SIZE = 100;\nconst ONE_MILLION = 1_000000;\nexport class StoreQueryRequest {\n    proto;\n    constructor(proto) {\n        this.proto = proto;\n    }\n    static create(params) {\n        const request = new StoreQueryRequest({\n            ...params,\n            requestId: uuid(),\n            timeStart: params.timeStart\n                ? BigInt(params.timeStart.getTime() * ONE_MILLION)\n                : undefined,\n            timeEnd: params.timeEnd\n                ? BigInt(params.timeEnd.getTime() * ONE_MILLION)\n                : undefined,\n            messageHashes: params.messageHashes || [],\n            paginationLimit: params.paginationLimit\n                ? BigInt(params.paginationLimit)\n                : undefined\n        });\n        // Validate request parameters based on RFC\n        if ((params.pubsubTopic && !params.contentTopics) ||\n            (!params.pubsubTopic && params.contentTopics)) {\n            throw new Error(\"Both pubsubTopic and contentTopics must be set or unset\");\n        }\n        if (params.messageHashes &&\n            (params.pubsubTopic ||\n                params.contentTopics ||\n                params.timeStart ||\n                params.timeEnd)) {\n            throw new Error(\"Message hash lookup queries cannot include content filter criteria\");\n        }\n        return request;\n    }\n    static decode(bytes) {\n        const res = proto.StoreQueryRequest.decode(bytes);\n        return new StoreQueryRequest(res);\n    }\n    encode() {\n        return proto.StoreQueryRequest.encode(this.proto);\n    }\n}\nexport class StoreQueryResponse {\n    proto;\n    constructor(proto) {\n        this.proto = proto;\n    }\n    static decode(bytes) {\n        const res = proto.StoreQueryResponse.decode(bytes);\n        return new StoreQueryResponse(res);\n    }\n    encode() {\n        return proto.StoreQueryResponse.encode(this.proto);\n    }\n    get statusCode() {\n        return this.proto.statusCode;\n    }\n    get statusDesc() {\n        return this.proto.statusDesc;\n    }\n    get messages() {\n        return this.proto.messages;\n    }\n    get paginationCursor() {\n        return this.proto.paginationCursor;\n    }\n}\n//# sourceMappingURL=rpc.js.map","import { Logger } from \"@waku/utils\";\nimport all from \"it-all\";\nimport * as lp from \"it-length-prefixed\";\nimport { pipe } from \"it-pipe\";\nimport { Uint8ArrayList } from \"uint8arraylist\";\nimport { BaseProtocol } from \"../base_protocol.js\";\nimport { toProtoMessage } from \"../to_proto_message.js\";\nimport { DEFAULT_PAGE_SIZE, MAX_PAGE_SIZE, StoreQueryRequest, StoreQueryResponse } from \"./rpc.js\";\nconst log = new Logger(\"store\");\nexport const StoreCodec = \"/vac/waku/store-query/3.0.0\";\nexport class StoreCore extends BaseProtocol {\n    pubsubTopics;\n    constructor(pubsubTopics, libp2p) {\n        super(StoreCodec, libp2p.components, log, pubsubTopics);\n        this.pubsubTopics = pubsubTopics;\n    }\n    async *queryPerPage(queryOpts, decoders, peer) {\n        if (queryOpts.contentTopics.toString() !==\n            Array.from(decoders.keys()).toString()) {\n            throw new Error(\"Internal error, the decoders should match the query's content topics\");\n        }\n        let currentCursor = queryOpts.paginationCursor;\n        while (true) {\n            const storeQueryRequest = StoreQueryRequest.create({\n                ...queryOpts,\n                paginationCursor: currentCursor\n            });\n            let stream;\n            try {\n                stream = await this.getStream(peer);\n            }\n            catch (e) {\n                log.error(\"Failed to get stream\", e);\n                break;\n            }\n            const res = await pipe([storeQueryRequest.encode()], lp.encode, stream, lp.decode, async (source) => await all(source));\n            const bytes = new Uint8ArrayList();\n            res.forEach((chunk) => {\n                bytes.append(chunk);\n            });\n            const storeQueryResponse = StoreQueryResponse.decode(bytes);\n            if (!storeQueryResponse.statusCode ||\n                storeQueryResponse.statusCode >= 300) {\n                const errorMessage = `Store query failed with status code: ${storeQueryResponse.statusCode}, description: ${storeQueryResponse.statusDesc}`;\n                log.error(errorMessage);\n                throw new Error(errorMessage);\n            }\n            if (!storeQueryResponse.messages || !storeQueryResponse.messages.length) {\n                log.warn(\"Stopping pagination due to empty messages in response\");\n                break;\n            }\n            log.info(`${storeQueryResponse.messages.length} messages retrieved from store`);\n            const decodedMessages = storeQueryResponse.messages.map((protoMsg) => {\n                if (!protoMsg.message) {\n                    return Promise.resolve(undefined);\n                }\n                const contentTopic = protoMsg.message.contentTopic;\n                if (contentTopic) {\n                    const decoder = decoders.get(contentTopic);\n                    if (decoder) {\n                        return decoder.fromProtoObj(protoMsg.pubsubTopic || \"\", toProtoMessage(protoMsg.message));\n                    }\n                }\n                return Promise.resolve(undefined);\n            });\n            yield decodedMessages;\n            if (queryOpts.paginationForward) {\n                currentCursor =\n                    storeQueryResponse.messages[storeQueryResponse.messages.length - 1]\n                        .messageHash;\n            }\n            else {\n                currentCursor = storeQueryResponse.messages[0].messageHash;\n            }\n            if (storeQueryResponse.messages.length > MAX_PAGE_SIZE &&\n                storeQueryResponse.messages.length <\n                    (queryOpts.paginationLimit || DEFAULT_PAGE_SIZE)) {\n                break;\n            }\n        }\n    }\n}\n//# sourceMappingURL=index.js.map","export class TimeoutError extends Error {\n\tconstructor(message) {\n\t\tsuper(message);\n\t\tthis.name = 'TimeoutError';\n\t}\n}\n\n/**\nAn error to be thrown when the request is aborted by AbortController.\nDOMException is thrown instead of this Error when DOMException is available.\n*/\nexport class AbortError extends Error {\n\tconstructor(message) {\n\t\tsuper();\n\t\tthis.name = 'AbortError';\n\t\tthis.message = message;\n\t}\n}\n\n/**\nTODO: Remove AbortError and just throw DOMException when targeting Node 18.\n*/\nconst getDOMException = errorMessage => globalThis.DOMException === undefined\n\t? new AbortError(errorMessage)\n\t: new DOMException(errorMessage);\n\n/**\nTODO: Remove below function and just 'reject(signal.reason)' when targeting Node 18.\n*/\nconst getAbortedReason = signal => {\n\tconst reason = signal.reason === undefined\n\t\t? getDOMException('This operation was aborted.')\n\t\t: signal.reason;\n\n\treturn reason instanceof Error ? reason : getDOMException(reason);\n};\n\nexport default function pTimeout(promise, options) {\n\tconst {\n\t\tmilliseconds,\n\t\tfallback,\n\t\tmessage,\n\t\tcustomTimers = {setTimeout, clearTimeout},\n\t} = options;\n\n\tlet timer;\n\n\tconst wrappedPromise = new Promise((resolve, reject) => {\n\t\tif (typeof milliseconds !== 'number' || Math.sign(milliseconds) !== 1) {\n\t\t\tthrow new TypeError(`Expected \\`milliseconds\\` to be a positive number, got \\`${milliseconds}\\``);\n\t\t}\n\n\t\tif (options.signal) {\n\t\t\tconst {signal} = options;\n\t\t\tif (signal.aborted) {\n\t\t\t\treject(getAbortedReason(signal));\n\t\t\t}\n\n\t\t\tsignal.addEventListener('abort', () => {\n\t\t\t\treject(getAbortedReason(signal));\n\t\t\t});\n\t\t}\n\n\t\tif (milliseconds === Number.POSITIVE_INFINITY) {\n\t\t\tpromise.then(resolve, reject);\n\t\t\treturn;\n\t\t}\n\n\t\t// We create the error outside of `setTimeout` to preserve the stack trace.\n\t\tconst timeoutError = new TimeoutError();\n\n\t\ttimer = customTimers.setTimeout.call(undefined, () => {\n\t\t\tif (fallback) {\n\t\t\t\ttry {\n\t\t\t\t\tresolve(fallback());\n\t\t\t\t} catch (error) {\n\t\t\t\t\treject(error);\n\t\t\t\t}\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (typeof promise.cancel === 'function') {\n\t\t\t\tpromise.cancel();\n\t\t\t}\n\n\t\t\tif (message === false) {\n\t\t\t\tresolve();\n\t\t\t} else if (message instanceof Error) {\n\t\t\t\treject(message);\n\t\t\t} else {\n\t\t\t\ttimeoutError.message = message ?? `Promise timed out after ${milliseconds} milliseconds`;\n\t\t\t\treject(timeoutError);\n\t\t\t}\n\t\t}, milliseconds);\n\n\t\t(async () => {\n\t\t\ttry {\n\t\t\t\tresolve(await promise);\n\t\t\t} catch (error) {\n\t\t\t\treject(error);\n\t\t\t}\n\t\t})();\n\t});\n\n\tconst cancelablePromise = wrappedPromise.finally(() => {\n\t\tcancelablePromise.clear();\n\t});\n\n\tcancelablePromise.clear = () => {\n\t\tcustomTimers.clearTimeout.call(undefined, timer);\n\t\ttimer = undefined;\n\t};\n\n\treturn cancelablePromise;\n}\n","import pTimeout from 'p-timeout';\n\nconst normalizeEmitter = emitter => {\n\tconst addListener = emitter.addEventListener || emitter.on || emitter.addListener;\n\tconst removeListener = emitter.removeEventListener || emitter.off || emitter.removeListener;\n\n\tif (!addListener || !removeListener) {\n\t\tthrow new TypeError('Emitter is not compatible');\n\t}\n\n\treturn {\n\t\taddListener: addListener.bind(emitter),\n\t\tremoveListener: removeListener.bind(emitter),\n\t};\n};\n\nexport function pEventMultiple(emitter, event, options) {\n\tlet cancel;\n\tconst returnValue = new Promise((resolve, reject) => {\n\t\toptions = {\n\t\t\trejectionEvents: ['error'],\n\t\t\tmultiArgs: false,\n\t\t\tresolveImmediately: false,\n\t\t\t...options,\n\t\t};\n\n\t\tif (!(options.count >= 0 && (options.count === Number.POSITIVE_INFINITY || Number.isInteger(options.count)))) {\n\t\t\tthrow new TypeError('The `count` option should be at least 0 or more');\n\t\t}\n\n\t\toptions.signal?.throwIfAborted();\n\n\t\t// Allow multiple events\n\t\tconst events = [event].flat();\n\n\t\tconst items = [];\n\t\tconst {addListener, removeListener} = normalizeEmitter(emitter);\n\n\t\tconst onItem = (...arguments_) => {\n\t\t\tconst value = options.multiArgs ? arguments_ : arguments_[0];\n\n\t\t\t// eslint-disable-next-line unicorn/no-array-callback-reference\n\t\t\tif (options.filter && !options.filter(value)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\titems.push(value);\n\n\t\t\tif (options.count === items.length) {\n\t\t\t\tcancel();\n\t\t\t\tresolve(items);\n\t\t\t}\n\t\t};\n\n\t\tconst rejectHandler = error => {\n\t\t\tcancel();\n\t\t\treject(error);\n\t\t};\n\n\t\tcancel = () => {\n\t\t\tfor (const event of events) {\n\t\t\t\tremoveListener(event, onItem);\n\t\t\t}\n\n\t\t\tfor (const rejectionEvent of options.rejectionEvents) {\n\t\t\t\tremoveListener(rejectionEvent, rejectHandler);\n\t\t\t}\n\t\t};\n\n\t\tfor (const event of events) {\n\t\t\taddListener(event, onItem);\n\t\t}\n\n\t\tfor (const rejectionEvent of options.rejectionEvents) {\n\t\t\taddListener(rejectionEvent, rejectHandler);\n\t\t}\n\n\t\tif (options.signal) {\n\t\t\toptions.signal.addEventListener('abort', () => {\n\t\t\t\trejectHandler(options.signal.reason);\n\t\t\t}, {once: true});\n\t\t}\n\n\t\tif (options.resolveImmediately) {\n\t\t\tresolve(items);\n\t\t}\n\t});\n\n\treturnValue.cancel = cancel;\n\n\tif (typeof options.timeout === 'number') {\n\t\tconst timeout = pTimeout(returnValue, {milliseconds: options.timeout});\n\t\ttimeout.cancel = cancel;\n\t\treturn timeout;\n\t}\n\n\treturn returnValue;\n}\n\nexport function pEvent(emitter, event, options) {\n\tif (typeof options === 'function') {\n\t\toptions = {filter: options};\n\t}\n\n\toptions = {\n\t\t...options,\n\t\tcount: 1,\n\t\tresolveImmediately: false,\n\t};\n\n\tconst arrayPromise = pEventMultiple(emitter, event, options);\n\tconst promise = arrayPromise.then(array => array[0]);\n\tpromise.cancel = arrayPromise.cancel;\n\n\treturn promise;\n}\n\nexport function pEventIterator(emitter, event, options) {\n\tif (typeof options === 'function') {\n\t\toptions = {filter: options};\n\t}\n\n\t// Allow multiple events\n\tconst events = [event].flat();\n\n\toptions = {\n\t\trejectionEvents: ['error'],\n\t\tresolutionEvents: [],\n\t\tlimit: Number.POSITIVE_INFINITY,\n\t\tmultiArgs: false,\n\t\t...options,\n\t};\n\n\tconst {limit} = options;\n\tconst isValidLimit = limit >= 0 && (limit === Number.POSITIVE_INFINITY || Number.isInteger(limit));\n\tif (!isValidLimit) {\n\t\tthrow new TypeError('The `limit` option should be a non-negative integer or Infinity');\n\t}\n\n\toptions.signal?.throwIfAborted();\n\n\tif (limit === 0) {\n\t\t// Return an empty async iterator to avoid any further cost\n\t\treturn {\n\t\t\t[Symbol.asyncIterator]() {\n\t\t\t\treturn this;\n\t\t\t},\n\t\t\tasync next() {\n\t\t\t\treturn {\n\t\t\t\t\tdone: true,\n\t\t\t\t\tvalue: undefined,\n\t\t\t\t};\n\t\t\t},\n\t\t};\n\t}\n\n\tconst {addListener, removeListener} = normalizeEmitter(emitter);\n\n\tlet isDone = false;\n\tlet error;\n\tlet hasPendingError = false;\n\tconst nextQueue = [];\n\tconst valueQueue = [];\n\tlet eventCount = 0;\n\tlet isLimitReached = false;\n\n\tconst valueHandler = (...arguments_) => {\n\t\teventCount++;\n\t\tisLimitReached = eventCount === limit;\n\n\t\tconst value = options.multiArgs ? arguments_ : arguments_[0];\n\n\t\tif (nextQueue.length > 0) {\n\t\t\tconst {resolve} = nextQueue.shift();\n\n\t\t\tresolve({done: false, value});\n\n\t\t\tif (isLimitReached) {\n\t\t\t\tcancel();\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\tvalueQueue.push(value);\n\n\t\tif (isLimitReached) {\n\t\t\tcancel();\n\t\t}\n\t};\n\n\tconst cancel = () => {\n\t\tisDone = true;\n\n\t\tfor (const event of events) {\n\t\t\tremoveListener(event, valueHandler);\n\t\t}\n\n\t\tfor (const rejectionEvent of options.rejectionEvents) {\n\t\t\tremoveListener(rejectionEvent, rejectHandler);\n\t\t}\n\n\t\tfor (const resolutionEvent of options.resolutionEvents) {\n\t\t\tremoveListener(resolutionEvent, resolveHandler);\n\t\t}\n\n\t\twhile (nextQueue.length > 0) {\n\t\t\tconst {resolve} = nextQueue.shift();\n\t\t\tresolve({done: true, value: undefined});\n\t\t}\n\t};\n\n\tconst rejectHandler = (...arguments_) => {\n\t\terror = options.multiArgs ? arguments_ : arguments_[0];\n\n\t\tif (nextQueue.length > 0) {\n\t\t\tconst {reject} = nextQueue.shift();\n\t\t\treject(error);\n\t\t} else {\n\t\t\thasPendingError = true;\n\t\t}\n\n\t\tcancel();\n\t};\n\n\tconst resolveHandler = (...arguments_) => {\n\t\tconst value = options.multiArgs ? arguments_ : arguments_[0];\n\n\t\t// eslint-disable-next-line unicorn/no-array-callback-reference\n\t\tif (options.filter && !options.filter(value)) {\n\t\t\tcancel();\n\t\t\treturn;\n\t\t}\n\n\t\tif (nextQueue.length > 0) {\n\t\t\tconst {resolve} = nextQueue.shift();\n\t\t\tresolve({done: true, value});\n\t\t} else {\n\t\t\tvalueQueue.push(value);\n\t\t}\n\n\t\tcancel();\n\t};\n\n\tfor (const event of events) {\n\t\taddListener(event, valueHandler);\n\t}\n\n\tfor (const rejectionEvent of options.rejectionEvents) {\n\t\taddListener(rejectionEvent, rejectHandler);\n\t}\n\n\tfor (const resolutionEvent of options.resolutionEvents) {\n\t\taddListener(resolutionEvent, resolveHandler);\n\t}\n\n\tif (options.signal) {\n\t\toptions.signal.addEventListener('abort', () => {\n\t\t\trejectHandler(options.signal.reason);\n\t\t}, {once: true});\n\t}\n\n\treturn {\n\t\t[Symbol.asyncIterator]() {\n\t\t\treturn this;\n\t\t},\n\t\tasync next() {\n\t\t\tif (valueQueue.length > 0) {\n\t\t\t\tconst value = valueQueue.shift();\n\t\t\t\treturn {\n\t\t\t\t\tdone: isDone && valueQueue.length === 0 && !isLimitReached,\n\t\t\t\t\tvalue,\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tif (hasPendingError) {\n\t\t\t\thasPendingError = false;\n\t\t\t\tthrow error;\n\t\t\t}\n\n\t\t\tif (isDone) {\n\t\t\t\treturn {\n\t\t\t\t\tdone: true,\n\t\t\t\t\tvalue: undefined,\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\tnextQueue.push({resolve, reject});\n\t\t\t});\n\t\t},\n\t\tasync return(value) {\n\t\t\tcancel();\n\t\t\treturn {\n\t\t\t\tdone: isDone,\n\t\t\t\tvalue,\n\t\t\t};\n\t\t},\n\t};\n}\n\nexport {TimeoutError} from 'p-timeout';\n","import { Protocols } from \"@waku/interfaces\";\nimport { Logger } from \"@waku/utils\";\nimport { pEvent } from \"p-event\";\nconst log = new Logger(\"wait-for-remote-peer\");\n//TODO: move this function within the Waku class: https://github.com/waku-org/js-waku/issues/1761\n/**\n * Wait for a remote peer to be ready given the passed protocols.\n * Must be used after attempting to connect to nodes, using\n * {@link @waku/sdk!WakuNode.dial} or a bootstrap method with\n * {@link @waku/sdk!createLightNode}.\n *\n * If the passed protocols is a GossipSub protocol, then it resolves only once\n * a peer is in a mesh, to help ensure that other peers will send and receive\n * message to us.\n *\n * @param waku The Waku Node\n * @param protocols The protocols that need to be enabled by remote peers.\n * @param timeoutMs A timeout value in milliseconds..\n *\n * @returns A promise that **resolves** if all desired protocols are fulfilled by\n * remote nodes, **rejects** if the timeoutMs is reached.\n * @throws If passing a protocol that is not mounted\n * @default Wait for remote peers with protocols enabled locally and no time out is applied.\n */\nexport async function waitForRemotePeer(waku, protocols, timeoutMs) {\n    protocols = protocols ?? getEnabledProtocols(waku);\n    if (!waku.isStarted())\n        return Promise.reject(\"Waku node is not started\");\n    const promises = [];\n    if (protocols.includes(Protocols.Relay)) {\n        if (!waku.relay)\n            throw new Error(\"Cannot wait for Relay peer: protocol not mounted\");\n        promises.push(waitForGossipSubPeerInMesh(waku.relay));\n    }\n    if (protocols.includes(Protocols.Store)) {\n        if (!waku.store)\n            throw new Error(\"Cannot wait for Store peer: protocol not mounted\");\n        promises.push(waitForConnectedPeer(waku.store.protocol, waku.libp2p.services.metadata));\n    }\n    if (protocols.includes(Protocols.LightPush)) {\n        if (!waku.lightPush)\n            throw new Error(\"Cannot wait for LightPush peer: protocol not mounted\");\n        promises.push(waitForConnectedPeer(waku.lightPush.protocol, waku.libp2p.services.metadata));\n    }\n    if (protocols.includes(Protocols.Filter)) {\n        if (!waku.filter)\n            throw new Error(\"Cannot wait for Filter peer: protocol not mounted\");\n        promises.push(waitForConnectedPeer(waku.filter.protocol, waku.libp2p.services.metadata));\n    }\n    if (timeoutMs) {\n        await rejectOnTimeout(Promise.all(promises), timeoutMs, \"Timed out waiting for a remote peer.\");\n    }\n    else {\n        await Promise.all(promises);\n    }\n}\n//TODO: move this function within protocol SDK class: https://github.com/waku-org/js-waku/issues/1761\n/**\n * Wait for a peer with the given protocol to be connected.\n * If sharding is enabled on the node, it will also wait for the peer to be confirmed by the metadata service.\n */\nasync function waitForConnectedPeer(protocol, metadataService) {\n    const codec = protocol.multicodec;\n    const peers = await protocol.connectedPeers();\n    if (peers.length) {\n        if (!metadataService) {\n            log.info(`${codec} peer found: `, peers[0].id.toString());\n            return;\n        }\n        // once a peer is connected, we need to confirm the metadata handshake with at least one of those peers if sharding is enabled\n        try {\n            await Promise.any(peers.map((peer) => metadataService.confirmOrAttemptHandshake(peer.id)));\n            return;\n        }\n        catch (e) {\n            if (e.code === \"ERR_CONNECTION_BEING_CLOSED\")\n                log.error(`Connection with the peer was closed and possibly because it's on a different shard. Error: ${e}`);\n            log.error(`Error waiting for handshake confirmation: ${e}`);\n        }\n    }\n    log.info(`Waiting for ${codec} peer`);\n    // else we'll just wait for the next peer to connect\n    await new Promise((resolve) => {\n        const cb = (evt) => {\n            if (evt.detail?.protocols?.includes(codec)) {\n                if (metadataService) {\n                    metadataService\n                        .confirmOrAttemptHandshake(evt.detail.peerId)\n                        .then(() => {\n                        protocol.removeLibp2pEventListener(\"peer:identify\", cb);\n                        resolve();\n                    })\n                        .catch((e) => {\n                        if (e.code === \"ERR_CONNECTION_BEING_CLOSED\")\n                            log.error(`Connection with the peer was closed and possibly because it's on a different shard. Error: ${e}`);\n                        log.error(`Error waiting for handshake confirmation: ${e}`);\n                    });\n                }\n                else {\n                    protocol.removeLibp2pEventListener(\"peer:identify\", cb);\n                    resolve();\n                }\n            }\n        };\n        protocol.addLibp2pEventListener(\"peer:identify\", cb);\n    });\n}\n/**\n * Wait for at least one peer with the given protocol to be connected and in the gossipsub\n * mesh for all pubsubTopics.\n */\nasync function waitForGossipSubPeerInMesh(waku) {\n    let peers = waku.getMeshPeers();\n    const pubsubTopics = waku.pubsubTopics;\n    for (const topic of pubsubTopics) {\n        while (peers.length == 0) {\n            await pEvent(waku.gossipSub, \"gossipsub:heartbeat\");\n            peers = waku.getMeshPeers(topic);\n        }\n    }\n}\nconst awaitTimeout = (ms, rejectReason) => new Promise((_resolve, reject) => setTimeout(() => reject(rejectReason), ms));\nasync function rejectOnTimeout(promise, timeoutMs, rejectReason) {\n    await Promise.race([promise, awaitTimeout(timeoutMs, rejectReason)]);\n}\nfunction getEnabledProtocols(waku) {\n    const protocols = [];\n    if (waku.relay) {\n        protocols.push(Protocols.Relay);\n    }\n    if (waku.filter) {\n        protocols.push(Protocols.Filter);\n    }\n    if (waku.store) {\n        protocols.push(Protocols.Store);\n    }\n    if (waku.lightPush) {\n        protocols.push(Protocols.LightPush);\n    }\n    return protocols;\n}\n//# sourceMappingURL=wait_for_remote_peer.js.map","import { setMaxListeners } from './events.js';\n/**\n * An implementation of a typed event target\n * etc\n */\nexport class TypedEventEmitter extends EventTarget {\n    #listeners = new Map();\n    constructor() {\n        super();\n        // silence MaxListenersExceededWarning warning on Node.js, this is a red\n        // herring almost all of the time\n        setMaxListeners(Infinity, this);\n    }\n    listenerCount(type) {\n        const listeners = this.#listeners.get(type);\n        if (listeners == null) {\n            return 0;\n        }\n        return listeners.length;\n    }\n    addEventListener(type, listener, options) {\n        super.addEventListener(type, listener, options);\n        let list = this.#listeners.get(type);\n        if (list == null) {\n            list = [];\n            this.#listeners.set(type, list);\n        }\n        list.push({\n            callback: listener,\n            once: (options !== true && options !== false && options?.once) ?? false\n        });\n    }\n    removeEventListener(type, listener, options) {\n        super.removeEventListener(type.toString(), listener ?? null, options);\n        let list = this.#listeners.get(type);\n        if (list == null) {\n            return;\n        }\n        list = list.filter(({ callback }) => callback !== listener);\n        this.#listeners.set(type, list);\n    }\n    dispatchEvent(event) {\n        const result = super.dispatchEvent(event);\n        let list = this.#listeners.get(event.type);\n        if (list == null) {\n            return result;\n        }\n        list = list.filter(({ once }) => !once);\n        this.#listeners.set(event.type, list);\n        return result;\n    }\n    safeDispatchEvent(type, detail = {}) {\n        return this.dispatchEvent(new CustomEvent(type, detail));\n    }\n}\nexport const CustomEvent = globalThis.CustomEvent;\n//# sourceMappingURL=event-target.js.map","import { Logger, pubsubTopicToSingleShardInfo } from \"@waku/utils\";\nimport { utf8ToBytes } from \"@waku/utils/bytes\";\nimport { createEncoder } from \"./message/version_0.js\";\nexport const RelayPingContentTopic = \"/relay-ping/1/ping/null\";\nconst log = new Logger(\"keep-alive\");\nexport class KeepAliveManager {\n    relay;\n    libp2p;\n    options;\n    pingKeepAliveTimers = new Map();\n    relayKeepAliveTimers = new Map();\n    constructor({ options, relay, libp2p }) {\n        this.options = options;\n        this.relay = relay;\n        this.libp2p = libp2p;\n    }\n    start(peerId) {\n        // Just in case a timer already exists for this peer\n        this.stop(peerId);\n        const { pingKeepAlive: pingPeriodSecs, relayKeepAlive: relayPeriodSecs } = this.options;\n        const peerIdStr = peerId.toString();\n        // Ping the peer every pingPeriodSecs seconds\n        // if pingPeriodSecs is 0, don't ping the peer\n        if (pingPeriodSecs !== 0) {\n            const interval = setInterval(() => {\n                void (async () => {\n                    let ping;\n                    try {\n                        // ping the peer for keep alive\n                        // also update the peer store with the latency\n                        try {\n                            ping = await this.libp2p.services.ping.ping(peerId);\n                            log.info(`Ping succeeded (${peerIdStr})`, ping);\n                        }\n                        catch (error) {\n                            log.error(`Ping failed for peer (${peerIdStr}).\n                Next ping will be attempted in ${pingPeriodSecs} seconds.\n              `);\n                            return;\n                        }\n                        try {\n                            await this.libp2p.peerStore.merge(peerId, {\n                                metadata: {\n                                    ping: utf8ToBytes(ping.toString())\n                                }\n                            });\n                        }\n                        catch (e) {\n                            log.error(\"Failed to update ping\", e);\n                        }\n                    }\n                    catch (e) {\n                        log.error(`Ping failed (${peerIdStr})`, e);\n                    }\n                })();\n            }, pingPeriodSecs * 1000);\n            this.pingKeepAliveTimers.set(peerIdStr, interval);\n        }\n        const relay = this.relay;\n        if (relay && relayPeriodSecs !== 0) {\n            const intervals = this.scheduleRelayPings(relay, relayPeriodSecs, peerId.toString());\n            this.relayKeepAliveTimers.set(peerId, intervals);\n        }\n    }\n    stop(peerId) {\n        const peerIdStr = peerId.toString();\n        if (this.pingKeepAliveTimers.has(peerIdStr)) {\n            clearInterval(this.pingKeepAliveTimers.get(peerIdStr));\n            this.pingKeepAliveTimers.delete(peerIdStr);\n        }\n        if (this.relayKeepAliveTimers.has(peerId)) {\n            this.relayKeepAliveTimers.get(peerId)?.map(clearInterval);\n            this.relayKeepAliveTimers.delete(peerId);\n        }\n    }\n    stopAll() {\n        for (const timer of [\n            ...Object.values(this.pingKeepAliveTimers),\n            ...Object.values(this.relayKeepAliveTimers)\n        ]) {\n            clearInterval(timer);\n        }\n        this.pingKeepAliveTimers.clear();\n        this.relayKeepAliveTimers.clear();\n    }\n    connectionsExist() {\n        return (this.pingKeepAliveTimers.size > 0 || this.relayKeepAliveTimers.size > 0);\n    }\n    scheduleRelayPings(relay, relayPeriodSecs, peerIdStr) {\n        // send a ping message to each PubsubTopic the peer is part of\n        const intervals = [];\n        for (const topic of relay.pubsubTopics) {\n            const meshPeers = relay.getMeshPeers(topic);\n            if (!meshPeers.includes(peerIdStr))\n                continue;\n            const encoder = createEncoder({\n                pubsubTopicShardInfo: pubsubTopicToSingleShardInfo(topic),\n                contentTopic: RelayPingContentTopic,\n                ephemeral: true\n            });\n            const interval = setInterval(() => {\n                log.info(\"Sending Waku Relay ping message\");\n                relay\n                    .send(encoder, { payload: new Uint8Array([1]) })\n                    .catch((e) => log.error(\"Failed to send relay ping\", e));\n            }, relayPeriodSecs * 1000);\n            intervals.push(interval);\n        }\n        return intervals;\n    }\n}\n//# sourceMappingURL=keep_alive_manager.js.map","import { CustomEvent, TypedEventEmitter } from \"@libp2p/interface\";\nimport { DNS_DISCOVERY_TAG, EConnectionStateEvents, EPeersByDiscoveryEvents } from \"@waku/interfaces\";\nimport { Tags } from \"@waku/interfaces\";\nimport { decodeRelayShard, shardInfoToPubsubTopics } from \"@waku/utils\";\nimport { Logger } from \"@waku/utils\";\nimport { KeepAliveManager } from \"./keep_alive_manager.js\";\nconst log = new Logger(\"connection-manager\");\nexport const DEFAULT_MAX_BOOTSTRAP_PEERS_ALLOWED = 1;\nexport const DEFAULT_MAX_DIAL_ATTEMPTS_FOR_PEER = 3;\nexport const DEFAULT_MAX_PARALLEL_DIALS = 3;\nexport class ConnectionManager extends TypedEventEmitter {\n    configuredPubsubTopics;\n    static instances = new Map();\n    keepAliveManager;\n    options;\n    libp2p;\n    dialAttemptsForPeer = new Map();\n    dialErrorsForPeer = new Map();\n    currentActiveParallelDialCount = 0;\n    pendingPeerDialQueue = [];\n    isP2PNetworkConnected = false;\n    isConnected() {\n        if (globalThis?.navigator && !globalThis?.navigator?.onLine) {\n            return false;\n        }\n        return this.isP2PNetworkConnected;\n    }\n    static create(peerId, libp2p, keepAliveOptions, pubsubTopics, relay, options) {\n        let instance = ConnectionManager.instances.get(peerId);\n        if (!instance) {\n            instance = new ConnectionManager(libp2p, keepAliveOptions, pubsubTopics, relay, options);\n            ConnectionManager.instances.set(peerId, instance);\n        }\n        return instance;\n    }\n    stop() {\n        this.keepAliveManager.stopAll();\n        this.libp2p.removeEventListener(\"peer:connect\", this.onEventHandlers[\"peer:connect\"]);\n        this.libp2p.removeEventListener(\"peer:disconnect\", this.onEventHandlers[\"peer:disconnect\"]);\n        this.libp2p.removeEventListener(\"peer:discovery\", this.onEventHandlers[\"peer:discovery\"]);\n        this.stopNetworkStatusListener();\n    }\n    async dropConnection(peerId) {\n        try {\n            this.keepAliveManager.stop(peerId);\n            await this.libp2p.hangUp(peerId);\n            log.info(`Dropped connection with peer ${peerId.toString()}`);\n        }\n        catch (error) {\n            log.error(`Error dropping connection with peer ${peerId.toString()} - ${error}`);\n        }\n    }\n    async getPeersByDiscovery() {\n        const peersDiscovered = await this.libp2p.peerStore.all();\n        const peersConnected = this.libp2p\n            .getConnections()\n            .map((conn) => conn.remotePeer);\n        const peersDiscoveredByBootstrap = [];\n        const peersDiscoveredByPeerExchange = [];\n        const peersDiscoveredByLocal = [];\n        const peersConnectedByBootstrap = [];\n        const peersConnectedByPeerExchange = [];\n        const peersConnectedByLocal = [];\n        for (const peer of peersDiscovered) {\n            const tags = await this.getTagNamesForPeer(peer.id);\n            if (tags.includes(Tags.BOOTSTRAP)) {\n                peersDiscoveredByBootstrap.push(peer);\n            }\n            else if (tags.includes(Tags.PEER_EXCHANGE)) {\n                peersDiscoveredByPeerExchange.push(peer);\n            }\n            else if (tags.includes(Tags.LOCAL)) {\n                peersDiscoveredByLocal.push(peer);\n            }\n        }\n        for (const peerId of peersConnected) {\n            const peer = await this.libp2p.peerStore.get(peerId);\n            const tags = await this.getTagNamesForPeer(peerId);\n            if (tags.includes(Tags.BOOTSTRAP)) {\n                peersConnectedByBootstrap.push(peer);\n            }\n            else if (tags.includes(Tags.PEER_EXCHANGE)) {\n                peersConnectedByPeerExchange.push(peer);\n            }\n            else if (tags.includes(Tags.LOCAL)) {\n                peersConnectedByLocal.push(peer);\n            }\n        }\n        return {\n            DISCOVERED: {\n                [Tags.BOOTSTRAP]: peersDiscoveredByBootstrap,\n                [Tags.PEER_EXCHANGE]: peersDiscoveredByPeerExchange,\n                [Tags.LOCAL]: peersDiscoveredByLocal\n            },\n            CONNECTED: {\n                [Tags.BOOTSTRAP]: peersConnectedByBootstrap,\n                [Tags.PEER_EXCHANGE]: peersConnectedByPeerExchange,\n                [Tags.LOCAL]: peersConnectedByLocal\n            }\n        };\n    }\n    constructor(libp2p, keepAliveOptions, configuredPubsubTopics, relay, options) {\n        super();\n        this.configuredPubsubTopics = configuredPubsubTopics;\n        this.libp2p = libp2p;\n        this.configuredPubsubTopics = configuredPubsubTopics;\n        this.options = {\n            maxDialAttemptsForPeer: DEFAULT_MAX_DIAL_ATTEMPTS_FOR_PEER,\n            maxBootstrapPeersAllowed: DEFAULT_MAX_BOOTSTRAP_PEERS_ALLOWED,\n            maxParallelDials: DEFAULT_MAX_PARALLEL_DIALS,\n            ...options\n        };\n        this.keepAliveManager = new KeepAliveManager({\n            relay,\n            libp2p,\n            options: keepAliveOptions\n        });\n        this.startEventListeners()\n            .then(() => log.info(`Connection Manager is now running`))\n            .catch((error) => log.error(`Unexpected error while running service`, error));\n        // libp2p emits `peer:discovery` events during its initialization\n        // which means that before the ConnectionManager is initialized, some peers may have been discovered\n        // we will dial the peers in peerStore ONCE before we start to listen to the `peer:discovery` events within the ConnectionManager\n        this.dialPeerStorePeers().catch((error) => log.error(`Unexpected error while dialing peer store peers`, error));\n    }\n    async dialPeerStorePeers() {\n        const peerInfos = await this.libp2p.peerStore.all();\n        const dialPromises = [];\n        for (const peerInfo of peerInfos) {\n            if (this.libp2p.getConnections().find((c) => c.remotePeer === peerInfo.id))\n                continue;\n            dialPromises.push(this.attemptDial(peerInfo.id));\n        }\n        try {\n            await Promise.all(dialPromises);\n        }\n        catch (error) {\n            log.error(`Unexpected error while dialing peer store peers`, error);\n        }\n    }\n    async startEventListeners() {\n        this.startPeerDiscoveryListener();\n        this.startPeerConnectionListener();\n        this.startPeerDisconnectionListener();\n        this.startNetworkStatusListener();\n    }\n    async dialPeer(peerId) {\n        this.currentActiveParallelDialCount += 1;\n        let dialAttempt = 0;\n        while (dialAttempt < this.options.maxDialAttemptsForPeer) {\n            try {\n                log.info(`Dialing peer ${peerId.toString()} on attempt ${dialAttempt + 1}`);\n                await this.libp2p.dial(peerId);\n                const tags = await this.getTagNamesForPeer(peerId);\n                // add tag to connection describing discovery mechanism\n                // don't add duplicate tags\n                this.libp2p.getConnections(peerId).forEach((conn) => {\n                    conn.tags = Array.from(new Set([...conn.tags, ...tags]));\n                });\n                // instead of deleting the peer from the peer store, we set the dial attempt to -1\n                // this helps us keep track of peers that have been dialed before\n                this.dialAttemptsForPeer.set(peerId.toString(), -1);\n                // Dialing succeeded, break the loop\n                this.keepAliveManager.start(peerId);\n                break;\n            }\n            catch (error) {\n                if (error instanceof AggregateError) {\n                    // Handle AggregateError\n                    log.error(`Error dialing peer ${peerId.toString()} - ${error.errors}`);\n                }\n                else {\n                    // Handle generic error\n                    log.error(`Error dialing peer ${peerId.toString()} - ${error.message}`);\n                }\n                this.dialErrorsForPeer.set(peerId.toString(), error);\n                dialAttempt++;\n                this.dialAttemptsForPeer.set(peerId.toString(), dialAttempt);\n            }\n        }\n        // Always decrease the active dial count and process the dial queue\n        this.currentActiveParallelDialCount--;\n        this.processDialQueue();\n        // If max dial attempts reached and dialing failed, delete the peer\n        if (dialAttempt === this.options.maxDialAttemptsForPeer) {\n            try {\n                const error = this.dialErrorsForPeer.get(peerId.toString());\n                if (error) {\n                    let errorMessage;\n                    if (error instanceof AggregateError) {\n                        if (!error.errors) {\n                            log.warn(`No errors array found for AggregateError`);\n                        }\n                        else if (error.errors.length === 0) {\n                            log.warn(`Errors array is empty for AggregateError`);\n                        }\n                        else {\n                            errorMessage = JSON.stringify(error.errors[0]);\n                        }\n                    }\n                    else {\n                        errorMessage = error.message;\n                    }\n                    log.info(`Deleting undialable peer ${peerId.toString()} from peer store. Reason: ${errorMessage}`);\n                }\n                this.dialErrorsForPeer.delete(peerId.toString());\n                await this.libp2p.peerStore.delete(peerId);\n                // if it was last available peer - attempt DNS discovery\n                await this.attemptDnsDiscovery();\n            }\n            catch (error) {\n                throw new Error(`Error deleting undialable peer ${peerId.toString()} from peer store - ${error}`);\n            }\n        }\n    }\n    async attemptDnsDiscovery() {\n        if (this.libp2p.getConnections().length > 0)\n            return;\n        if ((await this.libp2p.peerStore.all()).length > 0)\n            return;\n        log.info(\"Attempting to trigger DNS discovery.\");\n        const dnsDiscovery = Object.values(this.libp2p.components.components).find((v) => {\n            if (v && v.toString) {\n                return v.toString().includes(DNS_DISCOVERY_TAG);\n            }\n            return false;\n        });\n        if (!dnsDiscovery)\n            return;\n        await dnsDiscovery.findPeers();\n    }\n    processDialQueue() {\n        if (this.pendingPeerDialQueue.length > 0 &&\n            this.currentActiveParallelDialCount < this.options.maxParallelDials) {\n            const peerId = this.pendingPeerDialQueue.shift();\n            if (!peerId)\n                return;\n            this.attemptDial(peerId).catch((error) => {\n                log.error(error);\n            });\n        }\n    }\n    startPeerDiscoveryListener() {\n        this.libp2p.addEventListener(\"peer:discovery\", this.onEventHandlers[\"peer:discovery\"]);\n    }\n    startPeerConnectionListener() {\n        this.libp2p.addEventListener(\"peer:connect\", this.onEventHandlers[\"peer:connect\"]);\n    }\n    startPeerDisconnectionListener() {\n        // TODO: ensure that these following issues are updated and confirmed\n        /**\n         * NOTE: Event is not being emitted on closing nor losing a connection.\n         * @see https://github.com/libp2p/js-libp2p/issues/939\n         * @see https://github.com/status-im/js-waku/issues/252\n         *\n         * >This event will be triggered anytime we are disconnected from another peer,\n         * >regardless of the circumstances of that disconnection.\n         * >If we happen to have multiple connections to a peer,\n         * >this event will **only** be triggered when the last connection is closed.\n         * @see https://github.com/libp2p/js-libp2p/blob/bad9e8c0ff58d60a78314077720c82ae331cc55b/doc/API.md?plain=1#L2100\n         */\n        this.libp2p.addEventListener(\"peer:disconnect\", this.onEventHandlers[\"peer:disconnect\"]);\n    }\n    async attemptDial(peerId) {\n        if (!(await this.shouldDialPeer(peerId)))\n            return;\n        if (this.currentActiveParallelDialCount >= this.options.maxParallelDials) {\n            this.pendingPeerDialQueue.push(peerId);\n            return;\n        }\n        await this.dialPeer(peerId);\n    }\n    onEventHandlers = {\n        \"peer:discovery\": (evt) => {\n            void (async () => {\n                const { id: peerId } = evt.detail;\n                await this.dispatchDiscoveryEvent(peerId);\n                try {\n                    await this.attemptDial(peerId);\n                }\n                catch (error) {\n                    log.error(`Error dialing peer ${peerId.toString()} : ${error}`);\n                }\n            })();\n        },\n        \"peer:connect\": (evt) => {\n            void (async () => {\n                log.info(`Connected to peer ${evt.detail.toString()}`);\n                const peerId = evt.detail;\n                this.keepAliveManager.start(peerId);\n                const isBootstrap = (await this.getTagNamesForPeer(peerId)).includes(Tags.BOOTSTRAP);\n                if (isBootstrap) {\n                    const bootstrapConnections = this.libp2p\n                        .getConnections()\n                        .filter((conn) => conn.tags.includes(Tags.BOOTSTRAP));\n                    // If we have too many bootstrap connections, drop one\n                    if (bootstrapConnections.length > this.options.maxBootstrapPeersAllowed) {\n                        await this.dropConnection(peerId);\n                    }\n                    else {\n                        this.dispatchEvent(new CustomEvent(EPeersByDiscoveryEvents.PEER_CONNECT_BOOTSTRAP, {\n                            detail: peerId\n                        }));\n                    }\n                }\n                else {\n                    this.dispatchEvent(new CustomEvent(EPeersByDiscoveryEvents.PEER_CONNECT_PEER_EXCHANGE, {\n                        detail: peerId\n                    }));\n                }\n                this.setP2PNetworkConnected();\n            })();\n        },\n        \"peer:disconnect\": (evt) => {\n            void (async () => {\n                this.keepAliveManager.stop(evt.detail);\n                this.setP2PNetworkDisconnected();\n            })();\n        },\n        \"browser:network\": () => {\n            this.dispatchWakuConnectionEvent();\n        }\n    };\n    /**\n     * Checks if the peer should be dialed based on the following conditions:\n     * 1. If the peer is already connected, don't dial\n     * 2. If the peer is not part of any of the configured pubsub topics, don't dial\n     * 3. If the peer is not dialable based on bootstrap status, don't dial\n     * 4. If the peer is already has an active dial attempt, or has been dialed before, don't dial it\n     * @returns true if the peer should be dialed, false otherwise\n     */\n    async shouldDialPeer(peerId) {\n        const isConnected = this.libp2p.getConnections(peerId).length > 0;\n        if (isConnected) {\n            log.warn(`Already connected to peer ${peerId.toString()}. Not dialing.`);\n            return false;\n        }\n        const isSameShard = await this.isPeerTopicConfigured(peerId);\n        if (!isSameShard) {\n            const shardInfo = await this.getPeerShardInfo(peerId, this.libp2p.peerStore);\n            log.warn(`Discovered peer ${peerId.toString()} with ShardInfo ${shardInfo} is not part of any of the configured pubsub topics (${this.configuredPubsubTopics}).\n            Not dialing.`);\n            return false;\n        }\n        const isPreferredBasedOnBootstrap = await this.isPeerDialableBasedOnBootstrapStatus(peerId);\n        if (!isPreferredBasedOnBootstrap) {\n            log.warn(`Peer ${peerId.toString()} is not dialable based on bootstrap status. Not dialing.`);\n            return false;\n        }\n        const hasBeenDialed = this.dialAttemptsForPeer.has(peerId.toString());\n        if (hasBeenDialed) {\n            log.warn(`Peer ${peerId.toString()} has already been attempted dial before, or already has a dial attempt in progress, skipping dial`);\n            return false;\n        }\n        return true;\n    }\n    /**\n     * Checks if the peer is dialable based on the following conditions:\n     * 1. If the peer is a bootstrap peer, it is only dialable if the number of current bootstrap connections is less than the max allowed.\n     * 2. If the peer is not a bootstrap peer\n     */\n    async isPeerDialableBasedOnBootstrapStatus(peerId) {\n        const tagNames = await this.getTagNamesForPeer(peerId);\n        const isBootstrap = tagNames.some((tagName) => tagName === Tags.BOOTSTRAP);\n        if (!isBootstrap) {\n            return true;\n        }\n        const currentBootstrapConnections = this.libp2p\n            .getConnections()\n            .filter((conn) => {\n            return conn.tags.find((name) => name === Tags.BOOTSTRAP);\n        }).length;\n        return currentBootstrapConnections < this.options.maxBootstrapPeersAllowed;\n    }\n    async dispatchDiscoveryEvent(peerId) {\n        const isBootstrap = (await this.getTagNamesForPeer(peerId)).includes(Tags.BOOTSTRAP);\n        this.dispatchEvent(new CustomEvent(isBootstrap\n            ? EPeersByDiscoveryEvents.PEER_DISCOVERY_BOOTSTRAP\n            : EPeersByDiscoveryEvents.PEER_DISCOVERY_PEER_EXCHANGE, {\n            detail: peerId\n        }));\n    }\n    /**\n     * Fetches the tag names for a given peer\n     */\n    async getTagNamesForPeer(peerId) {\n        try {\n            const peer = await this.libp2p.peerStore.get(peerId);\n            return Array.from(peer.tags.keys());\n        }\n        catch (error) {\n            log.error(`Failed to get peer ${peerId}, error: ${error}`);\n            return [];\n        }\n    }\n    async isPeerTopicConfigured(peerId) {\n        const shardInfo = await this.getPeerShardInfo(peerId, this.libp2p.peerStore);\n        // If there's no shard information, simply return true\n        if (!shardInfo)\n            return true;\n        const pubsubTopics = shardInfoToPubsubTopics(shardInfo);\n        const isTopicConfigured = pubsubTopics.some((topic) => this.configuredPubsubTopics.includes(topic));\n        return isTopicConfigured;\n    }\n    async getPeerShardInfo(peerId, peerStore) {\n        const peer = await peerStore.get(peerId);\n        const shardInfoBytes = peer.metadata.get(\"shardInfo\");\n        if (!shardInfoBytes)\n            return undefined;\n        return decodeRelayShard(shardInfoBytes);\n    }\n    startNetworkStatusListener() {\n        try {\n            globalThis.addEventListener(\"online\", this.onEventHandlers[\"browser:network\"]);\n            globalThis.addEventListener(\"offline\", this.onEventHandlers[\"browser:network\"]);\n        }\n        catch (err) {\n            log.error(`Failed to start network listener: ${err}`);\n        }\n    }\n    stopNetworkStatusListener() {\n        try {\n            globalThis.removeEventListener(\"online\", this.onEventHandlers[\"browser:network\"]);\n            globalThis.removeEventListener(\"offline\", this.onEventHandlers[\"browser:network\"]);\n        }\n        catch (err) {\n            log.error(`Failed to stop network listener: ${err}`);\n        }\n    }\n    setP2PNetworkConnected() {\n        if (!this.isP2PNetworkConnected) {\n            this.isP2PNetworkConnected = true;\n            this.dispatchWakuConnectionEvent();\n        }\n    }\n    setP2PNetworkDisconnected() {\n        if (this.isP2PNetworkConnected &&\n            this.libp2p.getConnections().length === 0) {\n            this.isP2PNetworkConnected = false;\n            this.dispatchWakuConnectionEvent();\n        }\n    }\n    dispatchWakuConnectionEvent() {\n        this.dispatchEvent(new CustomEvent(EConnectionStateEvents.CONNECTION_STATUS, {\n            detail: this.isConnected()\n        }));\n    }\n}\n//# sourceMappingURL=connection_manager.js.map","import { HealthStatus, Protocols } from \"@waku/interfaces\";\nclass HealthManager {\n    static instance;\n    health;\n    constructor() {\n        this.health = {\n            overallStatus: HealthStatus.Unhealthy,\n            protocolStatuses: new Map()\n        };\n    }\n    static getInstance() {\n        if (!HealthManager.instance) {\n            HealthManager.instance = new HealthManager();\n        }\n        return HealthManager.instance;\n    }\n    getHealthStatus() {\n        return this.health.overallStatus;\n    }\n    getProtocolStatus(protocol) {\n        return this.health.protocolStatuses.get(protocol);\n    }\n    updateProtocolHealth(multicodec, connectedPeers) {\n        const protocol = this.getNameFromMulticodec(multicodec);\n        let status = HealthStatus.Unhealthy;\n        if (connectedPeers == 1) {\n            status = HealthStatus.MinimallyHealthy;\n        }\n        else if (connectedPeers >= 2) {\n            status = HealthStatus.SufficientlyHealthy;\n        }\n        this.health.protocolStatuses.set(protocol, {\n            name: protocol,\n            status: status,\n            lastUpdate: new Date()\n        });\n        this.updateOverallHealth();\n    }\n    getNameFromMulticodec(multicodec) {\n        let name;\n        if (multicodec.includes(\"filter\")) {\n            name = Protocols.Filter;\n        }\n        else if (multicodec.includes(\"lightpush\")) {\n            name = Protocols.LightPush;\n        }\n        else if (multicodec.includes(\"store\")) {\n            name = Protocols.Store;\n        }\n        else {\n            throw new Error(`Unknown protocol: ${multicodec}`);\n        }\n        return name;\n    }\n    updateOverallHealth() {\n        const relevantProtocols = [Protocols.LightPush, Protocols.Filter];\n        const statuses = relevantProtocols.map((p) => this.getProtocolStatus(p)?.status);\n        if (statuses.some((status) => status === HealthStatus.Unhealthy)) {\n            this.health.overallStatus = HealthStatus.Unhealthy;\n        }\n        else if (statuses.some((status) => status === HealthStatus.MinimallyHealthy)) {\n            this.health.overallStatus = HealthStatus.MinimallyHealthy;\n        }\n        else {\n            this.health.overallStatus = HealthStatus.SufficientlyHealthy;\n        }\n    }\n}\nexport const getHealthManager = () => HealthManager.getInstance();\n//# sourceMappingURL=health_manager.js.map","import { ProtocolError } from \"@waku/interfaces\";\nimport { proto_metadata } from \"@waku/proto\";\nimport { encodeRelayShard, Logger, pubsubTopicsToShardInfo } from \"@waku/utils\";\nimport all from \"it-all\";\nimport * as lp from \"it-length-prefixed\";\nimport { pipe } from \"it-pipe\";\nimport { Uint8ArrayList } from \"uint8arraylist\";\nimport { BaseProtocol } from \"../base_protocol.js\";\nconst log = new Logger(\"metadata\");\nexport const MetadataCodec = \"/vac/waku/metadata/1.0.0\";\nclass Metadata extends BaseProtocol {\n    pubsubTopics;\n    libp2pComponents;\n    handshakesConfirmed = new Map();\n    constructor(pubsubTopics, libp2p) {\n        super(MetadataCodec, libp2p.components, log, pubsubTopics);\n        this.pubsubTopics = pubsubTopics;\n        this.libp2pComponents = libp2p;\n        void libp2p.registrar.handle(MetadataCodec, (streamData) => {\n            void this.onRequest(streamData);\n        });\n    }\n    /**\n     * Make a metadata query to a peer\n     */\n    async query(peerId) {\n        const request = proto_metadata.WakuMetadataRequest.encode(pubsubTopicsToShardInfo(this.pubsubTopics));\n        const peer = await this.peerStore.get(peerId);\n        if (!peer) {\n            return {\n                shardInfo: null,\n                error: ProtocolError.NO_PEER_AVAILABLE\n            };\n        }\n        let stream;\n        try {\n            stream = await this.getStream(peer);\n        }\n        catch (error) {\n            log.error(\"Failed to get stream\", error);\n            return {\n                shardInfo: null,\n                error: ProtocolError.NO_STREAM_AVAILABLE\n            };\n        }\n        const encodedResponse = await pipe([request], lp.encode, stream, lp.decode, async (source) => await all(source));\n        const { error, shardInfo } = this.decodeMetadataResponse(encodedResponse);\n        if (error) {\n            return {\n                shardInfo: null,\n                error\n            };\n        }\n        await this.savePeerShardInfo(peerId, shardInfo);\n        return {\n            shardInfo,\n            error: null\n        };\n    }\n    async confirmOrAttemptHandshake(peerId) {\n        const shardInfo = this.handshakesConfirmed.get(peerId.toString());\n        if (shardInfo) {\n            return {\n                shardInfo,\n                error: null\n            };\n        }\n        return await this.query(peerId);\n    }\n    /**\n     * Handle an incoming metadata request\n     */\n    async onRequest(streamData) {\n        try {\n            const { stream, connection } = streamData;\n            const encodedShardInfo = proto_metadata.WakuMetadataResponse.encode(pubsubTopicsToShardInfo(this.pubsubTopics));\n            const encodedResponse = await pipe([encodedShardInfo], lp.encode, stream, lp.decode, async (source) => await all(source));\n            const { error, shardInfo } = this.decodeMetadataResponse(encodedResponse);\n            if (error) {\n                return;\n            }\n            await this.savePeerShardInfo(connection.remotePeer, shardInfo);\n        }\n        catch (error) {\n            log.error(\"Error handling metadata request\", error);\n        }\n    }\n    decodeMetadataResponse(encodedResponse) {\n        const bytes = new Uint8ArrayList();\n        encodedResponse.forEach((chunk) => {\n            bytes.append(chunk);\n        });\n        const response = proto_metadata.WakuMetadataResponse.decode(bytes);\n        if (!response) {\n            log.error(\"Error decoding metadata response\");\n            return {\n                shardInfo: null,\n                error: ProtocolError.DECODE_FAILED\n            };\n        }\n        return {\n            shardInfo: response,\n            error: null\n        };\n    }\n    async savePeerShardInfo(peerId, shardInfo) {\n        // add or update the shardInfo to peer store\n        await this.libp2pComponents.peerStore.merge(peerId, {\n            metadata: {\n                shardInfo: encodeRelayShard(shardInfo)\n            }\n        });\n        this.handshakesConfirmed.set(peerId.toString(), shardInfo);\n    }\n}\nexport function wakuMetadata(pubsubTopics) {\n    return (components) => new Metadata(pubsubTopics, components);\n}\n//# sourceMappingURL=index.js.map","export const peerIdSymbol = Symbol.for('@libp2p/peer-id');\nexport function isPeerId(other) {\n    return other != null && Boolean(other[peerIdSymbol]);\n}\n//# sourceMappingURL=index.js.map","import { Parser } from \"./parser.js\";\n// See https://stackoverflow.com/questions/166132/maximum-length-of-the-textual-representation-of-an-ipv6-address\nconst MAX_IPV6_LENGTH = 45;\nconst MAX_IPV4_LENGTH = 15;\nconst parser = new Parser();\n/** Parse `input` into IPv4 bytes. */\nexport function parseIPv4(input) {\n    if (input.length > MAX_IPV4_LENGTH) {\n        return undefined;\n    }\n    return parser.new(input).parseWith(() => parser.readIPv4Addr());\n}\n/** Parse `input` into IPv6 bytes. */\nexport function parseIPv6(input) {\n    // strip zone index if it is present\n    if (input.includes(\"%\")) {\n        input = input.split(\"%\")[0];\n    }\n    if (input.length > MAX_IPV6_LENGTH) {\n        return undefined;\n    }\n    return parser.new(input).parseWith(() => parser.readIPv6Addr());\n}\n/** Parse `input` into IPv4 or IPv6 bytes. */\nexport function parseIP(input) {\n    // strip zone index if it is present\n    if (input.includes(\"%\")) {\n        input = input.split(\"%\")[0];\n    }\n    if (input.length > MAX_IPV6_LENGTH) {\n        return undefined;\n    }\n    return parser.new(input).parseWith(() => parser.readIPAddr());\n}\n//# sourceMappingURL=parse.js.map","/* eslint-disable @typescript-eslint/no-unsafe-return */\nexport class Parser {\n    index = 0;\n    input = \"\";\n    new(input) {\n        this.index = 0;\n        this.input = input;\n        return this;\n    }\n    /** Run a parser, and restore the pre-parse state if it fails. */\n    readAtomically(fn) {\n        const index = this.index;\n        const result = fn();\n        if (result === undefined) {\n            this.index = index;\n        }\n        return result;\n    }\n    /** Run a parser, but fail if the entire input wasn't consumed. Doesn't run atomically. */\n    parseWith(fn) {\n        const result = fn();\n        if (this.index !== this.input.length) {\n            return undefined;\n        }\n        return result;\n    }\n    /** Peek the next character from the input */\n    peekChar() {\n        if (this.index >= this.input.length) {\n            return undefined;\n        }\n        return this.input[this.index];\n    }\n    /** Read the next character from the input */\n    readChar() {\n        if (this.index >= this.input.length) {\n            return undefined;\n        }\n        return this.input[this.index++];\n    }\n    /** Read the next character from the input if it matches the target. */\n    readGivenChar(target) {\n        return this.readAtomically(() => {\n            const char = this.readChar();\n            if (char !== target) {\n                return undefined;\n            }\n            return char;\n        });\n    }\n    /**\n     * Helper for reading separators in an indexed loop. Reads the separator\n     * character iff index > 0, then runs the parser. When used in a loop,\n     * the separator character will only be read on index > 0 (see\n     * readIPv4Addr for an example)\n     */\n    readSeparator(sep, index, inner) {\n        return this.readAtomically(() => {\n            if (index > 0) {\n                if (this.readGivenChar(sep) === undefined) {\n                    return undefined;\n                }\n            }\n            return inner();\n        });\n    }\n    /**\n     * Read a number off the front of the input in the given radix, stopping\n     * at the first non-digit character or eof. Fails if the number has more\n     * digits than max_digits or if there is no number.\n     */\n    readNumber(radix, maxDigits, allowZeroPrefix, maxBytes) {\n        return this.readAtomically(() => {\n            let result = 0;\n            let digitCount = 0;\n            const leadingChar = this.peekChar();\n            if (leadingChar === undefined) {\n                return undefined;\n            }\n            const hasLeadingZero = leadingChar === \"0\";\n            const maxValue = 2 ** (8 * maxBytes) - 1;\n            // eslint-disable-next-line no-constant-condition\n            while (true) {\n                const digit = this.readAtomically(() => {\n                    const char = this.readChar();\n                    if (char === undefined) {\n                        return undefined;\n                    }\n                    const num = Number.parseInt(char, radix);\n                    if (Number.isNaN(num)) {\n                        return undefined;\n                    }\n                    return num;\n                });\n                if (digit === undefined) {\n                    break;\n                }\n                result *= radix;\n                result += digit;\n                if (result > maxValue) {\n                    return undefined;\n                }\n                digitCount += 1;\n                if (maxDigits !== undefined) {\n                    if (digitCount > maxDigits) {\n                        return undefined;\n                    }\n                }\n            }\n            if (digitCount === 0) {\n                return undefined;\n            }\n            else if (!allowZeroPrefix && hasLeadingZero && digitCount > 1) {\n                return undefined;\n            }\n            else {\n                return result;\n            }\n        });\n    }\n    /** Read an IPv4 address. */\n    readIPv4Addr() {\n        return this.readAtomically(() => {\n            const out = new Uint8Array(4);\n            for (let i = 0; i < out.length; i++) {\n                const ix = this.readSeparator(\".\", i, () => this.readNumber(10, 3, false, 1));\n                if (ix === undefined) {\n                    return undefined;\n                }\n                out[i] = ix;\n            }\n            return out;\n        });\n    }\n    /** Read an IPv6 Address. */\n    readIPv6Addr() {\n        /**\n         * Read a chunk of an IPv6 address into `groups`. Returns the number\n         * of groups read, along with a bool indicating if an embedded\n         * trailing IPv4 address was read. Specifically, read a series of\n         * colon-separated IPv6 groups (0x0000 - 0xFFFF), with an optional\n         * trailing embedded IPv4 address.\n         */\n        const readGroups = (groups) => {\n            for (let i = 0; i < groups.length / 2; i++) {\n                const ix = i * 2;\n                // Try to read a trailing embedded IPv4 address. There must be at least 4 groups left.\n                if (i < groups.length - 3) {\n                    const ipv4 = this.readSeparator(\":\", i, () => this.readIPv4Addr());\n                    if (ipv4 !== undefined) {\n                        groups[ix] = ipv4[0];\n                        groups[ix + 1] = ipv4[1];\n                        groups[ix + 2] = ipv4[2];\n                        groups[ix + 3] = ipv4[3];\n                        return [ix + 4, true];\n                    }\n                }\n                const group = this.readSeparator(\":\", i, () => this.readNumber(16, 4, true, 2));\n                if (group === undefined) {\n                    return [ix, false];\n                }\n                groups[ix] = group >> 8;\n                groups[ix + 1] = group & 255;\n            }\n            return [groups.length, false];\n        };\n        return this.readAtomically(() => {\n            // Read the front part of the address; either the whole thing, or up to the first ::\n            const head = new Uint8Array(16);\n            const [headSize, headIp4] = readGroups(head);\n            if (headSize === 16) {\n                return head;\n            }\n            // IPv4 part is not allowed before `::`\n            if (headIp4) {\n                return undefined;\n            }\n            // Read `::` if previous code parsed less than 8 groups.\n            // `::` indicates one or more groups of 16 bits of zeros.\n            if (this.readGivenChar(\":\") === undefined) {\n                return undefined;\n            }\n            if (this.readGivenChar(\":\") === undefined) {\n                return undefined;\n            }\n            // Read the back part of the address. The :: must contain at least one\n            // set of zeroes, so our max length is 7.\n            const tail = new Uint8Array(14);\n            const limit = 16 - (headSize + 2);\n            const [tailSize] = readGroups(tail.subarray(0, limit));\n            // Concat the head and tail of the IP address\n            head.set(tail.subarray(0, tailSize), 16 - tailSize);\n            return head;\n        });\n    }\n    /** Read an IP Address, either IPv4 or IPv6. */\n    readIPAddr() {\n        return this.readIPv4Addr() ?? this.readIPv6Addr();\n    }\n}\n//# sourceMappingURL=parser.js.map","import { parseIP, parseIPv4, parseIPv6 } from \"./parse.js\";\n/** Check if `input` is IPv4. */\nexport function isIPv4(input) {\n    return Boolean(parseIPv4(input));\n}\n/** Check if `input` is IPv6. */\nexport function isIPv6(input) {\n    return Boolean(parseIPv6(input));\n}\n/** Check if `input` is IPv4 or IPv6. */\nexport function isIP(input) {\n    return Boolean(parseIP(input));\n}\n/**\n * @returns `6` if `input` is IPv6, `4` if `input` is IPv4, or `undefined` if `input` is neither.\n */\nexport function ipVersion(input) {\n    if (isIPv4(input)) {\n        return 4;\n    }\n    else if (isIPv6(input)) {\n        return 6;\n    }\n    else {\n        return undefined;\n    }\n}\n//# sourceMappingURL=is-ip.js.map","import { parseIP } from \"@chainsafe/is-ip/parse\";\nimport { allFF, deepEqual } from \"./util.js\";\nexport const IPv4Len = 4;\nexport const IPv6Len = 16;\nexport const maxIPv6Octet = parseInt(\"0xFFFF\", 16);\nexport const ipv4Prefix = new Uint8Array([\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255,\n]);\nexport function maskIp(ip, mask) {\n    if (mask.length === IPv6Len && ip.length === IPv4Len && allFF(mask, 0, 11)) {\n        mask = mask.slice(12);\n    }\n    if (mask.length === IPv4Len &&\n        ip.length === IPv6Len &&\n        deepEqual(ip, ipv4Prefix, 0, 11)) {\n        ip = ip.slice(12);\n    }\n    const n = ip.length;\n    if (n != mask.length) {\n        throw new Error(\"Failed to mask ip\");\n    }\n    const out = new Uint8Array(n);\n    for (let i = 0; i < n; i++) {\n        out[i] = ip[i] & mask[i];\n    }\n    return out;\n}\nexport function containsIp(net, ip) {\n    if (typeof ip === \"string\") {\n        ip = parseIP(ip);\n    }\n    if (ip == null)\n        throw new Error(\"Invalid ip\");\n    if (ip.length !== net.network.length) {\n        return false;\n    }\n    for (let i = 0; i < ip.length; i++) {\n        if ((net.network[i] & net.mask[i]) !== (ip[i] & net.mask[i])) {\n            return false;\n        }\n    }\n    return true;\n}\nexport function iPv4FromIPv6(ip) {\n    if (!isIPv4mappedIPv6(ip)) {\n        throw new Error(\"Must have 0xffff prefix\");\n    }\n    return ip.slice(12);\n}\nexport function isIPv4mappedIPv6(ip) {\n    return deepEqual(ip, ipv4Prefix, 0, 11);\n}\n//# sourceMappingURL=ip.js.map","import { isIPv4, isIPv6 } from '@chainsafe/is-ip';\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string';\nexport { isIP } from '@chainsafe/is-ip';\nexport const isV4 = isIPv4;\nexport const isV6 = isIPv6;\n// Copied from https://github.com/indutny/node-ip/blob/master/lib/ip.js#L7\n// but with buf/offset args removed because we don't use them\nexport const toBytes = function (ip) {\n    let offset = 0;\n    ip = ip.toString().trim();\n    if (isV4(ip)) {\n        const bytes = new Uint8Array(offset + 4);\n        ip.split(/\\./g).forEach((byte) => {\n            bytes[offset++] = parseInt(byte, 10) & 0xff;\n        });\n        return bytes;\n    }\n    if (isV6(ip)) {\n        const sections = ip.split(':', 8);\n        let i;\n        for (i = 0; i < sections.length; i++) {\n            const isv4 = isV4(sections[i]);\n            let v4Buffer;\n            if (isv4) {\n                v4Buffer = toBytes(sections[i]);\n                sections[i] = uint8ArrayToString(v4Buffer.slice(0, 2), 'base16');\n            }\n            if (v4Buffer != null && ++i < 8) {\n                sections.splice(i, 0, uint8ArrayToString(v4Buffer.slice(2, 4), 'base16'));\n            }\n        }\n        if (sections[0] === '') {\n            while (sections.length < 8)\n                sections.unshift('0');\n        }\n        else if (sections[sections.length - 1] === '') {\n            while (sections.length < 8)\n                sections.push('0');\n        }\n        else if (sections.length < 8) {\n            for (i = 0; i < sections.length && sections[i] !== ''; i++)\n                ;\n            const argv = [i, 1];\n            for (i = 9 - sections.length; i > 0; i--) {\n                argv.push('0');\n            }\n            sections.splice.apply(sections, argv);\n        }\n        const bytes = new Uint8Array(offset + 16);\n        for (i = 0; i < sections.length; i++) {\n            const word = parseInt(sections[i], 16);\n            bytes[offset++] = (word >> 8) & 0xff;\n            bytes[offset++] = word & 0xff;\n        }\n        return bytes;\n    }\n    throw new Error('invalid ip address');\n};\n// Copied from https://github.com/indutny/node-ip/blob/master/lib/ip.js#L63\nexport const toString = function (buf, offset = 0, length) {\n    offset = ~~offset;\n    length = length ?? (buf.length - offset);\n    const view = new DataView(buf.buffer);\n    if (length === 4) {\n        const result = [];\n        // IPv4\n        for (let i = 0; i < length; i++) {\n            result.push(buf[offset + i]);\n        }\n        return result.join('.');\n    }\n    if (length === 16) {\n        const result = [];\n        // IPv6\n        for (let i = 0; i < length; i += 2) {\n            result.push(view.getUint16(offset + i).toString(16));\n        }\n        return result.join(':')\n            .replace(/(^|:)0(:0)*:0(:|$)/, '$1::$3')\n            .replace(/:{3,4}/, '::');\n    }\n    return '';\n};\n//# sourceMappingURL=ip.js.map","const V = -1;\nexport const names = {};\nexport const codes = {};\nexport const table = [\n    [4, 32, 'ip4'],\n    [6, 16, 'tcp'],\n    [33, 16, 'dccp'],\n    [41, 128, 'ip6'],\n    [42, V, 'ip6zone'],\n    [43, 8, 'ipcidr'],\n    [53, V, 'dns', true],\n    [54, V, 'dns4', true],\n    [55, V, 'dns6', true],\n    [56, V, 'dnsaddr', true],\n    [132, 16, 'sctp'],\n    [273, 16, 'udp'],\n    [275, 0, 'p2p-webrtc-star'],\n    [276, 0, 'p2p-webrtc-direct'],\n    [277, 0, 'p2p-stardust'],\n    [280, 0, 'webrtc-direct'],\n    [281, 0, 'webrtc'],\n    [290, 0, 'p2p-circuit'],\n    [301, 0, 'udt'],\n    [302, 0, 'utp'],\n    [400, V, 'unix', false, true],\n    // `ipfs` is added before `p2p` for legacy support.\n    // All text representations will default to `p2p`, but `ipfs` will\n    // still be supported\n    [421, V, 'ipfs'],\n    // `p2p` is the preferred name for 421, and is now the default\n    [421, V, 'p2p'],\n    [443, 0, 'https'],\n    [444, 96, 'onion'],\n    [445, 296, 'onion3'],\n    [446, V, 'garlic64'],\n    [448, 0, 'tls'],\n    [449, V, 'sni'],\n    [460, 0, 'quic'],\n    [461, 0, 'quic-v1'],\n    [465, 0, 'webtransport'],\n    [466, V, 'certhash'],\n    [477, 0, 'ws'],\n    [478, 0, 'wss'],\n    [479, 0, 'p2p-websocket-star'],\n    [480, 0, 'http'],\n    [481, V, 'http-path'],\n    [777, V, 'memory']\n];\n// populate tables\ntable.forEach(row => {\n    const proto = createProtocol(...row);\n    codes[proto.code] = proto;\n    names[proto.name] = proto;\n});\nexport function createProtocol(code, size, name, resolvable, path) {\n    return {\n        code,\n        size,\n        name,\n        resolvable: Boolean(resolvable),\n        path: Boolean(path)\n    };\n}\n/**\n * For the passed proto string or number, return a {@link Protocol}\n *\n * @example\n *\n * ```js\n * import { protocol } from '@multiformats/multiaddr'\n *\n * console.info(protocol(4))\n * // { code: 4, size: 32, name: 'ip4', resolvable: false, path: false }\n * ```\n */\nexport function getProtocol(proto) {\n    if (typeof proto === 'number') {\n        if (codes[proto] != null) {\n            return codes[proto];\n        }\n        throw new Error(`no protocol with code: ${proto}`);\n    }\n    else if (typeof proto === 'string') {\n        if (names[proto] != null) {\n            return names[proto];\n        }\n        throw new Error(`no protocol with name: ${proto}`);\n    }\n    throw new Error(`invalid protocol id type: ${typeof proto}`);\n}\n//# sourceMappingURL=protocols-table.js.map","/**\n * @packageDocumentation\n *\n * Provides methods for converting\n */\nimport { IpNet } from '@chainsafe/netmask';\nimport { base32 } from 'multiformats/bases/base32';\nimport { base58btc } from 'multiformats/bases/base58';\nimport { bases } from 'multiformats/basics';\nimport { CID } from 'multiformats/cid';\nimport * as Digest from 'multiformats/hashes/digest';\nimport * as varint from 'uint8-varint';\nimport { concat as uint8ArrayConcat } from 'uint8arrays/concat';\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string';\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string';\nimport * as ip from './ip.js';\nimport { getProtocol } from './protocols-table.js';\nconst ip4Protocol = getProtocol('ip4');\nconst ip6Protocol = getProtocol('ip6');\nconst ipcidrProtocol = getProtocol('ipcidr');\nexport function convert(proto, a) {\n    if (a instanceof Uint8Array) {\n        return convertToString(proto, a);\n    }\n    else {\n        return convertToBytes(proto, a);\n    }\n}\n/**\n * Convert [code,Uint8Array] to string\n */\nexport function convertToString(proto, buf) {\n    const protocol = getProtocol(proto);\n    switch (protocol.code) {\n        case 4: // ipv4\n        case 41: // ipv6\n            return bytes2ip(buf);\n        case 42: // ipv6zone\n            return bytes2str(buf);\n        case 6: // tcp\n        case 273: // udp\n        case 33: // dccp\n        case 132: // sctp\n            return bytes2port(buf).toString();\n        case 53: // dns\n        case 54: // dns4\n        case 55: // dns6\n        case 56: // dnsaddr\n        case 400: // unix\n        case 449: // sni\n        case 777: // memory\n            return bytes2str(buf);\n        case 421: // ipfs\n            return bytes2mh(buf);\n        case 444: // onion\n            return bytes2onion(buf);\n        case 445: // onion3\n            return bytes2onion(buf);\n        case 466: // certhash\n            return bytes2mb(buf);\n        case 481: // http-path\n            return globalThis.encodeURIComponent(bytes2str(buf));\n        default:\n            return uint8ArrayToString(buf, 'base16'); // no clue. convert to hex\n    }\n}\nexport function convertToBytes(proto, str) {\n    const protocol = getProtocol(proto);\n    switch (protocol.code) {\n        case 4: // ipv4\n            return ip2bytes(str);\n        case 41: // ipv6\n            return ip2bytes(str);\n        case 42: // ipv6zone\n            return str2bytes(str);\n        case 6: // tcp\n        case 273: // udp\n        case 33: // dccp\n        case 132: // sctp\n            return port2bytes(parseInt(str, 10));\n        case 53: // dns\n        case 54: // dns4\n        case 55: // dns6\n        case 56: // dnsaddr\n        case 400: // unix\n        case 449: // sni\n        case 777: // memory\n            return str2bytes(str);\n        case 421: // ipfs\n            return mh2bytes(str);\n        case 444: // onion\n            return onion2bytes(str);\n        case 445: // onion3\n            return onion32bytes(str);\n        case 466: // certhash\n            return mb2bytes(str);\n        case 481: // http-path\n            return str2bytes(globalThis.decodeURIComponent(str));\n        default:\n            return uint8ArrayFromString(str, 'base16'); // no clue. convert from hex\n    }\n}\nexport function convertToIpNet(multiaddr) {\n    let mask;\n    let addr;\n    multiaddr.stringTuples().forEach(([code, value]) => {\n        if (code === ip4Protocol.code || code === ip6Protocol.code) {\n            addr = value;\n        }\n        if (code === ipcidrProtocol.code) {\n            mask = value;\n        }\n    });\n    if (mask == null || addr == null) {\n        throw new Error('Invalid multiaddr');\n    }\n    return new IpNet(addr, mask);\n}\nconst decoders = Object.values(bases).map((c) => c.decoder);\nconst anybaseDecoder = (function () {\n    let acc = decoders[0].or(decoders[1]);\n    decoders.slice(2).forEach((d) => (acc = acc.or(d)));\n    return acc;\n})();\nfunction ip2bytes(ipString) {\n    if (!ip.isIP(ipString)) {\n        throw new Error('invalid ip address');\n    }\n    return ip.toBytes(ipString);\n}\nfunction bytes2ip(ipBuff) {\n    const ipString = ip.toString(ipBuff, 0, ipBuff.length);\n    if (ipString == null) {\n        throw new Error('ipBuff is required');\n    }\n    if (!ip.isIP(ipString)) {\n        throw new Error('invalid ip address');\n    }\n    return ipString;\n}\nfunction port2bytes(port) {\n    const buf = new ArrayBuffer(2);\n    const view = new DataView(buf);\n    view.setUint16(0, port);\n    return new Uint8Array(buf);\n}\nfunction bytes2port(buf) {\n    const view = new DataView(buf.buffer);\n    return view.getUint16(buf.byteOffset);\n}\nfunction str2bytes(str) {\n    const buf = uint8ArrayFromString(str);\n    const size = Uint8Array.from(varint.encode(buf.length));\n    return uint8ArrayConcat([size, buf], size.length + buf.length);\n}\nfunction bytes2str(buf) {\n    const size = varint.decode(buf);\n    buf = buf.slice(varint.encodingLength(size));\n    if (buf.length !== size) {\n        throw new Error('inconsistent lengths');\n    }\n    return uint8ArrayToString(buf);\n}\nfunction mh2bytes(hash) {\n    let mh;\n    if (hash[0] === 'Q' || hash[0] === '1') {\n        mh = Digest.decode(base58btc.decode(`z${hash}`)).bytes;\n    }\n    else {\n        mh = CID.parse(hash).multihash.bytes;\n    }\n    // the address is a varint prefixed multihash string representation\n    const size = Uint8Array.from(varint.encode(mh.length));\n    return uint8ArrayConcat([size, mh], size.length + mh.length);\n}\nfunction mb2bytes(mbstr) {\n    const mb = anybaseDecoder.decode(mbstr);\n    const size = Uint8Array.from(varint.encode(mb.length));\n    return uint8ArrayConcat([size, mb], size.length + mb.length);\n}\nfunction bytes2mb(buf) {\n    const size = varint.decode(buf);\n    const hash = buf.slice(varint.encodingLength(size));\n    if (hash.length !== size) {\n        throw new Error('inconsistent lengths');\n    }\n    return 'u' + uint8ArrayToString(hash, 'base64url');\n}\n/**\n * Converts bytes to bas58btc string\n */\nfunction bytes2mh(buf) {\n    const size = varint.decode(buf);\n    const address = buf.slice(varint.encodingLength(size));\n    if (address.length !== size) {\n        throw new Error('inconsistent lengths');\n    }\n    return uint8ArrayToString(address, 'base58btc');\n}\nfunction onion2bytes(str) {\n    const addr = str.split(':');\n    if (addr.length !== 2) {\n        throw new Error(`failed to parse onion addr: [\"'${addr.join('\", \"')}'\"]' does not contain a port number`);\n    }\n    if (addr[0].length !== 16) {\n        throw new Error(`failed to parse onion addr: ${addr[0]} not a Tor onion address.`);\n    }\n    // onion addresses do not include the multibase prefix, add it before decoding\n    const buf = base32.decode('b' + addr[0]);\n    // onion port number\n    const port = parseInt(addr[1], 10);\n    if (port < 1 || port > 65536) {\n        throw new Error('Port number is not in range(1, 65536)');\n    }\n    const portBuf = port2bytes(port);\n    return uint8ArrayConcat([buf, portBuf], buf.length + portBuf.length);\n}\nfunction onion32bytes(str) {\n    const addr = str.split(':');\n    if (addr.length !== 2) {\n        throw new Error(`failed to parse onion addr: [\"'${addr.join('\", \"')}'\"]' does not contain a port number`);\n    }\n    if (addr[0].length !== 56) {\n        throw new Error(`failed to parse onion addr: ${addr[0]} not a Tor onion3 address.`);\n    }\n    // onion addresses do not include the multibase prefix, add it before decoding\n    const buf = base32.decode(`b${addr[0]}`);\n    // onion port number\n    const port = parseInt(addr[1], 10);\n    if (port < 1 || port > 65536) {\n        throw new Error('Port number is not in range(1, 65536)');\n    }\n    const portBuf = port2bytes(port);\n    return uint8ArrayConcat([buf, portBuf], buf.length + portBuf.length);\n}\nfunction bytes2onion(buf) {\n    const addrBytes = buf.slice(0, buf.length - 2);\n    const portBytes = buf.slice(buf.length - 2);\n    const addr = uint8ArrayToString(addrBytes, 'base32');\n    const port = bytes2port(portBytes);\n    return `${addr}:${port}`;\n}\n//# sourceMappingURL=convert.js.map","import * as varint from 'uint8-varint';\nimport { concat as uint8ArrayConcat } from 'uint8arrays/concat';\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string';\nimport { convertToBytes, convertToString } from './convert.js';\nimport { getProtocol } from './protocols-table.js';\nexport function stringToMultiaddrParts(str) {\n    str = cleanPath(str);\n    const tuples = [];\n    const stringTuples = [];\n    let path = null;\n    const parts = str.split('/').slice(1);\n    if (parts.length === 1 && parts[0] === '') {\n        return {\n            bytes: new Uint8Array(),\n            string: '/',\n            tuples: [],\n            stringTuples: [],\n            path: null\n        };\n    }\n    for (let p = 0; p < parts.length; p++) {\n        const part = parts[p];\n        const proto = getProtocol(part);\n        if (proto.size === 0) {\n            tuples.push([proto.code]);\n            stringTuples.push([proto.code]);\n            // eslint-disable-next-line no-continue\n            continue;\n        }\n        p++; // advance addr part\n        if (p >= parts.length) {\n            throw ParseError('invalid address: ' + str);\n        }\n        // if it's a path proto, take the rest\n        if (proto.path === true) {\n            // should we need to check each path part to see if it's a proto?\n            // This would allow for other protocols to be added after a unix path,\n            // however it would have issues if the path had a protocol name in the path\n            path = cleanPath(parts.slice(p).join('/'));\n            tuples.push([proto.code, convertToBytes(proto.code, path)]);\n            stringTuples.push([proto.code, path]);\n            break;\n        }\n        const bytes = convertToBytes(proto.code, parts[p]);\n        tuples.push([proto.code, bytes]);\n        stringTuples.push([proto.code, convertToString(proto.code, bytes)]);\n    }\n    return {\n        string: stringTuplesToString(stringTuples),\n        bytes: tuplesToBytes(tuples),\n        tuples,\n        stringTuples,\n        path\n    };\n}\nexport function bytesToMultiaddrParts(bytes) {\n    const tuples = [];\n    const stringTuples = [];\n    let path = null;\n    let i = 0;\n    while (i < bytes.length) {\n        const code = varint.decode(bytes, i);\n        const n = varint.encodingLength(code);\n        const p = getProtocol(code);\n        const size = sizeForAddr(p, bytes.slice(i + n));\n        if (size === 0) {\n            tuples.push([code]);\n            stringTuples.push([code]);\n            i += n;\n            // eslint-disable-next-line no-continue\n            continue;\n        }\n        const addr = bytes.slice(i + n, i + n + size);\n        i += (size + n);\n        if (i > bytes.length) { // did not end _exactly_ at buffer.length\n            throw ParseError('Invalid address Uint8Array: ' + uint8ArrayToString(bytes, 'base16'));\n        }\n        // ok, tuple seems good.\n        tuples.push([code, addr]);\n        const stringAddr = convertToString(code, addr);\n        stringTuples.push([code, stringAddr]);\n        if (p.path === true) {\n            // should we need to check each path part to see if it's a proto?\n            // This would allow for other protocols to be added after a unix path,\n            // however it would have issues if the path had a protocol name in the path\n            path = stringAddr;\n            break;\n        }\n    }\n    return {\n        bytes: Uint8Array.from(bytes),\n        string: stringTuplesToString(stringTuples),\n        tuples,\n        stringTuples,\n        path\n    };\n}\n/**\n * [[str name, str addr]... ] -> string\n */\nfunction stringTuplesToString(tuples) {\n    const parts = [];\n    tuples.map((tup) => {\n        const proto = getProtocol(tup[0]);\n        parts.push(proto.name);\n        if (tup.length > 1 && tup[1] != null) {\n            parts.push(tup[1]);\n        }\n        return null;\n    });\n    return cleanPath(parts.join('/'));\n}\n/**\n * [[int code, Uint8Array ]... ] -> Uint8Array\n */\nexport function tuplesToBytes(tuples) {\n    return uint8ArrayConcat(tuples.map((tup) => {\n        const proto = getProtocol(tup[0]);\n        let buf = Uint8Array.from(varint.encode(proto.code));\n        if (tup.length > 1 && tup[1] != null) {\n            buf = uint8ArrayConcat([buf, tup[1]]); // add address buffer\n        }\n        return buf;\n    }));\n}\n/**\n * For the passed address, return the serialized size\n */\nfunction sizeForAddr(p, addr) {\n    if (p.size > 0) {\n        return p.size / 8;\n    }\n    else if (p.size === 0) {\n        return 0;\n    }\n    else {\n        const size = varint.decode(addr instanceof Uint8Array ? addr : Uint8Array.from(addr));\n        return size + varint.encodingLength(size);\n    }\n}\nexport function bytesToTuples(buf) {\n    const tuples = [];\n    let i = 0;\n    while (i < buf.length) {\n        const code = varint.decode(buf, i);\n        const n = varint.encodingLength(code);\n        const p = getProtocol(code);\n        const size = sizeForAddr(p, buf.slice(i + n));\n        if (size === 0) {\n            tuples.push([code]);\n            i += n;\n            // eslint-disable-next-line no-continue\n            continue;\n        }\n        const addr = buf.slice(i + n, i + n + size);\n        i += (size + n);\n        if (i > buf.length) { // did not end _exactly_ at buffer.length\n            throw ParseError('Invalid address Uint8Array: ' + uint8ArrayToString(buf, 'base16'));\n        }\n        // ok, tuple seems good.\n        tuples.push([code, addr]);\n    }\n    return tuples;\n}\nexport function cleanPath(str) {\n    return '/' + str.trim().split('/').filter((a) => a).join('/');\n}\nexport function ParseError(str) {\n    return new Error('Error parsing address: ' + str);\n}\n//# sourceMappingURL=codec.js.map","/**\n * @packageDocumentation\n *\n * An implementation of a Multiaddr in JavaScript\n *\n * @example\n *\n * ```js\n * import { multiaddr } from '@multiformats/multiaddr'\n *\n * const ma = multiaddr('/ip4/127.0.0.1/tcp/1234')\n * ```\n */\nimport { base58btc } from 'multiformats/bases/base58';\nimport { CID } from 'multiformats/cid';\nimport { equals as uint8ArrayEquals } from 'uint8arrays/equals';\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string';\nimport { bytesToMultiaddrParts, stringToMultiaddrParts, tuplesToBytes } from './codec.js';\nimport { getProtocol, names } from './protocols-table.js';\nimport { isMultiaddr, multiaddr, resolvers } from './index.js';\nconst inspect = Symbol.for('nodejs.util.inspect.custom');\nexport const symbol = Symbol.for('@multiformats/js-multiaddr/multiaddr');\nconst DNS_CODES = [\n    getProtocol('dns').code,\n    getProtocol('dns4').code,\n    getProtocol('dns6').code,\n    getProtocol('dnsaddr').code\n];\nclass NoAvailableResolverError extends Error {\n    constructor(message = 'No available resolver') {\n        super(message);\n        this.name = 'NoAvailableResolverError';\n    }\n}\n/**\n * Creates a {@link Multiaddr} from a {@link MultiaddrInput}\n */\nexport class Multiaddr {\n    bytes;\n    #string;\n    #tuples;\n    #stringTuples;\n    #path;\n    [symbol] = true;\n    constructor(addr) {\n        // default\n        if (addr == null) {\n            addr = '';\n        }\n        let parts;\n        if (addr instanceof Uint8Array) {\n            parts = bytesToMultiaddrParts(addr);\n        }\n        else if (typeof addr === 'string') {\n            if (addr.length > 0 && addr.charAt(0) !== '/') {\n                throw new Error(`multiaddr \"${addr}\" must start with a \"/\"`);\n            }\n            parts = stringToMultiaddrParts(addr);\n        }\n        else if (isMultiaddr(addr)) { // Multiaddr\n            parts = bytesToMultiaddrParts(addr.bytes);\n        }\n        else {\n            throw new Error('addr must be a string, Buffer, or another Multiaddr');\n        }\n        this.bytes = parts.bytes;\n        this.#string = parts.string;\n        this.#tuples = parts.tuples;\n        this.#stringTuples = parts.stringTuples;\n        this.#path = parts.path;\n    }\n    toString() {\n        return this.#string;\n    }\n    toJSON() {\n        return this.toString();\n    }\n    toOptions() {\n        let family;\n        let transport;\n        let host;\n        let port;\n        let zone = '';\n        const tcp = getProtocol('tcp');\n        const udp = getProtocol('udp');\n        const ip4 = getProtocol('ip4');\n        const ip6 = getProtocol('ip6');\n        const dns6 = getProtocol('dns6');\n        const ip6zone = getProtocol('ip6zone');\n        for (const [code, value] of this.stringTuples()) {\n            if (code === ip6zone.code) {\n                zone = `%${value ?? ''}`;\n            }\n            // default to https when protocol & port are omitted from DNS addrs\n            if (DNS_CODES.includes(code)) {\n                transport = tcp.name;\n                port = 443;\n                host = `${value ?? ''}${zone}`;\n                family = code === dns6.code ? 6 : 4;\n            }\n            if (code === tcp.code || code === udp.code) {\n                transport = getProtocol(code).name;\n                port = parseInt(value ?? '');\n            }\n            if (code === ip4.code || code === ip6.code) {\n                transport = getProtocol(code).name;\n                host = `${value ?? ''}${zone}`;\n                family = code === ip6.code ? 6 : 4;\n            }\n        }\n        if (family == null || transport == null || host == null || port == null) {\n            throw new Error('multiaddr must have a valid format: \"/{ip4, ip6, dns4, dns6, dnsaddr}/{address}/{tcp, udp}/{port}\".');\n        }\n        const opts = {\n            family,\n            host,\n            transport,\n            port\n        };\n        return opts;\n    }\n    protos() {\n        return this.#tuples.map(([code]) => Object.assign({}, getProtocol(code)));\n    }\n    protoCodes() {\n        return this.#tuples.map(([code]) => code);\n    }\n    protoNames() {\n        return this.#tuples.map(([code]) => getProtocol(code).name);\n    }\n    tuples() {\n        return this.#tuples;\n    }\n    stringTuples() {\n        return this.#stringTuples;\n    }\n    encapsulate(addr) {\n        addr = new Multiaddr(addr);\n        return new Multiaddr(this.toString() + addr.toString());\n    }\n    decapsulate(addr) {\n        const addrString = addr.toString();\n        const s = this.toString();\n        const i = s.lastIndexOf(addrString);\n        if (i < 0) {\n            throw new Error(`Address ${this.toString()} does not contain subaddress: ${addr.toString()}`);\n        }\n        return new Multiaddr(s.slice(0, i));\n    }\n    decapsulateCode(code) {\n        const tuples = this.tuples();\n        for (let i = tuples.length - 1; i >= 0; i--) {\n            if (tuples[i][0] === code) {\n                return new Multiaddr(tuplesToBytes(tuples.slice(0, i)));\n            }\n        }\n        return this;\n    }\n    getPeerId() {\n        try {\n            let tuples = [];\n            this.stringTuples().forEach(([code, name]) => {\n                if (code === names.p2p.code) {\n                    tuples.push([code, name]);\n                }\n                // if this is a p2p-circuit address, return the target peer id if present\n                // not the peer id of the relay\n                if (code === names['p2p-circuit'].code) {\n                    tuples = [];\n                }\n            });\n            // Get the last ipfs tuple ['p2p', 'peerid string']\n            const tuple = tuples.pop();\n            if (tuple?.[1] != null) {\n                const peerIdStr = tuple[1];\n                // peer id is base58btc encoded string but not multibase encoded so add the `z`\n                // prefix so we can validate that it is correctly encoded\n                if (peerIdStr[0] === 'Q' || peerIdStr[0] === '1') {\n                    return uint8ArrayToString(base58btc.decode(`z${peerIdStr}`), 'base58btc');\n                }\n                // try to parse peer id as CID\n                return uint8ArrayToString(CID.parse(peerIdStr).multihash.bytes, 'base58btc');\n            }\n            return null;\n        }\n        catch (e) {\n            return null;\n        }\n    }\n    getPath() {\n        return this.#path;\n    }\n    equals(addr) {\n        return uint8ArrayEquals(this.bytes, addr.bytes);\n    }\n    async resolve(options) {\n        const resolvableProto = this.protos().find((p) => p.resolvable);\n        // Multiaddr is not resolvable?\n        if (resolvableProto == null) {\n            return [this];\n        }\n        const resolver = resolvers.get(resolvableProto.name);\n        if (resolver == null) {\n            throw new NoAvailableResolverError(`no available resolver for ${resolvableProto.name}`);\n        }\n        const result = await resolver(this, options);\n        return result.map(str => multiaddr(str));\n    }\n    nodeAddress() {\n        const options = this.toOptions();\n        if (options.transport !== 'tcp' && options.transport !== 'udp') {\n            throw new Error(`multiaddr must have a valid format - no protocol with name: \"${options.transport}\". Must have a valid transport protocol: \"{tcp, udp}\"`);\n        }\n        return {\n            family: options.family,\n            address: options.host,\n            port: options.port\n        };\n    }\n    isThinWaistAddress(addr) {\n        const protos = (addr ?? this).protos();\n        if (protos.length !== 2) {\n            return false;\n        }\n        if (protos[0].code !== 4 && protos[0].code !== 41) {\n            return false;\n        }\n        if (protos[1].code !== 6 && protos[1].code !== 273) {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * Returns Multiaddr as a human-readable string\n     * https://nodejs.org/api/util.html#utilinspectcustom\n     *\n     * @example\n     * ```js\n     * import { multiaddr } from '@multiformats/multiaddr'\n     *\n     * console.info(multiaddr('/ip4/127.0.0.1/tcp/4001'))\n     * // 'Multiaddr(/ip4/127.0.0.1/tcp/4001)'\n     * ```\n     */\n    [inspect]() {\n        return `Multiaddr(${this.#string})`;\n    }\n}\n//# sourceMappingURL=multiaddr.js.map","/**\n * @packageDocumentation\n *\n * A standard way to represent addresses that\n *\n * - support any standard network protocol\n * - are self-describing\n * - have a binary packed format\n * - have a nice string representation\n * - encapsulate well\n *\n * @example\n *\n * ```TypeScript\n * import { multiaddr } from '@multiformats/multiaddr'\n * const addr =  multiaddr(\"/ip4/127.0.0.1/udp/1234\")\n * // Multiaddr(/ip4/127.0.0.1/udp/1234)\n *\n * const addr = multiaddr(\"/ip4/127.0.0.1/udp/1234\")\n * // Multiaddr(/ip4/127.0.0.1/udp/1234)\n *\n * addr.bytes\n * // <Uint8Array 04 7f 00 00 01 11 04 d2>\n *\n * addr.toString()\n * // '/ip4/127.0.0.1/udp/1234'\n *\n * addr.protos()\n * // [\n * //   {code: 4, name: 'ip4', size: 32},\n * //   {code: 273, name: 'udp', size: 16}\n * // ]\n *\n * // gives you an object that is friendly with what Node.js core modules expect for addresses\n * addr.nodeAddress()\n * // {\n * //   family: 4,\n * //   port: 1234,\n * //   address: \"127.0.0.1\"\n * // }\n *\n * addr.encapsulate('/sctp/5678')\n * // Multiaddr(/ip4/127.0.0.1/udp/1234/sctp/5678)\n * ```\n *\n * ## Resolving DNSADDR addresses\n *\n * [DNSADDR](https://github.com/multiformats/multiaddr/blob/master/protocols/DNSADDR.md) is a spec that allows storing a TXT DNS record that contains a Multiaddr.\n *\n * To resolve DNSADDR addresses, call the `.resolve()` function the multiaddr, optionally passing a `DNS` resolver.\n *\n * DNSADDR addresses can resolve to multiple multiaddrs, since there is no limit to the number of TXT records that can be stored.\n *\n * @example Resolving DNSADDR Multiaddrs\n *\n * ```TypeScript\n * import { multiaddr, resolvers } from '@multiformats/multiaddr'\n * import { dnsaddr } from '@multiformats/multiaddr/resolvers'\n *\n * resolvers.set('dnsaddr', dnsaddr)\n *\n * const ma = multiaddr('/dnsaddr/bootstrap.libp2p.io')\n *\n * // resolve with a 5s timeout\n * const resolved = await ma.resolve({\n *   signal: AbortSignal.timeout(5000)\n * })\n *\n * console.info(await ma.resolve(resolved)\n * // [Multiaddr('/ip4/147.75...'), Multiaddr('/ip4/147.75...'), Multiaddr('/ip4/147.75...')...]\n * ```\n *\n * @example Using a custom DNS resolver to resolve DNSADDR Multiaddrs\n *\n * See the docs for [@multiformats/dns](https://www.npmjs.com/package/@multiformats/dns) for a full breakdown of how to specify multiple resolvers or resolvers that can be used for specific TLDs.\n *\n * ```TypeScript\n * import { multiaddr } from '@multiformats/multiaddr'\n * import { dns } from '@multiformats/dns'\n * import { dnsJsonOverHttps } from '@multiformats/dns/resolvers'\n *\n * const resolver = dns({\n *   '.': dnsJsonOverHttps('https://cloudflare-dns.com/dns-query')\n * })\n *\n * const ma = multiaddr('/dnsaddr/bootstrap.libp2p.io')\n * const resolved = await ma.resolve({\n *  dns: resolver\n * })\n *\n * console.info(resolved)\n * // [Multiaddr('/ip4/147.75...'), Multiaddr('/ip4/147.75...'), Multiaddr('/ip4/147.75...')...]\n * ```\n */\nimport { Multiaddr as MultiaddrClass, symbol } from './multiaddr.js';\nimport { getProtocol } from './protocols-table.js';\n/**\n * All configured {@link Resolver}s\n */\nexport const resolvers = new Map();\nexport { MultiaddrFilter } from './filter/multiaddr-filter.js';\n/**\n * Creates a Multiaddr from a node-friendly address object\n *\n * @example\n * ```js\n * import { fromNodeAddress } from '@multiformats/multiaddr'\n *\n * fromNodeAddress({address: '127.0.0.1', port: '4001'}, 'tcp')\n * // Multiaddr(/ip4/127.0.0.1/tcp/4001)\n * ```\n */\nexport function fromNodeAddress(addr, transport) {\n    if (addr == null) {\n        throw new Error('requires node address object');\n    }\n    if (transport == null) {\n        throw new Error('requires transport protocol');\n    }\n    let ip;\n    let host = addr.address;\n    switch (addr.family) {\n        case 4:\n            ip = 'ip4';\n            break;\n        case 6:\n            ip = 'ip6';\n            if (host.includes('%')) {\n                const parts = host.split('%');\n                if (parts.length !== 2) {\n                    throw Error('Multiple ip6 zones in multiaddr');\n                }\n                host = parts[0];\n                const zone = parts[1];\n                ip = `/ip6zone/${zone}/ip6`;\n            }\n            break;\n        default:\n            throw Error('Invalid addr family, should be 4 or 6.');\n    }\n    return new MultiaddrClass('/' + [ip, host, transport, addr.port].join('/'));\n}\n/**\n * Returns if something is a {@link Multiaddr} that is a resolvable name\n *\n * @example\n *\n * ```js\n * import { isName, multiaddr } from '@multiformats/multiaddr'\n *\n * isName(multiaddr('/ip4/127.0.0.1'))\n * // false\n * isName(multiaddr('/dns/ipfs.io'))\n * // true\n * ```\n */\nexport function isName(addr) {\n    if (!isMultiaddr(addr)) {\n        return false;\n    }\n    // if a part of the multiaddr is resolvable, then return true\n    return addr.protos().some((proto) => proto.resolvable);\n}\n/**\n * Check if object is a {@link Multiaddr} instance\n *\n * @example\n *\n * ```js\n * import { isMultiaddr, multiaddr } from '@multiformats/multiaddr'\n *\n * isMultiaddr(5)\n * // false\n * isMultiaddr(multiaddr('/ip4/127.0.0.1'))\n * // true\n * ```\n */\nexport function isMultiaddr(value) {\n    return Boolean(value?.[symbol]);\n}\n/**\n * A function that takes a {@link MultiaddrInput} and returns a {@link Multiaddr}\n *\n * @example\n * ```js\n * import { multiaddr } from '@libp2p/multiaddr'\n *\n * multiaddr('/ip4/127.0.0.1/tcp/4001')\n * // Multiaddr(/ip4/127.0.0.1/tcp/4001)\n * ```\n *\n * @param {MultiaddrInput} [addr] - If String or Uint8Array, needs to adhere to the address format of a [multiaddr](https://github.com/multiformats/multiaddr#string-format)\n */\nexport function multiaddr(addr) {\n    return new MultiaddrClass(addr);\n}\nexport { getProtocol as protocols };\n//# sourceMappingURL=index.js.map","import { sha256 } from \"@noble/hashes/sha256\";\nimport { isDefined } from \"@waku/utils\";\nimport { bytesToUtf8, concat, numberToBytes, utf8ToBytes } from \"@waku/utils/bytes\";\n/**\n * Deterministic Message Hashing as defined in\n * [14/WAKU2-MESSAGE](https://rfc.vac.dev/spec/14/#deterministic-message-hashing)\n */\nexport function messageHash(pubsubTopic, message) {\n    const pubsubTopicBytes = utf8ToBytes(pubsubTopic);\n    const contentTopicBytes = utf8ToBytes(message.contentTopic);\n    const timestampBytes = tryConvertTimestampToBytes(message.timestamp);\n    const bytes = concat([\n        pubsubTopicBytes,\n        message.payload,\n        contentTopicBytes,\n        message.meta,\n        timestampBytes\n    ].filter(isDefined));\n    return sha256(bytes);\n}\nfunction tryConvertTimestampToBytes(timestamp) {\n    if (!timestamp) {\n        return;\n    }\n    let bigIntTimestamp;\n    if (typeof timestamp === \"bigint\") {\n        bigIntTimestamp = timestamp;\n    }\n    else {\n        bigIntTimestamp = BigInt(timestamp.valueOf()) * 1000000n;\n    }\n    return numberToBytes(bigIntTimestamp);\n}\nexport function messageHashStr(pubsubTopic, message) {\n    const hash = messageHash(pubsubTopic, message);\n    const hashStr = bytesToUtf8(hash);\n    return hashStr;\n}\n//# sourceMappingURL=index.js.map","import { getHealthManager } from \"@waku/core\";\nimport { delay, Logger } from \"@waku/utils\";\nconst RENEW_TIME_LOCK_DURATION = 30 * 1000;\nconst DEFAULT_NUM_PEERS_TO_USE = 2;\nconst DEFAULT_MAINTAIN_PEERS_INTERVAL = 30_000;\nexport class BaseProtocolSDK {\n    core;\n    connectionManager;\n    healthManager;\n    numPeersToUse;\n    peers = [];\n    maintainPeersIntervalId = null;\n    log;\n    maintainPeersLock = false;\n    renewPeersLocker = new RenewPeerLocker(RENEW_TIME_LOCK_DURATION);\n    constructor(core, connectionManager, options) {\n        this.core = core;\n        this.connectionManager = connectionManager;\n        this.log = new Logger(`sdk:${core.multicodec}`);\n        this.healthManager = getHealthManager();\n        this.numPeersToUse = options?.numPeersToUse ?? DEFAULT_NUM_PEERS_TO_USE;\n        const maintainPeersInterval = options?.maintainPeersInterval ?? DEFAULT_MAINTAIN_PEERS_INTERVAL;\n        void this.startMaintainPeersInterval(maintainPeersInterval);\n    }\n    get connectedPeers() {\n        return this.peers;\n    }\n    /**\n     * Disconnects from a peer and tries to find a new one to replace it.\n     * @param peerToDisconnect The peer to disconnect from.\n     * @returns The new peer that was found and connected to.\n     */\n    async renewPeer(peerToDisconnect) {\n        this.log.info(`Renewing peer ${peerToDisconnect}`);\n        await this.connectionManager.dropConnection(peerToDisconnect);\n        const peer = (await this.findAndAddPeers(1))[0];\n        if (!peer) {\n            this.log.error(\"Failed to find a new peer to replace the disconnected one.\");\n        }\n        const updatedPeers = this.peers.filter((peer) => !peer.id.equals(peerToDisconnect));\n        this.updatePeers(updatedPeers);\n        this.log.info(`Peer ${peerToDisconnect} disconnected and removed from the peer list`);\n        this.renewPeersLocker.lock(peerToDisconnect);\n        return peer;\n    }\n    /**\n     * Stops the maintain peers interval.\n     */\n    stopMaintainPeersInterval() {\n        if (this.maintainPeersIntervalId) {\n            clearInterval(this.maintainPeersIntervalId);\n            this.maintainPeersIntervalId = null;\n            this.log.info(\"Maintain peers interval stopped\");\n        }\n    }\n    /**\n     * Checks if there are peers to send a message to.\n     * If `forceUseAllPeers` is `false` (default) and there are connected peers, returns `true`.\n     * If `forceUseAllPeers` is `true` or there are no connected peers, tries to find new peers from the ConnectionManager.\n     * If `autoRetry` is `false`, returns `false` if no peers are found.\n     * If `autoRetry` is `true`, tries to find new peers from the ConnectionManager with exponential backoff.\n     * Returns `true` if peers are found, `false` otherwise.\n     * @param options Optional options object\n     * @param options.autoRetry Optional flag to enable auto-retry with exponential backoff (default: false)\n     * @param options.forceUseAllPeers Optional flag to force using all available peers (default: false)\n     * @param options.initialDelay Optional initial delay in milliseconds for exponential backoff (default: 10)\n     * @param options.maxAttempts Optional maximum number of attempts for exponential backoff (default: 3)\n     * @param options.maxDelay Optional maximum delay in milliseconds for exponential backoff (default: 100)\n     */\n    hasPeers = async (options = {}) => {\n        const { autoRetry = false, forceUseAllPeers = false, initialDelay = 10, maxAttempts = 3, maxDelay = 100 } = options;\n        if (!forceUseAllPeers && this.connectedPeers.length > 0)\n            return true;\n        let attempts = 0;\n        while (attempts < maxAttempts) {\n            attempts++;\n            if (await this.maintainPeers()) {\n                if (this.peers.length < this.numPeersToUse) {\n                    this.log.warn(`Found only ${this.peers.length} peers, expected ${this.numPeersToUse}`);\n                }\n                return true;\n            }\n            if (!autoRetry)\n                return false;\n            const delayMs = Math.min(initialDelay * Math.pow(2, attempts - 1), maxDelay);\n            await delay(delayMs);\n        }\n        this.log.error(\"Failed to find peers to send message to\");\n        return false;\n    };\n    /**\n     * Starts an interval to maintain the peers list to `numPeersToUse`.\n     * @param interval The interval in milliseconds to maintain the peers.\n     */\n    async startMaintainPeersInterval(interval) {\n        this.log.info(\"Starting maintain peers interval\");\n        try {\n            await this.maintainPeers();\n            this.maintainPeersIntervalId = setInterval(() => {\n                this.maintainPeers().catch((error) => {\n                    this.log.error(\"Error during maintain peers interval:\", error);\n                });\n            }, interval);\n            this.log.info(`Maintain peers interval started with interval ${interval}ms`);\n        }\n        catch (error) {\n            this.log.error(\"Error starting maintain peers interval:\", error);\n            throw error;\n        }\n    }\n    /**\n     * Maintains the peers list to `numPeersToUse`.\n     */\n    async maintainPeers() {\n        if (this.maintainPeersLock) {\n            return false;\n        }\n        this.maintainPeersLock = true;\n        this.log.info(`Maintaining peers, current count: ${this.peers.length}`);\n        try {\n            const numPeersToAdd = this.numPeersToUse - this.peers.length;\n            if (numPeersToAdd > 0) {\n                await this.findAndAddPeers(numPeersToAdd);\n            }\n            this.log.info(`Peer maintenance completed, current count: ${this.peers.length}`);\n            this.renewPeersLocker.cleanUnlocked();\n        }\n        finally {\n            this.maintainPeersLock = false;\n        }\n        return true;\n    }\n    /**\n     * Finds and adds new peers to the peers list.\n     * @param numPeers The number of peers to find and add.\n     */\n    async findAndAddPeers(numPeers) {\n        this.log.info(`Finding and adding ${numPeers} new peers`);\n        try {\n            const additionalPeers = await this.findAdditionalPeers(numPeers);\n            const dials = additionalPeers.map((peer) => this.connectionManager.attemptDial(peer.id));\n            await Promise.all(dials);\n            const updatedPeers = [...this.peers, ...additionalPeers];\n            this.updatePeers(updatedPeers);\n            this.log.info(`Added ${additionalPeers.length} new peers, total peers: ${this.peers.length}`);\n            return additionalPeers;\n        }\n        catch (error) {\n            this.log.error(\"Error finding and adding new peers:\", error);\n            throw error;\n        }\n    }\n    /**\n     * Finds additional peers.\n     * Attempts to find peers without using bootstrap peers first,\n     * If no peers are found,\n     * tries with bootstrap peers.\n     * @param numPeers The number of peers to find.\n     */\n    async findAdditionalPeers(numPeers) {\n        this.log.info(`Finding ${numPeers} additional peers`);\n        try {\n            let newPeers = await this.core.allPeers();\n            if (newPeers.length === 0) {\n                this.log.warn(\"No new peers found.\");\n            }\n            newPeers = newPeers\n                .filter((peer) => this.peers.some((p) => p.id.equals(peer.id)) === false)\n                .filter((peer) => !this.renewPeersLocker.isLocked(peer.id))\n                .slice(0, numPeers);\n            return newPeers;\n        }\n        catch (error) {\n            this.log.error(\"Error finding additional peers:\", error);\n            throw error;\n        }\n    }\n    updatePeers(peers) {\n        this.peers = peers;\n        this.healthManager.updateProtocolHealth(this.core.multicodec, this.peers.length);\n    }\n}\nclass RenewPeerLocker {\n    lockDuration;\n    peers = new Map();\n    constructor(lockDuration) {\n        this.lockDuration = lockDuration;\n    }\n    lock(id) {\n        this.peers.set(id.toString(), Date.now());\n    }\n    isLocked(id) {\n        const time = this.peers.get(id.toString());\n        if (time && !this.isTimeUnlocked(time)) {\n            return true;\n        }\n        return false;\n    }\n    cleanUnlocked() {\n        Object.entries(this.peers).forEach(([id, lock]) => {\n            if (this.isTimeUnlocked(lock)) {\n                this.peers.delete(id.toString());\n            }\n        });\n    }\n    isTimeUnlocked(time) {\n        return Date.now() - time >= this.lockDuration;\n    }\n}\n//# sourceMappingURL=base_protocol.js.map","import { FilterCore } from \"@waku/core\";\nimport { EConnectionStateEvents, ProtocolError } from \"@waku/interfaces\";\nimport { messageHashStr } from \"@waku/message-hash\";\nimport { ensurePubsubTopicIsConfigured, groupByContentTopic, Logger, shardInfoToPubsubTopics, toAsyncIterator } from \"@waku/utils\";\nimport { BaseProtocolSDK } from \"./base_protocol.js\";\nconst log = new Logger(\"sdk:filter\");\nconst DEFAULT_MAX_PINGS = 2;\nconst DEFAULT_MAX_MISSED_MESSAGES_THRESHOLD = 3;\nconst DEFAULT_KEEP_ALIVE = 60 * 1000;\nexport class SubscriptionManager {\n    pubsubTopic;\n    protocol;\n    connectionManager;\n    getPeers;\n    renewPeer;\n    subscriptionCallbacks = new Map();\n    receivedMessagesHashStr = [];\n    peerFailures = new Map();\n    receivedMessagesHashes;\n    missedMessagesByPeer = new Map();\n    keepAliveInterval = DEFAULT_KEEP_ALIVE;\n    maxPingFailures = DEFAULT_MAX_PINGS;\n    maxMissedMessagesThreshold = DEFAULT_MAX_MISSED_MESSAGES_THRESHOLD;\n    keepAliveTimer = null;\n    constructor(pubsubTopic, protocol, connectionManager, getPeers, renewPeer) {\n        this.pubsubTopic = pubsubTopic;\n        this.protocol = protocol;\n        this.connectionManager = connectionManager;\n        this.getPeers = getPeers;\n        this.renewPeer = renewPeer;\n        this.pubsubTopic = pubsubTopic;\n        const allPeerIdStr = this.getPeers().map((p) => p.id.toString());\n        this.receivedMessagesHashes = {\n            all: new Set(),\n            nodes: {\n                ...Object.fromEntries(allPeerIdStr.map((peerId) => [peerId, new Set()]))\n            }\n        };\n        allPeerIdStr.forEach((peerId) => this.missedMessagesByPeer.set(peerId, 0));\n    }\n    addHash(hash, peerIdStr) {\n        this.receivedMessagesHashes.all.add(hash);\n        if (!peerIdStr) {\n            return;\n        }\n        if (!this.receivedMessagesHashes.nodes[peerIdStr]) {\n            this.receivedMessagesHashes.nodes[peerIdStr] = new Set();\n        }\n        this.receivedMessagesHashes.nodes[peerIdStr].add(hash);\n    }\n    async subscribe(decoders, callback, options = {}) {\n        this.keepAliveInterval = options.keepAlive || DEFAULT_KEEP_ALIVE;\n        this.maxPingFailures = options.pingsBeforePeerRenewed || DEFAULT_MAX_PINGS;\n        this.maxMissedMessagesThreshold =\n            options.maxMissedMessagesThreshold ||\n                DEFAULT_MAX_MISSED_MESSAGES_THRESHOLD;\n        const decodersArray = Array.isArray(decoders) ? decoders : [decoders];\n        // check that all decoders are configured for the same pubsub topic as this subscription\n        for (const decoder of decodersArray) {\n            if (decoder.pubsubTopic !== this.pubsubTopic) {\n                return {\n                    failures: [\n                        {\n                            error: ProtocolError.TOPIC_DECODER_MISMATCH\n                        }\n                    ],\n                    successes: []\n                };\n            }\n        }\n        const decodersGroupedByCT = groupByContentTopic(decodersArray);\n        const contentTopics = Array.from(decodersGroupedByCT.keys());\n        const promises = this.getPeers().map(async (peer) => this.protocol.subscribe(this.pubsubTopic, peer, contentTopics));\n        const results = await Promise.allSettled(promises);\n        const finalResult = this.handleResult(results, \"subscribe\");\n        // Save the callback functions by content topics so they\n        // can easily be removed (reciprocally replaced) if `unsubscribe` (reciprocally `subscribe`)\n        // is called for those content topics\n        decodersGroupedByCT.forEach((decoders, contentTopic) => {\n            // Cast the type because a given `subscriptionCallbacks` map may hold\n            // Decoder that decode to different implementations of `IDecodedMessage`\n            const subscriptionCallback = {\n                decoders,\n                callback\n            };\n            // The callback and decoder may override previous values, this is on\n            // purpose as the user may call `subscribe` to refresh the subscription\n            this.subscriptionCallbacks.set(contentTopic, subscriptionCallback);\n        });\n        this.startSubscriptionsMaintenance(this.keepAliveInterval);\n        return finalResult;\n    }\n    async unsubscribe(contentTopics) {\n        const promises = this.getPeers().map(async (peer) => {\n            const response = await this.protocol.unsubscribe(this.pubsubTopic, peer, contentTopics);\n            contentTopics.forEach((contentTopic) => {\n                this.subscriptionCallbacks.delete(contentTopic);\n            });\n            return response;\n        });\n        const results = await Promise.allSettled(promises);\n        const finalResult = this.handleResult(results, \"unsubscribe\");\n        if (this.subscriptionCallbacks.size === 0) {\n            this.stopSubscriptionsMaintenance();\n        }\n        return finalResult;\n    }\n    async ping(peerId) {\n        const peers = peerId ? [peerId] : this.getPeers().map((peer) => peer.id);\n        const promises = peers.map((peerId) => this.pingSpecificPeer(peerId));\n        const results = await Promise.allSettled(promises);\n        return this.handleResult(results, \"ping\");\n    }\n    async unsubscribeAll() {\n        const promises = this.getPeers().map(async (peer) => this.protocol.unsubscribeAll(this.pubsubTopic, peer));\n        const results = await Promise.allSettled(promises);\n        this.subscriptionCallbacks.clear();\n        const finalResult = this.handleResult(results, \"unsubscribeAll\");\n        this.stopSubscriptionsMaintenance();\n        return finalResult;\n    }\n    async validateMessage() {\n        for (const hash of this.receivedMessagesHashes.all) {\n            for (const [peerIdStr, hashes] of Object.entries(this.receivedMessagesHashes.nodes)) {\n                if (!hashes.has(hash)) {\n                    this.incrementMissedMessageCount(peerIdStr);\n                    if (this.shouldRenewPeer(peerIdStr)) {\n                        log.info(`Peer ${peerIdStr} has missed too many messages, renewing.`);\n                        const peerId = this.getPeers().find((p) => p.id.toString() === peerIdStr)?.id;\n                        if (!peerId) {\n                            log.error(`Unexpected Error: Peer ${peerIdStr} not found in connected peers.`);\n                            continue;\n                        }\n                        try {\n                            await this.renewAndSubscribePeer(peerId);\n                        }\n                        catch (error) {\n                            log.error(`Failed to renew peer ${peerIdStr}: ${error}`);\n                        }\n                    }\n                }\n            }\n        }\n    }\n    async processIncomingMessage(message, peerIdStr) {\n        const hashedMessageStr = messageHashStr(this.pubsubTopic, message);\n        this.addHash(hashedMessageStr, peerIdStr);\n        void this.validateMessage();\n        if (this.receivedMessagesHashStr.includes(hashedMessageStr)) {\n            log.info(\"Message already received, skipping\");\n            return;\n        }\n        this.receivedMessagesHashStr.push(hashedMessageStr);\n        const { contentTopic } = message;\n        const subscriptionCallback = this.subscriptionCallbacks.get(contentTopic);\n        if (!subscriptionCallback) {\n            log.error(\"No subscription callback available for \", contentTopic);\n            return;\n        }\n        log.info(\"Processing message with content topic \", contentTopic, \" on pubsub topic \", this.pubsubTopic);\n        await pushMessage(subscriptionCallback, this.pubsubTopic, message);\n    }\n    handleResult(results, type) {\n        const result = { failures: [], successes: [] };\n        for (const promiseResult of results) {\n            if (promiseResult.status === \"rejected\") {\n                log.error(`Failed to resolve ${type} promise successfully: `, promiseResult.reason);\n                result.failures.push({ error: ProtocolError.GENERIC_FAIL });\n            }\n            else {\n                const coreResult = promiseResult.value;\n                if (coreResult.failure) {\n                    result.failures.push(coreResult.failure);\n                }\n                else {\n                    result.successes.push(coreResult.success);\n                }\n            }\n        }\n        return result;\n    }\n    async pingSpecificPeer(peerId) {\n        const peer = this.getPeers().find((p) => p.id.equals(peerId));\n        if (!peer) {\n            return {\n                success: null,\n                failure: {\n                    peerId,\n                    error: ProtocolError.NO_PEER_AVAILABLE\n                }\n            };\n        }\n        try {\n            const result = await this.protocol.ping(peer);\n            if (result.failure) {\n                await this.handlePeerFailure(peerId);\n            }\n            else {\n                this.peerFailures.delete(peerId.toString());\n            }\n            return result;\n        }\n        catch (error) {\n            await this.handlePeerFailure(peerId);\n            return {\n                success: null,\n                failure: {\n                    peerId,\n                    error: ProtocolError.GENERIC_FAIL\n                }\n            };\n        }\n    }\n    async handlePeerFailure(peerId) {\n        const failures = (this.peerFailures.get(peerId.toString()) || 0) + 1;\n        this.peerFailures.set(peerId.toString(), failures);\n        if (failures > this.maxPingFailures) {\n            try {\n                await this.renewAndSubscribePeer(peerId);\n                this.peerFailures.delete(peerId.toString());\n            }\n            catch (error) {\n                log.error(`Failed to renew peer ${peerId.toString()}: ${error}.`);\n            }\n        }\n    }\n    async renewAndSubscribePeer(peerId) {\n        try {\n            const newPeer = await this.renewPeer(peerId);\n            await this.protocol.subscribe(this.pubsubTopic, newPeer, Array.from(this.subscriptionCallbacks.keys()));\n            this.receivedMessagesHashes.nodes[newPeer.id.toString()] = new Set();\n            this.missedMessagesByPeer.set(newPeer.id.toString(), 0);\n            return newPeer;\n        }\n        catch (error) {\n            log.warn(`Failed to renew peer ${peerId.toString()}: ${error}.`);\n            return;\n        }\n        finally {\n            this.peerFailures.delete(peerId.toString());\n            this.missedMessagesByPeer.delete(peerId.toString());\n            delete this.receivedMessagesHashes.nodes[peerId.toString()];\n        }\n    }\n    startSubscriptionsMaintenance(interval) {\n        this.startKeepAlivePings(interval);\n        this.startConnectionListener();\n    }\n    stopSubscriptionsMaintenance() {\n        this.stopKeepAlivePings();\n        this.stopConnectionListener();\n    }\n    startKeepAlivePings(interval) {\n        if (this.keepAliveTimer) {\n            log.info(\"Recurring pings already set up.\");\n            return;\n        }\n        this.keepAliveTimer = setInterval(() => {\n            void this.ping().catch((error) => {\n                log.error(\"Error in keep-alive ping cycle:\", error);\n            });\n        }, interval);\n    }\n    stopKeepAlivePings() {\n        if (!this.keepAliveTimer) {\n            log.info(\"Already stopped recurring pings.\");\n            return;\n        }\n        log.info(\"Stopping recurring pings.\");\n        clearInterval(this.keepAliveTimer);\n        this.keepAliveTimer = null;\n    }\n    startConnectionListener() {\n        this.connectionManager.addEventListener(EConnectionStateEvents.CONNECTION_STATUS, this.connectionListener.bind(this));\n    }\n    stopConnectionListener() {\n        this.connectionManager.removeEventListener(EConnectionStateEvents.CONNECTION_STATUS, this.connectionListener.bind(this));\n    }\n    async connectionListener({ detail: isConnected }) {\n        if (!isConnected) {\n            this.stopKeepAlivePings();\n            return;\n        }\n        try {\n            const result = await this.ping();\n            const renewPeerPromises = result.failures.map(async (v) => {\n                if (v.peerId) {\n                    await this.renewAndSubscribePeer(v.peerId);\n                }\n            });\n            await Promise.all(renewPeerPromises);\n        }\n        catch (err) {\n            log.error(`networkStateListener failed to recover: ${err}`);\n        }\n        this.startKeepAlivePings(this.keepAliveInterval);\n    }\n    incrementMissedMessageCount(peerIdStr) {\n        const currentCount = this.missedMessagesByPeer.get(peerIdStr) || 0;\n        this.missedMessagesByPeer.set(peerIdStr, currentCount + 1);\n    }\n    shouldRenewPeer(peerIdStr) {\n        const missedMessages = this.missedMessagesByPeer.get(peerIdStr) || 0;\n        return missedMessages > this.maxMissedMessagesThreshold;\n    }\n}\nclass FilterSDK extends BaseProtocolSDK {\n    protocol;\n    _connectionManager;\n    activeSubscriptions = new Map();\n    constructor(connectionManager, libp2p, options) {\n        super(new FilterCore(async (pubsubTopic, wakuMessage, peerIdStr) => {\n            const subscription = this.getActiveSubscription(pubsubTopic);\n            if (!subscription) {\n                log.error(`No subscription locally registered for topic ${pubsubTopic}`);\n                return;\n            }\n            await subscription.processIncomingMessage(wakuMessage, peerIdStr);\n        }, connectionManager.configuredPubsubTopics, libp2p), connectionManager, { numPeersToUse: options?.numPeersToUse });\n        this.protocol = this.core;\n        this._connectionManager = connectionManager;\n    }\n    /**\n     * Opens a subscription with the Filter protocol using the provided decoders and callback.\n     * This method combines the functionality of creating a subscription and subscribing to it.\n     *\n     * @param {IDecoder<T> | IDecoder<T>[]} decoders - A single decoder or an array of decoders to use for decoding messages.\n     * @param {Callback<T>} callback - The callback function to be invoked with decoded messages.\n     * @param {ProtocolUseOptions} [protocolUseOptions] - Optional settings for using the protocol.\n     * @param {SubscribeOptions} [subscribeOptions] - Options for the subscription.\n     *\n     * @returns {Promise<SubscribeResult>} A promise that resolves to an object containing:\n     *   - subscription: The created subscription object if successful, or null if failed.\n     *   - error: A ProtocolError if the subscription creation failed, or null if successful.\n     *   - results: An object containing arrays of failures and successes from the subscription process.\n     *     Only present if the subscription was created successfully.\n     *\n     * @throws {Error} If there's an unexpected error during the subscription process.\n     *\n     * @remarks\n     * This method attempts to create a subscription using the pubsub topic derived from the provided decoders,\n     * then tries to subscribe using the created subscription. The return value should be interpreted as follows:\n     * - If `subscription` is null and `error` is non-null, a critical error occurred and the subscription failed completely.\n     * - If `subscription` is non-null and `error` is null, the subscription was created successfully.\n     *   In this case, check the `results` field for detailed information about successes and failures during the subscription process.\n     * - Even if the subscription was created successfully, there might be some failures in the results.\n     *\n     * @example\n     * ```typescript\n     * const {subscription, error, results} = await waku.filter.subscribe(decoders, callback);\n     * if (!subscription || error) {\n     *   console.error(\"Failed to create subscription:\", error);\n     * }\n     * console.log(\"Subscription created successfully\");\n     * if (results.failures.length > 0) {\n     *   console.warn(\"Some errors occurred during subscription:\", results.failures);\n     * }\n     * console.log(\"Successful subscriptions:\", results.successes);\n     *\n     * ```\n     */\n    async subscribe(decoders, callback, protocolUseOptions, subscribeOptions) {\n        const uniquePubsubTopics = this.getUniquePubsubTopics(decoders);\n        if (uniquePubsubTopics.length !== 1) {\n            return {\n                subscription: null,\n                error: ProtocolError.INVALID_DECODER_TOPICS,\n                results: null\n            };\n        }\n        const pubsubTopic = uniquePubsubTopics[0];\n        const { subscription, error } = await this.createSubscription(pubsubTopic, protocolUseOptions);\n        if (error) {\n            return {\n                subscription: null,\n                error: error,\n                results: null\n            };\n        }\n        const { failures, successes } = await subscription.subscribe(decoders, callback, subscribeOptions);\n        return {\n            subscription,\n            error: null,\n            results: {\n                failures: failures,\n                successes: successes\n            }\n        };\n    }\n    /**\n     * Creates a new subscription to the given pubsub topic.\n     * The subscription is made to multiple peers for decentralization.\n     * @param pubsubTopicShardInfo The pubsub topic to subscribe to.\n     * @returns The subscription object.\n     */\n    async createSubscription(pubsubTopicShardInfo, options) {\n        options = {\n            autoRetry: true,\n            ...options\n        };\n        const pubsubTopic = typeof pubsubTopicShardInfo == \"string\"\n            ? pubsubTopicShardInfo\n            : shardInfoToPubsubTopics(pubsubTopicShardInfo)?.[0];\n        ensurePubsubTopicIsConfigured(pubsubTopic, this.protocol.pubsubTopics);\n        const hasPeers = await this.hasPeers(options);\n        if (!hasPeers) {\n            return {\n                error: ProtocolError.NO_PEER_AVAILABLE,\n                subscription: null\n            };\n        }\n        log.info(`Creating filter subscription with ${this.connectedPeers.length} peers: `, this.connectedPeers.map((peer) => peer.id.toString()));\n        const subscription = this.getActiveSubscription(pubsubTopic) ??\n            this.setActiveSubscription(pubsubTopic, new SubscriptionManager(pubsubTopic, this.protocol, this._connectionManager, () => this.connectedPeers, this.renewPeer.bind(this)));\n        return {\n            error: null,\n            subscription\n        };\n    }\n    /**\n     * This method is used to satisfy the `IReceiver` interface.\n     *\n     * @hidden\n     *\n     * @param decoders The decoders to use for the subscription.\n     * @param callback The callback function to use for the subscription.\n     * @param opts Optional protocol options for the subscription.\n     *\n     * @returns A Promise that resolves to a function that unsubscribes from the subscription.\n     *\n     * @remarks\n     * This method should not be used directly.\n     * Instead, use `createSubscription` to create a new subscription.\n     */\n    async subscribeWithUnsubscribe(decoders, callback, options) {\n        const uniquePubsubTopics = this.getUniquePubsubTopics(decoders);\n        if (uniquePubsubTopics.length === 0) {\n            throw Error(\"Failed to subscribe: no pubsubTopic found on decoders provided.\");\n        }\n        if (uniquePubsubTopics.length > 1) {\n            throw Error(\"Failed to subscribe: all decoders should have the same pubsub topic. Use createSubscription to be more agile.\");\n        }\n        const { subscription, error } = await this.createSubscription(uniquePubsubTopics[0]);\n        if (error) {\n            throw Error(`Failed to create subscription: ${error}`);\n        }\n        await subscription.subscribe(decoders, callback, options);\n        const contentTopics = Array.from(groupByContentTopic(Array.isArray(decoders) ? decoders : [decoders]).keys());\n        return async () => {\n            await subscription.unsubscribe(contentTopics);\n        };\n    }\n    toSubscriptionIterator(decoders) {\n        return toAsyncIterator(this, decoders);\n    }\n    //TODO: move to SubscriptionManager\n    getActiveSubscription(pubsubTopic) {\n        return this.activeSubscriptions.get(pubsubTopic);\n    }\n    setActiveSubscription(pubsubTopic, subscription) {\n        this.activeSubscriptions.set(pubsubTopic, subscription);\n        return subscription;\n    }\n    getUniquePubsubTopics(decoders) {\n        if (!Array.isArray(decoders)) {\n            return [decoders.pubsubTopic];\n        }\n        if (decoders.length === 0) {\n            return [];\n        }\n        const pubsubTopics = new Set(decoders.map((d) => d.pubsubTopic));\n        return [...pubsubTopics];\n    }\n}\nexport function wakuFilter(connectionManager, init) {\n    return (libp2p) => new FilterSDK(connectionManager, libp2p, init);\n}\nasync function pushMessage(subscriptionCallback, pubsubTopic, message) {\n    const { decoders, callback } = subscriptionCallback;\n    const { contentTopic } = message;\n    if (!contentTopic) {\n        log.warn(\"Message has no content topic, skipping\");\n        return;\n    }\n    try {\n        const decodePromises = decoders.map((dec) => dec\n            .fromProtoObj(pubsubTopic, message)\n            .then((decoded) => decoded || Promise.reject(\"Decoding failed\")));\n        const decodedMessage = await Promise.any(decodePromises);\n        await callback(decodedMessage);\n    }\n    catch (e) {\n        log.error(\"Error decoding message\", e);\n    }\n}\n//# sourceMappingURL=filter.js.map","import { LightPushCore } from \"@waku/core\";\nimport { ProtocolError } from \"@waku/interfaces\";\nimport { ensurePubsubTopicIsConfigured, Logger } from \"@waku/utils\";\nimport { BaseProtocolSDK } from \"./base_protocol.js\";\nconst log = new Logger(\"sdk:light-push\");\nclass LightPushSDK extends BaseProtocolSDK {\n    protocol;\n    constructor(connectionManager, libp2p, options) {\n        super(new LightPushCore(connectionManager.configuredPubsubTopics, libp2p), connectionManager, {\n            numPeersToUse: options?.numPeersToUse\n        });\n        this.protocol = this.core;\n    }\n    async send(encoder, message, _options) {\n        const options = {\n            autoRetry: true,\n            ..._options\n        };\n        const successes = [];\n        const failures = [];\n        const { pubsubTopic } = encoder;\n        try {\n            ensurePubsubTopicIsConfigured(pubsubTopic, this.protocol.pubsubTopics);\n        }\n        catch (error) {\n            log.error(\"Failed to send waku light push: pubsub topic not configured\");\n            return {\n                failures: [\n                    {\n                        error: ProtocolError.TOPIC_NOT_CONFIGURED\n                    }\n                ],\n                successes: []\n            };\n        }\n        const hasPeers = await this.hasPeers(options);\n        if (!hasPeers) {\n            return {\n                successes,\n                failures: [\n                    {\n                        error: ProtocolError.NO_PEER_AVAILABLE\n                    }\n                ]\n            };\n        }\n        const sendPromises = this.connectedPeers.map((peer) => this.protocol.send(encoder, message, peer));\n        const results = await Promise.allSettled(sendPromises);\n        for (const result of results) {\n            if (result.status === \"fulfilled\") {\n                const { failure, success } = result.value;\n                if (success) {\n                    successes.push(success);\n                }\n                if (failure) {\n                    if (failure.peerId) {\n                        try {\n                            await this.renewPeer(failure.peerId);\n                            log.info(\"Renewed peer\", failure.peerId.toString());\n                        }\n                        catch (error) {\n                            log.error(\"Failed to renew peer\", error);\n                        }\n                    }\n                    failures.push(failure);\n                }\n            }\n            else {\n                log.error(\"Failed unexpectedly while sending:\", result.reason);\n                failures.push({ error: ProtocolError.GENERIC_FAIL });\n            }\n        }\n        return {\n            successes,\n            failures\n        };\n    }\n}\nexport function wakuLightPush(connectionManager, init = {}) {\n    return (libp2p) => new LightPushSDK(connectionManager, libp2p, init);\n}\n//# sourceMappingURL=light_push.js.map","import { StoreCore } from \"@waku/core\";\nimport { messageHash } from \"@waku/message-hash\";\nimport { ensurePubsubTopicIsConfigured, isDefined, Logger } from \"@waku/utils\";\nimport { BaseProtocolSDK } from \"./base_protocol.js\";\nconst DEFAULT_NUM_PEERS = 1;\nconst log = new Logger(\"waku:store:sdk\");\n/**\n * StoreSDK is an implementation of the IStoreSDK interface.\n * It provides methods to interact with the Waku Store protocol.\n */\nexport class StoreSDK extends BaseProtocolSDK {\n    protocol;\n    constructor(connectionManager, libp2p) {\n        super(new StoreCore(connectionManager.configuredPubsubTopics, libp2p), connectionManager, {\n            numPeersToUse: DEFAULT_NUM_PEERS\n        });\n        this.protocol = this.core;\n    }\n    /**\n     * Queries the Waku Store for historical messages using the provided decoders and options.\n     * Returns an asynchronous generator that yields promises of decoded messages.\n     *\n     * @param decoders - An array of message decoders.\n     * @param options - Optional query parameters.\n     * @returns An asynchronous generator of promises of decoded messages.\n     * @throws If no peers are available to query or if an error occurs during the query.\n     */\n    async *queryGenerator(decoders, options) {\n        const { pubsubTopic, contentTopics, decodersAsMap } = this.validateDecodersAndPubsubTopic(decoders);\n        const queryOpts = {\n            pubsubTopic,\n            contentTopics,\n            includeData: true,\n            paginationForward: true,\n            ...options\n        };\n        const peer = (await this.protocol.getPeers({\n            numPeers: this.numPeersToUse,\n            maxBootstrapPeers: 1\n        }))[0];\n        if (!peer) {\n            log.error(\"No peers available to query\");\n            throw new Error(\"No peers available to query\");\n        }\n        log.info(`Querying store with options: ${JSON.stringify(options)}`);\n        const responseGenerator = this.protocol.queryPerPage(queryOpts, decodersAsMap, peer);\n        for await (const messages of responseGenerator) {\n            yield messages;\n        }\n    }\n    /**\n     * Queries the Waku Store for historical messages and processes them with the provided callback in order.\n     *\n     * @param decoders - An array of message decoders.\n     * @param callback - A callback function to process each decoded message.\n     * @param options - Optional query parameters.\n     * @returns A promise that resolves when the query and message processing are completed.\n     */\n    async queryWithOrderedCallback(decoders, callback, options) {\n        log.info(\"Querying store with ordered callback\");\n        for await (const promises of this.queryGenerator(decoders, options)) {\n            if (await this.processMessages(promises, callback))\n                break;\n        }\n    }\n    /**\n     * Queries the Waku Store for historical messages and processes them with the provided callback using promises.\n     *\n     * @param decoders - An array of message decoders.\n     * @param callback - A callback function to process each promise of a decoded message.\n     * @param options - Optional query parameters.\n     * @returns A promise that resolves when the query and message processing are completed.\n     */\n    async queryWithPromiseCallback(decoders, callback, options) {\n        log.info(\"Querying store with promise callback\");\n        let abort = false;\n        for await (const page of this.queryGenerator(decoders, options)) {\n            const _promises = page.map(async (msgPromise) => {\n                if (abort)\n                    return;\n                abort = Boolean(await callback(msgPromise));\n            });\n            await Promise.all(_promises);\n            if (abort)\n                break;\n        }\n    }\n    /**\n     * Processes messages based on the provided callback and options.\n     *\n     * @param messages - An array of promises of decoded messages.\n     * @param callback - A callback function to process each decoded message.\n     * @returns A promise that resolves to a boolean indicating whether the processing should abort.\n     * @private\n     */\n    async processMessages(messages, callback) {\n        let abort = false;\n        const messagesOrUndef = await Promise.all(messages);\n        const processedMessages = messagesOrUndef.filter(isDefined);\n        await Promise.all(processedMessages.map(async (msg) => {\n            if (msg && !abort) {\n                abort = Boolean(await callback(msg));\n            }\n        }));\n        return abort;\n    }\n    /**\n     * Creates a cursor based on the provided decoded message.\n     *\n     * @param message - The decoded message.\n     * @returns A StoreCursor representing the message.\n     */\n    createCursor(message) {\n        return messageHash(message.pubsubTopic, message);\n    }\n    /**\n     * Validates the provided decoders and pubsub topic.\n     *\n     * @param decoders - An array of message decoders.\n     * @returns An object containing the pubsub topic, content topics, and a map of decoders.\n     * @throws If no decoders are provided, if multiple pubsub topics are provided, or if no decoders are found for the pubsub topic.\n     * @private\n     */\n    validateDecodersAndPubsubTopic(decoders) {\n        if (decoders.length === 0) {\n            log.error(\"No decoders provided\");\n            throw new Error(\"No decoders provided\");\n        }\n        const uniquePubsubTopicsInQuery = Array.from(new Set(decoders.map((decoder) => decoder.pubsubTopic)));\n        if (uniquePubsubTopicsInQuery.length > 1) {\n            log.error(\"API does not support querying multiple pubsub topics at once\");\n            throw new Error(\"API does not support querying multiple pubsub topics at once\");\n        }\n        const pubsubTopicForQuery = uniquePubsubTopicsInQuery[0];\n        ensurePubsubTopicIsConfigured(pubsubTopicForQuery, this.protocol.pubsubTopics);\n        const decodersAsMap = new Map();\n        decoders.forEach((dec) => {\n            if (decodersAsMap.has(dec.contentTopic)) {\n                log.error(\"API does not support different decoder per content topic\");\n                throw new Error(\"API does not support different decoder per content topic\");\n            }\n            decodersAsMap.set(dec.contentTopic, dec);\n        });\n        const contentTopics = decoders\n            .filter((decoder) => decoder.pubsubTopic === pubsubTopicForQuery)\n            .map((dec) => dec.contentTopic);\n        if (contentTopics.length === 0) {\n            log.error(`No decoders found for topic ${pubsubTopicForQuery}`);\n            throw new Error(\"No decoders found for topic \" + pubsubTopicForQuery);\n        }\n        return {\n            pubsubTopic: pubsubTopicForQuery,\n            contentTopics,\n            decodersAsMap\n        };\n    }\n}\n/**\n * Factory function to create an instance of the StoreSDK.\n *\n * @param init - Partial options for protocol creation.\n * @returns A function that takes a Libp2p instance and returns a StoreSDK instance.\n */\nexport function wakuStore(connectionManager) {\n    return (libp2p) => {\n        return new StoreSDK(connectionManager, libp2p);\n    };\n}\n//# sourceMappingURL=store.js.map","import { isPeerId } from \"@libp2p/interface\";\nimport { multiaddr } from \"@multiformats/multiaddr\";\nimport { ConnectionManager, getHealthManager } from \"@waku/core\";\nimport { Protocols } from \"@waku/interfaces\";\nimport { Logger } from \"@waku/utils\";\nimport { wakuFilter } from \"./protocols/filter.js\";\nimport { wakuLightPush } from \"./protocols/light_push.js\";\nimport { wakuStore } from \"./protocols/store.js\";\nexport const DefaultPingKeepAliveValueSecs = 5 * 60;\nexport const DefaultRelayKeepAliveValueSecs = 5 * 60;\nexport const DefaultUserAgent = \"js-waku\";\nexport const DefaultPingMaxInboundStreams = 10;\nconst log = new Logger(\"waku\");\nexport class WakuNode {\n    pubsubTopics;\n    libp2p;\n    relay;\n    store;\n    filter;\n    lightPush;\n    connectionManager;\n    health;\n    constructor(pubsubTopics, options, libp2p, protocolsEnabled, relay) {\n        this.pubsubTopics = pubsubTopics;\n        this.relay = relay;\n        this.libp2p = libp2p;\n        protocolsEnabled = {\n            filter: false,\n            lightpush: false,\n            store: false,\n            ...protocolsEnabled\n        };\n        const pingKeepAlive = options.pingKeepAlive || DefaultPingKeepAliveValueSecs;\n        const relayKeepAlive = this.relay\n            ? options.relayKeepAlive || DefaultRelayKeepAliveValueSecs\n            : 0;\n        const peerId = this.libp2p.peerId.toString();\n        this.connectionManager = ConnectionManager.create(peerId, libp2p, { pingKeepAlive, relayKeepAlive }, this.pubsubTopics, this.relay);\n        this.health = getHealthManager();\n        if (protocolsEnabled.store) {\n            const store = wakuStore(this.connectionManager);\n            this.store = store(libp2p);\n        }\n        if (protocolsEnabled.lightpush) {\n            const lightPush = wakuLightPush(this.connectionManager);\n            this.lightPush = lightPush(libp2p);\n        }\n        if (protocolsEnabled.filter) {\n            const filter = wakuFilter(this.connectionManager);\n            this.filter = filter(libp2p);\n        }\n        log.info(\"Waku node created\", peerId, `relay: ${!!this.relay}, store: ${!!this.store}, light push: ${!!this\n            .lightPush}, filter: ${!!this.filter}`);\n    }\n    /**\n     * Dials to the provided peer.\n     *\n     * @param peer The peer to dial\n     * @param protocols Waku protocols we expect from the peer; Defaults to mounted protocols\n     */\n    async dial(peer, protocols) {\n        const _protocols = protocols ?? [];\n        const peerId = mapToPeerIdOrMultiaddr(peer);\n        if (typeof protocols === \"undefined\") {\n            this.relay && _protocols.push(Protocols.Relay);\n            this.store && _protocols.push(Protocols.Store);\n            this.filter && _protocols.push(Protocols.Filter);\n            this.lightPush && _protocols.push(Protocols.LightPush);\n        }\n        const codecs = [];\n        if (_protocols.includes(Protocols.Relay)) {\n            if (this.relay) {\n                this.relay.gossipSub.multicodecs.forEach((codec) => codecs.push(codec));\n            }\n            else {\n                log.error(\"Relay codec not included in dial codec: protocol not mounted locally\");\n            }\n        }\n        if (_protocols.includes(Protocols.Store)) {\n            if (this.store) {\n                codecs.push(this.store.protocol.multicodec);\n            }\n            else {\n                log.error(\"Store codec not included in dial codec: protocol not mounted locally\");\n            }\n        }\n        if (_protocols.includes(Protocols.LightPush)) {\n            if (this.lightPush) {\n                codecs.push(this.lightPush.protocol.multicodec);\n            }\n            else {\n                log.error(\"Light Push codec not included in dial codec: protocol not mounted locally\");\n            }\n        }\n        if (_protocols.includes(Protocols.Filter)) {\n            if (this.filter) {\n                codecs.push(this.filter.protocol.multicodec);\n            }\n            else {\n                log.error(\"Filter codec not included in dial codec: protocol not mounted locally\");\n            }\n        }\n        log.info(`Dialing to ${peerId.toString()} with protocols ${_protocols}`);\n        return this.libp2p.dialProtocol(peerId, codecs);\n    }\n    async start() {\n        await this.libp2p.start();\n    }\n    async stop() {\n        this.connectionManager.stop();\n        await this.libp2p.stop();\n    }\n    isStarted() {\n        return this.libp2p.status == \"started\";\n    }\n    isConnected() {\n        return this.connectionManager.isConnected();\n    }\n    /**\n     * Return the local multiaddr with peer id on which libp2p is listening.\n     *\n     * @throws if libp2p is not listening on localhost.\n     */\n    getLocalMultiaddrWithID() {\n        const localMultiaddr = this.libp2p\n            .getMultiaddrs()\n            .find((addr) => addr.toString().match(/127\\.0\\.0\\.1/));\n        if (!localMultiaddr || localMultiaddr.toString() === \"\") {\n            throw \"Not listening on localhost\";\n        }\n        return localMultiaddr + \"/p2p/\" + this.libp2p.peerId.toString();\n    }\n}\nfunction mapToPeerIdOrMultiaddr(peerId) {\n    return isPeerId(peerId) ? peerId : multiaddr(peerId);\n}\n//# sourceMappingURL=waku.js.map","/**\n * When this error is thrown it means an operation was aborted,\n * usually in response to the `abort` event being emitted by an\n * AbortSignal.\n */\nexport class AbortError extends Error {\n    code;\n    type;\n    constructor(message = 'The operation was aborted') {\n        super(message);\n        this.name = 'AbortError';\n        this.code = AbortError.code;\n        this.type = AbortError.type;\n    }\n    static code = 'ABORT_ERR';\n    static type = 'aborted';\n}\nexport class CodeError extends Error {\n    code;\n    props;\n    constructor(message, code, props) {\n        super(message);\n        this.code = code;\n        this.name = props?.name ?? 'CodeError';\n        this.props = props ?? {}; // eslint-disable-line @typescript-eslint/consistent-type-assertions\n    }\n}\nexport class AggregateCodeError extends AggregateError {\n    code;\n    props;\n    constructor(errors, message, code, props) {\n        super(errors, message);\n        this.code = code;\n        this.name = props?.name ?? 'AggregateCodeError';\n        this.props = props ?? {}; // eslint-disable-line @typescript-eslint/consistent-type-assertions\n    }\n}\nexport class UnexpectedPeerError extends Error {\n    code;\n    constructor(message = 'Unexpected Peer') {\n        super(message);\n        this.name = 'UnexpectedPeerError';\n        this.code = UnexpectedPeerError.code;\n    }\n    static code = 'ERR_UNEXPECTED_PEER';\n}\nexport class InvalidCryptoExchangeError extends Error {\n    code;\n    constructor(message = 'Invalid crypto exchange') {\n        super(message);\n        this.name = 'InvalidCryptoExchangeError';\n        this.code = InvalidCryptoExchangeError.code;\n    }\n    static code = 'ERR_INVALID_CRYPTO_EXCHANGE';\n}\nexport class InvalidCryptoTransmissionError extends Error {\n    code;\n    constructor(message = 'Invalid crypto transmission') {\n        super(message);\n        this.name = 'InvalidCryptoTransmissionError';\n        this.code = InvalidCryptoTransmissionError.code;\n    }\n    static code = 'ERR_INVALID_CRYPTO_TRANSMISSION';\n}\n// Error codes\nexport const ERR_TIMEOUT = 'ERR_TIMEOUT';\nexport const ERR_INVALID_PARAMETERS = 'ERR_INVALID_PARAMETERS';\nexport const ERR_NOT_FOUND = 'ERR_NOT_FOUND';\nexport const ERR_INVALID_MESSAGE = 'ERR_INVALID_MESSAGE';\n//# sourceMappingURL=errors.js.map","import { concat as uint8ArrayConcat } from 'uint8arrays/concat';\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string';\nexport function base64urlToBuffer(str, len) {\n    let buf = uint8ArrayFromString(str, 'base64urlpad');\n    if (len != null) {\n        if (buf.length > len)\n            throw new Error('byte array longer than desired length');\n        buf = uint8ArrayConcat([new Uint8Array(len - buf.length), buf]);\n    }\n    return buf;\n}\nexport function isPromise(thing) {\n    if (thing == null) {\n        return false;\n    }\n    return typeof thing.then === 'function' &&\n        typeof thing.catch === 'function' &&\n        typeof thing.finally === 'function';\n}\n//# sourceMappingURL=util.js.map","const U32_MASK64 = /* @__PURE__ */ BigInt(2 ** 32 - 1);\nconst _32n = /* @__PURE__ */ BigInt(32);\n// We are not using BigUint64Array, because they are extremely slow as per 2022\nfunction fromBig(n, le = false) {\n    if (le)\n        return { h: Number(n & U32_MASK64), l: Number((n >> _32n) & U32_MASK64) };\n    return { h: Number((n >> _32n) & U32_MASK64) | 0, l: Number(n & U32_MASK64) | 0 };\n}\nfunction split(lst, le = false) {\n    let Ah = new Uint32Array(lst.length);\n    let Al = new Uint32Array(lst.length);\n    for (let i = 0; i < lst.length; i++) {\n        const { h, l } = fromBig(lst[i], le);\n        [Ah[i], Al[i]] = [h, l];\n    }\n    return [Ah, Al];\n}\nconst toBig = (h, l) => (BigInt(h >>> 0) << _32n) | BigInt(l >>> 0);\n// for Shift in [0, 32)\nconst shrSH = (h, _l, s) => h >>> s;\nconst shrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in [1, 32)\nconst rotrSH = (h, l, s) => (h >>> s) | (l << (32 - s));\nconst rotrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotrBH = (h, l, s) => (h << (64 - s)) | (l >>> (s - 32));\nconst rotrBL = (h, l, s) => (h >>> (s - 32)) | (l << (64 - s));\n// Right rotate for shift===32 (just swaps l&h)\nconst rotr32H = (_h, l) => l;\nconst rotr32L = (h, _l) => h;\n// Left rotate for Shift in [1, 32)\nconst rotlSH = (h, l, s) => (h << s) | (l >>> (32 - s));\nconst rotlSL = (h, l, s) => (l << s) | (h >>> (32 - s));\n// Left rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotlBH = (h, l, s) => (l << (s - 32)) | (h >>> (64 - s));\nconst rotlBL = (h, l, s) => (h << (s - 32)) | (l >>> (64 - s));\n// JS uses 32-bit signed integers for bitwise operations which means we cannot\n// simple take carry out of low bit sum by shift, we need to use division.\nfunction add(Ah, Al, Bh, Bl) {\n    const l = (Al >>> 0) + (Bl >>> 0);\n    return { h: (Ah + Bh + ((l / 2 ** 32) | 0)) | 0, l: l | 0 };\n}\n// Addition with more than 2 elements\nconst add3L = (Al, Bl, Cl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0);\nconst add3H = (low, Ah, Bh, Ch) => (Ah + Bh + Ch + ((low / 2 ** 32) | 0)) | 0;\nconst add4L = (Al, Bl, Cl, Dl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0);\nconst add4H = (low, Ah, Bh, Ch, Dh) => (Ah + Bh + Ch + Dh + ((low / 2 ** 32) | 0)) | 0;\nconst add5L = (Al, Bl, Cl, Dl, El) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0) + (El >>> 0);\nconst add5H = (low, Ah, Bh, Ch, Dh, Eh) => (Ah + Bh + Ch + Dh + Eh + ((low / 2 ** 32) | 0)) | 0;\n// prettier-ignore\nexport { fromBig, split, toBig, shrSH, shrSL, rotrSH, rotrSL, rotrBH, rotrBL, rotr32H, rotr32L, rotlSH, rotlSL, rotlBH, rotlBL, add, add3L, add3H, add4L, add4H, add5H, add5L, };\n// prettier-ignore\nconst u64 = {\n    fromBig, split, toBig,\n    shrSH, shrSL,\n    rotrSH, rotrSL, rotrBH, rotrBL,\n    rotr32H, rotr32L,\n    rotlSH, rotlSL, rotlBH, rotlBL,\n    add, add3L, add3H, add4L, add4H, add5H, add5L,\n};\nexport default u64;\n//# sourceMappingURL=_u64.js.map","import { HashMD } from './_md.js';\nimport u64 from './_u64.js';\nimport { wrapConstructor } from './utils.js';\n// Round contants (first 32 bits of the fractional parts of the cube roots of the first 80 primes 2..409):\n// prettier-ignore\nconst [SHA512_Kh, SHA512_Kl] = /* @__PURE__ */ (() => u64.split([\n    '0x428a2f98d728ae22', '0x7137449123ef65cd', '0xb5c0fbcfec4d3b2f', '0xe9b5dba58189dbbc',\n    '0x3956c25bf348b538', '0x59f111f1b605d019', '0x923f82a4af194f9b', '0xab1c5ed5da6d8118',\n    '0xd807aa98a3030242', '0x12835b0145706fbe', '0x243185be4ee4b28c', '0x550c7dc3d5ffb4e2',\n    '0x72be5d74f27b896f', '0x80deb1fe3b1696b1', '0x9bdc06a725c71235', '0xc19bf174cf692694',\n    '0xe49b69c19ef14ad2', '0xefbe4786384f25e3', '0x0fc19dc68b8cd5b5', '0x240ca1cc77ac9c65',\n    '0x2de92c6f592b0275', '0x4a7484aa6ea6e483', '0x5cb0a9dcbd41fbd4', '0x76f988da831153b5',\n    '0x983e5152ee66dfab', '0xa831c66d2db43210', '0xb00327c898fb213f', '0xbf597fc7beef0ee4',\n    '0xc6e00bf33da88fc2', '0xd5a79147930aa725', '0x06ca6351e003826f', '0x142929670a0e6e70',\n    '0x27b70a8546d22ffc', '0x2e1b21385c26c926', '0x4d2c6dfc5ac42aed', '0x53380d139d95b3df',\n    '0x650a73548baf63de', '0x766a0abb3c77b2a8', '0x81c2c92e47edaee6', '0x92722c851482353b',\n    '0xa2bfe8a14cf10364', '0xa81a664bbc423001', '0xc24b8b70d0f89791', '0xc76c51a30654be30',\n    '0xd192e819d6ef5218', '0xd69906245565a910', '0xf40e35855771202a', '0x106aa07032bbd1b8',\n    '0x19a4c116b8d2d0c8', '0x1e376c085141ab53', '0x2748774cdf8eeb99', '0x34b0bcb5e19b48a8',\n    '0x391c0cb3c5c95a63', '0x4ed8aa4ae3418acb', '0x5b9cca4f7763e373', '0x682e6ff3d6b2b8a3',\n    '0x748f82ee5defb2fc', '0x78a5636f43172f60', '0x84c87814a1f0ab72', '0x8cc702081a6439ec',\n    '0x90befffa23631e28', '0xa4506cebde82bde9', '0xbef9a3f7b2c67915', '0xc67178f2e372532b',\n    '0xca273eceea26619c', '0xd186b8c721c0c207', '0xeada7dd6cde0eb1e', '0xf57d4f7fee6ed178',\n    '0x06f067aa72176fba', '0x0a637dc5a2c898a6', '0x113f9804bef90dae', '0x1b710b35131c471b',\n    '0x28db77f523047d84', '0x32caab7b40c72493', '0x3c9ebe0a15c9bebc', '0x431d67c49c100d4c',\n    '0x4cc5d4becb3e42b6', '0x597f299cfc657e2a', '0x5fcb6fab3ad6faec', '0x6c44198c4a475817'\n].map(n => BigInt(n))))();\n// Temporary buffer, not used to store anything between runs\nconst SHA512_W_H = /* @__PURE__ */ new Uint32Array(80);\nconst SHA512_W_L = /* @__PURE__ */ new Uint32Array(80);\nexport class SHA512 extends HashMD {\n    constructor() {\n        super(128, 64, 16, false);\n        // We cannot use array here since array allows indexing by variable which means optimizer/compiler cannot use registers.\n        // Also looks cleaner and easier to verify with spec.\n        // Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0x6a09e667 | 0;\n        this.Al = 0xf3bcc908 | 0;\n        this.Bh = 0xbb67ae85 | 0;\n        this.Bl = 0x84caa73b | 0;\n        this.Ch = 0x3c6ef372 | 0;\n        this.Cl = 0xfe94f82b | 0;\n        this.Dh = 0xa54ff53a | 0;\n        this.Dl = 0x5f1d36f1 | 0;\n        this.Eh = 0x510e527f | 0;\n        this.El = 0xade682d1 | 0;\n        this.Fh = 0x9b05688c | 0;\n        this.Fl = 0x2b3e6c1f | 0;\n        this.Gh = 0x1f83d9ab | 0;\n        this.Gl = 0xfb41bd6b | 0;\n        this.Hh = 0x5be0cd19 | 0;\n        this.Hl = 0x137e2179 | 0;\n    }\n    // prettier-ignore\n    get() {\n        const { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n        return [Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl];\n    }\n    // prettier-ignore\n    set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl) {\n        this.Ah = Ah | 0;\n        this.Al = Al | 0;\n        this.Bh = Bh | 0;\n        this.Bl = Bl | 0;\n        this.Ch = Ch | 0;\n        this.Cl = Cl | 0;\n        this.Dh = Dh | 0;\n        this.Dl = Dl | 0;\n        this.Eh = Eh | 0;\n        this.El = El | 0;\n        this.Fh = Fh | 0;\n        this.Fl = Fl | 0;\n        this.Gh = Gh | 0;\n        this.Gl = Gl | 0;\n        this.Hh = Hh | 0;\n        this.Hl = Hl | 0;\n    }\n    process(view, offset) {\n        // Extend the first 16 words into the remaining 64 words w[16..79] of the message schedule array\n        for (let i = 0; i < 16; i++, offset += 4) {\n            SHA512_W_H[i] = view.getUint32(offset);\n            SHA512_W_L[i] = view.getUint32((offset += 4));\n        }\n        for (let i = 16; i < 80; i++) {\n            // s0 := (w[i-15] rightrotate 1) xor (w[i-15] rightrotate 8) xor (w[i-15] rightshift 7)\n            const W15h = SHA512_W_H[i - 15] | 0;\n            const W15l = SHA512_W_L[i - 15] | 0;\n            const s0h = u64.rotrSH(W15h, W15l, 1) ^ u64.rotrSH(W15h, W15l, 8) ^ u64.shrSH(W15h, W15l, 7);\n            const s0l = u64.rotrSL(W15h, W15l, 1) ^ u64.rotrSL(W15h, W15l, 8) ^ u64.shrSL(W15h, W15l, 7);\n            // s1 := (w[i-2] rightrotate 19) xor (w[i-2] rightrotate 61) xor (w[i-2] rightshift 6)\n            const W2h = SHA512_W_H[i - 2] | 0;\n            const W2l = SHA512_W_L[i - 2] | 0;\n            const s1h = u64.rotrSH(W2h, W2l, 19) ^ u64.rotrBH(W2h, W2l, 61) ^ u64.shrSH(W2h, W2l, 6);\n            const s1l = u64.rotrSL(W2h, W2l, 19) ^ u64.rotrBL(W2h, W2l, 61) ^ u64.shrSL(W2h, W2l, 6);\n            // SHA256_W[i] = s0 + s1 + SHA256_W[i - 7] + SHA256_W[i - 16];\n            const SUMl = u64.add4L(s0l, s1l, SHA512_W_L[i - 7], SHA512_W_L[i - 16]);\n            const SUMh = u64.add4H(SUMl, s0h, s1h, SHA512_W_H[i - 7], SHA512_W_H[i - 16]);\n            SHA512_W_H[i] = SUMh | 0;\n            SHA512_W_L[i] = SUMl | 0;\n        }\n        let { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n        // Compression function main loop, 80 rounds\n        for (let i = 0; i < 80; i++) {\n            // S1 := (e rightrotate 14) xor (e rightrotate 18) xor (e rightrotate 41)\n            const sigma1h = u64.rotrSH(Eh, El, 14) ^ u64.rotrSH(Eh, El, 18) ^ u64.rotrBH(Eh, El, 41);\n            const sigma1l = u64.rotrSL(Eh, El, 14) ^ u64.rotrSL(Eh, El, 18) ^ u64.rotrBL(Eh, El, 41);\n            //const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n            const CHIh = (Eh & Fh) ^ (~Eh & Gh);\n            const CHIl = (El & Fl) ^ (~El & Gl);\n            // T1 = H + sigma1 + Chi(E, F, G) + SHA512_K[i] + SHA512_W[i]\n            // prettier-ignore\n            const T1ll = u64.add5L(Hl, sigma1l, CHIl, SHA512_Kl[i], SHA512_W_L[i]);\n            const T1h = u64.add5H(T1ll, Hh, sigma1h, CHIh, SHA512_Kh[i], SHA512_W_H[i]);\n            const T1l = T1ll | 0;\n            // S0 := (a rightrotate 28) xor (a rightrotate 34) xor (a rightrotate 39)\n            const sigma0h = u64.rotrSH(Ah, Al, 28) ^ u64.rotrBH(Ah, Al, 34) ^ u64.rotrBH(Ah, Al, 39);\n            const sigma0l = u64.rotrSL(Ah, Al, 28) ^ u64.rotrBL(Ah, Al, 34) ^ u64.rotrBL(Ah, Al, 39);\n            const MAJh = (Ah & Bh) ^ (Ah & Ch) ^ (Bh & Ch);\n            const MAJl = (Al & Bl) ^ (Al & Cl) ^ (Bl & Cl);\n            Hh = Gh | 0;\n            Hl = Gl | 0;\n            Gh = Fh | 0;\n            Gl = Fl | 0;\n            Fh = Eh | 0;\n            Fl = El | 0;\n            ({ h: Eh, l: El } = u64.add(Dh | 0, Dl | 0, T1h | 0, T1l | 0));\n            Dh = Ch | 0;\n            Dl = Cl | 0;\n            Ch = Bh | 0;\n            Cl = Bl | 0;\n            Bh = Ah | 0;\n            Bl = Al | 0;\n            const All = u64.add3L(T1l, sigma0l, MAJl);\n            Ah = u64.add3H(All, T1h, sigma0h, MAJh);\n            Al = All | 0;\n        }\n        // Add the compressed chunk to the current hash value\n        ({ h: Ah, l: Al } = u64.add(this.Ah | 0, this.Al | 0, Ah | 0, Al | 0));\n        ({ h: Bh, l: Bl } = u64.add(this.Bh | 0, this.Bl | 0, Bh | 0, Bl | 0));\n        ({ h: Ch, l: Cl } = u64.add(this.Ch | 0, this.Cl | 0, Ch | 0, Cl | 0));\n        ({ h: Dh, l: Dl } = u64.add(this.Dh | 0, this.Dl | 0, Dh | 0, Dl | 0));\n        ({ h: Eh, l: El } = u64.add(this.Eh | 0, this.El | 0, Eh | 0, El | 0));\n        ({ h: Fh, l: Fl } = u64.add(this.Fh | 0, this.Fl | 0, Fh | 0, Fl | 0));\n        ({ h: Gh, l: Gl } = u64.add(this.Gh | 0, this.Gl | 0, Gh | 0, Gl | 0));\n        ({ h: Hh, l: Hl } = u64.add(this.Hh | 0, this.Hl | 0, Hh | 0, Hl | 0));\n        this.set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl);\n    }\n    roundClean() {\n        SHA512_W_H.fill(0);\n        SHA512_W_L.fill(0);\n    }\n    destroy() {\n        this.buffer.fill(0);\n        this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n    }\n}\nexport class SHA512_224 extends SHA512 {\n    constructor() {\n        super();\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0x8c3d37c8 | 0;\n        this.Al = 0x19544da2 | 0;\n        this.Bh = 0x73e19966 | 0;\n        this.Bl = 0x89dcd4d6 | 0;\n        this.Ch = 0x1dfab7ae | 0;\n        this.Cl = 0x32ff9c82 | 0;\n        this.Dh = 0x679dd514 | 0;\n        this.Dl = 0x582f9fcf | 0;\n        this.Eh = 0x0f6d2b69 | 0;\n        this.El = 0x7bd44da8 | 0;\n        this.Fh = 0x77e36f73 | 0;\n        this.Fl = 0x04c48942 | 0;\n        this.Gh = 0x3f9d85a8 | 0;\n        this.Gl = 0x6a1d36c8 | 0;\n        this.Hh = 0x1112e6ad | 0;\n        this.Hl = 0x91d692a1 | 0;\n        this.outputLen = 28;\n    }\n}\nexport class SHA512_256 extends SHA512 {\n    constructor() {\n        super();\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0x22312194 | 0;\n        this.Al = 0xfc2bf72c | 0;\n        this.Bh = 0x9f555fa3 | 0;\n        this.Bl = 0xc84c64c2 | 0;\n        this.Ch = 0x2393b86b | 0;\n        this.Cl = 0x6f53b151 | 0;\n        this.Dh = 0x96387719 | 0;\n        this.Dl = 0x5940eabd | 0;\n        this.Eh = 0x96283ee2 | 0;\n        this.El = 0xa88effe3 | 0;\n        this.Fh = 0xbe5e1e25 | 0;\n        this.Fl = 0x53863992 | 0;\n        this.Gh = 0x2b0199fc | 0;\n        this.Gl = 0x2c85b8aa | 0;\n        this.Hh = 0x0eb72ddc | 0;\n        this.Hl = 0x81c52ca2 | 0;\n        this.outputLen = 32;\n    }\n}\nexport class SHA384 extends SHA512 {\n    constructor() {\n        super();\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0xcbbb9d5d | 0;\n        this.Al = 0xc1059ed8 | 0;\n        this.Bh = 0x629a292a | 0;\n        this.Bl = 0x367cd507 | 0;\n        this.Ch = 0x9159015a | 0;\n        this.Cl = 0x3070dd17 | 0;\n        this.Dh = 0x152fecd8 | 0;\n        this.Dl = 0xf70e5939 | 0;\n        this.Eh = 0x67332667 | 0;\n        this.El = 0xffc00b31 | 0;\n        this.Fh = 0x8eb44a87 | 0;\n        this.Fl = 0x68581511 | 0;\n        this.Gh = 0xdb0c2e0d | 0;\n        this.Gl = 0x64f98fa7 | 0;\n        this.Hh = 0x47b5481d | 0;\n        this.Hl = 0xbefa4fa4 | 0;\n        this.outputLen = 48;\n    }\n}\nexport const sha512 = /* @__PURE__ */ wrapConstructor(() => new SHA512());\nexport const sha512_224 = /* @__PURE__ */ wrapConstructor(() => new SHA512_224());\nexport const sha512_256 = /* @__PURE__ */ wrapConstructor(() => new SHA512_256());\nexport const sha384 = /* @__PURE__ */ wrapConstructor(() => new SHA384());\n//# sourceMappingURL=sha512.js.map","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// 100 lines of code in the file are duplicated from noble-hashes (utils).\n// This is OK: `abstract` directory does not use noble-hashes.\n// User may opt-in into using different hashing library. This way, noble-hashes\n// won't be included into their bundle.\nconst _0n = /* @__PURE__ */ BigInt(0);\nconst _1n = /* @__PURE__ */ BigInt(1);\nconst _2n = /* @__PURE__ */ BigInt(2);\nexport function isBytes(a) {\n    return (a instanceof Uint8Array ||\n        (a != null && typeof a === 'object' && a.constructor.name === 'Uint8Array'));\n}\nexport function abytes(item) {\n    if (!isBytes(item))\n        throw new Error('Uint8Array expected');\n}\nexport function abool(title, value) {\n    if (typeof value !== 'boolean')\n        throw new Error(`${title} must be valid boolean, got \"${value}\".`);\n}\n// Array where index 0xf0 (240) is mapped to string 'f0'\nconst hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) => i.toString(16).padStart(2, '0'));\n/**\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nexport function bytesToHex(bytes) {\n    abytes(bytes);\n    // pre-caching improves the speed 6x\n    let hex = '';\n    for (let i = 0; i < bytes.length; i++) {\n        hex += hexes[bytes[i]];\n    }\n    return hex;\n}\nexport function numberToHexUnpadded(num) {\n    const hex = num.toString(16);\n    return hex.length & 1 ? `0${hex}` : hex;\n}\nexport function hexToNumber(hex) {\n    if (typeof hex !== 'string')\n        throw new Error('hex string expected, got ' + typeof hex);\n    // Big Endian\n    return BigInt(hex === '' ? '0' : `0x${hex}`);\n}\n// We use optimized technique to convert hex string to byte array\nconst asciis = { _0: 48, _9: 57, _A: 65, _F: 70, _a: 97, _f: 102 };\nfunction asciiToBase16(char) {\n    if (char >= asciis._0 && char <= asciis._9)\n        return char - asciis._0;\n    if (char >= asciis._A && char <= asciis._F)\n        return char - (asciis._A - 10);\n    if (char >= asciis._a && char <= asciis._f)\n        return char - (asciis._a - 10);\n    return;\n}\n/**\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nexport function hexToBytes(hex) {\n    if (typeof hex !== 'string')\n        throw new Error('hex string expected, got ' + typeof hex);\n    const hl = hex.length;\n    const al = hl / 2;\n    if (hl % 2)\n        throw new Error('padded hex string expected, got unpadded hex of length ' + hl);\n    const array = new Uint8Array(al);\n    for (let ai = 0, hi = 0; ai < al; ai++, hi += 2) {\n        const n1 = asciiToBase16(hex.charCodeAt(hi));\n        const n2 = asciiToBase16(hex.charCodeAt(hi + 1));\n        if (n1 === undefined || n2 === undefined) {\n            const char = hex[hi] + hex[hi + 1];\n            throw new Error('hex string expected, got non-hex character \"' + char + '\" at index ' + hi);\n        }\n        array[ai] = n1 * 16 + n2;\n    }\n    return array;\n}\n// BE: Big Endian, LE: Little Endian\nexport function bytesToNumberBE(bytes) {\n    return hexToNumber(bytesToHex(bytes));\n}\nexport function bytesToNumberLE(bytes) {\n    abytes(bytes);\n    return hexToNumber(bytesToHex(Uint8Array.from(bytes).reverse()));\n}\nexport function numberToBytesBE(n, len) {\n    return hexToBytes(n.toString(16).padStart(len * 2, '0'));\n}\nexport function numberToBytesLE(n, len) {\n    return numberToBytesBE(n, len).reverse();\n}\n// Unpadded, rarely used\nexport function numberToVarBytesBE(n) {\n    return hexToBytes(numberToHexUnpadded(n));\n}\n/**\n * Takes hex string or Uint8Array, converts to Uint8Array.\n * Validates output length.\n * Will throw error for other types.\n * @param title descriptive title for an error e.g. 'private key'\n * @param hex hex string or Uint8Array\n * @param expectedLength optional, will compare to result array's length\n * @returns\n */\nexport function ensureBytes(title, hex, expectedLength) {\n    let res;\n    if (typeof hex === 'string') {\n        try {\n            res = hexToBytes(hex);\n        }\n        catch (e) {\n            throw new Error(`${title} must be valid hex string, got \"${hex}\". Cause: ${e}`);\n        }\n    }\n    else if (isBytes(hex)) {\n        // Uint8Array.from() instead of hash.slice() because node.js Buffer\n        // is instance of Uint8Array, and its slice() creates **mutable** copy\n        res = Uint8Array.from(hex);\n    }\n    else {\n        throw new Error(`${title} must be hex string or Uint8Array`);\n    }\n    const len = res.length;\n    if (typeof expectedLength === 'number' && len !== expectedLength)\n        throw new Error(`${title} expected ${expectedLength} bytes, got ${len}`);\n    return res;\n}\n/**\n * Copies several Uint8Arrays into one.\n */\nexport function concatBytes(...arrays) {\n    let sum = 0;\n    for (let i = 0; i < arrays.length; i++) {\n        const a = arrays[i];\n        abytes(a);\n        sum += a.length;\n    }\n    const res = new Uint8Array(sum);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const a = arrays[i];\n        res.set(a, pad);\n        pad += a.length;\n    }\n    return res;\n}\n// Compares 2 u8a-s in kinda constant time\nexport function equalBytes(a, b) {\n    if (a.length !== b.length)\n        return false;\n    let diff = 0;\n    for (let i = 0; i < a.length; i++)\n        diff |= a[i] ^ b[i];\n    return diff === 0;\n}\n/**\n * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])\n */\nexport function utf8ToBytes(str) {\n    if (typeof str !== 'string')\n        throw new Error(`utf8ToBytes expected string, got ${typeof str}`);\n    return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\n// Is positive bigint\nconst isPosBig = (n) => typeof n === 'bigint' && _0n <= n;\nexport function inRange(n, min, max) {\n    return isPosBig(n) && isPosBig(min) && isPosBig(max) && min <= n && n < max;\n}\n/**\n * Asserts min <= n < max. NOTE: It's < max and not <= max.\n * @example\n * aInRange('x', x, 1n, 256n); // would assume x is in (1n..255n)\n */\nexport function aInRange(title, n, min, max) {\n    // Why min <= n < max and not a (min < n < max) OR b (min <= n <= max)?\n    // consider P=256n, min=0n, max=P\n    // - a for min=0 would require -1:          `inRange('x', x, -1n, P)`\n    // - b would commonly require subtraction:  `inRange('x', x, 0n, P - 1n)`\n    // - our way is the cleanest:               `inRange('x', x, 0n, P)\n    if (!inRange(n, min, max))\n        throw new Error(`expected valid ${title}: ${min} <= n < ${max}, got ${typeof n} ${n}`);\n}\n// Bit operations\n/**\n * Calculates amount of bits in a bigint.\n * Same as `n.toString(2).length`\n */\nexport function bitLen(n) {\n    let len;\n    for (len = 0; n > _0n; n >>= _1n, len += 1)\n        ;\n    return len;\n}\n/**\n * Gets single bit at position.\n * NOTE: first bit position is 0 (same as arrays)\n * Same as `!!+Array.from(n.toString(2)).reverse()[pos]`\n */\nexport function bitGet(n, pos) {\n    return (n >> BigInt(pos)) & _1n;\n}\n/**\n * Sets single bit at position.\n */\nexport function bitSet(n, pos, value) {\n    return n | ((value ? _1n : _0n) << BigInt(pos));\n}\n/**\n * Calculate mask for N bits. Not using ** operator with bigints because of old engines.\n * Same as BigInt(`0b${Array(i).fill('1').join('')}`)\n */\nexport const bitMask = (n) => (_2n << BigInt(n - 1)) - _1n;\n// DRBG\nconst u8n = (data) => new Uint8Array(data); // creates Uint8Array\nconst u8fr = (arr) => Uint8Array.from(arr); // another shortcut\n/**\n * Minimal HMAC-DRBG from NIST 800-90 for RFC6979 sigs.\n * @returns function that will call DRBG until 2nd arg returns something meaningful\n * @example\n *   const drbg = createHmacDRBG<Key>(32, 32, hmac);\n *   drbg(seed, bytesToKey); // bytesToKey must return Key or undefined\n */\nexport function createHmacDrbg(hashLen, qByteLen, hmacFn) {\n    if (typeof hashLen !== 'number' || hashLen < 2)\n        throw new Error('hashLen must be a number');\n    if (typeof qByteLen !== 'number' || qByteLen < 2)\n        throw new Error('qByteLen must be a number');\n    if (typeof hmacFn !== 'function')\n        throw new Error('hmacFn must be a function');\n    // Step B, Step C: set hashLen to 8*ceil(hlen/8)\n    let v = u8n(hashLen); // Minimal non-full-spec HMAC-DRBG from NIST 800-90 for RFC6979 sigs.\n    let k = u8n(hashLen); // Steps B and C of RFC6979 3.2: set hashLen, in our case always same\n    let i = 0; // Iterations counter, will throw when over 1000\n    const reset = () => {\n        v.fill(1);\n        k.fill(0);\n        i = 0;\n    };\n    const h = (...b) => hmacFn(k, v, ...b); // hmac(k)(v, ...values)\n    const reseed = (seed = u8n()) => {\n        // HMAC-DRBG reseed() function. Steps D-G\n        k = h(u8fr([0x00]), seed); // k = hmac(k || v || 0x00 || seed)\n        v = h(); // v = hmac(k || v)\n        if (seed.length === 0)\n            return;\n        k = h(u8fr([0x01]), seed); // k = hmac(k || v || 0x01 || seed)\n        v = h(); // v = hmac(k || v)\n    };\n    const gen = () => {\n        // HMAC-DRBG generate() function\n        if (i++ >= 1000)\n            throw new Error('drbg: tried 1000 values');\n        let len = 0;\n        const out = [];\n        while (len < qByteLen) {\n            v = h();\n            const sl = v.slice();\n            out.push(sl);\n            len += v.length;\n        }\n        return concatBytes(...out);\n    };\n    const genUntil = (seed, pred) => {\n        reset();\n        reseed(seed); // Steps D-G\n        let res = undefined; // Step H: grind until k is in [1..n-1]\n        while (!(res = pred(gen())))\n            reseed();\n        reset();\n        return res;\n    };\n    return genUntil;\n}\n// Validating curves and fields\nconst validatorFns = {\n    bigint: (val) => typeof val === 'bigint',\n    function: (val) => typeof val === 'function',\n    boolean: (val) => typeof val === 'boolean',\n    string: (val) => typeof val === 'string',\n    stringOrUint8Array: (val) => typeof val === 'string' || isBytes(val),\n    isSafeInteger: (val) => Number.isSafeInteger(val),\n    array: (val) => Array.isArray(val),\n    field: (val, object) => object.Fp.isValid(val),\n    hash: (val) => typeof val === 'function' && Number.isSafeInteger(val.outputLen),\n};\n// type Record<K extends string | number | symbol, T> = { [P in K]: T; }\nexport function validateObject(object, validators, optValidators = {}) {\n    const checkField = (fieldName, type, isOptional) => {\n        const checkVal = validatorFns[type];\n        if (typeof checkVal !== 'function')\n            throw new Error(`Invalid validator \"${type}\", expected function`);\n        const val = object[fieldName];\n        if (isOptional && val === undefined)\n            return;\n        if (!checkVal(val, object)) {\n            throw new Error(`Invalid param ${String(fieldName)}=${val} (${typeof val}), expected ${type}`);\n        }\n    };\n    for (const [fieldName, type] of Object.entries(validators))\n        checkField(fieldName, type, false);\n    for (const [fieldName, type] of Object.entries(optValidators))\n        checkField(fieldName, type, true);\n    return object;\n}\n// validate type tests\n// const o: { a: number; b: number; c: number } = { a: 1, b: 5, c: 6 };\n// const z0 = validateObject(o, { a: 'isSafeInteger' }, { c: 'bigint' }); // Ok!\n// // Should fail type-check\n// const z1 = validateObject(o, { a: 'tmp' }, { c: 'zz' });\n// const z2 = validateObject(o, { a: 'isSafeInteger' }, { c: 'zz' });\n// const z3 = validateObject(o, { test: 'boolean', z: 'bug' });\n// const z4 = validateObject(o, { a: 'boolean', z: 'bug' });\n/**\n * throws not implemented error\n */\nexport const notImplemented = () => {\n    throw new Error('not implemented');\n};\n/**\n * Memoizes (caches) computation result.\n * Uses WeakMap: the value is going auto-cleaned by GC after last reference is removed.\n */\nexport function memoized(fn) {\n    const map = new WeakMap();\n    return (arg, ...args) => {\n        const val = map.get(arg);\n        if (val !== undefined)\n            return val;\n        const computed = fn(arg, ...args);\n        map.set(arg, computed);\n        return computed;\n    };\n}\n//# sourceMappingURL=utils.js.map","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// Utilities for modular arithmetics and finite fields\nimport { bitMask, bytesToNumberBE, bytesToNumberLE, ensureBytes, numberToBytesBE, numberToBytesLE, validateObject, } from './utils.js';\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = BigInt(2), _3n = BigInt(3);\n// prettier-ignore\nconst _4n = BigInt(4), _5n = BigInt(5), _8n = BigInt(8);\n// prettier-ignore\nconst _9n = BigInt(9), _16n = BigInt(16);\n// Calculates a modulo b\nexport function mod(a, b) {\n    const result = a % b;\n    return result >= _0n ? result : b + result;\n}\n/**\n * Efficiently raise num to power and do modular division.\n * Unsafe in some contexts: uses ladder, so can expose bigint bits.\n * @example\n * pow(2n, 6n, 11n) // 64n % 11n == 9n\n */\n// TODO: use field version && remove\nexport function pow(num, power, modulo) {\n    if (modulo <= _0n || power < _0n)\n        throw new Error('Expected power/modulo > 0');\n    if (modulo === _1n)\n        return _0n;\n    let res = _1n;\n    while (power > _0n) {\n        if (power & _1n)\n            res = (res * num) % modulo;\n        num = (num * num) % modulo;\n        power >>= _1n;\n    }\n    return res;\n}\n// Does x ^ (2 ^ power) mod p. pow2(30, 4) == 30 ^ (2 ^ 4)\nexport function pow2(x, power, modulo) {\n    let res = x;\n    while (power-- > _0n) {\n        res *= res;\n        res %= modulo;\n    }\n    return res;\n}\n// Inverses number over modulo\nexport function invert(number, modulo) {\n    if (number === _0n || modulo <= _0n) {\n        throw new Error(`invert: expected positive integers, got n=${number} mod=${modulo}`);\n    }\n    // Euclidean GCD https://brilliant.org/wiki/extended-euclidean-algorithm/\n    // Fermat's little theorem \"CT-like\" version inv(n) = n^(m-2) mod m is 30x slower.\n    let a = mod(number, modulo);\n    let b = modulo;\n    // prettier-ignore\n    let x = _0n, y = _1n, u = _1n, v = _0n;\n    while (a !== _0n) {\n        // JIT applies optimization if those two lines follow each other\n        const q = b / a;\n        const r = b % a;\n        const m = x - u * q;\n        const n = y - v * q;\n        // prettier-ignore\n        b = a, a = r, x = u, y = v, u = m, v = n;\n    }\n    const gcd = b;\n    if (gcd !== _1n)\n        throw new Error('invert: does not exist');\n    return mod(x, modulo);\n}\n/**\n * Tonelli-Shanks square root search algorithm.\n * 1. https://eprint.iacr.org/2012/685.pdf (page 12)\n * 2. Square Roots from 1; 24, 51, 10 to Dan Shanks\n * Will start an infinite loop if field order P is not prime.\n * @param P field order\n * @returns function that takes field Fp (created from P) and number n\n */\nexport function tonelliShanks(P) {\n    // Legendre constant: used to calculate Legendre symbol (a | p),\n    // which denotes the value of a^((p-1)/2) (mod p).\n    // (a | p) ≡ 1    if a is a square (mod p)\n    // (a | p) ≡ -1   if a is not a square (mod p)\n    // (a | p) ≡ 0    if a ≡ 0 (mod p)\n    const legendreC = (P - _1n) / _2n;\n    let Q, S, Z;\n    // Step 1: By factoring out powers of 2 from p - 1,\n    // find q and s such that p - 1 = q*(2^s) with q odd\n    for (Q = P - _1n, S = 0; Q % _2n === _0n; Q /= _2n, S++)\n        ;\n    // Step 2: Select a non-square z such that (z | p) ≡ -1 and set c ≡ zq\n    for (Z = _2n; Z < P && pow(Z, legendreC, P) !== P - _1n; Z++)\n        ;\n    // Fast-path\n    if (S === 1) {\n        const p1div4 = (P + _1n) / _4n;\n        return function tonelliFast(Fp, n) {\n            const root = Fp.pow(n, p1div4);\n            if (!Fp.eql(Fp.sqr(root), n))\n                throw new Error('Cannot find square root');\n            return root;\n        };\n    }\n    // Slow-path\n    const Q1div2 = (Q + _1n) / _2n;\n    return function tonelliSlow(Fp, n) {\n        // Step 0: Check that n is indeed a square: (n | p) should not be ≡ -1\n        if (Fp.pow(n, legendreC) === Fp.neg(Fp.ONE))\n            throw new Error('Cannot find square root');\n        let r = S;\n        // TODO: will fail at Fp2/etc\n        let g = Fp.pow(Fp.mul(Fp.ONE, Z), Q); // will update both x and b\n        let x = Fp.pow(n, Q1div2); // first guess at the square root\n        let b = Fp.pow(n, Q); // first guess at the fudge factor\n        while (!Fp.eql(b, Fp.ONE)) {\n            if (Fp.eql(b, Fp.ZERO))\n                return Fp.ZERO; // https://en.wikipedia.org/wiki/Tonelli%E2%80%93Shanks_algorithm (4. If t = 0, return r = 0)\n            // Find m such b^(2^m)==1\n            let m = 1;\n            for (let t2 = Fp.sqr(b); m < r; m++) {\n                if (Fp.eql(t2, Fp.ONE))\n                    break;\n                t2 = Fp.sqr(t2); // t2 *= t2\n            }\n            // NOTE: r-m-1 can be bigger than 32, need to convert to bigint before shift, otherwise there will be overflow\n            const ge = Fp.pow(g, _1n << BigInt(r - m - 1)); // ge = 2^(r-m-1)\n            g = Fp.sqr(ge); // g = ge * ge\n            x = Fp.mul(x, ge); // x *= ge\n            b = Fp.mul(b, g); // b *= g\n            r = m;\n        }\n        return x;\n    };\n}\nexport function FpSqrt(P) {\n    // NOTE: different algorithms can give different roots, it is up to user to decide which one they want.\n    // For example there is FpSqrtOdd/FpSqrtEven to choice root based on oddness (used for hash-to-curve).\n    // P ≡ 3 (mod 4)\n    // √n = n^((P+1)/4)\n    if (P % _4n === _3n) {\n        // Not all roots possible!\n        // const ORDER =\n        //   0x1a0111ea397fe69a4b1ba7b6434bacd764774b84f38512bf6730d2a0f6b0f6241eabfffeb153ffffb9feffffffffaaabn;\n        // const NUM = 72057594037927816n;\n        const p1div4 = (P + _1n) / _4n;\n        return function sqrt3mod4(Fp, n) {\n            const root = Fp.pow(n, p1div4);\n            // Throw if root**2 != n\n            if (!Fp.eql(Fp.sqr(root), n))\n                throw new Error('Cannot find square root');\n            return root;\n        };\n    }\n    // Atkin algorithm for q ≡ 5 (mod 8), https://eprint.iacr.org/2012/685.pdf (page 10)\n    if (P % _8n === _5n) {\n        const c1 = (P - _5n) / _8n;\n        return function sqrt5mod8(Fp, n) {\n            const n2 = Fp.mul(n, _2n);\n            const v = Fp.pow(n2, c1);\n            const nv = Fp.mul(n, v);\n            const i = Fp.mul(Fp.mul(nv, _2n), v);\n            const root = Fp.mul(nv, Fp.sub(i, Fp.ONE));\n            if (!Fp.eql(Fp.sqr(root), n))\n                throw new Error('Cannot find square root');\n            return root;\n        };\n    }\n    // P ≡ 9 (mod 16)\n    if (P % _16n === _9n) {\n        // NOTE: tonelli is too slow for bls-Fp2 calculations even on start\n        // Means we cannot use sqrt for constants at all!\n        //\n        // const c1 = Fp.sqrt(Fp.negate(Fp.ONE)); //  1. c1 = sqrt(-1) in F, i.e., (c1^2) == -1 in F\n        // const c2 = Fp.sqrt(c1);                //  2. c2 = sqrt(c1) in F, i.e., (c2^2) == c1 in F\n        // const c3 = Fp.sqrt(Fp.negate(c1));     //  3. c3 = sqrt(-c1) in F, i.e., (c3^2) == -c1 in F\n        // const c4 = (P + _7n) / _16n;           //  4. c4 = (q + 7) / 16        # Integer arithmetic\n        // sqrt = (x) => {\n        //   let tv1 = Fp.pow(x, c4);             //  1. tv1 = x^c4\n        //   let tv2 = Fp.mul(c1, tv1);           //  2. tv2 = c1 * tv1\n        //   const tv3 = Fp.mul(c2, tv1);         //  3. tv3 = c2 * tv1\n        //   let tv4 = Fp.mul(c3, tv1);           //  4. tv4 = c3 * tv1\n        //   const e1 = Fp.equals(Fp.square(tv2), x); //  5.  e1 = (tv2^2) == x\n        //   const e2 = Fp.equals(Fp.square(tv3), x); //  6.  e2 = (tv3^2) == x\n        //   tv1 = Fp.cmov(tv1, tv2, e1); //  7. tv1 = CMOV(tv1, tv2, e1)  # Select tv2 if (tv2^2) == x\n        //   tv2 = Fp.cmov(tv4, tv3, e2); //  8. tv2 = CMOV(tv4, tv3, e2)  # Select tv3 if (tv3^2) == x\n        //   const e3 = Fp.equals(Fp.square(tv2), x); //  9.  e3 = (tv2^2) == x\n        //   return Fp.cmov(tv1, tv2, e3); //  10.  z = CMOV(tv1, tv2, e3)  # Select the sqrt from tv1 and tv2\n        // }\n    }\n    // Other cases: Tonelli-Shanks algorithm\n    return tonelliShanks(P);\n}\n// Little-endian check for first LE bit (last BE bit);\nexport const isNegativeLE = (num, modulo) => (mod(num, modulo) & _1n) === _1n;\n// prettier-ignore\nconst FIELD_FIELDS = [\n    'create', 'isValid', 'is0', 'neg', 'inv', 'sqrt', 'sqr',\n    'eql', 'add', 'sub', 'mul', 'pow', 'div',\n    'addN', 'subN', 'mulN', 'sqrN'\n];\nexport function validateField(field) {\n    const initial = {\n        ORDER: 'bigint',\n        MASK: 'bigint',\n        BYTES: 'isSafeInteger',\n        BITS: 'isSafeInteger',\n    };\n    const opts = FIELD_FIELDS.reduce((map, val) => {\n        map[val] = 'function';\n        return map;\n    }, initial);\n    return validateObject(field, opts);\n}\n// Generic field functions\n/**\n * Same as `pow` but for Fp: non-constant-time.\n * Unsafe in some contexts: uses ladder, so can expose bigint bits.\n */\nexport function FpPow(f, num, power) {\n    // Should have same speed as pow for bigints\n    // TODO: benchmark!\n    if (power < _0n)\n        throw new Error('Expected power > 0');\n    if (power === _0n)\n        return f.ONE;\n    if (power === _1n)\n        return num;\n    let p = f.ONE;\n    let d = num;\n    while (power > _0n) {\n        if (power & _1n)\n            p = f.mul(p, d);\n        d = f.sqr(d);\n        power >>= _1n;\n    }\n    return p;\n}\n/**\n * Efficiently invert an array of Field elements.\n * `inv(0)` will return `undefined` here: make sure to throw an error.\n */\nexport function FpInvertBatch(f, nums) {\n    const tmp = new Array(nums.length);\n    // Walk from first to last, multiply them by each other MOD p\n    const lastMultiplied = nums.reduce((acc, num, i) => {\n        if (f.is0(num))\n            return acc;\n        tmp[i] = acc;\n        return f.mul(acc, num);\n    }, f.ONE);\n    // Invert last element\n    const inverted = f.inv(lastMultiplied);\n    // Walk from last to first, multiply them by inverted each other MOD p\n    nums.reduceRight((acc, num, i) => {\n        if (f.is0(num))\n            return acc;\n        tmp[i] = f.mul(acc, tmp[i]);\n        return f.mul(acc, num);\n    }, inverted);\n    return tmp;\n}\nexport function FpDiv(f, lhs, rhs) {\n    return f.mul(lhs, typeof rhs === 'bigint' ? invert(rhs, f.ORDER) : f.inv(rhs));\n}\nexport function FpLegendre(order) {\n    // (a | p) ≡ 1    if a is a square (mod p), quadratic residue\n    // (a | p) ≡ -1   if a is not a square (mod p), quadratic non residue\n    // (a | p) ≡ 0    if a ≡ 0 (mod p)\n    const legendreConst = (order - _1n) / _2n; // Integer arithmetic\n    return (f, x) => f.pow(x, legendreConst);\n}\n// This function returns True whenever the value x is a square in the field F.\nexport function FpIsSquare(f) {\n    const legendre = FpLegendre(f.ORDER);\n    return (x) => {\n        const p = legendre(f, x);\n        return f.eql(p, f.ZERO) || f.eql(p, f.ONE);\n    };\n}\n// CURVE.n lengths\nexport function nLength(n, nBitLength) {\n    // Bit size, byte size of CURVE.n\n    const _nBitLength = nBitLength !== undefined ? nBitLength : n.toString(2).length;\n    const nByteLength = Math.ceil(_nBitLength / 8);\n    return { nBitLength: _nBitLength, nByteLength };\n}\n/**\n * Initializes a finite field over prime. **Non-primes are not supported.**\n * Do not init in loop: slow. Very fragile: always run a benchmark on a change.\n * Major performance optimizations:\n * * a) denormalized operations like mulN instead of mul\n * * b) same object shape: never add or remove keys\n * * c) Object.freeze\n * NOTE: operations don't check 'isValid' for all elements for performance reasons,\n * it is caller responsibility to check this.\n * This is low-level code, please make sure you know what you doing.\n * @param ORDER prime positive bigint\n * @param bitLen how many bits the field consumes\n * @param isLE (def: false) if encoding / decoding should be in little-endian\n * @param redef optional faster redefinitions of sqrt and other methods\n */\nexport function Field(ORDER, bitLen, isLE = false, redef = {}) {\n    if (ORDER <= _0n)\n        throw new Error(`Expected Field ORDER > 0, got ${ORDER}`);\n    const { nBitLength: BITS, nByteLength: BYTES } = nLength(ORDER, bitLen);\n    if (BYTES > 2048)\n        throw new Error('Field lengths over 2048 bytes are not supported');\n    const sqrtP = FpSqrt(ORDER);\n    const f = Object.freeze({\n        ORDER,\n        BITS,\n        BYTES,\n        MASK: bitMask(BITS),\n        ZERO: _0n,\n        ONE: _1n,\n        create: (num) => mod(num, ORDER),\n        isValid: (num) => {\n            if (typeof num !== 'bigint')\n                throw new Error(`Invalid field element: expected bigint, got ${typeof num}`);\n            return _0n <= num && num < ORDER; // 0 is valid element, but it's not invertible\n        },\n        is0: (num) => num === _0n,\n        isOdd: (num) => (num & _1n) === _1n,\n        neg: (num) => mod(-num, ORDER),\n        eql: (lhs, rhs) => lhs === rhs,\n        sqr: (num) => mod(num * num, ORDER),\n        add: (lhs, rhs) => mod(lhs + rhs, ORDER),\n        sub: (lhs, rhs) => mod(lhs - rhs, ORDER),\n        mul: (lhs, rhs) => mod(lhs * rhs, ORDER),\n        pow: (num, power) => FpPow(f, num, power),\n        div: (lhs, rhs) => mod(lhs * invert(rhs, ORDER), ORDER),\n        // Same as above, but doesn't normalize\n        sqrN: (num) => num * num,\n        addN: (lhs, rhs) => lhs + rhs,\n        subN: (lhs, rhs) => lhs - rhs,\n        mulN: (lhs, rhs) => lhs * rhs,\n        inv: (num) => invert(num, ORDER),\n        sqrt: redef.sqrt || ((n) => sqrtP(f, n)),\n        invertBatch: (lst) => FpInvertBatch(f, lst),\n        // TODO: do we really need constant cmov?\n        // We don't have const-time bigints anyway, so probably will be not very useful\n        cmov: (a, b, c) => (c ? b : a),\n        toBytes: (num) => (isLE ? numberToBytesLE(num, BYTES) : numberToBytesBE(num, BYTES)),\n        fromBytes: (bytes) => {\n            if (bytes.length !== BYTES)\n                throw new Error(`Fp.fromBytes: expected ${BYTES}, got ${bytes.length}`);\n            return isLE ? bytesToNumberLE(bytes) : bytesToNumberBE(bytes);\n        },\n    });\n    return Object.freeze(f);\n}\nexport function FpSqrtOdd(Fp, elm) {\n    if (!Fp.isOdd)\n        throw new Error(`Field doesn't have isOdd`);\n    const root = Fp.sqrt(elm);\n    return Fp.isOdd(root) ? root : Fp.neg(root);\n}\nexport function FpSqrtEven(Fp, elm) {\n    if (!Fp.isOdd)\n        throw new Error(`Field doesn't have isOdd`);\n    const root = Fp.sqrt(elm);\n    return Fp.isOdd(root) ? Fp.neg(root) : root;\n}\n/**\n * \"Constant-time\" private key generation utility.\n * Same as mapKeyToField, but accepts less bytes (40 instead of 48 for 32-byte field).\n * Which makes it slightly more biased, less secure.\n * @deprecated use mapKeyToField instead\n */\nexport function hashToPrivateScalar(hash, groupOrder, isLE = false) {\n    hash = ensureBytes('privateHash', hash);\n    const hashLen = hash.length;\n    const minLen = nLength(groupOrder).nByteLength + 8;\n    if (minLen < 24 || hashLen < minLen || hashLen > 1024)\n        throw new Error(`hashToPrivateScalar: expected ${minLen}-1024 bytes of input, got ${hashLen}`);\n    const num = isLE ? bytesToNumberLE(hash) : bytesToNumberBE(hash);\n    return mod(num, groupOrder - _1n) + _1n;\n}\n/**\n * Returns total number of bytes consumed by the field element.\n * For example, 32 bytes for usual 256-bit weierstrass curve.\n * @param fieldOrder number of field elements, usually CURVE.n\n * @returns byte length of field\n */\nexport function getFieldBytesLength(fieldOrder) {\n    if (typeof fieldOrder !== 'bigint')\n        throw new Error('field order must be bigint');\n    const bitLength = fieldOrder.toString(2).length;\n    return Math.ceil(bitLength / 8);\n}\n/**\n * Returns minimal amount of bytes that can be safely reduced\n * by field order.\n * Should be 2^-128 for 128-bit curve such as P256.\n * @param fieldOrder number of field elements, usually CURVE.n\n * @returns byte length of target hash\n */\nexport function getMinHashLength(fieldOrder) {\n    const length = getFieldBytesLength(fieldOrder);\n    return length + Math.ceil(length / 2);\n}\n/**\n * \"Constant-time\" private key generation utility.\n * Can take (n + n/2) or more bytes of uniform input e.g. from CSPRNG or KDF\n * and convert them into private scalar, with the modulo bias being negligible.\n * Needs at least 48 bytes of input for 32-byte private key.\n * https://research.kudelskisecurity.com/2020/07/28/the-definitive-guide-to-modulo-bias-and-how-to-avoid-it/\n * FIPS 186-5, A.2 https://csrc.nist.gov/publications/detail/fips/186/5/final\n * RFC 9380, https://www.rfc-editor.org/rfc/rfc9380#section-5\n * @param hash hash output from SHA3 or a similar function\n * @param groupOrder size of subgroup - (e.g. secp256k1.CURVE.n)\n * @param isLE interpret hash bytes as LE num\n * @returns valid private scalar\n */\nexport function mapHashToField(key, fieldOrder, isLE = false) {\n    const len = key.length;\n    const fieldLen = getFieldBytesLength(fieldOrder);\n    const minLen = getMinHashLength(fieldOrder);\n    // No small numbers: need to understand bias story. No huge numbers: easier to detect JS timings.\n    if (len < 16 || len < minLen || len > 1024)\n        throw new Error(`expected ${minLen}-1024 bytes of input, got ${len}`);\n    const num = isLE ? bytesToNumberBE(key) : bytesToNumberLE(key);\n    // `mod(x, 11)` can sometimes produce 0. `mod(x, 10) + 1` is the same, but no 0\n    const reduced = mod(num, fieldOrder - _1n) + _1n;\n    return isLE ? numberToBytesLE(reduced, fieldLen) : numberToBytesBE(reduced, fieldLen);\n}\n//# sourceMappingURL=modular.js.map","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// Abelian group utilities\nimport { validateField, nLength } from './modular.js';\nimport { validateObject, bitLen } from './utils.js';\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\n// Since points in different groups cannot be equal (different object constructor),\n// we can have single place to store precomputes\nconst pointPrecomputes = new WeakMap();\nconst pointWindowSizes = new WeakMap(); // This allows use make points immutable (nothing changes inside)\n// Elliptic curve multiplication of Point by scalar. Fragile.\n// Scalars should always be less than curve order: this should be checked inside of a curve itself.\n// Creates precomputation tables for fast multiplication:\n// - private scalar is split by fixed size windows of W bits\n// - every window point is collected from window's table & added to accumulator\n// - since windows are different, same point inside tables won't be accessed more than once per calc\n// - each multiplication is 'Math.ceil(CURVE_ORDER / 𝑊) + 1' point additions (fixed for any scalar)\n// - +1 window is neccessary for wNAF\n// - wNAF reduces table size: 2x less memory + 2x faster generation, but 10% slower multiplication\n// TODO: Research returning 2d JS array of windows, instead of a single window. This would allow\n// windows to be in different memory locations\nexport function wNAF(c, bits) {\n    const constTimeNegate = (condition, item) => {\n        const neg = item.negate();\n        return condition ? neg : item;\n    };\n    const validateW = (W) => {\n        if (!Number.isSafeInteger(W) || W <= 0 || W > bits)\n            throw new Error(`Wrong window size=${W}, should be [1..${bits}]`);\n    };\n    const opts = (W) => {\n        validateW(W);\n        const windows = Math.ceil(bits / W) + 1; // +1, because\n        const windowSize = 2 ** (W - 1); // -1 because we skip zero\n        return { windows, windowSize };\n    };\n    return {\n        constTimeNegate,\n        // non-const time multiplication ladder\n        unsafeLadder(elm, n) {\n            let p = c.ZERO;\n            let d = elm;\n            while (n > _0n) {\n                if (n & _1n)\n                    p = p.add(d);\n                d = d.double();\n                n >>= _1n;\n            }\n            return p;\n        },\n        /**\n         * Creates a wNAF precomputation window. Used for caching.\n         * Default window size is set by `utils.precompute()` and is equal to 8.\n         * Number of precomputed points depends on the curve size:\n         * 2^(𝑊−1) * (Math.ceil(𝑛 / 𝑊) + 1), where:\n         * - 𝑊 is the window size\n         * - 𝑛 is the bitlength of the curve order.\n         * For a 256-bit curve and window size 8, the number of precomputed points is 128 * 33 = 4224.\n         * @returns precomputed point tables flattened to a single array\n         */\n        precomputeWindow(elm, W) {\n            const { windows, windowSize } = opts(W);\n            const points = [];\n            let p = elm;\n            let base = p;\n            for (let window = 0; window < windows; window++) {\n                base = p;\n                points.push(base);\n                // =1, because we skip zero\n                for (let i = 1; i < windowSize; i++) {\n                    base = base.add(p);\n                    points.push(base);\n                }\n                p = base.double();\n            }\n            return points;\n        },\n        /**\n         * Implements ec multiplication using precomputed tables and w-ary non-adjacent form.\n         * @param W window size\n         * @param precomputes precomputed tables\n         * @param n scalar (we don't check here, but should be less than curve order)\n         * @returns real and fake (for const-time) points\n         */\n        wNAF(W, precomputes, n) {\n            // TODO: maybe check that scalar is less than group order? wNAF behavious is undefined otherwise\n            // But need to carefully remove other checks before wNAF. ORDER == bits here\n            const { windows, windowSize } = opts(W);\n            let p = c.ZERO;\n            let f = c.BASE;\n            const mask = BigInt(2 ** W - 1); // Create mask with W ones: 0b1111 for W=4 etc.\n            const maxNumber = 2 ** W;\n            const shiftBy = BigInt(W);\n            for (let window = 0; window < windows; window++) {\n                const offset = window * windowSize;\n                // Extract W bits.\n                let wbits = Number(n & mask);\n                // Shift number by W bits.\n                n >>= shiftBy;\n                // If the bits are bigger than max size, we'll split those.\n                // +224 => 256 - 32\n                if (wbits > windowSize) {\n                    wbits -= maxNumber;\n                    n += _1n;\n                }\n                // This code was first written with assumption that 'f' and 'p' will never be infinity point:\n                // since each addition is multiplied by 2 ** W, it cannot cancel each other. However,\n                // there is negate now: it is possible that negated element from low value\n                // would be the same as high element, which will create carry into next window.\n                // It's not obvious how this can fail, but still worth investigating later.\n                // Check if we're onto Zero point.\n                // Add random point inside current window to f.\n                const offset1 = offset;\n                const offset2 = offset + Math.abs(wbits) - 1; // -1 because we skip zero\n                const cond1 = window % 2 !== 0;\n                const cond2 = wbits < 0;\n                if (wbits === 0) {\n                    // The most important part for const-time getPublicKey\n                    f = f.add(constTimeNegate(cond1, precomputes[offset1]));\n                }\n                else {\n                    p = p.add(constTimeNegate(cond2, precomputes[offset2]));\n                }\n            }\n            // JIT-compiler should not eliminate f here, since it will later be used in normalizeZ()\n            // Even if the variable is still unused, there are some checks which will\n            // throw an exception, so compiler needs to prove they won't happen, which is hard.\n            // At this point there is a way to F be infinity-point even if p is not,\n            // which makes it less const-time: around 1 bigint multiply.\n            return { p, f };\n        },\n        wNAFCached(P, n, transform) {\n            const W = pointWindowSizes.get(P) || 1;\n            // Calculate precomputes on a first run, reuse them after\n            let comp = pointPrecomputes.get(P);\n            if (!comp) {\n                comp = this.precomputeWindow(P, W);\n                if (W !== 1)\n                    pointPrecomputes.set(P, transform(comp));\n            }\n            return this.wNAF(W, comp, n);\n        },\n        // We calculate precomputes for elliptic curve point multiplication\n        // using windowed method. This specifies window size and\n        // stores precomputed values. Usually only base point would be precomputed.\n        setWindowSize(P, W) {\n            validateW(W);\n            pointWindowSizes.set(P, W);\n            pointPrecomputes.delete(P);\n        },\n    };\n}\n/**\n * Pippenger algorithm for multi-scalar multiplication (MSM).\n * MSM is basically (Pa + Qb + Rc + ...).\n * 30x faster vs naive addition on L=4096, 10x faster with precomputes.\n * For N=254bit, L=1, it does: 1024 ADD + 254 DBL. For L=5: 1536 ADD + 254 DBL.\n * Algorithmically constant-time (for same L), even when 1 point + scalar, or when scalar = 0.\n * @param c Curve Point constructor\n * @param field field over CURVE.N - important that it's not over CURVE.P\n * @param points array of L curve points\n * @param scalars array of L scalars (aka private keys / bigints)\n */\nexport function pippenger(c, field, points, scalars) {\n    // If we split scalars by some window (let's say 8 bits), every chunk will only\n    // take 256 buckets even if there are 4096 scalars, also re-uses double.\n    // TODO:\n    // - https://eprint.iacr.org/2024/750.pdf\n    // - https://tches.iacr.org/index.php/TCHES/article/view/10287\n    // 0 is accepted in scalars\n    if (!Array.isArray(points) || !Array.isArray(scalars) || scalars.length !== points.length)\n        throw new Error('arrays of points and scalars must have equal length');\n    scalars.forEach((s, i) => {\n        if (!field.isValid(s))\n            throw new Error(`wrong scalar at index ${i}`);\n    });\n    points.forEach((p, i) => {\n        if (!(p instanceof c))\n            throw new Error(`wrong point at index ${i}`);\n    });\n    const wbits = bitLen(BigInt(points.length));\n    const windowSize = wbits > 12 ? wbits - 3 : wbits > 4 ? wbits - 2 : wbits ? 2 : 1; // in bits\n    const MASK = (1 << windowSize) - 1;\n    const buckets = new Array(MASK + 1).fill(c.ZERO); // +1 for zero array\n    const lastBits = Math.floor((field.BITS - 1) / windowSize) * windowSize;\n    let sum = c.ZERO;\n    for (let i = lastBits; i >= 0; i -= windowSize) {\n        buckets.fill(c.ZERO);\n        for (let j = 0; j < scalars.length; j++) {\n            const scalar = scalars[j];\n            const wbits = Number((scalar >> BigInt(i)) & BigInt(MASK));\n            buckets[wbits] = buckets[wbits].add(points[j]);\n        }\n        let resI = c.ZERO; // not using this will do small speed-up, but will lose ct\n        // Skip first bucket, because it is zero\n        for (let j = buckets.length - 1, sumI = c.ZERO; j > 0; j--) {\n            sumI = sumI.add(buckets[j]);\n            resI = resI.add(sumI);\n        }\n        sum = sum.add(resI);\n        if (i !== 0)\n            for (let j = 0; j < windowSize; j++)\n                sum = sum.double();\n    }\n    return sum;\n}\nexport function validateBasic(curve) {\n    validateField(curve.Fp);\n    validateObject(curve, {\n        n: 'bigint',\n        h: 'bigint',\n        Gx: 'field',\n        Gy: 'field',\n    }, {\n        nBitLength: 'isSafeInteger',\n        nByteLength: 'isSafeInteger',\n    });\n    // Set defaults\n    return Object.freeze({\n        ...nLength(curve.n, curve.nBitLength),\n        ...curve,\n        ...{ p: curve.Fp.ORDER },\n    });\n}\n//# sourceMappingURL=curve.js.map","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// Twisted Edwards curve. The formula is: ax² + y² = 1 + dx²y²\nimport { validateBasic, wNAF, pippenger, } from './curve.js';\nimport { mod, Field } from './modular.js';\nimport * as ut from './utils.js';\nimport { ensureBytes, memoized, abool } from './utils.js';\n// Be friendly to bad ECMAScript parsers by not using bigint literals\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = BigInt(2), _8n = BigInt(8);\n// verification rule is either zip215 or rfc8032 / nist186-5. Consult fromHex:\nconst VERIFY_DEFAULT = { zip215: true };\nfunction validateOpts(curve) {\n    const opts = validateBasic(curve);\n    ut.validateObject(curve, {\n        hash: 'function',\n        a: 'bigint',\n        d: 'bigint',\n        randomBytes: 'function',\n    }, {\n        adjustScalarBytes: 'function',\n        domain: 'function',\n        uvRatio: 'function',\n        mapToCurve: 'function',\n    });\n    // Set defaults\n    return Object.freeze({ ...opts });\n}\n/**\n * Creates Twisted Edwards curve with EdDSA signatures.\n * @example\n * import { Field } from '@noble/curves/abstract/modular';\n * // Before that, define BigInt-s: a, d, p, n, Gx, Gy, h\n * const curve = twistedEdwards({ a, d, Fp: Field(p), n, Gx, Gy, h })\n */\nexport function twistedEdwards(curveDef) {\n    const CURVE = validateOpts(curveDef);\n    const { Fp, n: CURVE_ORDER, prehash: prehash, hash: cHash, randomBytes, nByteLength, h: cofactor, } = CURVE;\n    const MASK = _2n << (BigInt(nByteLength * 8) - _1n);\n    const modP = Fp.create; // Function overrides\n    const Fn = Field(CURVE.n, CURVE.nBitLength);\n    // sqrt(u/v)\n    const uvRatio = CURVE.uvRatio ||\n        ((u, v) => {\n            try {\n                return { isValid: true, value: Fp.sqrt(u * Fp.inv(v)) };\n            }\n            catch (e) {\n                return { isValid: false, value: _0n };\n            }\n        });\n    const adjustScalarBytes = CURVE.adjustScalarBytes || ((bytes) => bytes); // NOOP\n    const domain = CURVE.domain ||\n        ((data, ctx, phflag) => {\n            abool('phflag', phflag);\n            if (ctx.length || phflag)\n                throw new Error('Contexts/pre-hash are not supported');\n            return data;\n        }); // NOOP\n    // 0 <= n < MASK\n    // Coordinates larger than Fp.ORDER are allowed for zip215\n    function aCoordinate(title, n) {\n        ut.aInRange('coordinate ' + title, n, _0n, MASK);\n    }\n    function assertPoint(other) {\n        if (!(other instanceof Point))\n            throw new Error('ExtendedPoint expected');\n    }\n    // Converts Extended point to default (x, y) coordinates.\n    // Can accept precomputed Z^-1 - for example, from invertBatch.\n    const toAffineMemo = memoized((p, iz) => {\n        const { ex: x, ey: y, ez: z } = p;\n        const is0 = p.is0();\n        if (iz == null)\n            iz = is0 ? _8n : Fp.inv(z); // 8 was chosen arbitrarily\n        const ax = modP(x * iz);\n        const ay = modP(y * iz);\n        const zz = modP(z * iz);\n        if (is0)\n            return { x: _0n, y: _1n };\n        if (zz !== _1n)\n            throw new Error('invZ was invalid');\n        return { x: ax, y: ay };\n    });\n    const assertValidMemo = memoized((p) => {\n        const { a, d } = CURVE;\n        if (p.is0())\n            throw new Error('bad point: ZERO'); // TODO: optimize, with vars below?\n        // Equation in affine coordinates: ax² + y² = 1 + dx²y²\n        // Equation in projective coordinates (X/Z, Y/Z, Z):  (aX² + Y²)Z² = Z⁴ + dX²Y²\n        const { ex: X, ey: Y, ez: Z, et: T } = p;\n        const X2 = modP(X * X); // X²\n        const Y2 = modP(Y * Y); // Y²\n        const Z2 = modP(Z * Z); // Z²\n        const Z4 = modP(Z2 * Z2); // Z⁴\n        const aX2 = modP(X2 * a); // aX²\n        const left = modP(Z2 * modP(aX2 + Y2)); // (aX² + Y²)Z²\n        const right = modP(Z4 + modP(d * modP(X2 * Y2))); // Z⁴ + dX²Y²\n        if (left !== right)\n            throw new Error('bad point: equation left != right (1)');\n        // In Extended coordinates we also have T, which is x*y=T/Z: check X*Y == Z*T\n        const XY = modP(X * Y);\n        const ZT = modP(Z * T);\n        if (XY !== ZT)\n            throw new Error('bad point: equation left != right (2)');\n        return true;\n    });\n    // Extended Point works in extended coordinates: (x, y, z, t) ∋ (x=x/z, y=y/z, t=xy).\n    // https://en.wikipedia.org/wiki/Twisted_Edwards_curve#Extended_coordinates\n    class Point {\n        constructor(ex, ey, ez, et) {\n            this.ex = ex;\n            this.ey = ey;\n            this.ez = ez;\n            this.et = et;\n            aCoordinate('x', ex);\n            aCoordinate('y', ey);\n            aCoordinate('z', ez);\n            aCoordinate('t', et);\n            Object.freeze(this);\n        }\n        get x() {\n            return this.toAffine().x;\n        }\n        get y() {\n            return this.toAffine().y;\n        }\n        static fromAffine(p) {\n            if (p instanceof Point)\n                throw new Error('extended point not allowed');\n            const { x, y } = p || {};\n            aCoordinate('x', x);\n            aCoordinate('y', y);\n            return new Point(x, y, _1n, modP(x * y));\n        }\n        static normalizeZ(points) {\n            const toInv = Fp.invertBatch(points.map((p) => p.ez));\n            return points.map((p, i) => p.toAffine(toInv[i])).map(Point.fromAffine);\n        }\n        // Multiscalar Multiplication\n        static msm(points, scalars) {\n            return pippenger(Point, Fn, points, scalars);\n        }\n        // \"Private method\", don't use it directly\n        _setWindowSize(windowSize) {\n            wnaf.setWindowSize(this, windowSize);\n        }\n        // Not required for fromHex(), which always creates valid points.\n        // Could be useful for fromAffine().\n        assertValidity() {\n            assertValidMemo(this);\n        }\n        // Compare one point to another.\n        equals(other) {\n            assertPoint(other);\n            const { ex: X1, ey: Y1, ez: Z1 } = this;\n            const { ex: X2, ey: Y2, ez: Z2 } = other;\n            const X1Z2 = modP(X1 * Z2);\n            const X2Z1 = modP(X2 * Z1);\n            const Y1Z2 = modP(Y1 * Z2);\n            const Y2Z1 = modP(Y2 * Z1);\n            return X1Z2 === X2Z1 && Y1Z2 === Y2Z1;\n        }\n        is0() {\n            return this.equals(Point.ZERO);\n        }\n        negate() {\n            // Flips point sign to a negative one (-x, y in affine coords)\n            return new Point(modP(-this.ex), this.ey, this.ez, modP(-this.et));\n        }\n        // Fast algo for doubling Extended Point.\n        // https://hyperelliptic.org/EFD/g1p/auto-twisted-extended.html#doubling-dbl-2008-hwcd\n        // Cost: 4M + 4S + 1*a + 6add + 1*2.\n        double() {\n            const { a } = CURVE;\n            const { ex: X1, ey: Y1, ez: Z1 } = this;\n            const A = modP(X1 * X1); // A = X12\n            const B = modP(Y1 * Y1); // B = Y12\n            const C = modP(_2n * modP(Z1 * Z1)); // C = 2*Z12\n            const D = modP(a * A); // D = a*A\n            const x1y1 = X1 + Y1;\n            const E = modP(modP(x1y1 * x1y1) - A - B); // E = (X1+Y1)2-A-B\n            const G = D + B; // G = D+B\n            const F = G - C; // F = G-C\n            const H = D - B; // H = D-B\n            const X3 = modP(E * F); // X3 = E*F\n            const Y3 = modP(G * H); // Y3 = G*H\n            const T3 = modP(E * H); // T3 = E*H\n            const Z3 = modP(F * G); // Z3 = F*G\n            return new Point(X3, Y3, Z3, T3);\n        }\n        // Fast algo for adding 2 Extended Points.\n        // https://hyperelliptic.org/EFD/g1p/auto-twisted-extended.html#addition-add-2008-hwcd\n        // Cost: 9M + 1*a + 1*d + 7add.\n        add(other) {\n            assertPoint(other);\n            const { a, d } = CURVE;\n            const { ex: X1, ey: Y1, ez: Z1, et: T1 } = this;\n            const { ex: X2, ey: Y2, ez: Z2, et: T2 } = other;\n            // Faster algo for adding 2 Extended Points when curve's a=-1.\n            // http://hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html#addition-add-2008-hwcd-4\n            // Cost: 8M + 8add + 2*2.\n            // Note: It does not check whether the `other` point is valid.\n            if (a === BigInt(-1)) {\n                const A = modP((Y1 - X1) * (Y2 + X2));\n                const B = modP((Y1 + X1) * (Y2 - X2));\n                const F = modP(B - A);\n                if (F === _0n)\n                    return this.double(); // Same point. Tests say it doesn't affect timing\n                const C = modP(Z1 * _2n * T2);\n                const D = modP(T1 * _2n * Z2);\n                const E = D + C;\n                const G = B + A;\n                const H = D - C;\n                const X3 = modP(E * F);\n                const Y3 = modP(G * H);\n                const T3 = modP(E * H);\n                const Z3 = modP(F * G);\n                return new Point(X3, Y3, Z3, T3);\n            }\n            const A = modP(X1 * X2); // A = X1*X2\n            const B = modP(Y1 * Y2); // B = Y1*Y2\n            const C = modP(T1 * d * T2); // C = T1*d*T2\n            const D = modP(Z1 * Z2); // D = Z1*Z2\n            const E = modP((X1 + Y1) * (X2 + Y2) - A - B); // E = (X1+Y1)*(X2+Y2)-A-B\n            const F = D - C; // F = D-C\n            const G = D + C; // G = D+C\n            const H = modP(B - a * A); // H = B-a*A\n            const X3 = modP(E * F); // X3 = E*F\n            const Y3 = modP(G * H); // Y3 = G*H\n            const T3 = modP(E * H); // T3 = E*H\n            const Z3 = modP(F * G); // Z3 = F*G\n            return new Point(X3, Y3, Z3, T3);\n        }\n        subtract(other) {\n            return this.add(other.negate());\n        }\n        wNAF(n) {\n            return wnaf.wNAFCached(this, n, Point.normalizeZ);\n        }\n        // Constant-time multiplication.\n        multiply(scalar) {\n            const n = scalar;\n            ut.aInRange('scalar', n, _1n, CURVE_ORDER); // 1 <= scalar < L\n            const { p, f } = this.wNAF(n);\n            return Point.normalizeZ([p, f])[0];\n        }\n        // Non-constant-time multiplication. Uses double-and-add algorithm.\n        // It's faster, but should only be used when you don't care about\n        // an exposed private key e.g. sig verification.\n        // Does NOT allow scalars higher than CURVE.n.\n        multiplyUnsafe(scalar) {\n            const n = scalar;\n            ut.aInRange('scalar', n, _0n, CURVE_ORDER); // 0 <= scalar < L\n            if (n === _0n)\n                return I;\n            if (this.equals(I) || n === _1n)\n                return this;\n            if (this.equals(G))\n                return this.wNAF(n).p;\n            return wnaf.unsafeLadder(this, n);\n        }\n        // Checks if point is of small order.\n        // If you add something to small order point, you will have \"dirty\"\n        // point with torsion component.\n        // Multiplies point by cofactor and checks if the result is 0.\n        isSmallOrder() {\n            return this.multiplyUnsafe(cofactor).is0();\n        }\n        // Multiplies point by curve order and checks if the result is 0.\n        // Returns `false` is the point is dirty.\n        isTorsionFree() {\n            return wnaf.unsafeLadder(this, CURVE_ORDER).is0();\n        }\n        // Converts Extended point to default (x, y) coordinates.\n        // Can accept precomputed Z^-1 - for example, from invertBatch.\n        toAffine(iz) {\n            return toAffineMemo(this, iz);\n        }\n        clearCofactor() {\n            const { h: cofactor } = CURVE;\n            if (cofactor === _1n)\n                return this;\n            return this.multiplyUnsafe(cofactor);\n        }\n        // Converts hash string or Uint8Array to Point.\n        // Uses algo from RFC8032 5.1.3.\n        static fromHex(hex, zip215 = false) {\n            const { d, a } = CURVE;\n            const len = Fp.BYTES;\n            hex = ensureBytes('pointHex', hex, len); // copy hex to a new array\n            abool('zip215', zip215);\n            const normed = hex.slice(); // copy again, we'll manipulate it\n            const lastByte = hex[len - 1]; // select last byte\n            normed[len - 1] = lastByte & ~0x80; // clear last bit\n            const y = ut.bytesToNumberLE(normed);\n            // RFC8032 prohibits >= p, but ZIP215 doesn't\n            // zip215=true:  0 <= y < MASK (2^256 for ed25519)\n            // zip215=false: 0 <= y < P (2^255-19 for ed25519)\n            const max = zip215 ? MASK : Fp.ORDER;\n            ut.aInRange('pointHex.y', y, _0n, max);\n            // Ed25519: x² = (y²-1)/(dy²+1) mod p. Ed448: x² = (y²-1)/(dy²-1) mod p. Generic case:\n            // ax²+y²=1+dx²y² => y²-1=dx²y²-ax² => y²-1=x²(dy²-a) => x²=(y²-1)/(dy²-a)\n            const y2 = modP(y * y); // denominator is always non-0 mod p.\n            const u = modP(y2 - _1n); // u = y² - 1\n            const v = modP(d * y2 - a); // v = d y² + 1.\n            let { isValid, value: x } = uvRatio(u, v); // √(u/v)\n            if (!isValid)\n                throw new Error('Point.fromHex: invalid y coordinate');\n            const isXOdd = (x & _1n) === _1n; // There are 2 square roots. Use x_0 bit to select proper\n            const isLastByteOdd = (lastByte & 0x80) !== 0; // x_0, last bit\n            if (!zip215 && x === _0n && isLastByteOdd)\n                // if x=0 and x_0 = 1, fail\n                throw new Error('Point.fromHex: x=0 and x_0=1');\n            if (isLastByteOdd !== isXOdd)\n                x = modP(-x); // if x_0 != x mod 2, set x = p-x\n            return Point.fromAffine({ x, y });\n        }\n        static fromPrivateKey(privKey) {\n            return getExtendedPublicKey(privKey).point;\n        }\n        toRawBytes() {\n            const { x, y } = this.toAffine();\n            const bytes = ut.numberToBytesLE(y, Fp.BYTES); // each y has 2 x values (x, -y)\n            bytes[bytes.length - 1] |= x & _1n ? 0x80 : 0; // when compressing, it's enough to store y\n            return bytes; // and use the last byte to encode sign of x\n        }\n        toHex() {\n            return ut.bytesToHex(this.toRawBytes()); // Same as toRawBytes, but returns string.\n        }\n    }\n    Point.BASE = new Point(CURVE.Gx, CURVE.Gy, _1n, modP(CURVE.Gx * CURVE.Gy));\n    Point.ZERO = new Point(_0n, _1n, _1n, _0n); // 0, 1, 1, 0\n    const { BASE: G, ZERO: I } = Point;\n    const wnaf = wNAF(Point, nByteLength * 8);\n    function modN(a) {\n        return mod(a, CURVE_ORDER);\n    }\n    // Little-endian SHA512 with modulo n\n    function modN_LE(hash) {\n        return modN(ut.bytesToNumberLE(hash));\n    }\n    /** Convenience method that creates public key and other stuff. RFC8032 5.1.5 */\n    function getExtendedPublicKey(key) {\n        const len = nByteLength;\n        key = ensureBytes('private key', key, len);\n        // Hash private key with curve's hash function to produce uniformingly random input\n        // Check byte lengths: ensure(64, h(ensure(32, key)))\n        const hashed = ensureBytes('hashed private key', cHash(key), 2 * len);\n        const head = adjustScalarBytes(hashed.slice(0, len)); // clear first half bits, produce FE\n        const prefix = hashed.slice(len, 2 * len); // second half is called key prefix (5.1.6)\n        const scalar = modN_LE(head); // The actual private scalar\n        const point = G.multiply(scalar); // Point on Edwards curve aka public key\n        const pointBytes = point.toRawBytes(); // Uint8Array representation\n        return { head, prefix, scalar, point, pointBytes };\n    }\n    // Calculates EdDSA pub key. RFC8032 5.1.5. Privkey is hashed. Use first half with 3 bits cleared\n    function getPublicKey(privKey) {\n        return getExtendedPublicKey(privKey).pointBytes;\n    }\n    // int('LE', SHA512(dom2(F, C) || msgs)) mod N\n    function hashDomainToScalar(context = new Uint8Array(), ...msgs) {\n        const msg = ut.concatBytes(...msgs);\n        return modN_LE(cHash(domain(msg, ensureBytes('context', context), !!prehash)));\n    }\n    /** Signs message with privateKey. RFC8032 5.1.6 */\n    function sign(msg, privKey, options = {}) {\n        msg = ensureBytes('message', msg);\n        if (prehash)\n            msg = prehash(msg); // for ed25519ph etc.\n        const { prefix, scalar, pointBytes } = getExtendedPublicKey(privKey);\n        const r = hashDomainToScalar(options.context, prefix, msg); // r = dom2(F, C) || prefix || PH(M)\n        const R = G.multiply(r).toRawBytes(); // R = rG\n        const k = hashDomainToScalar(options.context, R, pointBytes, msg); // R || A || PH(M)\n        const s = modN(r + k * scalar); // S = (r + k * s) mod L\n        ut.aInRange('signature.s', s, _0n, CURVE_ORDER); // 0 <= s < l\n        const res = ut.concatBytes(R, ut.numberToBytesLE(s, Fp.BYTES));\n        return ensureBytes('result', res, nByteLength * 2); // 64-byte signature\n    }\n    const verifyOpts = VERIFY_DEFAULT;\n    function verify(sig, msg, publicKey, options = verifyOpts) {\n        const { context, zip215 } = options;\n        const len = Fp.BYTES; // Verifies EdDSA signature against message and public key. RFC8032 5.1.7.\n        sig = ensureBytes('signature', sig, 2 * len); // An extended group equation is checked.\n        msg = ensureBytes('message', msg);\n        if (zip215 !== undefined)\n            abool('zip215', zip215);\n        if (prehash)\n            msg = prehash(msg); // for ed25519ph, etc\n        const s = ut.bytesToNumberLE(sig.slice(len, 2 * len));\n        // zip215: true is good for consensus-critical apps and allows points < 2^256\n        // zip215: false follows RFC8032 / NIST186-5 and restricts points to CURVE.p\n        let A, R, SB;\n        try {\n            A = Point.fromHex(publicKey, zip215);\n            R = Point.fromHex(sig.slice(0, len), zip215);\n            SB = G.multiplyUnsafe(s); // 0 <= s < l is done inside\n        }\n        catch (error) {\n            return false;\n        }\n        if (!zip215 && A.isSmallOrder())\n            return false;\n        const k = hashDomainToScalar(context, R.toRawBytes(), A.toRawBytes(), msg);\n        const RkA = R.add(A.multiplyUnsafe(k));\n        // [8][S]B = [8]R + [8][k]A'\n        return RkA.subtract(SB).clearCofactor().equals(Point.ZERO);\n    }\n    G._setWindowSize(8); // Enable precomputes. Slows down first publicKey computation by 20ms.\n    const utils = {\n        getExtendedPublicKey,\n        // ed25519 private keys are uniform 32b. No need to check for modulo bias, like in secp256k1.\n        randomPrivateKey: () => randomBytes(Fp.BYTES),\n        /**\n         * We're doing scalar multiplication (used in getPublicKey etc) with precomputed BASE_POINT\n         * values. This slows down first getPublicKey() by milliseconds (see Speed section),\n         * but allows to speed-up subsequent getPublicKey() calls up to 20x.\n         * @param windowSize 2, 4, 8, 16\n         */\n        precompute(windowSize = 8, point = Point.BASE) {\n            point._setWindowSize(windowSize);\n            point.multiply(BigInt(3));\n            return point;\n        },\n    };\n    return {\n        CURVE,\n        getPublicKey,\n        sign,\n        verify,\n        ExtendedPoint: Point,\n        utils,\n    };\n}\n//# sourceMappingURL=edwards.js.map","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { mod, pow } from './modular.js';\nimport { aInRange, bytesToNumberLE, ensureBytes, numberToBytesLE, validateObject, } from './utils.js';\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\nfunction validateOpts(curve) {\n    validateObject(curve, {\n        a: 'bigint',\n    }, {\n        montgomeryBits: 'isSafeInteger',\n        nByteLength: 'isSafeInteger',\n        adjustScalarBytes: 'function',\n        domain: 'function',\n        powPminus2: 'function',\n        Gu: 'bigint',\n    });\n    // Set defaults\n    return Object.freeze({ ...curve });\n}\n// NOTE: not really montgomery curve, just bunch of very specific methods for X25519/X448 (RFC 7748, https://www.rfc-editor.org/rfc/rfc7748)\n// Uses only one coordinate instead of two\nexport function montgomery(curveDef) {\n    const CURVE = validateOpts(curveDef);\n    const { P } = CURVE;\n    const modP = (n) => mod(n, P);\n    const montgomeryBits = CURVE.montgomeryBits;\n    const montgomeryBytes = Math.ceil(montgomeryBits / 8);\n    const fieldLen = CURVE.nByteLength;\n    const adjustScalarBytes = CURVE.adjustScalarBytes || ((bytes) => bytes);\n    const powPminus2 = CURVE.powPminus2 || ((x) => pow(x, P - BigInt(2), P));\n    // cswap from RFC7748. But it is not from RFC7748!\n    /*\n      cswap(swap, x_2, x_3):\n           dummy = mask(swap) AND (x_2 XOR x_3)\n           x_2 = x_2 XOR dummy\n           x_3 = x_3 XOR dummy\n           Return (x_2, x_3)\n    Where mask(swap) is the all-1 or all-0 word of the same length as x_2\n     and x_3, computed, e.g., as mask(swap) = 0 - swap.\n    */\n    function cswap(swap, x_2, x_3) {\n        const dummy = modP(swap * (x_2 - x_3));\n        x_2 = modP(x_2 - dummy);\n        x_3 = modP(x_3 + dummy);\n        return [x_2, x_3];\n    }\n    // x25519 from 4\n    // The constant a24 is (486662 - 2) / 4 = 121665 for curve25519/X25519\n    const a24 = (CURVE.a - BigInt(2)) / BigInt(4);\n    /**\n     *\n     * @param pointU u coordinate (x) on Montgomery Curve 25519\n     * @param scalar by which the point would be multiplied\n     * @returns new Point on Montgomery curve\n     */\n    function montgomeryLadder(u, scalar) {\n        aInRange('u', u, _0n, P);\n        aInRange('scalar', scalar, _0n, P);\n        // Section 5: Implementations MUST accept non-canonical values and process them as\n        // if they had been reduced modulo the field prime.\n        const k = scalar;\n        const x_1 = u;\n        let x_2 = _1n;\n        let z_2 = _0n;\n        let x_3 = u;\n        let z_3 = _1n;\n        let swap = _0n;\n        let sw;\n        for (let t = BigInt(montgomeryBits - 1); t >= _0n; t--) {\n            const k_t = (k >> t) & _1n;\n            swap ^= k_t;\n            sw = cswap(swap, x_2, x_3);\n            x_2 = sw[0];\n            x_3 = sw[1];\n            sw = cswap(swap, z_2, z_3);\n            z_2 = sw[0];\n            z_3 = sw[1];\n            swap = k_t;\n            const A = x_2 + z_2;\n            const AA = modP(A * A);\n            const B = x_2 - z_2;\n            const BB = modP(B * B);\n            const E = AA - BB;\n            const C = x_3 + z_3;\n            const D = x_3 - z_3;\n            const DA = modP(D * A);\n            const CB = modP(C * B);\n            const dacb = DA + CB;\n            const da_cb = DA - CB;\n            x_3 = modP(dacb * dacb);\n            z_3 = modP(x_1 * modP(da_cb * da_cb));\n            x_2 = modP(AA * BB);\n            z_2 = modP(E * (AA + modP(a24 * E)));\n        }\n        // (x_2, x_3) = cswap(swap, x_2, x_3)\n        sw = cswap(swap, x_2, x_3);\n        x_2 = sw[0];\n        x_3 = sw[1];\n        // (z_2, z_3) = cswap(swap, z_2, z_3)\n        sw = cswap(swap, z_2, z_3);\n        z_2 = sw[0];\n        z_3 = sw[1];\n        // z_2^(p - 2)\n        const z2 = powPminus2(z_2);\n        // Return x_2 * (z_2^(p - 2))\n        return modP(x_2 * z2);\n    }\n    function encodeUCoordinate(u) {\n        return numberToBytesLE(modP(u), montgomeryBytes);\n    }\n    function decodeUCoordinate(uEnc) {\n        // Section 5: When receiving such an array, implementations of X25519\n        // MUST mask the most significant bit in the final byte.\n        const u = ensureBytes('u coordinate', uEnc, montgomeryBytes);\n        if (fieldLen === 32)\n            u[31] &= 127; // 0b0111_1111\n        return bytesToNumberLE(u);\n    }\n    function decodeScalar(n) {\n        const bytes = ensureBytes('scalar', n);\n        const len = bytes.length;\n        if (len !== montgomeryBytes && len !== fieldLen)\n            throw new Error(`Expected ${montgomeryBytes} or ${fieldLen} bytes, got ${len}`);\n        return bytesToNumberLE(adjustScalarBytes(bytes));\n    }\n    function scalarMult(scalar, u) {\n        const pointU = decodeUCoordinate(u);\n        const _scalar = decodeScalar(scalar);\n        const pu = montgomeryLadder(pointU, _scalar);\n        // The result was not contributory\n        // https://cr.yp.to/ecdh.html#validate\n        if (pu === _0n)\n            throw new Error('Invalid private or public key received');\n        return encodeUCoordinate(pu);\n    }\n    // Computes public key from private. By doing scalar multiplication of base point.\n    const GuBytes = encodeUCoordinate(CURVE.Gu);\n    function scalarMultBase(scalar) {\n        return scalarMult(scalar, GuBytes);\n    }\n    return {\n        scalarMult,\n        scalarMultBase,\n        getSharedSecret: (privateKey, publicKey) => scalarMult(privateKey, publicKey),\n        getPublicKey: (privateKey) => scalarMultBase(privateKey),\n        utils: { randomPrivateKey: () => CURVE.randomBytes(CURVE.nByteLength) },\n        GuBytes: GuBytes,\n    };\n}\n//# sourceMappingURL=montgomery.js.map","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { sha512 } from '@noble/hashes/sha512';\nimport { concatBytes, randomBytes, utf8ToBytes } from '@noble/hashes/utils';\nimport { twistedEdwards } from './abstract/edwards.js';\nimport { createHasher, expand_message_xmd } from './abstract/hash-to-curve.js';\nimport { Field, FpSqrtEven, isNegativeLE, mod, pow2 } from './abstract/modular.js';\nimport { montgomery } from './abstract/montgomery.js';\nimport { bytesToHex, bytesToNumberLE, ensureBytes, equalBytes, numberToBytesLE, } from './abstract/utils.js';\n/**\n * ed25519 Twisted Edwards curve with following addons:\n * - X25519 ECDH\n * - Ristretto cofactor elimination\n * - Elligator hash-to-group / point indistinguishability\n */\nconst ED25519_P = BigInt('57896044618658097711785492504343953926634992332820282019728792003956564819949');\n// √(-1) aka √(a) aka 2^((p-1)/4)\nconst ED25519_SQRT_M1 = /* @__PURE__ */ BigInt('19681161376707505956807079304988542015446066515923890162744021073123829784752');\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = BigInt(2), _3n = BigInt(3);\n// prettier-ignore\nconst _5n = BigInt(5), _8n = BigInt(8);\nfunction ed25519_pow_2_252_3(x) {\n    // prettier-ignore\n    const _10n = BigInt(10), _20n = BigInt(20), _40n = BigInt(40), _80n = BigInt(80);\n    const P = ED25519_P;\n    const x2 = (x * x) % P;\n    const b2 = (x2 * x) % P; // x^3, 11\n    const b4 = (pow2(b2, _2n, P) * b2) % P; // x^15, 1111\n    const b5 = (pow2(b4, _1n, P) * x) % P; // x^31\n    const b10 = (pow2(b5, _5n, P) * b5) % P;\n    const b20 = (pow2(b10, _10n, P) * b10) % P;\n    const b40 = (pow2(b20, _20n, P) * b20) % P;\n    const b80 = (pow2(b40, _40n, P) * b40) % P;\n    const b160 = (pow2(b80, _80n, P) * b80) % P;\n    const b240 = (pow2(b160, _80n, P) * b80) % P;\n    const b250 = (pow2(b240, _10n, P) * b10) % P;\n    const pow_p_5_8 = (pow2(b250, _2n, P) * x) % P;\n    // ^ To pow to (p+3)/8, multiply it by x.\n    return { pow_p_5_8, b2 };\n}\nfunction adjustScalarBytes(bytes) {\n    // Section 5: For X25519, in order to decode 32 random bytes as an integer scalar,\n    // set the three least significant bits of the first byte\n    bytes[0] &= 248; // 0b1111_1000\n    // and the most significant bit of the last to zero,\n    bytes[31] &= 127; // 0b0111_1111\n    // set the second most significant bit of the last byte to 1\n    bytes[31] |= 64; // 0b0100_0000\n    return bytes;\n}\n// sqrt(u/v)\nfunction uvRatio(u, v) {\n    const P = ED25519_P;\n    const v3 = mod(v * v * v, P); // v³\n    const v7 = mod(v3 * v3 * v, P); // v⁷\n    // (p+3)/8 and (p-5)/8\n    const pow = ed25519_pow_2_252_3(u * v7).pow_p_5_8;\n    let x = mod(u * v3 * pow, P); // (uv³)(uv⁷)^(p-5)/8\n    const vx2 = mod(v * x * x, P); // vx²\n    const root1 = x; // First root candidate\n    const root2 = mod(x * ED25519_SQRT_M1, P); // Second root candidate\n    const useRoot1 = vx2 === u; // If vx² = u (mod p), x is a square root\n    const useRoot2 = vx2 === mod(-u, P); // If vx² = -u, set x <-- x * 2^((p-1)/4)\n    const noRoot = vx2 === mod(-u * ED25519_SQRT_M1, P); // There is no valid root, vx² = -u√(-1)\n    if (useRoot1)\n        x = root1;\n    if (useRoot2 || noRoot)\n        x = root2; // We return root2 anyway, for const-time\n    if (isNegativeLE(x, P))\n        x = mod(-x, P);\n    return { isValid: useRoot1 || useRoot2, value: x };\n}\n// Just in case\nexport const ED25519_TORSION_SUBGROUP = [\n    '0100000000000000000000000000000000000000000000000000000000000000',\n    'c7176a703d4dd84fba3c0b760d10670f2a2053fa2c39ccc64ec7fd7792ac037a',\n    '0000000000000000000000000000000000000000000000000000000000000080',\n    '26e8958fc2b227b045c3f489f2ef98f0d5dfac05d3c63339b13802886d53fc05',\n    'ecffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7f',\n    '26e8958fc2b227b045c3f489f2ef98f0d5dfac05d3c63339b13802886d53fc85',\n    '0000000000000000000000000000000000000000000000000000000000000000',\n    'c7176a703d4dd84fba3c0b760d10670f2a2053fa2c39ccc64ec7fd7792ac03fa',\n];\nconst Fp = /* @__PURE__ */ (() => Field(ED25519_P, undefined, true))();\nconst ed25519Defaults = /* @__PURE__ */ (() => ({\n    // Param: a\n    a: BigInt(-1), // Fp.create(-1) is proper; our way still works and is faster\n    // d is equal to -121665/121666 over finite field.\n    // Negative number is P - number, and division is invert(number, P)\n    d: BigInt('37095705934669439343138083508754565189542113879843219016388785533085940283555'),\n    // Finite field 𝔽p over which we'll do calculations; 2n**255n - 19n\n    Fp,\n    // Subgroup order: how many points curve has\n    // 2n**252n + 27742317777372353535851937790883648493n;\n    n: BigInt('7237005577332262213973186563042994240857116359379907606001950938285454250989'),\n    // Cofactor\n    h: _8n,\n    // Base point (x, y) aka generator point\n    Gx: BigInt('15112221349535400772501151409588531511454012693041857206046113283949847762202'),\n    Gy: BigInt('46316835694926478169428394003475163141307993866256225615783033603165251855960'),\n    hash: sha512,\n    randomBytes,\n    adjustScalarBytes,\n    // dom2\n    // Ratio of u to v. Allows us to combine inversion and square root. Uses algo from RFC8032 5.1.3.\n    // Constant-time, u/√v\n    uvRatio,\n}))();\n/**\n * ed25519 curve with EdDSA signatures.\n */\nexport const ed25519 = /* @__PURE__ */ (() => twistedEdwards(ed25519Defaults))();\nfunction ed25519_domain(data, ctx, phflag) {\n    if (ctx.length > 255)\n        throw new Error('Context is too big');\n    return concatBytes(utf8ToBytes('SigEd25519 no Ed25519 collisions'), new Uint8Array([phflag ? 1 : 0, ctx.length]), ctx, data);\n}\nexport const ed25519ctx = /* @__PURE__ */ (() => twistedEdwards({\n    ...ed25519Defaults,\n    domain: ed25519_domain,\n}))();\nexport const ed25519ph = /* @__PURE__ */ (() => twistedEdwards(Object.assign({}, ed25519Defaults, {\n    domain: ed25519_domain,\n    prehash: sha512,\n})))();\nexport const x25519 = /* @__PURE__ */ (() => montgomery({\n    P: ED25519_P,\n    a: BigInt(486662),\n    montgomeryBits: 255, // n is 253 bits\n    nByteLength: 32,\n    Gu: BigInt(9),\n    powPminus2: (x) => {\n        const P = ED25519_P;\n        // x^(p-2) aka x^(2^255-21)\n        const { pow_p_5_8, b2 } = ed25519_pow_2_252_3(x);\n        return mod(pow2(pow_p_5_8, _3n, P) * b2, P);\n    },\n    adjustScalarBytes,\n    randomBytes,\n}))();\n/**\n * Converts ed25519 public key to x25519 public key. Uses formula:\n * * `(u, v) = ((1+y)/(1-y), sqrt(-486664)*u/x)`\n * * `(x, y) = (sqrt(-486664)*u/v, (u-1)/(u+1))`\n * @example\n *   const someonesPub = ed25519.getPublicKey(ed25519.utils.randomPrivateKey());\n *   const aPriv = x25519.utils.randomPrivateKey();\n *   x25519.getSharedSecret(aPriv, edwardsToMontgomeryPub(someonesPub))\n */\nexport function edwardsToMontgomeryPub(edwardsPub) {\n    const { y } = ed25519.ExtendedPoint.fromHex(edwardsPub);\n    const _1n = BigInt(1);\n    return Fp.toBytes(Fp.create((_1n + y) * Fp.inv(_1n - y)));\n}\nexport const edwardsToMontgomery = edwardsToMontgomeryPub; // deprecated\n/**\n * Converts ed25519 secret key to x25519 secret key.\n * @example\n *   const someonesPub = x25519.getPublicKey(x25519.utils.randomPrivateKey());\n *   const aPriv = ed25519.utils.randomPrivateKey();\n *   x25519.getSharedSecret(edwardsToMontgomeryPriv(aPriv), someonesPub)\n */\nexport function edwardsToMontgomeryPriv(edwardsPriv) {\n    const hashed = ed25519Defaults.hash(edwardsPriv.subarray(0, 32));\n    return ed25519Defaults.adjustScalarBytes(hashed).subarray(0, 32);\n}\n// Hash To Curve Elligator2 Map (NOTE: different from ristretto255 elligator)\n// NOTE: very important part is usage of FpSqrtEven for ELL2_C1_EDWARDS, since\n// SageMath returns different root first and everything falls apart\nconst ELL2_C1 = /* @__PURE__ */ (() => (Fp.ORDER + _3n) / _8n)(); // 1. c1 = (q + 3) / 8       # Integer arithmetic\nconst ELL2_C2 = /* @__PURE__ */ (() => Fp.pow(_2n, ELL2_C1))(); // 2. c2 = 2^c1\nconst ELL2_C3 = /* @__PURE__ */ (() => Fp.sqrt(Fp.neg(Fp.ONE)))(); // 3. c3 = sqrt(-1)\n// prettier-ignore\nfunction map_to_curve_elligator2_curve25519(u) {\n    const ELL2_C4 = (Fp.ORDER - _5n) / _8n; // 4. c4 = (q - 5) / 8       # Integer arithmetic\n    const ELL2_J = BigInt(486662);\n    let tv1 = Fp.sqr(u); //  1.  tv1 = u^2\n    tv1 = Fp.mul(tv1, _2n); //  2.  tv1 = 2 * tv1\n    let xd = Fp.add(tv1, Fp.ONE); //  3.   xd = tv1 + 1         # Nonzero: -1 is square (mod p), tv1 is not\n    let x1n = Fp.neg(ELL2_J); //  4.  x1n = -J              # x1 = x1n / xd = -J / (1 + 2 * u^2)\n    let tv2 = Fp.sqr(xd); //  5.  tv2 = xd^2\n    let gxd = Fp.mul(tv2, xd); //  6.  gxd = tv2 * xd        # gxd = xd^3\n    let gx1 = Fp.mul(tv1, ELL2_J); //  7.  gx1 = J * tv1         # x1n + J * xd\n    gx1 = Fp.mul(gx1, x1n); //  8.  gx1 = gx1 * x1n       # x1n^2 + J * x1n * xd\n    gx1 = Fp.add(gx1, tv2); //  9.  gx1 = gx1 + tv2       # x1n^2 + J * x1n * xd + xd^2\n    gx1 = Fp.mul(gx1, x1n); //  10. gx1 = gx1 * x1n       # x1n^3 + J * x1n^2 * xd + x1n * xd^2\n    let tv3 = Fp.sqr(gxd); //  11. tv3 = gxd^2\n    tv2 = Fp.sqr(tv3); //  12. tv2 = tv3^2           # gxd^4\n    tv3 = Fp.mul(tv3, gxd); //  13. tv3 = tv3 * gxd       # gxd^3\n    tv3 = Fp.mul(tv3, gx1); //  14. tv3 = tv3 * gx1       # gx1 * gxd^3\n    tv2 = Fp.mul(tv2, tv3); //  15. tv2 = tv2 * tv3       # gx1 * gxd^7\n    let y11 = Fp.pow(tv2, ELL2_C4); //  16. y11 = tv2^c4        # (gx1 * gxd^7)^((p - 5) / 8)\n    y11 = Fp.mul(y11, tv3); //  17. y11 = y11 * tv3       # gx1*gxd^3*(gx1*gxd^7)^((p-5)/8)\n    let y12 = Fp.mul(y11, ELL2_C3); //  18. y12 = y11 * c3\n    tv2 = Fp.sqr(y11); //  19. tv2 = y11^2\n    tv2 = Fp.mul(tv2, gxd); //  20. tv2 = tv2 * gxd\n    let e1 = Fp.eql(tv2, gx1); //  21.  e1 = tv2 == gx1\n    let y1 = Fp.cmov(y12, y11, e1); //  22.  y1 = CMOV(y12, y11, e1)  # If g(x1) is square, this is its sqrt\n    let x2n = Fp.mul(x1n, tv1); //  23. x2n = x1n * tv1       # x2 = x2n / xd = 2 * u^2 * x1n / xd\n    let y21 = Fp.mul(y11, u); //  24. y21 = y11 * u\n    y21 = Fp.mul(y21, ELL2_C2); //  25. y21 = y21 * c2\n    let y22 = Fp.mul(y21, ELL2_C3); //  26. y22 = y21 * c3\n    let gx2 = Fp.mul(gx1, tv1); //  27. gx2 = gx1 * tv1       # g(x2) = gx2 / gxd = 2 * u^2 * g(x1)\n    tv2 = Fp.sqr(y21); //  28. tv2 = y21^2\n    tv2 = Fp.mul(tv2, gxd); //  29. tv2 = tv2 * gxd\n    let e2 = Fp.eql(tv2, gx2); //  30.  e2 = tv2 == gx2\n    let y2 = Fp.cmov(y22, y21, e2); //  31.  y2 = CMOV(y22, y21, e2)  # If g(x2) is square, this is its sqrt\n    tv2 = Fp.sqr(y1); //  32. tv2 = y1^2\n    tv2 = Fp.mul(tv2, gxd); //  33. tv2 = tv2 * gxd\n    let e3 = Fp.eql(tv2, gx1); //  34.  e3 = tv2 == gx1\n    let xn = Fp.cmov(x2n, x1n, e3); //  35.  xn = CMOV(x2n, x1n, e3)  # If e3, x = x1, else x = x2\n    let y = Fp.cmov(y2, y1, e3); //  36.   y = CMOV(y2, y1, e3)    # If e3, y = y1, else y = y2\n    let e4 = Fp.isOdd(y); //  37.  e4 = sgn0(y) == 1        # Fix sign of y\n    y = Fp.cmov(y, Fp.neg(y), e3 !== e4); //  38.   y = CMOV(y, -y, e3 XOR e4)\n    return { xMn: xn, xMd: xd, yMn: y, yMd: _1n }; //  39. return (xn, xd, y, 1)\n}\nconst ELL2_C1_EDWARDS = /* @__PURE__ */ (() => FpSqrtEven(Fp, Fp.neg(BigInt(486664))))(); // sgn0(c1) MUST equal 0\nfunction map_to_curve_elligator2_edwards25519(u) {\n    const { xMn, xMd, yMn, yMd } = map_to_curve_elligator2_curve25519(u); //  1.  (xMn, xMd, yMn, yMd) =\n    // map_to_curve_elligator2_curve25519(u)\n    let xn = Fp.mul(xMn, yMd); //  2.  xn = xMn * yMd\n    xn = Fp.mul(xn, ELL2_C1_EDWARDS); //  3.  xn = xn * c1\n    let xd = Fp.mul(xMd, yMn); //  4.  xd = xMd * yMn    # xn / xd = c1 * xM / yM\n    let yn = Fp.sub(xMn, xMd); //  5.  yn = xMn - xMd\n    let yd = Fp.add(xMn, xMd); //  6.  yd = xMn + xMd    # (n / d - 1) / (n / d + 1) = (n - d) / (n + d)\n    let tv1 = Fp.mul(xd, yd); //  7. tv1 = xd * yd\n    let e = Fp.eql(tv1, Fp.ZERO); //  8.   e = tv1 == 0\n    xn = Fp.cmov(xn, Fp.ZERO, e); //  9.  xn = CMOV(xn, 0, e)\n    xd = Fp.cmov(xd, Fp.ONE, e); //  10. xd = CMOV(xd, 1, e)\n    yn = Fp.cmov(yn, Fp.ONE, e); //  11. yn = CMOV(yn, 1, e)\n    yd = Fp.cmov(yd, Fp.ONE, e); //  12. yd = CMOV(yd, 1, e)\n    const inv = Fp.invertBatch([xd, yd]); // batch division\n    return { x: Fp.mul(xn, inv[0]), y: Fp.mul(yn, inv[1]) }; //  13. return (xn, xd, yn, yd)\n}\nconst htf = /* @__PURE__ */ (() => createHasher(ed25519.ExtendedPoint, (scalars) => map_to_curve_elligator2_edwards25519(scalars[0]), {\n    DST: 'edwards25519_XMD:SHA-512_ELL2_RO_',\n    encodeDST: 'edwards25519_XMD:SHA-512_ELL2_NU_',\n    p: Fp.ORDER,\n    m: 1,\n    k: 128,\n    expand: 'xmd',\n    hash: sha512,\n}))();\nexport const hashToCurve = /* @__PURE__ */ (() => htf.hashToCurve)();\nexport const encodeToCurve = /* @__PURE__ */ (() => htf.encodeToCurve)();\nfunction assertRstPoint(other) {\n    if (!(other instanceof RistPoint))\n        throw new Error('RistrettoPoint expected');\n}\n// √(-1) aka √(a) aka 2^((p-1)/4)\nconst SQRT_M1 = ED25519_SQRT_M1;\n// √(ad - 1)\nconst SQRT_AD_MINUS_ONE = /* @__PURE__ */ BigInt('25063068953384623474111414158702152701244531502492656460079210482610430750235');\n// 1 / √(a-d)\nconst INVSQRT_A_MINUS_D = /* @__PURE__ */ BigInt('54469307008909316920995813868745141605393597292927456921205312896311721017578');\n// 1-d²\nconst ONE_MINUS_D_SQ = /* @__PURE__ */ BigInt('1159843021668779879193775521855586647937357759715417654439879720876111806838');\n// (d-1)²\nconst D_MINUS_ONE_SQ = /* @__PURE__ */ BigInt('40440834346308536858101042469323190826248399146238708352240133220865137265952');\n// Calculates 1/√(number)\nconst invertSqrt = (number) => uvRatio(_1n, number);\nconst MAX_255B = /* @__PURE__ */ BigInt('0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff');\nconst bytes255ToNumberLE = (bytes) => ed25519.CURVE.Fp.create(bytesToNumberLE(bytes) & MAX_255B);\n// Computes Elligator map for Ristretto\n// https://ristretto.group/formulas/elligator.html\nfunction calcElligatorRistrettoMap(r0) {\n    const { d } = ed25519.CURVE;\n    const P = ed25519.CURVE.Fp.ORDER;\n    const mod = ed25519.CURVE.Fp.create;\n    const r = mod(SQRT_M1 * r0 * r0); // 1\n    const Ns = mod((r + _1n) * ONE_MINUS_D_SQ); // 2\n    let c = BigInt(-1); // 3\n    const D = mod((c - d * r) * mod(r + d)); // 4\n    let { isValid: Ns_D_is_sq, value: s } = uvRatio(Ns, D); // 5\n    let s_ = mod(s * r0); // 6\n    if (!isNegativeLE(s_, P))\n        s_ = mod(-s_);\n    if (!Ns_D_is_sq)\n        s = s_; // 7\n    if (!Ns_D_is_sq)\n        c = r; // 8\n    const Nt = mod(c * (r - _1n) * D_MINUS_ONE_SQ - D); // 9\n    const s2 = s * s;\n    const W0 = mod((s + s) * D); // 10\n    const W1 = mod(Nt * SQRT_AD_MINUS_ONE); // 11\n    const W2 = mod(_1n - s2); // 12\n    const W3 = mod(_1n + s2); // 13\n    return new ed25519.ExtendedPoint(mod(W0 * W3), mod(W2 * W1), mod(W1 * W3), mod(W0 * W2));\n}\n/**\n * Each ed25519/ExtendedPoint has 8 different equivalent points. This can be\n * a source of bugs for protocols like ring signatures. Ristretto was created to solve this.\n * Ristretto point operates in X:Y:Z:T extended coordinates like ExtendedPoint,\n * but it should work in its own namespace: do not combine those two.\n * https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-ristretto255-decaf448\n */\nclass RistPoint {\n    // Private property to discourage combining ExtendedPoint + RistrettoPoint\n    // Always use Ristretto encoding/decoding instead.\n    constructor(ep) {\n        this.ep = ep;\n    }\n    static fromAffine(ap) {\n        return new RistPoint(ed25519.ExtendedPoint.fromAffine(ap));\n    }\n    /**\n     * Takes uniform output of 64-byte hash function like sha512 and converts it to `RistrettoPoint`.\n     * The hash-to-group operation applies Elligator twice and adds the results.\n     * **Note:** this is one-way map, there is no conversion from point to hash.\n     * https://ristretto.group/formulas/elligator.html\n     * @param hex 64-byte output of a hash function\n     */\n    static hashToCurve(hex) {\n        hex = ensureBytes('ristrettoHash', hex, 64);\n        const r1 = bytes255ToNumberLE(hex.slice(0, 32));\n        const R1 = calcElligatorRistrettoMap(r1);\n        const r2 = bytes255ToNumberLE(hex.slice(32, 64));\n        const R2 = calcElligatorRistrettoMap(r2);\n        return new RistPoint(R1.add(R2));\n    }\n    /**\n     * Converts ristretto-encoded string to ristretto point.\n     * https://ristretto.group/formulas/decoding.html\n     * @param hex Ristretto-encoded 32 bytes. Not every 32-byte string is valid ristretto encoding\n     */\n    static fromHex(hex) {\n        hex = ensureBytes('ristrettoHex', hex, 32);\n        const { a, d } = ed25519.CURVE;\n        const P = ed25519.CURVE.Fp.ORDER;\n        const mod = ed25519.CURVE.Fp.create;\n        const emsg = 'RistrettoPoint.fromHex: the hex is not valid encoding of RistrettoPoint';\n        const s = bytes255ToNumberLE(hex);\n        // 1. Check that s_bytes is the canonical encoding of a field element, or else abort.\n        // 3. Check that s is non-negative, or else abort\n        if (!equalBytes(numberToBytesLE(s, 32), hex) || isNegativeLE(s, P))\n            throw new Error(emsg);\n        const s2 = mod(s * s);\n        const u1 = mod(_1n + a * s2); // 4 (a is -1)\n        const u2 = mod(_1n - a * s2); // 5\n        const u1_2 = mod(u1 * u1);\n        const u2_2 = mod(u2 * u2);\n        const v = mod(a * d * u1_2 - u2_2); // 6\n        const { isValid, value: I } = invertSqrt(mod(v * u2_2)); // 7\n        const Dx = mod(I * u2); // 8\n        const Dy = mod(I * Dx * v); // 9\n        let x = mod((s + s) * Dx); // 10\n        if (isNegativeLE(x, P))\n            x = mod(-x); // 10\n        const y = mod(u1 * Dy); // 11\n        const t = mod(x * y); // 12\n        if (!isValid || isNegativeLE(t, P) || y === _0n)\n            throw new Error(emsg);\n        return new RistPoint(new ed25519.ExtendedPoint(x, y, _1n, t));\n    }\n    /**\n     * Encodes ristretto point to Uint8Array.\n     * https://ristretto.group/formulas/encoding.html\n     */\n    toRawBytes() {\n        let { ex: x, ey: y, ez: z, et: t } = this.ep;\n        const P = ed25519.CURVE.Fp.ORDER;\n        const mod = ed25519.CURVE.Fp.create;\n        const u1 = mod(mod(z + y) * mod(z - y)); // 1\n        const u2 = mod(x * y); // 2\n        // Square root always exists\n        const u2sq = mod(u2 * u2);\n        const { value: invsqrt } = invertSqrt(mod(u1 * u2sq)); // 3\n        const D1 = mod(invsqrt * u1); // 4\n        const D2 = mod(invsqrt * u2); // 5\n        const zInv = mod(D1 * D2 * t); // 6\n        let D; // 7\n        if (isNegativeLE(t * zInv, P)) {\n            let _x = mod(y * SQRT_M1);\n            let _y = mod(x * SQRT_M1);\n            x = _x;\n            y = _y;\n            D = mod(D1 * INVSQRT_A_MINUS_D);\n        }\n        else {\n            D = D2; // 8\n        }\n        if (isNegativeLE(x * zInv, P))\n            y = mod(-y); // 9\n        let s = mod((z - y) * D); // 10 (check footer's note, no sqrt(-a))\n        if (isNegativeLE(s, P))\n            s = mod(-s);\n        return numberToBytesLE(s, 32); // 11\n    }\n    toHex() {\n        return bytesToHex(this.toRawBytes());\n    }\n    toString() {\n        return this.toHex();\n    }\n    // Compare one point to another.\n    equals(other) {\n        assertRstPoint(other);\n        const { ex: X1, ey: Y1 } = this.ep;\n        const { ex: X2, ey: Y2 } = other.ep;\n        const mod = ed25519.CURVE.Fp.create;\n        // (x1 * y2 == y1 * x2) | (y1 * y2 == x1 * x2)\n        const one = mod(X1 * Y2) === mod(Y1 * X2);\n        const two = mod(Y1 * Y2) === mod(X1 * X2);\n        return one || two;\n    }\n    add(other) {\n        assertRstPoint(other);\n        return new RistPoint(this.ep.add(other.ep));\n    }\n    subtract(other) {\n        assertRstPoint(other);\n        return new RistPoint(this.ep.subtract(other.ep));\n    }\n    multiply(scalar) {\n        return new RistPoint(this.ep.multiply(scalar));\n    }\n    multiplyUnsafe(scalar) {\n        return new RistPoint(this.ep.multiplyUnsafe(scalar));\n    }\n    double() {\n        return new RistPoint(this.ep.double());\n    }\n    negate() {\n        return new RistPoint(this.ep.negate());\n    }\n}\nexport const RistrettoPoint = /* @__PURE__ */ (() => {\n    if (!RistPoint.BASE)\n        RistPoint.BASE = new RistPoint(ed25519.ExtendedPoint.BASE);\n    if (!RistPoint.ZERO)\n        RistPoint.ZERO = new RistPoint(ed25519.ExtendedPoint.ZERO);\n    return RistPoint;\n})();\n// Hashing to ristretto255. https://www.rfc-editor.org/rfc/rfc9380#appendix-B\nexport const hashToRistretto255 = (msg, options) => {\n    const d = options.DST;\n    const DST = typeof d === 'string' ? utf8ToBytes(d) : d;\n    const uniform_bytes = expand_message_xmd(msg, DST, 64, sha512);\n    const P = RistPoint.hashToCurve(uniform_bytes);\n    return P;\n};\nexport const hash_to_ristretto255 = hashToRistretto255; // legacy\n//# sourceMappingURL=ed25519.js.map","import { ed25519 as ed } from '@noble/curves/ed25519';\nconst PUBLIC_KEY_BYTE_LENGTH = 32;\nconst PRIVATE_KEY_BYTE_LENGTH = 64; // private key is actually 32 bytes but for historical reasons we concat private and public keys\nconst KEYS_BYTE_LENGTH = 32;\nexport { PUBLIC_KEY_BYTE_LENGTH as publicKeyLength };\nexport { PRIVATE_KEY_BYTE_LENGTH as privateKeyLength };\nexport function generateKey() {\n    // the actual private key (32 bytes)\n    const privateKeyRaw = ed.utils.randomPrivateKey();\n    const publicKey = ed.getPublicKey(privateKeyRaw);\n    // concatenated the public key to the private key\n    const privateKey = concatKeys(privateKeyRaw, publicKey);\n    return {\n        privateKey,\n        publicKey\n    };\n}\n/**\n * Generate keypair from a 32 byte uint8array\n */\nexport function generateKeyFromSeed(seed) {\n    if (seed.length !== KEYS_BYTE_LENGTH) {\n        throw new TypeError('\"seed\" must be 32 bytes in length.');\n    }\n    else if (!(seed instanceof Uint8Array)) {\n        throw new TypeError('\"seed\" must be a node.js Buffer, or Uint8Array.');\n    }\n    // based on node forges algorithm, the seed is used directly as private key\n    const privateKeyRaw = seed;\n    const publicKey = ed.getPublicKey(privateKeyRaw);\n    const privateKey = concatKeys(privateKeyRaw, publicKey);\n    return {\n        privateKey,\n        publicKey\n    };\n}\nexport function hashAndSign(privateKey, msg) {\n    const privateKeyRaw = privateKey.subarray(0, KEYS_BYTE_LENGTH);\n    return ed.sign(msg instanceof Uint8Array ? msg : msg.subarray(), privateKeyRaw);\n}\nexport function hashAndVerify(publicKey, sig, msg) {\n    return ed.verify(sig, msg instanceof Uint8Array ? msg : msg.subarray(), publicKey);\n}\nfunction concatKeys(privateKeyRaw, publicKey) {\n    const privateKey = new Uint8Array(PRIVATE_KEY_BYTE_LENGTH);\n    for (let i = 0; i < KEYS_BYTE_LENGTH; i++) {\n        privateKey[i] = privateKeyRaw[i];\n        privateKey[KEYS_BYTE_LENGTH + i] = publicKey[i];\n    }\n    return privateKey;\n}\n//# sourceMappingURL=ed25519-browser.js.map","/* eslint-env browser */\n// Check native crypto exists and is enabled (In insecure context `self.crypto`\n// exists but `self.crypto.subtle` does not).\nexport default {\n    get(win = globalThis) {\n        const nativeCrypto = win.crypto;\n        if (nativeCrypto?.subtle == null) {\n            throw Object.assign(new Error('Missing Web Crypto API. ' +\n                'The most likely cause of this error is that this page is being accessed ' +\n                'from an insecure context (i.e. not HTTPS). For more information and ' +\n                'possible resolutions see ' +\n                'https://github.com/libp2p/js-libp2p/blob/main/packages/crypto/README.md#web-crypto-api'), { code: 'ERR_MISSING_WEB_CRYPTO' });\n        }\n        return nativeCrypto;\n    }\n};\n//# sourceMappingURL=webcrypto-browser.js.map","import { concat } from 'uint8arrays/concat';\nimport { fromString } from 'uint8arrays/from-string';\nimport webcrypto from '../webcrypto.js';\n// WebKit on Linux does not support deriving a key from an empty PBKDF2 key.\n// So, as a workaround, we provide the generated key as a constant. We test that\n// this generated key is accurate in test/workaround.spec.ts\n// Generated via:\n// await crypto.subtle.exportKey('jwk',\n//   await crypto.subtle.deriveKey(\n//     { name: 'PBKDF2', salt: new Uint8Array(16), iterations: 32767, hash: { name: 'SHA-256' } },\n//     await crypto.subtle.importKey('raw', new Uint8Array(0), { name: 'PBKDF2' }, false, ['deriveKey']),\n//     { name: 'AES-GCM', length: 128 }, true, ['encrypt', 'decrypt'])\n// )\nexport const derivedEmptyPasswordKey = { alg: 'A128GCM', ext: true, k: 'scm9jmO_4BJAgdwWGVulLg', key_ops: ['encrypt', 'decrypt'], kty: 'oct' };\n// Based off of code from https://github.com/luke-park/SecureCompatibleEncryptionExamples\nexport function create(opts) {\n    const algorithm = opts?.algorithm ?? 'AES-GCM';\n    let keyLength = opts?.keyLength ?? 16;\n    const nonceLength = opts?.nonceLength ?? 12;\n    const digest = opts?.digest ?? 'SHA-256';\n    const saltLength = opts?.saltLength ?? 16;\n    const iterations = opts?.iterations ?? 32767;\n    const crypto = webcrypto.get();\n    keyLength *= 8; // Browser crypto uses bits instead of bytes\n    /**\n     * Uses the provided password to derive a pbkdf2 key. The key\n     * will then be used to encrypt the data.\n     */\n    async function encrypt(data, password) {\n        const salt = crypto.getRandomValues(new Uint8Array(saltLength));\n        const nonce = crypto.getRandomValues(new Uint8Array(nonceLength));\n        const aesGcm = { name: algorithm, iv: nonce };\n        if (typeof password === 'string') {\n            password = fromString(password);\n        }\n        let cryptoKey;\n        if (password.length === 0) {\n            cryptoKey = await crypto.subtle.importKey('jwk', derivedEmptyPasswordKey, { name: 'AES-GCM' }, true, ['encrypt']);\n            try {\n                const deriveParams = { name: 'PBKDF2', salt, iterations, hash: { name: digest } };\n                const runtimeDerivedEmptyPassword = await crypto.subtle.importKey('raw', password, { name: 'PBKDF2' }, false, ['deriveKey']);\n                cryptoKey = await crypto.subtle.deriveKey(deriveParams, runtimeDerivedEmptyPassword, { name: algorithm, length: keyLength }, true, ['encrypt']);\n            }\n            catch {\n                cryptoKey = await crypto.subtle.importKey('jwk', derivedEmptyPasswordKey, { name: 'AES-GCM' }, true, ['encrypt']);\n            }\n        }\n        else {\n            // Derive a key using PBKDF2.\n            const deriveParams = { name: 'PBKDF2', salt, iterations, hash: { name: digest } };\n            const rawKey = await crypto.subtle.importKey('raw', password, { name: 'PBKDF2' }, false, ['deriveKey']);\n            cryptoKey = await crypto.subtle.deriveKey(deriveParams, rawKey, { name: algorithm, length: keyLength }, true, ['encrypt']);\n        }\n        // Encrypt the string.\n        const ciphertext = await crypto.subtle.encrypt(aesGcm, cryptoKey, data);\n        return concat([salt, aesGcm.iv, new Uint8Array(ciphertext)]);\n    }\n    /**\n     * Uses the provided password to derive a pbkdf2 key. The key\n     * will then be used to decrypt the data. The options used to create\n     * this decryption cipher must be the same as those used to create\n     * the encryption cipher.\n     */\n    async function decrypt(data, password) {\n        const salt = data.subarray(0, saltLength);\n        const nonce = data.subarray(saltLength, saltLength + nonceLength);\n        const ciphertext = data.subarray(saltLength + nonceLength);\n        const aesGcm = { name: algorithm, iv: nonce };\n        if (typeof password === 'string') {\n            password = fromString(password);\n        }\n        let cryptoKey;\n        if (password.length === 0) {\n            try {\n                const deriveParams = { name: 'PBKDF2', salt, iterations, hash: { name: digest } };\n                const runtimeDerivedEmptyPassword = await crypto.subtle.importKey('raw', password, { name: 'PBKDF2' }, false, ['deriveKey']);\n                cryptoKey = await crypto.subtle.deriveKey(deriveParams, runtimeDerivedEmptyPassword, { name: algorithm, length: keyLength }, true, ['decrypt']);\n            }\n            catch {\n                cryptoKey = await crypto.subtle.importKey('jwk', derivedEmptyPasswordKey, { name: 'AES-GCM' }, true, ['decrypt']);\n            }\n        }\n        else {\n            // Derive the key using PBKDF2.\n            const deriveParams = { name: 'PBKDF2', salt, iterations, hash: { name: digest } };\n            const rawKey = await crypto.subtle.importKey('raw', password, { name: 'PBKDF2' }, false, ['deriveKey']);\n            cryptoKey = await crypto.subtle.deriveKey(deriveParams, rawKey, { name: algorithm, length: keyLength }, true, ['decrypt']);\n        }\n        // Decrypt the string.\n        const plaintext = await crypto.subtle.decrypt(aesGcm, cryptoKey, ciphertext);\n        return new Uint8Array(plaintext);\n    }\n    const cipher = {\n        encrypt,\n        decrypt\n    };\n    return cipher;\n}\n//# sourceMappingURL=aes-gcm.browser.js.map","import { base64 } from 'multiformats/bases/base64';\nimport * as ciphers from '../ciphers/aes-gcm.js';\n/**\n * Exports the given PrivateKey as a base64 encoded string.\n * The PrivateKey is encrypted via a password derived PBKDF2 key\n * leveraging the aes-gcm cipher algorithm.\n */\nexport async function exporter(privateKey, password) {\n    const cipher = ciphers.create();\n    const encryptedKey = await cipher.encrypt(privateKey, password);\n    return base64.encode(encryptedKey);\n}\n//# sourceMappingURL=exporter.js.map","/* eslint-disable import/export */\n/* eslint-disable complexity */\n/* eslint-disable @typescript-eslint/no-namespace */\n/* eslint-disable @typescript-eslint/no-unnecessary-boolean-literal-compare */\n/* eslint-disable @typescript-eslint/no-empty-interface */\nimport { enumeration, encodeMessage, decodeMessage, message } from 'protons-runtime';\nexport var KeyType;\n(function (KeyType) {\n    KeyType[\"RSA\"] = \"RSA\";\n    KeyType[\"Ed25519\"] = \"Ed25519\";\n    KeyType[\"Secp256k1\"] = \"Secp256k1\";\n})(KeyType || (KeyType = {}));\nvar __KeyTypeValues;\n(function (__KeyTypeValues) {\n    __KeyTypeValues[__KeyTypeValues[\"RSA\"] = 0] = \"RSA\";\n    __KeyTypeValues[__KeyTypeValues[\"Ed25519\"] = 1] = \"Ed25519\";\n    __KeyTypeValues[__KeyTypeValues[\"Secp256k1\"] = 2] = \"Secp256k1\";\n})(__KeyTypeValues || (__KeyTypeValues = {}));\n(function (KeyType) {\n    KeyType.codec = () => {\n        return enumeration(__KeyTypeValues);\n    };\n})(KeyType || (KeyType = {}));\nexport var PublicKey;\n(function (PublicKey) {\n    let _codec;\n    PublicKey.codec = () => {\n        if (_codec == null) {\n            _codec = message((obj, w, opts = {}) => {\n                if (opts.lengthDelimited !== false) {\n                    w.fork();\n                }\n                if (obj.Type != null) {\n                    w.uint32(8);\n                    KeyType.codec().encode(obj.Type, w);\n                }\n                if (obj.Data != null) {\n                    w.uint32(18);\n                    w.bytes(obj.Data);\n                }\n                if (opts.lengthDelimited !== false) {\n                    w.ldelim();\n                }\n            }, (reader, length) => {\n                const obj = {};\n                const end = length == null ? reader.len : reader.pos + length;\n                while (reader.pos < end) {\n                    const tag = reader.uint32();\n                    switch (tag >>> 3) {\n                        case 1:\n                            obj.Type = KeyType.codec().decode(reader);\n                            break;\n                        case 2:\n                            obj.Data = reader.bytes();\n                            break;\n                        default:\n                            reader.skipType(tag & 7);\n                            break;\n                    }\n                }\n                return obj;\n            });\n        }\n        return _codec;\n    };\n    PublicKey.encode = (obj) => {\n        return encodeMessage(obj, PublicKey.codec());\n    };\n    PublicKey.decode = (buf) => {\n        return decodeMessage(buf, PublicKey.codec());\n    };\n})(PublicKey || (PublicKey = {}));\nexport var PrivateKey;\n(function (PrivateKey) {\n    let _codec;\n    PrivateKey.codec = () => {\n        if (_codec == null) {\n            _codec = message((obj, w, opts = {}) => {\n                if (opts.lengthDelimited !== false) {\n                    w.fork();\n                }\n                if (obj.Type != null) {\n                    w.uint32(8);\n                    KeyType.codec().encode(obj.Type, w);\n                }\n                if (obj.Data != null) {\n                    w.uint32(18);\n                    w.bytes(obj.Data);\n                }\n                if (opts.lengthDelimited !== false) {\n                    w.ldelim();\n                }\n            }, (reader, length) => {\n                const obj = {};\n                const end = length == null ? reader.len : reader.pos + length;\n                while (reader.pos < end) {\n                    const tag = reader.uint32();\n                    switch (tag >>> 3) {\n                        case 1:\n                            obj.Type = KeyType.codec().decode(reader);\n                            break;\n                        case 2:\n                            obj.Data = reader.bytes();\n                            break;\n                        default:\n                            reader.skipType(tag & 7);\n                            break;\n                    }\n                }\n                return obj;\n            });\n        }\n        return _codec;\n    };\n    PrivateKey.encode = (obj) => {\n        return encodeMessage(obj, PrivateKey.codec());\n    };\n    PrivateKey.decode = (buf) => {\n        return decodeMessage(buf, PrivateKey.codec());\n    };\n})(PrivateKey || (PrivateKey = {}));\n//# sourceMappingURL=keys.js.map","import { CodeError } from '@libp2p/interface';\nimport { base58btc } from 'multiformats/bases/base58';\nimport { identity } from 'multiformats/hashes/identity';\nimport { sha256 } from 'multiformats/hashes/sha2';\nimport { equals as uint8ArrayEquals } from 'uint8arrays/equals';\nimport { isPromise } from '../util.js';\nimport * as crypto from './ed25519.js';\nimport { exporter } from './exporter.js';\nimport * as pbm from './keys.js';\nexport class Ed25519PublicKey {\n    _key;\n    constructor(key) {\n        this._key = ensureKey(key, crypto.publicKeyLength);\n    }\n    verify(data, sig) {\n        return crypto.hashAndVerify(this._key, sig, data);\n    }\n    marshal() {\n        return this._key;\n    }\n    get bytes() {\n        return pbm.PublicKey.encode({\n            Type: pbm.KeyType.Ed25519,\n            Data: this.marshal()\n        }).subarray();\n    }\n    equals(key) {\n        return uint8ArrayEquals(this.bytes, key.bytes);\n    }\n    hash() {\n        const p = sha256.digest(this.bytes);\n        if (isPromise(p)) {\n            return p.then(({ bytes }) => bytes);\n        }\n        return p.bytes;\n    }\n}\nexport class Ed25519PrivateKey {\n    _key;\n    _publicKey;\n    // key       - 64 byte Uint8Array containing private key\n    // publicKey - 32 byte Uint8Array containing public key\n    constructor(key, publicKey) {\n        this._key = ensureKey(key, crypto.privateKeyLength);\n        this._publicKey = ensureKey(publicKey, crypto.publicKeyLength);\n    }\n    sign(message) {\n        return crypto.hashAndSign(this._key, message);\n    }\n    get public() {\n        return new Ed25519PublicKey(this._publicKey);\n    }\n    marshal() {\n        return this._key;\n    }\n    get bytes() {\n        return pbm.PrivateKey.encode({\n            Type: pbm.KeyType.Ed25519,\n            Data: this.marshal()\n        }).subarray();\n    }\n    equals(key) {\n        return uint8ArrayEquals(this.bytes, key.bytes);\n    }\n    async hash() {\n        const p = sha256.digest(this.bytes);\n        let bytes;\n        if (isPromise(p)) {\n            ({ bytes } = await p);\n        }\n        else {\n            bytes = p.bytes;\n        }\n        return bytes;\n    }\n    /**\n     * Gets the ID of the key.\n     *\n     * The key id is the base58 encoding of the identity multihash containing its public key.\n     * The public key is a protobuf encoding containing a type and the DER encoding\n     * of the PKCS SubjectPublicKeyInfo.\n     *\n     * @returns {Promise<string>}\n     */\n    async id() {\n        const encoding = identity.digest(this.public.bytes);\n        return base58btc.encode(encoding.bytes).substring(1);\n    }\n    /**\n     * Exports the key into a password protected `format`\n     */\n    async export(password, format = 'libp2p-key') {\n        if (format === 'libp2p-key') {\n            return exporter(this.bytes, password);\n        }\n        else {\n            throw new CodeError(`export format '${format}' is not supported`, 'ERR_INVALID_EXPORT_FORMAT');\n        }\n    }\n}\nexport function unmarshalEd25519PrivateKey(bytes) {\n    // Try the old, redundant public key version\n    if (bytes.length > crypto.privateKeyLength) {\n        bytes = ensureKey(bytes, crypto.privateKeyLength + crypto.publicKeyLength);\n        const privateKeyBytes = bytes.subarray(0, crypto.privateKeyLength);\n        const publicKeyBytes = bytes.subarray(crypto.privateKeyLength, bytes.length);\n        return new Ed25519PrivateKey(privateKeyBytes, publicKeyBytes);\n    }\n    bytes = ensureKey(bytes, crypto.privateKeyLength);\n    const privateKeyBytes = bytes.subarray(0, crypto.privateKeyLength);\n    const publicKeyBytes = bytes.subarray(crypto.publicKeyLength);\n    return new Ed25519PrivateKey(privateKeyBytes, publicKeyBytes);\n}\nexport function unmarshalEd25519PublicKey(bytes) {\n    bytes = ensureKey(bytes, crypto.publicKeyLength);\n    return new Ed25519PublicKey(bytes);\n}\nexport async function generateKeyPair() {\n    const { privateKey, publicKey } = crypto.generateKey();\n    return new Ed25519PrivateKey(privateKey, publicKey);\n}\nexport async function generateKeyPairFromSeed(seed) {\n    const { privateKey, publicKey } = crypto.generateKeyFromSeed(seed);\n    return new Ed25519PrivateKey(privateKey, publicKey);\n}\nfunction ensureKey(key, length) {\n    key = Uint8Array.from(key ?? []);\n    if (key.length !== length) {\n        throw new CodeError(`Key must be a Uint8Array of length ${length}, got ${key.length}`, 'ERR_INVALID_KEY_TYPE');\n    }\n    return key;\n}\n//# sourceMappingURL=ed25519-class.js.map","import { CodeError } from '@libp2p/interface';\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string';\nimport randomBytes from '../random-bytes.js';\nimport webcrypto from '../webcrypto.js';\nimport * as utils from './rsa-utils.js';\nexport { utils };\nexport async function generateKey(bits) {\n    const pair = await webcrypto.get().subtle.generateKey({\n        name: 'RSASSA-PKCS1-v1_5',\n        modulusLength: bits,\n        publicExponent: new Uint8Array([0x01, 0x00, 0x01]),\n        hash: { name: 'SHA-256' }\n    }, true, ['sign', 'verify']);\n    const keys = await exportKey(pair);\n    return {\n        privateKey: keys[0],\n        publicKey: keys[1]\n    };\n}\n// Takes a jwk key\nexport async function unmarshalPrivateKey(key) {\n    const privateKey = await webcrypto.get().subtle.importKey('jwk', key, {\n        name: 'RSASSA-PKCS1-v1_5',\n        hash: { name: 'SHA-256' }\n    }, true, ['sign']);\n    const pair = [\n        privateKey,\n        await derivePublicFromPrivate(key)\n    ];\n    const keys = await exportKey({\n        privateKey: pair[0],\n        publicKey: pair[1]\n    });\n    return {\n        privateKey: keys[0],\n        publicKey: keys[1]\n    };\n}\nexport { randomBytes as getRandomValues };\nexport async function hashAndSign(key, msg) {\n    const privateKey = await webcrypto.get().subtle.importKey('jwk', key, {\n        name: 'RSASSA-PKCS1-v1_5',\n        hash: { name: 'SHA-256' }\n    }, false, ['sign']);\n    const sig = await webcrypto.get().subtle.sign({ name: 'RSASSA-PKCS1-v1_5' }, privateKey, msg instanceof Uint8Array ? msg : msg.subarray());\n    return new Uint8Array(sig, 0, sig.byteLength);\n}\nexport async function hashAndVerify(key, sig, msg) {\n    const publicKey = await webcrypto.get().subtle.importKey('jwk', key, {\n        name: 'RSASSA-PKCS1-v1_5',\n        hash: { name: 'SHA-256' }\n    }, false, ['verify']);\n    return webcrypto.get().subtle.verify({ name: 'RSASSA-PKCS1-v1_5' }, publicKey, sig, msg instanceof Uint8Array ? msg : msg.subarray());\n}\nasync function exportKey(pair) {\n    if (pair.privateKey == null || pair.publicKey == null) {\n        throw new CodeError('Private and public key are required', 'ERR_INVALID_PARAMETERS');\n    }\n    return Promise.all([\n        webcrypto.get().subtle.exportKey('jwk', pair.privateKey),\n        webcrypto.get().subtle.exportKey('jwk', pair.publicKey)\n    ]);\n}\nasync function derivePublicFromPrivate(jwKey) {\n    return webcrypto.get().subtle.importKey('jwk', {\n        kty: jwKey.kty,\n        n: jwKey.n,\n        e: jwKey.e\n    }, {\n        name: 'RSASSA-PKCS1-v1_5',\n        hash: { name: 'SHA-256' }\n    }, true, ['verify']);\n}\nexport function keySize(jwk) {\n    if (jwk.kty !== 'RSA') {\n        throw new CodeError('invalid key type', 'ERR_INVALID_KEY_TYPE');\n    }\n    else if (jwk.n == null) {\n        throw new CodeError('invalid key modulus', 'ERR_INVALID_KEY_MODULUS');\n    }\n    const bytes = uint8ArrayFromString(jwk.n, 'base64url');\n    return bytes.length * 8;\n}\n//# sourceMappingURL=rsa-browser.js.map","import { hash as assertHash, bytes as assertBytes, exists as assertExists } from './_assert.js';\nimport { Hash, toBytes } from './utils.js';\n// HMAC (RFC 2104)\nexport class HMAC extends Hash {\n    constructor(hash, _key) {\n        super();\n        this.finished = false;\n        this.destroyed = false;\n        assertHash(hash);\n        const key = toBytes(_key);\n        this.iHash = hash.create();\n        if (typeof this.iHash.update !== 'function')\n            throw new Error('Expected instance of class which extends utils.Hash');\n        this.blockLen = this.iHash.blockLen;\n        this.outputLen = this.iHash.outputLen;\n        const blockLen = this.blockLen;\n        const pad = new Uint8Array(blockLen);\n        // blockLen can be bigger than outputLen\n        pad.set(key.length > blockLen ? hash.create().update(key).digest() : key);\n        for (let i = 0; i < pad.length; i++)\n            pad[i] ^= 0x36;\n        this.iHash.update(pad);\n        // By doing update (processing of first block) of outer hash here we can re-use it between multiple calls via clone\n        this.oHash = hash.create();\n        // Undo internal XOR && apply outer XOR\n        for (let i = 0; i < pad.length; i++)\n            pad[i] ^= 0x36 ^ 0x5c;\n        this.oHash.update(pad);\n        pad.fill(0);\n    }\n    update(buf) {\n        assertExists(this);\n        this.iHash.update(buf);\n        return this;\n    }\n    digestInto(out) {\n        assertExists(this);\n        assertBytes(out, this.outputLen);\n        this.finished = true;\n        this.iHash.digestInto(out);\n        this.oHash.update(out);\n        this.oHash.digestInto(out);\n        this.destroy();\n    }\n    digest() {\n        const out = new Uint8Array(this.oHash.outputLen);\n        this.digestInto(out);\n        return out;\n    }\n    _cloneInto(to) {\n        // Create new instance without calling constructor since key already in state and we don't know it.\n        to || (to = Object.create(Object.getPrototypeOf(this), {}));\n        const { oHash, iHash, finished, destroyed, blockLen, outputLen } = this;\n        to = to;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        to.blockLen = blockLen;\n        to.outputLen = outputLen;\n        to.oHash = oHash._cloneInto(to.oHash);\n        to.iHash = iHash._cloneInto(to.iHash);\n        return to;\n    }\n    destroy() {\n        this.destroyed = true;\n        this.oHash.destroy();\n        this.iHash.destroy();\n    }\n}\n/**\n * HMAC: RFC2104 message authentication code.\n * @param hash - function that would be used e.g. sha256\n * @param key - message key\n * @param message - message data\n * @example\n * import { hmac } from '@noble/hashes/hmac';\n * import { sha256 } from '@noble/hashes/sha2';\n * const mac1 = hmac(sha256, 'key', 'message');\n */\nexport const hmac = (hash, key, message) => new HMAC(hash, key).update(message).digest();\nhmac.create = (hash, key) => new HMAC(hash, key);\n//# sourceMappingURL=hmac.js.map","/*!\n Copyright (c) Peculiar Ventures, LLC\n*/\n\nfunction getUTCDate(date) {\r\n    return new Date(date.getTime() + (date.getTimezoneOffset() * 60000));\r\n}\r\nfunction getParametersValue(parameters, name, defaultValue) {\r\n    var _a;\r\n    if ((parameters instanceof Object) === false) {\r\n        return defaultValue;\r\n    }\r\n    return (_a = parameters[name]) !== null && _a !== void 0 ? _a : defaultValue;\r\n}\r\nfunction bufferToHexCodes(inputBuffer, inputOffset = 0, inputLength = (inputBuffer.byteLength - inputOffset), insertSpace = false) {\r\n    let result = \"\";\r\n    for (const item of (new Uint8Array(inputBuffer, inputOffset, inputLength))) {\r\n        const str = item.toString(16).toUpperCase();\r\n        if (str.length === 1) {\r\n            result += \"0\";\r\n        }\r\n        result += str;\r\n        if (insertSpace) {\r\n            result += \" \";\r\n        }\r\n    }\r\n    return result.trim();\r\n}\r\nfunction checkBufferParams(baseBlock, inputBuffer, inputOffset, inputLength) {\r\n    if (!(inputBuffer instanceof ArrayBuffer)) {\r\n        baseBlock.error = \"Wrong parameter: inputBuffer must be \\\"ArrayBuffer\\\"\";\r\n        return false;\r\n    }\r\n    if (!inputBuffer.byteLength) {\r\n        baseBlock.error = \"Wrong parameter: inputBuffer has zero length\";\r\n        return false;\r\n    }\r\n    if (inputOffset < 0) {\r\n        baseBlock.error = \"Wrong parameter: inputOffset less than zero\";\r\n        return false;\r\n    }\r\n    if (inputLength < 0) {\r\n        baseBlock.error = \"Wrong parameter: inputLength less than zero\";\r\n        return false;\r\n    }\r\n    if ((inputBuffer.byteLength - inputOffset - inputLength) < 0) {\r\n        baseBlock.error = \"End of input reached before message was fully decoded (inconsistent offset and length values)\";\r\n        return false;\r\n    }\r\n    return true;\r\n}\r\nfunction utilFromBase(inputBuffer, inputBase) {\r\n    let result = 0;\r\n    if (inputBuffer.length === 1) {\r\n        return inputBuffer[0];\r\n    }\r\n    for (let i = (inputBuffer.length - 1); i >= 0; i--) {\r\n        result += inputBuffer[(inputBuffer.length - 1) - i] * Math.pow(2, inputBase * i);\r\n    }\r\n    return result;\r\n}\r\nfunction utilToBase(value, base, reserved = (-1)) {\r\n    const internalReserved = reserved;\r\n    let internalValue = value;\r\n    let result = 0;\r\n    let biggest = Math.pow(2, base);\r\n    for (let i = 1; i < 8; i++) {\r\n        if (value < biggest) {\r\n            let retBuf;\r\n            if (internalReserved < 0) {\r\n                retBuf = new ArrayBuffer(i);\r\n                result = i;\r\n            }\r\n            else {\r\n                if (internalReserved < i) {\r\n                    return (new ArrayBuffer(0));\r\n                }\r\n                retBuf = new ArrayBuffer(internalReserved);\r\n                result = internalReserved;\r\n            }\r\n            const retView = new Uint8Array(retBuf);\r\n            for (let j = (i - 1); j >= 0; j--) {\r\n                const basis = Math.pow(2, j * base);\r\n                retView[result - j - 1] = Math.floor(internalValue / basis);\r\n                internalValue -= (retView[result - j - 1]) * basis;\r\n            }\r\n            return retBuf;\r\n        }\r\n        biggest *= Math.pow(2, base);\r\n    }\r\n    return new ArrayBuffer(0);\r\n}\r\nfunction utilConcatBuf(...buffers) {\r\n    let outputLength = 0;\r\n    let prevLength = 0;\r\n    for (const buffer of buffers) {\r\n        outputLength += buffer.byteLength;\r\n    }\r\n    const retBuf = new ArrayBuffer(outputLength);\r\n    const retView = new Uint8Array(retBuf);\r\n    for (const buffer of buffers) {\r\n        retView.set(new Uint8Array(buffer), prevLength);\r\n        prevLength += buffer.byteLength;\r\n    }\r\n    return retBuf;\r\n}\r\nfunction utilConcatView(...views) {\r\n    let outputLength = 0;\r\n    let prevLength = 0;\r\n    for (const view of views) {\r\n        outputLength += view.length;\r\n    }\r\n    const retBuf = new ArrayBuffer(outputLength);\r\n    const retView = new Uint8Array(retBuf);\r\n    for (const view of views) {\r\n        retView.set(view, prevLength);\r\n        prevLength += view.length;\r\n    }\r\n    return retView;\r\n}\r\nfunction utilDecodeTC() {\r\n    const buf = new Uint8Array(this.valueHex);\r\n    if (this.valueHex.byteLength >= 2) {\r\n        const condition1 = (buf[0] === 0xFF) && (buf[1] & 0x80);\r\n        const condition2 = (buf[0] === 0x00) && ((buf[1] & 0x80) === 0x00);\r\n        if (condition1 || condition2) {\r\n            this.warnings.push(\"Needlessly long format\");\r\n        }\r\n    }\r\n    const bigIntBuffer = new ArrayBuffer(this.valueHex.byteLength);\r\n    const bigIntView = new Uint8Array(bigIntBuffer);\r\n    for (let i = 0; i < this.valueHex.byteLength; i++) {\r\n        bigIntView[i] = 0;\r\n    }\r\n    bigIntView[0] = (buf[0] & 0x80);\r\n    const bigInt = utilFromBase(bigIntView, 8);\r\n    const smallIntBuffer = new ArrayBuffer(this.valueHex.byteLength);\r\n    const smallIntView = new Uint8Array(smallIntBuffer);\r\n    for (let j = 0; j < this.valueHex.byteLength; j++) {\r\n        smallIntView[j] = buf[j];\r\n    }\r\n    smallIntView[0] &= 0x7F;\r\n    const smallInt = utilFromBase(smallIntView, 8);\r\n    return (smallInt - bigInt);\r\n}\r\nfunction utilEncodeTC(value) {\r\n    const modValue = (value < 0) ? (value * (-1)) : value;\r\n    let bigInt = 128;\r\n    for (let i = 1; i < 8; i++) {\r\n        if (modValue <= bigInt) {\r\n            if (value < 0) {\r\n                const smallInt = bigInt - modValue;\r\n                const retBuf = utilToBase(smallInt, 8, i);\r\n                const retView = new Uint8Array(retBuf);\r\n                retView[0] |= 0x80;\r\n                return retBuf;\r\n            }\r\n            let retBuf = utilToBase(modValue, 8, i);\r\n            let retView = new Uint8Array(retBuf);\r\n            if (retView[0] & 0x80) {\r\n                const tempBuf = retBuf.slice(0);\r\n                const tempView = new Uint8Array(tempBuf);\r\n                retBuf = new ArrayBuffer(retBuf.byteLength + 1);\r\n                retView = new Uint8Array(retBuf);\r\n                for (let k = 0; k < tempBuf.byteLength; k++) {\r\n                    retView[k + 1] = tempView[k];\r\n                }\r\n                retView[0] = 0x00;\r\n            }\r\n            return retBuf;\r\n        }\r\n        bigInt *= Math.pow(2, 8);\r\n    }\r\n    return (new ArrayBuffer(0));\r\n}\r\nfunction isEqualBuffer(inputBuffer1, inputBuffer2) {\r\n    if (inputBuffer1.byteLength !== inputBuffer2.byteLength) {\r\n        return false;\r\n    }\r\n    const view1 = new Uint8Array(inputBuffer1);\r\n    const view2 = new Uint8Array(inputBuffer2);\r\n    for (let i = 0; i < view1.length; i++) {\r\n        if (view1[i] !== view2[i]) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\nfunction padNumber(inputNumber, fullLength) {\r\n    const str = inputNumber.toString(10);\r\n    if (fullLength < str.length) {\r\n        return \"\";\r\n    }\r\n    const dif = fullLength - str.length;\r\n    const padding = new Array(dif);\r\n    for (let i = 0; i < dif; i++) {\r\n        padding[i] = \"0\";\r\n    }\r\n    const paddingString = padding.join(\"\");\r\n    return paddingString.concat(str);\r\n}\r\nconst base64Template = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\r\nconst base64UrlTemplate = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=\";\r\nfunction toBase64(input, useUrlTemplate = false, skipPadding = false, skipLeadingZeros = false) {\r\n    let i = 0;\r\n    let flag1 = 0;\r\n    let flag2 = 0;\r\n    let output = \"\";\r\n    const template = (useUrlTemplate) ? base64UrlTemplate : base64Template;\r\n    if (skipLeadingZeros) {\r\n        let nonZeroPosition = 0;\r\n        for (let i = 0; i < input.length; i++) {\r\n            if (input.charCodeAt(i) !== 0) {\r\n                nonZeroPosition = i;\r\n                break;\r\n            }\r\n        }\r\n        input = input.slice(nonZeroPosition);\r\n    }\r\n    while (i < input.length) {\r\n        const chr1 = input.charCodeAt(i++);\r\n        if (i >= input.length) {\r\n            flag1 = 1;\r\n        }\r\n        const chr2 = input.charCodeAt(i++);\r\n        if (i >= input.length) {\r\n            flag2 = 1;\r\n        }\r\n        const chr3 = input.charCodeAt(i++);\r\n        const enc1 = chr1 >> 2;\r\n        const enc2 = ((chr1 & 0x03) << 4) | (chr2 >> 4);\r\n        let enc3 = ((chr2 & 0x0F) << 2) | (chr3 >> 6);\r\n        let enc4 = chr3 & 0x3F;\r\n        if (flag1 === 1) {\r\n            enc3 = enc4 = 64;\r\n        }\r\n        else {\r\n            if (flag2 === 1) {\r\n                enc4 = 64;\r\n            }\r\n        }\r\n        if (skipPadding) {\r\n            if (enc3 === 64) {\r\n                output += `${template.charAt(enc1)}${template.charAt(enc2)}`;\r\n            }\r\n            else {\r\n                if (enc4 === 64) {\r\n                    output += `${template.charAt(enc1)}${template.charAt(enc2)}${template.charAt(enc3)}`;\r\n                }\r\n                else {\r\n                    output += `${template.charAt(enc1)}${template.charAt(enc2)}${template.charAt(enc3)}${template.charAt(enc4)}`;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            output += `${template.charAt(enc1)}${template.charAt(enc2)}${template.charAt(enc3)}${template.charAt(enc4)}`;\r\n        }\r\n    }\r\n    return output;\r\n}\r\nfunction fromBase64(input, useUrlTemplate = false, cutTailZeros = false) {\r\n    const template = (useUrlTemplate) ? base64UrlTemplate : base64Template;\r\n    function indexOf(toSearch) {\r\n        for (let i = 0; i < 64; i++) {\r\n            if (template.charAt(i) === toSearch)\r\n                return i;\r\n        }\r\n        return 64;\r\n    }\r\n    function test(incoming) {\r\n        return ((incoming === 64) ? 0x00 : incoming);\r\n    }\r\n    let i = 0;\r\n    let output = \"\";\r\n    while (i < input.length) {\r\n        const enc1 = indexOf(input.charAt(i++));\r\n        const enc2 = (i >= input.length) ? 0x00 : indexOf(input.charAt(i++));\r\n        const enc3 = (i >= input.length) ? 0x00 : indexOf(input.charAt(i++));\r\n        const enc4 = (i >= input.length) ? 0x00 : indexOf(input.charAt(i++));\r\n        const chr1 = (test(enc1) << 2) | (test(enc2) >> 4);\r\n        const chr2 = ((test(enc2) & 0x0F) << 4) | (test(enc3) >> 2);\r\n        const chr3 = ((test(enc3) & 0x03) << 6) | test(enc4);\r\n        output += String.fromCharCode(chr1);\r\n        if (enc3 !== 64) {\r\n            output += String.fromCharCode(chr2);\r\n        }\r\n        if (enc4 !== 64) {\r\n            output += String.fromCharCode(chr3);\r\n        }\r\n    }\r\n    if (cutTailZeros) {\r\n        const outputLength = output.length;\r\n        let nonZeroStart = (-1);\r\n        for (let i = (outputLength - 1); i >= 0; i--) {\r\n            if (output.charCodeAt(i) !== 0) {\r\n                nonZeroStart = i;\r\n                break;\r\n            }\r\n        }\r\n        if (nonZeroStart !== (-1)) {\r\n            output = output.slice(0, nonZeroStart + 1);\r\n        }\r\n        else {\r\n            output = \"\";\r\n        }\r\n    }\r\n    return output;\r\n}\r\nfunction arrayBufferToString(buffer) {\r\n    let resultString = \"\";\r\n    const view = new Uint8Array(buffer);\r\n    for (const element of view) {\r\n        resultString += String.fromCharCode(element);\r\n    }\r\n    return resultString;\r\n}\r\nfunction stringToArrayBuffer(str) {\r\n    const stringLength = str.length;\r\n    const resultBuffer = new ArrayBuffer(stringLength);\r\n    const resultView = new Uint8Array(resultBuffer);\r\n    for (let i = 0; i < stringLength; i++) {\r\n        resultView[i] = str.charCodeAt(i);\r\n    }\r\n    return resultBuffer;\r\n}\r\nconst log2 = Math.log(2);\r\nfunction nearestPowerOf2(length) {\r\n    const base = (Math.log(length) / log2);\r\n    const floor = Math.floor(base);\r\n    const round = Math.round(base);\r\n    return ((floor === round) ? floor : round);\r\n}\r\nfunction clearProps(object, propsArray) {\r\n    for (const prop of propsArray) {\r\n        delete object[prop];\r\n    }\r\n}\n\nexport { arrayBufferToString, bufferToHexCodes, checkBufferParams, clearProps, fromBase64, getParametersValue, getUTCDate, isEqualBuffer, nearestPowerOf2, padNumber, stringToArrayBuffer, toBase64, utilConcatBuf, utilConcatView, utilDecodeTC, utilEncodeTC, utilFromBase, utilToBase };\n","/*!\n * Copyright (c) 2014, GMO GlobalSign\n * Copyright (c) 2015-2022, Peculiar Ventures\n * All rights reserved.\n * \n * Author 2014-2019, Yury Strozhevsky\n * \n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n * \n * * Redistributions of source code must retain the above copyright notice, this\n *   list of conditions and the following disclaimer.\n * \n * * Redistributions in binary form must reproduce the above copyright notice, this\n *   list of conditions and the following disclaimer in the documentation and/or\n *   other materials provided with the distribution.\n * \n * * Neither the name of the copyright holder nor the names of its\n *   contributors may be used to endorse or promote products derived from\n *   this software without specific prior written permission.\n * \n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR\n * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\n * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n * \n */\n\nimport * as pvtsutils from 'pvtsutils';\nimport * as pvutils from 'pvutils';\n\nfunction assertBigInt() {\r\n    if (typeof BigInt === \"undefined\") {\r\n        throw new Error(\"BigInt is not defined. Your environment doesn't implement BigInt.\");\r\n    }\r\n}\r\nfunction concat(buffers) {\r\n    let outputLength = 0;\r\n    let prevLength = 0;\r\n    for (let i = 0; i < buffers.length; i++) {\r\n        const buffer = buffers[i];\r\n        outputLength += buffer.byteLength;\r\n    }\r\n    const retView = new Uint8Array(outputLength);\r\n    for (let i = 0; i < buffers.length; i++) {\r\n        const buffer = buffers[i];\r\n        retView.set(new Uint8Array(buffer), prevLength);\r\n        prevLength += buffer.byteLength;\r\n    }\r\n    return retView.buffer;\r\n}\r\nfunction checkBufferParams(baseBlock, inputBuffer, inputOffset, inputLength) {\r\n    if (!(inputBuffer instanceof Uint8Array)) {\r\n        baseBlock.error = \"Wrong parameter: inputBuffer must be 'Uint8Array'\";\r\n        return false;\r\n    }\r\n    if (!inputBuffer.byteLength) {\r\n        baseBlock.error = \"Wrong parameter: inputBuffer has zero length\";\r\n        return false;\r\n    }\r\n    if (inputOffset < 0) {\r\n        baseBlock.error = \"Wrong parameter: inputOffset less than zero\";\r\n        return false;\r\n    }\r\n    if (inputLength < 0) {\r\n        baseBlock.error = \"Wrong parameter: inputLength less than zero\";\r\n        return false;\r\n    }\r\n    if ((inputBuffer.byteLength - inputOffset - inputLength) < 0) {\r\n        baseBlock.error = \"End of input reached before message was fully decoded (inconsistent offset and length values)\";\r\n        return false;\r\n    }\r\n    return true;\r\n}\n\nclass ViewWriter {\r\n    constructor() {\r\n        this.items = [];\r\n    }\r\n    write(buf) {\r\n        this.items.push(buf);\r\n    }\r\n    final() {\r\n        return concat(this.items);\r\n    }\r\n}\n\nconst powers2 = [new Uint8Array([1])];\r\nconst digitsString = \"0123456789\";\r\nconst NAME = \"name\";\r\nconst VALUE_HEX_VIEW = \"valueHexView\";\r\nconst IS_HEX_ONLY = \"isHexOnly\";\r\nconst ID_BLOCK = \"idBlock\";\r\nconst TAG_CLASS = \"tagClass\";\r\nconst TAG_NUMBER = \"tagNumber\";\r\nconst IS_CONSTRUCTED = \"isConstructed\";\r\nconst FROM_BER = \"fromBER\";\r\nconst TO_BER = \"toBER\";\r\nconst LOCAL = \"local\";\r\nconst EMPTY_STRING = \"\";\r\nconst EMPTY_BUFFER = new ArrayBuffer(0);\r\nconst EMPTY_VIEW = new Uint8Array(0);\r\nconst END_OF_CONTENT_NAME = \"EndOfContent\";\r\nconst OCTET_STRING_NAME = \"OCTET STRING\";\r\nconst BIT_STRING_NAME = \"BIT STRING\";\n\nfunction HexBlock(BaseClass) {\r\n    var _a;\r\n    return _a = class Some extends BaseClass {\r\n            constructor(...args) {\r\n                var _a;\r\n                super(...args);\r\n                const params = args[0] || {};\r\n                this.isHexOnly = (_a = params.isHexOnly) !== null && _a !== void 0 ? _a : false;\r\n                this.valueHexView = params.valueHex ? pvtsutils.BufferSourceConverter.toUint8Array(params.valueHex) : EMPTY_VIEW;\r\n            }\r\n            get valueHex() {\r\n                return this.valueHexView.slice().buffer;\r\n            }\r\n            set valueHex(value) {\r\n                this.valueHexView = new Uint8Array(value);\r\n            }\r\n            fromBER(inputBuffer, inputOffset, inputLength) {\r\n                const view = inputBuffer instanceof ArrayBuffer ? new Uint8Array(inputBuffer) : inputBuffer;\r\n                if (!checkBufferParams(this, view, inputOffset, inputLength)) {\r\n                    return -1;\r\n                }\r\n                const endLength = inputOffset + inputLength;\r\n                this.valueHexView = view.subarray(inputOffset, endLength);\r\n                if (!this.valueHexView.length) {\r\n                    this.warnings.push(\"Zero buffer length\");\r\n                    return inputOffset;\r\n                }\r\n                this.blockLength = inputLength;\r\n                return endLength;\r\n            }\r\n            toBER(sizeOnly = false) {\r\n                if (!this.isHexOnly) {\r\n                    this.error = \"Flag 'isHexOnly' is not set, abort\";\r\n                    return EMPTY_BUFFER;\r\n                }\r\n                if (sizeOnly) {\r\n                    return new ArrayBuffer(this.valueHexView.byteLength);\r\n                }\r\n                return (this.valueHexView.byteLength === this.valueHexView.buffer.byteLength)\r\n                    ? this.valueHexView.buffer\r\n                    : this.valueHexView.slice().buffer;\r\n            }\r\n            toJSON() {\r\n                return {\r\n                    ...super.toJSON(),\r\n                    isHexOnly: this.isHexOnly,\r\n                    valueHex: pvtsutils.Convert.ToHex(this.valueHexView),\r\n                };\r\n            }\r\n        },\r\n        _a.NAME = \"hexBlock\",\r\n        _a;\r\n}\n\nclass LocalBaseBlock {\r\n    constructor({ blockLength = 0, error = EMPTY_STRING, warnings = [], valueBeforeDecode = EMPTY_VIEW, } = {}) {\r\n        this.blockLength = blockLength;\r\n        this.error = error;\r\n        this.warnings = warnings;\r\n        this.valueBeforeDecodeView = pvtsutils.BufferSourceConverter.toUint8Array(valueBeforeDecode);\r\n    }\r\n    static blockName() {\r\n        return this.NAME;\r\n    }\r\n    get valueBeforeDecode() {\r\n        return this.valueBeforeDecodeView.slice().buffer;\r\n    }\r\n    set valueBeforeDecode(value) {\r\n        this.valueBeforeDecodeView = new Uint8Array(value);\r\n    }\r\n    toJSON() {\r\n        return {\r\n            blockName: this.constructor.NAME,\r\n            blockLength: this.blockLength,\r\n            error: this.error,\r\n            warnings: this.warnings,\r\n            valueBeforeDecode: pvtsutils.Convert.ToHex(this.valueBeforeDecodeView),\r\n        };\r\n    }\r\n}\r\nLocalBaseBlock.NAME = \"baseBlock\";\n\nclass ValueBlock extends LocalBaseBlock {\r\n    fromBER(inputBuffer, inputOffset, inputLength) {\r\n        throw TypeError(\"User need to make a specific function in a class which extends 'ValueBlock'\");\r\n    }\r\n    toBER(sizeOnly, writer) {\r\n        throw TypeError(\"User need to make a specific function in a class which extends 'ValueBlock'\");\r\n    }\r\n}\r\nValueBlock.NAME = \"valueBlock\";\n\nclass LocalIdentificationBlock extends HexBlock(LocalBaseBlock) {\r\n    constructor({ idBlock = {}, } = {}) {\r\n        var _a, _b, _c, _d;\r\n        super();\r\n        if (idBlock) {\r\n            this.isHexOnly = (_a = idBlock.isHexOnly) !== null && _a !== void 0 ? _a : false;\r\n            this.valueHexView = idBlock.valueHex ? pvtsutils.BufferSourceConverter.toUint8Array(idBlock.valueHex) : EMPTY_VIEW;\r\n            this.tagClass = (_b = idBlock.tagClass) !== null && _b !== void 0 ? _b : -1;\r\n            this.tagNumber = (_c = idBlock.tagNumber) !== null && _c !== void 0 ? _c : -1;\r\n            this.isConstructed = (_d = idBlock.isConstructed) !== null && _d !== void 0 ? _d : false;\r\n        }\r\n        else {\r\n            this.tagClass = -1;\r\n            this.tagNumber = -1;\r\n            this.isConstructed = false;\r\n        }\r\n    }\r\n    toBER(sizeOnly = false) {\r\n        let firstOctet = 0;\r\n        switch (this.tagClass) {\r\n            case 1:\r\n                firstOctet |= 0x00;\r\n                break;\r\n            case 2:\r\n                firstOctet |= 0x40;\r\n                break;\r\n            case 3:\r\n                firstOctet |= 0x80;\r\n                break;\r\n            case 4:\r\n                firstOctet |= 0xC0;\r\n                break;\r\n            default:\r\n                this.error = \"Unknown tag class\";\r\n                return EMPTY_BUFFER;\r\n        }\r\n        if (this.isConstructed)\r\n            firstOctet |= 0x20;\r\n        if (this.tagNumber < 31 && !this.isHexOnly) {\r\n            const retView = new Uint8Array(1);\r\n            if (!sizeOnly) {\r\n                let number = this.tagNumber;\r\n                number &= 0x1F;\r\n                firstOctet |= number;\r\n                retView[0] = firstOctet;\r\n            }\r\n            return retView.buffer;\r\n        }\r\n        if (!this.isHexOnly) {\r\n            const encodedBuf = pvutils.utilToBase(this.tagNumber, 7);\r\n            const encodedView = new Uint8Array(encodedBuf);\r\n            const size = encodedBuf.byteLength;\r\n            const retView = new Uint8Array(size + 1);\r\n            retView[0] = (firstOctet | 0x1F);\r\n            if (!sizeOnly) {\r\n                for (let i = 0; i < (size - 1); i++)\r\n                    retView[i + 1] = encodedView[i] | 0x80;\r\n                retView[size] = encodedView[size - 1];\r\n            }\r\n            return retView.buffer;\r\n        }\r\n        const retView = new Uint8Array(this.valueHexView.byteLength + 1);\r\n        retView[0] = (firstOctet | 0x1F);\r\n        if (!sizeOnly) {\r\n            const curView = this.valueHexView;\r\n            for (let i = 0; i < (curView.length - 1); i++)\r\n                retView[i + 1] = curView[i] | 0x80;\r\n            retView[this.valueHexView.byteLength] = curView[curView.length - 1];\r\n        }\r\n        return retView.buffer;\r\n    }\r\n    fromBER(inputBuffer, inputOffset, inputLength) {\r\n        const inputView = pvtsutils.BufferSourceConverter.toUint8Array(inputBuffer);\r\n        if (!checkBufferParams(this, inputView, inputOffset, inputLength)) {\r\n            return -1;\r\n        }\r\n        const intBuffer = inputView.subarray(inputOffset, inputOffset + inputLength);\r\n        if (intBuffer.length === 0) {\r\n            this.error = \"Zero buffer length\";\r\n            return -1;\r\n        }\r\n        const tagClassMask = intBuffer[0] & 0xC0;\r\n        switch (tagClassMask) {\r\n            case 0x00:\r\n                this.tagClass = (1);\r\n                break;\r\n            case 0x40:\r\n                this.tagClass = (2);\r\n                break;\r\n            case 0x80:\r\n                this.tagClass = (3);\r\n                break;\r\n            case 0xC0:\r\n                this.tagClass = (4);\r\n                break;\r\n            default:\r\n                this.error = \"Unknown tag class\";\r\n                return -1;\r\n        }\r\n        this.isConstructed = (intBuffer[0] & 0x20) === 0x20;\r\n        this.isHexOnly = false;\r\n        const tagNumberMask = intBuffer[0] & 0x1F;\r\n        if (tagNumberMask !== 0x1F) {\r\n            this.tagNumber = (tagNumberMask);\r\n            this.blockLength = 1;\r\n        }\r\n        else {\r\n            let count = 1;\r\n            let intTagNumberBuffer = this.valueHexView = new Uint8Array(255);\r\n            let tagNumberBufferMaxLength = 255;\r\n            while (intBuffer[count] & 0x80) {\r\n                intTagNumberBuffer[count - 1] = intBuffer[count] & 0x7F;\r\n                count++;\r\n                if (count >= intBuffer.length) {\r\n                    this.error = \"End of input reached before message was fully decoded\";\r\n                    return -1;\r\n                }\r\n                if (count === tagNumberBufferMaxLength) {\r\n                    tagNumberBufferMaxLength += 255;\r\n                    const tempBufferView = new Uint8Array(tagNumberBufferMaxLength);\r\n                    for (let i = 0; i < intTagNumberBuffer.length; i++)\r\n                        tempBufferView[i] = intTagNumberBuffer[i];\r\n                    intTagNumberBuffer = this.valueHexView = new Uint8Array(tagNumberBufferMaxLength);\r\n                }\r\n            }\r\n            this.blockLength = (count + 1);\r\n            intTagNumberBuffer[count - 1] = intBuffer[count] & 0x7F;\r\n            const tempBufferView = new Uint8Array(count);\r\n            for (let i = 0; i < count; i++)\r\n                tempBufferView[i] = intTagNumberBuffer[i];\r\n            intTagNumberBuffer = this.valueHexView = new Uint8Array(count);\r\n            intTagNumberBuffer.set(tempBufferView);\r\n            if (this.blockLength <= 9)\r\n                this.tagNumber = pvutils.utilFromBase(intTagNumberBuffer, 7);\r\n            else {\r\n                this.isHexOnly = true;\r\n                this.warnings.push(\"Tag too long, represented as hex-coded\");\r\n            }\r\n        }\r\n        if (((this.tagClass === 1)) &&\r\n            (this.isConstructed)) {\r\n            switch (this.tagNumber) {\r\n                case 1:\r\n                case 2:\r\n                case 5:\r\n                case 6:\r\n                case 9:\r\n                case 13:\r\n                case 14:\r\n                case 23:\r\n                case 24:\r\n                case 31:\r\n                case 32:\r\n                case 33:\r\n                case 34:\r\n                    this.error = \"Constructed encoding used for primitive type\";\r\n                    return -1;\r\n            }\r\n        }\r\n        return (inputOffset + this.blockLength);\r\n    }\r\n    toJSON() {\r\n        return {\r\n            ...super.toJSON(),\r\n            tagClass: this.tagClass,\r\n            tagNumber: this.tagNumber,\r\n            isConstructed: this.isConstructed,\r\n        };\r\n    }\r\n}\r\nLocalIdentificationBlock.NAME = \"identificationBlock\";\n\nclass LocalLengthBlock extends LocalBaseBlock {\r\n    constructor({ lenBlock = {}, } = {}) {\r\n        var _a, _b, _c;\r\n        super();\r\n        this.isIndefiniteForm = (_a = lenBlock.isIndefiniteForm) !== null && _a !== void 0 ? _a : false;\r\n        this.longFormUsed = (_b = lenBlock.longFormUsed) !== null && _b !== void 0 ? _b : false;\r\n        this.length = (_c = lenBlock.length) !== null && _c !== void 0 ? _c : 0;\r\n    }\r\n    fromBER(inputBuffer, inputOffset, inputLength) {\r\n        const view = pvtsutils.BufferSourceConverter.toUint8Array(inputBuffer);\r\n        if (!checkBufferParams(this, view, inputOffset, inputLength)) {\r\n            return -1;\r\n        }\r\n        const intBuffer = view.subarray(inputOffset, inputOffset + inputLength);\r\n        if (intBuffer.length === 0) {\r\n            this.error = \"Zero buffer length\";\r\n            return -1;\r\n        }\r\n        if (intBuffer[0] === 0xFF) {\r\n            this.error = \"Length block 0xFF is reserved by standard\";\r\n            return -1;\r\n        }\r\n        this.isIndefiniteForm = intBuffer[0] === 0x80;\r\n        if (this.isIndefiniteForm) {\r\n            this.blockLength = 1;\r\n            return (inputOffset + this.blockLength);\r\n        }\r\n        this.longFormUsed = !!(intBuffer[0] & 0x80);\r\n        if (this.longFormUsed === false) {\r\n            this.length = (intBuffer[0]);\r\n            this.blockLength = 1;\r\n            return (inputOffset + this.blockLength);\r\n        }\r\n        const count = intBuffer[0] & 0x7F;\r\n        if (count > 8) {\r\n            this.error = \"Too big integer\";\r\n            return -1;\r\n        }\r\n        if ((count + 1) > intBuffer.length) {\r\n            this.error = \"End of input reached before message was fully decoded\";\r\n            return -1;\r\n        }\r\n        const lenOffset = inputOffset + 1;\r\n        const lengthBufferView = view.subarray(lenOffset, lenOffset + count);\r\n        if (lengthBufferView[count - 1] === 0x00)\r\n            this.warnings.push(\"Needlessly long encoded length\");\r\n        this.length = pvutils.utilFromBase(lengthBufferView, 8);\r\n        if (this.longFormUsed && (this.length <= 127))\r\n            this.warnings.push(\"Unnecessary usage of long length form\");\r\n        this.blockLength = count + 1;\r\n        return (inputOffset + this.blockLength);\r\n    }\r\n    toBER(sizeOnly = false) {\r\n        let retBuf;\r\n        let retView;\r\n        if (this.length > 127)\r\n            this.longFormUsed = true;\r\n        if (this.isIndefiniteForm) {\r\n            retBuf = new ArrayBuffer(1);\r\n            if (sizeOnly === false) {\r\n                retView = new Uint8Array(retBuf);\r\n                retView[0] = 0x80;\r\n            }\r\n            return retBuf;\r\n        }\r\n        if (this.longFormUsed) {\r\n            const encodedBuf = pvutils.utilToBase(this.length, 8);\r\n            if (encodedBuf.byteLength > 127) {\r\n                this.error = \"Too big length\";\r\n                return (EMPTY_BUFFER);\r\n            }\r\n            retBuf = new ArrayBuffer(encodedBuf.byteLength + 1);\r\n            if (sizeOnly)\r\n                return retBuf;\r\n            const encodedView = new Uint8Array(encodedBuf);\r\n            retView = new Uint8Array(retBuf);\r\n            retView[0] = encodedBuf.byteLength | 0x80;\r\n            for (let i = 0; i < encodedBuf.byteLength; i++)\r\n                retView[i + 1] = encodedView[i];\r\n            return retBuf;\r\n        }\r\n        retBuf = new ArrayBuffer(1);\r\n        if (sizeOnly === false) {\r\n            retView = new Uint8Array(retBuf);\r\n            retView[0] = this.length;\r\n        }\r\n        return retBuf;\r\n    }\r\n    toJSON() {\r\n        return {\r\n            ...super.toJSON(),\r\n            isIndefiniteForm: this.isIndefiniteForm,\r\n            longFormUsed: this.longFormUsed,\r\n            length: this.length,\r\n        };\r\n    }\r\n}\r\nLocalLengthBlock.NAME = \"lengthBlock\";\n\nconst typeStore = {};\n\nclass BaseBlock extends LocalBaseBlock {\r\n    constructor({ name = EMPTY_STRING, optional = false, primitiveSchema, ...parameters } = {}, valueBlockType) {\r\n        super(parameters);\r\n        this.name = name;\r\n        this.optional = optional;\r\n        if (primitiveSchema) {\r\n            this.primitiveSchema = primitiveSchema;\r\n        }\r\n        this.idBlock = new LocalIdentificationBlock(parameters);\r\n        this.lenBlock = new LocalLengthBlock(parameters);\r\n        this.valueBlock = valueBlockType ? new valueBlockType(parameters) : new ValueBlock(parameters);\r\n    }\r\n    fromBER(inputBuffer, inputOffset, inputLength) {\r\n        const resultOffset = this.valueBlock.fromBER(inputBuffer, inputOffset, (this.lenBlock.isIndefiniteForm) ? inputLength : this.lenBlock.length);\r\n        if (resultOffset === -1) {\r\n            this.error = this.valueBlock.error;\r\n            return resultOffset;\r\n        }\r\n        if (!this.idBlock.error.length)\r\n            this.blockLength += this.idBlock.blockLength;\r\n        if (!this.lenBlock.error.length)\r\n            this.blockLength += this.lenBlock.blockLength;\r\n        if (!this.valueBlock.error.length)\r\n            this.blockLength += this.valueBlock.blockLength;\r\n        return resultOffset;\r\n    }\r\n    toBER(sizeOnly, writer) {\r\n        const _writer = writer || new ViewWriter();\r\n        if (!writer) {\r\n            prepareIndefiniteForm(this);\r\n        }\r\n        const idBlockBuf = this.idBlock.toBER(sizeOnly);\r\n        _writer.write(idBlockBuf);\r\n        if (this.lenBlock.isIndefiniteForm) {\r\n            _writer.write(new Uint8Array([0x80]).buffer);\r\n            this.valueBlock.toBER(sizeOnly, _writer);\r\n            _writer.write(new ArrayBuffer(2));\r\n        }\r\n        else {\r\n            const valueBlockBuf = this.valueBlock.toBER(sizeOnly);\r\n            this.lenBlock.length = valueBlockBuf.byteLength;\r\n            const lenBlockBuf = this.lenBlock.toBER(sizeOnly);\r\n            _writer.write(lenBlockBuf);\r\n            _writer.write(valueBlockBuf);\r\n        }\r\n        if (!writer) {\r\n            return _writer.final();\r\n        }\r\n        return EMPTY_BUFFER;\r\n    }\r\n    toJSON() {\r\n        const object = {\r\n            ...super.toJSON(),\r\n            idBlock: this.idBlock.toJSON(),\r\n            lenBlock: this.lenBlock.toJSON(),\r\n            valueBlock: this.valueBlock.toJSON(),\r\n            name: this.name,\r\n            optional: this.optional,\r\n        };\r\n        if (this.primitiveSchema)\r\n            object.primitiveSchema = this.primitiveSchema.toJSON();\r\n        return object;\r\n    }\r\n    toString(encoding = \"ascii\") {\r\n        if (encoding === \"ascii\") {\r\n            return this.onAsciiEncoding();\r\n        }\r\n        return pvtsutils.Convert.ToHex(this.toBER());\r\n    }\r\n    onAsciiEncoding() {\r\n        return `${this.constructor.NAME} : ${pvtsutils.Convert.ToHex(this.valueBlock.valueBeforeDecodeView)}`;\r\n    }\r\n    isEqual(other) {\r\n        if (this === other) {\r\n            return true;\r\n        }\r\n        if (!(other instanceof this.constructor)) {\r\n            return false;\r\n        }\r\n        const thisRaw = this.toBER();\r\n        const otherRaw = other.toBER();\r\n        return pvutils.isEqualBuffer(thisRaw, otherRaw);\r\n    }\r\n}\r\nBaseBlock.NAME = \"BaseBlock\";\r\nfunction prepareIndefiniteForm(baseBlock) {\r\n    if (baseBlock instanceof typeStore.Constructed) {\r\n        for (const value of baseBlock.valueBlock.value) {\r\n            if (prepareIndefiniteForm(value)) {\r\n                baseBlock.lenBlock.isIndefiniteForm = true;\r\n            }\r\n        }\r\n    }\r\n    return !!baseBlock.lenBlock.isIndefiniteForm;\r\n}\n\nclass BaseStringBlock extends BaseBlock {\r\n    constructor({ value = EMPTY_STRING, ...parameters } = {}, stringValueBlockType) {\r\n        super(parameters, stringValueBlockType);\r\n        if (value) {\r\n            this.fromString(value);\r\n        }\r\n    }\r\n    getValue() {\r\n        return this.valueBlock.value;\r\n    }\r\n    setValue(value) {\r\n        this.valueBlock.value = value;\r\n    }\r\n    fromBER(inputBuffer, inputOffset, inputLength) {\r\n        const resultOffset = this.valueBlock.fromBER(inputBuffer, inputOffset, (this.lenBlock.isIndefiniteForm) ? inputLength : this.lenBlock.length);\r\n        if (resultOffset === -1) {\r\n            this.error = this.valueBlock.error;\r\n            return resultOffset;\r\n        }\r\n        this.fromBuffer(this.valueBlock.valueHexView);\r\n        if (!this.idBlock.error.length)\r\n            this.blockLength += this.idBlock.blockLength;\r\n        if (!this.lenBlock.error.length)\r\n            this.blockLength += this.lenBlock.blockLength;\r\n        if (!this.valueBlock.error.length)\r\n            this.blockLength += this.valueBlock.blockLength;\r\n        return resultOffset;\r\n    }\r\n    onAsciiEncoding() {\r\n        return `${this.constructor.NAME} : '${this.valueBlock.value}'`;\r\n    }\r\n}\r\nBaseStringBlock.NAME = \"BaseStringBlock\";\n\nclass LocalPrimitiveValueBlock extends HexBlock(ValueBlock) {\r\n    constructor({ isHexOnly = true, ...parameters } = {}) {\r\n        super(parameters);\r\n        this.isHexOnly = isHexOnly;\r\n    }\r\n}\r\nLocalPrimitiveValueBlock.NAME = \"PrimitiveValueBlock\";\n\nvar _a$w;\r\nclass Primitive extends BaseBlock {\r\n    constructor(parameters = {}) {\r\n        super(parameters, LocalPrimitiveValueBlock);\r\n        this.idBlock.isConstructed = false;\r\n    }\r\n}\r\n_a$w = Primitive;\r\n(() => {\r\n    typeStore.Primitive = _a$w;\r\n})();\r\nPrimitive.NAME = \"PRIMITIVE\";\n\nfunction localChangeType(inputObject, newType) {\r\n    if (inputObject instanceof newType) {\r\n        return inputObject;\r\n    }\r\n    const newObject = new newType();\r\n    newObject.idBlock = inputObject.idBlock;\r\n    newObject.lenBlock = inputObject.lenBlock;\r\n    newObject.warnings = inputObject.warnings;\r\n    newObject.valueBeforeDecodeView = inputObject.valueBeforeDecodeView;\r\n    return newObject;\r\n}\r\nfunction localFromBER(inputBuffer, inputOffset = 0, inputLength = inputBuffer.length) {\r\n    const incomingOffset = inputOffset;\r\n    let returnObject = new BaseBlock({}, ValueBlock);\r\n    const baseBlock = new LocalBaseBlock();\r\n    if (!checkBufferParams(baseBlock, inputBuffer, inputOffset, inputLength)) {\r\n        returnObject.error = baseBlock.error;\r\n        return {\r\n            offset: -1,\r\n            result: returnObject\r\n        };\r\n    }\r\n    const intBuffer = inputBuffer.subarray(inputOffset, inputOffset + inputLength);\r\n    if (!intBuffer.length) {\r\n        returnObject.error = \"Zero buffer length\";\r\n        return {\r\n            offset: -1,\r\n            result: returnObject\r\n        };\r\n    }\r\n    let resultOffset = returnObject.idBlock.fromBER(inputBuffer, inputOffset, inputLength);\r\n    if (returnObject.idBlock.warnings.length) {\r\n        returnObject.warnings.concat(returnObject.idBlock.warnings);\r\n    }\r\n    if (resultOffset === -1) {\r\n        returnObject.error = returnObject.idBlock.error;\r\n        return {\r\n            offset: -1,\r\n            result: returnObject\r\n        };\r\n    }\r\n    inputOffset = resultOffset;\r\n    inputLength -= returnObject.idBlock.blockLength;\r\n    resultOffset = returnObject.lenBlock.fromBER(inputBuffer, inputOffset, inputLength);\r\n    if (returnObject.lenBlock.warnings.length) {\r\n        returnObject.warnings.concat(returnObject.lenBlock.warnings);\r\n    }\r\n    if (resultOffset === -1) {\r\n        returnObject.error = returnObject.lenBlock.error;\r\n        return {\r\n            offset: -1,\r\n            result: returnObject\r\n        };\r\n    }\r\n    inputOffset = resultOffset;\r\n    inputLength -= returnObject.lenBlock.blockLength;\r\n    if (!returnObject.idBlock.isConstructed &&\r\n        returnObject.lenBlock.isIndefiniteForm) {\r\n        returnObject.error = \"Indefinite length form used for primitive encoding form\";\r\n        return {\r\n            offset: -1,\r\n            result: returnObject\r\n        };\r\n    }\r\n    let newASN1Type = BaseBlock;\r\n    switch (returnObject.idBlock.tagClass) {\r\n        case 1:\r\n            if ((returnObject.idBlock.tagNumber >= 37) &&\r\n                (returnObject.idBlock.isHexOnly === false)) {\r\n                returnObject.error = \"UNIVERSAL 37 and upper tags are reserved by ASN.1 standard\";\r\n                return {\r\n                    offset: -1,\r\n                    result: returnObject\r\n                };\r\n            }\r\n            switch (returnObject.idBlock.tagNumber) {\r\n                case 0:\r\n                    if ((returnObject.idBlock.isConstructed) &&\r\n                        (returnObject.lenBlock.length > 0)) {\r\n                        returnObject.error = \"Type [UNIVERSAL 0] is reserved\";\r\n                        return {\r\n                            offset: -1,\r\n                            result: returnObject\r\n                        };\r\n                    }\r\n                    newASN1Type = typeStore.EndOfContent;\r\n                    break;\r\n                case 1:\r\n                    newASN1Type = typeStore.Boolean;\r\n                    break;\r\n                case 2:\r\n                    newASN1Type = typeStore.Integer;\r\n                    break;\r\n                case 3:\r\n                    newASN1Type = typeStore.BitString;\r\n                    break;\r\n                case 4:\r\n                    newASN1Type = typeStore.OctetString;\r\n                    break;\r\n                case 5:\r\n                    newASN1Type = typeStore.Null;\r\n                    break;\r\n                case 6:\r\n                    newASN1Type = typeStore.ObjectIdentifier;\r\n                    break;\r\n                case 10:\r\n                    newASN1Type = typeStore.Enumerated;\r\n                    break;\r\n                case 12:\r\n                    newASN1Type = typeStore.Utf8String;\r\n                    break;\r\n                case 13:\r\n                    newASN1Type = typeStore.RelativeObjectIdentifier;\r\n                    break;\r\n                case 14:\r\n                    newASN1Type = typeStore.TIME;\r\n                    break;\r\n                case 15:\r\n                    returnObject.error = \"[UNIVERSAL 15] is reserved by ASN.1 standard\";\r\n                    return {\r\n                        offset: -1,\r\n                        result: returnObject\r\n                    };\r\n                case 16:\r\n                    newASN1Type = typeStore.Sequence;\r\n                    break;\r\n                case 17:\r\n                    newASN1Type = typeStore.Set;\r\n                    break;\r\n                case 18:\r\n                    newASN1Type = typeStore.NumericString;\r\n                    break;\r\n                case 19:\r\n                    newASN1Type = typeStore.PrintableString;\r\n                    break;\r\n                case 20:\r\n                    newASN1Type = typeStore.TeletexString;\r\n                    break;\r\n                case 21:\r\n                    newASN1Type = typeStore.VideotexString;\r\n                    break;\r\n                case 22:\r\n                    newASN1Type = typeStore.IA5String;\r\n                    break;\r\n                case 23:\r\n                    newASN1Type = typeStore.UTCTime;\r\n                    break;\r\n                case 24:\r\n                    newASN1Type = typeStore.GeneralizedTime;\r\n                    break;\r\n                case 25:\r\n                    newASN1Type = typeStore.GraphicString;\r\n                    break;\r\n                case 26:\r\n                    newASN1Type = typeStore.VisibleString;\r\n                    break;\r\n                case 27:\r\n                    newASN1Type = typeStore.GeneralString;\r\n                    break;\r\n                case 28:\r\n                    newASN1Type = typeStore.UniversalString;\r\n                    break;\r\n                case 29:\r\n                    newASN1Type = typeStore.CharacterString;\r\n                    break;\r\n                case 30:\r\n                    newASN1Type = typeStore.BmpString;\r\n                    break;\r\n                case 31:\r\n                    newASN1Type = typeStore.DATE;\r\n                    break;\r\n                case 32:\r\n                    newASN1Type = typeStore.TimeOfDay;\r\n                    break;\r\n                case 33:\r\n                    newASN1Type = typeStore.DateTime;\r\n                    break;\r\n                case 34:\r\n                    newASN1Type = typeStore.Duration;\r\n                    break;\r\n                default: {\r\n                    const newObject = returnObject.idBlock.isConstructed\r\n                        ? new typeStore.Constructed()\r\n                        : new typeStore.Primitive();\r\n                    newObject.idBlock = returnObject.idBlock;\r\n                    newObject.lenBlock = returnObject.lenBlock;\r\n                    newObject.warnings = returnObject.warnings;\r\n                    returnObject = newObject;\r\n                }\r\n            }\r\n            break;\r\n        case 2:\r\n        case 3:\r\n        case 4:\r\n        default: {\r\n            newASN1Type = returnObject.idBlock.isConstructed\r\n                ? typeStore.Constructed\r\n                : typeStore.Primitive;\r\n        }\r\n    }\r\n    returnObject = localChangeType(returnObject, newASN1Type);\r\n    resultOffset = returnObject.fromBER(inputBuffer, inputOffset, returnObject.lenBlock.isIndefiniteForm ? inputLength : returnObject.lenBlock.length);\r\n    returnObject.valueBeforeDecodeView = inputBuffer.subarray(incomingOffset, incomingOffset + returnObject.blockLength);\r\n    return {\r\n        offset: resultOffset,\r\n        result: returnObject\r\n    };\r\n}\r\nfunction fromBER(inputBuffer) {\r\n    if (!inputBuffer.byteLength) {\r\n        const result = new BaseBlock({}, ValueBlock);\r\n        result.error = \"Input buffer has zero length\";\r\n        return {\r\n            offset: -1,\r\n            result\r\n        };\r\n    }\r\n    return localFromBER(pvtsutils.BufferSourceConverter.toUint8Array(inputBuffer).slice(), 0, inputBuffer.byteLength);\r\n}\n\nfunction checkLen(indefiniteLength, length) {\r\n    if (indefiniteLength) {\r\n        return 1;\r\n    }\r\n    return length;\r\n}\r\nclass LocalConstructedValueBlock extends ValueBlock {\r\n    constructor({ value = [], isIndefiniteForm = false, ...parameters } = {}) {\r\n        super(parameters);\r\n        this.value = value;\r\n        this.isIndefiniteForm = isIndefiniteForm;\r\n    }\r\n    fromBER(inputBuffer, inputOffset, inputLength) {\r\n        const view = pvtsutils.BufferSourceConverter.toUint8Array(inputBuffer);\r\n        if (!checkBufferParams(this, view, inputOffset, inputLength)) {\r\n            return -1;\r\n        }\r\n        this.valueBeforeDecodeView = view.subarray(inputOffset, inputOffset + inputLength);\r\n        if (this.valueBeforeDecodeView.length === 0) {\r\n            this.warnings.push(\"Zero buffer length\");\r\n            return inputOffset;\r\n        }\r\n        let currentOffset = inputOffset;\r\n        while (checkLen(this.isIndefiniteForm, inputLength) > 0) {\r\n            const returnObject = localFromBER(view, currentOffset, inputLength);\r\n            if (returnObject.offset === -1) {\r\n                this.error = returnObject.result.error;\r\n                this.warnings.concat(returnObject.result.warnings);\r\n                return -1;\r\n            }\r\n            currentOffset = returnObject.offset;\r\n            this.blockLength += returnObject.result.blockLength;\r\n            inputLength -= returnObject.result.blockLength;\r\n            this.value.push(returnObject.result);\r\n            if (this.isIndefiniteForm && returnObject.result.constructor.NAME === END_OF_CONTENT_NAME) {\r\n                break;\r\n            }\r\n        }\r\n        if (this.isIndefiniteForm) {\r\n            if (this.value[this.value.length - 1].constructor.NAME === END_OF_CONTENT_NAME) {\r\n                this.value.pop();\r\n            }\r\n            else {\r\n                this.warnings.push(\"No EndOfContent block encoded\");\r\n            }\r\n        }\r\n        return currentOffset;\r\n    }\r\n    toBER(sizeOnly, writer) {\r\n        const _writer = writer || new ViewWriter();\r\n        for (let i = 0; i < this.value.length; i++) {\r\n            this.value[i].toBER(sizeOnly, _writer);\r\n        }\r\n        if (!writer) {\r\n            return _writer.final();\r\n        }\r\n        return EMPTY_BUFFER;\r\n    }\r\n    toJSON() {\r\n        const object = {\r\n            ...super.toJSON(),\r\n            isIndefiniteForm: this.isIndefiniteForm,\r\n            value: [],\r\n        };\r\n        for (const value of this.value) {\r\n            object.value.push(value.toJSON());\r\n        }\r\n        return object;\r\n    }\r\n}\r\nLocalConstructedValueBlock.NAME = \"ConstructedValueBlock\";\n\nvar _a$v;\r\nclass Constructed extends BaseBlock {\r\n    constructor(parameters = {}) {\r\n        super(parameters, LocalConstructedValueBlock);\r\n        this.idBlock.isConstructed = true;\r\n    }\r\n    fromBER(inputBuffer, inputOffset, inputLength) {\r\n        this.valueBlock.isIndefiniteForm = this.lenBlock.isIndefiniteForm;\r\n        const resultOffset = this.valueBlock.fromBER(inputBuffer, inputOffset, (this.lenBlock.isIndefiniteForm) ? inputLength : this.lenBlock.length);\r\n        if (resultOffset === -1) {\r\n            this.error = this.valueBlock.error;\r\n            return resultOffset;\r\n        }\r\n        if (!this.idBlock.error.length)\r\n            this.blockLength += this.idBlock.blockLength;\r\n        if (!this.lenBlock.error.length)\r\n            this.blockLength += this.lenBlock.blockLength;\r\n        if (!this.valueBlock.error.length)\r\n            this.blockLength += this.valueBlock.blockLength;\r\n        return resultOffset;\r\n    }\r\n    onAsciiEncoding() {\r\n        const values = [];\r\n        for (const value of this.valueBlock.value) {\r\n            values.push(value.toString(\"ascii\").split(\"\\n\").map(o => `  ${o}`).join(\"\\n\"));\r\n        }\r\n        const blockName = this.idBlock.tagClass === 3\r\n            ? `[${this.idBlock.tagNumber}]`\r\n            : this.constructor.NAME;\r\n        return values.length\r\n            ? `${blockName} :\\n${values.join(\"\\n\")}`\r\n            : `${blockName} :`;\r\n    }\r\n}\r\n_a$v = Constructed;\r\n(() => {\r\n    typeStore.Constructed = _a$v;\r\n})();\r\nConstructed.NAME = \"CONSTRUCTED\";\n\nclass LocalEndOfContentValueBlock extends ValueBlock {\r\n    fromBER(inputBuffer, inputOffset, inputLength) {\r\n        return inputOffset;\r\n    }\r\n    toBER(sizeOnly) {\r\n        return EMPTY_BUFFER;\r\n    }\r\n}\r\nLocalEndOfContentValueBlock.override = \"EndOfContentValueBlock\";\n\nvar _a$u;\r\nclass EndOfContent extends BaseBlock {\r\n    constructor(parameters = {}) {\r\n        super(parameters, LocalEndOfContentValueBlock);\r\n        this.idBlock.tagClass = 1;\r\n        this.idBlock.tagNumber = 0;\r\n    }\r\n}\r\n_a$u = EndOfContent;\r\n(() => {\r\n    typeStore.EndOfContent = _a$u;\r\n})();\r\nEndOfContent.NAME = END_OF_CONTENT_NAME;\n\nvar _a$t;\r\nclass Null extends BaseBlock {\r\n    constructor(parameters = {}) {\r\n        super(parameters, ValueBlock);\r\n        this.idBlock.tagClass = 1;\r\n        this.idBlock.tagNumber = 5;\r\n    }\r\n    fromBER(inputBuffer, inputOffset, inputLength) {\r\n        if (this.lenBlock.length > 0)\r\n            this.warnings.push(\"Non-zero length of value block for Null type\");\r\n        if (!this.idBlock.error.length)\r\n            this.blockLength += this.idBlock.blockLength;\r\n        if (!this.lenBlock.error.length)\r\n            this.blockLength += this.lenBlock.blockLength;\r\n        this.blockLength += inputLength;\r\n        if ((inputOffset + inputLength) > inputBuffer.byteLength) {\r\n            this.error = \"End of input reached before message was fully decoded (inconsistent offset and length values)\";\r\n            return -1;\r\n        }\r\n        return (inputOffset + inputLength);\r\n    }\r\n    toBER(sizeOnly, writer) {\r\n        const retBuf = new ArrayBuffer(2);\r\n        if (!sizeOnly) {\r\n            const retView = new Uint8Array(retBuf);\r\n            retView[0] = 0x05;\r\n            retView[1] = 0x00;\r\n        }\r\n        if (writer) {\r\n            writer.write(retBuf);\r\n        }\r\n        return retBuf;\r\n    }\r\n    onAsciiEncoding() {\r\n        return `${this.constructor.NAME}`;\r\n    }\r\n}\r\n_a$t = Null;\r\n(() => {\r\n    typeStore.Null = _a$t;\r\n})();\r\nNull.NAME = \"NULL\";\n\nclass LocalBooleanValueBlock extends HexBlock(ValueBlock) {\r\n    constructor({ value, ...parameters } = {}) {\r\n        super(parameters);\r\n        if (parameters.valueHex) {\r\n            this.valueHexView = pvtsutils.BufferSourceConverter.toUint8Array(parameters.valueHex);\r\n        }\r\n        else {\r\n            this.valueHexView = new Uint8Array(1);\r\n        }\r\n        if (value) {\r\n            this.value = value;\r\n        }\r\n    }\r\n    get value() {\r\n        for (const octet of this.valueHexView) {\r\n            if (octet > 0) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    set value(value) {\r\n        this.valueHexView[0] = value ? 0xFF : 0x00;\r\n    }\r\n    fromBER(inputBuffer, inputOffset, inputLength) {\r\n        const inputView = pvtsutils.BufferSourceConverter.toUint8Array(inputBuffer);\r\n        if (!checkBufferParams(this, inputView, inputOffset, inputLength)) {\r\n            return -1;\r\n        }\r\n        this.valueHexView = inputView.subarray(inputOffset, inputOffset + inputLength);\r\n        if (inputLength > 1)\r\n            this.warnings.push(\"Boolean value encoded in more then 1 octet\");\r\n        this.isHexOnly = true;\r\n        pvutils.utilDecodeTC.call(this);\r\n        this.blockLength = inputLength;\r\n        return (inputOffset + inputLength);\r\n    }\r\n    toBER() {\r\n        return this.valueHexView.slice();\r\n    }\r\n    toJSON() {\r\n        return {\r\n            ...super.toJSON(),\r\n            value: this.value,\r\n        };\r\n    }\r\n}\r\nLocalBooleanValueBlock.NAME = \"BooleanValueBlock\";\n\nvar _a$s;\r\nclass Boolean extends BaseBlock {\r\n    constructor(parameters = {}) {\r\n        super(parameters, LocalBooleanValueBlock);\r\n        this.idBlock.tagClass = 1;\r\n        this.idBlock.tagNumber = 1;\r\n    }\r\n    getValue() {\r\n        return this.valueBlock.value;\r\n    }\r\n    setValue(value) {\r\n        this.valueBlock.value = value;\r\n    }\r\n    onAsciiEncoding() {\r\n        return `${this.constructor.NAME} : ${this.getValue}`;\r\n    }\r\n}\r\n_a$s = Boolean;\r\n(() => {\r\n    typeStore.Boolean = _a$s;\r\n})();\r\nBoolean.NAME = \"BOOLEAN\";\n\nclass LocalOctetStringValueBlock extends HexBlock(LocalConstructedValueBlock) {\r\n    constructor({ isConstructed = false, ...parameters } = {}) {\r\n        super(parameters);\r\n        this.isConstructed = isConstructed;\r\n    }\r\n    fromBER(inputBuffer, inputOffset, inputLength) {\r\n        let resultOffset = 0;\r\n        if (this.isConstructed) {\r\n            this.isHexOnly = false;\r\n            resultOffset = LocalConstructedValueBlock.prototype.fromBER.call(this, inputBuffer, inputOffset, inputLength);\r\n            if (resultOffset === -1)\r\n                return resultOffset;\r\n            for (let i = 0; i < this.value.length; i++) {\r\n                const currentBlockName = this.value[i].constructor.NAME;\r\n                if (currentBlockName === END_OF_CONTENT_NAME) {\r\n                    if (this.isIndefiniteForm)\r\n                        break;\r\n                    else {\r\n                        this.error = \"EndOfContent is unexpected, OCTET STRING may consists of OCTET STRINGs only\";\r\n                        return -1;\r\n                    }\r\n                }\r\n                if (currentBlockName !== OCTET_STRING_NAME) {\r\n                    this.error = \"OCTET STRING may consists of OCTET STRINGs only\";\r\n                    return -1;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            this.isHexOnly = true;\r\n            resultOffset = super.fromBER(inputBuffer, inputOffset, inputLength);\r\n            this.blockLength = inputLength;\r\n        }\r\n        return resultOffset;\r\n    }\r\n    toBER(sizeOnly, writer) {\r\n        if (this.isConstructed)\r\n            return LocalConstructedValueBlock.prototype.toBER.call(this, sizeOnly, writer);\r\n        return sizeOnly\r\n            ? new ArrayBuffer(this.valueHexView.byteLength)\r\n            : this.valueHexView.slice().buffer;\r\n    }\r\n    toJSON() {\r\n        return {\r\n            ...super.toJSON(),\r\n            isConstructed: this.isConstructed,\r\n        };\r\n    }\r\n}\r\nLocalOctetStringValueBlock.NAME = \"OctetStringValueBlock\";\n\nvar _a$r;\r\nclass OctetString extends BaseBlock {\r\n    constructor({ idBlock = {}, lenBlock = {}, ...parameters } = {}) {\r\n        var _b, _c;\r\n        (_b = parameters.isConstructed) !== null && _b !== void 0 ? _b : (parameters.isConstructed = !!((_c = parameters.value) === null || _c === void 0 ? void 0 : _c.length));\r\n        super({\r\n            idBlock: {\r\n                isConstructed: parameters.isConstructed,\r\n                ...idBlock,\r\n            },\r\n            lenBlock: {\r\n                ...lenBlock,\r\n                isIndefiniteForm: !!parameters.isIndefiniteForm,\r\n            },\r\n            ...parameters,\r\n        }, LocalOctetStringValueBlock);\r\n        this.idBlock.tagClass = 1;\r\n        this.idBlock.tagNumber = 4;\r\n    }\r\n    fromBER(inputBuffer, inputOffset, inputLength) {\r\n        this.valueBlock.isConstructed = this.idBlock.isConstructed;\r\n        this.valueBlock.isIndefiniteForm = this.lenBlock.isIndefiniteForm;\r\n        if (inputLength === 0) {\r\n            if (this.idBlock.error.length === 0)\r\n                this.blockLength += this.idBlock.blockLength;\r\n            if (this.lenBlock.error.length === 0)\r\n                this.blockLength += this.lenBlock.blockLength;\r\n            return inputOffset;\r\n        }\r\n        if (!this.valueBlock.isConstructed) {\r\n            const view = inputBuffer instanceof ArrayBuffer ? new Uint8Array(inputBuffer) : inputBuffer;\r\n            const buf = view.subarray(inputOffset, inputOffset + inputLength);\r\n            try {\r\n                if (buf.byteLength) {\r\n                    const asn = localFromBER(buf, 0, buf.byteLength);\r\n                    if (asn.offset !== -1 && asn.offset === inputLength) {\r\n                        this.valueBlock.value = [asn.result];\r\n                    }\r\n                }\r\n            }\r\n            catch (e) {\r\n            }\r\n        }\r\n        return super.fromBER(inputBuffer, inputOffset, inputLength);\r\n    }\r\n    onAsciiEncoding() {\r\n        if (this.valueBlock.isConstructed || (this.valueBlock.value && this.valueBlock.value.length)) {\r\n            return Constructed.prototype.onAsciiEncoding.call(this);\r\n        }\r\n        return `${this.constructor.NAME} : ${pvtsutils.Convert.ToHex(this.valueBlock.valueHexView)}`;\r\n    }\r\n    getValue() {\r\n        if (!this.idBlock.isConstructed) {\r\n            return this.valueBlock.valueHexView.slice().buffer;\r\n        }\r\n        const array = [];\r\n        for (const content of this.valueBlock.value) {\r\n            if (content instanceof OctetString) {\r\n                array.push(content.valueBlock.valueHexView);\r\n            }\r\n        }\r\n        return pvtsutils.BufferSourceConverter.concat(array);\r\n    }\r\n}\r\n_a$r = OctetString;\r\n(() => {\r\n    typeStore.OctetString = _a$r;\r\n})();\r\nOctetString.NAME = OCTET_STRING_NAME;\n\nclass LocalBitStringValueBlock extends HexBlock(LocalConstructedValueBlock) {\r\n    constructor({ unusedBits = 0, isConstructed = false, ...parameters } = {}) {\r\n        super(parameters);\r\n        this.unusedBits = unusedBits;\r\n        this.isConstructed = isConstructed;\r\n        this.blockLength = this.valueHexView.byteLength;\r\n    }\r\n    fromBER(inputBuffer, inputOffset, inputLength) {\r\n        if (!inputLength) {\r\n            return inputOffset;\r\n        }\r\n        let resultOffset = -1;\r\n        if (this.isConstructed) {\r\n            resultOffset = LocalConstructedValueBlock.prototype.fromBER.call(this, inputBuffer, inputOffset, inputLength);\r\n            if (resultOffset === -1)\r\n                return resultOffset;\r\n            for (const value of this.value) {\r\n                const currentBlockName = value.constructor.NAME;\r\n                if (currentBlockName === END_OF_CONTENT_NAME) {\r\n                    if (this.isIndefiniteForm)\r\n                        break;\r\n                    else {\r\n                        this.error = \"EndOfContent is unexpected, BIT STRING may consists of BIT STRINGs only\";\r\n                        return -1;\r\n                    }\r\n                }\r\n                if (currentBlockName !== BIT_STRING_NAME) {\r\n                    this.error = \"BIT STRING may consists of BIT STRINGs only\";\r\n                    return -1;\r\n                }\r\n                const valueBlock = value.valueBlock;\r\n                if ((this.unusedBits > 0) && (valueBlock.unusedBits > 0)) {\r\n                    this.error = \"Using of \\\"unused bits\\\" inside constructive BIT STRING allowed for least one only\";\r\n                    return -1;\r\n                }\r\n                this.unusedBits = valueBlock.unusedBits;\r\n            }\r\n            return resultOffset;\r\n        }\r\n        const inputView = pvtsutils.BufferSourceConverter.toUint8Array(inputBuffer);\r\n        if (!checkBufferParams(this, inputView, inputOffset, inputLength)) {\r\n            return -1;\r\n        }\r\n        const intBuffer = inputView.subarray(inputOffset, inputOffset + inputLength);\r\n        this.unusedBits = intBuffer[0];\r\n        if (this.unusedBits > 7) {\r\n            this.error = \"Unused bits for BitString must be in range 0-7\";\r\n            return -1;\r\n        }\r\n        if (!this.unusedBits) {\r\n            const buf = intBuffer.subarray(1);\r\n            try {\r\n                if (buf.byteLength) {\r\n                    const asn = localFromBER(buf, 0, buf.byteLength);\r\n                    if (asn.offset !== -1 && asn.offset === (inputLength - 1)) {\r\n                        this.value = [asn.result];\r\n                    }\r\n                }\r\n            }\r\n            catch (e) {\r\n            }\r\n        }\r\n        this.valueHexView = intBuffer.subarray(1);\r\n        this.blockLength = intBuffer.length;\r\n        return (inputOffset + inputLength);\r\n    }\r\n    toBER(sizeOnly, writer) {\r\n        if (this.isConstructed) {\r\n            return LocalConstructedValueBlock.prototype.toBER.call(this, sizeOnly, writer);\r\n        }\r\n        if (sizeOnly) {\r\n            return new ArrayBuffer(this.valueHexView.byteLength + 1);\r\n        }\r\n        if (!this.valueHexView.byteLength) {\r\n            return EMPTY_BUFFER;\r\n        }\r\n        const retView = new Uint8Array(this.valueHexView.length + 1);\r\n        retView[0] = this.unusedBits;\r\n        retView.set(this.valueHexView, 1);\r\n        return retView.buffer;\r\n    }\r\n    toJSON() {\r\n        return {\r\n            ...super.toJSON(),\r\n            unusedBits: this.unusedBits,\r\n            isConstructed: this.isConstructed,\r\n        };\r\n    }\r\n}\r\nLocalBitStringValueBlock.NAME = \"BitStringValueBlock\";\n\nvar _a$q;\r\nclass BitString extends BaseBlock {\r\n    constructor({ idBlock = {}, lenBlock = {}, ...parameters } = {}) {\r\n        var _b, _c;\r\n        (_b = parameters.isConstructed) !== null && _b !== void 0 ? _b : (parameters.isConstructed = !!((_c = parameters.value) === null || _c === void 0 ? void 0 : _c.length));\r\n        super({\r\n            idBlock: {\r\n                isConstructed: parameters.isConstructed,\r\n                ...idBlock,\r\n            },\r\n            lenBlock: {\r\n                ...lenBlock,\r\n                isIndefiniteForm: !!parameters.isIndefiniteForm,\r\n            },\r\n            ...parameters,\r\n        }, LocalBitStringValueBlock);\r\n        this.idBlock.tagClass = 1;\r\n        this.idBlock.tagNumber = 3;\r\n    }\r\n    fromBER(inputBuffer, inputOffset, inputLength) {\r\n        this.valueBlock.isConstructed = this.idBlock.isConstructed;\r\n        this.valueBlock.isIndefiniteForm = this.lenBlock.isIndefiniteForm;\r\n        return super.fromBER(inputBuffer, inputOffset, inputLength);\r\n    }\r\n    onAsciiEncoding() {\r\n        if (this.valueBlock.isConstructed || (this.valueBlock.value && this.valueBlock.value.length)) {\r\n            return Constructed.prototype.onAsciiEncoding.call(this);\r\n        }\r\n        else {\r\n            const bits = [];\r\n            const valueHex = this.valueBlock.valueHexView;\r\n            for (const byte of valueHex) {\r\n                bits.push(byte.toString(2).padStart(8, \"0\"));\r\n            }\r\n            const bitsStr = bits.join(\"\");\r\n            return `${this.constructor.NAME} : ${bitsStr.substring(0, bitsStr.length - this.valueBlock.unusedBits)}`;\r\n        }\r\n    }\r\n}\r\n_a$q = BitString;\r\n(() => {\r\n    typeStore.BitString = _a$q;\r\n})();\r\nBitString.NAME = BIT_STRING_NAME;\n\nvar _a$p;\r\nfunction viewAdd(first, second) {\r\n    const c = new Uint8Array([0]);\r\n    const firstView = new Uint8Array(first);\r\n    const secondView = new Uint8Array(second);\r\n    let firstViewCopy = firstView.slice(0);\r\n    const firstViewCopyLength = firstViewCopy.length - 1;\r\n    const secondViewCopy = secondView.slice(0);\r\n    const secondViewCopyLength = secondViewCopy.length - 1;\r\n    let value = 0;\r\n    const max = (secondViewCopyLength < firstViewCopyLength) ? firstViewCopyLength : secondViewCopyLength;\r\n    let counter = 0;\r\n    for (let i = max; i >= 0; i--, counter++) {\r\n        switch (true) {\r\n            case (counter < secondViewCopy.length):\r\n                value = firstViewCopy[firstViewCopyLength - counter] + secondViewCopy[secondViewCopyLength - counter] + c[0];\r\n                break;\r\n            default:\r\n                value = firstViewCopy[firstViewCopyLength - counter] + c[0];\r\n        }\r\n        c[0] = value / 10;\r\n        switch (true) {\r\n            case (counter >= firstViewCopy.length):\r\n                firstViewCopy = pvutils.utilConcatView(new Uint8Array([value % 10]), firstViewCopy);\r\n                break;\r\n            default:\r\n                firstViewCopy[firstViewCopyLength - counter] = value % 10;\r\n        }\r\n    }\r\n    if (c[0] > 0)\r\n        firstViewCopy = pvutils.utilConcatView(c, firstViewCopy);\r\n    return firstViewCopy;\r\n}\r\nfunction power2(n) {\r\n    if (n >= powers2.length) {\r\n        for (let p = powers2.length; p <= n; p++) {\r\n            const c = new Uint8Array([0]);\r\n            let digits = (powers2[p - 1]).slice(0);\r\n            for (let i = (digits.length - 1); i >= 0; i--) {\r\n                const newValue = new Uint8Array([(digits[i] << 1) + c[0]]);\r\n                c[0] = newValue[0] / 10;\r\n                digits[i] = newValue[0] % 10;\r\n            }\r\n            if (c[0] > 0)\r\n                digits = pvutils.utilConcatView(c, digits);\r\n            powers2.push(digits);\r\n        }\r\n    }\r\n    return powers2[n];\r\n}\r\nfunction viewSub(first, second) {\r\n    let b = 0;\r\n    const firstView = new Uint8Array(first);\r\n    const secondView = new Uint8Array(second);\r\n    const firstViewCopy = firstView.slice(0);\r\n    const firstViewCopyLength = firstViewCopy.length - 1;\r\n    const secondViewCopy = secondView.slice(0);\r\n    const secondViewCopyLength = secondViewCopy.length - 1;\r\n    let value;\r\n    let counter = 0;\r\n    for (let i = secondViewCopyLength; i >= 0; i--, counter++) {\r\n        value = firstViewCopy[firstViewCopyLength - counter] - secondViewCopy[secondViewCopyLength - counter] - b;\r\n        switch (true) {\r\n            case (value < 0):\r\n                b = 1;\r\n                firstViewCopy[firstViewCopyLength - counter] = value + 10;\r\n                break;\r\n            default:\r\n                b = 0;\r\n                firstViewCopy[firstViewCopyLength - counter] = value;\r\n        }\r\n    }\r\n    if (b > 0) {\r\n        for (let i = (firstViewCopyLength - secondViewCopyLength + 1); i >= 0; i--, counter++) {\r\n            value = firstViewCopy[firstViewCopyLength - counter] - b;\r\n            if (value < 0) {\r\n                b = 1;\r\n                firstViewCopy[firstViewCopyLength - counter] = value + 10;\r\n            }\r\n            else {\r\n                b = 0;\r\n                firstViewCopy[firstViewCopyLength - counter] = value;\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    return firstViewCopy.slice();\r\n}\r\nclass LocalIntegerValueBlock extends HexBlock(ValueBlock) {\r\n    constructor({ value, ...parameters } = {}) {\r\n        super(parameters);\r\n        this._valueDec = 0;\r\n        if (parameters.valueHex) {\r\n            this.setValueHex();\r\n        }\r\n        if (value !== undefined) {\r\n            this.valueDec = value;\r\n        }\r\n    }\r\n    setValueHex() {\r\n        if (this.valueHexView.length >= 4) {\r\n            this.warnings.push(\"Too big Integer for decoding, hex only\");\r\n            this.isHexOnly = true;\r\n            this._valueDec = 0;\r\n        }\r\n        else {\r\n            this.isHexOnly = false;\r\n            if (this.valueHexView.length > 0) {\r\n                this._valueDec = pvutils.utilDecodeTC.call(this);\r\n            }\r\n        }\r\n    }\r\n    set valueDec(v) {\r\n        this._valueDec = v;\r\n        this.isHexOnly = false;\r\n        this.valueHexView = new Uint8Array(pvutils.utilEncodeTC(v));\r\n    }\r\n    get valueDec() {\r\n        return this._valueDec;\r\n    }\r\n    fromDER(inputBuffer, inputOffset, inputLength, expectedLength = 0) {\r\n        const offset = this.fromBER(inputBuffer, inputOffset, inputLength);\r\n        if (offset === -1)\r\n            return offset;\r\n        const view = this.valueHexView;\r\n        if ((view[0] === 0x00) && ((view[1] & 0x80) !== 0)) {\r\n            this.valueHexView = view.subarray(1);\r\n        }\r\n        else {\r\n            if (expectedLength !== 0) {\r\n                if (view.length < expectedLength) {\r\n                    if ((expectedLength - view.length) > 1)\r\n                        expectedLength = view.length + 1;\r\n                    this.valueHexView = view.subarray(expectedLength - view.length);\r\n                }\r\n            }\r\n        }\r\n        return offset;\r\n    }\r\n    toDER(sizeOnly = false) {\r\n        const view = this.valueHexView;\r\n        switch (true) {\r\n            case ((view[0] & 0x80) !== 0):\r\n                {\r\n                    const updatedView = new Uint8Array(this.valueHexView.length + 1);\r\n                    updatedView[0] = 0x00;\r\n                    updatedView.set(view, 1);\r\n                    this.valueHexView = updatedView;\r\n                }\r\n                break;\r\n            case ((view[0] === 0x00) && ((view[1] & 0x80) === 0)):\r\n                {\r\n                    this.valueHexView = this.valueHexView.subarray(1);\r\n                }\r\n                break;\r\n        }\r\n        return this.toBER(sizeOnly);\r\n    }\r\n    fromBER(inputBuffer, inputOffset, inputLength) {\r\n        const resultOffset = super.fromBER(inputBuffer, inputOffset, inputLength);\r\n        if (resultOffset === -1) {\r\n            return resultOffset;\r\n        }\r\n        this.setValueHex();\r\n        return resultOffset;\r\n    }\r\n    toBER(sizeOnly) {\r\n        return sizeOnly\r\n            ? new ArrayBuffer(this.valueHexView.length)\r\n            : this.valueHexView.slice().buffer;\r\n    }\r\n    toJSON() {\r\n        return {\r\n            ...super.toJSON(),\r\n            valueDec: this.valueDec,\r\n        };\r\n    }\r\n    toString() {\r\n        const firstBit = (this.valueHexView.length * 8) - 1;\r\n        let digits = new Uint8Array((this.valueHexView.length * 8) / 3);\r\n        let bitNumber = 0;\r\n        let currentByte;\r\n        const asn1View = this.valueHexView;\r\n        let result = \"\";\r\n        let flag = false;\r\n        for (let byteNumber = (asn1View.byteLength - 1); byteNumber >= 0; byteNumber--) {\r\n            currentByte = asn1View[byteNumber];\r\n            for (let i = 0; i < 8; i++) {\r\n                if ((currentByte & 1) === 1) {\r\n                    switch (bitNumber) {\r\n                        case firstBit:\r\n                            digits = viewSub(power2(bitNumber), digits);\r\n                            result = \"-\";\r\n                            break;\r\n                        default:\r\n                            digits = viewAdd(digits, power2(bitNumber));\r\n                    }\r\n                }\r\n                bitNumber++;\r\n                currentByte >>= 1;\r\n            }\r\n        }\r\n        for (let i = 0; i < digits.length; i++) {\r\n            if (digits[i])\r\n                flag = true;\r\n            if (flag)\r\n                result += digitsString.charAt(digits[i]);\r\n        }\r\n        if (flag === false)\r\n            result += digitsString.charAt(0);\r\n        return result;\r\n    }\r\n}\r\n_a$p = LocalIntegerValueBlock;\r\nLocalIntegerValueBlock.NAME = \"IntegerValueBlock\";\r\n(() => {\r\n    Object.defineProperty(_a$p.prototype, \"valueHex\", {\r\n        set: function (v) {\r\n            this.valueHexView = new Uint8Array(v);\r\n            this.setValueHex();\r\n        },\r\n        get: function () {\r\n            return this.valueHexView.slice().buffer;\r\n        },\r\n    });\r\n})();\n\nvar _a$o;\r\nclass Integer extends BaseBlock {\r\n    constructor(parameters = {}) {\r\n        super(parameters, LocalIntegerValueBlock);\r\n        this.idBlock.tagClass = 1;\r\n        this.idBlock.tagNumber = 2;\r\n    }\r\n    toBigInt() {\r\n        assertBigInt();\r\n        return BigInt(this.valueBlock.toString());\r\n    }\r\n    static fromBigInt(value) {\r\n        assertBigInt();\r\n        const bigIntValue = BigInt(value);\r\n        const writer = new ViewWriter();\r\n        const hex = bigIntValue.toString(16).replace(/^-/, \"\");\r\n        const view = new Uint8Array(pvtsutils.Convert.FromHex(hex));\r\n        if (bigIntValue < 0) {\r\n            const first = new Uint8Array(view.length + (view[0] & 0x80 ? 1 : 0));\r\n            first[0] |= 0x80;\r\n            const firstInt = BigInt(`0x${pvtsutils.Convert.ToHex(first)}`);\r\n            const secondInt = firstInt + bigIntValue;\r\n            const second = pvtsutils.BufferSourceConverter.toUint8Array(pvtsutils.Convert.FromHex(secondInt.toString(16)));\r\n            second[0] |= 0x80;\r\n            writer.write(second);\r\n        }\r\n        else {\r\n            if (view[0] & 0x80) {\r\n                writer.write(new Uint8Array([0]));\r\n            }\r\n            writer.write(view);\r\n        }\r\n        const res = new Integer({\r\n            valueHex: writer.final(),\r\n        });\r\n        return res;\r\n    }\r\n    convertToDER() {\r\n        const integer = new Integer({ valueHex: this.valueBlock.valueHexView });\r\n        integer.valueBlock.toDER();\r\n        return integer;\r\n    }\r\n    convertFromDER() {\r\n        return new Integer({\r\n            valueHex: this.valueBlock.valueHexView[0] === 0\r\n                ? this.valueBlock.valueHexView.subarray(1)\r\n                : this.valueBlock.valueHexView,\r\n        });\r\n    }\r\n    onAsciiEncoding() {\r\n        return `${this.constructor.NAME} : ${this.valueBlock.toString()}`;\r\n    }\r\n}\r\n_a$o = Integer;\r\n(() => {\r\n    typeStore.Integer = _a$o;\r\n})();\r\nInteger.NAME = \"INTEGER\";\n\nvar _a$n;\r\nclass Enumerated extends Integer {\r\n    constructor(parameters = {}) {\r\n        super(parameters);\r\n        this.idBlock.tagClass = 1;\r\n        this.idBlock.tagNumber = 10;\r\n    }\r\n}\r\n_a$n = Enumerated;\r\n(() => {\r\n    typeStore.Enumerated = _a$n;\r\n})();\r\nEnumerated.NAME = \"ENUMERATED\";\n\nclass LocalSidValueBlock extends HexBlock(ValueBlock) {\r\n    constructor({ valueDec = -1, isFirstSid = false, ...parameters } = {}) {\r\n        super(parameters);\r\n        this.valueDec = valueDec;\r\n        this.isFirstSid = isFirstSid;\r\n    }\r\n    fromBER(inputBuffer, inputOffset, inputLength) {\r\n        if (!inputLength) {\r\n            return inputOffset;\r\n        }\r\n        const inputView = pvtsutils.BufferSourceConverter.toUint8Array(inputBuffer);\r\n        if (!checkBufferParams(this, inputView, inputOffset, inputLength)) {\r\n            return -1;\r\n        }\r\n        const intBuffer = inputView.subarray(inputOffset, inputOffset + inputLength);\r\n        this.valueHexView = new Uint8Array(inputLength);\r\n        for (let i = 0; i < inputLength; i++) {\r\n            this.valueHexView[i] = intBuffer[i] & 0x7F;\r\n            this.blockLength++;\r\n            if ((intBuffer[i] & 0x80) === 0x00)\r\n                break;\r\n        }\r\n        const tempView = new Uint8Array(this.blockLength);\r\n        for (let i = 0; i < this.blockLength; i++) {\r\n            tempView[i] = this.valueHexView[i];\r\n        }\r\n        this.valueHexView = tempView;\r\n        if ((intBuffer[this.blockLength - 1] & 0x80) !== 0x00) {\r\n            this.error = \"End of input reached before message was fully decoded\";\r\n            return -1;\r\n        }\r\n        if (this.valueHexView[0] === 0x00)\r\n            this.warnings.push(\"Needlessly long format of SID encoding\");\r\n        if (this.blockLength <= 8)\r\n            this.valueDec = pvutils.utilFromBase(this.valueHexView, 7);\r\n        else {\r\n            this.isHexOnly = true;\r\n            this.warnings.push(\"Too big SID for decoding, hex only\");\r\n        }\r\n        return (inputOffset + this.blockLength);\r\n    }\r\n    set valueBigInt(value) {\r\n        assertBigInt();\r\n        let bits = BigInt(value).toString(2);\r\n        while (bits.length % 7) {\r\n            bits = \"0\" + bits;\r\n        }\r\n        const bytes = new Uint8Array(bits.length / 7);\r\n        for (let i = 0; i < bytes.length; i++) {\r\n            bytes[i] = parseInt(bits.slice(i * 7, i * 7 + 7), 2) + (i + 1 < bytes.length ? 0x80 : 0);\r\n        }\r\n        this.fromBER(bytes.buffer, 0, bytes.length);\r\n    }\r\n    toBER(sizeOnly) {\r\n        if (this.isHexOnly) {\r\n            if (sizeOnly)\r\n                return (new ArrayBuffer(this.valueHexView.byteLength));\r\n            const curView = this.valueHexView;\r\n            const retView = new Uint8Array(this.blockLength);\r\n            for (let i = 0; i < (this.blockLength - 1); i++)\r\n                retView[i] = curView[i] | 0x80;\r\n            retView[this.blockLength - 1] = curView[this.blockLength - 1];\r\n            return retView.buffer;\r\n        }\r\n        const encodedBuf = pvutils.utilToBase(this.valueDec, 7);\r\n        if (encodedBuf.byteLength === 0) {\r\n            this.error = \"Error during encoding SID value\";\r\n            return EMPTY_BUFFER;\r\n        }\r\n        const retView = new Uint8Array(encodedBuf.byteLength);\r\n        if (!sizeOnly) {\r\n            const encodedView = new Uint8Array(encodedBuf);\r\n            const len = encodedBuf.byteLength - 1;\r\n            for (let i = 0; i < len; i++)\r\n                retView[i] = encodedView[i] | 0x80;\r\n            retView[len] = encodedView[len];\r\n        }\r\n        return retView;\r\n    }\r\n    toString() {\r\n        let result = \"\";\r\n        if (this.isHexOnly)\r\n            result = pvtsutils.Convert.ToHex(this.valueHexView);\r\n        else {\r\n            if (this.isFirstSid) {\r\n                let sidValue = this.valueDec;\r\n                if (this.valueDec <= 39)\r\n                    result = \"0.\";\r\n                else {\r\n                    if (this.valueDec <= 79) {\r\n                        result = \"1.\";\r\n                        sidValue -= 40;\r\n                    }\r\n                    else {\r\n                        result = \"2.\";\r\n                        sidValue -= 80;\r\n                    }\r\n                }\r\n                result += sidValue.toString();\r\n            }\r\n            else\r\n                result = this.valueDec.toString();\r\n        }\r\n        return result;\r\n    }\r\n    toJSON() {\r\n        return {\r\n            ...super.toJSON(),\r\n            valueDec: this.valueDec,\r\n            isFirstSid: this.isFirstSid,\r\n        };\r\n    }\r\n}\r\nLocalSidValueBlock.NAME = \"sidBlock\";\n\nclass LocalObjectIdentifierValueBlock extends ValueBlock {\r\n    constructor({ value = EMPTY_STRING, ...parameters } = {}) {\r\n        super(parameters);\r\n        this.value = [];\r\n        if (value) {\r\n            this.fromString(value);\r\n        }\r\n    }\r\n    fromBER(inputBuffer, inputOffset, inputLength) {\r\n        let resultOffset = inputOffset;\r\n        while (inputLength > 0) {\r\n            const sidBlock = new LocalSidValueBlock();\r\n            resultOffset = sidBlock.fromBER(inputBuffer, resultOffset, inputLength);\r\n            if (resultOffset === -1) {\r\n                this.blockLength = 0;\r\n                this.error = sidBlock.error;\r\n                return resultOffset;\r\n            }\r\n            if (this.value.length === 0)\r\n                sidBlock.isFirstSid = true;\r\n            this.blockLength += sidBlock.blockLength;\r\n            inputLength -= sidBlock.blockLength;\r\n            this.value.push(sidBlock);\r\n        }\r\n        return resultOffset;\r\n    }\r\n    toBER(sizeOnly) {\r\n        const retBuffers = [];\r\n        for (let i = 0; i < this.value.length; i++) {\r\n            const valueBuf = this.value[i].toBER(sizeOnly);\r\n            if (valueBuf.byteLength === 0) {\r\n                this.error = this.value[i].error;\r\n                return EMPTY_BUFFER;\r\n            }\r\n            retBuffers.push(valueBuf);\r\n        }\r\n        return concat(retBuffers);\r\n    }\r\n    fromString(string) {\r\n        this.value = [];\r\n        let pos1 = 0;\r\n        let pos2 = 0;\r\n        let sid = \"\";\r\n        let flag = false;\r\n        do {\r\n            pos2 = string.indexOf(\".\", pos1);\r\n            if (pos2 === -1)\r\n                sid = string.substring(pos1);\r\n            else\r\n                sid = string.substring(pos1, pos2);\r\n            pos1 = pos2 + 1;\r\n            if (flag) {\r\n                const sidBlock = this.value[0];\r\n                let plus = 0;\r\n                switch (sidBlock.valueDec) {\r\n                    case 0:\r\n                        break;\r\n                    case 1:\r\n                        plus = 40;\r\n                        break;\r\n                    case 2:\r\n                        plus = 80;\r\n                        break;\r\n                    default:\r\n                        this.value = [];\r\n                        return;\r\n                }\r\n                const parsedSID = parseInt(sid, 10);\r\n                if (isNaN(parsedSID))\r\n                    return;\r\n                sidBlock.valueDec = parsedSID + plus;\r\n                flag = false;\r\n            }\r\n            else {\r\n                const sidBlock = new LocalSidValueBlock();\r\n                if (sid > Number.MAX_SAFE_INTEGER) {\r\n                    assertBigInt();\r\n                    const sidValue = BigInt(sid);\r\n                    sidBlock.valueBigInt = sidValue;\r\n                }\r\n                else {\r\n                    sidBlock.valueDec = parseInt(sid, 10);\r\n                    if (isNaN(sidBlock.valueDec))\r\n                        return;\r\n                }\r\n                if (!this.value.length) {\r\n                    sidBlock.isFirstSid = true;\r\n                    flag = true;\r\n                }\r\n                this.value.push(sidBlock);\r\n            }\r\n        } while (pos2 !== -1);\r\n    }\r\n    toString() {\r\n        let result = \"\";\r\n        let isHexOnly = false;\r\n        for (let i = 0; i < this.value.length; i++) {\r\n            isHexOnly = this.value[i].isHexOnly;\r\n            let sidStr = this.value[i].toString();\r\n            if (i !== 0)\r\n                result = `${result}.`;\r\n            if (isHexOnly) {\r\n                sidStr = `{${sidStr}}`;\r\n                if (this.value[i].isFirstSid)\r\n                    result = `2.{${sidStr} - 80}`;\r\n                else\r\n                    result += sidStr;\r\n            }\r\n            else\r\n                result += sidStr;\r\n        }\r\n        return result;\r\n    }\r\n    toJSON() {\r\n        const object = {\r\n            ...super.toJSON(),\r\n            value: this.toString(),\r\n            sidArray: [],\r\n        };\r\n        for (let i = 0; i < this.value.length; i++) {\r\n            object.sidArray.push(this.value[i].toJSON());\r\n        }\r\n        return object;\r\n    }\r\n}\r\nLocalObjectIdentifierValueBlock.NAME = \"ObjectIdentifierValueBlock\";\n\nvar _a$m;\r\nclass ObjectIdentifier extends BaseBlock {\r\n    constructor(parameters = {}) {\r\n        super(parameters, LocalObjectIdentifierValueBlock);\r\n        this.idBlock.tagClass = 1;\r\n        this.idBlock.tagNumber = 6;\r\n    }\r\n    getValue() {\r\n        return this.valueBlock.toString();\r\n    }\r\n    setValue(value) {\r\n        this.valueBlock.fromString(value);\r\n    }\r\n    onAsciiEncoding() {\r\n        return `${this.constructor.NAME} : ${this.valueBlock.toString() || \"empty\"}`;\r\n    }\r\n    toJSON() {\r\n        return {\r\n            ...super.toJSON(),\r\n            value: this.getValue(),\r\n        };\r\n    }\r\n}\r\n_a$m = ObjectIdentifier;\r\n(() => {\r\n    typeStore.ObjectIdentifier = _a$m;\r\n})();\r\nObjectIdentifier.NAME = \"OBJECT IDENTIFIER\";\n\nclass LocalRelativeSidValueBlock extends HexBlock(LocalBaseBlock) {\r\n    constructor({ valueDec = 0, ...parameters } = {}) {\r\n        super(parameters);\r\n        this.valueDec = valueDec;\r\n    }\r\n    fromBER(inputBuffer, inputOffset, inputLength) {\r\n        if (inputLength === 0)\r\n            return inputOffset;\r\n        const inputView = pvtsutils.BufferSourceConverter.toUint8Array(inputBuffer);\r\n        if (!checkBufferParams(this, inputView, inputOffset, inputLength))\r\n            return -1;\r\n        const intBuffer = inputView.subarray(inputOffset, inputOffset + inputLength);\r\n        this.valueHexView = new Uint8Array(inputLength);\r\n        for (let i = 0; i < inputLength; i++) {\r\n            this.valueHexView[i] = intBuffer[i] & 0x7F;\r\n            this.blockLength++;\r\n            if ((intBuffer[i] & 0x80) === 0x00)\r\n                break;\r\n        }\r\n        const tempView = new Uint8Array(this.blockLength);\r\n        for (let i = 0; i < this.blockLength; i++)\r\n            tempView[i] = this.valueHexView[i];\r\n        this.valueHexView = tempView;\r\n        if ((intBuffer[this.blockLength - 1] & 0x80) !== 0x00) {\r\n            this.error = \"End of input reached before message was fully decoded\";\r\n            return -1;\r\n        }\r\n        if (this.valueHexView[0] === 0x00)\r\n            this.warnings.push(\"Needlessly long format of SID encoding\");\r\n        if (this.blockLength <= 8)\r\n            this.valueDec = pvutils.utilFromBase(this.valueHexView, 7);\r\n        else {\r\n            this.isHexOnly = true;\r\n            this.warnings.push(\"Too big SID for decoding, hex only\");\r\n        }\r\n        return (inputOffset + this.blockLength);\r\n    }\r\n    toBER(sizeOnly) {\r\n        if (this.isHexOnly) {\r\n            if (sizeOnly)\r\n                return (new ArrayBuffer(this.valueHexView.byteLength));\r\n            const curView = this.valueHexView;\r\n            const retView = new Uint8Array(this.blockLength);\r\n            for (let i = 0; i < (this.blockLength - 1); i++)\r\n                retView[i] = curView[i] | 0x80;\r\n            retView[this.blockLength - 1] = curView[this.blockLength - 1];\r\n            return retView.buffer;\r\n        }\r\n        const encodedBuf = pvutils.utilToBase(this.valueDec, 7);\r\n        if (encodedBuf.byteLength === 0) {\r\n            this.error = \"Error during encoding SID value\";\r\n            return EMPTY_BUFFER;\r\n        }\r\n        const retView = new Uint8Array(encodedBuf.byteLength);\r\n        if (!sizeOnly) {\r\n            const encodedView = new Uint8Array(encodedBuf);\r\n            const len = encodedBuf.byteLength - 1;\r\n            for (let i = 0; i < len; i++)\r\n                retView[i] = encodedView[i] | 0x80;\r\n            retView[len] = encodedView[len];\r\n        }\r\n        return retView.buffer;\r\n    }\r\n    toString() {\r\n        let result = \"\";\r\n        if (this.isHexOnly)\r\n            result = pvtsutils.Convert.ToHex(this.valueHexView);\r\n        else {\r\n            result = this.valueDec.toString();\r\n        }\r\n        return result;\r\n    }\r\n    toJSON() {\r\n        return {\r\n            ...super.toJSON(),\r\n            valueDec: this.valueDec,\r\n        };\r\n    }\r\n}\r\nLocalRelativeSidValueBlock.NAME = \"relativeSidBlock\";\n\nclass LocalRelativeObjectIdentifierValueBlock extends ValueBlock {\r\n    constructor({ value = EMPTY_STRING, ...parameters } = {}) {\r\n        super(parameters);\r\n        this.value = [];\r\n        if (value) {\r\n            this.fromString(value);\r\n        }\r\n    }\r\n    fromBER(inputBuffer, inputOffset, inputLength) {\r\n        let resultOffset = inputOffset;\r\n        while (inputLength > 0) {\r\n            const sidBlock = new LocalRelativeSidValueBlock();\r\n            resultOffset = sidBlock.fromBER(inputBuffer, resultOffset, inputLength);\r\n            if (resultOffset === -1) {\r\n                this.blockLength = 0;\r\n                this.error = sidBlock.error;\r\n                return resultOffset;\r\n            }\r\n            this.blockLength += sidBlock.blockLength;\r\n            inputLength -= sidBlock.blockLength;\r\n            this.value.push(sidBlock);\r\n        }\r\n        return resultOffset;\r\n    }\r\n    toBER(sizeOnly, writer) {\r\n        const retBuffers = [];\r\n        for (let i = 0; i < this.value.length; i++) {\r\n            const valueBuf = this.value[i].toBER(sizeOnly);\r\n            if (valueBuf.byteLength === 0) {\r\n                this.error = this.value[i].error;\r\n                return EMPTY_BUFFER;\r\n            }\r\n            retBuffers.push(valueBuf);\r\n        }\r\n        return concat(retBuffers);\r\n    }\r\n    fromString(string) {\r\n        this.value = [];\r\n        let pos1 = 0;\r\n        let pos2 = 0;\r\n        let sid = \"\";\r\n        do {\r\n            pos2 = string.indexOf(\".\", pos1);\r\n            if (pos2 === -1)\r\n                sid = string.substring(pos1);\r\n            else\r\n                sid = string.substring(pos1, pos2);\r\n            pos1 = pos2 + 1;\r\n            const sidBlock = new LocalRelativeSidValueBlock();\r\n            sidBlock.valueDec = parseInt(sid, 10);\r\n            if (isNaN(sidBlock.valueDec))\r\n                return true;\r\n            this.value.push(sidBlock);\r\n        } while (pos2 !== -1);\r\n        return true;\r\n    }\r\n    toString() {\r\n        let result = \"\";\r\n        let isHexOnly = false;\r\n        for (let i = 0; i < this.value.length; i++) {\r\n            isHexOnly = this.value[i].isHexOnly;\r\n            let sidStr = this.value[i].toString();\r\n            if (i !== 0)\r\n                result = `${result}.`;\r\n            if (isHexOnly) {\r\n                sidStr = `{${sidStr}}`;\r\n                result += sidStr;\r\n            }\r\n            else\r\n                result += sidStr;\r\n        }\r\n        return result;\r\n    }\r\n    toJSON() {\r\n        const object = {\r\n            ...super.toJSON(),\r\n            value: this.toString(),\r\n            sidArray: [],\r\n        };\r\n        for (let i = 0; i < this.value.length; i++)\r\n            object.sidArray.push(this.value[i].toJSON());\r\n        return object;\r\n    }\r\n}\r\nLocalRelativeObjectIdentifierValueBlock.NAME = \"RelativeObjectIdentifierValueBlock\";\n\nvar _a$l;\r\nclass RelativeObjectIdentifier extends BaseBlock {\r\n    constructor(parameters = {}) {\r\n        super(parameters, LocalRelativeObjectIdentifierValueBlock);\r\n        this.idBlock.tagClass = 1;\r\n        this.idBlock.tagNumber = 13;\r\n    }\r\n    getValue() {\r\n        return this.valueBlock.toString();\r\n    }\r\n    setValue(value) {\r\n        this.valueBlock.fromString(value);\r\n    }\r\n    onAsciiEncoding() {\r\n        return `${this.constructor.NAME} : ${this.valueBlock.toString() || \"empty\"}`;\r\n    }\r\n    toJSON() {\r\n        return {\r\n            ...super.toJSON(),\r\n            value: this.getValue(),\r\n        };\r\n    }\r\n}\r\n_a$l = RelativeObjectIdentifier;\r\n(() => {\r\n    typeStore.RelativeObjectIdentifier = _a$l;\r\n})();\r\nRelativeObjectIdentifier.NAME = \"RelativeObjectIdentifier\";\n\nvar _a$k;\r\nclass Sequence extends Constructed {\r\n    constructor(parameters = {}) {\r\n        super(parameters);\r\n        this.idBlock.tagClass = 1;\r\n        this.idBlock.tagNumber = 16;\r\n    }\r\n}\r\n_a$k = Sequence;\r\n(() => {\r\n    typeStore.Sequence = _a$k;\r\n})();\r\nSequence.NAME = \"SEQUENCE\";\n\nvar _a$j;\r\nclass Set extends Constructed {\r\n    constructor(parameters = {}) {\r\n        super(parameters);\r\n        this.idBlock.tagClass = 1;\r\n        this.idBlock.tagNumber = 17;\r\n    }\r\n}\r\n_a$j = Set;\r\n(() => {\r\n    typeStore.Set = _a$j;\r\n})();\r\nSet.NAME = \"SET\";\n\nclass LocalStringValueBlock extends HexBlock(ValueBlock) {\r\n    constructor({ ...parameters } = {}) {\r\n        super(parameters);\r\n        this.isHexOnly = true;\r\n        this.value = EMPTY_STRING;\r\n    }\r\n    toJSON() {\r\n        return {\r\n            ...super.toJSON(),\r\n            value: this.value,\r\n        };\r\n    }\r\n}\r\nLocalStringValueBlock.NAME = \"StringValueBlock\";\n\nclass LocalSimpleStringValueBlock extends LocalStringValueBlock {\r\n}\r\nLocalSimpleStringValueBlock.NAME = \"SimpleStringValueBlock\";\n\nclass LocalSimpleStringBlock extends BaseStringBlock {\r\n    constructor({ ...parameters } = {}) {\r\n        super(parameters, LocalSimpleStringValueBlock);\r\n    }\r\n    fromBuffer(inputBuffer) {\r\n        this.valueBlock.value = String.fromCharCode.apply(null, pvtsutils.BufferSourceConverter.toUint8Array(inputBuffer));\r\n    }\r\n    fromString(inputString) {\r\n        const strLen = inputString.length;\r\n        const view = this.valueBlock.valueHexView = new Uint8Array(strLen);\r\n        for (let i = 0; i < strLen; i++)\r\n            view[i] = inputString.charCodeAt(i);\r\n        this.valueBlock.value = inputString;\r\n    }\r\n}\r\nLocalSimpleStringBlock.NAME = \"SIMPLE STRING\";\n\nclass LocalUtf8StringValueBlock extends LocalSimpleStringBlock {\r\n    fromBuffer(inputBuffer) {\r\n        this.valueBlock.valueHexView = pvtsutils.BufferSourceConverter.toUint8Array(inputBuffer);\r\n        try {\r\n            this.valueBlock.value = pvtsutils.Convert.ToUtf8String(inputBuffer);\r\n        }\r\n        catch (ex) {\r\n            this.warnings.push(`Error during \"decodeURIComponent\": ${ex}, using raw string`);\r\n            this.valueBlock.value = pvtsutils.Convert.ToBinary(inputBuffer);\r\n        }\r\n    }\r\n    fromString(inputString) {\r\n        this.valueBlock.valueHexView = new Uint8Array(pvtsutils.Convert.FromUtf8String(inputString));\r\n        this.valueBlock.value = inputString;\r\n    }\r\n}\r\nLocalUtf8StringValueBlock.NAME = \"Utf8StringValueBlock\";\n\nvar _a$i;\r\nclass Utf8String extends LocalUtf8StringValueBlock {\r\n    constructor(parameters = {}) {\r\n        super(parameters);\r\n        this.idBlock.tagClass = 1;\r\n        this.idBlock.tagNumber = 12;\r\n    }\r\n}\r\n_a$i = Utf8String;\r\n(() => {\r\n    typeStore.Utf8String = _a$i;\r\n})();\r\nUtf8String.NAME = \"UTF8String\";\n\nclass LocalBmpStringValueBlock extends LocalSimpleStringBlock {\r\n    fromBuffer(inputBuffer) {\r\n        this.valueBlock.value = pvtsutils.Convert.ToUtf16String(inputBuffer);\r\n        this.valueBlock.valueHexView = pvtsutils.BufferSourceConverter.toUint8Array(inputBuffer);\r\n    }\r\n    fromString(inputString) {\r\n        this.valueBlock.value = inputString;\r\n        this.valueBlock.valueHexView = new Uint8Array(pvtsutils.Convert.FromUtf16String(inputString));\r\n    }\r\n}\r\nLocalBmpStringValueBlock.NAME = \"BmpStringValueBlock\";\n\nvar _a$h;\r\nclass BmpString extends LocalBmpStringValueBlock {\r\n    constructor({ ...parameters } = {}) {\r\n        super(parameters);\r\n        this.idBlock.tagClass = 1;\r\n        this.idBlock.tagNumber = 30;\r\n    }\r\n}\r\n_a$h = BmpString;\r\n(() => {\r\n    typeStore.BmpString = _a$h;\r\n})();\r\nBmpString.NAME = \"BMPString\";\n\nclass LocalUniversalStringValueBlock extends LocalSimpleStringBlock {\r\n    fromBuffer(inputBuffer) {\r\n        const copyBuffer = ArrayBuffer.isView(inputBuffer) ? inputBuffer.slice().buffer : inputBuffer.slice(0);\r\n        const valueView = new Uint8Array(copyBuffer);\r\n        for (let i = 0; i < valueView.length; i += 4) {\r\n            valueView[i] = valueView[i + 3];\r\n            valueView[i + 1] = valueView[i + 2];\r\n            valueView[i + 2] = 0x00;\r\n            valueView[i + 3] = 0x00;\r\n        }\r\n        this.valueBlock.value = String.fromCharCode.apply(null, new Uint32Array(copyBuffer));\r\n    }\r\n    fromString(inputString) {\r\n        const strLength = inputString.length;\r\n        const valueHexView = this.valueBlock.valueHexView = new Uint8Array(strLength * 4);\r\n        for (let i = 0; i < strLength; i++) {\r\n            const codeBuf = pvutils.utilToBase(inputString.charCodeAt(i), 8);\r\n            const codeView = new Uint8Array(codeBuf);\r\n            if (codeView.length > 4)\r\n                continue;\r\n            const dif = 4 - codeView.length;\r\n            for (let j = (codeView.length - 1); j >= 0; j--)\r\n                valueHexView[i * 4 + j + dif] = codeView[j];\r\n        }\r\n        this.valueBlock.value = inputString;\r\n    }\r\n}\r\nLocalUniversalStringValueBlock.NAME = \"UniversalStringValueBlock\";\n\nvar _a$g;\r\nclass UniversalString extends LocalUniversalStringValueBlock {\r\n    constructor({ ...parameters } = {}) {\r\n        super(parameters);\r\n        this.idBlock.tagClass = 1;\r\n        this.idBlock.tagNumber = 28;\r\n    }\r\n}\r\n_a$g = UniversalString;\r\n(() => {\r\n    typeStore.UniversalString = _a$g;\r\n})();\r\nUniversalString.NAME = \"UniversalString\";\n\nvar _a$f;\r\nclass NumericString extends LocalSimpleStringBlock {\r\n    constructor(parameters = {}) {\r\n        super(parameters);\r\n        this.idBlock.tagClass = 1;\r\n        this.idBlock.tagNumber = 18;\r\n    }\r\n}\r\n_a$f = NumericString;\r\n(() => {\r\n    typeStore.NumericString = _a$f;\r\n})();\r\nNumericString.NAME = \"NumericString\";\n\nvar _a$e;\r\nclass PrintableString extends LocalSimpleStringBlock {\r\n    constructor(parameters = {}) {\r\n        super(parameters);\r\n        this.idBlock.tagClass = 1;\r\n        this.idBlock.tagNumber = 19;\r\n    }\r\n}\r\n_a$e = PrintableString;\r\n(() => {\r\n    typeStore.PrintableString = _a$e;\r\n})();\r\nPrintableString.NAME = \"PrintableString\";\n\nvar _a$d;\r\nclass TeletexString extends LocalSimpleStringBlock {\r\n    constructor(parameters = {}) {\r\n        super(parameters);\r\n        this.idBlock.tagClass = 1;\r\n        this.idBlock.tagNumber = 20;\r\n    }\r\n}\r\n_a$d = TeletexString;\r\n(() => {\r\n    typeStore.TeletexString = _a$d;\r\n})();\r\nTeletexString.NAME = \"TeletexString\";\n\nvar _a$c;\r\nclass VideotexString extends LocalSimpleStringBlock {\r\n    constructor(parameters = {}) {\r\n        super(parameters);\r\n        this.idBlock.tagClass = 1;\r\n        this.idBlock.tagNumber = 21;\r\n    }\r\n}\r\n_a$c = VideotexString;\r\n(() => {\r\n    typeStore.VideotexString = _a$c;\r\n})();\r\nVideotexString.NAME = \"VideotexString\";\n\nvar _a$b;\r\nclass IA5String extends LocalSimpleStringBlock {\r\n    constructor(parameters = {}) {\r\n        super(parameters);\r\n        this.idBlock.tagClass = 1;\r\n        this.idBlock.tagNumber = 22;\r\n    }\r\n}\r\n_a$b = IA5String;\r\n(() => {\r\n    typeStore.IA5String = _a$b;\r\n})();\r\nIA5String.NAME = \"IA5String\";\n\nvar _a$a;\r\nclass GraphicString extends LocalSimpleStringBlock {\r\n    constructor(parameters = {}) {\r\n        super(parameters);\r\n        this.idBlock.tagClass = 1;\r\n        this.idBlock.tagNumber = 25;\r\n    }\r\n}\r\n_a$a = GraphicString;\r\n(() => {\r\n    typeStore.GraphicString = _a$a;\r\n})();\r\nGraphicString.NAME = \"GraphicString\";\n\nvar _a$9;\r\nclass VisibleString extends LocalSimpleStringBlock {\r\n    constructor(parameters = {}) {\r\n        super(parameters);\r\n        this.idBlock.tagClass = 1;\r\n        this.idBlock.tagNumber = 26;\r\n    }\r\n}\r\n_a$9 = VisibleString;\r\n(() => {\r\n    typeStore.VisibleString = _a$9;\r\n})();\r\nVisibleString.NAME = \"VisibleString\";\n\nvar _a$8;\r\nclass GeneralString extends LocalSimpleStringBlock {\r\n    constructor(parameters = {}) {\r\n        super(parameters);\r\n        this.idBlock.tagClass = 1;\r\n        this.idBlock.tagNumber = 27;\r\n    }\r\n}\r\n_a$8 = GeneralString;\r\n(() => {\r\n    typeStore.GeneralString = _a$8;\r\n})();\r\nGeneralString.NAME = \"GeneralString\";\n\nvar _a$7;\r\nclass CharacterString extends LocalSimpleStringBlock {\r\n    constructor(parameters = {}) {\r\n        super(parameters);\r\n        this.idBlock.tagClass = 1;\r\n        this.idBlock.tagNumber = 29;\r\n    }\r\n}\r\n_a$7 = CharacterString;\r\n(() => {\r\n    typeStore.CharacterString = _a$7;\r\n})();\r\nCharacterString.NAME = \"CharacterString\";\n\nvar _a$6;\r\nclass UTCTime extends VisibleString {\r\n    constructor({ value, valueDate, ...parameters } = {}) {\r\n        super(parameters);\r\n        this.year = 0;\r\n        this.month = 0;\r\n        this.day = 0;\r\n        this.hour = 0;\r\n        this.minute = 0;\r\n        this.second = 0;\r\n        if (value) {\r\n            this.fromString(value);\r\n            this.valueBlock.valueHexView = new Uint8Array(value.length);\r\n            for (let i = 0; i < value.length; i++)\r\n                this.valueBlock.valueHexView[i] = value.charCodeAt(i);\r\n        }\r\n        if (valueDate) {\r\n            this.fromDate(valueDate);\r\n            this.valueBlock.valueHexView = new Uint8Array(this.toBuffer());\r\n        }\r\n        this.idBlock.tagClass = 1;\r\n        this.idBlock.tagNumber = 23;\r\n    }\r\n    fromBuffer(inputBuffer) {\r\n        this.fromString(String.fromCharCode.apply(null, pvtsutils.BufferSourceConverter.toUint8Array(inputBuffer)));\r\n    }\r\n    toBuffer() {\r\n        const str = this.toString();\r\n        const buffer = new ArrayBuffer(str.length);\r\n        const view = new Uint8Array(buffer);\r\n        for (let i = 0; i < str.length; i++)\r\n            view[i] = str.charCodeAt(i);\r\n        return buffer;\r\n    }\r\n    fromDate(inputDate) {\r\n        this.year = inputDate.getUTCFullYear();\r\n        this.month = inputDate.getUTCMonth() + 1;\r\n        this.day = inputDate.getUTCDate();\r\n        this.hour = inputDate.getUTCHours();\r\n        this.minute = inputDate.getUTCMinutes();\r\n        this.second = inputDate.getUTCSeconds();\r\n    }\r\n    toDate() {\r\n        return (new Date(Date.UTC(this.year, this.month - 1, this.day, this.hour, this.minute, this.second)));\r\n    }\r\n    fromString(inputString) {\r\n        const parser = /(\\d{2})(\\d{2})(\\d{2})(\\d{2})(\\d{2})(\\d{2})Z/ig;\r\n        const parserArray = parser.exec(inputString);\r\n        if (parserArray === null) {\r\n            this.error = \"Wrong input string for conversion\";\r\n            return;\r\n        }\r\n        const year = parseInt(parserArray[1], 10);\r\n        if (year >= 50)\r\n            this.year = 1900 + year;\r\n        else\r\n            this.year = 2000 + year;\r\n        this.month = parseInt(parserArray[2], 10);\r\n        this.day = parseInt(parserArray[3], 10);\r\n        this.hour = parseInt(parserArray[4], 10);\r\n        this.minute = parseInt(parserArray[5], 10);\r\n        this.second = parseInt(parserArray[6], 10);\r\n    }\r\n    toString(encoding = \"iso\") {\r\n        if (encoding === \"iso\") {\r\n            const outputArray = new Array(7);\r\n            outputArray[0] = pvutils.padNumber(((this.year < 2000) ? (this.year - 1900) : (this.year - 2000)), 2);\r\n            outputArray[1] = pvutils.padNumber(this.month, 2);\r\n            outputArray[2] = pvutils.padNumber(this.day, 2);\r\n            outputArray[3] = pvutils.padNumber(this.hour, 2);\r\n            outputArray[4] = pvutils.padNumber(this.minute, 2);\r\n            outputArray[5] = pvutils.padNumber(this.second, 2);\r\n            outputArray[6] = \"Z\";\r\n            return outputArray.join(\"\");\r\n        }\r\n        return super.toString(encoding);\r\n    }\r\n    onAsciiEncoding() {\r\n        return `${this.constructor.NAME} : ${this.toDate().toISOString()}`;\r\n    }\r\n    toJSON() {\r\n        return {\r\n            ...super.toJSON(),\r\n            year: this.year,\r\n            month: this.month,\r\n            day: this.day,\r\n            hour: this.hour,\r\n            minute: this.minute,\r\n            second: this.second,\r\n        };\r\n    }\r\n}\r\n_a$6 = UTCTime;\r\n(() => {\r\n    typeStore.UTCTime = _a$6;\r\n})();\r\nUTCTime.NAME = \"UTCTime\";\n\nvar _a$5;\r\nclass GeneralizedTime extends UTCTime {\r\n    constructor(parameters = {}) {\r\n        var _b;\r\n        super(parameters);\r\n        (_b = this.millisecond) !== null && _b !== void 0 ? _b : (this.millisecond = 0);\r\n        this.idBlock.tagClass = 1;\r\n        this.idBlock.tagNumber = 24;\r\n    }\r\n    fromDate(inputDate) {\r\n        super.fromDate(inputDate);\r\n        this.millisecond = inputDate.getUTCMilliseconds();\r\n    }\r\n    toDate() {\r\n        return (new Date(Date.UTC(this.year, this.month - 1, this.day, this.hour, this.minute, this.second, this.millisecond)));\r\n    }\r\n    fromString(inputString) {\r\n        let isUTC = false;\r\n        let timeString = \"\";\r\n        let dateTimeString = \"\";\r\n        let fractionPart = 0;\r\n        let parser;\r\n        let hourDifference = 0;\r\n        let minuteDifference = 0;\r\n        if (inputString[inputString.length - 1] === \"Z\") {\r\n            timeString = inputString.substring(0, inputString.length - 1);\r\n            isUTC = true;\r\n        }\r\n        else {\r\n            const number = new Number(inputString[inputString.length - 1]);\r\n            if (isNaN(number.valueOf()))\r\n                throw new Error(\"Wrong input string for conversion\");\r\n            timeString = inputString;\r\n        }\r\n        if (isUTC) {\r\n            if (timeString.indexOf(\"+\") !== -1)\r\n                throw new Error(\"Wrong input string for conversion\");\r\n            if (timeString.indexOf(\"-\") !== -1)\r\n                throw new Error(\"Wrong input string for conversion\");\r\n        }\r\n        else {\r\n            let multiplier = 1;\r\n            let differencePosition = timeString.indexOf(\"+\");\r\n            let differenceString = \"\";\r\n            if (differencePosition === -1) {\r\n                differencePosition = timeString.indexOf(\"-\");\r\n                multiplier = -1;\r\n            }\r\n            if (differencePosition !== -1) {\r\n                differenceString = timeString.substring(differencePosition + 1);\r\n                timeString = timeString.substring(0, differencePosition);\r\n                if ((differenceString.length !== 2) && (differenceString.length !== 4))\r\n                    throw new Error(\"Wrong input string for conversion\");\r\n                let number = parseInt(differenceString.substring(0, 2), 10);\r\n                if (isNaN(number.valueOf()))\r\n                    throw new Error(\"Wrong input string for conversion\");\r\n                hourDifference = multiplier * number;\r\n                if (differenceString.length === 4) {\r\n                    number = parseInt(differenceString.substring(2, 4), 10);\r\n                    if (isNaN(number.valueOf()))\r\n                        throw new Error(\"Wrong input string for conversion\");\r\n                    minuteDifference = multiplier * number;\r\n                }\r\n            }\r\n        }\r\n        let fractionPointPosition = timeString.indexOf(\".\");\r\n        if (fractionPointPosition === -1)\r\n            fractionPointPosition = timeString.indexOf(\",\");\r\n        if (fractionPointPosition !== -1) {\r\n            const fractionPartCheck = new Number(`0${timeString.substring(fractionPointPosition)}`);\r\n            if (isNaN(fractionPartCheck.valueOf()))\r\n                throw new Error(\"Wrong input string for conversion\");\r\n            fractionPart = fractionPartCheck.valueOf();\r\n            dateTimeString = timeString.substring(0, fractionPointPosition);\r\n        }\r\n        else\r\n            dateTimeString = timeString;\r\n        switch (true) {\r\n            case (dateTimeString.length === 8):\r\n                parser = /(\\d{4})(\\d{2})(\\d{2})/ig;\r\n                if (fractionPointPosition !== -1)\r\n                    throw new Error(\"Wrong input string for conversion\");\r\n                break;\r\n            case (dateTimeString.length === 10):\r\n                parser = /(\\d{4})(\\d{2})(\\d{2})(\\d{2})/ig;\r\n                if (fractionPointPosition !== -1) {\r\n                    let fractionResult = 60 * fractionPart;\r\n                    this.minute = Math.floor(fractionResult);\r\n                    fractionResult = 60 * (fractionResult - this.minute);\r\n                    this.second = Math.floor(fractionResult);\r\n                    fractionResult = 1000 * (fractionResult - this.second);\r\n                    this.millisecond = Math.floor(fractionResult);\r\n                }\r\n                break;\r\n            case (dateTimeString.length === 12):\r\n                parser = /(\\d{4})(\\d{2})(\\d{2})(\\d{2})(\\d{2})/ig;\r\n                if (fractionPointPosition !== -1) {\r\n                    let fractionResult = 60 * fractionPart;\r\n                    this.second = Math.floor(fractionResult);\r\n                    fractionResult = 1000 * (fractionResult - this.second);\r\n                    this.millisecond = Math.floor(fractionResult);\r\n                }\r\n                break;\r\n            case (dateTimeString.length === 14):\r\n                parser = /(\\d{4})(\\d{2})(\\d{2})(\\d{2})(\\d{2})(\\d{2})/ig;\r\n                if (fractionPointPosition !== -1) {\r\n                    const fractionResult = 1000 * fractionPart;\r\n                    this.millisecond = Math.floor(fractionResult);\r\n                }\r\n                break;\r\n            default:\r\n                throw new Error(\"Wrong input string for conversion\");\r\n        }\r\n        const parserArray = parser.exec(dateTimeString);\r\n        if (parserArray === null)\r\n            throw new Error(\"Wrong input string for conversion\");\r\n        for (let j = 1; j < parserArray.length; j++) {\r\n            switch (j) {\r\n                case 1:\r\n                    this.year = parseInt(parserArray[j], 10);\r\n                    break;\r\n                case 2:\r\n                    this.month = parseInt(parserArray[j], 10);\r\n                    break;\r\n                case 3:\r\n                    this.day = parseInt(parserArray[j], 10);\r\n                    break;\r\n                case 4:\r\n                    this.hour = parseInt(parserArray[j], 10) + hourDifference;\r\n                    break;\r\n                case 5:\r\n                    this.minute = parseInt(parserArray[j], 10) + minuteDifference;\r\n                    break;\r\n                case 6:\r\n                    this.second = parseInt(parserArray[j], 10);\r\n                    break;\r\n                default:\r\n                    throw new Error(\"Wrong input string for conversion\");\r\n            }\r\n        }\r\n        if (isUTC === false) {\r\n            const tempDate = new Date(this.year, this.month, this.day, this.hour, this.minute, this.second, this.millisecond);\r\n            this.year = tempDate.getUTCFullYear();\r\n            this.month = tempDate.getUTCMonth();\r\n            this.day = tempDate.getUTCDay();\r\n            this.hour = tempDate.getUTCHours();\r\n            this.minute = tempDate.getUTCMinutes();\r\n            this.second = tempDate.getUTCSeconds();\r\n            this.millisecond = tempDate.getUTCMilliseconds();\r\n        }\r\n    }\r\n    toString(encoding = \"iso\") {\r\n        if (encoding === \"iso\") {\r\n            const outputArray = [];\r\n            outputArray.push(pvutils.padNumber(this.year, 4));\r\n            outputArray.push(pvutils.padNumber(this.month, 2));\r\n            outputArray.push(pvutils.padNumber(this.day, 2));\r\n            outputArray.push(pvutils.padNumber(this.hour, 2));\r\n            outputArray.push(pvutils.padNumber(this.minute, 2));\r\n            outputArray.push(pvutils.padNumber(this.second, 2));\r\n            if (this.millisecond !== 0) {\r\n                outputArray.push(\".\");\r\n                outputArray.push(pvutils.padNumber(this.millisecond, 3));\r\n            }\r\n            outputArray.push(\"Z\");\r\n            return outputArray.join(\"\");\r\n        }\r\n        return super.toString(encoding);\r\n    }\r\n    toJSON() {\r\n        return {\r\n            ...super.toJSON(),\r\n            millisecond: this.millisecond,\r\n        };\r\n    }\r\n}\r\n_a$5 = GeneralizedTime;\r\n(() => {\r\n    typeStore.GeneralizedTime = _a$5;\r\n})();\r\nGeneralizedTime.NAME = \"GeneralizedTime\";\n\nvar _a$4;\r\nclass DATE extends Utf8String {\r\n    constructor(parameters = {}) {\r\n        super(parameters);\r\n        this.idBlock.tagClass = 1;\r\n        this.idBlock.tagNumber = 31;\r\n    }\r\n}\r\n_a$4 = DATE;\r\n(() => {\r\n    typeStore.DATE = _a$4;\r\n})();\r\nDATE.NAME = \"DATE\";\n\nvar _a$3;\r\nclass TimeOfDay extends Utf8String {\r\n    constructor(parameters = {}) {\r\n        super(parameters);\r\n        this.idBlock.tagClass = 1;\r\n        this.idBlock.tagNumber = 32;\r\n    }\r\n}\r\n_a$3 = TimeOfDay;\r\n(() => {\r\n    typeStore.TimeOfDay = _a$3;\r\n})();\r\nTimeOfDay.NAME = \"TimeOfDay\";\n\nvar _a$2;\r\nclass DateTime extends Utf8String {\r\n    constructor(parameters = {}) {\r\n        super(parameters);\r\n        this.idBlock.tagClass = 1;\r\n        this.idBlock.tagNumber = 33;\r\n    }\r\n}\r\n_a$2 = DateTime;\r\n(() => {\r\n    typeStore.DateTime = _a$2;\r\n})();\r\nDateTime.NAME = \"DateTime\";\n\nvar _a$1;\r\nclass Duration extends Utf8String {\r\n    constructor(parameters = {}) {\r\n        super(parameters);\r\n        this.idBlock.tagClass = 1;\r\n        this.idBlock.tagNumber = 34;\r\n    }\r\n}\r\n_a$1 = Duration;\r\n(() => {\r\n    typeStore.Duration = _a$1;\r\n})();\r\nDuration.NAME = \"Duration\";\n\nvar _a;\r\nclass TIME extends Utf8String {\r\n    constructor(parameters = {}) {\r\n        super(parameters);\r\n        this.idBlock.tagClass = 1;\r\n        this.idBlock.tagNumber = 14;\r\n    }\r\n}\r\n_a = TIME;\r\n(() => {\r\n    typeStore.TIME = _a;\r\n})();\r\nTIME.NAME = \"TIME\";\n\nclass Any {\r\n    constructor({ name = EMPTY_STRING, optional = false, } = {}) {\r\n        this.name = name;\r\n        this.optional = optional;\r\n    }\r\n}\n\nclass Choice extends Any {\r\n    constructor({ value = [], ...parameters } = {}) {\r\n        super(parameters);\r\n        this.value = value;\r\n    }\r\n}\n\nclass Repeated extends Any {\r\n    constructor({ value = new Any(), local = false, ...parameters } = {}) {\r\n        super(parameters);\r\n        this.value = value;\r\n        this.local = local;\r\n    }\r\n}\n\nclass RawData {\r\n    constructor({ data = EMPTY_VIEW } = {}) {\r\n        this.dataView = pvtsutils.BufferSourceConverter.toUint8Array(data);\r\n    }\r\n    get data() {\r\n        return this.dataView.slice().buffer;\r\n    }\r\n    set data(value) {\r\n        this.dataView = pvtsutils.BufferSourceConverter.toUint8Array(value);\r\n    }\r\n    fromBER(inputBuffer, inputOffset, inputLength) {\r\n        const endLength = inputOffset + inputLength;\r\n        this.dataView = pvtsutils.BufferSourceConverter.toUint8Array(inputBuffer).subarray(inputOffset, endLength);\r\n        return endLength;\r\n    }\r\n    toBER(sizeOnly) {\r\n        return this.dataView.slice().buffer;\r\n    }\r\n}\n\nfunction compareSchema(root, inputData, inputSchema) {\r\n    if (inputSchema instanceof Choice) {\r\n        for (let j = 0; j < inputSchema.value.length; j++) {\r\n            const result = compareSchema(root, inputData, inputSchema.value[j]);\r\n            if (result.verified) {\r\n                return {\r\n                    verified: true,\r\n                    result: root\r\n                };\r\n            }\r\n        }\r\n        {\r\n            const _result = {\r\n                verified: false,\r\n                result: {\r\n                    error: \"Wrong values for Choice type\"\r\n                },\r\n            };\r\n            if (inputSchema.hasOwnProperty(NAME))\r\n                _result.name = inputSchema.name;\r\n            return _result;\r\n        }\r\n    }\r\n    if (inputSchema instanceof Any) {\r\n        if (inputSchema.hasOwnProperty(NAME))\r\n            root[inputSchema.name] = inputData;\r\n        return {\r\n            verified: true,\r\n            result: root\r\n        };\r\n    }\r\n    if ((root instanceof Object) === false) {\r\n        return {\r\n            verified: false,\r\n            result: { error: \"Wrong root object\" }\r\n        };\r\n    }\r\n    if ((inputData instanceof Object) === false) {\r\n        return {\r\n            verified: false,\r\n            result: { error: \"Wrong ASN.1 data\" }\r\n        };\r\n    }\r\n    if ((inputSchema instanceof Object) === false) {\r\n        return {\r\n            verified: false,\r\n            result: { error: \"Wrong ASN.1 schema\" }\r\n        };\r\n    }\r\n    if ((ID_BLOCK in inputSchema) === false) {\r\n        return {\r\n            verified: false,\r\n            result: { error: \"Wrong ASN.1 schema\" }\r\n        };\r\n    }\r\n    if ((FROM_BER in inputSchema.idBlock) === false) {\r\n        return {\r\n            verified: false,\r\n            result: { error: \"Wrong ASN.1 schema\" }\r\n        };\r\n    }\r\n    if ((TO_BER in inputSchema.idBlock) === false) {\r\n        return {\r\n            verified: false,\r\n            result: { error: \"Wrong ASN.1 schema\" }\r\n        };\r\n    }\r\n    const encodedId = inputSchema.idBlock.toBER(false);\r\n    if (encodedId.byteLength === 0) {\r\n        return {\r\n            verified: false,\r\n            result: { error: \"Error encoding idBlock for ASN.1 schema\" }\r\n        };\r\n    }\r\n    const decodedOffset = inputSchema.idBlock.fromBER(encodedId, 0, encodedId.byteLength);\r\n    if (decodedOffset === -1) {\r\n        return {\r\n            verified: false,\r\n            result: { error: \"Error decoding idBlock for ASN.1 schema\" }\r\n        };\r\n    }\r\n    if (inputSchema.idBlock.hasOwnProperty(TAG_CLASS) === false) {\r\n        return {\r\n            verified: false,\r\n            result: { error: \"Wrong ASN.1 schema\" }\r\n        };\r\n    }\r\n    if (inputSchema.idBlock.tagClass !== inputData.idBlock.tagClass) {\r\n        return {\r\n            verified: false,\r\n            result: root\r\n        };\r\n    }\r\n    if (inputSchema.idBlock.hasOwnProperty(TAG_NUMBER) === false) {\r\n        return {\r\n            verified: false,\r\n            result: { error: \"Wrong ASN.1 schema\" }\r\n        };\r\n    }\r\n    if (inputSchema.idBlock.tagNumber !== inputData.idBlock.tagNumber) {\r\n        return {\r\n            verified: false,\r\n            result: root\r\n        };\r\n    }\r\n    if (inputSchema.idBlock.hasOwnProperty(IS_CONSTRUCTED) === false) {\r\n        return {\r\n            verified: false,\r\n            result: { error: \"Wrong ASN.1 schema\" }\r\n        };\r\n    }\r\n    if (inputSchema.idBlock.isConstructed !== inputData.idBlock.isConstructed) {\r\n        return {\r\n            verified: false,\r\n            result: root\r\n        };\r\n    }\r\n    if (!(IS_HEX_ONLY in inputSchema.idBlock)) {\r\n        return {\r\n            verified: false,\r\n            result: { error: \"Wrong ASN.1 schema\" }\r\n        };\r\n    }\r\n    if (inputSchema.idBlock.isHexOnly !== inputData.idBlock.isHexOnly) {\r\n        return {\r\n            verified: false,\r\n            result: root\r\n        };\r\n    }\r\n    if (inputSchema.idBlock.isHexOnly) {\r\n        if ((VALUE_HEX_VIEW in inputSchema.idBlock) === false) {\r\n            return {\r\n                verified: false,\r\n                result: { error: \"Wrong ASN.1 schema\" }\r\n            };\r\n        }\r\n        const schemaView = inputSchema.idBlock.valueHexView;\r\n        const asn1View = inputData.idBlock.valueHexView;\r\n        if (schemaView.length !== asn1View.length) {\r\n            return {\r\n                verified: false,\r\n                result: root\r\n            };\r\n        }\r\n        for (let i = 0; i < schemaView.length; i++) {\r\n            if (schemaView[i] !== asn1View[1]) {\r\n                return {\r\n                    verified: false,\r\n                    result: root\r\n                };\r\n            }\r\n        }\r\n    }\r\n    if (inputSchema.name) {\r\n        inputSchema.name = inputSchema.name.replace(/^\\s+|\\s+$/g, EMPTY_STRING);\r\n        if (inputSchema.name)\r\n            root[inputSchema.name] = inputData;\r\n    }\r\n    if (inputSchema instanceof typeStore.Constructed) {\r\n        let admission = 0;\r\n        let result = {\r\n            verified: false,\r\n            result: {\r\n                error: \"Unknown error\",\r\n            }\r\n        };\r\n        let maxLength = inputSchema.valueBlock.value.length;\r\n        if (maxLength > 0) {\r\n            if (inputSchema.valueBlock.value[0] instanceof Repeated) {\r\n                maxLength = inputData.valueBlock.value.length;\r\n            }\r\n        }\r\n        if (maxLength === 0) {\r\n            return {\r\n                verified: true,\r\n                result: root\r\n            };\r\n        }\r\n        if ((inputData.valueBlock.value.length === 0) &&\r\n            (inputSchema.valueBlock.value.length !== 0)) {\r\n            let _optional = true;\r\n            for (let i = 0; i < inputSchema.valueBlock.value.length; i++)\r\n                _optional = _optional && (inputSchema.valueBlock.value[i].optional || false);\r\n            if (_optional) {\r\n                return {\r\n                    verified: true,\r\n                    result: root\r\n                };\r\n            }\r\n            if (inputSchema.name) {\r\n                inputSchema.name = inputSchema.name.replace(/^\\s+|\\s+$/g, EMPTY_STRING);\r\n                if (inputSchema.name)\r\n                    delete root[inputSchema.name];\r\n            }\r\n            root.error = \"Inconsistent object length\";\r\n            return {\r\n                verified: false,\r\n                result: root\r\n            };\r\n        }\r\n        for (let i = 0; i < maxLength; i++) {\r\n            if ((i - admission) >= inputData.valueBlock.value.length) {\r\n                if (inputSchema.valueBlock.value[i].optional === false) {\r\n                    const _result = {\r\n                        verified: false,\r\n                        result: root\r\n                    };\r\n                    root.error = \"Inconsistent length between ASN.1 data and schema\";\r\n                    if (inputSchema.name) {\r\n                        inputSchema.name = inputSchema.name.replace(/^\\s+|\\s+$/g, EMPTY_STRING);\r\n                        if (inputSchema.name) {\r\n                            delete root[inputSchema.name];\r\n                            _result.name = inputSchema.name;\r\n                        }\r\n                    }\r\n                    return _result;\r\n                }\r\n            }\r\n            else {\r\n                if (inputSchema.valueBlock.value[0] instanceof Repeated) {\r\n                    result = compareSchema(root, inputData.valueBlock.value[i], inputSchema.valueBlock.value[0].value);\r\n                    if (result.verified === false) {\r\n                        if (inputSchema.valueBlock.value[0].optional)\r\n                            admission++;\r\n                        else {\r\n                            if (inputSchema.name) {\r\n                                inputSchema.name = inputSchema.name.replace(/^\\s+|\\s+$/g, EMPTY_STRING);\r\n                                if (inputSchema.name)\r\n                                    delete root[inputSchema.name];\r\n                            }\r\n                            return result;\r\n                        }\r\n                    }\r\n                    if ((NAME in inputSchema.valueBlock.value[0]) && (inputSchema.valueBlock.value[0].name.length > 0)) {\r\n                        let arrayRoot = {};\r\n                        if ((LOCAL in inputSchema.valueBlock.value[0]) && (inputSchema.valueBlock.value[0].local))\r\n                            arrayRoot = inputData;\r\n                        else\r\n                            arrayRoot = root;\r\n                        if (typeof arrayRoot[inputSchema.valueBlock.value[0].name] === \"undefined\")\r\n                            arrayRoot[inputSchema.valueBlock.value[0].name] = [];\r\n                        arrayRoot[inputSchema.valueBlock.value[0].name].push(inputData.valueBlock.value[i]);\r\n                    }\r\n                }\r\n                else {\r\n                    result = compareSchema(root, inputData.valueBlock.value[i - admission], inputSchema.valueBlock.value[i]);\r\n                    if (result.verified === false) {\r\n                        if (inputSchema.valueBlock.value[i].optional)\r\n                            admission++;\r\n                        else {\r\n                            if (inputSchema.name) {\r\n                                inputSchema.name = inputSchema.name.replace(/^\\s+|\\s+$/g, EMPTY_STRING);\r\n                                if (inputSchema.name)\r\n                                    delete root[inputSchema.name];\r\n                            }\r\n                            return result;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (result.verified === false) {\r\n            const _result = {\r\n                verified: false,\r\n                result: root\r\n            };\r\n            if (inputSchema.name) {\r\n                inputSchema.name = inputSchema.name.replace(/^\\s+|\\s+$/g, EMPTY_STRING);\r\n                if (inputSchema.name) {\r\n                    delete root[inputSchema.name];\r\n                    _result.name = inputSchema.name;\r\n                }\r\n            }\r\n            return _result;\r\n        }\r\n        return {\r\n            verified: true,\r\n            result: root\r\n        };\r\n    }\r\n    if (inputSchema.primitiveSchema &&\r\n        (VALUE_HEX_VIEW in inputData.valueBlock)) {\r\n        const asn1 = localFromBER(inputData.valueBlock.valueHexView);\r\n        if (asn1.offset === -1) {\r\n            const _result = {\r\n                verified: false,\r\n                result: asn1.result\r\n            };\r\n            if (inputSchema.name) {\r\n                inputSchema.name = inputSchema.name.replace(/^\\s+|\\s+$/g, EMPTY_STRING);\r\n                if (inputSchema.name) {\r\n                    delete root[inputSchema.name];\r\n                    _result.name = inputSchema.name;\r\n                }\r\n            }\r\n            return _result;\r\n        }\r\n        return compareSchema(root, asn1.result, inputSchema.primitiveSchema);\r\n    }\r\n    return {\r\n        verified: true,\r\n        result: root\r\n    };\r\n}\r\nfunction verifySchema(inputBuffer, inputSchema) {\r\n    if ((inputSchema instanceof Object) === false) {\r\n        return {\r\n            verified: false,\r\n            result: { error: \"Wrong ASN.1 schema type\" }\r\n        };\r\n    }\r\n    const asn1 = localFromBER(pvtsutils.BufferSourceConverter.toUint8Array(inputBuffer));\r\n    if (asn1.offset === -1) {\r\n        return {\r\n            verified: false,\r\n            result: asn1.result\r\n        };\r\n    }\r\n    return compareSchema(asn1.result, asn1.result, inputSchema);\r\n}\n\nexport { Any, BaseBlock, BaseStringBlock, BitString, BmpString, Boolean, CharacterString, Choice, Constructed, DATE, DateTime, Duration, EndOfContent, Enumerated, GeneralString, GeneralizedTime, GraphicString, HexBlock, IA5String, Integer, Null, NumericString, ObjectIdentifier, OctetString, Primitive, PrintableString, RawData, RelativeObjectIdentifier, Repeated, Sequence, Set, TIME, TeletexString, TimeOfDay, UTCTime, UniversalString, Utf8String, ValueBlock, VideotexString, ViewWriter, VisibleString, compareSchema, fromBER, verifySchema };\n","import { CodeError } from '@libp2p/interface';\nimport { randomBytes as randB } from '@noble/hashes/utils';\n/**\n * Generates a Uint8Array with length `number` populated by random bytes\n */\nexport default function randomBytes(length) {\n    if (isNaN(length) || length <= 0) {\n        throw new CodeError('random bytes length must be a Number bigger than 0', 'ERR_INVALID_LENGTH');\n    }\n    return randB(length);\n}\n//# sourceMappingURL=random-bytes.js.map","import { CodeError } from '@libp2p/interface';\nimport { pbkdf2Async } from '@noble/hashes/pbkdf2';\nimport { sha512 } from '@noble/hashes/sha512';\nimport * as asn1js from 'asn1js';\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string';\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string';\nimport randomBytes from '../random-bytes.js';\nimport webcrypto from '../webcrypto.js';\nimport { unmarshalRsaPrivateKey } from './rsa-class.js';\n/**\n * Convert a PKCS#1 in ASN1 DER format to a JWK key\n */\nexport function pkcs1ToJwk(bytes) {\n    const { result } = asn1js.fromBER(bytes);\n    // @ts-expect-error this looks fragile but DER is a canonical format so we are\n    // safe to have deeply property chains like this\n    const values = result.valueBlock.value;\n    const key = {\n        n: uint8ArrayToString(bnToBuf(values[1].toBigInt()), 'base64url'),\n        e: uint8ArrayToString(bnToBuf(values[2].toBigInt()), 'base64url'),\n        d: uint8ArrayToString(bnToBuf(values[3].toBigInt()), 'base64url'),\n        p: uint8ArrayToString(bnToBuf(values[4].toBigInt()), 'base64url'),\n        q: uint8ArrayToString(bnToBuf(values[5].toBigInt()), 'base64url'),\n        dp: uint8ArrayToString(bnToBuf(values[6].toBigInt()), 'base64url'),\n        dq: uint8ArrayToString(bnToBuf(values[7].toBigInt()), 'base64url'),\n        qi: uint8ArrayToString(bnToBuf(values[8].toBigInt()), 'base64url'),\n        kty: 'RSA',\n        alg: 'RS256'\n    };\n    return key;\n}\n/**\n * Convert a JWK key into PKCS#1 in ASN1 DER format\n */\nexport function jwkToPkcs1(jwk) {\n    if (jwk.n == null || jwk.e == null || jwk.d == null || jwk.p == null || jwk.q == null || jwk.dp == null || jwk.dq == null || jwk.qi == null) {\n        throw new CodeError('JWK was missing components', 'ERR_INVALID_PARAMETERS');\n    }\n    const root = new asn1js.Sequence({\n        value: [\n            new asn1js.Integer({ value: 0 }),\n            asn1js.Integer.fromBigInt(bufToBn(uint8ArrayFromString(jwk.n, 'base64url'))),\n            asn1js.Integer.fromBigInt(bufToBn(uint8ArrayFromString(jwk.e, 'base64url'))),\n            asn1js.Integer.fromBigInt(bufToBn(uint8ArrayFromString(jwk.d, 'base64url'))),\n            asn1js.Integer.fromBigInt(bufToBn(uint8ArrayFromString(jwk.p, 'base64url'))),\n            asn1js.Integer.fromBigInt(bufToBn(uint8ArrayFromString(jwk.q, 'base64url'))),\n            asn1js.Integer.fromBigInt(bufToBn(uint8ArrayFromString(jwk.dp, 'base64url'))),\n            asn1js.Integer.fromBigInt(bufToBn(uint8ArrayFromString(jwk.dq, 'base64url'))),\n            asn1js.Integer.fromBigInt(bufToBn(uint8ArrayFromString(jwk.qi, 'base64url')))\n        ]\n    });\n    const der = root.toBER();\n    return new Uint8Array(der, 0, der.byteLength);\n}\n/**\n * Convert a PKCIX in ASN1 DER format to a JWK key\n */\nexport function pkixToJwk(bytes) {\n    const { result } = asn1js.fromBER(bytes);\n    // @ts-expect-error this looks fragile but DER is a canonical format so we are\n    // safe to have deeply property chains like this\n    const values = result.valueBlock.value[1].valueBlock.value[0].valueBlock.value;\n    return {\n        kty: 'RSA',\n        n: uint8ArrayToString(bnToBuf(values[0].toBigInt()), 'base64url'),\n        e: uint8ArrayToString(bnToBuf(values[1].toBigInt()), 'base64url')\n    };\n}\n/**\n * Convert a JWK key to PKCIX in ASN1 DER format\n */\nexport function jwkToPkix(jwk) {\n    if (jwk.n == null || jwk.e == null) {\n        throw new CodeError('JWK was missing components', 'ERR_INVALID_PARAMETERS');\n    }\n    const root = new asn1js.Sequence({\n        value: [\n            new asn1js.Sequence({\n                value: [\n                    // rsaEncryption\n                    new asn1js.ObjectIdentifier({\n                        value: '1.2.840.113549.1.1.1'\n                    }),\n                    new asn1js.Null()\n                ]\n            }),\n            // this appears to be a bug in asn1js.js - this should really be a Sequence\n            // and not a BitString but it generates the same bytes as node-forge so 🤷‍♂️\n            new asn1js.BitString({\n                valueHex: new asn1js.Sequence({\n                    value: [\n                        asn1js.Integer.fromBigInt(bufToBn(uint8ArrayFromString(jwk.n, 'base64url'))),\n                        asn1js.Integer.fromBigInt(bufToBn(uint8ArrayFromString(jwk.e, 'base64url')))\n                    ]\n                }).toBER()\n            })\n        ]\n    });\n    const der = root.toBER();\n    return new Uint8Array(der, 0, der.byteLength);\n}\nfunction bnToBuf(bn) {\n    let hex = bn.toString(16);\n    if (hex.length % 2 > 0) {\n        hex = `0${hex}`;\n    }\n    const len = hex.length / 2;\n    const u8 = new Uint8Array(len);\n    let i = 0;\n    let j = 0;\n    while (i < len) {\n        u8[i] = parseInt(hex.slice(j, j + 2), 16);\n        i += 1;\n        j += 2;\n    }\n    return u8;\n}\nfunction bufToBn(u8) {\n    const hex = [];\n    u8.forEach(function (i) {\n        let h = i.toString(16);\n        if (h.length % 2 > 0) {\n            h = `0${h}`;\n        }\n        hex.push(h);\n    });\n    return BigInt('0x' + hex.join(''));\n}\nconst SALT_LENGTH = 16;\nconst KEY_SIZE = 32;\nconst ITERATIONS = 10000;\nexport async function exportToPem(privateKey, password) {\n    const crypto = webcrypto.get();\n    // PrivateKeyInfo\n    const keyWrapper = new asn1js.Sequence({\n        value: [\n            // version (0)\n            new asn1js.Integer({ value: 0 }),\n            // privateKeyAlgorithm\n            new asn1js.Sequence({\n                value: [\n                    // rsaEncryption OID\n                    new asn1js.ObjectIdentifier({\n                        value: '1.2.840.113549.1.1.1'\n                    }),\n                    new asn1js.Null()\n                ]\n            }),\n            // PrivateKey\n            new asn1js.OctetString({\n                valueHex: privateKey.marshal()\n            })\n        ]\n    });\n    const keyBuf = keyWrapper.toBER();\n    const keyArr = new Uint8Array(keyBuf, 0, keyBuf.byteLength);\n    const salt = randomBytes(SALT_LENGTH);\n    const encryptionKey = await pbkdf2Async(sha512, password, salt, {\n        c: ITERATIONS,\n        dkLen: KEY_SIZE\n    });\n    const iv = randomBytes(16);\n    const cryptoKey = await crypto.subtle.importKey('raw', encryptionKey, 'AES-CBC', false, ['encrypt']);\n    const encrypted = await crypto.subtle.encrypt({\n        name: 'AES-CBC',\n        iv\n    }, cryptoKey, keyArr);\n    const pbkdf2Params = new asn1js.Sequence({\n        value: [\n            // salt\n            new asn1js.OctetString({ valueHex: salt }),\n            // iteration count\n            new asn1js.Integer({ value: ITERATIONS }),\n            // key length\n            new asn1js.Integer({ value: KEY_SIZE }),\n            // AlgorithmIdentifier\n            new asn1js.Sequence({\n                value: [\n                    // hmacWithSHA512\n                    new asn1js.ObjectIdentifier({ value: '1.2.840.113549.2.11' }),\n                    new asn1js.Null()\n                ]\n            })\n        ]\n    });\n    const encryptionAlgorithm = new asn1js.Sequence({\n        value: [\n            // pkcs5PBES2\n            new asn1js.ObjectIdentifier({\n                value: '1.2.840.113549.1.5.13'\n            }),\n            new asn1js.Sequence({\n                value: [\n                    // keyDerivationFunc\n                    new asn1js.Sequence({\n                        value: [\n                            // pkcs5PBKDF2\n                            new asn1js.ObjectIdentifier({\n                                value: '1.2.840.113549.1.5.12'\n                            }),\n                            // PBKDF2-params\n                            pbkdf2Params\n                        ]\n                    }),\n                    // encryptionScheme\n                    new asn1js.Sequence({\n                        value: [\n                            // aes256-CBC\n                            new asn1js.ObjectIdentifier({\n                                value: '2.16.840.1.101.3.4.1.42'\n                            }),\n                            // iv\n                            new asn1js.OctetString({\n                                valueHex: iv\n                            })\n                        ]\n                    })\n                ]\n            })\n        ]\n    });\n    const finalWrapper = new asn1js.Sequence({\n        value: [\n            encryptionAlgorithm,\n            new asn1js.OctetString({ valueHex: encrypted })\n        ]\n    });\n    const finalWrapperBuf = finalWrapper.toBER();\n    const finalWrapperArr = new Uint8Array(finalWrapperBuf, 0, finalWrapperBuf.byteLength);\n    return [\n        '-----BEGIN ENCRYPTED PRIVATE KEY-----',\n        ...uint8ArrayToString(finalWrapperArr, 'base64pad').split(/(.{64})/).filter(Boolean),\n        '-----END ENCRYPTED PRIVATE KEY-----'\n    ].join('\\n');\n}\nexport async function importFromPem(pem, password) {\n    const crypto = webcrypto.get();\n    let plaintext;\n    if (pem.includes('-----BEGIN ENCRYPTED PRIVATE KEY-----')) {\n        const key = uint8ArrayFromString(pem\n            .replace('-----BEGIN ENCRYPTED PRIVATE KEY-----', '')\n            .replace('-----END ENCRYPTED PRIVATE KEY-----', '')\n            .replace(/\\n/g, '')\n            .trim(), 'base64pad');\n        const { result } = asn1js.fromBER(key);\n        const { iv, salt, iterations, keySize, cipherText } = findEncryptedPEMData(result);\n        const encryptionKey = await pbkdf2Async(sha512, password, salt, {\n            c: iterations,\n            dkLen: keySize\n        });\n        const cryptoKey = await crypto.subtle.importKey('raw', encryptionKey, 'AES-CBC', false, ['decrypt']);\n        const decrypted = toUint8Array(await crypto.subtle.decrypt({\n            name: 'AES-CBC',\n            iv\n        }, cryptoKey, cipherText));\n        const { result: decryptedResult } = asn1js.fromBER(decrypted);\n        plaintext = findPEMData(decryptedResult);\n    }\n    else if (pem.includes('-----BEGIN PRIVATE KEY-----')) {\n        const key = uint8ArrayFromString(pem\n            .replace('-----BEGIN PRIVATE KEY-----', '')\n            .replace('-----END PRIVATE KEY-----', '')\n            .replace(/\\n/g, '')\n            .trim(), 'base64pad');\n        const { result } = asn1js.fromBER(key);\n        plaintext = findPEMData(result);\n    }\n    else {\n        throw new CodeError('Could not parse private key from PEM data', 'ERR_INVALID_PARAMETERS');\n    }\n    return unmarshalRsaPrivateKey(plaintext);\n}\nfunction findEncryptedPEMData(root) {\n    const encryptionAlgorithm = root.valueBlock.value[0];\n    const scheme = encryptionAlgorithm.valueBlock.value[0].toString();\n    if (scheme !== 'OBJECT IDENTIFIER : 1.2.840.113549.1.5.13') {\n        throw new CodeError('Only pkcs5PBES2 encrypted private keys are supported', 'ERR_INVALID_PARAMS');\n    }\n    const keyDerivationFunc = encryptionAlgorithm.valueBlock.value[1].valueBlock.value[0];\n    const keyDerivationFuncName = keyDerivationFunc.valueBlock.value[0].toString();\n    if (keyDerivationFuncName !== 'OBJECT IDENTIFIER : 1.2.840.113549.1.5.12') {\n        throw new CodeError('Only pkcs5PBKDF2 key derivation functions are supported', 'ERR_INVALID_PARAMS');\n    }\n    const pbkdf2Params = keyDerivationFunc.valueBlock.value[1];\n    const salt = toUint8Array(pbkdf2Params.valueBlock.value[0].getValue());\n    let iterations = ITERATIONS;\n    let keySize = KEY_SIZE;\n    if (pbkdf2Params.valueBlock.value.length === 3) {\n        iterations = Number(pbkdf2Params.valueBlock.value[1].toBigInt());\n        keySize = Number((pbkdf2Params.valueBlock.value[2]).toBigInt());\n    }\n    else if (pbkdf2Params.valueBlock.value.length === 2) {\n        throw new CodeError('Could not derive key size and iterations from PEM file - please use @libp2p/rsa to re-import your key', 'ERR_INVALID_PARAMS');\n    }\n    const encryptionScheme = encryptionAlgorithm.valueBlock.value[1].valueBlock.value[1];\n    const encryptionSchemeName = encryptionScheme.valueBlock.value[0].toString();\n    if (encryptionSchemeName === 'OBJECT IDENTIFIER : 1.2.840.113549.3.7') {\n        // des-EDE3-CBC\n    }\n    else if (encryptionSchemeName === 'OBJECT IDENTIFIER : 1.3.14.3.2.7') {\n        // des-CBC\n    }\n    else if (encryptionSchemeName === 'OBJECT IDENTIFIER : 2.16.840.1.101.3.4.1.2') {\n        // aes128-CBC\n    }\n    else if (encryptionSchemeName === 'OBJECT IDENTIFIER : 2.16.840.1.101.3.4.1.22') {\n        // aes192-CBC\n    }\n    else if (encryptionSchemeName === 'OBJECT IDENTIFIER : 2.16.840.1.101.3.4.1.42') {\n        // aes256-CBC\n    }\n    else {\n        throw new CodeError('Only AES-CBC encryption schemes are supported', 'ERR_INVALID_PARAMS');\n    }\n    const iv = toUint8Array(encryptionScheme.valueBlock.value[1].getValue());\n    return {\n        cipherText: toUint8Array(root.valueBlock.value[1].getValue()),\n        salt,\n        iterations,\n        keySize,\n        iv\n    };\n}\nfunction findPEMData(seq) {\n    return toUint8Array(seq.valueBlock.value[2].getValue());\n}\nfunction toUint8Array(buf) {\n    return new Uint8Array(buf, 0, buf.byteLength);\n}\n//# sourceMappingURL=rsa-utils.js.map","import { hash as assertHash, number as assertNumber } from './_assert.js';\nimport { hmac } from './hmac.js';\nimport { createView, toBytes, checkOpts, asyncLoop } from './utils.js';\n// Common prologue and epilogue for sync/async functions\nfunction pbkdf2Init(hash, _password, _salt, _opts) {\n    assertHash(hash);\n    const opts = checkOpts({ dkLen: 32, asyncTick: 10 }, _opts);\n    const { c, dkLen, asyncTick } = opts;\n    assertNumber(c);\n    assertNumber(dkLen);\n    assertNumber(asyncTick);\n    if (c < 1)\n        throw new Error('PBKDF2: iterations (c) should be >= 1');\n    const password = toBytes(_password);\n    const salt = toBytes(_salt);\n    // DK = PBKDF2(PRF, Password, Salt, c, dkLen);\n    const DK = new Uint8Array(dkLen);\n    // U1 = PRF(Password, Salt + INT_32_BE(i))\n    const PRF = hmac.create(hash, password);\n    const PRFSalt = PRF._cloneInto().update(salt);\n    return { c, dkLen, asyncTick, DK, PRF, PRFSalt };\n}\nfunction pbkdf2Output(PRF, PRFSalt, DK, prfW, u) {\n    PRF.destroy();\n    PRFSalt.destroy();\n    if (prfW)\n        prfW.destroy();\n    u.fill(0);\n    return DK;\n}\n/**\n * PBKDF2-HMAC: RFC 2898 key derivation function\n * @param hash - hash function that would be used e.g. sha256\n * @param password - password from which a derived key is generated\n * @param salt - cryptographic salt\n * @param opts - {c, dkLen} where c is work factor and dkLen is output message size\n */\nexport function pbkdf2(hash, password, salt, opts) {\n    const { c, dkLen, DK, PRF, PRFSalt } = pbkdf2Init(hash, password, salt, opts);\n    let prfW; // Working copy\n    const arr = new Uint8Array(4);\n    const view = createView(arr);\n    const u = new Uint8Array(PRF.outputLen);\n    // DK = T1 + T2 + ⋯ + Tdklen/hlen\n    for (let ti = 1, pos = 0; pos < dkLen; ti++, pos += PRF.outputLen) {\n        // Ti = F(Password, Salt, c, i)\n        const Ti = DK.subarray(pos, pos + PRF.outputLen);\n        view.setInt32(0, ti, false);\n        // F(Password, Salt, c, i) = U1 ^ U2 ^ ⋯ ^ Uc\n        // U1 = PRF(Password, Salt + INT_32_BE(i))\n        (prfW = PRFSalt._cloneInto(prfW)).update(arr).digestInto(u);\n        Ti.set(u.subarray(0, Ti.length));\n        for (let ui = 1; ui < c; ui++) {\n            // Uc = PRF(Password, Uc−1)\n            PRF._cloneInto(prfW).update(u).digestInto(u);\n            for (let i = 0; i < Ti.length; i++)\n                Ti[i] ^= u[i];\n        }\n    }\n    return pbkdf2Output(PRF, PRFSalt, DK, prfW, u);\n}\nexport async function pbkdf2Async(hash, password, salt, opts) {\n    const { c, dkLen, asyncTick, DK, PRF, PRFSalt } = pbkdf2Init(hash, password, salt, opts);\n    let prfW; // Working copy\n    const arr = new Uint8Array(4);\n    const view = createView(arr);\n    const u = new Uint8Array(PRF.outputLen);\n    // DK = T1 + T2 + ⋯ + Tdklen/hlen\n    for (let ti = 1, pos = 0; pos < dkLen; ti++, pos += PRF.outputLen) {\n        // Ti = F(Password, Salt, c, i)\n        const Ti = DK.subarray(pos, pos + PRF.outputLen);\n        view.setInt32(0, ti, false);\n        // F(Password, Salt, c, i) = U1 ^ U2 ^ ⋯ ^ Uc\n        // U1 = PRF(Password, Salt + INT_32_BE(i))\n        (prfW = PRFSalt._cloneInto(prfW)).update(arr).digestInto(u);\n        Ti.set(u.subarray(0, Ti.length));\n        await asyncLoop(c - 1, asyncTick, () => {\n            // Uc = PRF(Password, Uc−1)\n            PRF._cloneInto(prfW).update(u).digestInto(u);\n            for (let i = 0; i < Ti.length; i++)\n                Ti[i] ^= u[i];\n        });\n    }\n    return pbkdf2Output(PRF, PRFSalt, DK, prfW, u);\n}\n//# sourceMappingURL=pbkdf2.js.map","import { CodeError } from '@libp2p/interface';\nimport { sha256 } from 'multiformats/hashes/sha2';\nimport { equals as uint8ArrayEquals } from 'uint8arrays/equals';\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string';\nimport { isPromise } from '../util.js';\nimport { exporter } from './exporter.js';\nimport * as pbm from './keys.js';\nimport * as crypto from './rsa.js';\nexport const MAX_RSA_KEY_SIZE = 8192;\nexport class RsaPublicKey {\n    _key;\n    constructor(key) {\n        this._key = key;\n    }\n    verify(data, sig) {\n        return crypto.hashAndVerify(this._key, sig, data);\n    }\n    marshal() {\n        return crypto.utils.jwkToPkix(this._key);\n    }\n    get bytes() {\n        return pbm.PublicKey.encode({\n            Type: pbm.KeyType.RSA,\n            Data: this.marshal()\n        }).subarray();\n    }\n    equals(key) {\n        return uint8ArrayEquals(this.bytes, key.bytes);\n    }\n    hash() {\n        const p = sha256.digest(this.bytes);\n        if (isPromise(p)) {\n            return p.then(({ bytes }) => bytes);\n        }\n        return p.bytes;\n    }\n}\nexport class RsaPrivateKey {\n    _key;\n    _publicKey;\n    constructor(key, publicKey) {\n        this._key = key;\n        this._publicKey = publicKey;\n    }\n    genSecret() {\n        return crypto.getRandomValues(16);\n    }\n    sign(message) {\n        return crypto.hashAndSign(this._key, message);\n    }\n    get public() {\n        if (this._publicKey == null) {\n            throw new CodeError('public key not provided', 'ERR_PUBKEY_NOT_PROVIDED');\n        }\n        return new RsaPublicKey(this._publicKey);\n    }\n    marshal() {\n        return crypto.utils.jwkToPkcs1(this._key);\n    }\n    get bytes() {\n        return pbm.PrivateKey.encode({\n            Type: pbm.KeyType.RSA,\n            Data: this.marshal()\n        }).subarray();\n    }\n    equals(key) {\n        return uint8ArrayEquals(this.bytes, key.bytes);\n    }\n    hash() {\n        const p = sha256.digest(this.bytes);\n        if (isPromise(p)) {\n            return p.then(({ bytes }) => bytes);\n        }\n        return p.bytes;\n    }\n    /**\n     * Gets the ID of the key.\n     *\n     * The key id is the base58 encoding of the SHA-256 multihash of its public key.\n     * The public key is a protobuf encoding containing a type and the DER encoding\n     * of the PKCS SubjectPublicKeyInfo.\n     */\n    async id() {\n        const hash = await this.public.hash();\n        return uint8ArrayToString(hash, 'base58btc');\n    }\n    /**\n     * Exports the key as libp2p-key - a aes-gcm encrypted value with the key\n     * derived from the password.\n     *\n     * To export it as a password protected PEM file, please use the `exportPEM`\n     * function from `@libp2p/rsa`.\n     */\n    async export(password, format = 'pkcs-8') {\n        if (format === 'pkcs-8') {\n            return crypto.utils.exportToPem(this, password);\n        }\n        else if (format === 'libp2p-key') {\n            return exporter(this.bytes, password);\n        }\n        else {\n            throw new CodeError(`export format '${format}' is not supported`, 'ERR_INVALID_EXPORT_FORMAT');\n        }\n    }\n}\nexport async function unmarshalRsaPrivateKey(bytes) {\n    const jwk = crypto.utils.pkcs1ToJwk(bytes);\n    if (crypto.keySize(jwk) > MAX_RSA_KEY_SIZE) {\n        throw new CodeError('key size is too large', 'ERR_KEY_SIZE_TOO_LARGE');\n    }\n    const keys = await crypto.unmarshalPrivateKey(jwk);\n    return new RsaPrivateKey(keys.privateKey, keys.publicKey);\n}\nexport function unmarshalRsaPublicKey(bytes) {\n    const jwk = crypto.utils.pkixToJwk(bytes);\n    if (crypto.keySize(jwk) > MAX_RSA_KEY_SIZE) {\n        throw new CodeError('key size is too large', 'ERR_KEY_SIZE_TOO_LARGE');\n    }\n    return new RsaPublicKey(jwk);\n}\nexport async function fromJwk(jwk) {\n    if (crypto.keySize(jwk) > MAX_RSA_KEY_SIZE) {\n        throw new CodeError('key size is too large', 'ERR_KEY_SIZE_TOO_LARGE');\n    }\n    const keys = await crypto.unmarshalPrivateKey(jwk);\n    return new RsaPrivateKey(keys.privateKey, keys.publicKey);\n}\nexport async function generateKeyPair(bits) {\n    if (bits > MAX_RSA_KEY_SIZE) {\n        throw new CodeError('key size is too large', 'ERR_KEY_SIZE_TOO_LARGE');\n    }\n    const keys = await crypto.generateKey(bits);\n    return new RsaPrivateKey(keys.privateKey, keys.publicKey);\n}\n//# sourceMappingURL=rsa-class.js.map","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// Short Weierstrass curve. The formula is: y² = x³ + ax + b\nimport { validateBasic, wNAF, pippenger, } from './curve.js';\nimport * as mod from './modular.js';\nimport * as ut from './utils.js';\nimport { ensureBytes, memoized, abool } from './utils.js';\nfunction validateSigVerOpts(opts) {\n    if (opts.lowS !== undefined)\n        abool('lowS', opts.lowS);\n    if (opts.prehash !== undefined)\n        abool('prehash', opts.prehash);\n}\nfunction validatePointOpts(curve) {\n    const opts = validateBasic(curve);\n    ut.validateObject(opts, {\n        a: 'field',\n        b: 'field',\n    }, {\n        allowedPrivateKeyLengths: 'array',\n        wrapPrivateKey: 'boolean',\n        isTorsionFree: 'function',\n        clearCofactor: 'function',\n        allowInfinityPoint: 'boolean',\n        fromBytes: 'function',\n        toBytes: 'function',\n    });\n    const { endo, Fp, a } = opts;\n    if (endo) {\n        if (!Fp.eql(a, Fp.ZERO)) {\n            throw new Error('Endomorphism can only be defined for Koblitz curves that have a=0');\n        }\n        if (typeof endo !== 'object' ||\n            typeof endo.beta !== 'bigint' ||\n            typeof endo.splitScalar !== 'function') {\n            throw new Error('Expected endomorphism with beta: bigint and splitScalar: function');\n        }\n    }\n    return Object.freeze({ ...opts });\n}\nconst { bytesToNumberBE: b2n, hexToBytes: h2b } = ut;\n/**\n * ASN.1 DER encoding utilities. ASN is very complex & fragile. Format:\n *\n *     [0x30 (SEQUENCE), bytelength, 0x02 (INTEGER), intLength, R, 0x02 (INTEGER), intLength, S]\n *\n * Docs: https://letsencrypt.org/docs/a-warm-welcome-to-asn1-and-der/, https://luca.ntop.org/Teaching/Appunti/asn1.html\n */\nexport const DER = {\n    // asn.1 DER encoding utils\n    Err: class DERErr extends Error {\n        constructor(m = '') {\n            super(m);\n        }\n    },\n    // Basic building block is TLV (Tag-Length-Value)\n    _tlv: {\n        encode: (tag, data) => {\n            const { Err: E } = DER;\n            if (tag < 0 || tag > 256)\n                throw new E('tlv.encode: wrong tag');\n            if (data.length & 1)\n                throw new E('tlv.encode: unpadded data');\n            const dataLen = data.length / 2;\n            const len = ut.numberToHexUnpadded(dataLen);\n            if ((len.length / 2) & 128)\n                throw new E('tlv.encode: long form length too big');\n            // length of length with long form flag\n            const lenLen = dataLen > 127 ? ut.numberToHexUnpadded((len.length / 2) | 128) : '';\n            return `${ut.numberToHexUnpadded(tag)}${lenLen}${len}${data}`;\n        },\n        // v - value, l - left bytes (unparsed)\n        decode(tag, data) {\n            const { Err: E } = DER;\n            let pos = 0;\n            if (tag < 0 || tag > 256)\n                throw new E('tlv.encode: wrong tag');\n            if (data.length < 2 || data[pos++] !== tag)\n                throw new E('tlv.decode: wrong tlv');\n            const first = data[pos++];\n            const isLong = !!(first & 128); // First bit of first length byte is flag for short/long form\n            let length = 0;\n            if (!isLong)\n                length = first;\n            else {\n                // Long form: [longFlag(1bit), lengthLength(7bit), length (BE)]\n                const lenLen = first & 127;\n                if (!lenLen)\n                    throw new E('tlv.decode(long): indefinite length not supported');\n                if (lenLen > 4)\n                    throw new E('tlv.decode(long): byte length is too big'); // this will overflow u32 in js\n                const lengthBytes = data.subarray(pos, pos + lenLen);\n                if (lengthBytes.length !== lenLen)\n                    throw new E('tlv.decode: length bytes not complete');\n                if (lengthBytes[0] === 0)\n                    throw new E('tlv.decode(long): zero leftmost byte');\n                for (const b of lengthBytes)\n                    length = (length << 8) | b;\n                pos += lenLen;\n                if (length < 128)\n                    throw new E('tlv.decode(long): not minimal encoding');\n            }\n            const v = data.subarray(pos, pos + length);\n            if (v.length !== length)\n                throw new E('tlv.decode: wrong value length');\n            return { v, l: data.subarray(pos + length) };\n        },\n    },\n    // https://crypto.stackexchange.com/a/57734 Leftmost bit of first byte is 'negative' flag,\n    // since we always use positive integers here. It must always be empty:\n    // - add zero byte if exists\n    // - if next byte doesn't have a flag, leading zero is not allowed (minimal encoding)\n    _int: {\n        encode(num) {\n            const { Err: E } = DER;\n            if (num < _0n)\n                throw new E('integer: negative integers are not allowed');\n            let hex = ut.numberToHexUnpadded(num);\n            // Pad with zero byte if negative flag is present\n            if (Number.parseInt(hex[0], 16) & 0b1000)\n                hex = '00' + hex;\n            if (hex.length & 1)\n                throw new E('unexpected assertion');\n            return hex;\n        },\n        decode(data) {\n            const { Err: E } = DER;\n            if (data[0] & 128)\n                throw new E('Invalid signature integer: negative');\n            if (data[0] === 0x00 && !(data[1] & 128))\n                throw new E('Invalid signature integer: unnecessary leading zero');\n            return b2n(data);\n        },\n    },\n    toSig(hex) {\n        // parse DER signature\n        const { Err: E, _int: int, _tlv: tlv } = DER;\n        const data = typeof hex === 'string' ? h2b(hex) : hex;\n        ut.abytes(data);\n        const { v: seqBytes, l: seqLeftBytes } = tlv.decode(0x30, data);\n        if (seqLeftBytes.length)\n            throw new E('Invalid signature: left bytes after parsing');\n        const { v: rBytes, l: rLeftBytes } = tlv.decode(0x02, seqBytes);\n        const { v: sBytes, l: sLeftBytes } = tlv.decode(0x02, rLeftBytes);\n        if (sLeftBytes.length)\n            throw new E('Invalid signature: left bytes after parsing');\n        return { r: int.decode(rBytes), s: int.decode(sBytes) };\n    },\n    hexFromSig(sig) {\n        const { _tlv: tlv, _int: int } = DER;\n        const seq = `${tlv.encode(0x02, int.encode(sig.r))}${tlv.encode(0x02, int.encode(sig.s))}`;\n        return tlv.encode(0x30, seq);\n    },\n};\n// Be friendly to bad ECMAScript parsers by not using bigint literals\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = BigInt(2), _3n = BigInt(3), _4n = BigInt(4);\nexport function weierstrassPoints(opts) {\n    const CURVE = validatePointOpts(opts);\n    const { Fp } = CURVE; // All curves has same field / group length as for now, but they can differ\n    const Fn = mod.Field(CURVE.n, CURVE.nBitLength);\n    const toBytes = CURVE.toBytes ||\n        ((_c, point, _isCompressed) => {\n            const a = point.toAffine();\n            return ut.concatBytes(Uint8Array.from([0x04]), Fp.toBytes(a.x), Fp.toBytes(a.y));\n        });\n    const fromBytes = CURVE.fromBytes ||\n        ((bytes) => {\n            // const head = bytes[0];\n            const tail = bytes.subarray(1);\n            // if (head !== 0x04) throw new Error('Only non-compressed encoding is supported');\n            const x = Fp.fromBytes(tail.subarray(0, Fp.BYTES));\n            const y = Fp.fromBytes(tail.subarray(Fp.BYTES, 2 * Fp.BYTES));\n            return { x, y };\n        });\n    /**\n     * y² = x³ + ax + b: Short weierstrass curve formula\n     * @returns y²\n     */\n    function weierstrassEquation(x) {\n        const { a, b } = CURVE;\n        const x2 = Fp.sqr(x); // x * x\n        const x3 = Fp.mul(x2, x); // x2 * x\n        return Fp.add(Fp.add(x3, Fp.mul(x, a)), b); // x3 + a * x + b\n    }\n    // Validate whether the passed curve params are valid.\n    // We check if curve equation works for generator point.\n    // `assertValidity()` won't work: `isTorsionFree()` is not available at this point in bls12-381.\n    // ProjectivePoint class has not been initialized yet.\n    if (!Fp.eql(Fp.sqr(CURVE.Gy), weierstrassEquation(CURVE.Gx)))\n        throw new Error('bad generator point: equation left != right');\n    // Valid group elements reside in range 1..n-1\n    function isWithinCurveOrder(num) {\n        return ut.inRange(num, _1n, CURVE.n);\n    }\n    // Validates if priv key is valid and converts it to bigint.\n    // Supports options allowedPrivateKeyLengths and wrapPrivateKey.\n    function normPrivateKeyToScalar(key) {\n        const { allowedPrivateKeyLengths: lengths, nByteLength, wrapPrivateKey, n: N } = CURVE;\n        if (lengths && typeof key !== 'bigint') {\n            if (ut.isBytes(key))\n                key = ut.bytesToHex(key);\n            // Normalize to hex string, pad. E.g. P521 would norm 130-132 char hex to 132-char bytes\n            if (typeof key !== 'string' || !lengths.includes(key.length))\n                throw new Error('Invalid key');\n            key = key.padStart(nByteLength * 2, '0');\n        }\n        let num;\n        try {\n            num =\n                typeof key === 'bigint'\n                    ? key\n                    : ut.bytesToNumberBE(ensureBytes('private key', key, nByteLength));\n        }\n        catch (error) {\n            throw new Error(`private key must be ${nByteLength} bytes, hex or bigint, not ${typeof key}`);\n        }\n        if (wrapPrivateKey)\n            num = mod.mod(num, N); // disabled by default, enabled for BLS\n        ut.aInRange('private key', num, _1n, N); // num in range [1..N-1]\n        return num;\n    }\n    function assertPrjPoint(other) {\n        if (!(other instanceof Point))\n            throw new Error('ProjectivePoint expected');\n    }\n    // Memoized toAffine / validity check. They are heavy. Points are immutable.\n    // Converts Projective point to affine (x, y) coordinates.\n    // Can accept precomputed Z^-1 - for example, from invertBatch.\n    // (x, y, z) ∋ (x=x/z, y=y/z)\n    const toAffineMemo = memoized((p, iz) => {\n        const { px: x, py: y, pz: z } = p;\n        // Fast-path for normalized points\n        if (Fp.eql(z, Fp.ONE))\n            return { x, y };\n        const is0 = p.is0();\n        // If invZ was 0, we return zero point. However we still want to execute\n        // all operations, so we replace invZ with a random number, 1.\n        if (iz == null)\n            iz = is0 ? Fp.ONE : Fp.inv(z);\n        const ax = Fp.mul(x, iz);\n        const ay = Fp.mul(y, iz);\n        const zz = Fp.mul(z, iz);\n        if (is0)\n            return { x: Fp.ZERO, y: Fp.ZERO };\n        if (!Fp.eql(zz, Fp.ONE))\n            throw new Error('invZ was invalid');\n        return { x: ax, y: ay };\n    });\n    // NOTE: on exception this will crash 'cached' and no value will be set.\n    // Otherwise true will be return\n    const assertValidMemo = memoized((p) => {\n        if (p.is0()) {\n            // (0, 1, 0) aka ZERO is invalid in most contexts.\n            // In BLS, ZERO can be serialized, so we allow it.\n            // (0, 0, 0) is wrong representation of ZERO and is always invalid.\n            if (CURVE.allowInfinityPoint && !Fp.is0(p.py))\n                return;\n            throw new Error('bad point: ZERO');\n        }\n        // Some 3rd-party test vectors require different wording between here & `fromCompressedHex`\n        const { x, y } = p.toAffine();\n        // Check if x, y are valid field elements\n        if (!Fp.isValid(x) || !Fp.isValid(y))\n            throw new Error('bad point: x or y not FE');\n        const left = Fp.sqr(y); // y²\n        const right = weierstrassEquation(x); // x³ + ax + b\n        if (!Fp.eql(left, right))\n            throw new Error('bad point: equation left != right');\n        if (!p.isTorsionFree())\n            throw new Error('bad point: not in prime-order subgroup');\n        return true;\n    });\n    /**\n     * Projective Point works in 3d / projective (homogeneous) coordinates: (x, y, z) ∋ (x=x/z, y=y/z)\n     * Default Point works in 2d / affine coordinates: (x, y)\n     * We're doing calculations in projective, because its operations don't require costly inversion.\n     */\n    class Point {\n        constructor(px, py, pz) {\n            this.px = px;\n            this.py = py;\n            this.pz = pz;\n            if (px == null || !Fp.isValid(px))\n                throw new Error('x required');\n            if (py == null || !Fp.isValid(py))\n                throw new Error('y required');\n            if (pz == null || !Fp.isValid(pz))\n                throw new Error('z required');\n            Object.freeze(this);\n        }\n        // Does not validate if the point is on-curve.\n        // Use fromHex instead, or call assertValidity() later.\n        static fromAffine(p) {\n            const { x, y } = p || {};\n            if (!p || !Fp.isValid(x) || !Fp.isValid(y))\n                throw new Error('invalid affine point');\n            if (p instanceof Point)\n                throw new Error('projective point not allowed');\n            const is0 = (i) => Fp.eql(i, Fp.ZERO);\n            // fromAffine(x:0, y:0) would produce (x:0, y:0, z:1), but we need (x:0, y:1, z:0)\n            if (is0(x) && is0(y))\n                return Point.ZERO;\n            return new Point(x, y, Fp.ONE);\n        }\n        get x() {\n            return this.toAffine().x;\n        }\n        get y() {\n            return this.toAffine().y;\n        }\n        /**\n         * Takes a bunch of Projective Points but executes only one\n         * inversion on all of them. Inversion is very slow operation,\n         * so this improves performance massively.\n         * Optimization: converts a list of projective points to a list of identical points with Z=1.\n         */\n        static normalizeZ(points) {\n            const toInv = Fp.invertBatch(points.map((p) => p.pz));\n            return points.map((p, i) => p.toAffine(toInv[i])).map(Point.fromAffine);\n        }\n        /**\n         * Converts hash string or Uint8Array to Point.\n         * @param hex short/long ECDSA hex\n         */\n        static fromHex(hex) {\n            const P = Point.fromAffine(fromBytes(ensureBytes('pointHex', hex)));\n            P.assertValidity();\n            return P;\n        }\n        // Multiplies generator point by privateKey.\n        static fromPrivateKey(privateKey) {\n            return Point.BASE.multiply(normPrivateKeyToScalar(privateKey));\n        }\n        // Multiscalar Multiplication\n        static msm(points, scalars) {\n            return pippenger(Point, Fn, points, scalars);\n        }\n        // \"Private method\", don't use it directly\n        _setWindowSize(windowSize) {\n            wnaf.setWindowSize(this, windowSize);\n        }\n        // A point on curve is valid if it conforms to equation.\n        assertValidity() {\n            assertValidMemo(this);\n        }\n        hasEvenY() {\n            const { y } = this.toAffine();\n            if (Fp.isOdd)\n                return !Fp.isOdd(y);\n            throw new Error(\"Field doesn't support isOdd\");\n        }\n        /**\n         * Compare one point to another.\n         */\n        equals(other) {\n            assertPrjPoint(other);\n            const { px: X1, py: Y1, pz: Z1 } = this;\n            const { px: X2, py: Y2, pz: Z2 } = other;\n            const U1 = Fp.eql(Fp.mul(X1, Z2), Fp.mul(X2, Z1));\n            const U2 = Fp.eql(Fp.mul(Y1, Z2), Fp.mul(Y2, Z1));\n            return U1 && U2;\n        }\n        /**\n         * Flips point to one corresponding to (x, -y) in Affine coordinates.\n         */\n        negate() {\n            return new Point(this.px, Fp.neg(this.py), this.pz);\n        }\n        // Renes-Costello-Batina exception-free doubling formula.\n        // There is 30% faster Jacobian formula, but it is not complete.\n        // https://eprint.iacr.org/2015/1060, algorithm 3\n        // Cost: 8M + 3S + 3*a + 2*b3 + 15add.\n        double() {\n            const { a, b } = CURVE;\n            const b3 = Fp.mul(b, _3n);\n            const { px: X1, py: Y1, pz: Z1 } = this;\n            let X3 = Fp.ZERO, Y3 = Fp.ZERO, Z3 = Fp.ZERO; // prettier-ignore\n            let t0 = Fp.mul(X1, X1); // step 1\n            let t1 = Fp.mul(Y1, Y1);\n            let t2 = Fp.mul(Z1, Z1);\n            let t3 = Fp.mul(X1, Y1);\n            t3 = Fp.add(t3, t3); // step 5\n            Z3 = Fp.mul(X1, Z1);\n            Z3 = Fp.add(Z3, Z3);\n            X3 = Fp.mul(a, Z3);\n            Y3 = Fp.mul(b3, t2);\n            Y3 = Fp.add(X3, Y3); // step 10\n            X3 = Fp.sub(t1, Y3);\n            Y3 = Fp.add(t1, Y3);\n            Y3 = Fp.mul(X3, Y3);\n            X3 = Fp.mul(t3, X3);\n            Z3 = Fp.mul(b3, Z3); // step 15\n            t2 = Fp.mul(a, t2);\n            t3 = Fp.sub(t0, t2);\n            t3 = Fp.mul(a, t3);\n            t3 = Fp.add(t3, Z3);\n            Z3 = Fp.add(t0, t0); // step 20\n            t0 = Fp.add(Z3, t0);\n            t0 = Fp.add(t0, t2);\n            t0 = Fp.mul(t0, t3);\n            Y3 = Fp.add(Y3, t0);\n            t2 = Fp.mul(Y1, Z1); // step 25\n            t2 = Fp.add(t2, t2);\n            t0 = Fp.mul(t2, t3);\n            X3 = Fp.sub(X3, t0);\n            Z3 = Fp.mul(t2, t1);\n            Z3 = Fp.add(Z3, Z3); // step 30\n            Z3 = Fp.add(Z3, Z3);\n            return new Point(X3, Y3, Z3);\n        }\n        // Renes-Costello-Batina exception-free addition formula.\n        // There is 30% faster Jacobian formula, but it is not complete.\n        // https://eprint.iacr.org/2015/1060, algorithm 1\n        // Cost: 12M + 0S + 3*a + 3*b3 + 23add.\n        add(other) {\n            assertPrjPoint(other);\n            const { px: X1, py: Y1, pz: Z1 } = this;\n            const { px: X2, py: Y2, pz: Z2 } = other;\n            let X3 = Fp.ZERO, Y3 = Fp.ZERO, Z3 = Fp.ZERO; // prettier-ignore\n            const a = CURVE.a;\n            const b3 = Fp.mul(CURVE.b, _3n);\n            let t0 = Fp.mul(X1, X2); // step 1\n            let t1 = Fp.mul(Y1, Y2);\n            let t2 = Fp.mul(Z1, Z2);\n            let t3 = Fp.add(X1, Y1);\n            let t4 = Fp.add(X2, Y2); // step 5\n            t3 = Fp.mul(t3, t4);\n            t4 = Fp.add(t0, t1);\n            t3 = Fp.sub(t3, t4);\n            t4 = Fp.add(X1, Z1);\n            let t5 = Fp.add(X2, Z2); // step 10\n            t4 = Fp.mul(t4, t5);\n            t5 = Fp.add(t0, t2);\n            t4 = Fp.sub(t4, t5);\n            t5 = Fp.add(Y1, Z1);\n            X3 = Fp.add(Y2, Z2); // step 15\n            t5 = Fp.mul(t5, X3);\n            X3 = Fp.add(t1, t2);\n            t5 = Fp.sub(t5, X3);\n            Z3 = Fp.mul(a, t4);\n            X3 = Fp.mul(b3, t2); // step 20\n            Z3 = Fp.add(X3, Z3);\n            X3 = Fp.sub(t1, Z3);\n            Z3 = Fp.add(t1, Z3);\n            Y3 = Fp.mul(X3, Z3);\n            t1 = Fp.add(t0, t0); // step 25\n            t1 = Fp.add(t1, t0);\n            t2 = Fp.mul(a, t2);\n            t4 = Fp.mul(b3, t4);\n            t1 = Fp.add(t1, t2);\n            t2 = Fp.sub(t0, t2); // step 30\n            t2 = Fp.mul(a, t2);\n            t4 = Fp.add(t4, t2);\n            t0 = Fp.mul(t1, t4);\n            Y3 = Fp.add(Y3, t0);\n            t0 = Fp.mul(t5, t4); // step 35\n            X3 = Fp.mul(t3, X3);\n            X3 = Fp.sub(X3, t0);\n            t0 = Fp.mul(t3, t1);\n            Z3 = Fp.mul(t5, Z3);\n            Z3 = Fp.add(Z3, t0); // step 40\n            return new Point(X3, Y3, Z3);\n        }\n        subtract(other) {\n            return this.add(other.negate());\n        }\n        is0() {\n            return this.equals(Point.ZERO);\n        }\n        wNAF(n) {\n            return wnaf.wNAFCached(this, n, Point.normalizeZ);\n        }\n        /**\n         * Non-constant-time multiplication. Uses double-and-add algorithm.\n         * It's faster, but should only be used when you don't care about\n         * an exposed private key e.g. sig verification, which works over *public* keys.\n         */\n        multiplyUnsafe(sc) {\n            ut.aInRange('scalar', sc, _0n, CURVE.n);\n            const I = Point.ZERO;\n            if (sc === _0n)\n                return I;\n            if (sc === _1n)\n                return this;\n            const { endo } = CURVE;\n            if (!endo)\n                return wnaf.unsafeLadder(this, sc);\n            // Apply endomorphism\n            let { k1neg, k1, k2neg, k2 } = endo.splitScalar(sc);\n            let k1p = I;\n            let k2p = I;\n            let d = this;\n            while (k1 > _0n || k2 > _0n) {\n                if (k1 & _1n)\n                    k1p = k1p.add(d);\n                if (k2 & _1n)\n                    k2p = k2p.add(d);\n                d = d.double();\n                k1 >>= _1n;\n                k2 >>= _1n;\n            }\n            if (k1neg)\n                k1p = k1p.negate();\n            if (k2neg)\n                k2p = k2p.negate();\n            k2p = new Point(Fp.mul(k2p.px, endo.beta), k2p.py, k2p.pz);\n            return k1p.add(k2p);\n        }\n        /**\n         * Constant time multiplication.\n         * Uses wNAF method. Windowed method may be 10% faster,\n         * but takes 2x longer to generate and consumes 2x memory.\n         * Uses precomputes when available.\n         * Uses endomorphism for Koblitz curves.\n         * @param scalar by which the point would be multiplied\n         * @returns New point\n         */\n        multiply(scalar) {\n            const { endo, n: N } = CURVE;\n            ut.aInRange('scalar', scalar, _1n, N);\n            let point, fake; // Fake point is used to const-time mult\n            if (endo) {\n                const { k1neg, k1, k2neg, k2 } = endo.splitScalar(scalar);\n                let { p: k1p, f: f1p } = this.wNAF(k1);\n                let { p: k2p, f: f2p } = this.wNAF(k2);\n                k1p = wnaf.constTimeNegate(k1neg, k1p);\n                k2p = wnaf.constTimeNegate(k2neg, k2p);\n                k2p = new Point(Fp.mul(k2p.px, endo.beta), k2p.py, k2p.pz);\n                point = k1p.add(k2p);\n                fake = f1p.add(f2p);\n            }\n            else {\n                const { p, f } = this.wNAF(scalar);\n                point = p;\n                fake = f;\n            }\n            // Normalize `z` for both points, but return only real one\n            return Point.normalizeZ([point, fake])[0];\n        }\n        /**\n         * Efficiently calculate `aP + bQ`. Unsafe, can expose private key, if used incorrectly.\n         * Not using Strauss-Shamir trick: precomputation tables are faster.\n         * The trick could be useful if both P and Q are not G (not in our case).\n         * @returns non-zero affine point\n         */\n        multiplyAndAddUnsafe(Q, a, b) {\n            const G = Point.BASE; // No Strauss-Shamir trick: we have 10% faster G precomputes\n            const mul = (P, a // Select faster multiply() method\n            ) => (a === _0n || a === _1n || !P.equals(G) ? P.multiplyUnsafe(a) : P.multiply(a));\n            const sum = mul(this, a).add(mul(Q, b));\n            return sum.is0() ? undefined : sum;\n        }\n        // Converts Projective point to affine (x, y) coordinates.\n        // Can accept precomputed Z^-1 - for example, from invertBatch.\n        // (x, y, z) ∋ (x=x/z, y=y/z)\n        toAffine(iz) {\n            return toAffineMemo(this, iz);\n        }\n        isTorsionFree() {\n            const { h: cofactor, isTorsionFree } = CURVE;\n            if (cofactor === _1n)\n                return true; // No subgroups, always torsion-free\n            if (isTorsionFree)\n                return isTorsionFree(Point, this);\n            throw new Error('isTorsionFree() has not been declared for the elliptic curve');\n        }\n        clearCofactor() {\n            const { h: cofactor, clearCofactor } = CURVE;\n            if (cofactor === _1n)\n                return this; // Fast-path\n            if (clearCofactor)\n                return clearCofactor(Point, this);\n            return this.multiplyUnsafe(CURVE.h);\n        }\n        toRawBytes(isCompressed = true) {\n            abool('isCompressed', isCompressed);\n            this.assertValidity();\n            return toBytes(Point, this, isCompressed);\n        }\n        toHex(isCompressed = true) {\n            abool('isCompressed', isCompressed);\n            return ut.bytesToHex(this.toRawBytes(isCompressed));\n        }\n    }\n    Point.BASE = new Point(CURVE.Gx, CURVE.Gy, Fp.ONE);\n    Point.ZERO = new Point(Fp.ZERO, Fp.ONE, Fp.ZERO);\n    const _bits = CURVE.nBitLength;\n    const wnaf = wNAF(Point, CURVE.endo ? Math.ceil(_bits / 2) : _bits);\n    // Validate if generator point is on curve\n    return {\n        CURVE,\n        ProjectivePoint: Point,\n        normPrivateKeyToScalar,\n        weierstrassEquation,\n        isWithinCurveOrder,\n    };\n}\nfunction validateOpts(curve) {\n    const opts = validateBasic(curve);\n    ut.validateObject(opts, {\n        hash: 'hash',\n        hmac: 'function',\n        randomBytes: 'function',\n    }, {\n        bits2int: 'function',\n        bits2int_modN: 'function',\n        lowS: 'boolean',\n    });\n    return Object.freeze({ lowS: true, ...opts });\n}\n/**\n * Creates short weierstrass curve and ECDSA signature methods for it.\n * @example\n * import { Field } from '@noble/curves/abstract/modular';\n * // Before that, define BigInt-s: a, b, p, n, Gx, Gy\n * const curve = weierstrass({ a, b, Fp: Field(p), n, Gx, Gy, h: 1n })\n */\nexport function weierstrass(curveDef) {\n    const CURVE = validateOpts(curveDef);\n    const { Fp, n: CURVE_ORDER } = CURVE;\n    const compressedLen = Fp.BYTES + 1; // e.g. 33 for 32\n    const uncompressedLen = 2 * Fp.BYTES + 1; // e.g. 65 for 32\n    function modN(a) {\n        return mod.mod(a, CURVE_ORDER);\n    }\n    function invN(a) {\n        return mod.invert(a, CURVE_ORDER);\n    }\n    const { ProjectivePoint: Point, normPrivateKeyToScalar, weierstrassEquation, isWithinCurveOrder, } = weierstrassPoints({\n        ...CURVE,\n        toBytes(_c, point, isCompressed) {\n            const a = point.toAffine();\n            const x = Fp.toBytes(a.x);\n            const cat = ut.concatBytes;\n            abool('isCompressed', isCompressed);\n            if (isCompressed) {\n                return cat(Uint8Array.from([point.hasEvenY() ? 0x02 : 0x03]), x);\n            }\n            else {\n                return cat(Uint8Array.from([0x04]), x, Fp.toBytes(a.y));\n            }\n        },\n        fromBytes(bytes) {\n            const len = bytes.length;\n            const head = bytes[0];\n            const tail = bytes.subarray(1);\n            // this.assertValidity() is done inside of fromHex\n            if (len === compressedLen && (head === 0x02 || head === 0x03)) {\n                const x = ut.bytesToNumberBE(tail);\n                if (!ut.inRange(x, _1n, Fp.ORDER))\n                    throw new Error('Point is not on curve');\n                const y2 = weierstrassEquation(x); // y² = x³ + ax + b\n                let y;\n                try {\n                    y = Fp.sqrt(y2); // y = y² ^ (p+1)/4\n                }\n                catch (sqrtError) {\n                    const suffix = sqrtError instanceof Error ? ': ' + sqrtError.message : '';\n                    throw new Error('Point is not on curve' + suffix);\n                }\n                const isYOdd = (y & _1n) === _1n;\n                // ECDSA\n                const isHeadOdd = (head & 1) === 1;\n                if (isHeadOdd !== isYOdd)\n                    y = Fp.neg(y);\n                return { x, y };\n            }\n            else if (len === uncompressedLen && head === 0x04) {\n                const x = Fp.fromBytes(tail.subarray(0, Fp.BYTES));\n                const y = Fp.fromBytes(tail.subarray(Fp.BYTES, 2 * Fp.BYTES));\n                return { x, y };\n            }\n            else {\n                throw new Error(`Point of length ${len} was invalid. Expected ${compressedLen} compressed bytes or ${uncompressedLen} uncompressed bytes`);\n            }\n        },\n    });\n    const numToNByteStr = (num) => ut.bytesToHex(ut.numberToBytesBE(num, CURVE.nByteLength));\n    function isBiggerThanHalfOrder(number) {\n        const HALF = CURVE_ORDER >> _1n;\n        return number > HALF;\n    }\n    function normalizeS(s) {\n        return isBiggerThanHalfOrder(s) ? modN(-s) : s;\n    }\n    // slice bytes num\n    const slcNum = (b, from, to) => ut.bytesToNumberBE(b.slice(from, to));\n    /**\n     * ECDSA signature with its (r, s) properties. Supports DER & compact representations.\n     */\n    class Signature {\n        constructor(r, s, recovery) {\n            this.r = r;\n            this.s = s;\n            this.recovery = recovery;\n            this.assertValidity();\n        }\n        // pair (bytes of r, bytes of s)\n        static fromCompact(hex) {\n            const l = CURVE.nByteLength;\n            hex = ensureBytes('compactSignature', hex, l * 2);\n            return new Signature(slcNum(hex, 0, l), slcNum(hex, l, 2 * l));\n        }\n        // DER encoded ECDSA signature\n        // https://bitcoin.stackexchange.com/questions/57644/what-are-the-parts-of-a-bitcoin-transaction-input-script\n        static fromDER(hex) {\n            const { r, s } = DER.toSig(ensureBytes('DER', hex));\n            return new Signature(r, s);\n        }\n        assertValidity() {\n            ut.aInRange('r', this.r, _1n, CURVE_ORDER); // r in [1..N]\n            ut.aInRange('s', this.s, _1n, CURVE_ORDER); // s in [1..N]\n        }\n        addRecoveryBit(recovery) {\n            return new Signature(this.r, this.s, recovery);\n        }\n        recoverPublicKey(msgHash) {\n            const { r, s, recovery: rec } = this;\n            const h = bits2int_modN(ensureBytes('msgHash', msgHash)); // Truncate hash\n            if (rec == null || ![0, 1, 2, 3].includes(rec))\n                throw new Error('recovery id invalid');\n            const radj = rec === 2 || rec === 3 ? r + CURVE.n : r;\n            if (radj >= Fp.ORDER)\n                throw new Error('recovery id 2 or 3 invalid');\n            const prefix = (rec & 1) === 0 ? '02' : '03';\n            const R = Point.fromHex(prefix + numToNByteStr(radj));\n            const ir = invN(radj); // r^-1\n            const u1 = modN(-h * ir); // -hr^-1\n            const u2 = modN(s * ir); // sr^-1\n            const Q = Point.BASE.multiplyAndAddUnsafe(R, u1, u2); // (sr^-1)R-(hr^-1)G = -(hr^-1)G + (sr^-1)\n            if (!Q)\n                throw new Error('point at infinify'); // unsafe is fine: no priv data leaked\n            Q.assertValidity();\n            return Q;\n        }\n        // Signatures should be low-s, to prevent malleability.\n        hasHighS() {\n            return isBiggerThanHalfOrder(this.s);\n        }\n        normalizeS() {\n            return this.hasHighS() ? new Signature(this.r, modN(-this.s), this.recovery) : this;\n        }\n        // DER-encoded\n        toDERRawBytes() {\n            return ut.hexToBytes(this.toDERHex());\n        }\n        toDERHex() {\n            return DER.hexFromSig({ r: this.r, s: this.s });\n        }\n        // padded bytes of r, then padded bytes of s\n        toCompactRawBytes() {\n            return ut.hexToBytes(this.toCompactHex());\n        }\n        toCompactHex() {\n            return numToNByteStr(this.r) + numToNByteStr(this.s);\n        }\n    }\n    const utils = {\n        isValidPrivateKey(privateKey) {\n            try {\n                normPrivateKeyToScalar(privateKey);\n                return true;\n            }\n            catch (error) {\n                return false;\n            }\n        },\n        normPrivateKeyToScalar: normPrivateKeyToScalar,\n        /**\n         * Produces cryptographically secure private key from random of size\n         * (groupLen + ceil(groupLen / 2)) with modulo bias being negligible.\n         */\n        randomPrivateKey: () => {\n            const length = mod.getMinHashLength(CURVE.n);\n            return mod.mapHashToField(CURVE.randomBytes(length), CURVE.n);\n        },\n        /**\n         * Creates precompute table for an arbitrary EC point. Makes point \"cached\".\n         * Allows to massively speed-up `point.multiply(scalar)`.\n         * @returns cached point\n         * @example\n         * const fast = utils.precompute(8, ProjectivePoint.fromHex(someonesPubKey));\n         * fast.multiply(privKey); // much faster ECDH now\n         */\n        precompute(windowSize = 8, point = Point.BASE) {\n            point._setWindowSize(windowSize);\n            point.multiply(BigInt(3)); // 3 is arbitrary, just need any number here\n            return point;\n        },\n    };\n    /**\n     * Computes public key for a private key. Checks for validity of the private key.\n     * @param privateKey private key\n     * @param isCompressed whether to return compact (default), or full key\n     * @returns Public key, full when isCompressed=false; short when isCompressed=true\n     */\n    function getPublicKey(privateKey, isCompressed = true) {\n        return Point.fromPrivateKey(privateKey).toRawBytes(isCompressed);\n    }\n    /**\n     * Quick and dirty check for item being public key. Does not validate hex, or being on-curve.\n     */\n    function isProbPub(item) {\n        const arr = ut.isBytes(item);\n        const str = typeof item === 'string';\n        const len = (arr || str) && item.length;\n        if (arr)\n            return len === compressedLen || len === uncompressedLen;\n        if (str)\n            return len === 2 * compressedLen || len === 2 * uncompressedLen;\n        if (item instanceof Point)\n            return true;\n        return false;\n    }\n    /**\n     * ECDH (Elliptic Curve Diffie Hellman).\n     * Computes shared public key from private key and public key.\n     * Checks: 1) private key validity 2) shared key is on-curve.\n     * Does NOT hash the result.\n     * @param privateA private key\n     * @param publicB different public key\n     * @param isCompressed whether to return compact (default), or full key\n     * @returns shared public key\n     */\n    function getSharedSecret(privateA, publicB, isCompressed = true) {\n        if (isProbPub(privateA))\n            throw new Error('first arg must be private key');\n        if (!isProbPub(publicB))\n            throw new Error('second arg must be public key');\n        const b = Point.fromHex(publicB); // check for being on-curve\n        return b.multiply(normPrivateKeyToScalar(privateA)).toRawBytes(isCompressed);\n    }\n    // RFC6979: ensure ECDSA msg is X bytes and < N. RFC suggests optional truncating via bits2octets.\n    // FIPS 186-4 4.6 suggests the leftmost min(nBitLen, outLen) bits, which matches bits2int.\n    // bits2int can produce res>N, we can do mod(res, N) since the bitLen is the same.\n    // int2octets can't be used; pads small msgs with 0: unacceptatble for trunc as per RFC vectors\n    const bits2int = CURVE.bits2int ||\n        function (bytes) {\n            // For curves with nBitLength % 8 !== 0: bits2octets(bits2octets(m)) !== bits2octets(m)\n            // for some cases, since bytes.length * 8 is not actual bitLength.\n            const num = ut.bytesToNumberBE(bytes); // check for == u8 done here\n            const delta = bytes.length * 8 - CURVE.nBitLength; // truncate to nBitLength leftmost bits\n            return delta > 0 ? num >> BigInt(delta) : num;\n        };\n    const bits2int_modN = CURVE.bits2int_modN ||\n        function (bytes) {\n            return modN(bits2int(bytes)); // can't use bytesToNumberBE here\n        };\n    // NOTE: pads output with zero as per spec\n    const ORDER_MASK = ut.bitMask(CURVE.nBitLength);\n    /**\n     * Converts to bytes. Checks if num in `[0..ORDER_MASK-1]` e.g.: `[0..2^256-1]`.\n     */\n    function int2octets(num) {\n        ut.aInRange(`num < 2^${CURVE.nBitLength}`, num, _0n, ORDER_MASK);\n        // works with order, can have different size than numToField!\n        return ut.numberToBytesBE(num, CURVE.nByteLength);\n    }\n    // Steps A, D of RFC6979 3.2\n    // Creates RFC6979 seed; converts msg/privKey to numbers.\n    // Used only in sign, not in verify.\n    // NOTE: we cannot assume here that msgHash has same amount of bytes as curve order, this will be wrong at least for P521.\n    // Also it can be bigger for P224 + SHA256\n    function prepSig(msgHash, privateKey, opts = defaultSigOpts) {\n        if (['recovered', 'canonical'].some((k) => k in opts))\n            throw new Error('sign() legacy options not supported');\n        const { hash, randomBytes } = CURVE;\n        let { lowS, prehash, extraEntropy: ent } = opts; // generates low-s sigs by default\n        if (lowS == null)\n            lowS = true; // RFC6979 3.2: we skip step A, because we already provide hash\n        msgHash = ensureBytes('msgHash', msgHash);\n        validateSigVerOpts(opts);\n        if (prehash)\n            msgHash = ensureBytes('prehashed msgHash', hash(msgHash));\n        // We can't later call bits2octets, since nested bits2int is broken for curves\n        // with nBitLength % 8 !== 0. Because of that, we unwrap it here as int2octets call.\n        // const bits2octets = (bits) => int2octets(bits2int_modN(bits))\n        const h1int = bits2int_modN(msgHash);\n        const d = normPrivateKeyToScalar(privateKey); // validate private key, convert to bigint\n        const seedArgs = [int2octets(d), int2octets(h1int)];\n        // extraEntropy. RFC6979 3.6: additional k' (optional).\n        if (ent != null && ent !== false) {\n            // K = HMAC_K(V || 0x00 || int2octets(x) || bits2octets(h1) || k')\n            const e = ent === true ? randomBytes(Fp.BYTES) : ent; // generate random bytes OR pass as-is\n            seedArgs.push(ensureBytes('extraEntropy', e)); // check for being bytes\n        }\n        const seed = ut.concatBytes(...seedArgs); // Step D of RFC6979 3.2\n        const m = h1int; // NOTE: no need to call bits2int second time here, it is inside truncateHash!\n        // Converts signature params into point w r/s, checks result for validity.\n        function k2sig(kBytes) {\n            // RFC 6979 Section 3.2, step 3: k = bits2int(T)\n            const k = bits2int(kBytes); // Cannot use fields methods, since it is group element\n            if (!isWithinCurveOrder(k))\n                return; // Important: all mod() calls here must be done over N\n            const ik = invN(k); // k^-1 mod n\n            const q = Point.BASE.multiply(k).toAffine(); // q = Gk\n            const r = modN(q.x); // r = q.x mod n\n            if (r === _0n)\n                return;\n            // Can use scalar blinding b^-1(bm + bdr) where b ∈ [1,q−1] according to\n            // https://tches.iacr.org/index.php/TCHES/article/view/7337/6509. We've decided against it:\n            // a) dependency on CSPRNG b) 15% slowdown c) doesn't really help since bigints are not CT\n            const s = modN(ik * modN(m + r * d)); // Not using blinding here\n            if (s === _0n)\n                return;\n            let recovery = (q.x === r ? 0 : 2) | Number(q.y & _1n); // recovery bit (2 or 3, when q.x > n)\n            let normS = s;\n            if (lowS && isBiggerThanHalfOrder(s)) {\n                normS = normalizeS(s); // if lowS was passed, ensure s is always\n                recovery ^= 1; // // in the bottom half of N\n            }\n            return new Signature(r, normS, recovery); // use normS, not s\n        }\n        return { seed, k2sig };\n    }\n    const defaultSigOpts = { lowS: CURVE.lowS, prehash: false };\n    const defaultVerOpts = { lowS: CURVE.lowS, prehash: false };\n    /**\n     * Signs message hash with a private key.\n     * ```\n     * sign(m, d, k) where\n     *   (x, y) = G × k\n     *   r = x mod n\n     *   s = (m + dr)/k mod n\n     * ```\n     * @param msgHash NOT message. msg needs to be hashed to `msgHash`, or use `prehash`.\n     * @param privKey private key\n     * @param opts lowS for non-malleable sigs. extraEntropy for mixing randomness into k. prehash will hash first arg.\n     * @returns signature with recovery param\n     */\n    function sign(msgHash, privKey, opts = defaultSigOpts) {\n        const { seed, k2sig } = prepSig(msgHash, privKey, opts); // Steps A, D of RFC6979 3.2.\n        const C = CURVE;\n        const drbg = ut.createHmacDrbg(C.hash.outputLen, C.nByteLength, C.hmac);\n        return drbg(seed, k2sig); // Steps B, C, D, E, F, G\n    }\n    // Enable precomputes. Slows down first publicKey computation by 20ms.\n    Point.BASE._setWindowSize(8);\n    // utils.precompute(8, ProjectivePoint.BASE)\n    /**\n     * Verifies a signature against message hash and public key.\n     * Rejects lowS signatures by default: to override,\n     * specify option `{lowS: false}`. Implements section 4.1.4 from https://www.secg.org/sec1-v2.pdf:\n     *\n     * ```\n     * verify(r, s, h, P) where\n     *   U1 = hs^-1 mod n\n     *   U2 = rs^-1 mod n\n     *   R = U1⋅G - U2⋅P\n     *   mod(R.x, n) == r\n     * ```\n     */\n    function verify(signature, msgHash, publicKey, opts = defaultVerOpts) {\n        const sg = signature;\n        msgHash = ensureBytes('msgHash', msgHash);\n        publicKey = ensureBytes('publicKey', publicKey);\n        if ('strict' in opts)\n            throw new Error('options.strict was renamed to lowS');\n        validateSigVerOpts(opts);\n        const { lowS, prehash } = opts;\n        let _sig = undefined;\n        let P;\n        try {\n            if (typeof sg === 'string' || ut.isBytes(sg)) {\n                // Signature can be represented in 2 ways: compact (2*nByteLength) & DER (variable-length).\n                // Since DER can also be 2*nByteLength bytes, we check for it first.\n                try {\n                    _sig = Signature.fromDER(sg);\n                }\n                catch (derError) {\n                    if (!(derError instanceof DER.Err))\n                        throw derError;\n                    _sig = Signature.fromCompact(sg);\n                }\n            }\n            else if (typeof sg === 'object' && typeof sg.r === 'bigint' && typeof sg.s === 'bigint') {\n                const { r, s } = sg;\n                _sig = new Signature(r, s);\n            }\n            else {\n                throw new Error('PARSE');\n            }\n            P = Point.fromHex(publicKey);\n        }\n        catch (error) {\n            if (error.message === 'PARSE')\n                throw new Error(`signature must be Signature instance, Uint8Array or hex string`);\n            return false;\n        }\n        if (lowS && _sig.hasHighS())\n            return false;\n        if (prehash)\n            msgHash = CURVE.hash(msgHash);\n        const { r, s } = _sig;\n        const h = bits2int_modN(msgHash); // Cannot use fields methods, since it is group element\n        const is = invN(s); // s^-1\n        const u1 = modN(h * is); // u1 = hs^-1 mod n\n        const u2 = modN(r * is); // u2 = rs^-1 mod n\n        const R = Point.BASE.multiplyAndAddUnsafe(P, u1, u2)?.toAffine(); // R = u1⋅G + u2⋅P\n        if (!R)\n            return false;\n        const v = modN(R.x);\n        return v === r;\n    }\n    return {\n        CURVE,\n        getPublicKey,\n        getSharedSecret,\n        sign,\n        verify,\n        ProjectivePoint: Point,\n        Signature,\n        utils,\n    };\n}\n/**\n * Implementation of the Shallue and van de Woestijne method for any weierstrass curve.\n * TODO: check if there is a way to merge this with uvRatio in Edwards; move to modular.\n * b = True and y = sqrt(u / v) if (u / v) is square in F, and\n * b = False and y = sqrt(Z * (u / v)) otherwise.\n * @param Fp\n * @param Z\n * @returns\n */\nexport function SWUFpSqrtRatio(Fp, Z) {\n    // Generic implementation\n    const q = Fp.ORDER;\n    let l = _0n;\n    for (let o = q - _1n; o % _2n === _0n; o /= _2n)\n        l += _1n;\n    const c1 = l; // 1. c1, the largest integer such that 2^c1 divides q - 1.\n    // We need 2n ** c1 and 2n ** (c1-1). We can't use **; but we can use <<.\n    // 2n ** c1 == 2n << (c1-1)\n    const _2n_pow_c1_1 = _2n << (c1 - _1n - _1n);\n    const _2n_pow_c1 = _2n_pow_c1_1 * _2n;\n    const c2 = (q - _1n) / _2n_pow_c1; // 2. c2 = (q - 1) / (2^c1)  # Integer arithmetic\n    const c3 = (c2 - _1n) / _2n; // 3. c3 = (c2 - 1) / 2            # Integer arithmetic\n    const c4 = _2n_pow_c1 - _1n; // 4. c4 = 2^c1 - 1                # Integer arithmetic\n    const c5 = _2n_pow_c1_1; // 5. c5 = 2^(c1 - 1)                  # Integer arithmetic\n    const c6 = Fp.pow(Z, c2); // 6. c6 = Z^c2\n    const c7 = Fp.pow(Z, (c2 + _1n) / _2n); // 7. c7 = Z^((c2 + 1) / 2)\n    let sqrtRatio = (u, v) => {\n        let tv1 = c6; // 1. tv1 = c6\n        let tv2 = Fp.pow(v, c4); // 2. tv2 = v^c4\n        let tv3 = Fp.sqr(tv2); // 3. tv3 = tv2^2\n        tv3 = Fp.mul(tv3, v); // 4. tv3 = tv3 * v\n        let tv5 = Fp.mul(u, tv3); // 5. tv5 = u * tv3\n        tv5 = Fp.pow(tv5, c3); // 6. tv5 = tv5^c3\n        tv5 = Fp.mul(tv5, tv2); // 7. tv5 = tv5 * tv2\n        tv2 = Fp.mul(tv5, v); // 8. tv2 = tv5 * v\n        tv3 = Fp.mul(tv5, u); // 9. tv3 = tv5 * u\n        let tv4 = Fp.mul(tv3, tv2); // 10. tv4 = tv3 * tv2\n        tv5 = Fp.pow(tv4, c5); // 11. tv5 = tv4^c5\n        let isQR = Fp.eql(tv5, Fp.ONE); // 12. isQR = tv5 == 1\n        tv2 = Fp.mul(tv3, c7); // 13. tv2 = tv3 * c7\n        tv5 = Fp.mul(tv4, tv1); // 14. tv5 = tv4 * tv1\n        tv3 = Fp.cmov(tv2, tv3, isQR); // 15. tv3 = CMOV(tv2, tv3, isQR)\n        tv4 = Fp.cmov(tv5, tv4, isQR); // 16. tv4 = CMOV(tv5, tv4, isQR)\n        // 17. for i in (c1, c1 - 1, ..., 2):\n        for (let i = c1; i > _1n; i--) {\n            let tv5 = i - _2n; // 18.    tv5 = i - 2\n            tv5 = _2n << (tv5 - _1n); // 19.    tv5 = 2^tv5\n            let tvv5 = Fp.pow(tv4, tv5); // 20.    tv5 = tv4^tv5\n            const e1 = Fp.eql(tvv5, Fp.ONE); // 21.    e1 = tv5 == 1\n            tv2 = Fp.mul(tv3, tv1); // 22.    tv2 = tv3 * tv1\n            tv1 = Fp.mul(tv1, tv1); // 23.    tv1 = tv1 * tv1\n            tvv5 = Fp.mul(tv4, tv1); // 24.    tv5 = tv4 * tv1\n            tv3 = Fp.cmov(tv2, tv3, e1); // 25.    tv3 = CMOV(tv2, tv3, e1)\n            tv4 = Fp.cmov(tvv5, tv4, e1); // 26.    tv4 = CMOV(tv5, tv4, e1)\n        }\n        return { isValid: isQR, value: tv3 };\n    };\n    if (Fp.ORDER % _4n === _3n) {\n        // sqrt_ratio_3mod4(u, v)\n        const c1 = (Fp.ORDER - _3n) / _4n; // 1. c1 = (q - 3) / 4     # Integer arithmetic\n        const c2 = Fp.sqrt(Fp.neg(Z)); // 2. c2 = sqrt(-Z)\n        sqrtRatio = (u, v) => {\n            let tv1 = Fp.sqr(v); // 1. tv1 = v^2\n            const tv2 = Fp.mul(u, v); // 2. tv2 = u * v\n            tv1 = Fp.mul(tv1, tv2); // 3. tv1 = tv1 * tv2\n            let y1 = Fp.pow(tv1, c1); // 4. y1 = tv1^c1\n            y1 = Fp.mul(y1, tv2); // 5. y1 = y1 * tv2\n            const y2 = Fp.mul(y1, c2); // 6. y2 = y1 * c2\n            const tv3 = Fp.mul(Fp.sqr(y1), v); // 7. tv3 = y1^2; 8. tv3 = tv3 * v\n            const isQR = Fp.eql(tv3, u); // 9. isQR = tv3 == u\n            let y = Fp.cmov(y2, y1, isQR); // 10. y = CMOV(y2, y1, isQR)\n            return { isValid: isQR, value: y }; // 11. return (isQR, y) isQR ? y : y*c2\n        };\n    }\n    // No curves uses that\n    // if (Fp.ORDER % _8n === _5n) // sqrt_ratio_5mod8\n    return sqrtRatio;\n}\n/**\n * Simplified Shallue-van de Woestijne-Ulas Method\n * https://www.rfc-editor.org/rfc/rfc9380#section-6.6.2\n */\nexport function mapToCurveSimpleSWU(Fp, opts) {\n    mod.validateField(Fp);\n    if (!Fp.isValid(opts.A) || !Fp.isValid(opts.B) || !Fp.isValid(opts.Z))\n        throw new Error('mapToCurveSimpleSWU: invalid opts');\n    const sqrtRatio = SWUFpSqrtRatio(Fp, opts.Z);\n    if (!Fp.isOdd)\n        throw new Error('Fp.isOdd is not implemented!');\n    // Input: u, an element of F.\n    // Output: (x, y), a point on E.\n    return (u) => {\n        // prettier-ignore\n        let tv1, tv2, tv3, tv4, tv5, tv6, x, y;\n        tv1 = Fp.sqr(u); // 1.  tv1 = u^2\n        tv1 = Fp.mul(tv1, opts.Z); // 2.  tv1 = Z * tv1\n        tv2 = Fp.sqr(tv1); // 3.  tv2 = tv1^2\n        tv2 = Fp.add(tv2, tv1); // 4.  tv2 = tv2 + tv1\n        tv3 = Fp.add(tv2, Fp.ONE); // 5.  tv3 = tv2 + 1\n        tv3 = Fp.mul(tv3, opts.B); // 6.  tv3 = B * tv3\n        tv4 = Fp.cmov(opts.Z, Fp.neg(tv2), !Fp.eql(tv2, Fp.ZERO)); // 7.  tv4 = CMOV(Z, -tv2, tv2 != 0)\n        tv4 = Fp.mul(tv4, opts.A); // 8.  tv4 = A * tv4\n        tv2 = Fp.sqr(tv3); // 9.  tv2 = tv3^2\n        tv6 = Fp.sqr(tv4); // 10. tv6 = tv4^2\n        tv5 = Fp.mul(tv6, opts.A); // 11. tv5 = A * tv6\n        tv2 = Fp.add(tv2, tv5); // 12. tv2 = tv2 + tv5\n        tv2 = Fp.mul(tv2, tv3); // 13. tv2 = tv2 * tv3\n        tv6 = Fp.mul(tv6, tv4); // 14. tv6 = tv6 * tv4\n        tv5 = Fp.mul(tv6, opts.B); // 15. tv5 = B * tv6\n        tv2 = Fp.add(tv2, tv5); // 16. tv2 = tv2 + tv5\n        x = Fp.mul(tv1, tv3); // 17.   x = tv1 * tv3\n        const { isValid, value } = sqrtRatio(tv2, tv6); // 18. (is_gx1_square, y1) = sqrt_ratio(tv2, tv6)\n        y = Fp.mul(tv1, u); // 19.   y = tv1 * u  -> Z * u^3 * y1\n        y = Fp.mul(y, value); // 20.   y = y * y1\n        x = Fp.cmov(x, tv3, isValid); // 21.   x = CMOV(x, tv3, is_gx1_square)\n        y = Fp.cmov(y, value, isValid); // 22.   y = CMOV(y, y1, is_gx1_square)\n        const e1 = Fp.isOdd(u) === Fp.isOdd(y); // 23.  e1 = sgn0(u) == sgn0(y)\n        y = Fp.cmov(Fp.neg(y), y, e1); // 24.   y = CMOV(-y, y, e1)\n        x = Fp.div(x, tv4); // 25.   x = x / tv4\n        return { x, y };\n    };\n}\n//# sourceMappingURL=weierstrass.js.map","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { hmac } from '@noble/hashes/hmac';\nimport { concatBytes, randomBytes } from '@noble/hashes/utils';\nimport { weierstrass } from './abstract/weierstrass.js';\n// connects noble-curves to noble-hashes\nexport function getHash(hash) {\n    return {\n        hash,\n        hmac: (key, ...msgs) => hmac(hash, key, concatBytes(...msgs)),\n        randomBytes,\n    };\n}\nexport function createCurve(curveDef, defHash) {\n    const create = (hash) => weierstrass({ ...curveDef, ...getHash(hash) });\n    return Object.freeze({ ...create(defHash), create });\n}\n//# sourceMappingURL=_shortw_utils.js.map","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { sha256 } from '@noble/hashes/sha256';\nimport { randomBytes } from '@noble/hashes/utils';\nimport { createCurve } from './_shortw_utils.js';\nimport { createHasher, isogenyMap } from './abstract/hash-to-curve.js';\nimport { Field, mod, pow2 } from './abstract/modular.js';\nimport { inRange, aInRange, bytesToNumberBE, concatBytes, ensureBytes, numberToBytesBE, } from './abstract/utils.js';\nimport { mapToCurveSimpleSWU } from './abstract/weierstrass.js';\nconst secp256k1P = BigInt('0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f');\nconst secp256k1N = BigInt('0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141');\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst divNearest = (a, b) => (a + b / _2n) / b;\n/**\n * √n = n^((p+1)/4) for fields p = 3 mod 4. We unwrap the loop and multiply bit-by-bit.\n * (P+1n/4n).toString(2) would produce bits [223x 1, 0, 22x 1, 4x 0, 11, 00]\n */\nfunction sqrtMod(y) {\n    const P = secp256k1P;\n    // prettier-ignore\n    const _3n = BigInt(3), _6n = BigInt(6), _11n = BigInt(11), _22n = BigInt(22);\n    // prettier-ignore\n    const _23n = BigInt(23), _44n = BigInt(44), _88n = BigInt(88);\n    const b2 = (y * y * y) % P; // x^3, 11\n    const b3 = (b2 * b2 * y) % P; // x^7\n    const b6 = (pow2(b3, _3n, P) * b3) % P;\n    const b9 = (pow2(b6, _3n, P) * b3) % P;\n    const b11 = (pow2(b9, _2n, P) * b2) % P;\n    const b22 = (pow2(b11, _11n, P) * b11) % P;\n    const b44 = (pow2(b22, _22n, P) * b22) % P;\n    const b88 = (pow2(b44, _44n, P) * b44) % P;\n    const b176 = (pow2(b88, _88n, P) * b88) % P;\n    const b220 = (pow2(b176, _44n, P) * b44) % P;\n    const b223 = (pow2(b220, _3n, P) * b3) % P;\n    const t1 = (pow2(b223, _23n, P) * b22) % P;\n    const t2 = (pow2(t1, _6n, P) * b2) % P;\n    const root = pow2(t2, _2n, P);\n    if (!Fp.eql(Fp.sqr(root), y))\n        throw new Error('Cannot find square root');\n    return root;\n}\nconst Fp = Field(secp256k1P, undefined, undefined, { sqrt: sqrtMod });\n/**\n * secp256k1 short weierstrass curve and ECDSA signatures over it.\n */\nexport const secp256k1 = createCurve({\n    a: BigInt(0), // equation params: a, b\n    b: BigInt(7), // Seem to be rigid: bitcointalk.org/index.php?topic=289795.msg3183975#msg3183975\n    Fp, // Field's prime: 2n**256n - 2n**32n - 2n**9n - 2n**8n - 2n**7n - 2n**6n - 2n**4n - 1n\n    n: secp256k1N, // Curve order, total count of valid points in the field\n    // Base point (x, y) aka generator point\n    Gx: BigInt('55066263022277343669578718895168534326250603453777594175500187360389116729240'),\n    Gy: BigInt('32670510020758816978083085130507043184471273380659243275938904335757337482424'),\n    h: BigInt(1), // Cofactor\n    lowS: true, // Allow only low-S signatures by default in sign() and verify()\n    /**\n     * secp256k1 belongs to Koblitz curves: it has efficiently computable endomorphism.\n     * Endomorphism uses 2x less RAM, speeds up precomputation by 2x and ECDH / key recovery by 20%.\n     * For precomputed wNAF it trades off 1/2 init time & 1/3 ram for 20% perf hit.\n     * Explanation: https://gist.github.com/paulmillr/eb670806793e84df628a7c434a873066\n     */\n    endo: {\n        beta: BigInt('0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee'),\n        splitScalar: (k) => {\n            const n = secp256k1N;\n            const a1 = BigInt('0x3086d221a7d46bcde86c90e49284eb15');\n            const b1 = -_1n * BigInt('0xe4437ed6010e88286f547fa90abfe4c3');\n            const a2 = BigInt('0x114ca50f7a8e2f3f657c1108d9d44cfd8');\n            const b2 = a1;\n            const POW_2_128 = BigInt('0x100000000000000000000000000000000'); // (2n**128n).toString(16)\n            const c1 = divNearest(b2 * k, n);\n            const c2 = divNearest(-b1 * k, n);\n            let k1 = mod(k - c1 * a1 - c2 * a2, n);\n            let k2 = mod(-c1 * b1 - c2 * b2, n);\n            const k1neg = k1 > POW_2_128;\n            const k2neg = k2 > POW_2_128;\n            if (k1neg)\n                k1 = n - k1;\n            if (k2neg)\n                k2 = n - k2;\n            if (k1 > POW_2_128 || k2 > POW_2_128) {\n                throw new Error('splitScalar: Endomorphism failed, k=' + k);\n            }\n            return { k1neg, k1, k2neg, k2 };\n        },\n    },\n}, sha256);\n// Schnorr signatures are superior to ECDSA from above. Below is Schnorr-specific BIP0340 code.\n// https://github.com/bitcoin/bips/blob/master/bip-0340.mediawiki\nconst _0n = BigInt(0);\n/** An object mapping tags to their tagged hash prefix of [SHA256(tag) | SHA256(tag)] */\nconst TAGGED_HASH_PREFIXES = {};\nfunction taggedHash(tag, ...messages) {\n    let tagP = TAGGED_HASH_PREFIXES[tag];\n    if (tagP === undefined) {\n        const tagH = sha256(Uint8Array.from(tag, (c) => c.charCodeAt(0)));\n        tagP = concatBytes(tagH, tagH);\n        TAGGED_HASH_PREFIXES[tag] = tagP;\n    }\n    return sha256(concatBytes(tagP, ...messages));\n}\n// ECDSA compact points are 33-byte. Schnorr is 32: we strip first byte 0x02 or 0x03\nconst pointToBytes = (point) => point.toRawBytes(true).slice(1);\nconst numTo32b = (n) => numberToBytesBE(n, 32);\nconst modP = (x) => mod(x, secp256k1P);\nconst modN = (x) => mod(x, secp256k1N);\nconst Point = secp256k1.ProjectivePoint;\nconst GmulAdd = (Q, a, b) => Point.BASE.multiplyAndAddUnsafe(Q, a, b);\n// Calculate point, scalar and bytes\nfunction schnorrGetExtPubKey(priv) {\n    let d_ = secp256k1.utils.normPrivateKeyToScalar(priv); // same method executed in fromPrivateKey\n    let p = Point.fromPrivateKey(d_); // P = d'⋅G; 0 < d' < n check is done inside\n    const scalar = p.hasEvenY() ? d_ : modN(-d_);\n    return { scalar: scalar, bytes: pointToBytes(p) };\n}\n/**\n * lift_x from BIP340. Convert 32-byte x coordinate to elliptic curve point.\n * @returns valid point checked for being on-curve\n */\nfunction lift_x(x) {\n    aInRange('x', x, _1n, secp256k1P); // Fail if x ≥ p.\n    const xx = modP(x * x);\n    const c = modP(xx * x + BigInt(7)); // Let c = x³ + 7 mod p.\n    let y = sqrtMod(c); // Let y = c^(p+1)/4 mod p.\n    if (y % _2n !== _0n)\n        y = modP(-y); // Return the unique point P such that x(P) = x and\n    const p = new Point(x, y, _1n); // y(P) = y if y mod 2 = 0 or y(P) = p-y otherwise.\n    p.assertValidity();\n    return p;\n}\nconst num = bytesToNumberBE;\n/**\n * Create tagged hash, convert it to bigint, reduce modulo-n.\n */\nfunction challenge(...args) {\n    return modN(num(taggedHash('BIP0340/challenge', ...args)));\n}\n/**\n * Schnorr public key is just `x` coordinate of Point as per BIP340.\n */\nfunction schnorrGetPublicKey(privateKey) {\n    return schnorrGetExtPubKey(privateKey).bytes; // d'=int(sk). Fail if d'=0 or d'≥n. Ret bytes(d'⋅G)\n}\n/**\n * Creates Schnorr signature as per BIP340. Verifies itself before returning anything.\n * auxRand is optional and is not the sole source of k generation: bad CSPRNG won't be dangerous.\n */\nfunction schnorrSign(message, privateKey, auxRand = randomBytes(32)) {\n    const m = ensureBytes('message', message);\n    const { bytes: px, scalar: d } = schnorrGetExtPubKey(privateKey); // checks for isWithinCurveOrder\n    const a = ensureBytes('auxRand', auxRand, 32); // Auxiliary random data a: a 32-byte array\n    const t = numTo32b(d ^ num(taggedHash('BIP0340/aux', a))); // Let t be the byte-wise xor of bytes(d) and hash/aux(a)\n    const rand = taggedHash('BIP0340/nonce', t, px, m); // Let rand = hash/nonce(t || bytes(P) || m)\n    const k_ = modN(num(rand)); // Let k' = int(rand) mod n\n    if (k_ === _0n)\n        throw new Error('sign failed: k is zero'); // Fail if k' = 0.\n    const { bytes: rx, scalar: k } = schnorrGetExtPubKey(k_); // Let R = k'⋅G.\n    const e = challenge(rx, px, m); // Let e = int(hash/challenge(bytes(R) || bytes(P) || m)) mod n.\n    const sig = new Uint8Array(64); // Let sig = bytes(R) || bytes((k + ed) mod n).\n    sig.set(rx, 0);\n    sig.set(numTo32b(modN(k + e * d)), 32);\n    // If Verify(bytes(P), m, sig) (see below) returns failure, abort\n    if (!schnorrVerify(sig, m, px))\n        throw new Error('sign: Invalid signature produced');\n    return sig;\n}\n/**\n * Verifies Schnorr signature.\n * Will swallow errors & return false except for initial type validation of arguments.\n */\nfunction schnorrVerify(signature, message, publicKey) {\n    const sig = ensureBytes('signature', signature, 64);\n    const m = ensureBytes('message', message);\n    const pub = ensureBytes('publicKey', publicKey, 32);\n    try {\n        const P = lift_x(num(pub)); // P = lift_x(int(pk)); fail if that fails\n        const r = num(sig.subarray(0, 32)); // Let r = int(sig[0:32]); fail if r ≥ p.\n        if (!inRange(r, _1n, secp256k1P))\n            return false;\n        const s = num(sig.subarray(32, 64)); // Let s = int(sig[32:64]); fail if s ≥ n.\n        if (!inRange(s, _1n, secp256k1N))\n            return false;\n        const e = challenge(numTo32b(r), pointToBytes(P), m); // int(challenge(bytes(r)||bytes(P)||m))%n\n        const R = GmulAdd(P, s, modN(-e)); // R = s⋅G - e⋅P\n        if (!R || !R.hasEvenY() || R.toAffine().x !== r)\n            return false; // -eP == (n-e)P\n        return true; // Fail if is_infinite(R) / not has_even_y(R) / x(R) ≠ r.\n    }\n    catch (error) {\n        return false;\n    }\n}\n/**\n * Schnorr signatures over secp256k1.\n */\nexport const schnorr = /* @__PURE__ */ (() => ({\n    getPublicKey: schnorrGetPublicKey,\n    sign: schnorrSign,\n    verify: schnorrVerify,\n    utils: {\n        randomPrivateKey: secp256k1.utils.randomPrivateKey,\n        lift_x,\n        pointToBytes,\n        numberToBytesBE,\n        bytesToNumberBE,\n        taggedHash,\n        mod,\n    },\n}))();\nconst isoMap = /* @__PURE__ */ (() => isogenyMap(Fp, [\n    // xNum\n    [\n        '0x8e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38daaaaa8c7',\n        '0x7d3d4c80bc321d5b9f315cea7fd44c5d595d2fc0bf63b92dfff1044f17c6581',\n        '0x534c328d23f234e6e2a413deca25caece4506144037c40314ecbd0b53d9dd262',\n        '0x8e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38daaaaa88c',\n    ],\n    // xDen\n    [\n        '0xd35771193d94918a9ca34ccbb7b640dd86cd409542f8487d9fe6b745781eb49b',\n        '0xedadc6f64383dc1df7c4b2d51b54225406d36b641f5e41bbc52a56612a8c6d14',\n        '0x0000000000000000000000000000000000000000000000000000000000000001', // LAST 1\n    ],\n    // yNum\n    [\n        '0x4bda12f684bda12f684bda12f684bda12f684bda12f684bda12f684b8e38e23c',\n        '0xc75e0c32d5cb7c0fa9d0a54b12a0a6d5647ab046d686da6fdffc90fc201d71a3',\n        '0x29a6194691f91a73715209ef6512e576722830a201be2018a765e85a9ecee931',\n        '0x2f684bda12f684bda12f684bda12f684bda12f684bda12f684bda12f38e38d84',\n    ],\n    // yDen\n    [\n        '0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffff93b',\n        '0x7a06534bb8bdb49fd5e9e6632722c2989467c1bfc8e8d978dfb425d2685c2573',\n        '0x6484aa716545ca2cf3a70c3fa8fe337e0a3d21162f0d6299a7bf8192bfd2a76f',\n        '0x0000000000000000000000000000000000000000000000000000000000000001', // LAST 1\n    ],\n].map((i) => i.map((j) => BigInt(j)))))();\nconst mapSWU = /* @__PURE__ */ (() => mapToCurveSimpleSWU(Fp, {\n    A: BigInt('0x3f8731abdd661adca08a5558f0f5d272e953d363cb6f0e5d405447c01a444533'),\n    B: BigInt('1771'),\n    Z: Fp.create(BigInt('-11')),\n}))();\nconst htf = /* @__PURE__ */ (() => createHasher(secp256k1.ProjectivePoint, (scalars) => {\n    const { x, y } = mapSWU(Fp.create(scalars[0]));\n    return isoMap(x, y);\n}, {\n    DST: 'secp256k1_XMD:SHA-256_SSWU_RO_',\n    encodeDST: 'secp256k1_XMD:SHA-256_SSWU_NU_',\n    p: Fp.ORDER,\n    m: 1,\n    k: 128,\n    expand: 'xmd',\n    hash: sha256,\n}))();\nexport const hashToCurve = /* @__PURE__ */ (() => htf.hashToCurve)();\nexport const encodeToCurve = /* @__PURE__ */ (() => htf.encodeToCurve)();\n//# sourceMappingURL=secp256k1.js.map","import { CodeError } from '@libp2p/interface';\nimport { secp256k1 as secp } from '@noble/curves/secp256k1';\nimport { sha256 } from 'multiformats/hashes/sha2';\nimport { isPromise } from '../util.js';\nconst PRIVATE_KEY_BYTE_LENGTH = 32;\nexport { PRIVATE_KEY_BYTE_LENGTH as privateKeyLength };\nexport function generateKey() {\n    return secp.utils.randomPrivateKey();\n}\n/**\n * Hash and sign message with private key\n */\nexport function hashAndSign(key, msg) {\n    const p = sha256.digest(msg instanceof Uint8Array ? msg : msg.subarray());\n    if (isPromise(p)) {\n        return p.then(({ digest }) => secp.sign(digest, key).toDERRawBytes())\n            .catch(err => {\n            throw new CodeError(String(err), 'ERR_INVALID_INPUT');\n        });\n    }\n    try {\n        return secp.sign(p.digest, key).toDERRawBytes();\n    }\n    catch (err) {\n        throw new CodeError(String(err), 'ERR_INVALID_INPUT');\n    }\n}\n/**\n * Hash message and verify signature with public key\n */\nexport function hashAndVerify(key, sig, msg) {\n    const p = sha256.digest(msg instanceof Uint8Array ? msg : msg.subarray());\n    if (isPromise(p)) {\n        return p.then(({ digest }) => secp.verify(sig, digest, key))\n            .catch(err => {\n            throw new CodeError(String(err), 'ERR_INVALID_INPUT');\n        });\n    }\n    try {\n        return secp.verify(sig, p.digest, key);\n    }\n    catch (err) {\n        throw new CodeError(String(err), 'ERR_INVALID_INPUT');\n    }\n}\nexport function compressPublicKey(key) {\n    const point = secp.ProjectivePoint.fromHex(key).toRawBytes(true);\n    return point;\n}\nexport function decompressPublicKey(key) {\n    const point = secp.ProjectivePoint.fromHex(key).toRawBytes(false);\n    return point;\n}\nexport function validatePrivateKey(key) {\n    try {\n        secp.getPublicKey(key, true);\n    }\n    catch (err) {\n        throw new CodeError(String(err), 'ERR_INVALID_PRIVATE_KEY');\n    }\n}\nexport function validatePublicKey(key) {\n    try {\n        secp.ProjectivePoint.fromHex(key);\n    }\n    catch (err) {\n        throw new CodeError(String(err), 'ERR_INVALID_PUBLIC_KEY');\n    }\n}\nexport function computePublicKey(privateKey) {\n    try {\n        return secp.getPublicKey(privateKey, true);\n    }\n    catch (err) {\n        throw new CodeError(String(err), 'ERR_INVALID_PRIVATE_KEY');\n    }\n}\n//# sourceMappingURL=secp256k1-browser.js.map","import { CodeError } from '@libp2p/interface';\nimport { sha256 } from 'multiformats/hashes/sha2';\nimport { equals as uint8ArrayEquals } from 'uint8arrays/equals';\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string';\nimport { isPromise } from '../util.js';\nimport { exporter } from './exporter.js';\nimport * as keysProtobuf from './keys.js';\nimport * as crypto from './secp256k1.js';\nexport class Secp256k1PublicKey {\n    _key;\n    constructor(key) {\n        crypto.validatePublicKey(key);\n        this._key = key;\n    }\n    verify(data, sig) {\n        return crypto.hashAndVerify(this._key, sig, data);\n    }\n    marshal() {\n        return crypto.compressPublicKey(this._key);\n    }\n    get bytes() {\n        return keysProtobuf.PublicKey.encode({\n            Type: keysProtobuf.KeyType.Secp256k1,\n            Data: this.marshal()\n        }).subarray();\n    }\n    equals(key) {\n        return uint8ArrayEquals(this.bytes, key.bytes);\n    }\n    async hash() {\n        const p = sha256.digest(this.bytes);\n        let bytes;\n        if (isPromise(p)) {\n            ({ bytes } = await p);\n        }\n        else {\n            bytes = p.bytes;\n        }\n        return bytes;\n    }\n}\nexport class Secp256k1PrivateKey {\n    _key;\n    _publicKey;\n    constructor(key, publicKey) {\n        this._key = key;\n        this._publicKey = publicKey ?? crypto.computePublicKey(key);\n        crypto.validatePrivateKey(this._key);\n        crypto.validatePublicKey(this._publicKey);\n    }\n    sign(message) {\n        return crypto.hashAndSign(this._key, message);\n    }\n    get public() {\n        return new Secp256k1PublicKey(this._publicKey);\n    }\n    marshal() {\n        return this._key;\n    }\n    get bytes() {\n        return keysProtobuf.PrivateKey.encode({\n            Type: keysProtobuf.KeyType.Secp256k1,\n            Data: this.marshal()\n        }).subarray();\n    }\n    equals(key) {\n        return uint8ArrayEquals(this.bytes, key.bytes);\n    }\n    hash() {\n        const p = sha256.digest(this.bytes);\n        if (isPromise(p)) {\n            return p.then(({ bytes }) => bytes);\n        }\n        return p.bytes;\n    }\n    /**\n     * Gets the ID of the key.\n     *\n     * The key id is the base58 encoding of the SHA-256 multihash of its public key.\n     * The public key is a protobuf encoding containing a type and the DER encoding\n     * of the PKCS SubjectPublicKeyInfo.\n     */\n    async id() {\n        const hash = await this.public.hash();\n        return uint8ArrayToString(hash, 'base58btc');\n    }\n    /**\n     * Exports the key into a password protected `format`\n     */\n    async export(password, format = 'libp2p-key') {\n        if (format === 'libp2p-key') {\n            return exporter(this.bytes, password);\n        }\n        else {\n            throw new CodeError(`export format '${format}' is not supported`, 'ERR_INVALID_EXPORT_FORMAT');\n        }\n    }\n}\nexport function unmarshalSecp256k1PrivateKey(bytes) {\n    return new Secp256k1PrivateKey(bytes);\n}\nexport function unmarshalSecp256k1PublicKey(bytes) {\n    return new Secp256k1PublicKey(bytes);\n}\nexport async function generateKeyPair() {\n    const privateKeyBytes = crypto.generateKey();\n    return new Secp256k1PrivateKey(privateKeyBytes);\n}\n//# sourceMappingURL=secp256k1-class.js.map","/**\n * @packageDocumentation\n *\n * **Supported Key Types**\n *\n * The {@link generateKeyPair}, {@link marshalPublicKey}, and {@link marshalPrivateKey} functions accept a string `type` argument.\n *\n * Currently the `'RSA'`, `'ed25519'`, and `secp256k1` types are supported, although ed25519 and secp256k1 keys support only signing and verification of messages.\n *\n * For encryption / decryption support, RSA keys should be used.\n */\nimport { CodeError } from '@libp2p/interface';\nimport * as Ed25519 from './ed25519-class.js';\nimport generateEphemeralKeyPair from './ephemeral-keys.js';\nimport { importer } from './importer.js';\nimport { keyStretcher } from './key-stretcher.js';\nimport * as keysPBM from './keys.js';\nimport * as RSA from './rsa-class.js';\nimport { importFromPem } from './rsa-utils.js';\nimport * as Secp256k1 from './secp256k1-class.js';\nexport { keyStretcher };\nexport { generateEphemeralKeyPair };\nexport { keysPBM };\nexport { RsaPrivateKey, RsaPublicKey, MAX_RSA_KEY_SIZE } from './rsa-class.js';\nexport { Ed25519PrivateKey, Ed25519PublicKey } from './ed25519-class.js';\nexport { Secp256k1PrivateKey, Secp256k1PublicKey } from './secp256k1-class.js';\nexport const supportedKeys = {\n    rsa: RSA,\n    ed25519: Ed25519,\n    secp256k1: Secp256k1\n};\nfunction unsupportedKey(type) {\n    const supported = Object.keys(supportedKeys).join(' / ');\n    return new CodeError(`invalid or unsupported key type ${type}. Must be ${supported}`, 'ERR_UNSUPPORTED_KEY_TYPE');\n}\nfunction typeToKey(type) {\n    type = type.toLowerCase();\n    if (type === 'rsa' || type === 'ed25519' || type === 'secp256k1') {\n        return supportedKeys[type];\n    }\n    throw unsupportedKey(type);\n}\n/**\n * Generates a keypair of the given type and bitsize\n */\nexport async function generateKeyPair(type, bits) {\n    return typeToKey(type).generateKeyPair(bits ?? 2048);\n}\n/**\n * Generates a keypair of the given type and bitsize.\n *\n * Seed is a 32 byte uint8array\n */\nexport async function generateKeyPairFromSeed(type, seed, bits) {\n    if (type.toLowerCase() !== 'ed25519') {\n        throw new CodeError('Seed key derivation is unimplemented for RSA or secp256k1', 'ERR_UNSUPPORTED_KEY_DERIVATION_TYPE');\n    }\n    return Ed25519.generateKeyPairFromSeed(seed);\n}\n/**\n * Converts a protobuf serialized public key into its representative object\n */\nexport function unmarshalPublicKey(buf) {\n    const decoded = keysPBM.PublicKey.decode(buf);\n    const data = decoded.Data ?? new Uint8Array();\n    switch (decoded.Type) {\n        case keysPBM.KeyType.RSA:\n            return supportedKeys.rsa.unmarshalRsaPublicKey(data);\n        case keysPBM.KeyType.Ed25519:\n            return supportedKeys.ed25519.unmarshalEd25519PublicKey(data);\n        case keysPBM.KeyType.Secp256k1:\n            return supportedKeys.secp256k1.unmarshalSecp256k1PublicKey(data);\n        default:\n            throw unsupportedKey(decoded.Type ?? 'unknown');\n    }\n}\n/**\n * Converts a public key object into a protobuf serialized public key\n */\nexport function marshalPublicKey(key, type) {\n    type = (type ?? 'rsa').toLowerCase();\n    typeToKey(type); // check type\n    return key.bytes;\n}\n/**\n * Converts a protobuf serialized private key into its representative object\n */\nexport async function unmarshalPrivateKey(buf) {\n    const decoded = keysPBM.PrivateKey.decode(buf);\n    const data = decoded.Data ?? new Uint8Array();\n    switch (decoded.Type) {\n        case keysPBM.KeyType.RSA:\n            return supportedKeys.rsa.unmarshalRsaPrivateKey(data);\n        case keysPBM.KeyType.Ed25519:\n            return supportedKeys.ed25519.unmarshalEd25519PrivateKey(data);\n        case keysPBM.KeyType.Secp256k1:\n            return supportedKeys.secp256k1.unmarshalSecp256k1PrivateKey(data);\n        default:\n            throw unsupportedKey(decoded.Type ?? 'RSA');\n    }\n}\n/**\n * Converts a private key object into a protobuf serialized private key\n */\nexport function marshalPrivateKey(key, type) {\n    type = (type ?? 'rsa').toLowerCase();\n    typeToKey(type); // check type\n    return key.bytes;\n}\n/**\n * Converts an exported private key into its representative object.\n *\n * Supported formats are 'pem' (RSA only) and 'libp2p-key'.\n */\nexport async function importKey(encryptedKey, password) {\n    try {\n        const key = await importer(encryptedKey, password);\n        return await unmarshalPrivateKey(key);\n    }\n    catch (_) {\n        // Ignore and try the old pem decrypt\n    }\n    if (!encryptedKey.includes('BEGIN')) {\n        throw new CodeError('Encrypted key was not a libp2p-key or a PEM file', 'ERR_INVALID_IMPORT_FORMAT');\n    }\n    return importFromPem(encryptedKey, password);\n}\n//# sourceMappingURL=index.js.map","/**\n * @packageDocumentation\n *\n * Exports a `Libp2p` type for modules to use as a type argument.\n *\n * @example\n *\n * ```typescript\n * import type { Libp2p } from '@libp2p/interface'\n *\n * function doSomethingWithLibp2p (node: Libp2p) {\n *   // ...\n * }\n * ```\n */\n/**\n * This symbol is used by libp2p services to define the capabilities they can\n * provide to other libp2p services.\n *\n * The service should define a property with this symbol as the key and the\n * value should be a string array of provided capabilities.\n */\nexport const serviceCapabilities = Symbol.for('@libp2p/service-capabilities');\n/**\n * This symbol is used by libp2p services to define the capabilities they\n * require from other libp2p services.\n *\n * The service should define a property with this symbol as the key and the\n * value should be a string array of required capabilities.\n */\nexport const serviceDependencies = Symbol.for('@libp2p/service-dependencies');\nexport * from './connection/index.js';\nexport * from './connection-encrypter/index.js';\nexport * from './connection-gater/index.js';\nexport * from './content-routing/index.js';\nexport * from './keys/index.js';\nexport * from './metrics/index.js';\nexport * from './peer-discovery/index.js';\nexport * from './peer-id/index.js';\nexport * from './peer-info/index.js';\nexport * from './peer-routing/index.js';\nexport * from './peer-store/index.js';\nexport * from './peer-store/tags.js';\nexport * from './pubsub/index.js';\nexport * from './record/index.js';\nexport * from './stream-handler/index.js';\nexport * from './stream-muxer/index.js';\nexport * from './topology/index.js';\nexport * from './transport/index.js';\nexport * from './errors.js';\nexport * from './event-target.js';\nexport * from './events.js';\nexport * from './startable.js';\n//# sourceMappingURL=index.js.map","/**\n * @packageDocumentation\n *\n * An implementation of a peer id\n *\n * @example\n *\n * ```TypeScript\n * import { peerIdFromString } from '@libp2p/peer-id'\n * const peer = peerIdFromString('k51qzi5uqu5dkwkqm42v9j9kqcam2jiuvloi16g72i4i4amoo2m8u3ol3mqu6s')\n *\n * console.log(peer.toCID()) // CID(bafzaa...)\n * console.log(peer.toString()) // \"12D3K...\"\n * ```\n */\nimport { CodeError } from '@libp2p/interface';\nimport { peerIdSymbol } from '@libp2p/interface';\nimport { base58btc } from 'multiformats/bases/base58';\nimport { bases } from 'multiformats/basics';\nimport { CID } from 'multiformats/cid';\nimport * as Digest from 'multiformats/hashes/digest';\nimport { identity } from 'multiformats/hashes/identity';\nimport { sha256 } from 'multiformats/hashes/sha2';\nimport { equals as uint8ArrayEquals } from 'uint8arrays/equals';\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string';\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string';\nconst inspect = Symbol.for('nodejs.util.inspect.custom');\nconst baseDecoder = Object\n    .values(bases)\n    .map(codec => codec.decoder)\n    // @ts-expect-error https://github.com/multiformats/js-multiformats/issues/141\n    .reduce((acc, curr) => acc.or(curr), bases.identity.decoder);\n// these values are from https://github.com/multiformats/multicodec/blob/master/table.csv\nconst LIBP2P_KEY_CODE = 0x72;\nconst MARSHALLED_ED225519_PUBLIC_KEY_LENGTH = 36;\nconst MARSHALLED_SECP256K1_PUBLIC_KEY_LENGTH = 37;\nclass PeerIdImpl {\n    type;\n    multihash;\n    privateKey;\n    publicKey;\n    string;\n    constructor(init) {\n        this.type = init.type;\n        this.multihash = init.multihash;\n        this.privateKey = init.privateKey;\n        // mark string cache as non-enumerable\n        Object.defineProperty(this, 'string', {\n            enumerable: false,\n            writable: true\n        });\n    }\n    get [Symbol.toStringTag]() {\n        return `PeerId(${this.toString()})`;\n    }\n    [peerIdSymbol] = true;\n    toString() {\n        if (this.string == null) {\n            this.string = base58btc.encode(this.multihash.bytes).slice(1);\n        }\n        return this.string;\n    }\n    // return self-describing String representation\n    // in default format from RFC 0001: https://github.com/libp2p/specs/pull/209\n    toCID() {\n        return CID.createV1(LIBP2P_KEY_CODE, this.multihash);\n    }\n    toBytes() {\n        return this.multihash.bytes;\n    }\n    /**\n     * Returns Multiaddr as a JSON string\n     */\n    toJSON() {\n        return this.toString();\n    }\n    /**\n     * Checks the equality of `this` peer against a given PeerId\n     */\n    equals(id) {\n        if (id == null) {\n            return false;\n        }\n        if (id instanceof Uint8Array) {\n            return uint8ArrayEquals(this.multihash.bytes, id);\n        }\n        else if (typeof id === 'string') {\n            return peerIdFromString(id).equals(this);\n        }\n        else if (id?.multihash?.bytes != null) {\n            return uint8ArrayEquals(this.multihash.bytes, id.multihash.bytes);\n        }\n        else {\n            throw new Error('not valid Id');\n        }\n    }\n    /**\n     * Returns PeerId as a human-readable string\n     * https://nodejs.org/api/util.html#utilinspectcustom\n     *\n     * @example\n     * ```TypeScript\n     * import { peerIdFromString } from '@libp2p/peer-id'\n     *\n     * console.info(peerIdFromString('QmFoo'))\n     * // 'PeerId(QmFoo)'\n     * ```\n     */\n    [inspect]() {\n        return `PeerId(${this.toString()})`;\n    }\n}\nclass RSAPeerIdImpl extends PeerIdImpl {\n    type = 'RSA';\n    publicKey;\n    constructor(init) {\n        super({ ...init, type: 'RSA' });\n        this.publicKey = init.publicKey;\n    }\n}\nclass Ed25519PeerIdImpl extends PeerIdImpl {\n    type = 'Ed25519';\n    publicKey;\n    constructor(init) {\n        super({ ...init, type: 'Ed25519' });\n        this.publicKey = init.multihash.digest;\n    }\n}\nclass Secp256k1PeerIdImpl extends PeerIdImpl {\n    type = 'secp256k1';\n    publicKey;\n    constructor(init) {\n        super({ ...init, type: 'secp256k1' });\n        this.publicKey = init.multihash.digest;\n    }\n}\n// these values are from https://github.com/multiformats/multicodec/blob/master/table.csv\nconst TRANSPORT_IPFS_GATEWAY_HTTP_CODE = 0x0920;\nclass URLPeerIdImpl {\n    type = 'url';\n    multihash;\n    privateKey;\n    publicKey;\n    url;\n    constructor(url) {\n        this.url = url.toString();\n        this.multihash = identity.digest(uint8ArrayFromString(this.url));\n    }\n    [inspect]() {\n        return `PeerId(${this.url})`;\n    }\n    [peerIdSymbol] = true;\n    toString() {\n        return this.toCID().toString();\n    }\n    toCID() {\n        return CID.createV1(TRANSPORT_IPFS_GATEWAY_HTTP_CODE, this.multihash);\n    }\n    toBytes() {\n        return this.toCID().bytes;\n    }\n    equals(other) {\n        if (other == null) {\n            return false;\n        }\n        if (other instanceof Uint8Array) {\n            other = uint8ArrayToString(other);\n        }\n        return other.toString() === this.toString();\n    }\n}\nexport function createPeerId(init) {\n    if (init.type === 'RSA') {\n        return new RSAPeerIdImpl(init);\n    }\n    if (init.type === 'Ed25519') {\n        return new Ed25519PeerIdImpl(init);\n    }\n    if (init.type === 'secp256k1') {\n        return new Secp256k1PeerIdImpl(init);\n    }\n    throw new CodeError('Type must be \"RSA\", \"Ed25519\" or \"secp256k1\"', 'ERR_INVALID_PARAMETERS');\n}\nexport function peerIdFromPeerId(other) {\n    if (other.type === 'RSA') {\n        return new RSAPeerIdImpl(other);\n    }\n    if (other.type === 'Ed25519') {\n        return new Ed25519PeerIdImpl(other);\n    }\n    if (other.type === 'secp256k1') {\n        return new Secp256k1PeerIdImpl(other);\n    }\n    throw new CodeError('Not a PeerId', 'ERR_INVALID_PARAMETERS');\n}\nexport function peerIdFromString(str, decoder) {\n    decoder = decoder ?? baseDecoder;\n    if (str.charAt(0) === '1' || str.charAt(0) === 'Q') {\n        // identity hash ed25519/secp256k1 key or sha2-256 hash of\n        // rsa public key - base58btc encoded either way\n        const multihash = Digest.decode(base58btc.decode(`z${str}`));\n        if (str.startsWith('12D')) {\n            return new Ed25519PeerIdImpl({ multihash });\n        }\n        else if (str.startsWith('16U')) {\n            return new Secp256k1PeerIdImpl({ multihash });\n        }\n        else {\n            return new RSAPeerIdImpl({ multihash });\n        }\n    }\n    return peerIdFromBytes(baseDecoder.decode(str));\n}\nexport function peerIdFromBytes(buf) {\n    try {\n        const multihash = Digest.decode(buf);\n        if (multihash.code === identity.code) {\n            if (multihash.digest.length === MARSHALLED_ED225519_PUBLIC_KEY_LENGTH) {\n                return new Ed25519PeerIdImpl({ multihash });\n            }\n            else if (multihash.digest.length === MARSHALLED_SECP256K1_PUBLIC_KEY_LENGTH) {\n                return new Secp256k1PeerIdImpl({ multihash });\n            }\n        }\n        if (multihash.code === sha256.code) {\n            return new RSAPeerIdImpl({ multihash });\n        }\n    }\n    catch {\n        return peerIdFromCID(CID.decode(buf));\n    }\n    throw new Error('Supplied PeerID CID is invalid');\n}\nexport function peerIdFromCID(cid) {\n    if (cid?.multihash == null || cid.version == null || (cid.version === 1 && (cid.code !== LIBP2P_KEY_CODE) && cid.code !== TRANSPORT_IPFS_GATEWAY_HTTP_CODE)) {\n        throw new Error('Supplied PeerID CID is invalid');\n    }\n    if (cid.code === TRANSPORT_IPFS_GATEWAY_HTTP_CODE) {\n        const url = uint8ArrayToString(cid.multihash.digest);\n        return new URLPeerIdImpl(new URL(url));\n    }\n    const multihash = cid.multihash;\n    if (multihash.code === sha256.code) {\n        return new RSAPeerIdImpl({ multihash: cid.multihash });\n    }\n    else if (multihash.code === identity.code) {\n        if (multihash.digest.length === MARSHALLED_ED225519_PUBLIC_KEY_LENGTH) {\n            return new Ed25519PeerIdImpl({ multihash: cid.multihash });\n        }\n        else if (multihash.digest.length === MARSHALLED_SECP256K1_PUBLIC_KEY_LENGTH) {\n            return new Secp256k1PeerIdImpl({ multihash: cid.multihash });\n        }\n    }\n    throw new Error('Supplied PeerID CID is invalid');\n}\n/**\n * @param publicKey - A marshalled public key\n * @param privateKey - A marshalled private key\n */\nexport async function peerIdFromKeys(publicKey, privateKey) {\n    if (publicKey.length === MARSHALLED_ED225519_PUBLIC_KEY_LENGTH) {\n        return new Ed25519PeerIdImpl({ multihash: Digest.create(identity.code, publicKey), privateKey });\n    }\n    if (publicKey.length === MARSHALLED_SECP256K1_PUBLIC_KEY_LENGTH) {\n        return new Secp256k1PeerIdImpl({ multihash: Digest.create(identity.code, publicKey), privateKey });\n    }\n    return new RSAPeerIdImpl({ multihash: await sha256.digest(publicKey), publicKey, privateKey });\n}\n//# sourceMappingURL=index.js.map","/**\n * An abort error class that extends error\n */\nexport class AbortError extends Error {\n    type;\n    code;\n    constructor(message, code, name) {\n        super(message ?? 'The operation was aborted');\n        this.type = 'aborted';\n        this.name = name ?? 'AbortError';\n        this.code = code ?? 'ABORT_ERR';\n    }\n}\n/**\n * Race a promise against an abort signal\n */\nexport async function raceSignal(promise, signal, opts) {\n    if (signal == null) {\n        return promise;\n    }\n    if (signal.aborted) {\n        return Promise.reject(new AbortError(opts?.errorMessage, opts?.errorCode, opts?.errorName));\n    }\n    let listener;\n    // create the error here so we have more context in the stack trace\n    const error = new AbortError(opts?.errorMessage, opts?.errorCode, opts?.errorName);\n    try {\n        return await Promise.race([\n            promise,\n            new Promise((resolve, reject) => {\n                listener = () => {\n                    reject(error);\n                };\n                signal.addEventListener('abort', listener);\n            })\n        ]);\n    }\n    finally {\n        if (listener != null) {\n            signal.removeEventListener('abort', listener);\n        }\n    }\n}\n//# sourceMappingURL=index.js.map","/**\n * @packageDocumentation\n *\n * A pushable async generator that waits until the current value is consumed\n * before allowing a new value to be pushed.\n *\n * Useful for when you don't want to keep memory usage under control and/or\n * allow a downstream consumer to dictate how fast data flows through a pipe,\n * but you want to be able to apply a transform to that data.\n *\n * @example\n *\n * ```typescript\n * import { queuelessPushable } from 'it-queueless-pushable'\n *\n * const pushable = queuelessPushable<string>()\n *\n * // run asynchronously\n * Promise.resolve().then(async () => {\n *   // push a value - the returned promise will not resolve until the value is\n *   // read from the pushable\n *   await pushable.push('hello')\n * })\n *\n * // read a value\n * const result = await pushable.next()\n * console.info(result) // { done: false, value: 'hello' }\n * ```\n */\nimport deferred, {} from 'p-defer';\nimport { raceSignal } from 'race-signal';\nclass QueuelessPushable {\n    readNext;\n    haveNext;\n    ended;\n    nextResult;\n    constructor() {\n        this.ended = false;\n        this.readNext = deferred();\n        this.haveNext = deferred();\n    }\n    [Symbol.asyncIterator]() {\n        return this;\n    }\n    async next() {\n        if (this.nextResult == null) {\n            // wait for the supplier to push a value\n            await this.haveNext.promise;\n        }\n        if (this.nextResult == null) {\n            throw new Error('HaveNext promise resolved but nextResult was undefined');\n        }\n        const nextResult = this.nextResult;\n        this.nextResult = undefined;\n        // signal to the supplier that we read the value\n        this.readNext.resolve();\n        this.readNext = deferred();\n        return nextResult;\n    }\n    async throw(err) {\n        this.ended = true;\n        if (err != null) {\n            // this can cause unhandled promise rejections if nothing is awaiting the\n            // next value so attach a dummy catch listener to the promise\n            this.haveNext.promise.catch(() => { });\n            this.haveNext.reject(err);\n        }\n        const result = {\n            done: true,\n            value: undefined\n        };\n        return result;\n    }\n    async return() {\n        const result = {\n            done: true,\n            value: undefined\n        };\n        await this._push(undefined);\n        return result;\n    }\n    async push(value, options) {\n        await this._push(value, options);\n    }\n    async end(err, options) {\n        if (err != null) {\n            await this.throw(err);\n        }\n        else {\n            // abortable return\n            await this._push(undefined, options);\n        }\n    }\n    async _push(value, options) {\n        if (value != null && this.ended) {\n            throw new Error('Cannot push value onto an ended pushable');\n        }\n        // wait for all values to be read\n        while (this.nextResult != null) {\n            await this.readNext.promise;\n        }\n        if (value != null) {\n            this.nextResult = { done: false, value };\n        }\n        else {\n            this.ended = true;\n            this.nextResult = { done: true, value: undefined };\n        }\n        // let the consumer know we have a new value\n        this.haveNext.resolve();\n        this.haveNext = deferred();\n        // wait for the consumer to have finished processing the value and requested\n        // the next one or for the passed signal to abort the waiting\n        await raceSignal(this.readNext.promise, options?.signal, options);\n    }\n}\nexport function queuelessPushable() {\n    return new QueuelessPushable();\n}\n//# sourceMappingURL=index.js.map","/**\n * The incoming stream ended before the expected number of bytes were read\n */\nexport class UnexpectedEOFError extends Error {\n    name = 'UnexpectedEOFError';\n    code = 'ERR_UNEXPECTED_EOF';\n}\n//# sourceMappingURL=errors.js.map","/**\n * @packageDocumentation\n *\n * This module makes it easy to send and receive bytes over streams.\n *\n * @example\n *\n * ```typescript\n * import { byteStream } from 'it-byte-stream'\n *\n * const stream = byteStream(duplex)\n *\n * // read the next chunk\n * const bytes = await stream.read()\n *\n * // read the next five bytes\n * const fiveBytes = await stream.read(5)\n *\n * // write bytes into the stream\n * await stream.write(Uint8Array.from([0, 1, 2, 3, 4]))\n * ```\n */\nimport { queuelessPushable } from 'it-queueless-pushable';\nimport { Uint8ArrayList } from 'uint8arraylist';\nimport { UnexpectedEOFError } from './errors.js';\n/**\n * @deprecated This will not be exported in a future release\n */\nexport class CodeError extends Error {\n    code;\n    constructor(message, code) {\n        super(message);\n        this.code = code;\n    }\n}\n/**\n * @deprecated This will not be exported in a future release\n */\nexport class AbortError extends CodeError {\n    type;\n    constructor(message) {\n        super(message, 'ABORT_ERR');\n        this.type = 'aborted';\n        this.name = 'AbortError';\n    }\n}\nexport function byteStream(duplex, opts) {\n    const write = queuelessPushable();\n    duplex.sink(write).catch(async (err) => {\n        await write.end(err);\n    });\n    duplex.sink = async (source) => {\n        for await (const buf of source) {\n            await write.push(buf);\n        }\n        await write.end();\n    };\n    let source = duplex.source;\n    if (duplex.source[Symbol.iterator] != null) {\n        source = duplex.source[Symbol.iterator]();\n    }\n    else if (duplex.source[Symbol.asyncIterator] != null) {\n        source = duplex.source[Symbol.asyncIterator]();\n    }\n    const readBuffer = new Uint8ArrayList();\n    const W = {\n        read: async (bytes, options) => {\n            options?.signal?.throwIfAborted();\n            let listener;\n            const abortPromise = new Promise((resolve, reject) => {\n                listener = () => {\n                    reject(new AbortError('Read aborted'));\n                };\n                options?.signal?.addEventListener('abort', listener);\n            });\n            try {\n                if (bytes == null) {\n                    // just read whatever arrives\n                    const { done, value } = await Promise.race([\n                        source.next(),\n                        abortPromise\n                    ]);\n                    if (done === true) {\n                        return new Uint8ArrayList();\n                    }\n                    return value;\n                }\n                while (readBuffer.byteLength < bytes) {\n                    const { value, done } = await Promise.race([\n                        source.next(),\n                        abortPromise\n                    ]);\n                    if (done === true) {\n                        throw new UnexpectedEOFError('unexpected end of input');\n                    }\n                    readBuffer.append(value);\n                }\n                const buf = readBuffer.sublist(0, bytes);\n                readBuffer.consume(bytes);\n                return buf;\n            }\n            finally {\n                if (listener != null) {\n                    options?.signal?.removeEventListener('abort', listener);\n                }\n            }\n        },\n        write: async (data, options) => {\n            options?.signal?.throwIfAborted();\n            // just write\n            if (data instanceof Uint8Array) {\n                await write.push(data, options);\n            }\n            else {\n                await write.push(data.subarray(), options);\n            }\n        },\n        unwrap: () => {\n            if (readBuffer.byteLength > 0) {\n                const originalStream = duplex.source;\n                duplex.source = (async function* () {\n                    if (opts?.yieldBytes === false) {\n                        yield readBuffer;\n                    }\n                    else {\n                        yield* readBuffer;\n                    }\n                    yield* originalStream;\n                }());\n            }\n            return duplex;\n        }\n    };\n    return W;\n}\n//# sourceMappingURL=index.js.map","/**\n * The reported length of the next data message was not a positive integer\n */\nexport class InvalidMessageLengthError extends Error {\n    name = 'InvalidMessageLengthError';\n    code = 'ERR_INVALID_MSG_LENGTH';\n}\n/**\n * The reported length of the next data message was larger than the configured\n * max allowable value\n */\nexport class InvalidDataLengthError extends Error {\n    name = 'InvalidDataLengthError';\n    code = 'ERR_MSG_DATA_TOO_LONG';\n}\n/**\n * The varint used to specify the length of the next data message contained more\n * bytes than the configured max allowable value\n */\nexport class InvalidDataLengthLengthError extends Error {\n    name = 'InvalidDataLengthLengthError';\n    code = 'ERR_MSG_LENGTH_TOO_LONG';\n}\n//# sourceMappingURL=errors.js.map","/**\n * @packageDocumentation\n *\n * This module makes it easy to send and receive length-prefixed byte arrays over streams.\n *\n * @example\n *\n * ```typescript\n * import { lpStream } from 'it-length-prefixed-stream'\n *\n * const stream = lpStream(duplex)\n *\n * // read the next length-prefixed chunk\n * const bytes = await stream.read()\n *\n * // write a length-prefixed chunk\n * await stream.write(Uint8Array.from([0, 1, 2, 3, 4]))\n *\n * // write several chunks, all individually length-prefixed\n * await stream.writeV([\n *   Uint8Array.from([0, 1, 2, 3, 4]),\n *   Uint8Array.from([5, 6, 7, 8, 9])\n * ])\n * ```\n */\nimport { byteStream } from 'it-byte-stream';\nimport * as varint from 'uint8-varint';\nimport { Uint8ArrayList } from 'uint8arraylist';\nimport { InvalidDataLengthError, InvalidDataLengthLengthError, InvalidMessageLengthError } from './errors.js';\nexport function lpStream(duplex, opts = {}) {\n    const bytes = byteStream(duplex, opts);\n    if (opts.maxDataLength != null && opts.maxLengthLength == null) {\n        // if max data length is set but max length length is not, calculate the\n        // max length length needed to encode max data length\n        opts.maxLengthLength = varint.encodingLength(opts.maxDataLength);\n    }\n    const decodeLength = opts?.lengthDecoder ?? varint.decode;\n    const encodeLength = opts?.lengthEncoder ?? varint.encode;\n    const W = {\n        read: async (options) => {\n            let dataLength = -1;\n            const lengthBuffer = new Uint8ArrayList();\n            while (true) {\n                // read one byte at a time until we can decode a varint\n                lengthBuffer.append(await bytes.read(1, options));\n                try {\n                    dataLength = decodeLength(lengthBuffer);\n                }\n                catch (err) {\n                    if (err instanceof RangeError) {\n                        continue;\n                    }\n                    throw err;\n                }\n                if (dataLength < 0) {\n                    throw new InvalidMessageLengthError('Invalid message length');\n                }\n                if (opts?.maxLengthLength != null && lengthBuffer.byteLength > opts.maxLengthLength) {\n                    throw new InvalidDataLengthLengthError('message length length too long');\n                }\n                if (dataLength > -1) {\n                    break;\n                }\n            }\n            if (opts?.maxDataLength != null && dataLength > opts.maxDataLength) {\n                throw new InvalidDataLengthError('message length too long');\n            }\n            return bytes.read(dataLength, options);\n        },\n        write: async (data, options) => {\n            // encode, write\n            await bytes.write(new Uint8ArrayList(encodeLength(data.byteLength), data), options);\n        },\n        writeV: async (data, options) => {\n            const list = new Uint8ArrayList(...data.flatMap(buf => ([encodeLength(buf.byteLength), buf])));\n            // encode, write\n            await bytes.write(list, options);\n        },\n        unwrap: () => {\n            return bytes.unwrap();\n        }\n    };\n    return W;\n}\n//# sourceMappingURL=index.js.map","import defer from 'p-defer';\n/**\n * A pair of streams where one drains from the other\n */\nexport function pair() {\n    const deferred = defer();\n    let piped = false;\n    return {\n        sink: async (source) => {\n            if (piped) {\n                throw new Error('already piped');\n            }\n            piped = true;\n            deferred.resolve(source);\n        },\n        source: (async function* () {\n            const source = await deferred.promise;\n            yield* source;\n        }())\n    };\n}\n//# sourceMappingURL=index.js.map","export const NOISE_MSG_MAX_LENGTH_BYTES = 65535;\nexport const NOISE_MSG_MAX_LENGTH_BYTES_WITHOUT_TAG = NOISE_MSG_MAX_LENGTH_BYTES - 16;\nexport const DUMP_SESSION_KEYS = Boolean(globalThis.process?.env?.DUMP_SESSION_KEYS);\n//# sourceMappingURL=constants.js.map","function number(n) {\n    if (!Number.isSafeInteger(n) || n < 0)\n        throw new Error(`positive integer expected, not ${n}`);\n}\nfunction bool(b) {\n    if (typeof b !== 'boolean')\n        throw new Error(`boolean expected, not ${b}`);\n}\nexport function isBytes(a) {\n    return (a instanceof Uint8Array ||\n        (a != null && typeof a === 'object' && a.constructor.name === 'Uint8Array'));\n}\nfunction bytes(b, ...lengths) {\n    if (!isBytes(b))\n        throw new Error('Uint8Array expected');\n    if (lengths.length > 0 && !lengths.includes(b.length))\n        throw new Error(`Uint8Array expected of length ${lengths}, not of length=${b.length}`);\n}\nfunction hash(hash) {\n    if (typeof hash !== 'function' || typeof hash.create !== 'function')\n        throw new Error('hash must be wrapped by utils.wrapConstructor');\n    number(hash.outputLen);\n    number(hash.blockLen);\n}\nfunction exists(instance, checkFinished = true) {\n    if (instance.destroyed)\n        throw new Error('Hash instance has been destroyed');\n    if (checkFinished && instance.finished)\n        throw new Error('Hash#digest() has already been called');\n}\nfunction output(out, instance) {\n    bytes(out);\n    const min = instance.outputLen;\n    if (out.length < min) {\n        throw new Error(`digestInto() expects output buffer of length at least ${min}`);\n    }\n}\nexport { number, bool, bytes, hash, exists, output };\nconst assert = { number, bool, bytes, hash, exists, output };\nexport default assert;\n//# sourceMappingURL=_assert.js.map","/*! noble-ciphers - MIT License (c) 2023 Paul Miller (paulmillr.com) */\nimport { bytes as abytes, isBytes } from './_assert.js';\n// Cast array to different type\nexport const u8 = (arr) => new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\nexport const u16 = (arr) => new Uint16Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 2));\nexport const u32 = (arr) => new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\n// Cast array to view\nexport const createView = (arr) => new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n// big-endian hardware is rare. Just in case someone still decides to run ciphers:\n// early-throw an error because we don't support BE yet.\nexport const isLE = new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44;\nif (!isLE)\n    throw new Error('Non little-endian hardware is not supported');\n// Array where index 0xf0 (240) is mapped to string 'f0'\nconst hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) => i.toString(16).padStart(2, '0'));\n/**\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nexport function bytesToHex(bytes) {\n    abytes(bytes);\n    // pre-caching improves the speed 6x\n    let hex = '';\n    for (let i = 0; i < bytes.length; i++) {\n        hex += hexes[bytes[i]];\n    }\n    return hex;\n}\n// We use optimized technique to convert hex string to byte array\nconst asciis = { _0: 48, _9: 57, _A: 65, _F: 70, _a: 97, _f: 102 };\nfunction asciiToBase16(char) {\n    if (char >= asciis._0 && char <= asciis._9)\n        return char - asciis._0;\n    if (char >= asciis._A && char <= asciis._F)\n        return char - (asciis._A - 10);\n    if (char >= asciis._a && char <= asciis._f)\n        return char - (asciis._a - 10);\n    return;\n}\n/**\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nexport function hexToBytes(hex) {\n    if (typeof hex !== 'string')\n        throw new Error('hex string expected, got ' + typeof hex);\n    const hl = hex.length;\n    const al = hl / 2;\n    if (hl % 2)\n        throw new Error('padded hex string expected, got unpadded hex of length ' + hl);\n    const array = new Uint8Array(al);\n    for (let ai = 0, hi = 0; ai < al; ai++, hi += 2) {\n        const n1 = asciiToBase16(hex.charCodeAt(hi));\n        const n2 = asciiToBase16(hex.charCodeAt(hi + 1));\n        if (n1 === undefined || n2 === undefined) {\n            const char = hex[hi] + hex[hi + 1];\n            throw new Error('hex string expected, got non-hex character \"' + char + '\" at index ' + hi);\n        }\n        array[ai] = n1 * 16 + n2;\n    }\n    return array;\n}\nexport function hexToNumber(hex) {\n    if (typeof hex !== 'string')\n        throw new Error('hex string expected, got ' + typeof hex);\n    // Big Endian\n    return BigInt(hex === '' ? '0' : `0x${hex}`);\n}\n// BE: Big Endian, LE: Little Endian\nexport function bytesToNumberBE(bytes) {\n    return hexToNumber(bytesToHex(bytes));\n}\nexport function numberToBytesBE(n, len) {\n    return hexToBytes(n.toString(16).padStart(len * 2, '0'));\n}\n// There is no setImmediate in browser and setTimeout is slow.\n// call of async fn will return Promise, which will be fullfiled only on\n// next scheduler queue processing step and this is exactly what we need.\nexport const nextTick = async () => { };\n// Returns control to thread each 'tick' ms to avoid blocking\nexport async function asyncLoop(iters, tick, cb) {\n    let ts = Date.now();\n    for (let i = 0; i < iters; i++) {\n        cb(i);\n        // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n        const diff = Date.now() - ts;\n        if (diff >= 0 && diff < tick)\n            continue;\n        await nextTick();\n        ts += diff;\n    }\n}\n/**\n * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])\n */\nexport function utf8ToBytes(str) {\n    if (typeof str !== 'string')\n        throw new Error(`string expected, got ${typeof str}`);\n    return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\n/**\n * @example bytesToUtf8(new Uint8Array([97, 98, 99])) // 'abc'\n */\nexport function bytesToUtf8(bytes) {\n    return new TextDecoder().decode(bytes);\n}\n/**\n * Normalizes (non-hex) string or Uint8Array to Uint8Array.\n * Warning: when Uint8Array is passed, it would NOT get copied.\n * Keep in mind for future mutable operations.\n */\nexport function toBytes(data) {\n    if (typeof data === 'string')\n        data = utf8ToBytes(data);\n    else if (isBytes(data))\n        data = copyBytes(data);\n    else\n        throw new Error(`Uint8Array expected, got ${typeof data}`);\n    return data;\n}\n/**\n * Copies several Uint8Arrays into one.\n */\nexport function concatBytes(...arrays) {\n    let sum = 0;\n    for (let i = 0; i < arrays.length; i++) {\n        const a = arrays[i];\n        abytes(a);\n        sum += a.length;\n    }\n    const res = new Uint8Array(sum);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const a = arrays[i];\n        res.set(a, pad);\n        pad += a.length;\n    }\n    return res;\n}\nexport function checkOpts(defaults, opts) {\n    if (opts == null || typeof opts !== 'object')\n        throw new Error('options must be defined');\n    const merged = Object.assign(defaults, opts);\n    return merged;\n}\n// Compares 2 u8a-s in kinda constant time\nexport function equalBytes(a, b) {\n    if (a.length !== b.length)\n        return false;\n    let diff = 0;\n    for (let i = 0; i < a.length; i++)\n        diff |= a[i] ^ b[i];\n    return diff === 0;\n}\n// For runtime check if class implements interface\nexport class Hash {\n}\n/**\n * @__NO_SIDE_EFFECTS__\n */\nexport const wrapCipher = (params, c) => {\n    Object.assign(c, params);\n    return c;\n};\n// Polyfill for Safari 14\nexport function setBigUint64(view, byteOffset, value, isLE) {\n    if (typeof view.setBigUint64 === 'function')\n        return view.setBigUint64(byteOffset, value, isLE);\n    const _32n = BigInt(32);\n    const _u32_max = BigInt(0xffffffff);\n    const wh = Number((value >> _32n) & _u32_max);\n    const wl = Number(value & _u32_max);\n    const h = isLE ? 4 : 0;\n    const l = isLE ? 0 : 4;\n    view.setUint32(byteOffset + h, wh, isLE);\n    view.setUint32(byteOffset + l, wl, isLE);\n}\nexport function u64Lengths(ciphertext, AAD) {\n    const num = new Uint8Array(16);\n    const view = createView(num);\n    setBigUint64(view, 0, BigInt(AAD ? AAD.length : 0), true);\n    setBigUint64(view, 8, BigInt(ciphertext.length), true);\n    return num;\n}\n// Is byte array aligned to 4 byte offset (u32)?\nexport function isAligned32(bytes) {\n    return bytes.byteOffset % 4 === 0;\n}\n// copy bytes to new u8a (aligned). Because Buffer.slice is broken.\nexport function copyBytes(bytes) {\n    return Uint8Array.from(bytes);\n}\nexport function clean(...arrays) {\n    for (let i = 0; i < arrays.length; i++) {\n        arrays[i].fill(0);\n    }\n}\n//# sourceMappingURL=utils.js.map","// Basic utils for ARX (add-rotate-xor) salsa and chacha ciphers.\nimport { bool as abool, bytes as abytes, number as anumber } from './_assert.js';\nimport { checkOpts, clean, copyBytes, u32 } from './utils.js';\n/*\nRFC8439 requires multi-step cipher stream, where\nauthKey starts with counter: 0, actual msg with counter: 1.\n\nFor this, we need a way to re-use nonce / counter:\n\n    const counter = new Uint8Array(4);\n    chacha(..., counter, ...); // counter is now 1\n    chacha(..., counter, ...); // counter is now 2\n\nThis is complicated:\n\n- 32-bit counters are enough, no need for 64-bit: max ArrayBuffer size in JS is 4GB\n- Original papers don't allow mutating counters\n- Counter overflow is undefined [^1]\n- Idea A: allow providing (nonce | counter) instead of just nonce, re-use it\n- Caveat: Cannot be re-used through all cases:\n- * chacha has (counter | nonce)\n- * xchacha has (nonce16 | counter | nonce16)\n- Idea B: separate nonce / counter and provide separate API for counter re-use\n- Caveat: there are different counter sizes depending on an algorithm.\n- salsa & chacha also differ in structures of key & sigma:\n  salsa20:      s[0] | k(4) | s[1] | nonce(2) | ctr(2) | s[2] | k(4) | s[3]\n  chacha:       s(4) | k(8) | ctr(1) | nonce(3)\n  chacha20orig: s(4) | k(8) | ctr(2) | nonce(2)\n- Idea C: helper method such as `setSalsaState(key, nonce, sigma, data)`\n- Caveat: we can't re-use counter array\n\nxchacha [^2] uses the subkey and remaining 8 byte nonce with ChaCha20 as normal\n(prefixed by 4 NUL bytes, since [RFC8439] specifies a 12-byte nonce).\n\n[^1]: https://mailarchive.ietf.org/arch/msg/cfrg/gsOnTJzcbgG6OqD8Sc0GO5aR_tU/\n[^2]: https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-xchacha#appendix-A.2\n*/\n// We can't make top-level var depend on utils.utf8ToBytes\n// because it's not present in all envs. Creating a similar fn here\nconst _utf8ToBytes = (str) => Uint8Array.from(str.split('').map((c) => c.charCodeAt(0)));\nconst sigma16 = _utf8ToBytes('expand 16-byte k');\nconst sigma32 = _utf8ToBytes('expand 32-byte k');\nconst sigma16_32 = u32(sigma16);\nconst sigma32_32 = u32(sigma32);\nexport const sigma = sigma32_32.slice();\nexport function rotl(a, b) {\n    return (a << b) | (a >>> (32 - b));\n}\n// Is byte array aligned to 4 byte offset (u32)?\nfunction isAligned32(b) {\n    return b.byteOffset % 4 === 0;\n}\n// Salsa and Chacha block length is always 512-bit\nconst BLOCK_LEN = 64;\nconst BLOCK_LEN32 = 16;\n// new Uint32Array([2**32])   // => Uint32Array(1) [ 0 ]\n// new Uint32Array([2**32-1]) // => Uint32Array(1) [ 4294967295 ]\nconst MAX_COUNTER = 2 ** 32 - 1;\nconst U32_EMPTY = new Uint32Array();\nfunction runCipher(core, sigma, key, nonce, data, output, counter, rounds) {\n    const len = data.length;\n    const block = new Uint8Array(BLOCK_LEN);\n    const b32 = u32(block);\n    // Make sure that buffers aligned to 4 bytes\n    const isAligned = isAligned32(data) && isAligned32(output);\n    const d32 = isAligned ? u32(data) : U32_EMPTY;\n    const o32 = isAligned ? u32(output) : U32_EMPTY;\n    for (let pos = 0; pos < len; counter++) {\n        core(sigma, key, nonce, b32, counter, rounds);\n        if (counter >= MAX_COUNTER)\n            throw new Error('arx: counter overflow');\n        const take = Math.min(BLOCK_LEN, len - pos);\n        // aligned to 4 bytes\n        if (isAligned && take === BLOCK_LEN) {\n            const pos32 = pos / 4;\n            if (pos % 4 !== 0)\n                throw new Error('arx: invalid block position');\n            for (let j = 0, posj; j < BLOCK_LEN32; j++) {\n                posj = pos32 + j;\n                o32[posj] = d32[posj] ^ b32[j];\n            }\n            pos += BLOCK_LEN;\n            continue;\n        }\n        for (let j = 0, posj; j < take; j++) {\n            posj = pos + j;\n            output[posj] = data[posj] ^ block[j];\n        }\n        pos += take;\n    }\n}\nexport function createCipher(core, opts) {\n    const { allowShortKeys, extendNonceFn, counterLength, counterRight, rounds } = checkOpts({ allowShortKeys: false, counterLength: 8, counterRight: false, rounds: 20 }, opts);\n    if (typeof core !== 'function')\n        throw new Error('core must be a function');\n    anumber(counterLength);\n    anumber(rounds);\n    abool(counterRight);\n    abool(allowShortKeys);\n    return (key, nonce, data, output, counter = 0) => {\n        abytes(key);\n        abytes(nonce);\n        abytes(data);\n        const len = data.length;\n        if (output === undefined)\n            output = new Uint8Array(len);\n        abytes(output);\n        anumber(counter);\n        if (counter < 0 || counter >= MAX_COUNTER)\n            throw new Error('arx: counter overflow');\n        if (output.length < len)\n            throw new Error(`arx: output (${output.length}) is shorter than data (${len})`);\n        const toClean = [];\n        // Key & sigma\n        // key=16 -> sigma16, k=key|key\n        // key=32 -> sigma32, k=key\n        let l = key.length, k, sigma;\n        if (l === 32) {\n            toClean.push((k = copyBytes(key)));\n            sigma = sigma32_32;\n        }\n        else if (l === 16 && allowShortKeys) {\n            k = new Uint8Array(32);\n            k.set(key);\n            k.set(key, 16);\n            sigma = sigma16_32;\n            toClean.push(k);\n        }\n        else {\n            throw new Error(`arx: invalid 32-byte key, got length=${l}`);\n        }\n        // Nonce\n        // salsa20:      8   (8-byte counter)\n        // chacha20orig: 8   (8-byte counter)\n        // chacha20:     12  (4-byte counter)\n        // xsalsa20:     24  (16 -> hsalsa,  8 -> old nonce)\n        // xchacha20:    24  (16 -> hchacha, 8 -> old nonce)\n        // Align nonce to 4 bytes\n        if (!isAligned32(nonce))\n            toClean.push((nonce = copyBytes(nonce)));\n        const k32 = u32(k);\n        // hsalsa & hchacha: handle extended nonce\n        if (extendNonceFn) {\n            if (nonce.length !== 24)\n                throw new Error(`arx: extended nonce must be 24 bytes`);\n            extendNonceFn(sigma, k32, u32(nonce.subarray(0, 16)), k32);\n            nonce = nonce.subarray(16);\n        }\n        // Handle nonce counter\n        const nonceNcLen = 16 - counterLength;\n        if (nonceNcLen !== nonce.length)\n            throw new Error(`arx: nonce must be ${nonceNcLen} or 16 bytes`);\n        // Pad counter when nonce is 64 bit\n        if (nonceNcLen !== 12) {\n            const nc = new Uint8Array(12);\n            nc.set(nonce, counterRight ? 0 : 12 - nonce.length);\n            nonce = nc;\n            toClean.push(nonce);\n        }\n        const n32 = u32(nonce);\n        runCipher(core, sigma, k32, n32, data, output, counter, rounds);\n        clean(...toClean);\n        return output;\n    };\n}\n//# sourceMappingURL=_arx.js.map","import { bytes as abytes, exists as aexists, output as aoutput } from './_assert.js';\nimport { clean, toBytes } from './utils.js';\n// Poly1305 is a fast and parallel secret-key message-authentication code.\n// https://cr.yp.to/mac.html, https://cr.yp.to/mac/poly1305-20050329.pdf\n// https://datatracker.ietf.org/doc/html/rfc8439\n// Based on Public Domain poly1305-donna https://github.com/floodyberry/poly1305-donna\nconst u8to16 = (a, i) => (a[i++] & 0xff) | ((a[i++] & 0xff) << 8);\nclass Poly1305 {\n    constructor(key) {\n        this.blockLen = 16;\n        this.outputLen = 16;\n        this.buffer = new Uint8Array(16);\n        this.r = new Uint16Array(10);\n        this.h = new Uint16Array(10);\n        this.pad = new Uint16Array(8);\n        this.pos = 0;\n        this.finished = false;\n        key = toBytes(key);\n        abytes(key, 32);\n        const t0 = u8to16(key, 0);\n        const t1 = u8to16(key, 2);\n        const t2 = u8to16(key, 4);\n        const t3 = u8to16(key, 6);\n        const t4 = u8to16(key, 8);\n        const t5 = u8to16(key, 10);\n        const t6 = u8to16(key, 12);\n        const t7 = u8to16(key, 14);\n        // https://github.com/floodyberry/poly1305-donna/blob/e6ad6e091d30d7f4ec2d4f978be1fcfcbce72781/poly1305-donna-16.h#L47\n        this.r[0] = t0 & 0x1fff;\n        this.r[1] = ((t0 >>> 13) | (t1 << 3)) & 0x1fff;\n        this.r[2] = ((t1 >>> 10) | (t2 << 6)) & 0x1f03;\n        this.r[3] = ((t2 >>> 7) | (t3 << 9)) & 0x1fff;\n        this.r[4] = ((t3 >>> 4) | (t4 << 12)) & 0x00ff;\n        this.r[5] = (t4 >>> 1) & 0x1ffe;\n        this.r[6] = ((t4 >>> 14) | (t5 << 2)) & 0x1fff;\n        this.r[7] = ((t5 >>> 11) | (t6 << 5)) & 0x1f81;\n        this.r[8] = ((t6 >>> 8) | (t7 << 8)) & 0x1fff;\n        this.r[9] = (t7 >>> 5) & 0x007f;\n        for (let i = 0; i < 8; i++)\n            this.pad[i] = u8to16(key, 16 + 2 * i);\n    }\n    process(data, offset, isLast = false) {\n        const hibit = isLast ? 0 : 1 << 11;\n        const { h, r } = this;\n        const r0 = r[0];\n        const r1 = r[1];\n        const r2 = r[2];\n        const r3 = r[3];\n        const r4 = r[4];\n        const r5 = r[5];\n        const r6 = r[6];\n        const r7 = r[7];\n        const r8 = r[8];\n        const r9 = r[9];\n        const t0 = u8to16(data, offset + 0);\n        const t1 = u8to16(data, offset + 2);\n        const t2 = u8to16(data, offset + 4);\n        const t3 = u8to16(data, offset + 6);\n        const t4 = u8to16(data, offset + 8);\n        const t5 = u8to16(data, offset + 10);\n        const t6 = u8to16(data, offset + 12);\n        const t7 = u8to16(data, offset + 14);\n        let h0 = h[0] + (t0 & 0x1fff);\n        let h1 = h[1] + (((t0 >>> 13) | (t1 << 3)) & 0x1fff);\n        let h2 = h[2] + (((t1 >>> 10) | (t2 << 6)) & 0x1fff);\n        let h3 = h[3] + (((t2 >>> 7) | (t3 << 9)) & 0x1fff);\n        let h4 = h[4] + (((t3 >>> 4) | (t4 << 12)) & 0x1fff);\n        let h5 = h[5] + ((t4 >>> 1) & 0x1fff);\n        let h6 = h[6] + (((t4 >>> 14) | (t5 << 2)) & 0x1fff);\n        let h7 = h[7] + (((t5 >>> 11) | (t6 << 5)) & 0x1fff);\n        let h8 = h[8] + (((t6 >>> 8) | (t7 << 8)) & 0x1fff);\n        let h9 = h[9] + ((t7 >>> 5) | hibit);\n        let c = 0;\n        let d0 = c + h0 * r0 + h1 * (5 * r9) + h2 * (5 * r8) + h3 * (5 * r7) + h4 * (5 * r6);\n        c = d0 >>> 13;\n        d0 &= 0x1fff;\n        d0 += h5 * (5 * r5) + h6 * (5 * r4) + h7 * (5 * r3) + h8 * (5 * r2) + h9 * (5 * r1);\n        c += d0 >>> 13;\n        d0 &= 0x1fff;\n        let d1 = c + h0 * r1 + h1 * r0 + h2 * (5 * r9) + h3 * (5 * r8) + h4 * (5 * r7);\n        c = d1 >>> 13;\n        d1 &= 0x1fff;\n        d1 += h5 * (5 * r6) + h6 * (5 * r5) + h7 * (5 * r4) + h8 * (5 * r3) + h9 * (5 * r2);\n        c += d1 >>> 13;\n        d1 &= 0x1fff;\n        let d2 = c + h0 * r2 + h1 * r1 + h2 * r0 + h3 * (5 * r9) + h4 * (5 * r8);\n        c = d2 >>> 13;\n        d2 &= 0x1fff;\n        d2 += h5 * (5 * r7) + h6 * (5 * r6) + h7 * (5 * r5) + h8 * (5 * r4) + h9 * (5 * r3);\n        c += d2 >>> 13;\n        d2 &= 0x1fff;\n        let d3 = c + h0 * r3 + h1 * r2 + h2 * r1 + h3 * r0 + h4 * (5 * r9);\n        c = d3 >>> 13;\n        d3 &= 0x1fff;\n        d3 += h5 * (5 * r8) + h6 * (5 * r7) + h7 * (5 * r6) + h8 * (5 * r5) + h9 * (5 * r4);\n        c += d3 >>> 13;\n        d3 &= 0x1fff;\n        let d4 = c + h0 * r4 + h1 * r3 + h2 * r2 + h3 * r1 + h4 * r0;\n        c = d4 >>> 13;\n        d4 &= 0x1fff;\n        d4 += h5 * (5 * r9) + h6 * (5 * r8) + h7 * (5 * r7) + h8 * (5 * r6) + h9 * (5 * r5);\n        c += d4 >>> 13;\n        d4 &= 0x1fff;\n        let d5 = c + h0 * r5 + h1 * r4 + h2 * r3 + h3 * r2 + h4 * r1;\n        c = d5 >>> 13;\n        d5 &= 0x1fff;\n        d5 += h5 * r0 + h6 * (5 * r9) + h7 * (5 * r8) + h8 * (5 * r7) + h9 * (5 * r6);\n        c += d5 >>> 13;\n        d5 &= 0x1fff;\n        let d6 = c + h0 * r6 + h1 * r5 + h2 * r4 + h3 * r3 + h4 * r2;\n        c = d6 >>> 13;\n        d6 &= 0x1fff;\n        d6 += h5 * r1 + h6 * r0 + h7 * (5 * r9) + h8 * (5 * r8) + h9 * (5 * r7);\n        c += d6 >>> 13;\n        d6 &= 0x1fff;\n        let d7 = c + h0 * r7 + h1 * r6 + h2 * r5 + h3 * r4 + h4 * r3;\n        c = d7 >>> 13;\n        d7 &= 0x1fff;\n        d7 += h5 * r2 + h6 * r1 + h7 * r0 + h8 * (5 * r9) + h9 * (5 * r8);\n        c += d7 >>> 13;\n        d7 &= 0x1fff;\n        let d8 = c + h0 * r8 + h1 * r7 + h2 * r6 + h3 * r5 + h4 * r4;\n        c = d8 >>> 13;\n        d8 &= 0x1fff;\n        d8 += h5 * r3 + h6 * r2 + h7 * r1 + h8 * r0 + h9 * (5 * r9);\n        c += d8 >>> 13;\n        d8 &= 0x1fff;\n        let d9 = c + h0 * r9 + h1 * r8 + h2 * r7 + h3 * r6 + h4 * r5;\n        c = d9 >>> 13;\n        d9 &= 0x1fff;\n        d9 += h5 * r4 + h6 * r3 + h7 * r2 + h8 * r1 + h9 * r0;\n        c += d9 >>> 13;\n        d9 &= 0x1fff;\n        c = ((c << 2) + c) | 0;\n        c = (c + d0) | 0;\n        d0 = c & 0x1fff;\n        c = c >>> 13;\n        d1 += c;\n        h[0] = d0;\n        h[1] = d1;\n        h[2] = d2;\n        h[3] = d3;\n        h[4] = d4;\n        h[5] = d5;\n        h[6] = d6;\n        h[7] = d7;\n        h[8] = d8;\n        h[9] = d9;\n    }\n    finalize() {\n        const { h, pad } = this;\n        const g = new Uint16Array(10);\n        let c = h[1] >>> 13;\n        h[1] &= 0x1fff;\n        for (let i = 2; i < 10; i++) {\n            h[i] += c;\n            c = h[i] >>> 13;\n            h[i] &= 0x1fff;\n        }\n        h[0] += c * 5;\n        c = h[0] >>> 13;\n        h[0] &= 0x1fff;\n        h[1] += c;\n        c = h[1] >>> 13;\n        h[1] &= 0x1fff;\n        h[2] += c;\n        g[0] = h[0] + 5;\n        c = g[0] >>> 13;\n        g[0] &= 0x1fff;\n        for (let i = 1; i < 10; i++) {\n            g[i] = h[i] + c;\n            c = g[i] >>> 13;\n            g[i] &= 0x1fff;\n        }\n        g[9] -= 1 << 13;\n        let mask = (c ^ 1) - 1;\n        for (let i = 0; i < 10; i++)\n            g[i] &= mask;\n        mask = ~mask;\n        for (let i = 0; i < 10; i++)\n            h[i] = (h[i] & mask) | g[i];\n        h[0] = (h[0] | (h[1] << 13)) & 0xffff;\n        h[1] = ((h[1] >>> 3) | (h[2] << 10)) & 0xffff;\n        h[2] = ((h[2] >>> 6) | (h[3] << 7)) & 0xffff;\n        h[3] = ((h[3] >>> 9) | (h[4] << 4)) & 0xffff;\n        h[4] = ((h[4] >>> 12) | (h[5] << 1) | (h[6] << 14)) & 0xffff;\n        h[5] = ((h[6] >>> 2) | (h[7] << 11)) & 0xffff;\n        h[6] = ((h[7] >>> 5) | (h[8] << 8)) & 0xffff;\n        h[7] = ((h[8] >>> 8) | (h[9] << 5)) & 0xffff;\n        let f = h[0] + pad[0];\n        h[0] = f & 0xffff;\n        for (let i = 1; i < 8; i++) {\n            f = (((h[i] + pad[i]) | 0) + (f >>> 16)) | 0;\n            h[i] = f & 0xffff;\n        }\n        clean(g);\n    }\n    update(data) {\n        aexists(this);\n        const { buffer, blockLen } = this;\n        data = toBytes(data);\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            // Fast path: we have at least one block in input\n            if (take === blockLen) {\n                for (; blockLen <= len - pos; pos += blockLen)\n                    this.process(data, pos);\n                continue;\n            }\n            buffer.set(data.subarray(pos, pos + take), this.pos);\n            this.pos += take;\n            pos += take;\n            if (this.pos === blockLen) {\n                this.process(buffer, 0, false);\n                this.pos = 0;\n            }\n        }\n        return this;\n    }\n    destroy() {\n        clean(this.h, this.r, this.buffer, this.pad);\n    }\n    digestInto(out) {\n        aexists(this);\n        aoutput(out, this);\n        this.finished = true;\n        const { buffer, h } = this;\n        let { pos } = this;\n        if (pos) {\n            buffer[pos++] = 1;\n            for (; pos < 16; pos++)\n                buffer[pos] = 0;\n            this.process(buffer, 0, true);\n        }\n        this.finalize();\n        let opos = 0;\n        for (let i = 0; i < 8; i++) {\n            out[opos++] = h[i] >>> 0;\n            out[opos++] = h[i] >>> 8;\n        }\n        return out;\n    }\n    digest() {\n        const { buffer, outputLen } = this;\n        this.digestInto(buffer);\n        const res = buffer.slice(0, outputLen);\n        this.destroy();\n        return res;\n    }\n}\nexport function wrapConstructorWithKey(hashCons) {\n    const hashC = (msg, key) => hashCons(key).update(toBytes(msg)).digest();\n    const tmp = hashCons(new Uint8Array(32));\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (key) => hashCons(key);\n    return hashC;\n}\nexport const poly1305 = wrapConstructorWithKey((key) => new Poly1305(key));\n//# sourceMappingURL=_poly1305.js.map","// prettier-ignore\nimport { createCipher, rotl } from './_arx.js';\nimport { bytes as abytes } from './_assert.js';\nimport { poly1305 } from './_poly1305.js';\nimport { clean, createView, equalBytes, setBigUint64, wrapCipher, } from './utils.js';\n// ChaCha20 stream cipher was released in 2008. ChaCha aims to increase\n// the diffusion per round, but had slightly less cryptanalysis.\n// https://cr.yp.to/chacha.html, http://cr.yp.to/chacha/chacha-20080128.pdf\n/**\n * ChaCha core function.\n */\n// prettier-ignore\nfunction chachaCore(s, k, n, out, cnt, rounds = 20) {\n    let y00 = s[0], y01 = s[1], y02 = s[2], y03 = s[3], // \"expa\"   \"nd 3\"  \"2-by\"  \"te k\"\n    y04 = k[0], y05 = k[1], y06 = k[2], y07 = k[3], // Key      Key     Key     Key\n    y08 = k[4], y09 = k[5], y10 = k[6], y11 = k[7], // Key      Key     Key     Key\n    y12 = cnt, y13 = n[0], y14 = n[1], y15 = n[2]; // Counter  Counter\tNonce   Nonce\n    // Save state to temporary variables\n    let x00 = y00, x01 = y01, x02 = y02, x03 = y03, x04 = y04, x05 = y05, x06 = y06, x07 = y07, x08 = y08, x09 = y09, x10 = y10, x11 = y11, x12 = y12, x13 = y13, x14 = y14, x15 = y15;\n    for (let r = 0; r < rounds; r += 2) {\n        x00 = (x00 + x04) | 0;\n        x12 = rotl(x12 ^ x00, 16);\n        x08 = (x08 + x12) | 0;\n        x04 = rotl(x04 ^ x08, 12);\n        x00 = (x00 + x04) | 0;\n        x12 = rotl(x12 ^ x00, 8);\n        x08 = (x08 + x12) | 0;\n        x04 = rotl(x04 ^ x08, 7);\n        x01 = (x01 + x05) | 0;\n        x13 = rotl(x13 ^ x01, 16);\n        x09 = (x09 + x13) | 0;\n        x05 = rotl(x05 ^ x09, 12);\n        x01 = (x01 + x05) | 0;\n        x13 = rotl(x13 ^ x01, 8);\n        x09 = (x09 + x13) | 0;\n        x05 = rotl(x05 ^ x09, 7);\n        x02 = (x02 + x06) | 0;\n        x14 = rotl(x14 ^ x02, 16);\n        x10 = (x10 + x14) | 0;\n        x06 = rotl(x06 ^ x10, 12);\n        x02 = (x02 + x06) | 0;\n        x14 = rotl(x14 ^ x02, 8);\n        x10 = (x10 + x14) | 0;\n        x06 = rotl(x06 ^ x10, 7);\n        x03 = (x03 + x07) | 0;\n        x15 = rotl(x15 ^ x03, 16);\n        x11 = (x11 + x15) | 0;\n        x07 = rotl(x07 ^ x11, 12);\n        x03 = (x03 + x07) | 0;\n        x15 = rotl(x15 ^ x03, 8);\n        x11 = (x11 + x15) | 0;\n        x07 = rotl(x07 ^ x11, 7);\n        x00 = (x00 + x05) | 0;\n        x15 = rotl(x15 ^ x00, 16);\n        x10 = (x10 + x15) | 0;\n        x05 = rotl(x05 ^ x10, 12);\n        x00 = (x00 + x05) | 0;\n        x15 = rotl(x15 ^ x00, 8);\n        x10 = (x10 + x15) | 0;\n        x05 = rotl(x05 ^ x10, 7);\n        x01 = (x01 + x06) | 0;\n        x12 = rotl(x12 ^ x01, 16);\n        x11 = (x11 + x12) | 0;\n        x06 = rotl(x06 ^ x11, 12);\n        x01 = (x01 + x06) | 0;\n        x12 = rotl(x12 ^ x01, 8);\n        x11 = (x11 + x12) | 0;\n        x06 = rotl(x06 ^ x11, 7);\n        x02 = (x02 + x07) | 0;\n        x13 = rotl(x13 ^ x02, 16);\n        x08 = (x08 + x13) | 0;\n        x07 = rotl(x07 ^ x08, 12);\n        x02 = (x02 + x07) | 0;\n        x13 = rotl(x13 ^ x02, 8);\n        x08 = (x08 + x13) | 0;\n        x07 = rotl(x07 ^ x08, 7);\n        x03 = (x03 + x04) | 0;\n        x14 = rotl(x14 ^ x03, 16);\n        x09 = (x09 + x14) | 0;\n        x04 = rotl(x04 ^ x09, 12);\n        x03 = (x03 + x04) | 0;\n        x14 = rotl(x14 ^ x03, 8);\n        x09 = (x09 + x14) | 0;\n        x04 = rotl(x04 ^ x09, 7);\n    }\n    // Write output\n    let oi = 0;\n    out[oi++] = (y00 + x00) | 0;\n    out[oi++] = (y01 + x01) | 0;\n    out[oi++] = (y02 + x02) | 0;\n    out[oi++] = (y03 + x03) | 0;\n    out[oi++] = (y04 + x04) | 0;\n    out[oi++] = (y05 + x05) | 0;\n    out[oi++] = (y06 + x06) | 0;\n    out[oi++] = (y07 + x07) | 0;\n    out[oi++] = (y08 + x08) | 0;\n    out[oi++] = (y09 + x09) | 0;\n    out[oi++] = (y10 + x10) | 0;\n    out[oi++] = (y11 + x11) | 0;\n    out[oi++] = (y12 + x12) | 0;\n    out[oi++] = (y13 + x13) | 0;\n    out[oi++] = (y14 + x14) | 0;\n    out[oi++] = (y15 + x15) | 0;\n}\n/**\n * hchacha helper method, used primarily in xchacha, to hash\n * key and nonce into key' and nonce'.\n * Same as chachaCore, but there doesn't seem to be a way to move the block\n * out without 25% performance hit.\n */\n// prettier-ignore\nexport function hchacha(s, k, i, o32) {\n    let x00 = s[0], x01 = s[1], x02 = s[2], x03 = s[3], x04 = k[0], x05 = k[1], x06 = k[2], x07 = k[3], x08 = k[4], x09 = k[5], x10 = k[6], x11 = k[7], x12 = i[0], x13 = i[1], x14 = i[2], x15 = i[3];\n    for (let r = 0; r < 20; r += 2) {\n        x00 = (x00 + x04) | 0;\n        x12 = rotl(x12 ^ x00, 16);\n        x08 = (x08 + x12) | 0;\n        x04 = rotl(x04 ^ x08, 12);\n        x00 = (x00 + x04) | 0;\n        x12 = rotl(x12 ^ x00, 8);\n        x08 = (x08 + x12) | 0;\n        x04 = rotl(x04 ^ x08, 7);\n        x01 = (x01 + x05) | 0;\n        x13 = rotl(x13 ^ x01, 16);\n        x09 = (x09 + x13) | 0;\n        x05 = rotl(x05 ^ x09, 12);\n        x01 = (x01 + x05) | 0;\n        x13 = rotl(x13 ^ x01, 8);\n        x09 = (x09 + x13) | 0;\n        x05 = rotl(x05 ^ x09, 7);\n        x02 = (x02 + x06) | 0;\n        x14 = rotl(x14 ^ x02, 16);\n        x10 = (x10 + x14) | 0;\n        x06 = rotl(x06 ^ x10, 12);\n        x02 = (x02 + x06) | 0;\n        x14 = rotl(x14 ^ x02, 8);\n        x10 = (x10 + x14) | 0;\n        x06 = rotl(x06 ^ x10, 7);\n        x03 = (x03 + x07) | 0;\n        x15 = rotl(x15 ^ x03, 16);\n        x11 = (x11 + x15) | 0;\n        x07 = rotl(x07 ^ x11, 12);\n        x03 = (x03 + x07) | 0;\n        x15 = rotl(x15 ^ x03, 8);\n        x11 = (x11 + x15) | 0;\n        x07 = rotl(x07 ^ x11, 7);\n        x00 = (x00 + x05) | 0;\n        x15 = rotl(x15 ^ x00, 16);\n        x10 = (x10 + x15) | 0;\n        x05 = rotl(x05 ^ x10, 12);\n        x00 = (x00 + x05) | 0;\n        x15 = rotl(x15 ^ x00, 8);\n        x10 = (x10 + x15) | 0;\n        x05 = rotl(x05 ^ x10, 7);\n        x01 = (x01 + x06) | 0;\n        x12 = rotl(x12 ^ x01, 16);\n        x11 = (x11 + x12) | 0;\n        x06 = rotl(x06 ^ x11, 12);\n        x01 = (x01 + x06) | 0;\n        x12 = rotl(x12 ^ x01, 8);\n        x11 = (x11 + x12) | 0;\n        x06 = rotl(x06 ^ x11, 7);\n        x02 = (x02 + x07) | 0;\n        x13 = rotl(x13 ^ x02, 16);\n        x08 = (x08 + x13) | 0;\n        x07 = rotl(x07 ^ x08, 12);\n        x02 = (x02 + x07) | 0;\n        x13 = rotl(x13 ^ x02, 8);\n        x08 = (x08 + x13) | 0;\n        x07 = rotl(x07 ^ x08, 7);\n        x03 = (x03 + x04) | 0;\n        x14 = rotl(x14 ^ x03, 16);\n        x09 = (x09 + x14) | 0;\n        x04 = rotl(x04 ^ x09, 12);\n        x03 = (x03 + x04) | 0;\n        x14 = rotl(x14 ^ x03, 8);\n        x09 = (x09 + x14) | 0;\n        x04 = rotl(x04 ^ x09, 7);\n    }\n    let oi = 0;\n    o32[oi++] = x00;\n    o32[oi++] = x01;\n    o32[oi++] = x02;\n    o32[oi++] = x03;\n    o32[oi++] = x12;\n    o32[oi++] = x13;\n    o32[oi++] = x14;\n    o32[oi++] = x15;\n}\n/**\n * Original, non-RFC chacha20 from DJB. 8-byte nonce, 8-byte counter.\n */\nexport const chacha20orig = /* @__PURE__ */ createCipher(chachaCore, {\n    counterRight: false,\n    counterLength: 8,\n    allowShortKeys: true,\n});\n/**\n * ChaCha stream cipher. Conforms to RFC 8439 (IETF, TLS). 12-byte nonce, 4-byte counter.\n * With 12-byte nonce, it's not safe to use fill it with random (CSPRNG), due to collision chance.\n */\nexport const chacha20 = /* @__PURE__ */ createCipher(chachaCore, {\n    counterRight: false,\n    counterLength: 4,\n    allowShortKeys: false,\n});\n/**\n * XChaCha eXtended-nonce ChaCha. 24-byte nonce.\n * With 24-byte nonce, it's safe to use fill it with random (CSPRNG).\n * https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-xchacha\n */\nexport const xchacha20 = /* @__PURE__ */ createCipher(chachaCore, {\n    counterRight: false,\n    counterLength: 8,\n    extendNonceFn: hchacha,\n    allowShortKeys: false,\n});\n/**\n * Reduced 8-round chacha, described in original paper.\n */\nexport const chacha8 = /* @__PURE__ */ createCipher(chachaCore, {\n    counterRight: false,\n    counterLength: 4,\n    rounds: 8,\n});\n/**\n * Reduced 12-round chacha, described in original paper.\n */\nexport const chacha12 = /* @__PURE__ */ createCipher(chachaCore, {\n    counterRight: false,\n    counterLength: 4,\n    rounds: 12,\n});\nconst ZEROS16 = /* @__PURE__ */ new Uint8Array(16);\n// Pad to digest size with zeros\nconst updatePadded = (h, msg) => {\n    h.update(msg);\n    const left = msg.length % 16;\n    if (left)\n        h.update(ZEROS16.subarray(left));\n};\nconst ZEROS32 = /* @__PURE__ */ new Uint8Array(32);\nfunction computeTag(fn, key, nonce, data, AAD) {\n    const authKey = fn(key, nonce, ZEROS32);\n    const h = poly1305.create(authKey);\n    if (AAD)\n        updatePadded(h, AAD);\n    updatePadded(h, data);\n    const num = new Uint8Array(16);\n    const view = createView(num);\n    setBigUint64(view, 0, BigInt(AAD ? AAD.length : 0), true);\n    setBigUint64(view, 8, BigInt(data.length), true);\n    h.update(num);\n    const res = h.digest();\n    clean(authKey, num);\n    return res;\n}\n/**\n * AEAD algorithm from RFC 8439.\n * Salsa20 and chacha (RFC 8439) use poly1305 differently.\n * We could have composed them similar to:\n * https://github.com/paulmillr/scure-base/blob/b266c73dde977b1dd7ef40ef7a23cc15aab526b3/index.ts#L250\n * But it's hard because of authKey:\n * In salsa20, authKey changes position in salsa stream.\n * In chacha, authKey can't be computed inside computeTag, it modifies the counter.\n */\nexport const _poly1305_aead = (xorStream) => (key, nonce, AAD) => {\n    const tagLength = 16;\n    abytes(key, 32);\n    abytes(nonce);\n    return {\n        encrypt(plaintext, output) {\n            const plength = plaintext.length;\n            const clength = plength + tagLength;\n            if (output) {\n                abytes(output, clength);\n            }\n            else {\n                output = new Uint8Array(clength);\n            }\n            xorStream(key, nonce, plaintext, output, 1);\n            const tag = computeTag(xorStream, key, nonce, output.subarray(0, -tagLength), AAD);\n            output.set(tag, plength); // append tag\n            clean(tag);\n            return output;\n        },\n        decrypt(ciphertext, output) {\n            const clength = ciphertext.length;\n            const plength = clength - tagLength;\n            if (clength < tagLength)\n                throw new Error(`encrypted data must be at least ${tagLength} bytes`);\n            if (output) {\n                abytes(output, plength);\n            }\n            else {\n                output = new Uint8Array(plength);\n            }\n            const data = ciphertext.subarray(0, -tagLength);\n            const passedTag = ciphertext.subarray(-tagLength);\n            const tag = computeTag(xorStream, key, nonce, data, AAD);\n            if (!equalBytes(passedTag, tag))\n                throw new Error('invalid tag');\n            xorStream(key, nonce, data, output, 1);\n            clean(tag);\n            return output;\n        },\n    };\n};\n/**\n * ChaCha20-Poly1305 from RFC 8439.\n * With 12-byte nonce, it's not safe to use fill it with random (CSPRNG), due to collision chance.\n */\nexport const chacha20poly1305 = /* @__PURE__ */ wrapCipher({ blockSize: 64, nonceLength: 12, tagLength: 16 }, _poly1305_aead(chacha20));\n/**\n * XChaCha20-Poly1305 extended-nonce chacha.\n * https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-xchacha\n * With 24-byte nonce, it's safe to use fill it with random (CSPRNG).\n */\nexport const xchacha20poly1305 = /* @__PURE__ */ wrapCipher({ blockSize: 64, nonceLength: 24, tagLength: 16 }, _poly1305_aead(xchacha20));\n//# sourceMappingURL=chacha.js.map","import { hash as assertHash, number as assertNumber } from './_assert.js';\nimport { toBytes } from './utils.js';\nimport { hmac } from './hmac.js';\n// HKDF (RFC 5869)\n// https://soatok.blog/2021/11/17/understanding-hkdf/\n/**\n * HKDF-Extract(IKM, salt) -> PRK\n * Arguments position differs from spec (IKM is first one, since it is not optional)\n * @param hash\n * @param ikm\n * @param salt\n * @returns\n */\nexport function extract(hash, ikm, salt) {\n    assertHash(hash);\n    // NOTE: some libraries treat zero-length array as 'not provided';\n    // we don't, since we have undefined as 'not provided'\n    // https://github.com/RustCrypto/KDFs/issues/15\n    if (salt === undefined)\n        salt = new Uint8Array(hash.outputLen); // if not provided, it is set to a string of HashLen zeros\n    return hmac(hash, toBytes(salt), toBytes(ikm));\n}\n// HKDF-Expand(PRK, info, L) -> OKM\nconst HKDF_COUNTER = /* @__PURE__ */ new Uint8Array([0]);\nconst EMPTY_BUFFER = /* @__PURE__ */ new Uint8Array();\n/**\n * HKDF-expand from the spec.\n * @param prk - a pseudorandom key of at least HashLen octets (usually, the output from the extract step)\n * @param info - optional context and application specific information (can be a zero-length string)\n * @param length - length of output keying material in octets\n */\nexport function expand(hash, prk, info, length = 32) {\n    assertHash(hash);\n    assertNumber(length);\n    if (length > 255 * hash.outputLen)\n        throw new Error('Length should be <= 255*HashLen');\n    const blocks = Math.ceil(length / hash.outputLen);\n    if (info === undefined)\n        info = EMPTY_BUFFER;\n    // first L(ength) octets of T\n    const okm = new Uint8Array(blocks * hash.outputLen);\n    // Re-use HMAC instance between blocks\n    const HMAC = hmac.create(hash, prk);\n    const HMACTmp = HMAC._cloneInto();\n    const T = new Uint8Array(HMAC.outputLen);\n    for (let counter = 0; counter < blocks; counter++) {\n        HKDF_COUNTER[0] = counter + 1;\n        // T(0) = empty string (zero length)\n        // T(N) = HMAC-Hash(PRK, T(N-1) | info | N)\n        HMACTmp.update(counter === 0 ? EMPTY_BUFFER : T)\n            .update(info)\n            .update(HKDF_COUNTER)\n            .digestInto(T);\n        okm.set(T, hash.outputLen * counter);\n        HMAC._cloneInto(HMACTmp);\n    }\n    HMAC.destroy();\n    HMACTmp.destroy();\n    T.fill(0);\n    HKDF_COUNTER.fill(0);\n    return okm.slice(0, length);\n}\n/**\n * HKDF (RFC 5869): extract + expand in one step.\n * @param hash - hash function that would be used (e.g. sha256)\n * @param ikm - input keying material, the initial key\n * @param salt - optional salt value (a non-secret random value)\n * @param info - optional context and application specific information\n * @param length - length of output keying material in octets\n */\nexport const hkdf = (hash, ikm, salt, info, length) => expand(hash, extract(hash, ikm, salt), info, length);\n//# sourceMappingURL=hkdf.js.map","import { pureJsCrypto } from './js.js';\nexport const defaultCrypto = pureJsCrypto;\n//# sourceMappingURL=index.browser.js.map","import { chacha20poly1305 } from '@noble/ciphers/chacha';\nimport { x25519 } from '@noble/curves/ed25519';\nimport { extract, expand } from '@noble/hashes/hkdf';\nimport { sha256 } from '@noble/hashes/sha256';\nexport const pureJsCrypto = {\n    hashSHA256(data) {\n        return sha256(data.subarray());\n    },\n    getHKDF(ck, ikm) {\n        const prk = extract(sha256, ikm, ck);\n        const okmU8Array = expand(sha256, prk, undefined, 96);\n        const okm = okmU8Array;\n        const k1 = okm.subarray(0, 32);\n        const k2 = okm.subarray(32, 64);\n        const k3 = okm.subarray(64, 96);\n        return [k1, k2, k3];\n    },\n    generateX25519KeyPair() {\n        const secretKey = x25519.utils.randomPrivateKey();\n        const publicKey = x25519.getPublicKey(secretKey);\n        return {\n            publicKey,\n            privateKey: secretKey\n        };\n    },\n    generateX25519KeyPairFromSeed(seed) {\n        const publicKey = x25519.getPublicKey(seed);\n        return {\n            publicKey,\n            privateKey: seed\n        };\n    },\n    generateX25519SharedKey(privateKey, publicKey) {\n        return x25519.getSharedSecret(privateKey.subarray(), publicKey.subarray());\n    },\n    chaCha20Poly1305Encrypt(plaintext, nonce, ad, k) {\n        return chacha20poly1305(k, nonce, ad).encrypt(plaintext.subarray());\n    },\n    chaCha20Poly1305Decrypt(ciphertext, nonce, ad, k, dst) {\n        return chacha20poly1305(k, nonce, ad).decrypt(ciphertext.subarray(), dst);\n    }\n};\n//# sourceMappingURL=js.js.map","import {} from 'uint8arraylist';\nimport { allocUnsafe as uint8ArrayAllocUnsafe } from 'uint8arrays/alloc';\nexport const uint16BEEncode = (value) => {\n    const target = uint8ArrayAllocUnsafe(2);\n    target[0] = value >> 8;\n    target[1] = value;\n    return target;\n};\nuint16BEEncode.bytes = 2;\nexport const uint16BEDecode = (data) => {\n    if (data.length < 2)\n        throw RangeError('Could not decode int16BE');\n    if (data instanceof Uint8Array) {\n        let value = 0;\n        value += data[0] << 8;\n        value += data[1];\n        return value;\n    }\n    return data.getUint16(0);\n};\nuint16BEDecode.bytes = 2;\n//# sourceMappingURL=encoder.js.map","import { toString as uint8ArrayToString } from 'uint8arrays/to-string';\nimport { DUMP_SESSION_KEYS } from './constants.js';\nexport function logLocalStaticKeys(s, keyLogger) {\n    if (!keyLogger.enabled || !DUMP_SESSION_KEYS) {\n        return;\n    }\n    if (s) {\n        keyLogger(`LOCAL_STATIC_PUBLIC_KEY ${uint8ArrayToString(s.publicKey, 'hex')}`);\n        keyLogger(`LOCAL_STATIC_PRIVATE_KEY ${uint8ArrayToString(s.privateKey, 'hex')}`);\n    }\n    else {\n        keyLogger('Missing local static keys.');\n    }\n}\nexport function logLocalEphemeralKeys(e, keyLogger) {\n    if (!keyLogger.enabled || !DUMP_SESSION_KEYS) {\n        return;\n    }\n    if (e) {\n        keyLogger(`LOCAL_PUBLIC_EPHEMERAL_KEY ${uint8ArrayToString(e.publicKey, 'hex')}`);\n        keyLogger(`LOCAL_PRIVATE_EPHEMERAL_KEY ${uint8ArrayToString(e.privateKey, 'hex')}`);\n    }\n    else {\n        keyLogger('Missing local ephemeral keys.');\n    }\n}\nexport function logRemoteStaticKey(rs, keyLogger) {\n    if (!keyLogger.enabled || !DUMP_SESSION_KEYS) {\n        return;\n    }\n    if (rs) {\n        keyLogger(`REMOTE_STATIC_PUBLIC_KEY ${uint8ArrayToString(rs.subarray(), 'hex')}`);\n    }\n    else {\n        keyLogger('Missing remote static public key.');\n    }\n}\nexport function logRemoteEphemeralKey(re, keyLogger) {\n    if (!keyLogger.enabled || !DUMP_SESSION_KEYS) {\n        return;\n    }\n    if (re) {\n        keyLogger(`REMOTE_EPHEMERAL_PUBLIC_KEY ${uint8ArrayToString(re.subarray(), 'hex')}`);\n    }\n    else {\n        keyLogger('Missing remote ephemeral keys.');\n    }\n}\nexport function logCipherState(cs1, cs2, keyLogger) {\n    if (!keyLogger.enabled || !DUMP_SESSION_KEYS) {\n        return;\n    }\n    keyLogger(`CIPHER_STATE_1 ${cs1.n.getUint64()} ${cs1.k && uint8ArrayToString(cs1.k, 'hex')}`);\n    keyLogger(`CIPHER_STATE_2 ${cs2.n.getUint64()} ${cs2.k && uint8ArrayToString(cs2.k, 'hex')}`);\n}\n//# sourceMappingURL=logger.js.map","export class UnexpectedPeerError extends Error {\n    code;\n    constructor(message = 'Unexpected Peer') {\n        super(message);\n        this.code = UnexpectedPeerError.code;\n    }\n    static code = 'ERR_UNEXPECTED_PEER';\n}\nexport class InvalidCryptoExchangeError extends Error {\n    code;\n    constructor(message = 'Invalid crypto exchange') {\n        super(message);\n        this.code = InvalidCryptoExchangeError.code;\n    }\n    static code = 'ERR_INVALID_CRYPTO_EXCHANGE';\n}\n//# sourceMappingURL=errors.js.map","import { alloc as uint8ArrayAlloc } from 'uint8arrays/alloc';\nexport const MIN_NONCE = 0;\n// For performance reasons, the nonce is represented as a JS `number`\n// Although JS `number` can safely represent integers up to 2 ** 53 - 1, we choose to only use\n// 4 bytes to store the data for performance reason.\n// This is a slight deviation from the noise spec, which describes the max nonce as 2 ** 64 - 2\n// The effect is that this implementation will need a new handshake to be performed after fewer messages are exchanged than other implementations with full uint64 nonces.\n// this MAX_NONCE is still a large number of messages, so the practical effect of this is negligible.\nexport const MAX_NONCE = 0xffffffff;\nconst ERR_MAX_NONCE = 'Cipherstate has reached maximum n, a new handshake must be performed';\n/**\n * The nonce is an uint that's increased over time.\n * Maintaining different representations help improve performance.\n */\nexport class Nonce {\n    n;\n    bytes;\n    view;\n    constructor(n = MIN_NONCE) {\n        this.n = n;\n        this.bytes = uint8ArrayAlloc(12);\n        this.view = new DataView(this.bytes.buffer, this.bytes.byteOffset, this.bytes.byteLength);\n        this.view.setUint32(4, n, true);\n    }\n    increment() {\n        this.n++;\n        // Even though we're treating the nonce as 8 bytes, RFC7539 specifies 12 bytes for a nonce.\n        this.view.setUint32(4, this.n, true);\n    }\n    getBytes() {\n        return this.bytes;\n    }\n    getUint64() {\n        return this.n;\n    }\n    assertValue() {\n        if (this.n > MAX_NONCE) {\n            throw new Error(ERR_MAX_NONCE);\n        }\n    }\n}\n//# sourceMappingURL=nonce.js.map","import { Uint8ArrayList } from 'uint8arraylist';\nimport { fromString as uint8ArrayFromString } from 'uint8arrays';\nimport { alloc as uint8ArrayAlloc } from 'uint8arrays/alloc';\nimport { InvalidCryptoExchangeError } from './errors.js';\nimport { Nonce } from './nonce.js';\n// Code in this file is a direct translation of a subset of the noise protocol https://noiseprotocol.org/noise.html,\n// agnostic to libp2p's usage of noise\nexport const ZEROLEN = uint8ArrayAlloc(0);\nexport class CipherState {\n    k;\n    n;\n    crypto;\n    constructor(crypto, k = undefined, n = 0) {\n        this.crypto = crypto;\n        this.k = k;\n        this.n = new Nonce(n);\n    }\n    hasKey() {\n        return Boolean(this.k);\n    }\n    encryptWithAd(ad, plaintext) {\n        if (!this.hasKey()) {\n            return plaintext;\n        }\n        this.n.assertValue();\n        const e = this.crypto.encrypt(plaintext, this.n.getBytes(), ad, this.k);\n        this.n.increment();\n        return e;\n    }\n    decryptWithAd(ad, ciphertext, dst) {\n        if (!this.hasKey()) {\n            return ciphertext;\n        }\n        this.n.assertValue();\n        const plaintext = this.crypto.decrypt(ciphertext, this.n.getBytes(), ad, this.k, dst);\n        this.n.increment();\n        return plaintext;\n    }\n}\nexport class SymmetricState {\n    cs;\n    ck;\n    h;\n    crypto;\n    constructor(crypto, protocolName) {\n        this.crypto = crypto;\n        const protocolNameBytes = uint8ArrayFromString(protocolName, 'utf-8');\n        this.h = hashProtocolName(crypto, protocolNameBytes);\n        this.ck = this.h;\n        this.cs = new CipherState(crypto);\n    }\n    mixKey(ikm) {\n        const [ck, tempK] = this.crypto.hkdf(this.ck, ikm);\n        this.ck = ck;\n        this.cs = new CipherState(this.crypto, tempK);\n    }\n    mixHash(data) {\n        this.h = this.crypto.hash(new Uint8ArrayList(this.h, data));\n    }\n    encryptAndHash(plaintext) {\n        const ciphertext = this.cs.encryptWithAd(this.h, plaintext);\n        this.mixHash(ciphertext);\n        return ciphertext;\n    }\n    decryptAndHash(ciphertext) {\n        const plaintext = this.cs.decryptWithAd(this.h, ciphertext);\n        this.mixHash(ciphertext);\n        return plaintext;\n    }\n    split() {\n        const [tempK1, tempK2] = this.crypto.hkdf(this.ck, ZEROLEN);\n        return [new CipherState(this.crypto, tempK1), new CipherState(this.crypto, tempK2)];\n    }\n}\nexport class AbstractHandshakeState {\n    ss;\n    s;\n    e;\n    rs;\n    re;\n    initiator;\n    crypto;\n    constructor(init) {\n        const { crypto, protocolName, prologue, initiator, s, e, rs, re } = init;\n        this.crypto = crypto;\n        this.ss = new SymmetricState(crypto, protocolName);\n        this.ss.mixHash(prologue);\n        this.initiator = initiator;\n        this.s = s;\n        this.e = e;\n        this.rs = rs;\n        this.re = re;\n    }\n    writeE() {\n        if (this.e) {\n            throw new Error('ephemeral keypair is already set');\n        }\n        const e = this.crypto.generateKeypair();\n        this.ss.mixHash(e.publicKey);\n        this.e = e;\n        return e.publicKey;\n    }\n    writeS() {\n        if (!this.s) {\n            throw new Error('static keypair is not set');\n        }\n        return this.ss.encryptAndHash(this.s.publicKey);\n    }\n    writeEE() {\n        if (!this.e) {\n            throw new Error('ephemeral keypair is not set');\n        }\n        if (!this.re) {\n            throw new Error('remote ephemeral public key is not set');\n        }\n        this.ss.mixKey(this.crypto.dh(this.e, this.re));\n    }\n    writeES() {\n        if (this.initiator) {\n            if (!this.e) {\n                throw new Error('ephemeral keypair is not set');\n            }\n            if (!this.rs) {\n                throw new Error('remote static public key is not set');\n            }\n            this.ss.mixKey(this.crypto.dh(this.e, this.rs));\n        }\n        else {\n            if (!this.s) {\n                throw new Error('static keypair is not set');\n            }\n            if (!this.re) {\n                throw new Error('remote ephemeral public key is not set');\n            }\n            this.ss.mixKey(this.crypto.dh(this.s, this.re));\n        }\n    }\n    writeSE() {\n        if (this.initiator) {\n            if (!this.s) {\n                throw new Error('static keypair is not set');\n            }\n            if (!this.re) {\n                throw new Error('remote ephemeral public key is not set');\n            }\n            this.ss.mixKey(this.crypto.dh(this.s, this.re));\n        }\n        else {\n            if (!this.e) {\n                throw new Error('ephemeral keypair is not set');\n            }\n            if (!this.rs) {\n                throw new Error('remote static public key is not set');\n            }\n            this.ss.mixKey(this.crypto.dh(this.e, this.rs));\n        }\n    }\n    readE(message, offset = 0) {\n        if (this.re) {\n            throw new Error('remote ephemeral public key is already set');\n        }\n        if (message.byteLength < offset + 32) {\n            throw new Error('message is not long enough');\n        }\n        this.re = message.sublist(offset, offset + 32);\n        this.ss.mixHash(this.re);\n    }\n    readS(message, offset = 0) {\n        if (this.rs) {\n            throw new Error('remote static public key is already set');\n        }\n        const cipherLength = 32 + (this.ss.cs.hasKey() ? 16 : 0);\n        if (message.byteLength < offset + cipherLength) {\n            throw new Error('message is not long enough');\n        }\n        const temp = message.sublist(offset, offset + cipherLength);\n        this.rs = this.ss.decryptAndHash(temp);\n        return cipherLength;\n    }\n    readEE() {\n        this.writeEE();\n    }\n    readES() {\n        this.writeES();\n    }\n    readSE() {\n        this.writeSE();\n    }\n}\n/**\n * A IHandshakeState that's optimized for the XX pattern\n */\nexport class XXHandshakeState extends AbstractHandshakeState {\n    // e\n    writeMessageA(payload) {\n        return new Uint8ArrayList(this.writeE(), this.ss.encryptAndHash(payload));\n    }\n    // e, ee, s, es\n    writeMessageB(payload) {\n        const e = this.writeE();\n        this.writeEE();\n        const encS = this.writeS();\n        this.writeES();\n        return new Uint8ArrayList(e, encS, this.ss.encryptAndHash(payload));\n    }\n    // s, se\n    writeMessageC(payload) {\n        const encS = this.writeS();\n        this.writeSE();\n        return new Uint8ArrayList(encS, this.ss.encryptAndHash(payload));\n    }\n    // e\n    readMessageA(message) {\n        try {\n            this.readE(message);\n            return this.ss.decryptAndHash(message.sublist(32));\n        }\n        catch (e) {\n            throw new InvalidCryptoExchangeError(`handshake stage 0 validation fail: ${e.message}`);\n        }\n    }\n    // e, ee, s, es\n    readMessageB(message) {\n        try {\n            this.readE(message);\n            this.readEE();\n            const consumed = this.readS(message, 32);\n            this.readES();\n            return this.ss.decryptAndHash(message.sublist(32 + consumed));\n        }\n        catch (e) {\n            throw new InvalidCryptoExchangeError(`handshake stage 1 validation fail: ${e.message}`);\n        }\n    }\n    // s, se\n    readMessageC(message) {\n        try {\n            const consumed = this.readS(message);\n            this.readSE();\n            return this.ss.decryptAndHash(message.sublist(consumed));\n        }\n        catch (e) {\n            throw new InvalidCryptoExchangeError(`handshake stage 2 validation fail: ${e.message}`);\n        }\n    }\n}\nfunction hashProtocolName(crypto, protocolName) {\n    if (protocolName.length <= 32) {\n        const h = uint8ArrayAlloc(32);\n        h.set(protocolName);\n        return h;\n    }\n    else {\n        return crypto.hash(protocolName);\n    }\n}\n//# sourceMappingURL=protocol.js.map","/* eslint-disable import/export */\n/* eslint-disable complexity */\n/* eslint-disable @typescript-eslint/no-namespace */\n/* eslint-disable @typescript-eslint/no-unnecessary-boolean-literal-compare */\n/* eslint-disable @typescript-eslint/no-empty-interface */\nimport { decodeMessage, encodeMessage, message } from 'protons-runtime';\nimport { alloc as uint8ArrayAlloc } from 'uint8arrays/alloc';\nexport var NoiseExtensions;\n(function (NoiseExtensions) {\n    let _codec;\n    NoiseExtensions.codec = () => {\n        if (_codec == null) {\n            _codec = message((obj, w, opts = {}) => {\n                if (opts.lengthDelimited !== false) {\n                    w.fork();\n                }\n                if (obj.webtransportCerthashes != null) {\n                    for (const value of obj.webtransportCerthashes) {\n                        w.uint32(10);\n                        w.bytes(value);\n                    }\n                }\n                if (opts.lengthDelimited !== false) {\n                    w.ldelim();\n                }\n            }, (reader, length) => {\n                const obj = {\n                    webtransportCerthashes: []\n                };\n                const end = length == null ? reader.len : reader.pos + length;\n                while (reader.pos < end) {\n                    const tag = reader.uint32();\n                    switch (tag >>> 3) {\n                        case 1: {\n                            obj.webtransportCerthashes.push(reader.bytes());\n                            break;\n                        }\n                        default: {\n                            reader.skipType(tag & 7);\n                            break;\n                        }\n                    }\n                }\n                return obj;\n            });\n        }\n        return _codec;\n    };\n    NoiseExtensions.encode = (obj) => {\n        return encodeMessage(obj, NoiseExtensions.codec());\n    };\n    NoiseExtensions.decode = (buf) => {\n        return decodeMessage(buf, NoiseExtensions.codec());\n    };\n})(NoiseExtensions || (NoiseExtensions = {}));\nexport var NoiseHandshakePayload;\n(function (NoiseHandshakePayload) {\n    let _codec;\n    NoiseHandshakePayload.codec = () => {\n        if (_codec == null) {\n            _codec = message((obj, w, opts = {}) => {\n                if (opts.lengthDelimited !== false) {\n                    w.fork();\n                }\n                if ((obj.identityKey != null && obj.identityKey.byteLength > 0)) {\n                    w.uint32(10);\n                    w.bytes(obj.identityKey);\n                }\n                if ((obj.identitySig != null && obj.identitySig.byteLength > 0)) {\n                    w.uint32(18);\n                    w.bytes(obj.identitySig);\n                }\n                if (obj.extensions != null) {\n                    w.uint32(34);\n                    NoiseExtensions.codec().encode(obj.extensions, w);\n                }\n                if (opts.lengthDelimited !== false) {\n                    w.ldelim();\n                }\n            }, (reader, length) => {\n                const obj = {\n                    identityKey: uint8ArrayAlloc(0),\n                    identitySig: uint8ArrayAlloc(0)\n                };\n                const end = length == null ? reader.len : reader.pos + length;\n                while (reader.pos < end) {\n                    const tag = reader.uint32();\n                    switch (tag >>> 3) {\n                        case 1: {\n                            obj.identityKey = reader.bytes();\n                            break;\n                        }\n                        case 2: {\n                            obj.identitySig = reader.bytes();\n                            break;\n                        }\n                        case 4: {\n                            obj.extensions = NoiseExtensions.codec().decode(reader, reader.uint32());\n                            break;\n                        }\n                        default: {\n                            reader.skipType(tag & 7);\n                            break;\n                        }\n                    }\n                }\n                return obj;\n            });\n        }\n        return _codec;\n    };\n    NoiseHandshakePayload.encode = (obj) => {\n        return encodeMessage(obj, NoiseHandshakePayload.codec());\n    };\n    NoiseHandshakePayload.decode = (buf) => {\n        return decodeMessage(buf, NoiseHandshakePayload.codec());\n    };\n})(NoiseHandshakePayload || (NoiseHandshakePayload = {}));\n//# sourceMappingURL=payload.js.map","import { unmarshalPublicKey } from '@libp2p/crypto/keys';\nimport {} from 'uint8arraylist';\nimport { equals, toString } from 'uint8arrays';\nimport { concat as uint8ArrayConcat } from 'uint8arrays/concat';\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string';\nimport { UnexpectedPeerError } from './errors.js';\nimport { NoiseHandshakePayload } from './proto/payload.js';\nexport async function createHandshakePayload(privateKey, staticPublicKey, extensions) {\n    const identitySig = await privateKey.sign(getSignaturePayload(staticPublicKey));\n    return NoiseHandshakePayload.encode({\n        identityKey: privateKey.public.bytes,\n        identitySig,\n        extensions\n    });\n}\nexport async function decodeHandshakePayload(payloadBytes, remoteStaticKey, remoteIdentityKey) {\n    try {\n        const payload = NoiseHandshakePayload.decode(payloadBytes);\n        if (remoteIdentityKey) {\n            const remoteIdentityKeyBytes = remoteIdentityKey.subarray();\n            if (!equals(remoteIdentityKeyBytes, payload.identityKey)) {\n                throw new Error(`Payload identity key ${toString(payload.identityKey, 'hex')} does not match expected remote identity key ${toString(remoteIdentityKeyBytes, 'hex')}`);\n            }\n        }\n        if (!remoteStaticKey) {\n            throw new Error('Remote static does not exist');\n        }\n        const signaturePayload = getSignaturePayload(remoteStaticKey);\n        const publicKey = unmarshalPublicKey(payload.identityKey);\n        if (!(await publicKey.verify(signaturePayload, payload.identitySig))) {\n            throw new Error('Invalid payload signature');\n        }\n        return payload;\n    }\n    catch (e) {\n        throw new UnexpectedPeerError(e.message);\n    }\n}\nexport function getSignaturePayload(publicKey) {\n    const prefix = uint8ArrayFromString('noise-libp2p-static-key:');\n    if (publicKey instanceof Uint8Array) {\n        return uint8ArrayConcat([prefix, publicKey], prefix.length + publicKey.length);\n    }\n    publicKey.prepend(prefix);\n    return publicKey;\n}\n//# sourceMappingURL=utils.js.map","import { unmarshalPrivateKey } from '@libp2p/crypto/keys';\nimport { CodeError, serviceCapabilities, isPeerId } from '@libp2p/interface';\nimport { peerIdFromKeys } from '@libp2p/peer-id';\nimport { decode } from 'it-length-prefixed';\nimport { lpStream } from 'it-length-prefixed-stream';\nimport { duplexPair } from 'it-pair/duplex';\nimport { pipe } from 'it-pipe';\nimport { alloc as uint8ArrayAlloc } from 'uint8arrays/alloc';\nimport { NOISE_MSG_MAX_LENGTH_BYTES } from './constants.js';\nimport { defaultCrypto } from './crypto/index.js';\nimport { wrapCrypto } from './crypto.js';\nimport { uint16BEDecode, uint16BEEncode } from './encoder.js';\nimport { registerMetrics } from './metrics.js';\nimport { performHandshakeInitiator, performHandshakeResponder } from './performHandshake.js';\nimport { decryptStream, encryptStream } from './streaming.js';\nexport class Noise {\n    protocol = '/noise';\n    crypto;\n    prologue;\n    staticKey;\n    extensions;\n    metrics;\n    components;\n    constructor(components, init = {}) {\n        const { staticNoiseKey, extensions, crypto, prologueBytes } = init;\n        const { metrics } = components;\n        this.components = components;\n        const _crypto = crypto ?? defaultCrypto;\n        this.crypto = wrapCrypto(_crypto);\n        this.extensions = extensions;\n        this.metrics = metrics ? registerMetrics(metrics) : undefined;\n        if (staticNoiseKey) {\n            // accepts x25519 private key of length 32\n            this.staticKey = _crypto.generateX25519KeyPairFromSeed(staticNoiseKey);\n        }\n        else {\n            this.staticKey = _crypto.generateX25519KeyPair();\n        }\n        this.prologue = prologueBytes ?? uint8ArrayAlloc(0);\n    }\n    [Symbol.toStringTag] = '@chainsafe/libp2p-noise';\n    [serviceCapabilities] = [\n        '@libp2p/connection-encryption',\n        '@chainsafe/libp2p-noise'\n    ];\n    async secureOutbound(...args) {\n        const { localPeer, connection, remotePeer, signal } = this.parseArgs(args);\n        const wrappedConnection = lpStream(connection, {\n            lengthEncoder: uint16BEEncode,\n            lengthDecoder: uint16BEDecode,\n            maxDataLength: NOISE_MSG_MAX_LENGTH_BYTES\n        });\n        if (!localPeer.privateKey) {\n            throw new CodeError('local peerId does not contain private key', 'ERR_NO_PRIVATE_KEY');\n        }\n        const privateKey = await unmarshalPrivateKey(localPeer.privateKey);\n        const remoteIdentityKey = remotePeer?.publicKey;\n        const handshake = await this.performHandshakeInitiator(wrappedConnection, privateKey, remoteIdentityKey, {\n            signal\n        });\n        const conn = await this.createSecureConnection(wrappedConnection, handshake);\n        connection.source = conn.source;\n        connection.sink = conn.sink;\n        return {\n            conn: connection,\n            remoteExtensions: handshake.payload.extensions,\n            remotePeer: await peerIdFromKeys(handshake.payload.identityKey)\n        };\n    }\n    async secureInbound(...args) {\n        const { localPeer, connection, remotePeer, signal } = this.parseArgs(args);\n        const wrappedConnection = lpStream(connection, {\n            lengthEncoder: uint16BEEncode,\n            lengthDecoder: uint16BEDecode,\n            maxDataLength: NOISE_MSG_MAX_LENGTH_BYTES\n        });\n        if (!localPeer.privateKey) {\n            throw new CodeError('local peerId does not contain private key', 'ERR_NO_PRIVATE_KEY');\n        }\n        const privateKey = await unmarshalPrivateKey(localPeer.privateKey);\n        const remoteIdentityKey = remotePeer?.publicKey;\n        const handshake = await this.performHandshakeResponder(wrappedConnection, privateKey, remoteIdentityKey, {\n            signal\n        });\n        const conn = await this.createSecureConnection(wrappedConnection, handshake);\n        connection.source = conn.source;\n        connection.sink = conn.sink;\n        return {\n            conn: connection,\n            remoteExtensions: handshake.payload.extensions,\n            remotePeer: await peerIdFromKeys(handshake.payload.identityKey)\n        };\n    }\n    /**\n     * Perform XX handshake as initiator.\n     */\n    async performHandshakeInitiator(connection, \n    // TODO: pass private key in noise constructor via Components\n    privateKey, remoteIdentityKey, options) {\n        let result;\n        try {\n            result = await performHandshakeInitiator({\n                connection,\n                privateKey,\n                remoteIdentityKey,\n                log: this.components.logger.forComponent('libp2p:noise:xxhandshake'),\n                crypto: this.crypto,\n                prologue: this.prologue,\n                s: this.staticKey,\n                extensions: this.extensions\n            }, options);\n            this.metrics?.xxHandshakeSuccesses.increment();\n        }\n        catch (e) {\n            this.metrics?.xxHandshakeErrors.increment();\n            throw e;\n        }\n        return result;\n    }\n    /**\n     * Perform XX handshake as responder.\n     */\n    async performHandshakeResponder(connection, \n    // TODO: pass private key in noise constructor via Components\n    privateKey, remoteIdentityKey, options) {\n        let result;\n        try {\n            result = await performHandshakeResponder({\n                connection,\n                privateKey,\n                remoteIdentityKey,\n                log: this.components.logger.forComponent('libp2p:noise:xxhandshake'),\n                crypto: this.crypto,\n                prologue: this.prologue,\n                s: this.staticKey,\n                extensions: this.extensions\n            }, options);\n            this.metrics?.xxHandshakeSuccesses.increment();\n        }\n        catch (e) {\n            this.metrics?.xxHandshakeErrors.increment();\n            throw e;\n        }\n        return result;\n    }\n    async createSecureConnection(connection, handshake) {\n        // Create encryption box/unbox wrapper\n        const [secure, user] = duplexPair();\n        const network = connection.unwrap();\n        await pipe(secure, // write to wrapper\n        encryptStream(handshake, this.metrics), // encrypt data + prefix with message length\n        network, // send to the remote peer\n        (source) => decode(source, { lengthDecoder: uint16BEDecode }), // read message length prefix\n        decryptStream(handshake, this.metrics), // decrypt the incoming data\n        secure // pipe to the wrapper\n        );\n        return user;\n    }\n    /**\n     * Detect call signature in `libp2p@1.x.x` or `libp2p@2.x.x` style.\n     *\n     * TODO: remove this after `libp2p@2.x.x` is released and only support the\n     * newer style\n     */\n    parseArgs(args) {\n        // if the first argument is a peer id, we're using the libp2p@1.x.x style\n        if (isPeerId(args[0])) {\n            return {\n                localPeer: args[0],\n                connection: args[1],\n                remotePeer: args[2]\n            };\n        }\n        else {\n            // handle upcoming changes in libp2p@2.x.x where the first argument is the\n            // connection and the second is optionally the remote peer\n            // @see https://github.com/libp2p/js-libp2p/pull/2304\n            return {\n                localPeer: this.components.peerId,\n                connection: args[0],\n                remotePeer: args[1]?.remotePeer,\n                signal: args[1]?.signal\n            };\n        }\n    }\n}\n//# sourceMappingURL=noise.js.map","export function wrapCrypto(crypto) {\n    return {\n        generateKeypair: crypto.generateX25519KeyPair,\n        dh: (keypair, publicKey) => crypto.generateX25519SharedKey(keypair.privateKey, publicKey).subarray(0, 32),\n        encrypt: crypto.chaCha20Poly1305Encrypt,\n        decrypt: crypto.chaCha20Poly1305Decrypt,\n        hash: crypto.hashSHA256,\n        hkdf: crypto.getHKDF\n    };\n}\n//# sourceMappingURL=crypto.js.map","export function registerMetrics(metrics) {\n    return {\n        xxHandshakeSuccesses: metrics.registerCounter('libp2p_noise_xxhandshake_successes_total', {\n            help: 'Total count of noise xxHandshakes successes_'\n        }),\n        xxHandshakeErrors: metrics.registerCounter('libp2p_noise_xxhandshake_error_total', {\n            help: 'Total count of noise xxHandshakes errors'\n        }),\n        encryptedPackets: metrics.registerCounter('libp2p_noise_encrypted_packets_total', {\n            help: 'Total count of noise encrypted packets successfully'\n        }),\n        decryptedPackets: metrics.registerCounter('libp2p_noise_decrypted_packets_total', {\n            help: 'Total count of noise decrypted packets'\n        }),\n        decryptErrors: metrics.registerCounter('libp2p_noise_decrypt_errors_total', {\n            help: 'Total count of noise decrypt errors'\n        })\n    };\n}\n//# sourceMappingURL=metrics.js.map","import { logLocalStaticKeys, logLocalEphemeralKeys, logRemoteEphemeralKey, logRemoteStaticKey, logCipherState } from './logger.js';\nimport { ZEROLEN, XXHandshakeState } from './protocol.js';\nimport { createHandshakePayload, decodeHandshakePayload } from './utils.js';\nexport async function performHandshakeInitiator(init, options) {\n    const { log, connection, crypto, privateKey, prologue, s, remoteIdentityKey, extensions } = init;\n    const payload = await createHandshakePayload(privateKey, s.publicKey, extensions);\n    const xx = new XXHandshakeState({\n        crypto,\n        protocolName: 'Noise_XX_25519_ChaChaPoly_SHA256',\n        initiator: true,\n        prologue,\n        s\n    });\n    logLocalStaticKeys(xx.s, log);\n    log.trace('Stage 0 - Initiator starting to send first message.');\n    await connection.write(xx.writeMessageA(ZEROLEN), options);\n    log.trace('Stage 0 - Initiator finished sending first message.');\n    logLocalEphemeralKeys(xx.e, log);\n    log.trace('Stage 1 - Initiator waiting to receive first message from responder...');\n    const plaintext = xx.readMessageB(await connection.read(options));\n    log.trace('Stage 1 - Initiator received the message.');\n    logRemoteEphemeralKey(xx.re, log);\n    logRemoteStaticKey(xx.rs, log);\n    log.trace(\"Initiator going to check remote's signature...\");\n    const receivedPayload = await decodeHandshakePayload(plaintext, xx.rs, remoteIdentityKey);\n    log.trace('All good with the signature!');\n    log.trace('Stage 2 - Initiator sending third handshake message.');\n    await connection.write(xx.writeMessageC(payload), options);\n    log.trace('Stage 2 - Initiator sent message with signed payload.');\n    const [cs1, cs2] = xx.ss.split();\n    logCipherState(cs1, cs2, log);\n    return {\n        payload: receivedPayload,\n        encrypt: (plaintext) => cs1.encryptWithAd(ZEROLEN, plaintext),\n        decrypt: (ciphertext, dst) => cs2.decryptWithAd(ZEROLEN, ciphertext, dst)\n    };\n}\nexport async function performHandshakeResponder(init, options) {\n    const { log, connection, crypto, privateKey, prologue, s, remoteIdentityKey, extensions } = init;\n    const payload = await createHandshakePayload(privateKey, s.publicKey, extensions);\n    const xx = new XXHandshakeState({\n        crypto,\n        protocolName: 'Noise_XX_25519_ChaChaPoly_SHA256',\n        initiator: false,\n        prologue,\n        s\n    });\n    logLocalStaticKeys(xx.s, log);\n    log.trace('Stage 0 - Responder waiting to receive first message.');\n    xx.readMessageA(await connection.read(options));\n    log.trace('Stage 0 - Responder received first message.');\n    logRemoteEphemeralKey(xx.re, log);\n    log.trace('Stage 1 - Responder sending out first message with signed payload and static key.');\n    await connection.write(xx.writeMessageB(payload), options);\n    log.trace('Stage 1 - Responder sent the second handshake message with signed payload.');\n    logLocalEphemeralKeys(xx.e, log);\n    log.trace('Stage 2 - Responder waiting for third handshake message...');\n    const plaintext = xx.readMessageC(await connection.read(options));\n    log.trace('Stage 2 - Responder received the message, finished handshake.');\n    const receivedPayload = await decodeHandshakePayload(plaintext, xx.rs, remoteIdentityKey);\n    const [cs1, cs2] = xx.ss.split();\n    logCipherState(cs1, cs2, log);\n    return {\n        payload: receivedPayload,\n        encrypt: (plaintext) => cs2.encryptWithAd(ZEROLEN, plaintext),\n        decrypt: (ciphertext, dst) => cs1.decryptWithAd(ZEROLEN, ciphertext, dst)\n    };\n}\n//# sourceMappingURL=performHandshake.js.map","import { pair } from './index.js';\n/**\n * Two duplex streams that are attached to each other\n */\nexport function duplexPair() {\n    const a = pair();\n    const b = pair();\n    return [\n        {\n            source: a.source,\n            sink: b.sink\n        },\n        {\n            source: b.source,\n            sink: a.sink\n        }\n    ];\n}\n//# sourceMappingURL=duplex.js.map","import { Uint8ArrayList } from 'uint8arraylist';\nimport { NOISE_MSG_MAX_LENGTH_BYTES, NOISE_MSG_MAX_LENGTH_BYTES_WITHOUT_TAG } from './constants.js';\nimport { uint16BEEncode } from './encoder.js';\nconst CHACHA_TAG_LENGTH = 16;\n// Returns generator that encrypts payload from the user\nexport function encryptStream(handshake, metrics) {\n    return async function* (source) {\n        for await (const chunk of source) {\n            for (let i = 0; i < chunk.length; i += NOISE_MSG_MAX_LENGTH_BYTES_WITHOUT_TAG) {\n                let end = i + NOISE_MSG_MAX_LENGTH_BYTES_WITHOUT_TAG;\n                if (end > chunk.length) {\n                    end = chunk.length;\n                }\n                let data;\n                if (chunk instanceof Uint8Array) {\n                    data = handshake.encrypt(chunk.subarray(i, end));\n                }\n                else {\n                    data = handshake.encrypt(chunk.sublist(i, end));\n                }\n                metrics?.encryptedPackets.increment();\n                yield new Uint8ArrayList(uint16BEEncode(data.byteLength), data);\n            }\n        }\n    };\n}\n// Decrypt received payload to the user\nexport function decryptStream(handshake, metrics) {\n    return async function* (source) {\n        for await (const chunk of source) {\n            for (let i = 0; i < chunk.length; i += NOISE_MSG_MAX_LENGTH_BYTES) {\n                let end = i + NOISE_MSG_MAX_LENGTH_BYTES;\n                if (end > chunk.length) {\n                    end = chunk.length;\n                }\n                if (end - CHACHA_TAG_LENGTH < i) {\n                    throw new Error('Invalid chunk');\n                }\n                const encrypted = chunk.sublist(i, end);\n                // memory allocation is not cheap so reuse the encrypted Uint8Array\n                // see https://github.com/ChainSafe/js-libp2p-noise/pull/242#issue-1422126164\n                // this is ok because chacha20 reads bytes one by one and don't reread after that\n                // it's also tested in https://github.com/ChainSafe/as-chacha20poly1305/pull/1/files#diff-25252846b58979dcaf4e41d47b3eadd7e4f335e7fb98da6c049b1f9cd011f381R48\n                const dst = chunk.subarray(i, end - CHACHA_TAG_LENGTH);\n                try {\n                    const plaintext = handshake.decrypt(encrypted, dst);\n                    metrics?.decryptedPackets.increment();\n                    yield plaintext;\n                }\n                catch (e) {\n                    metrics?.decryptErrors.increment();\n                    throw e;\n                }\n            }\n        }\n    };\n}\n//# sourceMappingURL=streaming.js.map","import { Noise } from './noise.js';\nexport { pureJsCrypto } from './crypto/js.js';\nexport function noise(init = {}) {\n    return (components) => new Noise(components, init);\n}\n//# sourceMappingURL=index.js.map","/**\n * Any object that implements this Symbol as a property should return a\n * PeerDiscovery instance as the property value, similar to how\n * `Symbol.Iterable` can be used to return an `Iterable` from an `Iterator`.\n *\n * @example\n *\n * ```TypeScript\n * import { peerDiscovery, PeerDiscovery } from '@libp2p/peer-discovery'\n *\n * class MyPeerDiscoverer implements PeerDiscovery {\n *   get [peerDiscovery] () {\n *     return this\n *   }\n *\n *   // ...other methods\n * }\n * ```\n */\nexport const peerDiscoverySymbol = Symbol.for('@libp2p/peer-discovery');\n//# sourceMappingURL=index.js.map","import { multiaddr } from '@multiformats/multiaddr';\n/*\n * Valid combinations\n */\nexport const DNS4 = base('dns4');\nexport const DNS6 = base('dns6');\nexport const DNSADDR = base('dnsaddr');\nexport const DNS = or(base('dns'), DNSADDR, DNS4, DNS6);\nexport const IP = or(base('ip4'), base('ip6'));\nexport const TCP = or(and(IP, base('tcp')), and(DNS, base('tcp')));\nexport const UDP = and(IP, base('udp'));\nexport const UTP = and(UDP, base('utp'));\nexport const QUIC = and(UDP, base('quic'));\nexport const QUICV1 = and(UDP, base('quic-v1'));\nconst _WebSockets = or(and(TCP, base('ws')), and(DNS, base('ws')));\nexport const WebSockets = or(and(_WebSockets, base('p2p')), _WebSockets);\nconst _WebSocketsSecure = or(and(TCP, base('wss')), and(DNS, base('wss')), and(TCP, base('tls'), base('ws')), and(DNS, base('tls'), base('ws')));\nexport const WebSocketsSecure = or(and(_WebSocketsSecure, base('p2p')), _WebSocketsSecure);\nexport const HTTP = or(and(TCP, base('http')), and(IP, base('http')), and(DNS, base('http')));\nexport const HTTPS = or(and(TCP, base('https')), and(IP, base('https')), and(DNS, base('https')));\nconst _WebRTCDirect = and(UDP, base('webrtc-direct'), base('certhash'));\nexport const WebRTCDirect = or(and(_WebRTCDirect, base('p2p')), _WebRTCDirect);\nconst _WebTransport = and(QUICV1, base('webtransport'), base('certhash'), base('certhash'));\nexport const WebTransport = or(and(_WebTransport, base('p2p')), _WebTransport);\n/**\n * @deprecated\n */\nexport const P2PWebRTCStar = or(and(WebSockets, base('p2p-webrtc-star'), base('p2p')), and(WebSocketsSecure, base('p2p-webrtc-star'), base('p2p')), and(WebSockets, base('p2p-webrtc-star')), and(WebSocketsSecure, base('p2p-webrtc-star')));\nexport const WebSocketStar = or(and(WebSockets, base('p2p-websocket-star'), base('p2p')), and(WebSocketsSecure, base('p2p-websocket-star'), base('p2p')), and(WebSockets, base('p2p-websocket-star')), and(WebSocketsSecure, base('p2p-websocket-star')));\n/**\n * @deprecated\n */\nexport const P2PWebRTCDirect = or(and(HTTP, base('p2p-webrtc-direct'), base('p2p')), and(HTTPS, base('p2p-webrtc-direct'), base('p2p')), and(HTTP, base('p2p-webrtc-direct')), and(HTTPS, base('p2p-webrtc-direct')));\nexport const Reliable = or(_WebSockets, _WebSocketsSecure, HTTP, HTTPS, P2PWebRTCStar, P2PWebRTCDirect, TCP, UTP, QUIC, DNS, WebRTCDirect, WebTransport);\n// Unlike ws-star, stardust can run over any transport thus removing the requirement for websockets (but don't even think about running a stardust server over webrtc-star ;) )\nexport const Stardust = or(and(Reliable, base('p2p-stardust'), base('p2p')), and(Reliable, base('p2p-stardust')));\nconst _P2P = or(and(Reliable, base('p2p')), P2PWebRTCStar, P2PWebRTCDirect, WebRTCDirect, WebTransport, base('p2p'));\nconst _Circuit = or(and(_P2P, base('p2p-circuit'), _P2P), and(_P2P, base('p2p-circuit')), and(base('p2p-circuit'), _P2P), and(Reliable, base('p2p-circuit')), and(base('p2p-circuit'), Reliable), base('p2p-circuit'));\nconst CircuitRecursive = () => or(and(_Circuit, CircuitRecursive), _Circuit);\nexport const Circuit = CircuitRecursive();\nexport const P2P = or(and(Circuit, _P2P, Circuit), and(_P2P, Circuit), and(Circuit, _P2P), Circuit, _P2P);\nexport const IPFS = P2P;\nexport const WebRTC = or(and(Circuit, base('webrtc'), base('p2p')), and(Circuit, base('webrtc')), and(Reliable, base('webrtc'), base('p2p')), and(Reliable, base('webrtc')), base('webrtc'));\n/*\n * Validation funcs\n */\nfunction makeMatchesFunction(partialMatch) {\n    function matches(a) {\n        let ma;\n        try {\n            ma = multiaddr(a);\n        }\n        catch (err) { // catch error\n            return false; // also if it's invalid it's probably not matching as well so return false\n        }\n        const out = partialMatch(ma.protoNames());\n        if (out === null) {\n            return false;\n        }\n        if (out === true || out === false) {\n            return out;\n        }\n        return out.length === 0;\n    }\n    return matches;\n}\nfunction and(...args) {\n    function partialMatch(a) {\n        if (a.length < args.length) {\n            return null;\n        }\n        let out = a;\n        args.some((arg) => {\n            out = typeof arg === 'function'\n                ? arg().partialMatch(a)\n                : arg.partialMatch(a);\n            if (Array.isArray(out)) {\n                a = out;\n            }\n            if (out === null) {\n                return true;\n            }\n            return false;\n        });\n        return out;\n    }\n    return {\n        toString: function () { return '{ ' + args.join(' ') + ' }'; },\n        input: args,\n        matches: makeMatchesFunction(partialMatch),\n        partialMatch\n    };\n}\nfunction or(...args) {\n    function partialMatch(a) {\n        let out = null;\n        args.some((arg) => {\n            const res = typeof arg === 'function'\n                ? arg().partialMatch(a)\n                : arg.partialMatch(a);\n            if (res != null) {\n                out = res;\n                return true;\n            }\n            return false;\n        });\n        return out;\n    }\n    const result = {\n        toString: function () { return '{ ' + args.join(' ') + ' }'; },\n        input: args,\n        matches: makeMatchesFunction(partialMatch),\n        partialMatch\n    };\n    return result;\n}\nfunction base(n) {\n    const name = n;\n    function matches(a) {\n        let ma;\n        try {\n            ma = multiaddr(a);\n        }\n        catch (err) { // catch error\n            return false; // also if it's invalid it's probably not matching as well so return false\n        }\n        const pnames = ma.protoNames();\n        if (pnames.length === 1 && pnames[0] === name) {\n            return true;\n        }\n        return false;\n    }\n    function partialMatch(protos) {\n        if (protos.length === 0) {\n            return null;\n        }\n        if (protos[0] === name) {\n            return protos.slice(1);\n        }\n        return null;\n    }\n    return {\n        toString: function () { return name; },\n        matches,\n        partialMatch\n    };\n}\n//# sourceMappingURL=index.js.map","/**\n * @packageDocumentation\n *\n * The configured bootstrap peers will be discovered after the configured timeout. This will ensure there are some peers in the peer store for the node to use to discover other peers.\n *\n * They will be tagged with a tag with the name `'bootstrap'` tag, the value `50` and it will expire after two minutes which means the nodes connections may be closed if the maximum number of connections is reached.\n *\n * Clients that need constant connections to bootstrap nodes (e.g. browsers) can set the TTL to `Infinity`.\n *\n * @example Configuring a list of bootstrap nodes\n *\n * ```TypeScript\n * import { createLibp2p } from 'libp2p'\n * import { bootstrap } from '@libp2p/bootstrap'\n *\n * const libp2p = await createLibp2p({\n *   peerDiscovery: [\n *     bootstrap({\n *       list: [\n *         // a list of bootstrap peer multiaddrs to connect to on node startup\n *         '/ip4/104.131.131.82/tcp/4001/ipfs/QmaCpDMGvV2BGHeYERUEnRQAwe3N8SzbUtfsmvsqQLuvuJ',\n *         '/dnsaddr/bootstrap.libp2p.io/ipfs/QmNnooDu7bfjPFoTZYxMNLWUQJyrVwtbZg5gBMjTezGAJN',\n *         '/dnsaddr/bootstrap.libp2p.io/ipfs/QmQCU2EcMqAqQPR2i9bChDtGNJchTbq5TbXJJ16u19uLTa'\n *       ]\n *     })\n *   ]\n * })\n *\n * libp2p.addEventListener('peer:discovery', (evt) => {\n *   console.log('found peer: ', evt.detail.toString())\n * })\n * ```\n */\nimport { TypedEventEmitter, peerDiscoverySymbol, serviceCapabilities } from '@libp2p/interface';\nimport { peerIdFromString } from '@libp2p/peer-id';\nimport { P2P } from '@multiformats/mafmt';\nimport { multiaddr } from '@multiformats/multiaddr';\nconst DEFAULT_BOOTSTRAP_TAG_NAME = 'bootstrap';\nconst DEFAULT_BOOTSTRAP_TAG_VALUE = 50;\nconst DEFAULT_BOOTSTRAP_TAG_TTL = 120000;\nconst DEFAULT_BOOTSTRAP_DISCOVERY_TIMEOUT = 1000;\n/**\n * Emits 'peer' events on a regular interval for each peer in the provided list.\n */\nclass Bootstrap extends TypedEventEmitter {\n    static tag = 'bootstrap';\n    log;\n    timer;\n    list;\n    timeout;\n    components;\n    _init;\n    constructor(components, options = { list: [] }) {\n        if (options.list == null || options.list.length === 0) {\n            throw new Error('Bootstrap requires a list of peer addresses');\n        }\n        super();\n        this.components = components;\n        this.log = components.logger.forComponent('libp2p:bootstrap');\n        this.timeout = options.timeout ?? DEFAULT_BOOTSTRAP_DISCOVERY_TIMEOUT;\n        this.list = [];\n        for (const candidate of options.list) {\n            if (!P2P.matches(candidate)) {\n                this.log.error('Invalid multiaddr');\n                continue;\n            }\n            const ma = multiaddr(candidate);\n            const peerIdStr = ma.getPeerId();\n            if (peerIdStr == null) {\n                this.log.error('Invalid bootstrap multiaddr without peer id');\n                continue;\n            }\n            const peerData = {\n                id: peerIdFromString(peerIdStr),\n                multiaddrs: [ma]\n            };\n            this.list.push(peerData);\n        }\n        this._init = options;\n    }\n    [peerDiscoverySymbol] = this;\n    [Symbol.toStringTag] = '@libp2p/bootstrap';\n    [serviceCapabilities] = [\n        '@libp2p/peer-discovery'\n    ];\n    isStarted() {\n        return Boolean(this.timer);\n    }\n    /**\n     * Start emitting events\n     */\n    start() {\n        if (this.isStarted()) {\n            return;\n        }\n        this.log('Starting bootstrap node discovery, discovering peers after %s ms', this.timeout);\n        this.timer = setTimeout(() => {\n            void this._discoverBootstrapPeers()\n                .catch(err => {\n                this.log.error(err);\n            });\n        }, this.timeout);\n    }\n    /**\n     * Emit each address in the list as a PeerInfo\n     */\n    async _discoverBootstrapPeers() {\n        if (this.timer == null) {\n            return;\n        }\n        for (const peerData of this.list) {\n            await this.components.peerStore.merge(peerData.id, {\n                tags: {\n                    [this._init.tagName ?? DEFAULT_BOOTSTRAP_TAG_NAME]: {\n                        value: this._init.tagValue ?? DEFAULT_BOOTSTRAP_TAG_VALUE,\n                        ttl: this._init.tagTTL ?? DEFAULT_BOOTSTRAP_TAG_TTL\n                    }\n                }\n            });\n            // check we are still running\n            if (this.timer == null) {\n                return;\n            }\n            this.safeDispatchEvent('peer', { detail: peerData });\n        }\n    }\n    /**\n     * Stop emitting events\n     */\n    stop() {\n        if (this.timer != null) {\n            clearTimeout(this.timer);\n        }\n        this.timer = undefined;\n    }\n}\nexport function bootstrap(init) {\n    return (components) => new Bootstrap(components, init);\n}\n//# sourceMappingURL=index.js.map","// The domain string used for peer records contained in a Envelope.\nexport const ENVELOPE_DOMAIN_PEER_RECORD = 'libp2p-peer-record';\n// The type hint used to identify peer records in a Envelope.\n// Defined in https://github.com/multiformats/multicodec/blob/master/table.csv\n// with name \"libp2p-peer-record\"\nexport const ENVELOPE_PAYLOAD_TYPE_PEER_RECORD = Uint8Array.from([3, 1]);\n//# sourceMappingURL=consts.js.map","/* eslint-disable import/export */\n/* eslint-disable complexity */\n/* eslint-disable @typescript-eslint/no-namespace */\n/* eslint-disable @typescript-eslint/no-unnecessary-boolean-literal-compare */\n/* eslint-disable @typescript-eslint/no-empty-interface */\nimport { encodeMessage, decodeMessage, message } from 'protons-runtime';\nexport var PeerRecord;\n(function (PeerRecord) {\n    let AddressInfo;\n    (function (AddressInfo) {\n        let _codec;\n        AddressInfo.codec = () => {\n            if (_codec == null) {\n                _codec = message((obj, w, opts = {}) => {\n                    if (opts.lengthDelimited !== false) {\n                        w.fork();\n                    }\n                    if ((obj.multiaddr != null && obj.multiaddr.byteLength > 0)) {\n                        w.uint32(10);\n                        w.bytes(obj.multiaddr);\n                    }\n                    if (opts.lengthDelimited !== false) {\n                        w.ldelim();\n                    }\n                }, (reader, length) => {\n                    const obj = {\n                        multiaddr: new Uint8Array(0)\n                    };\n                    const end = length == null ? reader.len : reader.pos + length;\n                    while (reader.pos < end) {\n                        const tag = reader.uint32();\n                        switch (tag >>> 3) {\n                            case 1:\n                                obj.multiaddr = reader.bytes();\n                                break;\n                            default:\n                                reader.skipType(tag & 7);\n                                break;\n                        }\n                    }\n                    return obj;\n                });\n            }\n            return _codec;\n        };\n        AddressInfo.encode = (obj) => {\n            return encodeMessage(obj, AddressInfo.codec());\n        };\n        AddressInfo.decode = (buf) => {\n            return decodeMessage(buf, AddressInfo.codec());\n        };\n    })(AddressInfo = PeerRecord.AddressInfo || (PeerRecord.AddressInfo = {}));\n    let _codec;\n    PeerRecord.codec = () => {\n        if (_codec == null) {\n            _codec = message((obj, w, opts = {}) => {\n                if (opts.lengthDelimited !== false) {\n                    w.fork();\n                }\n                if ((obj.peerId != null && obj.peerId.byteLength > 0)) {\n                    w.uint32(10);\n                    w.bytes(obj.peerId);\n                }\n                if ((obj.seq != null && obj.seq !== 0n)) {\n                    w.uint32(16);\n                    w.uint64(obj.seq);\n                }\n                if (obj.addresses != null) {\n                    for (const value of obj.addresses) {\n                        w.uint32(26);\n                        PeerRecord.AddressInfo.codec().encode(value, w);\n                    }\n                }\n                if (opts.lengthDelimited !== false) {\n                    w.ldelim();\n                }\n            }, (reader, length) => {\n                const obj = {\n                    peerId: new Uint8Array(0),\n                    seq: 0n,\n                    addresses: []\n                };\n                const end = length == null ? reader.len : reader.pos + length;\n                while (reader.pos < end) {\n                    const tag = reader.uint32();\n                    switch (tag >>> 3) {\n                        case 1:\n                            obj.peerId = reader.bytes();\n                            break;\n                        case 2:\n                            obj.seq = reader.uint64();\n                            break;\n                        case 3:\n                            obj.addresses.push(PeerRecord.AddressInfo.codec().decode(reader, reader.uint32()));\n                            break;\n                        default:\n                            reader.skipType(tag & 7);\n                            break;\n                    }\n                }\n                return obj;\n            });\n        }\n        return _codec;\n    };\n    PeerRecord.encode = (obj) => {\n        return encodeMessage(obj, PeerRecord.codec());\n    };\n    PeerRecord.decode = (buf) => {\n        return decodeMessage(buf, PeerRecord.codec());\n    };\n})(PeerRecord || (PeerRecord = {}));\n//# sourceMappingURL=peer-record.js.map","import { peerIdFromBytes } from '@libp2p/peer-id';\nimport { arrayEquals } from '@libp2p/utils/array-equals';\nimport { multiaddr } from '@multiformats/multiaddr';\nimport { ENVELOPE_DOMAIN_PEER_RECORD, ENVELOPE_PAYLOAD_TYPE_PEER_RECORD } from './consts.js';\nimport { PeerRecord as Protobuf } from './peer-record.js';\n/**\n * The PeerRecord is used for distributing peer routing records across the network.\n * It contains the peer's reachable listen addresses.\n */\nexport class PeerRecord {\n    /**\n     * Unmarshal Peer Record Protobuf\n     */\n    static createFromProtobuf = (buf) => {\n        const peerRecord = Protobuf.decode(buf);\n        const peerId = peerIdFromBytes(peerRecord.peerId);\n        const multiaddrs = (peerRecord.addresses ?? []).map((a) => multiaddr(a.multiaddr));\n        const seqNumber = peerRecord.seq;\n        return new PeerRecord({ peerId, multiaddrs, seqNumber });\n    };\n    static DOMAIN = ENVELOPE_DOMAIN_PEER_RECORD;\n    static CODEC = ENVELOPE_PAYLOAD_TYPE_PEER_RECORD;\n    peerId;\n    multiaddrs;\n    seqNumber;\n    domain = PeerRecord.DOMAIN;\n    codec = PeerRecord.CODEC;\n    marshaled;\n    constructor(init) {\n        const { peerId, multiaddrs, seqNumber } = init;\n        this.peerId = peerId;\n        this.multiaddrs = multiaddrs ?? [];\n        this.seqNumber = seqNumber ?? BigInt(Date.now());\n    }\n    /**\n     * Marshal a record to be used in an envelope\n     */\n    marshal() {\n        if (this.marshaled == null) {\n            this.marshaled = Protobuf.encode({\n                peerId: this.peerId.toBytes(),\n                seq: BigInt(this.seqNumber),\n                addresses: this.multiaddrs.map((m) => ({\n                    multiaddr: m.bytes\n                }))\n            });\n        }\n        return this.marshaled;\n    }\n    /**\n     * Returns true if `this` record equals the `other`\n     */\n    equals(other) {\n        if (!(other instanceof PeerRecord)) {\n            return false;\n        }\n        // Validate PeerId\n        if (!this.peerId.equals(other.peerId)) {\n            return false;\n        }\n        // Validate seqNumber\n        if (this.seqNumber !== other.seqNumber) {\n            return false;\n        }\n        // Validate multiaddrs\n        if (!arrayEquals(this.multiaddrs, other.multiaddrs)) {\n            return false;\n        }\n        return true;\n    }\n}\n//# sourceMappingURL=index.js.map","/**\n * @packageDocumentation\n *\n * Provides strategies ensure arrays are equivalent.\n *\n * @example\n *\n * ```typescript\n * import { arrayEquals } from '@libp2p/utils/array-equals'\n * import { multiaddr } from '@multformats/multiaddr'\n *\n * const ma1 = multiaddr('/ip4/127.0.0.1/tcp/9000'),\n * const ma2 = multiaddr('/ip4/82.41.53.1/tcp/9000')\n *\n * console.info(arrayEquals([ma1], [ma1])) // true\n * console.info(arrayEquals([ma1], [ma2])) // false\n * ```\n */\n/**\n * Verify if two arrays of non primitive types with the \"equals\" function are equal.\n * Compatible with multiaddr, peer-id and others.\n */\nexport function arrayEquals(a, b) {\n    const sort = (a, b) => a.toString().localeCompare(b.toString());\n    if (a.length !== b.length) {\n        return false;\n    }\n    b.sort(sort);\n    return a.sort(sort).every((item, index) => b[index].equals(item));\n}\n//# sourceMappingURL=array-equals.js.map","/* eslint-disable import/export */\n/* eslint-disable complexity */\n/* eslint-disable @typescript-eslint/no-namespace */\n/* eslint-disable @typescript-eslint/no-unnecessary-boolean-literal-compare */\n/* eslint-disable @typescript-eslint/no-empty-interface */\nimport { encodeMessage, decodeMessage, message } from 'protons-runtime';\nexport var Envelope;\n(function (Envelope) {\n    let _codec;\n    Envelope.codec = () => {\n        if (_codec == null) {\n            _codec = message((obj, w, opts = {}) => {\n                if (opts.lengthDelimited !== false) {\n                    w.fork();\n                }\n                if ((obj.publicKey != null && obj.publicKey.byteLength > 0)) {\n                    w.uint32(10);\n                    w.bytes(obj.publicKey);\n                }\n                if ((obj.payloadType != null && obj.payloadType.byteLength > 0)) {\n                    w.uint32(18);\n                    w.bytes(obj.payloadType);\n                }\n                if ((obj.payload != null && obj.payload.byteLength > 0)) {\n                    w.uint32(26);\n                    w.bytes(obj.payload);\n                }\n                if ((obj.signature != null && obj.signature.byteLength > 0)) {\n                    w.uint32(42);\n                    w.bytes(obj.signature);\n                }\n                if (opts.lengthDelimited !== false) {\n                    w.ldelim();\n                }\n            }, (reader, length) => {\n                const obj = {\n                    publicKey: new Uint8Array(0),\n                    payloadType: new Uint8Array(0),\n                    payload: new Uint8Array(0),\n                    signature: new Uint8Array(0)\n                };\n                const end = length == null ? reader.len : reader.pos + length;\n                while (reader.pos < end) {\n                    const tag = reader.uint32();\n                    switch (tag >>> 3) {\n                        case 1:\n                            obj.publicKey = reader.bytes();\n                            break;\n                        case 2:\n                            obj.payloadType = reader.bytes();\n                            break;\n                        case 3:\n                            obj.payload = reader.bytes();\n                            break;\n                        case 5:\n                            obj.signature = reader.bytes();\n                            break;\n                        default:\n                            reader.skipType(tag & 7);\n                            break;\n                    }\n                }\n                return obj;\n            });\n        }\n        return _codec;\n    };\n    Envelope.encode = (obj) => {\n        return encodeMessage(obj, Envelope.codec());\n    };\n    Envelope.decode = (buf) => {\n        return decodeMessage(buf, Envelope.codec());\n    };\n})(Envelope || (Envelope = {}));\n//# sourceMappingURL=envelope.js.map","import { unmarshalPrivateKey, unmarshalPublicKey } from '@libp2p/crypto/keys';\nimport { CodeError } from '@libp2p/interface';\nimport { peerIdFromKeys } from '@libp2p/peer-id';\nimport * as varint from 'uint8-varint';\nimport { Uint8ArrayList } from 'uint8arraylist';\nimport { equals as uint8ArrayEquals } from 'uint8arrays/equals';\nimport { fromString as uint8arraysFromString } from 'uint8arrays/from-string';\nimport { codes } from '../errors.js';\nimport { Envelope as Protobuf } from './envelope.js';\nexport class RecordEnvelope {\n    /**\n     * Unmarshal a serialized Envelope protobuf message\n     */\n    static createFromProtobuf = async (data) => {\n        const envelopeData = Protobuf.decode(data);\n        const peerId = await peerIdFromKeys(envelopeData.publicKey);\n        return new RecordEnvelope({\n            peerId,\n            payloadType: envelopeData.payloadType,\n            payload: envelopeData.payload,\n            signature: envelopeData.signature\n        });\n    };\n    /**\n     * Seal marshals the given Record, places the marshaled bytes inside an Envelope\n     * and signs it with the given peerId's private key\n     */\n    static seal = async (record, peerId) => {\n        if (peerId.privateKey == null) {\n            throw new Error('Missing private key');\n        }\n        const domain = record.domain;\n        const payloadType = record.codec;\n        const payload = record.marshal();\n        const signData = formatSignaturePayload(domain, payloadType, payload);\n        const key = await unmarshalPrivateKey(peerId.privateKey);\n        const signature = await key.sign(signData.subarray());\n        return new RecordEnvelope({\n            peerId,\n            payloadType,\n            payload,\n            signature\n        });\n    };\n    /**\n     * Open and certify a given marshalled envelope.\n     * Data is unmarshalled and the signature validated for the given domain.\n     */\n    static openAndCertify = async (data, domain) => {\n        const envelope = await RecordEnvelope.createFromProtobuf(data);\n        const valid = await envelope.validate(domain);\n        if (!valid) {\n            throw new CodeError('envelope signature is not valid for the given domain', codes.ERR_SIGNATURE_NOT_VALID);\n        }\n        return envelope;\n    };\n    peerId;\n    payloadType;\n    payload;\n    signature;\n    marshaled;\n    /**\n     * The Envelope is responsible for keeping an arbitrary signed record\n     * by a libp2p peer.\n     */\n    constructor(init) {\n        const { peerId, payloadType, payload, signature } = init;\n        this.peerId = peerId;\n        this.payloadType = payloadType;\n        this.payload = payload;\n        this.signature = signature;\n    }\n    /**\n     * Marshal the envelope content\n     */\n    marshal() {\n        if (this.peerId.publicKey == null) {\n            throw new Error('Missing public key');\n        }\n        if (this.marshaled == null) {\n            this.marshaled = Protobuf.encode({\n                publicKey: this.peerId.publicKey,\n                payloadType: this.payloadType,\n                payload: this.payload.subarray(),\n                signature: this.signature\n            });\n        }\n        return this.marshaled;\n    }\n    /**\n     * Verifies if the other Envelope is identical to this one\n     */\n    equals(other) {\n        return uint8ArrayEquals(this.marshal(), other.marshal());\n    }\n    /**\n     * Validate envelope data signature for the given domain\n     */\n    async validate(domain) {\n        const signData = formatSignaturePayload(domain, this.payloadType, this.payload);\n        if (this.peerId.publicKey == null) {\n            throw new Error('Missing public key');\n        }\n        const key = unmarshalPublicKey(this.peerId.publicKey);\n        return key.verify(signData.subarray(), this.signature);\n    }\n}\n/**\n * Helper function that prepares a Uint8Array to sign or verify a signature\n */\nconst formatSignaturePayload = (domain, payloadType, payload) => {\n    // When signing, a peer will prepare a Uint8Array by concatenating the following:\n    // - The length of the domain separation string string in bytes\n    // - The domain separation string, encoded as UTF-8\n    // - The length of the payload_type field in bytes\n    // - The value of the payload_type field\n    // - The length of the payload field in bytes\n    // - The value of the payload field\n    const domainUint8Array = uint8arraysFromString(domain);\n    const domainLength = varint.encode(domainUint8Array.byteLength);\n    const payloadTypeLength = varint.encode(payloadType.length);\n    const payloadLength = varint.encode(payload.length);\n    return new Uint8ArrayList(domainLength, domainUint8Array, payloadTypeLength, payloadType, payloadLength, payload);\n};\n//# sourceMappingURL=index.js.map","export const codes = {\n    ERR_SIGNATURE_NOT_VALID: 'ERR_SIGNATURE_NOT_VALID'\n};\n//# sourceMappingURL=errors.js.map","/**\n * @packageDocumentation\n *\n * This module exports various matchers that can be used to infer the type of a\n * passed multiaddr.\n *\n * @example\n *\n * ```ts\n * import { multiaddr } from '@multiformats/multiaddr'\n * import { DNS } from '@multiformats/multiaddr-matcher'\n *\n * const ma = multiaddr('/dnsaddr/example.org')\n *\n * DNS.matches(ma) // true - this is a multiaddr with a DNS address at the start\n * ```\n *\n * @example\n *\n * The default matching behaviour ignores any subsequent tuples in the multiaddr.\n * If you want stricter matching you can use `.exactMatch`:\n *\n * ```ts\n * import { multiaddr } from '@multiformats/multiaddr'\n * import { DNS, Circuit } from '@multiformats/multiaddr-matcher'\n *\n * const ma = multiaddr('/dnsaddr/example.org/p2p/QmFoo/p2p-circuit/p2p/QmBar')\n *\n * DNS.exactMatch(ma) // false - this address has extra tuples after the DNS component\n * Circuit.matches(ma) // true\n * Circuit.exactMatch(ma) // true - the extra tuples are circuit relay related\n * ```\n */\nimport { isIPv4, isIPv6 } from '@chainsafe/is-ip';\nimport {} from '@multiformats/multiaddr';\nimport { base58btc } from 'multiformats/bases/base58';\nimport { base64url } from 'multiformats/bases/base64';\n/**\n * Split a multiaddr into path components\n */\nconst toParts = (ma) => {\n    return ma.toString().split('/').slice(1);\n};\nconst func = (fn) => {\n    return {\n        match: (vals) => {\n            if (vals.length < 1) {\n                return false;\n            }\n            if (fn(vals[0])) {\n                return vals.slice(1);\n            }\n            return false;\n        },\n        pattern: 'fn'\n    };\n};\nconst literal = (str) => {\n    return {\n        match: (vals) => func((val) => val === str).match(vals),\n        pattern: str\n    };\n};\nconst string = () => {\n    return {\n        match: (vals) => func((val) => typeof val === 'string').match(vals),\n        pattern: '{string}'\n    };\n};\nconst number = () => {\n    return {\n        match: (vals) => func((val) => !isNaN(parseInt(val))).match(vals),\n        pattern: '{number}'\n    };\n};\nconst peerId = () => {\n    return {\n        match: (vals) => {\n            if (vals.length < 2) {\n                return false;\n            }\n            if (vals[0] !== 'p2p' && vals[0] !== 'ipfs') {\n                return false;\n            }\n            // Q is RSA, 1 is Ed25519 or Secp256k1\n            if (vals[1].startsWith('Q') || vals[1].startsWith('1')) {\n                try {\n                    base58btc.decode(`z${vals[1]}`);\n                }\n                catch (err) {\n                    return false;\n                }\n            }\n            else {\n                return false;\n            }\n            return vals.slice(2);\n        },\n        pattern: '/p2p/{peerid}'\n    };\n};\nconst certhash = () => {\n    return {\n        match: (vals) => {\n            if (vals.length < 2) {\n                return false;\n            }\n            if (vals[0] !== 'certhash') {\n                return false;\n            }\n            try {\n                base64url.decode(vals[1]);\n            }\n            catch {\n                return false;\n            }\n            return vals.slice(2);\n        },\n        pattern: '/certhash/{certhash}'\n    };\n};\nconst optional = (matcher) => {\n    return {\n        match: (vals) => {\n            const result = matcher.match(vals);\n            if (result === false) {\n                return vals;\n            }\n            return result;\n        },\n        pattern: `optional(${matcher.pattern})`\n    };\n};\nconst or = (...matchers) => {\n    return {\n        match: (vals) => {\n            let matches;\n            for (const matcher of matchers) {\n                const result = matcher.match(vals);\n                // no match\n                if (result === false) {\n                    continue;\n                }\n                // choose greediest matcher\n                if (matches == null || result.length < matches.length) {\n                    matches = result;\n                }\n            }\n            if (matches == null) {\n                return false;\n            }\n            return matches;\n        },\n        pattern: `or(${matchers.map(m => m.pattern).join(', ')})`\n    };\n};\nconst and = (...matchers) => {\n    return {\n        match: (vals) => {\n            for (const matcher of matchers) {\n                // pass what's left of the array\n                const result = matcher.match(vals);\n                // no match\n                if (result === false) {\n                    return false;\n                }\n                vals = result;\n            }\n            return vals;\n        },\n        pattern: `and(${matchers.map(m => m.pattern).join(', ')})`\n    };\n};\nfunction fmt(...matchers) {\n    function match(ma) {\n        let parts = toParts(ma);\n        for (const matcher of matchers) {\n            const result = matcher.match(parts);\n            if (result === false) {\n                return false;\n            }\n            parts = result;\n        }\n        return parts;\n    }\n    function matches(ma) {\n        const result = match(ma);\n        return result !== false;\n    }\n    function exactMatch(ma) {\n        const result = match(ma);\n        if (result === false) {\n            return false;\n        }\n        return result.length === 0;\n    }\n    return {\n        matches,\n        exactMatch\n    };\n}\n/**\n * DNS matchers\n */\nconst _DNS4 = and(literal('dns4'), string());\nconst _DNS6 = and(literal('dns6'), string());\nconst _DNSADDR = and(literal('dnsaddr'), string());\nconst _DNS = and(literal('dns'), string());\n/**\n * Matches dns4 addresses.\n *\n * Use {@link DNS DNS} instead to match any type of DNS address.\n *\n * @example\n *\n * ```ts\n * import { multiaddr } from '@multiformats/multiaddr'\n * import { DNS4 } from '@multiformats/multiaddr-matcher'\n *\n * DNS4.matches(multiaddr('/dns4/example.org')) // true\n * ```\n */\nexport const DNS4 = fmt(_DNS4, optional(peerId()));\n/**\n * Matches dns6 addresses.\n *\n * Use {@link DNS DNS} instead to match any type of DNS address.\n *\n * @example\n *\n * ```ts\n * import { multiaddr } from '@multiformats/multiaddr'\n * import { DNS6 } from '@multiformats/multiaddr-matcher'\n *\n * DNS6.matches(multiaddr('/dns6/example.org')) // true\n * ```\n */\nexport const DNS6 = fmt(_DNS6, optional(peerId()));\n/**\n * Matches dnsaddr addresses.\n *\n * Use {@link DNS DNS} instead to match any type of DNS address.\n *\n * @example\n *\n * ```ts\n * import { multiaddr } from '@multiformats/multiaddr'\n * import { DNSADDR } from '@multiformats/multiaddr-matcher'\n *\n * DNSADDR.matches(multiaddr('/dnsaddr/example.org')) // true\n * DNSADDR.matches(multiaddr('/dnsaddr/example.org/p2p/Qmfoo')) // true\n * ```\n */\nexport const DNSADDR = fmt(_DNSADDR, optional(peerId()));\n/**\n * Matches any dns address.\n *\n * @example\n *\n * ```ts\n * import { multiaddr } from '@multiformats/multiaddr'\n * import { DNS } from '@multiformats/multiaddr-matcher'\n *\n * DNS.matches(multiaddr('/dnsaddr/example.org')) // true\n * DNS.matches(multiaddr('/dns4/example.org')) // true\n * DNS.matches(multiaddr('/dns6/example.org')) // true\n * DNS.matches(multiaddr('/dns6/example.org/p2p/Qmfoo')) // true\n * ```\n */\nexport const DNS = fmt(or(_DNS, _DNSADDR, _DNS4, _DNS6), optional(peerId()));\nconst _IP4 = and(literal('ip4'), func(isIPv4));\nconst _IP6 = and(literal('ip6'), func(isIPv6));\nconst _IP = or(_IP4, _IP6);\nconst _IP_OR_DOMAIN = or(_IP, _DNS, _DNS4, _DNS6, _DNSADDR);\n/**\n * A matcher for addresses that start with IP or DNS tuples.\n *\n * @example\n *\n * ```ts\n * import { multiaddr } from '@multiformats/multiaddr'\n * import { IP_OR_DOMAIN } from '@multiformats/multiaddr-matcher'\n *\n * IP_OR_DOMAIN.matches(multiaddr('/ip4/123.123.123.123')) // true\n * IP_OR_DOMAIN.matches(multiaddr('/ip4/123.123.123.123/p2p/QmFoo')) // true\n * IP_OR_DOMAIN.matches(multiaddr('/dns/example.com/p2p/QmFoo')) // true\n * IP_OR_DOMAIN.matches(multiaddr('/p2p/QmFoo')) // false\n * ```\n */\nexport const IP_OR_DOMAIN = fmt(or(_IP, and(or(_DNS, _DNSADDR, _DNS4, _DNS6), optional(peerId()))));\n/**\n * Matches ip4 addresses.\n *\n * Use {@link IP IP} instead to match any ip4/ip6 address.\n *\n * @example\n *\n * ```ts\n * import { multiaddr } from '@multiformats/multiaddr'\n * import { IP4 } from '@multiformats/multiaddr-matcher'\n *\n * const ma = multiaddr('/ip4/123.123.123.123')\n *\n * IP4.matches(ma) // true\n * ```\n */\nexport const IP4 = fmt(_IP4);\n/**\n * Matches ip6 addresses.\n *\n * Use {@link IP IP} instead to match any ip4/ip6 address.\n *\n * @example\n *\n * ```ts\n * import { multiaddr } from '@multiformats/multiaddr'\n * import { IP6 } from '@multiformats/multiaddr-matcher'\n *\n * const ma = multiaddr('/ip6/fe80::1cc1:a3b8:322f:cf22')\n *\n * IP6.matches(ma) // true\n * ```\n */\nexport const IP6 = fmt(_IP6);\n/**\n * Matches ip4 or ip6 addresses.\n *\n * @example\n *\n * ```ts\n * import { multiaddr } from '@multiformats/multiaddr'\n * import { IP } from '@multiformats/multiaddr-matcher'\n *\n * IP.matches(multiaddr('/ip4/123.123.123.123')) // true\n * IP.matches(multiaddr('/ip6/fe80::1cc1:a3b8:322f:cf22')) // true\n * ```\n */\nexport const IP = fmt(_IP);\nconst _TCP = and(_IP_OR_DOMAIN, literal('tcp'), number());\nconst _UDP = and(_IP_OR_DOMAIN, literal('udp'), number());\n/**\n * Matches TCP addresses.\n *\n * @example\n *\n * ```ts\n * import { multiaddr } from '@multiformats/multiaddr'\n * import { TCP } from '@multiformats/multiaddr-matcher'\n *\n * TCP.matches(multiaddr('/ip4/123.123.123.123/tcp/1234')) // true\n * ```\n */\nexport const TCP = fmt(and(_TCP, optional(peerId())));\n/**\n * Matches UDP addresses.\n *\n * @example\n *\n * ```ts\n * import { multiaddr } from '@multiformats/multiaddr'\n * import { UDP } from '@multiformats/multiaddr-matcher'\n *\n * UDP.matches(multiaddr('/ip4/123.123.123.123/udp/1234')) // true\n * ```\n */\nexport const UDP = fmt(_UDP);\nconst _QUIC = and(_UDP, literal('quic'));\nconst _QUICV1 = and(_UDP, literal('quic-v1'));\nconst QUIC_V0_OR_V1 = or(_QUIC, _QUICV1);\n/**\n * Matches QUIC addresses.\n *\n * @example\n *\n * ```ts\n * import { multiaddr } from '@multiformats/multiaddr'\n * import { QUIC } from '@multiformats/multiaddr-matcher'\n *\n * QUIC.matches(multiaddr('/ip4/123.123.123.123/udp/1234/quic')) // true\n * ```\n */\nexport const QUIC = fmt(_QUIC);\n/**\n * Matches QUICv1 addresses.\n *\n * @example\n *\n * ```ts\n * import { multiaddr } from '@multiformats/multiaddr'\n * import { QUICV1 } from '@multiformats/multiaddr-matcher'\n *\n * QUICV1.matches(multiaddr('/ip4/123.123.123.123/udp/1234/quic-v1')) // true\n * ```\n */\nexport const QUICV1 = fmt(_QUICV1);\nconst _WEB = or(_IP_OR_DOMAIN, _TCP, _UDP, _QUIC, _QUICV1);\nconst _WebSockets = or(and(_WEB, literal('ws'), optional(peerId())));\n/**\n * Matches WebSocket addresses.\n *\n * @example\n *\n * ```ts\n * import { multiaddr } from '@multiformats/multiaddr'\n * import { WebSockets } from '@multiformats/multiaddr-matcher'\n *\n * WebSockets.matches(multiaddr('/ip4/123.123.123.123/tcp/1234/ws')) // true\n * ```\n */\nexport const WebSockets = fmt(_WebSockets);\nconst _WebSocketsSecure = or(and(_WEB, literal('wss'), optional(peerId())), and(_WEB, literal('tls'), literal('ws'), optional(peerId())));\n/**\n * Matches secure WebSocket addresses.\n *\n * @example\n *\n * ```ts\n * import { multiaddr } from '@multiformats/multiaddr'\n * import { WebSocketsSecure } from '@multiformats/multiaddr-matcher'\n *\n * WebSocketsSecure.matches(multiaddr('/ip4/123.123.123.123/tcp/1234/wss')) // true\n * ```\n */\nexport const WebSocketsSecure = fmt(_WebSocketsSecure);\nconst _WebRTCDirect = and(_UDP, literal('webrtc-direct'), optional(certhash()), optional(certhash()), optional(peerId()));\n/**\n * Matches WebRTC-direct addresses.\n *\n * @example\n *\n * ```ts\n * import { multiaddr } from '@multiformats/multiaddr'\n * import { WebRTCDirect } from '@multiformats/multiaddr-matcher'\n *\n * WebRTCDirect.matches(multiaddr('/ip4/123.123.123.123/tcp/1234/p2p/QmFoo/webrtc-direct/certhash/u....')) // true\n * ```\n */\nexport const WebRTCDirect = fmt(_WebRTCDirect);\nconst _WebTransport = and(_QUICV1, literal('webtransport'), optional(certhash()), optional(certhash()), optional(peerId()));\n/**\n * Matches WebTransport addresses.\n *\n * @example\n *\n * ```ts\n * import { multiaddr } from '@multiformats/multiaddr'\n * import { WebRTCDirect } from '@multiformats/multiaddr-matcher'\n *\n * WebRTCDirect.matches(multiaddr('/ip4/123.123.123.123/udp/1234/quic-v1/webtransport/certhash/u..../certhash/u..../p2p/QmFoo')) // true\n * ```\n */\nexport const WebTransport = fmt(_WebTransport);\nconst _P2P = or(_WebSockets, _WebSocketsSecure, and(_TCP, optional(peerId())), and(QUIC_V0_OR_V1, optional(peerId())), and(_IP_OR_DOMAIN, optional(peerId())), _WebRTCDirect, _WebTransport, peerId());\n/**\n * Matches peer addresses\n *\n * @example\n *\n * ```ts\n * import { multiaddr } from '@multiformats/multiaddr'\n * import { P2P } from '@multiformats/multiaddr-matcher'\n *\n * P2P.matches(multiaddr('/ip4/123.123.123.123/tcp/1234/p2p/QmFoo')) // true\n * ```\n */\nexport const P2P = fmt(_P2P);\nconst _Circuit = and(_P2P, literal('p2p-circuit'), peerId());\n/**\n * Matches circuit relay addresses\n *\n * @example\n *\n * ```ts\n * import { multiaddr } from '@multiformats/multiaddr'\n * import { Circuit } from '@multiformats/multiaddr-matcher'\n *\n * Circuit.matches(multiaddr('/ip4/123.123.123.123/tcp/1234/p2p/QmRelay/p2p-circuit/p2p/QmTarget')) // true\n * ```\n */\nexport const Circuit = fmt(_Circuit);\nconst _WebRTC = or(and(_P2P, literal('p2p-circuit'), literal('webrtc'), optional(peerId())), and(_P2P, literal('webrtc'), optional(peerId())), literal('webrtc'));\n/**\n * Matches WebRTC addresses\n *\n * @example\n *\n * ```ts\n * import { multiaddr } from '@multiformats/multiaddr'\n * import { WebRTC } from '@multiformats/multiaddr-matcher'\n *\n * WebRTC.matches(multiaddr('/ip4/123.123.123.123/tcp/1234/p2p/QmRelay/p2p-circuit/webrtc/p2p/QmTarget')) // true\n * ```\n */\nexport const WebRTC = fmt(_WebRTC);\nconst _HTTP = or(and(_IP_OR_DOMAIN, literal('tcp'), number(), literal('http'), optional(peerId())), and(_IP_OR_DOMAIN, literal('http'), optional(peerId())));\n/**\n * Matches HTTP addresses\n *\n * @example\n *\n * ```ts\n * import { multiaddr } from '@multiformats/multiaddr'\n * import { HTTP } from '@multiformats/multiaddr-matcher'\n *\n * HTTP.matches(multiaddr('/dns/example.org/http')) // true\n * ```\n */\nexport const HTTP = fmt(_HTTP);\nconst _HTTPS = or(and(_IP_OR_DOMAIN, literal('tcp'), or(and(literal('443'), literal('http')), and(number(), literal('https'))), optional(peerId())), and(_IP_OR_DOMAIN, literal('tls'), literal('http'), optional(peerId())), and(_IP_OR_DOMAIN, literal('https'), optional(peerId())));\n/**\n * Matches HTTPS addresses\n *\n * @example\n *\n * ```ts\n * import { multiaddr } from '@multiformats/multiaddr'\n * import { HTTP } from '@multiformats/multiaddr-matcher'\n *\n * HTTP.matches(multiaddr('/dns/example.org/tls/http')) // true\n * ```\n */\nexport const HTTPS = fmt(_HTTPS);\n//# sourceMappingURL=index.js.map","/**\n * @packageDocumentation\n *\n * This module makes it easy to send and receive length-prefixed Protobuf encoded\n * messages over streams.\n *\n * @example\n *\n * ```typescript\n * import { pbStream } from 'it-protobuf-stream'\n * import { MessageType } from './src/my-message-type.js'\n *\n * // RequestType and ResponseType have been generate from `.proto` files and have\n * // `.encode` and `.decode` methods for serialization/deserialization\n *\n * const stream = pbStream(duplex)\n *\n * // write a message to the stream\n * stream.write({\n *   foo: 'bar'\n * }, MessageType)\n *\n * // read a message from the stream\n * const res = await stream.read(MessageType)\n * ```\n */\nimport { lpStream } from 'it-length-prefixed-stream';\nexport function pbStream(duplex, opts) {\n    const lp = lpStream(duplex, opts);\n    const W = {\n        read: async (proto, options) => {\n            // readLP, decode\n            const value = await lp.read(options);\n            return proto.decode(value);\n        },\n        write: async (message, proto, options) => {\n            // encode, writeLP\n            await lp.write(proto.encode(message), options);\n        },\n        writeV: async (messages, proto, options) => {\n            // encode, writeLP\n            await lp.writeV(messages.map(message => proto.encode(message)), options);\n        },\n        pb: (proto) => {\n            return {\n                read: async (options) => W.read(proto, options),\n                write: async (d, options) => W.write(d, proto, options),\n                writeV: async (d, options) => W.writeV(d, proto, options),\n                unwrap: () => W\n            };\n        },\n        unwrap: () => {\n            return lp.unwrap();\n        }\n    };\n    return W;\n}\n//# sourceMappingURL=index.js.map","/* eslint-disable import/export */\n/* eslint-disable complexity */\n/* eslint-disable @typescript-eslint/no-namespace */\n/* eslint-disable @typescript-eslint/no-unnecessary-boolean-literal-compare */\n/* eslint-disable @typescript-eslint/no-empty-interface */\nimport { encodeMessage, decodeMessage, message } from 'protons-runtime';\nexport var Identify;\n(function (Identify) {\n    let _codec;\n    Identify.codec = () => {\n        if (_codec == null) {\n            _codec = message((obj, w, opts = {}) => {\n                if (opts.lengthDelimited !== false) {\n                    w.fork();\n                }\n                if (obj.protocolVersion != null) {\n                    w.uint32(42);\n                    w.string(obj.protocolVersion);\n                }\n                if (obj.agentVersion != null) {\n                    w.uint32(50);\n                    w.string(obj.agentVersion);\n                }\n                if (obj.publicKey != null) {\n                    w.uint32(10);\n                    w.bytes(obj.publicKey);\n                }\n                if (obj.listenAddrs != null) {\n                    for (const value of obj.listenAddrs) {\n                        w.uint32(18);\n                        w.bytes(value);\n                    }\n                }\n                if (obj.observedAddr != null) {\n                    w.uint32(34);\n                    w.bytes(obj.observedAddr);\n                }\n                if (obj.protocols != null) {\n                    for (const value of obj.protocols) {\n                        w.uint32(26);\n                        w.string(value);\n                    }\n                }\n                if (obj.signedPeerRecord != null) {\n                    w.uint32(66);\n                    w.bytes(obj.signedPeerRecord);\n                }\n                if (opts.lengthDelimited !== false) {\n                    w.ldelim();\n                }\n            }, (reader, length) => {\n                const obj = {\n                    listenAddrs: [],\n                    protocols: []\n                };\n                const end = length == null ? reader.len : reader.pos + length;\n                while (reader.pos < end) {\n                    const tag = reader.uint32();\n                    switch (tag >>> 3) {\n                        case 5:\n                            obj.protocolVersion = reader.string();\n                            break;\n                        case 6:\n                            obj.agentVersion = reader.string();\n                            break;\n                        case 1:\n                            obj.publicKey = reader.bytes();\n                            break;\n                        case 2:\n                            obj.listenAddrs.push(reader.bytes());\n                            break;\n                        case 4:\n                            obj.observedAddr = reader.bytes();\n                            break;\n                        case 3:\n                            obj.protocols.push(reader.string());\n                            break;\n                        case 8:\n                            obj.signedPeerRecord = reader.bytes();\n                            break;\n                        default:\n                            reader.skipType(tag & 7);\n                            break;\n                    }\n                }\n                return obj;\n            });\n        }\n        return _codec;\n    };\n    Identify.encode = (obj) => {\n        return encodeMessage(obj, Identify.codec());\n    };\n    Identify.decode = (buf) => {\n        return decodeMessage(buf, Identify.codec());\n    };\n})(Identify || (Identify = {}));\n//# sourceMappingURL=message.js.map","import detectElectron from 'is-electron'\n\nexport const isEnvWithDom = typeof window === 'object' && typeof document === 'object' && document.nodeType === 9\nexport const isElectron = detectElectron()\n\n/**\n * Detects browser main thread  **NOT** web worker or service worker\n */\nexport const isBrowser = isEnvWithDom && !isElectron\nexport const isElectronMain = isElectron && !isEnvWithDom\nexport const isElectronRenderer = isElectron && isEnvWithDom\nexport const isNode = typeof globalThis.process !== 'undefined' && typeof globalThis.process.release !== 'undefined' && globalThis.process.release.name === 'node' && !isElectron\n// @ts-ignore\n// eslint-disable-next-line no-undef\nexport const isWebWorker = typeof importScripts === 'function' && typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope\n\n// defeat bundlers replacing process.env.NODE_ENV with \"development\" or whatever\nexport const isTest = typeof globalThis.process !== 'undefined' && typeof globalThis.process.env !== 'undefined' && globalThis.process.env['NODE' + (() => '_')() + 'ENV'] === 'test'\nexport const isReactNative = typeof navigator !== 'undefined' && navigator.product === 'ReactNative'\n","import { CodeError } from '@libp2p/interface';\nimport { peerIdFromKeys } from '@libp2p/peer-id';\nimport { RecordEnvelope, PeerRecord } from '@libp2p/peer-record';\nimport { multiaddr } from '@multiformats/multiaddr';\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string';\nimport { isNode, isBrowser, isWebWorker, isElectronMain, isElectronRenderer, isReactNative } from 'wherearewe';\nimport { IDENTIFY_PROTOCOL_VERSION, MAX_IDENTIFY_MESSAGE_SIZE, MAX_PUSH_CONCURRENCY } from './consts.js';\nexport const defaultValues = {\n    protocolPrefix: 'ipfs',\n    timeout: 5000,\n    maxInboundStreams: 1,\n    maxOutboundStreams: 1,\n    maxObservedAddresses: 10,\n    maxMessageSize: MAX_IDENTIFY_MESSAGE_SIZE,\n    runOnConnectionOpen: true,\n    runOnSelfUpdate: true,\n    runOnTransientConnection: true,\n    concurrency: MAX_PUSH_CONCURRENCY\n};\n/**\n * Takes the `addr` and converts it to a Multiaddr if possible\n */\nexport function getCleanMultiaddr(addr) {\n    if (addr != null && addr.length > 0) {\n        try {\n            return multiaddr(addr);\n        }\n        catch {\n        }\n    }\n}\nexport function getAgentVersion(nodeInfo, agentVersion) {\n    if (agentVersion != null) {\n        return agentVersion;\n    }\n    agentVersion = `${nodeInfo.name}/${nodeInfo.version}`;\n    // Append user agent version to default AGENT_VERSION depending on the environment\n    if (isNode || isElectronMain) {\n        agentVersion += ` UserAgent=${globalThis.process.version}`;\n    }\n    else if (isBrowser || isWebWorker || isElectronRenderer || isReactNative) {\n        agentVersion += ` UserAgent=${globalThis.navigator.userAgent}`;\n    }\n    return agentVersion;\n}\nexport async function consumeIdentifyMessage(peerStore, events, log, connection, message) {\n    log('received identify from %p', connection.remotePeer);\n    if (message == null) {\n        throw new CodeError('message was null or undefined', 'ERR_INVALID_MESSAGE');\n    }\n    const peer = {};\n    if (message.listenAddrs.length > 0) {\n        peer.addresses = message.listenAddrs.map(buf => ({\n            isCertified: false,\n            multiaddr: multiaddr(buf)\n        }));\n    }\n    if (message.protocols.length > 0) {\n        peer.protocols = message.protocols;\n    }\n    if (message.publicKey != null) {\n        peer.publicKey = message.publicKey;\n        const peerId = await peerIdFromKeys(message.publicKey);\n        if (!peerId.equals(connection.remotePeer)) {\n            throw new CodeError('public key did not match remote PeerId', 'ERR_INVALID_PUBLIC_KEY');\n        }\n    }\n    let output;\n    // if the peer record has been sent, prefer the addresses in the record as they are signed by the remote peer\n    if (message.signedPeerRecord != null) {\n        log('received signedPeerRecord from %p', connection.remotePeer);\n        let peerRecordEnvelope = message.signedPeerRecord;\n        const envelope = await RecordEnvelope.openAndCertify(peerRecordEnvelope, PeerRecord.DOMAIN);\n        let peerRecord = PeerRecord.createFromProtobuf(envelope.payload);\n        // Verify peerId\n        if (!peerRecord.peerId.equals(envelope.peerId)) {\n            throw new CodeError('signing key does not match PeerId in the PeerRecord', 'ERR_INVALID_SIGNING_KEY');\n        }\n        // Make sure remote peer is the one sending the record\n        if (!connection.remotePeer.equals(peerRecord.peerId)) {\n            throw new CodeError('signing key does not match remote PeerId', 'ERR_INVALID_PEER_RECORD_KEY');\n        }\n        let existingPeer;\n        try {\n            existingPeer = await peerStore.get(peerRecord.peerId);\n        }\n        catch (err) {\n            if (err.code !== 'ERR_NOT_FOUND') {\n                throw err;\n            }\n        }\n        if (existingPeer != null) {\n            // don't lose any existing metadata\n            peer.metadata = existingPeer.metadata;\n            // if we have previously received a signed record for this peer, compare it to the incoming one\n            if (existingPeer.peerRecordEnvelope != null) {\n                const storedEnvelope = await RecordEnvelope.createFromProtobuf(existingPeer.peerRecordEnvelope);\n                const storedRecord = PeerRecord.createFromProtobuf(storedEnvelope.payload);\n                // ensure seq is greater than, or equal to, the last received\n                if (storedRecord.seqNumber >= peerRecord.seqNumber) {\n                    log('sequence number was lower or equal to existing sequence number - stored: %d received: %d', storedRecord.seqNumber, peerRecord.seqNumber);\n                    peerRecord = storedRecord;\n                    peerRecordEnvelope = existingPeer.peerRecordEnvelope;\n                }\n            }\n        }\n        // store the signed record for next time\n        peer.peerRecordEnvelope = peerRecordEnvelope;\n        // override the stored addresses with the signed multiaddrs\n        peer.addresses = peerRecord.multiaddrs.map(multiaddr => ({\n            isCertified: true,\n            multiaddr\n        }));\n        output = {\n            seq: peerRecord.seqNumber,\n            addresses: peerRecord.multiaddrs\n        };\n    }\n    else {\n        log('%p did not send a signed peer record', connection.remotePeer);\n    }\n    log('patching %p with', connection.remotePeer, peer);\n    await peerStore.patch(connection.remotePeer, peer);\n    if (message.agentVersion != null || message.protocolVersion != null) {\n        const metadata = {};\n        if (message.agentVersion != null) {\n            metadata.AgentVersion = uint8ArrayFromString(message.agentVersion);\n        }\n        if (message.protocolVersion != null) {\n            metadata.ProtocolVersion = uint8ArrayFromString(message.protocolVersion);\n        }\n        log('merging %p metadata', connection.remotePeer, metadata);\n        await peerStore.merge(connection.remotePeer, {\n            metadata\n        });\n    }\n    const result = {\n        peerId: connection.remotePeer,\n        protocolVersion: message.protocolVersion,\n        agentVersion: message.agentVersion,\n        publicKey: message.publicKey,\n        listenAddrs: message.listenAddrs.map(buf => multiaddr(buf)),\n        observedAddr: message.observedAddr == null ? undefined : multiaddr(message.observedAddr),\n        protocols: message.protocols,\n        signedPeerRecord: output,\n        connection\n    };\n    events.safeDispatchEvent('peer:identify', { detail: result });\n    return result;\n}\nexport class AbstractIdentify {\n    host;\n    protocol;\n    started;\n    timeout;\n    peerId;\n    peerStore;\n    registrar;\n    addressManager;\n    maxInboundStreams;\n    maxOutboundStreams;\n    maxMessageSize;\n    maxObservedAddresses;\n    events;\n    runOnTransientConnection;\n    log;\n    constructor(components, init) {\n        this.protocol = init.protocol;\n        this.started = false;\n        this.peerId = components.peerId;\n        this.peerStore = components.peerStore;\n        this.registrar = components.registrar;\n        this.addressManager = components.addressManager;\n        this.events = components.events;\n        this.log = init.log;\n        this.timeout = init.timeout ?? defaultValues.timeout;\n        this.maxInboundStreams = init.maxInboundStreams ?? defaultValues.maxInboundStreams;\n        this.maxOutboundStreams = init.maxOutboundStreams ?? defaultValues.maxOutboundStreams;\n        this.maxMessageSize = init.maxMessageSize ?? defaultValues.maxMessageSize;\n        this.maxObservedAddresses = init.maxObservedAddresses ?? defaultValues.maxObservedAddresses;\n        this.runOnTransientConnection = init.runOnTransientConnection ?? defaultValues.runOnTransientConnection;\n        // Store self host metadata\n        this.host = {\n            protocolVersion: `${init.protocolPrefix ?? defaultValues.protocolPrefix}/${IDENTIFY_PROTOCOL_VERSION}`,\n            agentVersion: getAgentVersion(components.nodeInfo, init.agentVersion)\n        };\n    }\n    isStarted() {\n        return this.started;\n    }\n    async start() {\n        if (this.started) {\n            return;\n        }\n        await this.peerStore.merge(this.peerId, {\n            metadata: {\n                AgentVersion: uint8ArrayFromString(this.host.agentVersion),\n                ProtocolVersion: uint8ArrayFromString(this.host.protocolVersion)\n            }\n        });\n        await this.registrar.handle(this.protocol, (data) => {\n            void this.handleProtocol(data).catch(err => {\n                this.log.error(err);\n            });\n        }, {\n            maxInboundStreams: this.maxInboundStreams,\n            maxOutboundStreams: this.maxOutboundStreams,\n            runOnTransientConnection: this.runOnTransientConnection\n        });\n        this.started = true;\n    }\n    async stop() {\n        await this.registrar.unhandle(this.protocol);\n        this.started = false;\n    }\n}\n//# sourceMappingURL=utils.js.map","export const PROTOCOL_VERSION = 'ipfs/0.1.0'; // deprecated\nexport const MULTICODEC_IDENTIFY = '/ipfs/id/1.0.0'; // deprecated\nexport const MULTICODEC_IDENTIFY_PUSH = '/ipfs/id/push/1.0.0'; // deprecated\nexport const IDENTIFY_PROTOCOL_VERSION = '0.1.0';\nexport const MULTICODEC_IDENTIFY_PROTOCOL_NAME = 'id';\nexport const MULTICODEC_IDENTIFY_PUSH_PROTOCOL_NAME = 'id/push';\nexport const MULTICODEC_IDENTIFY_PROTOCOL_VERSION = '1.0.0';\nexport const MULTICODEC_IDENTIFY_PUSH_PROTOCOL_VERSION = '1.0.0';\n// https://github.com/libp2p/go-libp2p/blob/8d2e54e1637041d5cf4fac1e531287560bd1f4ac/p2p/protocol/identify/id.go#L52\nexport const MAX_IDENTIFY_MESSAGE_SIZE = 1024 * 8;\n// https://github.com/libp2p/go-libp2p/blob/0385ec924bad172f74a74db09939e97c079b1420/p2p/protocol/identify/id.go#L47C7-L47C25\nexport const MAX_PUSH_CONCURRENCY = 32;\n//# sourceMappingURL=consts.js.map","/* eslint-disable complexity */\nimport { CodeError, serviceCapabilities, setMaxListeners } from '@libp2p/interface';\nimport { peerIdFromKeys } from '@libp2p/peer-id';\nimport { RecordEnvelope, PeerRecord } from '@libp2p/peer-record';\nimport { protocols } from '@multiformats/multiaddr';\nimport { IP_OR_DOMAIN } from '@multiformats/multiaddr-matcher';\nimport { pbStream } from 'it-protobuf-stream';\nimport { MULTICODEC_IDENTIFY_PROTOCOL_NAME, MULTICODEC_IDENTIFY_PROTOCOL_VERSION } from './consts.js';\nimport { Identify as IdentifyMessage } from './pb/message.js';\nimport { AbstractIdentify, consumeIdentifyMessage, defaultValues, getCleanMultiaddr } from './utils.js';\nexport class Identify extends AbstractIdentify {\n    constructor(components, init = {}) {\n        super(components, {\n            ...init,\n            protocol: `/${init.protocolPrefix ?? defaultValues.protocolPrefix}/${MULTICODEC_IDENTIFY_PROTOCOL_NAME}/${MULTICODEC_IDENTIFY_PROTOCOL_VERSION}`,\n            log: components.logger.forComponent('libp2p:identify')\n        });\n        if (init.runOnConnectionOpen ?? defaultValues.runOnConnectionOpen) {\n            // When a new connection happens, trigger identify\n            components.events.addEventListener('connection:open', (evt) => {\n                const connection = evt.detail;\n                this.identify(connection).catch(err => { this.log.error('error during identify trigged by connection:open', err); });\n            });\n        }\n    }\n    [serviceCapabilities] = [\n        '@libp2p/identify'\n    ];\n    async _identify(connection, options = {}) {\n        let stream;\n        if (options.signal == null) {\n            const signal = AbortSignal.timeout(this.timeout);\n            setMaxListeners(Infinity, signal);\n            options = {\n                ...options,\n                signal\n            };\n        }\n        try {\n            stream = await connection.newStream(this.protocol, {\n                ...options,\n                runOnTransientConnection: this.runOnTransientConnection\n            });\n            const pb = pbStream(stream, {\n                maxDataLength: this.maxMessageSize\n            }).pb(IdentifyMessage);\n            const message = await pb.read(options);\n            await stream.close(options);\n            return message;\n        }\n        catch (err) {\n            this.log.error('error while reading identify message', err);\n            stream?.abort(err);\n            throw err;\n        }\n    }\n    async identify(connection, options = {}) {\n        const message = await this._identify(connection, options);\n        const { publicKey, protocols, observedAddr } = message;\n        if (publicKey == null) {\n            throw new CodeError('public key was missing from identify message', 'ERR_MISSING_PUBLIC_KEY');\n        }\n        const id = await peerIdFromKeys(publicKey);\n        if (!connection.remotePeer.equals(id)) {\n            throw new CodeError('identified peer does not match the expected peer', 'ERR_INVALID_PEER');\n        }\n        if (this.peerId.equals(id)) {\n            throw new CodeError('identified peer is our own peer id?', 'ERR_INVALID_PEER');\n        }\n        // Get the observedAddr if there is one\n        const cleanObservedAddr = getCleanMultiaddr(observedAddr);\n        this.log('identify completed for peer %p and protocols %o', id, protocols);\n        this.log('our observed address is %a', cleanObservedAddr);\n        if (cleanObservedAddr != null &&\n            this.addressManager.getObservedAddrs().length < (this.maxObservedAddresses ?? Infinity)) {\n            this.log('storing our observed address %a', cleanObservedAddr);\n            this.addressManager.addObservedAddr(cleanObservedAddr);\n        }\n        return consumeIdentifyMessage(this.peerStore, this.events, this.log, connection, message);\n    }\n    /**\n     * Sends the `Identify` response with the Signed Peer Record\n     * to the requesting peer over the given `connection`\n     */\n    async handleProtocol(data) {\n        const { connection, stream } = data;\n        const signal = AbortSignal.timeout(this.timeout);\n        setMaxListeners(Infinity, signal);\n        try {\n            const publicKey = this.peerId.publicKey ?? new Uint8Array(0);\n            const peerData = await this.peerStore.get(this.peerId);\n            const multiaddrs = this.addressManager.getAddresses().map(ma => ma.decapsulateCode(protocols('p2p').code));\n            let signedPeerRecord = peerData.peerRecordEnvelope;\n            if (multiaddrs.length > 0 && signedPeerRecord == null) {\n                const peerRecord = new PeerRecord({\n                    peerId: this.peerId,\n                    multiaddrs\n                });\n                const envelope = await RecordEnvelope.seal(peerRecord, this.peerId);\n                signedPeerRecord = envelope.marshal().subarray();\n            }\n            let observedAddr = connection.remoteAddr.bytes;\n            if (!IP_OR_DOMAIN.matches(connection.remoteAddr)) {\n                observedAddr = undefined;\n            }\n            const pb = pbStream(stream).pb(IdentifyMessage);\n            await pb.write({\n                protocolVersion: this.host.protocolVersion,\n                agentVersion: this.host.agentVersion,\n                publicKey,\n                listenAddrs: multiaddrs.map(addr => addr.bytes),\n                signedPeerRecord,\n                observedAddr,\n                protocols: peerData.protocols\n            }, {\n                signal\n            });\n            await stream.close({\n                signal\n            });\n        }\n        catch (err) {\n            this.log.error('could not respond to identify request', err);\n            stream.abort(err);\n        }\n    }\n}\n//# sourceMappingURL=identify.js.map","/**\n * @packageDocumentation\n *\n * Use the `identify` function to add support for the [Identify protocol](https://github.com/libp2p/specs/blob/master/identify/README.md) to libp2p.\n *\n * This protocol allows network peers to discover the multiaddrs the current node listens on, and the protocols it supports.\n *\n * A second function, `identifyPush` is also exported to add support for [identify/push](https://github.com/libp2p/specs/blob/master/identify/README.md#identifypush).\n *\n * This protocol will send updates to all connected peers when the multiaddrs or protocols of the current node change.\n *\n * > [!TIP]\n * > For maximum network compatibility you should configure both protocols\n *\n * @example Enabling identify\n *\n * ```typescript\n * import { createLibp2p } from 'libp2p'\n * import { identify } from '@libp2p/identify'\n *\n * const node = await createLibp2p({\n *   // ...other options\n *   services: {\n *     identify: identify()\n *   }\n * })\n * ```\n *\n * @example Enabling identify push\n *\n * ```typescript\n * import { createLibp2p } from 'libp2p'\n * import { identifyPush } from '@libp2p/identify'\n *\n * const node = await createLibp2p({\n *   // ...other options\n *   services: {\n *     identifyPush: identifyPush()\n *   }\n * })\n * ```\n */\nimport { IdentifyPush as IdentifyPushClass } from './identify-push.js';\nimport { Identify as IdentifyClass } from './identify.js';\nexport function identify(init = {}) {\n    return (components) => new IdentifyClass(components, init);\n}\nexport function identifyPush(init = {}) {\n    return (components) => new IdentifyPushClass(components, init);\n}\n//# sourceMappingURL=index.js.map","import { getIterator } from 'get-iterator';\nimport { isPromise } from './is-promise.js';\nexport function closeSource(source, log) {\n    const res = getIterator(source).return?.();\n    if (isPromise(res)) {\n        res.catch(err => {\n            log.error('could not cause iterator to return', err);\n        });\n    }\n}\n//# sourceMappingURL=close-source.js.map","export function getIterator(obj) {\n    if (obj != null) {\n        if (typeof obj[Symbol.iterator] === 'function') {\n            return obj[Symbol.iterator]();\n        }\n        if (typeof obj[Symbol.asyncIterator] === 'function') {\n            return obj[Symbol.asyncIterator]();\n        }\n        if (typeof obj.next === 'function') {\n            return obj; // probably an iterator\n        }\n    }\n    throw new Error('argument is not an iterator or iterable');\n}\n//# sourceMappingURL=index.js.map","export function isPromise(thing) {\n    if (thing == null) {\n        return false;\n    }\n    return typeof thing.then === 'function' &&\n        typeof thing.catch === 'function' &&\n        typeof thing.finally === 'function';\n}\n//# sourceMappingURL=is-promise.js.map","// From https://github.com/sindresorhus/random-int/blob/c37741b56f76b9160b0b63dae4e9c64875128146/index.js#L13-L15\nconst randomInteger = (minimum, maximum) => Math.floor((Math.random() * (maximum - minimum + 1)) + minimum);\n\nconst createAbortError = () => {\n\tconst error = new Error('Delay aborted');\n\terror.name = 'AbortError';\n\treturn error;\n};\n\nconst clearMethods = new WeakMap();\n\nexport function createDelay({clearTimeout: defaultClear, setTimeout: defaultSet} = {}) {\n\t// We cannot use `async` here as we need the promise identity.\n\treturn (milliseconds, {value, signal} = {}) => {\n\t\t// TODO: Use `signal?.throwIfAborted()` when targeting Node.js 18.\n\t\tif (signal?.aborted) {\n\t\t\treturn Promise.reject(createAbortError());\n\t\t}\n\n\t\tlet timeoutId;\n\t\tlet settle;\n\t\tlet rejectFunction;\n\t\tconst clear = defaultClear ?? clearTimeout;\n\n\t\tconst signalListener = () => {\n\t\t\tclear(timeoutId);\n\t\t\trejectFunction(createAbortError());\n\t\t};\n\n\t\tconst cleanup = () => {\n\t\t\tif (signal) {\n\t\t\t\tsignal.removeEventListener('abort', signalListener);\n\t\t\t}\n\t\t};\n\n\t\tconst delayPromise = new Promise((resolve, reject) => {\n\t\t\tsettle = () => {\n\t\t\t\tcleanup();\n\t\t\t\tresolve(value);\n\t\t\t};\n\n\t\t\trejectFunction = reject;\n\t\t\ttimeoutId = (defaultSet ?? setTimeout)(settle, milliseconds);\n\t\t});\n\n\t\tif (signal) {\n\t\t\tsignal.addEventListener('abort', signalListener, {once: true});\n\t\t}\n\n\t\tclearMethods.set(delayPromise, () => {\n\t\t\tclear(timeoutId);\n\t\t\ttimeoutId = null;\n\t\t\tsettle();\n\t\t});\n\n\t\treturn delayPromise;\n\t};\n}\n\nconst delay = createDelay();\n\nexport default delay;\n\nexport async function rangeDelay(minimum, maximum, options = {}) {\n\treturn delay(randomInteger(minimum, maximum), options);\n}\n\nexport function clearDelay(promise) {\n\tclearMethods.get(promise)?.();\n}\n","import { CodeError } from '@libp2p/interface';\nimport delay from 'delay';\nexport class RateLimiter {\n    memoryStorage;\n    points;\n    duration;\n    blockDuration;\n    execEvenly;\n    execEvenlyMinDelayMs;\n    keyPrefix;\n    constructor(opts = {}) {\n        this.points = opts.points ?? 4;\n        this.duration = opts.duration ?? 1;\n        this.blockDuration = opts.blockDuration ?? 0;\n        this.execEvenly = opts.execEvenly ?? false;\n        this.execEvenlyMinDelayMs = opts.execEvenlyMinDelayMs ?? (this.duration * 1000 / this.points);\n        this.keyPrefix = opts.keyPrefix ?? 'rlflx';\n        this.memoryStorage = new MemoryStorage();\n    }\n    async consume(key, pointsToConsume = 1, options = {}) {\n        const rlKey = this.getKey(key);\n        const secDuration = this._getKeySecDuration(options);\n        let res = this.memoryStorage.incrby(rlKey, pointsToConsume, secDuration);\n        res.remainingPoints = Math.max(this.points - res.consumedPoints, 0);\n        if (res.consumedPoints > this.points) {\n            // Block only first time when consumed more than points\n            if (this.blockDuration > 0 && res.consumedPoints <= (this.points + pointsToConsume)) {\n                // Block key\n                res = this.memoryStorage.set(rlKey, res.consumedPoints, this.blockDuration);\n            }\n            throw new CodeError('Rate limit exceeded', 'ERR_RATE_LIMIT_EXCEEDED', res);\n        }\n        else if (this.execEvenly && res.msBeforeNext > 0 && !res.isFirstInDuration) {\n            // Execute evenly\n            let delayMs = Math.ceil(res.msBeforeNext / (res.remainingPoints + 2));\n            if (delayMs < this.execEvenlyMinDelayMs) {\n                delayMs = res.consumedPoints * this.execEvenlyMinDelayMs;\n            }\n            await delay(delayMs);\n        }\n        return res;\n    }\n    penalty(key, points = 1, options = {}) {\n        const rlKey = this.getKey(key);\n        const secDuration = this._getKeySecDuration(options);\n        const res = this.memoryStorage.incrby(rlKey, points, secDuration);\n        res.remainingPoints = Math.max(this.points - res.consumedPoints, 0);\n        return res;\n    }\n    reward(key, points = 1, options = {}) {\n        const rlKey = this.getKey(key);\n        const secDuration = this._getKeySecDuration(options);\n        const res = this.memoryStorage.incrby(rlKey, -points, secDuration);\n        res.remainingPoints = Math.max(this.points - res.consumedPoints, 0);\n        return res;\n    }\n    /**\n     * Block any key for secDuration seconds\n     *\n     * @param key\n     * @param secDuration\n     */\n    block(key, secDuration) {\n        const msDuration = secDuration * 1000;\n        const initPoints = this.points + 1;\n        this.memoryStorage.set(this.getKey(key), initPoints, secDuration);\n        return {\n            remainingPoints: 0,\n            msBeforeNext: msDuration === 0 ? -1 : msDuration,\n            consumedPoints: initPoints,\n            isFirstInDuration: false\n        };\n    }\n    set(key, points, secDuration = 0) {\n        const msDuration = (secDuration >= 0 ? secDuration : this.duration) * 1000;\n        this.memoryStorage.set(this.getKey(key), points, secDuration);\n        return {\n            remainingPoints: 0,\n            msBeforeNext: msDuration === 0 ? -1 : msDuration,\n            consumedPoints: points,\n            isFirstInDuration: false\n        };\n    }\n    get(key) {\n        const res = this.memoryStorage.get(this.getKey(key));\n        if (res != null) {\n            res.remainingPoints = Math.max(this.points - res.consumedPoints, 0);\n        }\n        return res;\n    }\n    delete(key) {\n        this.memoryStorage.delete(this.getKey(key));\n    }\n    _getKeySecDuration(options) {\n        if (options?.customDuration != null && options.customDuration >= 0) {\n            return options.customDuration;\n        }\n        return this.duration;\n    }\n    getKey(key) {\n        return this.keyPrefix.length > 0 ? `${this.keyPrefix}:${key}` : key;\n    }\n    parseKey(rlKey) {\n        return rlKey.substring(this.keyPrefix.length);\n    }\n}\nclass MemoryStorage {\n    storage;\n    constructor() {\n        this.storage = new Map();\n    }\n    incrby(key, value, durationSec) {\n        const existing = this.storage.get(key);\n        if (existing != null) {\n            const msBeforeExpires = existing.expiresAt != null\n                ? existing.expiresAt.getTime() - new Date().getTime()\n                : -1;\n            if (existing.expiresAt == null || msBeforeExpires > 0) {\n                // Change value\n                existing.value += value;\n                return {\n                    remainingPoints: 0,\n                    msBeforeNext: msBeforeExpires,\n                    consumedPoints: existing.value,\n                    isFirstInDuration: false\n                };\n            }\n            return this.set(key, value, durationSec);\n        }\n        return this.set(key, value, durationSec);\n    }\n    set(key, value, durationSec) {\n        const durationMs = durationSec * 1000;\n        const existing = this.storage.get(key);\n        if (existing != null) {\n            clearTimeout(existing.timeoutId);\n        }\n        const record = {\n            value,\n            expiresAt: durationMs > 0 ? new Date(Date.now() + durationMs) : undefined\n        };\n        this.storage.set(key, record);\n        if (durationMs > 0) {\n            record.timeoutId = setTimeout(() => {\n                this.storage.delete(key);\n            }, durationMs);\n            if (record.timeoutId.unref != null) {\n                record.timeoutId.unref();\n            }\n        }\n        return {\n            remainingPoints: 0,\n            msBeforeNext: durationMs === 0 ? -1 : durationMs,\n            consumedPoints: record.value,\n            isFirstInDuration: true\n        };\n    }\n    get(key) {\n        const existing = this.storage.get(key);\n        if (existing != null) {\n            const msBeforeExpires = existing.expiresAt != null\n                ? existing.expiresAt.getTime() - new Date().getTime()\n                : -1;\n            return {\n                remainingPoints: 0,\n                msBeforeNext: msBeforeExpires,\n                consumedPoints: existing.value,\n                isFirstInDuration: false\n            };\n        }\n    }\n    delete(key) {\n        const record = this.storage.get(key);\n        if (record != null) {\n            if (record.timeoutId != null) {\n                clearTimeout(record.timeoutId);\n            }\n            this.storage.delete(key);\n            return true;\n        }\n        return false;\n    }\n}\n//# sourceMappingURL=rate-limiter.js.map","export var MessageTypes;\n(function (MessageTypes) {\n    MessageTypes[MessageTypes[\"NEW_STREAM\"] = 0] = \"NEW_STREAM\";\n    MessageTypes[MessageTypes[\"MESSAGE_RECEIVER\"] = 1] = \"MESSAGE_RECEIVER\";\n    MessageTypes[MessageTypes[\"MESSAGE_INITIATOR\"] = 2] = \"MESSAGE_INITIATOR\";\n    MessageTypes[MessageTypes[\"CLOSE_RECEIVER\"] = 3] = \"CLOSE_RECEIVER\";\n    MessageTypes[MessageTypes[\"CLOSE_INITIATOR\"] = 4] = \"CLOSE_INITIATOR\";\n    MessageTypes[MessageTypes[\"RESET_RECEIVER\"] = 5] = \"RESET_RECEIVER\";\n    MessageTypes[MessageTypes[\"RESET_INITIATOR\"] = 6] = \"RESET_INITIATOR\";\n})(MessageTypes || (MessageTypes = {}));\nexport const MessageTypeNames = Object.freeze({\n    0: 'NEW_STREAM',\n    1: 'MESSAGE_RECEIVER',\n    2: 'MESSAGE_INITIATOR',\n    3: 'CLOSE_RECEIVER',\n    4: 'CLOSE_INITIATOR',\n    5: 'RESET_RECEIVER',\n    6: 'RESET_INITIATOR'\n});\nexport const InitiatorMessageTypes = Object.freeze({\n    NEW_STREAM: MessageTypes.NEW_STREAM,\n    MESSAGE: MessageTypes.MESSAGE_INITIATOR,\n    CLOSE: MessageTypes.CLOSE_INITIATOR,\n    RESET: MessageTypes.RESET_INITIATOR\n});\nexport const ReceiverMessageTypes = Object.freeze({\n    MESSAGE: MessageTypes.MESSAGE_RECEIVER,\n    CLOSE: MessageTypes.CLOSE_RECEIVER,\n    RESET: MessageTypes.RESET_RECEIVER\n});\n//# sourceMappingURL=message-types.js.map","import { Uint8ArrayList } from 'uint8arraylist';\nimport { MessageTypeNames, MessageTypes } from './message-types.js';\nexport const MAX_MSG_SIZE = 1 << 20; // 1MB\nexport const MAX_MSG_QUEUE_SIZE = 4 << 20; // 4MB\nexport class Decoder {\n    _buffer;\n    _headerInfo;\n    _maxMessageSize;\n    _maxUnprocessedMessageQueueSize;\n    constructor(maxMessageSize = MAX_MSG_SIZE, maxUnprocessedMessageQueueSize = MAX_MSG_QUEUE_SIZE) {\n        this._buffer = new Uint8ArrayList();\n        this._headerInfo = null;\n        this._maxMessageSize = maxMessageSize;\n        this._maxUnprocessedMessageQueueSize = maxUnprocessedMessageQueueSize;\n    }\n    write(chunk) {\n        if (chunk == null || chunk.length === 0) {\n            return [];\n        }\n        this._buffer.append(chunk);\n        if (this._buffer.byteLength > this._maxUnprocessedMessageQueueSize) {\n            throw Object.assign(new Error('unprocessed message queue size too large!'), { code: 'ERR_MSG_QUEUE_TOO_BIG' });\n        }\n        const msgs = [];\n        while (this._buffer.length !== 0) {\n            if (this._headerInfo == null) {\n                try {\n                    this._headerInfo = this._decodeHeader(this._buffer);\n                }\n                catch (err) {\n                    if (err.code === 'ERR_MSG_TOO_BIG') {\n                        throw err;\n                    }\n                    break; // We haven't received enough data yet\n                }\n            }\n            const { id, type, length, offset } = this._headerInfo;\n            const bufferedDataLength = this._buffer.length - offset;\n            if (bufferedDataLength < length) {\n                break; // not enough data yet\n            }\n            const msg = {\n                id,\n                type\n            };\n            if (type === MessageTypes.NEW_STREAM || type === MessageTypes.MESSAGE_INITIATOR || type === MessageTypes.MESSAGE_RECEIVER) {\n                msg.data = this._buffer.sublist(offset, offset + length);\n            }\n            msgs.push(msg);\n            this._buffer.consume(offset + length);\n            this._headerInfo = null;\n        }\n        return msgs;\n    }\n    /**\n     * Attempts to decode the message header from the buffer\n     */\n    _decodeHeader(data) {\n        const { value: h, offset } = readVarInt(data);\n        const { value: length, offset: end } = readVarInt(data, offset);\n        const type = h & 7;\n        // @ts-expect-error h is a number not a CODE\n        if (MessageTypeNames[type] == null) {\n            throw new Error(`Invalid type received: ${type}`);\n        }\n        // test message type varint + data length\n        if (length > this._maxMessageSize) {\n            throw Object.assign(new Error('message size too large!'), { code: 'ERR_MSG_TOO_BIG' });\n        }\n        // @ts-expect-error h is a number not a CODE\n        return { id: h >> 3, type, offset: offset + end, length };\n    }\n}\nconst MSB = 0x80;\nconst REST = 0x7F;\nfunction readVarInt(buf, offset = 0) {\n    let res = 0;\n    let shift = 0;\n    let counter = offset;\n    let b;\n    const l = buf.length;\n    do {\n        if (counter >= l || shift > 49) {\n            offset = 0;\n            throw new RangeError('Could not decode varint');\n        }\n        b = buf.get(counter++);\n        res += shift < 28\n            ? (b & REST) << shift\n            : (b & REST) * Math.pow(2, shift);\n        shift += 7;\n    } while (b >= MSB);\n    offset = counter - offset;\n    return {\n        value: res,\n        offset\n    };\n}\n//# sourceMappingURL=decode.js.map","import * as varint from 'uint8-varint';\nimport { Uint8ArrayList } from 'uint8arraylist';\nimport { allocUnsafe } from 'uint8arrays/alloc';\nimport { MessageTypes } from './message-types.js';\nconst POOL_SIZE = 10 * 1024;\nclass Encoder {\n    _pool;\n    _poolOffset;\n    constructor() {\n        this._pool = allocUnsafe(POOL_SIZE);\n        this._poolOffset = 0;\n    }\n    /**\n     * Encodes the given message and adds it to the passed list\n     */\n    write(msg, list) {\n        const pool = this._pool;\n        let offset = this._poolOffset;\n        varint.encode(msg.id << 3 | msg.type, pool, offset);\n        offset += varint.encodingLength(msg.id << 3 | msg.type);\n        if ((msg.type === MessageTypes.NEW_STREAM || msg.type === MessageTypes.MESSAGE_INITIATOR || msg.type === MessageTypes.MESSAGE_RECEIVER) && msg.data != null) {\n            varint.encode(msg.data.length, pool, offset);\n            offset += varint.encodingLength(msg.data.length);\n        }\n        else {\n            varint.encode(0, pool, offset);\n            offset += varint.encodingLength(0);\n        }\n        const header = pool.subarray(this._poolOffset, offset);\n        if (POOL_SIZE - offset < 100) {\n            this._pool = allocUnsafe(POOL_SIZE);\n            this._poolOffset = 0;\n        }\n        else {\n            this._poolOffset = offset;\n        }\n        list.append(header);\n        if ((msg.type === MessageTypes.NEW_STREAM || msg.type === MessageTypes.MESSAGE_INITIATOR || msg.type === MessageTypes.MESSAGE_RECEIVER) && msg.data != null) {\n            list.append(msg.data);\n        }\n    }\n}\nconst encoder = new Encoder();\n/**\n * Encode and yield one or more messages\n */\nexport async function* encode(source) {\n    for await (const message of source) {\n        const list = new Uint8ArrayList();\n        encoder.write(message, list);\n        yield list;\n    }\n}\n//# sourceMappingURL=encode.js.map","import { CodeError } from '@libp2p/interface';\nimport { pushable } from 'it-pushable';\nimport defer, {} from 'p-defer';\nimport pDefer from 'p-defer';\nimport { raceSignal } from 'race-signal';\nimport { Uint8ArrayList } from 'uint8arraylist';\nimport { closeSource } from './close-source.js';\nconst ERR_STREAM_RESET = 'ERR_STREAM_RESET';\nconst ERR_SINK_INVALID_STATE = 'ERR_SINK_INVALID_STATE';\nconst DEFAULT_SEND_CLOSE_WRITE_TIMEOUT = 5000;\nfunction isPromise(thing) {\n    if (thing == null) {\n        return false;\n    }\n    return typeof thing.then === 'function' &&\n        typeof thing.catch === 'function' &&\n        typeof thing.finally === 'function';\n}\nexport class AbstractStream {\n    id;\n    direction;\n    timeline;\n    protocol;\n    metadata;\n    source;\n    status;\n    readStatus;\n    writeStatus;\n    log;\n    sinkController;\n    sinkEnd;\n    closed;\n    endErr;\n    streamSource;\n    onEnd;\n    onCloseRead;\n    onCloseWrite;\n    onReset;\n    onAbort;\n    sendCloseWriteTimeout;\n    sendingData;\n    constructor(init) {\n        this.sinkController = new AbortController();\n        this.sinkEnd = defer();\n        this.closed = defer();\n        this.log = init.log;\n        // stream status\n        this.status = 'open';\n        this.readStatus = 'ready';\n        this.writeStatus = 'ready';\n        this.id = init.id;\n        this.metadata = init.metadata ?? {};\n        this.direction = init.direction;\n        this.timeline = {\n            open: Date.now()\n        };\n        this.sendCloseWriteTimeout = init.sendCloseWriteTimeout ?? DEFAULT_SEND_CLOSE_WRITE_TIMEOUT;\n        this.onEnd = init.onEnd;\n        this.onCloseRead = init?.onCloseRead;\n        this.onCloseWrite = init?.onCloseWrite;\n        this.onReset = init?.onReset;\n        this.onAbort = init?.onAbort;\n        this.source = this.streamSource = pushable({\n            onEnd: (err) => {\n                if (err != null) {\n                    this.log.trace('source ended with error', err);\n                }\n                else {\n                    this.log.trace('source ended');\n                }\n                this.onSourceEnd(err);\n            }\n        });\n        // necessary because the libp2p upgrader wraps the sink function\n        this.sink = this.sink.bind(this);\n    }\n    async sink(source) {\n        if (this.writeStatus !== 'ready') {\n            throw new CodeError(`writable end state is \"${this.writeStatus}\" not \"ready\"`, ERR_SINK_INVALID_STATE);\n        }\n        try {\n            this.writeStatus = 'writing';\n            const options = {\n                signal: this.sinkController.signal\n            };\n            if (this.direction === 'outbound') { // If initiator, open a new stream\n                const res = this.sendNewStream(options);\n                if (isPromise(res)) {\n                    await res;\n                }\n            }\n            const abortListener = () => {\n                closeSource(source, this.log);\n            };\n            try {\n                this.sinkController.signal.addEventListener('abort', abortListener);\n                this.log.trace('sink reading from source');\n                for await (let data of source) {\n                    data = data instanceof Uint8Array ? new Uint8ArrayList(data) : data;\n                    const res = this.sendData(data, options);\n                    if (isPromise(res)) {\n                        this.sendingData = pDefer();\n                        await res;\n                        this.sendingData.resolve();\n                        this.sendingData = undefined;\n                    }\n                }\n            }\n            finally {\n                this.sinkController.signal.removeEventListener('abort', abortListener);\n            }\n            this.log.trace('sink finished reading from source, write status is \"%s\"', this.writeStatus);\n            if (this.writeStatus === 'writing') {\n                this.writeStatus = 'closing';\n                this.log.trace('send close write to remote');\n                await this.sendCloseWrite({\n                    signal: AbortSignal.timeout(this.sendCloseWriteTimeout)\n                });\n                this.writeStatus = 'closed';\n            }\n            this.onSinkEnd();\n        }\n        catch (err) {\n            this.log.trace('sink ended with error, calling abort with error', err);\n            this.abort(err);\n            throw err;\n        }\n        finally {\n            this.log.trace('resolve sink end');\n            this.sinkEnd.resolve();\n        }\n    }\n    onSourceEnd(err) {\n        if (this.timeline.closeRead != null) {\n            return;\n        }\n        this.timeline.closeRead = Date.now();\n        this.readStatus = 'closed';\n        if (err != null && this.endErr == null) {\n            this.endErr = err;\n        }\n        this.onCloseRead?.();\n        if (this.timeline.closeWrite != null) {\n            this.log.trace('source and sink ended');\n            this.timeline.close = Date.now();\n            if (this.status !== 'aborted' && this.status !== 'reset') {\n                this.status = 'closed';\n            }\n            if (this.onEnd != null) {\n                this.onEnd(this.endErr);\n            }\n            this.closed.resolve();\n        }\n        else {\n            this.log.trace('source ended, waiting for sink to end');\n        }\n    }\n    onSinkEnd(err) {\n        if (this.timeline.closeWrite != null) {\n            return;\n        }\n        this.timeline.closeWrite = Date.now();\n        this.writeStatus = 'closed';\n        if (err != null && this.endErr == null) {\n            this.endErr = err;\n        }\n        this.onCloseWrite?.();\n        if (this.timeline.closeRead != null) {\n            this.log.trace('sink and source ended');\n            this.timeline.close = Date.now();\n            if (this.status !== 'aborted' && this.status !== 'reset') {\n                this.status = 'closed';\n            }\n            if (this.onEnd != null) {\n                this.onEnd(this.endErr);\n            }\n            this.closed.resolve();\n        }\n        else {\n            this.log.trace('sink ended, waiting for source to end');\n        }\n    }\n    // Close for both Reading and Writing\n    async close(options) {\n        this.log.trace('closing gracefully');\n        this.status = 'closing';\n        // wait for read and write ends to close\n        await raceSignal(Promise.all([\n            this.closeWrite(options),\n            this.closeRead(options),\n            this.closed.promise\n        ]), options?.signal);\n        this.status = 'closed';\n        this.log.trace('closed gracefully');\n    }\n    async closeRead(options = {}) {\n        if (this.readStatus === 'closing' || this.readStatus === 'closed') {\n            return;\n        }\n        this.log.trace('closing readable end of stream with starting read status \"%s\"', this.readStatus);\n        const readStatus = this.readStatus;\n        this.readStatus = 'closing';\n        if (this.status !== 'reset' && this.status !== 'aborted' && this.timeline.closeRead == null) {\n            this.log.trace('send close read to remote');\n            await this.sendCloseRead(options);\n        }\n        if (readStatus === 'ready') {\n            this.log.trace('ending internal source queue with %d queued bytes', this.streamSource.readableLength);\n            this.streamSource.end();\n        }\n        this.log.trace('closed readable end of stream');\n    }\n    async closeWrite(options = {}) {\n        if (this.writeStatus === 'closing' || this.writeStatus === 'closed') {\n            return;\n        }\n        this.log.trace('closing writable end of stream with starting write status \"%s\"', this.writeStatus);\n        if (this.writeStatus === 'ready') {\n            this.log.trace('sink was never sunk, sink an empty array');\n            await raceSignal(this.sink([]), options.signal);\n        }\n        if (this.writeStatus === 'writing') {\n            // try to let sending outgoing data succeed\n            if (this.sendingData != null) {\n                await raceSignal(this.sendingData.promise, options.signal);\n            }\n            // stop reading from the source passed to `.sink`\n            this.log.trace('aborting source passed to .sink');\n            this.sinkController.abort();\n            await raceSignal(this.sinkEnd.promise, options.signal);\n        }\n        this.writeStatus = 'closed';\n        this.log.trace('closed writable end of stream');\n    }\n    /**\n     * Close immediately for reading and writing and send a reset message (local\n     * error)\n     */\n    abort(err) {\n        if (this.status === 'closed' || this.status === 'aborted' || this.status === 'reset') {\n            return;\n        }\n        this.log('abort with error', err);\n        // try to send a reset message\n        this.log('try to send reset to remote');\n        const res = this.sendReset();\n        if (isPromise(res)) {\n            res.catch((err) => {\n                this.log.error('error sending reset message', err);\n            });\n        }\n        this.status = 'aborted';\n        this.timeline.abort = Date.now();\n        this._closeSinkAndSource(err);\n        this.onAbort?.(err);\n    }\n    /**\n     * Receive a reset message - close immediately for reading and writing (remote\n     * error)\n     */\n    reset() {\n        if (this.status === 'closed' || this.status === 'aborted' || this.status === 'reset') {\n            return;\n        }\n        const err = new CodeError('stream reset', ERR_STREAM_RESET);\n        this.status = 'reset';\n        this.timeline.reset = Date.now();\n        this._closeSinkAndSource(err);\n        this.onReset?.();\n    }\n    _closeSinkAndSource(err) {\n        this._closeSink(err);\n        this._closeSource(err);\n    }\n    _closeSink(err) {\n        // if the sink function is running, cause it to end\n        if (this.writeStatus === 'writing') {\n            this.log.trace('end sink source');\n            this.sinkController.abort();\n        }\n        this.onSinkEnd(err);\n    }\n    _closeSource(err) {\n        // if the source is not ending, end it\n        if (this.readStatus !== 'closing' && this.readStatus !== 'closed') {\n            this.log.trace('ending source with %d bytes to be read by consumer', this.streamSource.readableLength);\n            this.readStatus = 'closing';\n            this.streamSource.end(err);\n        }\n    }\n    /**\n     * The remote closed for writing so we should expect to receive no more\n     * messages\n     */\n    remoteCloseWrite() {\n        if (this.readStatus === 'closing' || this.readStatus === 'closed') {\n            this.log('received remote close write but local source is already closed');\n            return;\n        }\n        this.log.trace('remote close write');\n        this._closeSource();\n    }\n    /**\n     * The remote closed for reading so we should not send any more\n     * messages\n     */\n    remoteCloseRead() {\n        if (this.writeStatus === 'closing' || this.writeStatus === 'closed') {\n            this.log('received remote close read but local sink is already closed');\n            return;\n        }\n        this.log.trace('remote close read');\n        this._closeSink();\n    }\n    /**\n     * The underlying muxer has closed, no more messages can be sent or will\n     * be received, close immediately to free up resources\n     */\n    destroy() {\n        if (this.status === 'closed' || this.status === 'aborted' || this.status === 'reset') {\n            this.log('received destroy but we are already closed');\n            return;\n        }\n        this.log.trace('stream destroyed');\n        this._closeSinkAndSource();\n    }\n    /**\n     * When an extending class reads data from it's implementation-specific source,\n     * call this method to allow the stream consumer to read the data.\n     */\n    sourcePush(data) {\n        this.streamSource.push(data);\n    }\n    /**\n     * Returns the amount of unread data - can be used to prevent large amounts of\n     * data building up when the stream consumer is too slow.\n     */\n    sourceReadableLength() {\n        return this.streamSource.readableLength;\n    }\n}\n//# sourceMappingURL=abstract-stream.js.map","import { AbstractStream } from '@libp2p/utils/abstract-stream';\nimport { Uint8ArrayList } from 'uint8arraylist';\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string';\nimport { MAX_MSG_SIZE } from './decode.js';\nimport { InitiatorMessageTypes, ReceiverMessageTypes } from './message-types.js';\nexport class MplexStream extends AbstractStream {\n    name;\n    streamId;\n    send;\n    types;\n    maxDataSize;\n    constructor(init) {\n        super(init);\n        this.types = init.direction === 'outbound' ? InitiatorMessageTypes : ReceiverMessageTypes;\n        this.send = init.send;\n        this.name = init.name;\n        this.streamId = init.streamId;\n        this.maxDataSize = init.maxDataSize;\n    }\n    async sendNewStream() {\n        await this.send({ id: this.streamId, type: InitiatorMessageTypes.NEW_STREAM, data: new Uint8ArrayList(uint8ArrayFromString(this.name)) });\n    }\n    async sendData(data) {\n        data = data.sublist();\n        while (data.byteLength > 0) {\n            const toSend = Math.min(data.byteLength, this.maxDataSize);\n            await this.send({\n                id: this.streamId,\n                type: this.types.MESSAGE,\n                data: data.sublist(0, toSend)\n            });\n            data.consume(toSend);\n        }\n    }\n    async sendReset() {\n        await this.send({ id: this.streamId, type: this.types.RESET });\n    }\n    async sendCloseWrite() {\n        await this.send({ id: this.streamId, type: this.types.CLOSE });\n    }\n    async sendCloseRead() {\n        // mplex does not support close read, only close write\n    }\n}\nexport function createStream(options) {\n    const { id, name, send, onEnd, type = 'initiator', maxMsgSize = MAX_MSG_SIZE } = options;\n    return new MplexStream({\n        id: type === 'initiator' ? (`i${id}`) : `r${id}`,\n        streamId: id,\n        name: `${name ?? id}`,\n        direction: type === 'initiator' ? 'outbound' : 'inbound',\n        maxDataSize: maxMsgSize,\n        onEnd,\n        send,\n        log: options.logger.forComponent(`libp2p:mplex:stream:${type}:${id}`)\n    });\n}\n//# sourceMappingURL=stream.js.map","import { CodeError } from '@libp2p/interface';\nimport { closeSource } from '@libp2p/utils/close-source';\nimport { RateLimiter } from '@libp2p/utils/rate-limiter';\nimport { pipe } from 'it-pipe';\nimport { pushable } from 'it-pushable';\nimport { toString as uint8ArrayToString } from 'uint8arrays';\nimport { Decoder } from './decode.js';\nimport { encode } from './encode.js';\nimport { MessageTypes, MessageTypeNames } from './message-types.js';\nimport { createStream } from './stream.js';\nconst MAX_STREAMS_INBOUND_STREAMS_PER_CONNECTION = 1024;\nconst MAX_STREAMS_OUTBOUND_STREAMS_PER_CONNECTION = 1024;\nconst MAX_STREAM_BUFFER_SIZE = 1024 * 1024 * 4; // 4MB\nconst DISCONNECT_THRESHOLD = 5;\nconst CLOSE_TIMEOUT = 500;\nfunction printMessage(msg) {\n    const output = {\n        ...msg,\n        type: `${MessageTypeNames[msg.type]} (${msg.type})`\n    };\n    if (msg.type === MessageTypes.NEW_STREAM) {\n        output.data = uint8ArrayToString(msg.data instanceof Uint8Array ? msg.data : msg.data.subarray());\n    }\n    if (msg.type === MessageTypes.MESSAGE_INITIATOR || msg.type === MessageTypes.MESSAGE_RECEIVER) {\n        output.data = uint8ArrayToString(msg.data instanceof Uint8Array ? msg.data : msg.data.subarray(), 'base16');\n    }\n    return output;\n}\nexport class MplexStreamMuxer {\n    protocol = '/mplex/6.7.0';\n    sink;\n    source;\n    log;\n    _streamId;\n    _streams;\n    _init;\n    _source;\n    closeController;\n    rateLimiter;\n    closeTimeout;\n    logger;\n    constructor(components, init) {\n        init = init ?? {};\n        this.log = components.logger.forComponent('libp2p:mplex');\n        this.logger = components.logger;\n        this._streamId = 0;\n        this._streams = {\n            /**\n             * Stream to ids map\n             */\n            initiators: new Map(),\n            /**\n             * Stream to ids map\n             */\n            receivers: new Map()\n        };\n        this._init = init;\n        this.closeTimeout = init.closeTimeout ?? CLOSE_TIMEOUT;\n        /**\n         * An iterable sink\n         */\n        this.sink = this._createSink();\n        /**\n         * An iterable source\n         */\n        this._source = pushable({\n            objectMode: true,\n            onEnd: () => {\n                // the source has ended, we can't write any more messages to gracefully\n                // close streams so all we can do is destroy them\n                for (const stream of this._streams.initiators.values()) {\n                    stream.destroy();\n                }\n                for (const stream of this._streams.receivers.values()) {\n                    stream.destroy();\n                }\n            }\n        });\n        this.source = pipe(this._source, source => encode(source));\n        /**\n         * Close controller\n         */\n        this.closeController = new AbortController();\n        this.rateLimiter = new RateLimiter({\n            points: init.disconnectThreshold ?? DISCONNECT_THRESHOLD,\n            duration: 1\n        });\n    }\n    /**\n     * Returns a Map of streams and their ids\n     */\n    get streams() {\n        // Inbound and Outbound streams may have the same ids, so we need to make those unique\n        const streams = [];\n        for (const stream of this._streams.initiators.values()) {\n            streams.push(stream);\n        }\n        for (const stream of this._streams.receivers.values()) {\n            streams.push(stream);\n        }\n        return streams;\n    }\n    /**\n     * Initiate a new stream with the given name. If no name is\n     * provided, the id of the stream will be used.\n     */\n    newStream(name) {\n        if (this.closeController.signal.aborted) {\n            throw new Error('Muxer already closed');\n        }\n        const id = this._streamId++;\n        name = name == null ? id.toString() : name.toString();\n        const registry = this._streams.initiators;\n        return this._newStream({ id, name, type: 'initiator', registry });\n    }\n    /**\n     * Close or abort all tracked streams and stop the muxer\n     */\n    async close(options) {\n        if (this.closeController.signal.aborted) {\n            return;\n        }\n        const signal = options?.signal ?? AbortSignal.timeout(this.closeTimeout);\n        try {\n            // try to gracefully close all streams\n            await Promise.all(this.streams.map(async (s) => s.close({\n                signal\n            })));\n            this._source.end();\n            // try to gracefully close the muxer\n            await this._source.onEmpty({\n                signal\n            });\n            this.closeController.abort();\n        }\n        catch (err) {\n            this.abort(err);\n        }\n    }\n    abort(err) {\n        if (this.closeController.signal.aborted) {\n            return;\n        }\n        this.streams.forEach(s => { s.abort(err); });\n        this.closeController.abort(err);\n    }\n    /**\n     * Called whenever an inbound stream is created\n     */\n    _newReceiverStream(options) {\n        const { id, name } = options;\n        const registry = this._streams.receivers;\n        return this._newStream({ id, name, type: 'receiver', registry });\n    }\n    _newStream(options) {\n        const { id, name, type, registry } = options;\n        this.log('new %s stream %s', type, id);\n        if (type === 'initiator' && this._streams.initiators.size === (this._init.maxOutboundStreams ?? MAX_STREAMS_OUTBOUND_STREAMS_PER_CONNECTION)) {\n            throw new CodeError('Too many outbound streams open', 'ERR_TOO_MANY_OUTBOUND_STREAMS');\n        }\n        if (registry.has(id)) {\n            throw new Error(`${type} stream ${id} already exists!`);\n        }\n        const send = async (msg) => {\n            if (this.log.enabled) {\n                this.log.trace('%s stream %s send', type, id, printMessage(msg));\n            }\n            this._source.push(msg);\n        };\n        const onEnd = () => {\n            this.log('%s stream with id %s and protocol %s ended', type, id, stream.protocol);\n            registry.delete(id);\n            if (this._init.onStreamEnd != null) {\n                this._init.onStreamEnd(stream);\n            }\n        };\n        const stream = createStream({ id, name, send, type, onEnd, maxMsgSize: this._init.maxMsgSize, logger: this.logger });\n        registry.set(id, stream);\n        return stream;\n    }\n    /**\n     * Creates a sink with an abortable source. Incoming messages will\n     * also have their size restricted. All messages will be varint decoded.\n     */\n    _createSink() {\n        const sink = async (source) => {\n            const abortListener = () => {\n                closeSource(source, this.log);\n            };\n            this.closeController.signal.addEventListener('abort', abortListener);\n            try {\n                const decoder = new Decoder(this._init.maxMsgSize, this._init.maxUnprocessedMessageQueueSize);\n                for await (const chunk of source) {\n                    for (const msg of decoder.write(chunk)) {\n                        await this._handleIncoming(msg);\n                    }\n                }\n                this._source.end();\n            }\n            catch (err) {\n                this.log('error in sink', err);\n                this._source.end(err); // End the source with an error\n            }\n            finally {\n                this.closeController.signal.removeEventListener('abort', abortListener);\n            }\n        };\n        return sink;\n    }\n    async _handleIncoming(message) {\n        const { id, type } = message;\n        if (this.log.enabled) {\n            this.log.trace('incoming message', printMessage(message));\n        }\n        // Create a new stream?\n        if (message.type === MessageTypes.NEW_STREAM) {\n            if (this._streams.receivers.size === (this._init.maxInboundStreams ?? MAX_STREAMS_INBOUND_STREAMS_PER_CONNECTION)) {\n                this.log('too many inbound streams open');\n                // not going to allow this stream, send the reset message manually\n                // instead of setting it up just to tear it down\n                this._source.push({\n                    id,\n                    type: MessageTypes.RESET_RECEIVER\n                });\n                // if we've hit our stream limit, and the remote keeps trying to open\n                // more new streams, if they are doing this very quickly maybe they\n                // are attacking us and we should close the connection\n                try {\n                    await this.rateLimiter.consume('new-stream', 1);\n                }\n                catch {\n                    this.log('rate limit hit when opening too many new streams over the inbound stream limit - closing remote connection');\n                    // since there's no backpressure in mplex, the only thing we can really do to protect ourselves is close the connection\n                    this.abort(new Error('Too many open streams'));\n                    return;\n                }\n                return;\n            }\n            const stream = this._newReceiverStream({ id, name: uint8ArrayToString(message.data instanceof Uint8Array ? message.data : message.data.subarray()) });\n            if (this._init.onIncomingStream != null) {\n                this._init.onIncomingStream(stream);\n            }\n            return;\n        }\n        const list = (type & 1) === 1 ? this._streams.initiators : this._streams.receivers;\n        const stream = list.get(id);\n        if (stream == null) {\n            this.log('missing stream %s for message type %s', id, MessageTypeNames[type]);\n            // if the remote keeps sending us messages for streams that have been\n            // closed or were never opened they may be attacking us so if they do\n            // this very quickly all we can do is close the connection\n            try {\n                await this.rateLimiter.consume('missing-stream', 1);\n            }\n            catch {\n                this.log('rate limit hit when receiving messages for streams that do not exist - closing remote connection');\n                // since there's no backpressure in mplex, the only thing we can really do to protect ourselves is close the connection\n                this.abort(new Error('Too many messages for missing streams'));\n                return;\n            }\n            return;\n        }\n        const maxBufferSize = this._init.maxStreamBufferSize ?? MAX_STREAM_BUFFER_SIZE;\n        try {\n            switch (type) {\n                case MessageTypes.MESSAGE_INITIATOR:\n                case MessageTypes.MESSAGE_RECEIVER:\n                    if (stream.sourceReadableLength() > maxBufferSize) {\n                        // Stream buffer has got too large, reset the stream\n                        this._source.push({\n                            id: message.id,\n                            type: type === MessageTypes.MESSAGE_INITIATOR ? MessageTypes.RESET_RECEIVER : MessageTypes.RESET_INITIATOR\n                        });\n                        // Inform the stream consumer they are not fast enough\n                        throw new CodeError('Input buffer full - increase Mplex maxBufferSize to accommodate slow consumers', 'ERR_STREAM_INPUT_BUFFER_FULL');\n                    }\n                    // We got data from the remote, push it into our local stream\n                    stream.sourcePush(message.data);\n                    break;\n                case MessageTypes.CLOSE_INITIATOR:\n                case MessageTypes.CLOSE_RECEIVER:\n                    // The remote has stopped writing, so we can stop reading\n                    stream.remoteCloseWrite();\n                    break;\n                case MessageTypes.RESET_INITIATOR:\n                case MessageTypes.RESET_RECEIVER:\n                    // The remote has errored, stop reading and writing to the stream immediately\n                    stream.reset();\n                    break;\n                default:\n                    this.log('unknown message type %s', type);\n            }\n        }\n        catch (err) {\n            this.log.error('error while processing message', err);\n            stream.abort(err);\n        }\n    }\n}\n//# sourceMappingURL=mplex.js.map","/**\n * @packageDocumentation\n *\n * This is a [simple stream multiplexer(https://docs.libp2p.io/concepts/multiplex/mplex/) that has been deprecated.\n *\n * Please use [@chainsafe/libp2p-yamux](https://www.npmjs.com/package/@chainsafe/libp2p-yamux) instead.\n *\n * @example\n *\n * ```TypeScript\n * import { mplex } from '@libp2p/mplex'\n * import { pipe } from 'it-pipe'\n *\n * const factory = mplex()\n *\n * const muxer = factory.createStreamMuxer(components, {\n *   onStream: stream => { // Receive a duplex stream from the remote\n *     // ...receive data from the remote and optionally send data back\n *   },\n *   onStreamEnd: stream => {\n *     // ...handle any tracking you may need of stream closures\n *   }\n * })\n *\n * pipe(conn, muxer, conn) // conn is duplex connection to another peer\n *\n * const stream = muxer.newStream() // Create a new duplex stream to the remote\n *\n * // Use the duplex stream to send some data to the remote...\n * pipe([1, 2, 3], stream)\n * ```\n */\nimport { serviceCapabilities } from '@libp2p/interface';\nimport { MplexStreamMuxer } from './mplex.js';\nclass Mplex {\n    protocol = '/mplex/6.7.0';\n    _init;\n    components;\n    constructor(components, init = {}) {\n        this.components = components;\n        this._init = init;\n    }\n    [Symbol.toStringTag] = '@libp2p/mplex';\n    [serviceCapabilities] = [\n        '@libp2p/stream-multiplexing'\n    ];\n    createStreamMuxer(init = {}) {\n        return new MplexStreamMuxer(this.components, {\n            ...init,\n            ...this._init\n        });\n    }\n}\nexport function mplex(init = {}) {\n    return (components) => new Mplex(components, init);\n}\n//# sourceMappingURL=index.js.map","/**\n * @packageDocumentation\n *\n * Return the first value in an (async)iterable\n *\n * @example\n *\n * ```javascript\n * import first from 'it-first'\n *\n * // This can also be an iterator, generator, etc\n * const values = [0, 1, 2, 3, 4]\n *\n * const res = first(values)\n *\n * console.info(res) // 0\n * ```\n *\n * Async sources must be awaited:\n *\n * ```javascript\n * import first from 'it-first'\n *\n * const values = async function * () {\n *   yield * [0, 1, 2, 3, 4]\n * }\n *\n * const res = await first(values())\n *\n * console.info(res) // 0\n * ```\n */\nfunction isAsyncIterable(thing) {\n    return thing[Symbol.asyncIterator] != null;\n}\nfunction first(source) {\n    if (isAsyncIterable(source)) {\n        return (async () => {\n            for await (const entry of source) { // eslint-disable-line no-unreachable-loop\n                return entry;\n            }\n            return undefined;\n        })();\n    }\n    for (const entry of source) { // eslint-disable-line no-unreachable-loop\n        return entry;\n    }\n    return undefined;\n}\nexport default first;\n//# sourceMappingURL=index.js.map","export const PING_PROTOCOL = '/ipfs/ping/1.0.0';\nexport const PING_LENGTH = 32;\nexport const PROTOCOL_VERSION = '1.0.0';\nexport const PROTOCOL_NAME = 'ping';\nexport const PROTOCOL_PREFIX = 'ipfs';\nexport const TIMEOUT = 10000;\n// See https://github.com/libp2p/specs/blob/d4b5fb0152a6bb86cfd9ea/ping/ping.md?plain=1#L38-L43\n// The dialing peer MUST NOT keep more than one outbound stream for the ping protocol per peer.\n// The listening peer SHOULD accept at most two streams per peer since cross-stream behavior is\n// non-linear and stream writes occur asynchronously. The listening peer may perceive the\n// dialing peer closing and opening the wrong streams (for instance, closing stream B and\n// opening stream A even though the dialing peer is opening stream B and closing stream A).\nexport const MAX_INBOUND_STREAMS = 2;\nexport const MAX_OUTBOUND_STREAMS = 1;\nexport const ERR_WRONG_PING_ACK = 'ERR_WRONG_PING_ACK';\n//# sourceMappingURL=constants.js.map","import { randomBytes } from '@libp2p/crypto';\nimport { CodeError, ERR_INVALID_MESSAGE, ERR_TIMEOUT } from '@libp2p/interface';\nimport first from 'it-first';\nimport { pipe } from 'it-pipe';\nimport { equals as uint8ArrayEquals } from 'uint8arrays/equals';\nimport { PROTOCOL_PREFIX, PROTOCOL_NAME, PING_LENGTH, PROTOCOL_VERSION, TIMEOUT, MAX_INBOUND_STREAMS, MAX_OUTBOUND_STREAMS, ERR_WRONG_PING_ACK } from './constants.js';\nexport class PingService {\n    protocol;\n    components;\n    started;\n    timeout;\n    maxInboundStreams;\n    maxOutboundStreams;\n    runOnTransientConnection;\n    log;\n    constructor(components, init = {}) {\n        this.components = components;\n        this.log = components.logger.forComponent('libp2p:ping');\n        this.started = false;\n        this.protocol = `/${init.protocolPrefix ?? PROTOCOL_PREFIX}/${PROTOCOL_NAME}/${PROTOCOL_VERSION}`;\n        this.timeout = init.timeout ?? TIMEOUT;\n        this.maxInboundStreams = init.maxInboundStreams ?? MAX_INBOUND_STREAMS;\n        this.maxOutboundStreams = init.maxOutboundStreams ?? MAX_OUTBOUND_STREAMS;\n        this.runOnTransientConnection = init.runOnTransientConnection ?? true;\n        this.handleMessage = this.handleMessage.bind(this);\n    }\n    [Symbol.toStringTag] = '@libp2p/ping';\n    async start() {\n        await this.components.registrar.handle(this.protocol, this.handleMessage, {\n            maxInboundStreams: this.maxInboundStreams,\n            maxOutboundStreams: this.maxOutboundStreams,\n            runOnTransientConnection: this.runOnTransientConnection\n        });\n        this.started = true;\n    }\n    async stop() {\n        await this.components.registrar.unhandle(this.protocol);\n        this.started = false;\n    }\n    isStarted() {\n        return this.started;\n    }\n    /**\n     * A handler to register with Libp2p to process ping messages\n     */\n    handleMessage(data) {\n        this.log('incoming ping from %p', data.connection.remotePeer);\n        const { stream } = data;\n        const start = Date.now();\n        const signal = AbortSignal.timeout(this.timeout);\n        signal.addEventListener('abort', () => {\n            stream?.abort(new CodeError('ping timeout', ERR_TIMEOUT));\n        });\n        void pipe(stream, async function* (source) {\n            let received = 0;\n            for await (const buf of source) {\n                received += buf.byteLength;\n                if (received > PING_LENGTH) {\n                    stream?.abort(new CodeError('Too much data received', ERR_INVALID_MESSAGE));\n                    return;\n                }\n                yield buf;\n            }\n        }, stream)\n            .catch(err => {\n            this.log.error('incoming ping from %p failed with error', data.connection.remotePeer, err);\n            stream?.abort(err);\n        })\n            .finally(() => {\n            const ms = Date.now() - start;\n            this.log('incoming ping from %p complete in %dms', data.connection.remotePeer, ms);\n        });\n    }\n    /**\n     * Ping a given peer and wait for its response, getting the operation latency.\n     */\n    async ping(peer, options = {}) {\n        this.log('pinging %p', peer);\n        const start = Date.now();\n        const data = randomBytes(PING_LENGTH);\n        const connection = await this.components.connectionManager.openConnection(peer, options);\n        let stream;\n        let onAbort = () => { };\n        if (options.signal == null) {\n            const signal = AbortSignal.timeout(this.timeout);\n            options = {\n                ...options,\n                signal\n            };\n        }\n        try {\n            stream = await connection.newStream(this.protocol, {\n                ...options,\n                runOnTransientConnection: this.runOnTransientConnection\n            });\n            onAbort = () => {\n                stream?.abort(new CodeError('ping timeout', ERR_TIMEOUT));\n            };\n            // make stream abortable\n            options.signal?.addEventListener('abort', onAbort, { once: true });\n            const result = await pipe([data], stream, async (source) => first(source));\n            const ms = Date.now() - start;\n            if (result == null) {\n                throw new CodeError(`Did not receive a ping ack after ${ms}ms`, ERR_WRONG_PING_ACK);\n            }\n            if (!uint8ArrayEquals(data, result.subarray())) {\n                throw new CodeError(`Received wrong ping ack after ${ms}ms`, ERR_WRONG_PING_ACK);\n            }\n            this.log('ping %p complete in %dms', connection.remotePeer, ms);\n            return ms;\n        }\n        catch (err) {\n            this.log.error('error while pinging %p', connection.remotePeer, err);\n            stream?.abort(err);\n            throw err;\n        }\n        finally {\n            options.signal?.removeEventListener('abort', onAbort);\n            if (stream != null) {\n                await stream.close();\n            }\n        }\n    }\n}\n//# sourceMappingURL=ping.js.map","/**\n * @packageDocumentation\n *\n * The ping service implements the [libp2p ping spec](https://github.com/libp2p/specs/blob/master/ping/ping.md) allowing you to make a latency measurement to a remote peer.\n *\n * @example\n *\n * ```typescript\n * import { createLibp2p } from 'libp2p'\n * import { ping } from '@libp2p/ping'\n * import { multiaddr } from '@multiformats/multiaddr'\n *\n * const node = await createLibp2p({\n *   services: {\n *     ping: ping()\n *   }\n * })\n *\n * const rtt = await node.services.ping.ping(multiaddr('/ip4/...'))\n *\n * console.info(rtt)\n * ```\n */\nimport { PingService as PingServiceClass } from './ping.js';\nexport function ping(init = {}) {\n    return (components) => new PingServiceClass(components, init);\n}\nexport { PING_PROTOCOL } from './constants.js';\n//# sourceMappingURL=index.js.map","export const transportSymbol = Symbol.for('@libp2p/transport');\nexport function isTransport(other) {\n    return other != null && Boolean(other[transportSymbol]);\n}\n/**\n * Enum Transport Manager Fault Tolerance values\n */\nexport var FaultTolerance;\n(function (FaultTolerance) {\n    /**\n     * should be used for failing in any listen circumstance\n     */\n    FaultTolerance[FaultTolerance[\"FATAL_ALL\"] = 0] = \"FATAL_ALL\";\n    /**\n     * should be used for not failing when not listening\n     */\n    FaultTolerance[FaultTolerance[\"NO_FATAL\"] = 1] = \"NO_FATAL\";\n})(FaultTolerance || (FaultTolerance = {}));\n//# sourceMappingURL=index.js.map","/**\n * @packageDocumentation\n *\n * This module allows easy conversion of Multiaddrs to string URIs.\n *\n * @example Converting multiaddrs to string URIs\n *\n * ```js\n * import { multiaddrToUri } from '@multiformats/multiaddr-to-uri'\n *\n * console.log(multiaddrToUri('/dnsaddr/protocol.ai/https'))\n * // -> https://protocol.ai\n *\n * console.log(multiaddrToUri('/ip4/127.0.0.1/tcp/8080'))\n * // -> http://127.0.0.1:8080\n *\n * console.log(multiaddrToUri('/ip4/127.0.0.1/tcp/8080', { assumeHttp: false }))\n * // -> tcp://127.0.0.1:8080\n * ```\n *\n * Note:\n *\n * - When `/tcp` is the last (terminating) protocol HTTP is assumed by default (implicit `assumeHttp: true`)\n *   - this means produced URIs will start with `http://` instead of `tcp://`\n *   - passing `{ assumeHttp: false }` disables this behavior\n * - Might be lossy - e.g. a DNSv6 multiaddr\n * - Can throw if the passed multiaddr:\n *   - is not a valid multiaddr\n *   - is not supported as a URI e.g. circuit\n */\nimport { multiaddr, protocols } from '@multiformats/multiaddr';\nconst ASSUME_HTTP_CODES = [\n    protocols('tcp').code,\n    protocols('dns').code,\n    protocols('dnsaddr').code,\n    protocols('dns4').code,\n    protocols('dns6').code\n];\nfunction extractSNI(ma) {\n    let sniProtoCode;\n    try {\n        sniProtoCode = protocols('sni').code;\n    }\n    catch (e) {\n        // No SNI protocol in multiaddr\n        return null;\n    }\n    for (const [proto, value] of ma) {\n        if (proto === sniProtoCode && value !== undefined) {\n            return value;\n        }\n    }\n    return null;\n}\nfunction hasTLS(ma) {\n    return ma.some(([proto, _]) => proto === protocols('tls').code);\n}\nfunction interpretNext(headProtoCode, headProtoVal, restMa) {\n    const interpreter = interpreters[protocols(headProtoCode).name];\n    if (interpreter === undefined) {\n        throw new Error(`Can't interpret protocol ${protocols(headProtoCode).name}`);\n    }\n    const restVal = interpreter(headProtoVal, restMa);\n    if (headProtoCode === protocols('ip6').code) {\n        return `[${restVal}]`;\n    }\n    return restVal;\n}\nconst interpreters = {\n    ip4: (value, restMa) => value,\n    ip6: (value, restMa) => {\n        if (restMa.length === 0) {\n            return value;\n        }\n        return `[${value}]`;\n    },\n    tcp: (value, restMa) => {\n        const tailProto = restMa.pop();\n        if (tailProto === undefined) {\n            throw new Error('Unexpected end of multiaddr');\n        }\n        return `tcp://${interpretNext(tailProto[0], tailProto[1] ?? '', restMa)}:${value}`;\n    },\n    udp: (value, restMa) => {\n        const tailProto = restMa.pop();\n        if (tailProto === undefined) {\n            throw new Error('Unexpected end of multiaddr');\n        }\n        return `udp://${interpretNext(tailProto[0], tailProto[1] ?? '', restMa)}:${value}`;\n    },\n    dnsaddr: (value, restMa) => value,\n    dns4: (value, restMa) => value,\n    dns6: (value, restMa) => value,\n    dns: (value, restMa) => value,\n    ipfs: (value, restMa) => {\n        const tailProto = restMa.pop();\n        if (tailProto === undefined) {\n            throw new Error('Unexpected end of multiaddr');\n        }\n        return `${interpretNext(tailProto[0], tailProto[1] ?? '', restMa)}/ipfs/${value}`;\n    },\n    p2p: (value, restMa) => {\n        const tailProto = restMa.pop();\n        if (tailProto === undefined) {\n            throw new Error('Unexpected end of multiaddr');\n        }\n        return `${interpretNext(tailProto[0], tailProto[1] ?? '', restMa)}/p2p/${value}`;\n    },\n    http: (value, restMa) => {\n        const maHasTLS = hasTLS(restMa);\n        const sni = extractSNI(restMa);\n        if (maHasTLS && sni !== null) {\n            return `https://${sni}`;\n        }\n        const protocol = maHasTLS ? 'https://' : 'http://';\n        const tailProto = restMa.pop();\n        if (tailProto === undefined) {\n            throw new Error('Unexpected end of multiaddr');\n        }\n        let baseVal = interpretNext(tailProto[0], tailProto[1] ?? '', restMa);\n        // We are reinterpreting the base as http, so we need to remove the tcp:// if it's there\n        baseVal = baseVal.replace('tcp://', '');\n        return `${protocol}${baseVal}`;\n    },\n    'http-path': (value, restMa) => {\n        const tailProto = restMa.pop();\n        if (tailProto === undefined) {\n            throw new Error('Unexpected end of multiaddr');\n        }\n        const baseVal = interpretNext(tailProto[0], tailProto[1] ?? '', restMa);\n        const decodedValue = decodeURIComponent(value);\n        return `${baseVal}/${decodedValue}`;\n    },\n    tls: (value, restMa) => {\n        // Noop, the parent context knows that it's tls. We don't need to do\n        // anything here\n        const tailProto = restMa.pop();\n        if (tailProto === undefined) {\n            throw new Error('Unexpected end of multiaddr');\n        }\n        return interpretNext(tailProto[0], tailProto[1] ?? '', restMa);\n    },\n    sni: (value, restMa) => {\n        // Noop, the parent context uses the sni information, we don't need to do\n        // anything here\n        const tailProto = restMa.pop();\n        if (tailProto === undefined) {\n            throw new Error('Unexpected end of multiaddr');\n        }\n        return interpretNext(tailProto[0], tailProto[1] ?? '', restMa);\n    },\n    https: (value, restMa) => {\n        const tailProto = restMa.pop();\n        if (tailProto === undefined) {\n            throw new Error('Unexpected end of multiaddr');\n        }\n        let baseVal = interpretNext(tailProto[0], tailProto[1] ?? '', restMa);\n        // We are reinterpreting the base as http, so we need to remove the tcp:// if it's there\n        baseVal = baseVal.replace('tcp://', '');\n        return `https://${baseVal}`;\n    },\n    ws: (value, restMa) => {\n        const maHasTLS = hasTLS(restMa);\n        const sni = extractSNI(restMa);\n        if (maHasTLS && sni !== null) {\n            return `wss://${sni}`;\n        }\n        const protocol = maHasTLS ? 'wss://' : 'ws://';\n        const tailProto = restMa.pop();\n        if (tailProto === undefined) {\n            throw new Error('Unexpected end of multiaddr');\n        }\n        let baseVal = interpretNext(tailProto[0], tailProto[1] ?? '', restMa);\n        // We are reinterpreting the base, so we need to remove the tcp:// if it's there\n        baseVal = baseVal.replace('tcp://', '');\n        return `${protocol}${baseVal}`;\n    },\n    wss: (value, restMa) => {\n        const tailProto = restMa.pop();\n        if (tailProto === undefined) {\n            throw new Error('Unexpected end of multiaddr');\n        }\n        let baseVal = interpretNext(tailProto[0], tailProto[1] ?? '', restMa);\n        // We are reinterpreting the base as http, so we need to remove the tcp:// if it's there\n        baseVal = baseVal.replace('tcp://', '');\n        return `wss://${baseVal}`;\n    },\n    'p2p-websocket-star': (value, restMa) => {\n        const tailProto = restMa.pop();\n        if (tailProto === undefined) {\n            throw new Error('Unexpected end of multiaddr');\n        }\n        return `${interpretNext(tailProto[0], tailProto[1] ?? '', restMa)}/p2p-websocket-star`;\n    },\n    'p2p-webrtc-star': (value, restMa) => {\n        const tailProto = restMa.pop();\n        if (tailProto === undefined) {\n            throw new Error('Unexpected end of multiaddr');\n        }\n        return `${interpretNext(tailProto[0], tailProto[1] ?? '', restMa)}/p2p-webrtc-star`;\n    },\n    'p2p-webrtc-direct': (value, restMa) => {\n        const tailProto = restMa.pop();\n        if (tailProto === undefined) {\n            throw new Error('Unexpected end of multiaddr');\n        }\n        return `${interpretNext(tailProto[0], tailProto[1] ?? '', restMa)}/p2p-webrtc-direct`;\n    }\n};\nexport function multiaddrToUri(input, opts) {\n    const ma = multiaddr(input);\n    const parts = ma.stringTuples();\n    const head = parts.pop();\n    if (head === undefined) {\n        throw new Error('Unexpected end of multiaddr');\n    }\n    const protocol = protocols(head[0]);\n    const interpreter = interpreters[protocol.name];\n    if (interpreter == null) {\n        throw new Error(`No interpreter found for ${protocol.name}`);\n    }\n    let uri = interpreter(head[1] ?? '', parts);\n    if (opts?.assumeHttp !== false && ASSUME_HTTP_CODES.includes(head[0])) {\n        // strip any declared protocol\n        uri = uri.replace(/^.*:\\/\\//, '');\n        if (head[1] === '443') {\n            uri = `https://${uri}`;\n        }\n        else {\n            uri = `http://${uri}`;\n        }\n    }\n    if (uri.startsWith('http://') || uri.startsWith('https://')) {\n        // this will strip default ports while keeping paths intact\n        uri = new URL(uri).toString();\n        // strip trailing slash, e.g. http://127.0.0.1/ -> http://127.0.0.1\n        if (uri.endsWith('/')) {\n            uri = uri.substring(0, uri.length - 1);\n        }\n    }\n    return uri;\n}\n//# sourceMappingURL=index.js.map","export default async (socket) => {\n    // if the socket is closing or closed, return end\n    if (socket.readyState >= 2) {\n        throw new Error('socket closed');\n    }\n    // if open, return\n    if (socket.readyState === 1) {\n        return;\n    }\n    await new Promise((resolve, reject) => {\n        function cleanup() {\n            socket.removeEventListener('open', handleOpen);\n            socket.removeEventListener('error', handleErr);\n        }\n        function handleOpen() {\n            cleanup();\n            resolve();\n        }\n        function handleErr(event) {\n            cleanup();\n            reject(event.error ?? new Error(`connect ECONNREFUSED ${socket.url}`));\n        }\n        socket.addEventListener('open', handleOpen);\n        socket.addEventListener('error', handleErr);\n    });\n};\n//# sourceMappingURL=ready.js.map","import ready from './ready.js';\nexport default (socket, options) => {\n    options = options ?? {};\n    options.closeOnEnd = options.closeOnEnd !== false;\n    const sink = async (source) => {\n        for await (const data of source) {\n            try {\n                await ready(socket);\n            }\n            catch (err) {\n                if (err.message === 'socket closed')\n                    break;\n                throw err;\n            }\n            // the ready promise resolved without error but the socket was closing so\n            // exit the loop and don't send data\n            if (socket.readyState === socket.CLOSING || socket.readyState === socket.CLOSED) {\n                break;\n            }\n            socket.send(data);\n        }\n        if (options.closeOnEnd != null && socket.readyState <= 1) {\n            await new Promise((resolve, reject) => {\n                socket.addEventListener('close', event => {\n                    if (event.wasClean || event.code === 1006) {\n                        resolve();\n                    }\n                    else {\n                        const err = Object.assign(new Error('ws error'), { event });\n                        reject(err);\n                    }\n                });\n                setTimeout(() => { socket.close(); });\n            });\n        }\n    };\n    return sink;\n};\n//# sourceMappingURL=sink.js.map","import { EventIterator } from 'event-iterator';\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string';\n// copied from github.com/feross/buffer\n// Some ArrayBuffers are not passing the instanceof check, so we need to do a bit more work :(\nfunction isArrayBuffer(obj) {\n    return (obj instanceof ArrayBuffer) ||\n        (obj?.constructor?.name === 'ArrayBuffer' && typeof obj?.byteLength === 'number');\n}\nexport default (socket) => {\n    socket.binaryType = 'arraybuffer';\n    const connected = async () => {\n        await new Promise((resolve, reject) => {\n            if (isConnected) {\n                resolve();\n                return;\n            }\n            if (connError != null) {\n                reject(connError);\n                return;\n            }\n            const cleanUp = (cont) => {\n                socket.removeEventListener('open', onOpen);\n                socket.removeEventListener('error', onError);\n                cont();\n            };\n            const onOpen = () => { cleanUp(resolve); };\n            const onError = (event) => {\n                cleanUp(() => { reject(event.error ?? new Error(`connect ECONNREFUSED ${socket.url}`)); });\n            };\n            socket.addEventListener('open', onOpen);\n            socket.addEventListener('error', onError);\n        });\n    };\n    const source = (async function* () {\n        const messages = new EventIterator(({ push, stop, fail }) => {\n            const onMessage = (event) => {\n                let data = null;\n                if (typeof event.data === 'string') {\n                    data = uint8ArrayFromString(event.data);\n                }\n                if (isArrayBuffer(event.data)) {\n                    data = new Uint8Array(event.data);\n                }\n                if (event.data instanceof Uint8Array) {\n                    data = event.data;\n                }\n                if (data == null) {\n                    return;\n                }\n                push(data);\n            };\n            const onError = (event) => { fail(event.error ?? new Error('Socket error')); };\n            socket.addEventListener('message', onMessage);\n            socket.addEventListener('error', onError);\n            socket.addEventListener('close', stop);\n            return () => {\n                socket.removeEventListener('message', onMessage);\n                socket.removeEventListener('error', onError);\n                socket.removeEventListener('close', stop);\n            };\n        }, { highWaterMark: Infinity });\n        await connected();\n        for await (const chunk of messages) {\n            yield isArrayBuffer(chunk) ? new Uint8Array(chunk) : chunk;\n        }\n    }());\n    let isConnected = socket.readyState === 1;\n    let connError;\n    socket.addEventListener('open', () => {\n        isConnected = true;\n        connError = null;\n    });\n    socket.addEventListener('close', () => {\n        isConnected = false;\n        connError = null;\n    });\n    socket.addEventListener('error', event => {\n        if (!isConnected) {\n            connError = event.error ?? new Error(`connect ECONNREFUSED ${socket.url}`);\n        }\n    });\n    return Object.assign(source, {\n        connected\n    });\n};\n//# sourceMappingURL=source.js.map","/* eslint-env browser */\nexport default WebSocket;\n//# sourceMappingURL=web-socket.browser.js.map","const map = { 'http:': 'ws:', 'https:': 'wss:' };\nconst defaultProtocol = 'ws:';\nexport default (url, location) => {\n    if (url.startsWith('//')) {\n        url = `${location?.protocol ?? defaultProtocol}${url}`;\n    }\n    if (url.startsWith('/') && location != null) {\n        const proto = location.protocol ?? defaultProtocol;\n        const host = location.host;\n        const port = location.port != null && host?.endsWith(`:${location.port}`) !== true ? `:${location.port}` : '';\n        url = `${proto}//${host}${port}${url}`;\n    }\n    const wsUrl = new URL(url);\n    for (const [httpProto, wsProto] of Object.entries(map)) {\n        if (wsUrl.protocol === httpProto) {\n            wsUrl.protocol = wsProto;\n        }\n    }\n    return wsUrl;\n};\n//# sourceMappingURL=ws-url.js.map","// load websocket library if we are not in the browser\nimport duplex from './duplex.js';\nimport WebSocket from './web-socket.js';\nimport wsurl from './ws-url.js';\nexport function connect(addr, opts) {\n    const location = typeof window === 'undefined' ? undefined : window.location;\n    opts = opts ?? {};\n    const url = wsurl(addr, location);\n    // it's necessary to stringify the URL object otherwise react-native crashes\n    const socket = new WebSocket(url.toString(), opts.websocket);\n    return duplex(socket, opts);\n}\n//# sourceMappingURL=client.js.map","import sink from './sink.js';\nimport source from './source.js';\nexport default (socket, options) => {\n    options = options ?? {};\n    const connectedSource = source(socket);\n    let remoteAddress = options.remoteAddress;\n    let remotePort = options.remotePort;\n    if (socket.url != null) {\n        // only client->server sockets have urls, server->client connections do not\n        try {\n            const url = new URL(socket.url);\n            remoteAddress = url.hostname;\n            remotePort = parseInt(url.port, 10);\n        }\n        catch { }\n    }\n    if (remoteAddress == null || remotePort == null) {\n        throw new Error('Remote connection did not have address and/or port');\n    }\n    const duplex = {\n        sink: sink(socket, options),\n        source: connectedSource,\n        connected: async () => { await connectedSource.connected(); },\n        close: async () => {\n            if (socket.readyState === socket.CONNECTING || socket.readyState === socket.OPEN) {\n                await new Promise((resolve) => {\n                    socket.addEventListener('close', () => {\n                        resolve();\n                    });\n                    socket.close();\n                });\n            }\n        },\n        destroy: () => {\n            if (socket.terminate != null) {\n                socket.terminate();\n            }\n            else {\n                socket.close();\n            }\n        },\n        remoteAddress,\n        remotePort,\n        socket\n    };\n    return duplex;\n};\n//# sourceMappingURL=duplex.js.map","/**\n * An implementation of the ProgressEvent interface, this is essentially\n * a typed `CustomEvent` with a `type` property that lets us disambiguate\n * events passed to `progress` callbacks.\n */\nexport class CustomProgressEvent extends Event {\n    type;\n    detail;\n    constructor(type, detail) {\n        super(type);\n        this.type = type;\n        // @ts-expect-error detail may be undefined\n        this.detail = detail;\n    }\n}\n//# sourceMappingURL=index.js.map","import * as mafmt from '@multiformats/mafmt';\nimport { CODE_CIRCUIT, CODE_P2P, CODE_TCP, CODE_WS, CODE_WSS } from './constants.js';\nexport function all(multiaddrs) {\n    return multiaddrs.filter((ma) => {\n        if (ma.protoCodes().includes(CODE_CIRCUIT)) {\n            return false;\n        }\n        const testMa = ma.decapsulateCode(CODE_P2P);\n        return mafmt.WebSockets.matches(testMa) ||\n            mafmt.WebSocketsSecure.matches(testMa);\n    });\n}\nexport function wss(multiaddrs) {\n    return multiaddrs.filter((ma) => {\n        if (ma.protoCodes().includes(CODE_CIRCUIT)) {\n            return false;\n        }\n        const testMa = ma.decapsulateCode(CODE_P2P);\n        return mafmt.WebSocketsSecure.matches(testMa);\n    });\n}\nexport function dnsWss(multiaddrs) {\n    return multiaddrs.filter((ma) => {\n        if (ma.protoCodes().includes(CODE_CIRCUIT)) {\n            return false;\n        }\n        const testMa = ma.decapsulateCode(CODE_P2P);\n        return mafmt.WebSocketsSecure.matches(testMa) &&\n            mafmt.DNS.matches(testMa.decapsulateCode(CODE_TCP).decapsulateCode(CODE_WSS));\n    });\n}\nexport function dnsWsOrWss(multiaddrs) {\n    return multiaddrs.filter((ma) => {\n        if (ma.protoCodes().includes(CODE_CIRCUIT)) {\n            return false;\n        }\n        const testMa = ma.decapsulateCode(CODE_P2P);\n        // WS\n        if (mafmt.WebSockets.matches(testMa)) {\n            return mafmt.DNS.matches(testMa.decapsulateCode(CODE_TCP).decapsulateCode(CODE_WS));\n        }\n        // WSS\n        return mafmt.WebSocketsSecure.matches(testMa) &&\n            mafmt.DNS.matches(testMa.decapsulateCode(CODE_TCP).decapsulateCode(CODE_WSS));\n    });\n}\n//# sourceMappingURL=filters.js.map","// p2p multi-address code\nexport const CODE_P2P = 421;\nexport const CODE_CIRCUIT = 290;\nexport const CODE_TCP = 6;\nexport const CODE_WS = 477;\nexport const CODE_WSS = 478;\n// Time to wait for a connection to close gracefully before destroying it manually\nexport const CLOSE_TIMEOUT = 500;\n//# sourceMappingURL=constants.js.map","/**\n * @packageDocumentation\n *\n * A [libp2p transport](https://docs.libp2p.io/concepts/transports/overview/) based on [WebSockets](https://developer.mozilla.org/en-US/docs/Web/API/WebSockets_API).\n *\n * @example\n *\n * ```TypeScript\n * import { createLibp2p } from 'libp2p'\n * import { webSockets } from '@libp2p/websockets'\n * import { multiaddr } from '@multiformats/multiaddr'\n *\n * const node = await createLibp2p({\n *   transports: [\n *     webSockets()\n *   ]\n * //... other config\n * })\n * await node.start()\n *\n * const ma = multiaddr('/ip4/127.0.0.1/tcp/9090/ws')\n * await node.dial(ma)\n * ```\n *\n * ## Filters\n *\n * When run in a browser by default this module will only connect to secure web socket addresses.\n *\n * To change this you should pass a filter to the factory function.\n *\n * You can create your own address filters for this transports, or rely in the filters [provided](./src/filters.js).\n *\n * The available filters are:\n *\n * - `filters.all`\n *   - Returns all TCP and DNS based addresses, both with `ws` or `wss`.\n * - `filters.dnsWss`\n *   - Returns all DNS based addresses with `wss`.\n * - `filters.dnsWsOrWss`\n *   - Returns all DNS based addresses, both with `ws` or `wss`.\n *\n * @example Allow dialing insecure WebSockets\n *\n * ```TypeScript\n * import { createLibp2p } from 'libp2p'\n * import { webSockets } from '@libp2p/websockets'\n * import * as filters from '@libp2p/websockets/filters'\n *\n * const node = await createLibp2p({\n *   transports: [\n *     webSockets({\n *       // connect to all sockets, even insecure ones\n *       filter: filters.all\n *     })\n *   ]\n * })\n * ```\n */\nimport { CodeError, transportSymbol, serviceCapabilities } from '@libp2p/interface';\nimport { multiaddrToUri as toUri } from '@multiformats/multiaddr-to-uri';\nimport { connect } from 'it-ws/client';\nimport pDefer from 'p-defer';\nimport { CustomProgressEvent } from 'progress-events';\nimport { raceSignal } from 'race-signal';\nimport { isBrowser, isWebWorker } from 'wherearewe';\nimport * as filters from './filters.js';\nimport { createListener } from './listener.js';\nimport { socketToMaConn } from './socket-to-conn.js';\nclass WebSockets {\n    log;\n    init;\n    logger;\n    metrics;\n    components;\n    constructor(components, init) {\n        this.log = components.logger.forComponent('libp2p:websockets');\n        this.logger = components.logger;\n        this.components = components;\n        this.init = init;\n        if (components.metrics != null) {\n            this.metrics = {\n                dialerEvents: components.metrics.registerCounterGroup('libp2p_websockets_dialer_events_total', {\n                    label: 'event',\n                    help: 'Total count of WebSockets dialer events by type'\n                })\n            };\n        }\n    }\n    [transportSymbol] = true;\n    [Symbol.toStringTag] = '@libp2p/websockets';\n    [serviceCapabilities] = [\n        '@libp2p/transport'\n    ];\n    async dial(ma, options) {\n        this.log('dialing %s', ma);\n        options = options ?? {};\n        const socket = await this._connect(ma, options);\n        const maConn = socketToMaConn(socket, ma, {\n            logger: this.logger,\n            metrics: this.metrics?.dialerEvents\n        });\n        this.log('new outbound connection %s', maConn.remoteAddr);\n        const conn = await options.upgrader.upgradeOutbound(maConn, options);\n        this.log('outbound connection %s upgraded', maConn.remoteAddr);\n        return conn;\n    }\n    async _connect(ma, options) {\n        options?.signal?.throwIfAborted();\n        const cOpts = ma.toOptions();\n        this.log('dialing %s:%s', cOpts.host, cOpts.port);\n        const errorPromise = pDefer();\n        const rawSocket = connect(toUri(ma), this.init);\n        rawSocket.socket.addEventListener('error', () => {\n            // the WebSocket.ErrorEvent type doesn't actually give us any useful\n            // information about what happened\n            // https://developer.mozilla.org/en-US/docs/Web/API/WebSocket/error_event\n            const err = new CodeError(`Could not connect to ${ma.toString()}`, 'ERR_CONNECTION_FAILED');\n            this.log.error('connection error:', err);\n            this.metrics?.dialerEvents.increment({ error: true });\n            errorPromise.reject(err);\n        });\n        try {\n            options.onProgress?.(new CustomProgressEvent('websockets:open-connection'));\n            await raceSignal(Promise.race([rawSocket.connected(), errorPromise.promise]), options.signal);\n        }\n        catch (err) {\n            if (options.signal?.aborted === true) {\n                this.metrics?.dialerEvents.increment({ abort: true });\n            }\n            rawSocket.close()\n                .catch(err => {\n                this.log.error('error closing raw socket', err);\n            });\n            throw err;\n        }\n        this.log('connected %s', ma);\n        this.metrics?.dialerEvents.increment({ connect: true });\n        return rawSocket;\n    }\n    /**\n     * Creates a Websockets listener. The provided `handler` function will be called\n     * anytime a new incoming Connection has been successfully upgraded via\n     * `upgrader.upgradeInbound`\n     */\n    createListener(options) {\n        return createListener({\n            logger: this.logger,\n            metrics: this.components.metrics\n        }, {\n            ...this.init,\n            ...options\n        });\n    }\n    /**\n     * Takes a list of `Multiaddr`s and returns only valid Websockets addresses.\n     * By default, in a browser environment only DNS+WSS multiaddr is accepted,\n     * while in a Node.js environment DNS+{WS, WSS} multiaddrs are accepted.\n     */\n    listenFilter(multiaddrs) {\n        multiaddrs = Array.isArray(multiaddrs) ? multiaddrs : [multiaddrs];\n        if (this.init?.filter != null) {\n            return this.init?.filter(multiaddrs);\n        }\n        // Browser\n        if (isBrowser || isWebWorker) {\n            return filters.wss(multiaddrs);\n        }\n        return filters.all(multiaddrs);\n    }\n    /**\n     * Filter check for all Multiaddrs that this transport can dial\n     */\n    dialFilter(multiaddrs) {\n        return this.listenFilter(multiaddrs);\n    }\n}\nexport function webSockets(init = {}) {\n    return (components) => {\n        return new WebSockets(components, init);\n    };\n}\n//# sourceMappingURL=index.js.map","import { CodeError } from '@libp2p/interface';\nimport { CLOSE_TIMEOUT } from './constants.js';\n// Convert a stream into a MultiaddrConnection\n// https://github.com/libp2p/interface-transport#multiaddrconnection\nexport function socketToMaConn(stream, remoteAddr, options) {\n    const log = options.logger.forComponent('libp2p:websockets:maconn');\n    const metrics = options.metrics;\n    const metricPrefix = options.metricPrefix ?? '';\n    const maConn = {\n        log,\n        async sink(source) {\n            try {\n                await stream.sink((async function* () {\n                    for await (const buf of source) {\n                        if (buf instanceof Uint8Array) {\n                            yield buf;\n                        }\n                        else {\n                            yield buf.subarray();\n                        }\n                    }\n                })());\n            }\n            catch (err) {\n                if (err.type !== 'aborted') {\n                    log.error(err);\n                }\n            }\n        },\n        source: stream.source,\n        remoteAddr,\n        timeline: { open: Date.now() },\n        async close(options = {}) {\n            const start = Date.now();\n            if (options.signal == null) {\n                const signal = AbortSignal.timeout(CLOSE_TIMEOUT);\n                options = {\n                    ...options,\n                    signal\n                };\n            }\n            const listener = () => {\n                const { host, port } = maConn.remoteAddr.toOptions();\n                log('timeout closing stream to %s:%s after %dms, destroying it manually', host, port, Date.now() - start);\n                this.abort(new CodeError('Socket close timeout', 'ERR_SOCKET_CLOSE_TIMEOUT'));\n            };\n            options.signal?.addEventListener('abort', listener);\n            try {\n                await stream.close();\n            }\n            catch (err) {\n                log.error('error closing WebSocket gracefully', err);\n                this.abort(err);\n            }\n            finally {\n                options.signal?.removeEventListener('abort', listener);\n                maConn.timeline.close = Date.now();\n            }\n        },\n        abort(err) {\n            const { host, port } = maConn.remoteAddr.toOptions();\n            log('timeout closing stream to %s:%s due to error', host, port, err);\n            stream.destroy();\n            maConn.timeline.close = Date.now();\n            // ws WebSocket.terminate does not accept an Error arg to emit an 'error'\n            // event on destroy like other node streams so we can't update a metric\n            // with an event listener\n            // https://github.com/websockets/ws/issues/1752#issuecomment-622380981\n            metrics?.increment({ [`${metricPrefix}error`]: true });\n        }\n    };\n    stream.socket.addEventListener('close', () => {\n        metrics?.increment({ [`${metricPrefix}close`]: true });\n        // In instances where `close` was not explicitly called,\n        // such as an iterable stream ending, ensure we have set the close\n        // timeline\n        if (maConn.timeline.close == null) {\n            maConn.timeline.close = Date.now();\n        }\n    }, { once: true });\n    return maConn;\n}\n//# sourceMappingURL=socket-to-conn.js.map","export function createListener() {\n    throw new Error('WebSocket Servers can not be created in the browser!');\n}\n//# sourceMappingURL=listener.browser.js.map","/**\n * Any object that implements this Symbol as a property should return a\n * ContentRouting instance as the property value, similar to how\n * `Symbol.Iterable` can be used to return an `Iterable` from an `Iterator`.\n *\n * @example\n *\n * ```TypeScript\n * import { contentRoutingSymbol, ContentRouting } from '@libp2p/content-routing'\n *\n * class MyContentRouter implements ContentRouting {\n *   get [contentRoutingSymbol] () {\n *     return this\n *   }\n *\n *   // ...other methods\n * }\n * ```\n */\nexport const contentRoutingSymbol = Symbol.for('@libp2p/content-routing');\n//# sourceMappingURL=index.js.map","/**\n * Any object that implements this Symbol as a property should return a\n * PeerRouting instance as the property value, similar to how\n * `Symbol.Iterable` can be used to return an `Iterable` from an `Iterator`.\n *\n * @example\n *\n * ```TypeScript\n * import { peerRouting, PeerRouting } from '@libp2p/peer-routing'\n *\n * class MyPeerRouter implements PeerRouting {\n *   get [peerRouting] () {\n *     return this\n *   }\n *\n *   // ...other methods\n * }\n * ```\n */\nexport const peerRoutingSymbol = Symbol.for('@libp2p/peer-routing');\n//# sourceMappingURL=index.js.map","// Helpers.\nconst s = 1000;\nconst m = s * 60;\nconst h = m * 60;\nconst d = h * 24;\nconst w = d * 7;\nconst y = d * 365.25;\nfunction ms(value, options) {\n    try {\n        if (typeof value === 'string' && value.length > 0) {\n            return parse(value);\n        }\n        else if (typeof value === 'number' && isFinite(value)) {\n            return options?.long ? fmtLong(value) : fmtShort(value);\n        }\n        throw new Error('Value is not a string or number.');\n    }\n    catch (error) {\n        const message = isError(error)\n            ? `${error.message}. value=${JSON.stringify(value)}`\n            : 'An unknown error has occured.';\n        throw new Error(message);\n    }\n}\n/**\n * Parse the given `str` and return milliseconds.\n */\nfunction parse(str) {\n    str = String(str);\n    if (str.length > 100) {\n        throw new Error('Value exceeds the maximum length of 100 characters.');\n    }\n    const match = /^(-?(?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(str);\n    if (!match) {\n        return NaN;\n    }\n    const n = parseFloat(match[1]);\n    const type = (match[2] || 'ms').toLowerCase();\n    switch (type) {\n        case 'years':\n        case 'year':\n        case 'yrs':\n        case 'yr':\n        case 'y':\n            return n * y;\n        case 'weeks':\n        case 'week':\n        case 'w':\n            return n * w;\n        case 'days':\n        case 'day':\n        case 'd':\n            return n * d;\n        case 'hours':\n        case 'hour':\n        case 'hrs':\n        case 'hr':\n        case 'h':\n            return n * h;\n        case 'minutes':\n        case 'minute':\n        case 'mins':\n        case 'min':\n        case 'm':\n            return n * m;\n        case 'seconds':\n        case 'second':\n        case 'secs':\n        case 'sec':\n        case 's':\n            return n * s;\n        case 'milliseconds':\n        case 'millisecond':\n        case 'msecs':\n        case 'msec':\n        case 'ms':\n            return n;\n        default:\n            // This should never occur.\n            throw new Error(`The unit ${type} was matched, but no matching case exists.`);\n    }\n}\nexport default ms;\n/**\n * Short format for `ms`.\n */\nfunction fmtShort(ms) {\n    const msAbs = Math.abs(ms);\n    if (msAbs >= d) {\n        return `${Math.round(ms / d)}d`;\n    }\n    if (msAbs >= h) {\n        return `${Math.round(ms / h)}h`;\n    }\n    if (msAbs >= m) {\n        return `${Math.round(ms / m)}m`;\n    }\n    if (msAbs >= s) {\n        return `${Math.round(ms / s)}s`;\n    }\n    return `${ms}ms`;\n}\n/**\n * Long format for `ms`.\n */\nfunction fmtLong(ms) {\n    const msAbs = Math.abs(ms);\n    if (msAbs >= d) {\n        return plural(ms, msAbs, d, 'day');\n    }\n    if (msAbs >= h) {\n        return plural(ms, msAbs, h, 'hour');\n    }\n    if (msAbs >= m) {\n        return plural(ms, msAbs, m, 'minute');\n    }\n    if (msAbs >= s) {\n        return plural(ms, msAbs, s, 'second');\n    }\n    return `${ms} ms`;\n}\n/**\n * Pluralization helper.\n */\nfunction plural(ms, msAbs, n, name) {\n    const isPlural = msAbs >= n * 1.5;\n    return `${Math.round(ms / n)} ${name}${isPlural ? 's' : ''}`;\n}\n/**\n * A type guard for errors.\n */\nfunction isError(error) {\n    return typeof error === 'object' && error !== null && 'message' in error;\n}\n","/* eslint-disable no-console */\n/* eslint-disable @typescript-eslint/restrict-plus-operands */\n/* eslint-disable @typescript-eslint/strict-boolean-expressions */\n/* eslint-env browser */\n/**\n * This is the web browser implementation of `debug()`.\n */\nimport humanize from 'ms';\nimport setup from './common.js';\nconst storage = localstorage();\n/**\n * Colors.\n */\nconst colors = [\n    '#0000CC',\n    '#0000FF',\n    '#0033CC',\n    '#0033FF',\n    '#0066CC',\n    '#0066FF',\n    '#0099CC',\n    '#0099FF',\n    '#00CC00',\n    '#00CC33',\n    '#00CC66',\n    '#00CC99',\n    '#00CCCC',\n    '#00CCFF',\n    '#3300CC',\n    '#3300FF',\n    '#3333CC',\n    '#3333FF',\n    '#3366CC',\n    '#3366FF',\n    '#3399CC',\n    '#3399FF',\n    '#33CC00',\n    '#33CC33',\n    '#33CC66',\n    '#33CC99',\n    '#33CCCC',\n    '#33CCFF',\n    '#6600CC',\n    '#6600FF',\n    '#6633CC',\n    '#6633FF',\n    '#66CC00',\n    '#66CC33',\n    '#9900CC',\n    '#9900FF',\n    '#9933CC',\n    '#9933FF',\n    '#99CC00',\n    '#99CC33',\n    '#CC0000',\n    '#CC0033',\n    '#CC0066',\n    '#CC0099',\n    '#CC00CC',\n    '#CC00FF',\n    '#CC3300',\n    '#CC3333',\n    '#CC3366',\n    '#CC3399',\n    '#CC33CC',\n    '#CC33FF',\n    '#CC6600',\n    '#CC6633',\n    '#CC9900',\n    '#CC9933',\n    '#CCCC00',\n    '#CCCC33',\n    '#FF0000',\n    '#FF0033',\n    '#FF0066',\n    '#FF0099',\n    '#FF00CC',\n    '#FF00FF',\n    '#FF3300',\n    '#FF3333',\n    '#FF3366',\n    '#FF3399',\n    '#FF33CC',\n    '#FF33FF',\n    '#FF6600',\n    '#FF6633',\n    '#FF9900',\n    '#FF9933',\n    '#FFCC00',\n    '#FFCC33'\n];\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n// eslint-disable-next-line complexity\nfunction useColors() {\n    // NB: In an Electron preload script, document will be defined but not fully\n    // initialized. Since we know we're in Chrome, we'll just detect this case\n    // explicitly\n    // @ts-expect-error window.process.type and window.process.__nwjs are not in the types\n    if (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {\n        return true;\n    }\n    // Internet Explorer and Edge do not support colors.\n    if (typeof navigator !== 'undefined' && (navigator.userAgent?.toLowerCase().match(/(edge|trident)\\/(\\d+)/) != null)) {\n        return false;\n    }\n    // Is webkit? http://stackoverflow.com/a/16459606/376773\n    // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n    // @ts-expect-error document.documentElement.style.WebkitAppearance is not in the types\n    return (typeof document !== 'undefined' && document.documentElement?.style?.WebkitAppearance) ||\n        // Is firebug? http://stackoverflow.com/a/398120/376773\n        // @ts-expect-error window.console.firebug and window.console.exception are not in the types\n        (typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n        // Is firefox >= v31?\n        // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n        (typeof navigator !== 'undefined' && (navigator.userAgent?.toLowerCase().match(/firefox\\/(\\d+)/) != null) && parseInt(RegExp.$1, 10) >= 31) ||\n        // Double check webkit in userAgent just in case we are in a worker\n        (typeof navigator !== 'undefined' && navigator.userAgent?.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n/**\n * Colorize log arguments if enabled.\n */\nfunction formatArgs(args) {\n    args[0] = (this.useColors ? '%c' : '') +\n        this.namespace +\n        (this.useColors ? ' %c' : ' ') +\n        args[0] +\n        (this.useColors ? '%c ' : ' ') +\n        '+' + humanize(this.diff);\n    if (!this.useColors) {\n        return;\n    }\n    const c = 'color: ' + this.color;\n    args.splice(1, 0, c, 'color: inherit');\n    // The final \"%c\" is somewhat tricky, because there could be other\n    // arguments passed either before or after the %c, so we need to\n    // figure out the correct index to insert the CSS into\n    let index = 0;\n    let lastC = 0;\n    args[0].replace(/%[a-zA-Z%]/g, (match) => {\n        if (match === '%%') {\n            return;\n        }\n        index++;\n        if (match === '%c') {\n            // We only are interested in the *last* %c\n            // (the user may have provided their own)\n            lastC = index;\n        }\n    });\n    args.splice(lastC, 0, c);\n}\n/**\n * Invokes `console.debug()` when available.\n * No-op when `console.debug` is not a \"function\".\n * If `console.debug` is not available, falls back\n * to `console.log`.\n */\nconst log = console.debug ?? console.log ?? (() => { });\n/**\n * Save `namespaces`.\n *\n * @param {string} namespaces\n */\nfunction save(namespaces) {\n    try {\n        if (namespaces) {\n            storage?.setItem('debug', namespaces);\n        }\n        else {\n            storage?.removeItem('debug');\n        }\n    }\n    catch (error) {\n        // Swallow\n        // XXX (@Qix-) should we be logging these?\n    }\n}\n/**\n * Load `namespaces`.\n *\n * @returns {string} returns the previously persisted debug modes\n */\nfunction load() {\n    let r;\n    try {\n        r = storage?.getItem('debug');\n    }\n    catch (error) {\n        // Swallow\n        // XXX (@Qix-) should we be logging these?\n    }\n    // If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n    if (!r && typeof process !== 'undefined' && 'env' in process) {\n        r = process.env.DEBUG;\n    }\n    return r;\n}\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n */\nfunction localstorage() {\n    try {\n        // TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context\n        // The Browser also has localStorage in the global context.\n        return localStorage;\n    }\n    catch (error) {\n        // Swallow\n        // XXX (@Qix-) should we be logging these?\n    }\n}\nfunction setupFormatters(formatters) {\n    /**\n     * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n     */\n    formatters.j = function (v) {\n        try {\n            return JSON.stringify(v);\n        }\n        catch (error) {\n            return '[UnexpectedJSONParseError]: ' + error.message;\n        }\n    };\n}\nexport default setup({ formatArgs, save, load, useColors, setupFormatters, colors, storage, log });\n//# sourceMappingURL=browser.js.map","/* eslint-disable no-console */\n/* eslint-disable @typescript-eslint/strict-boolean-expressions */\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n */\nimport humanize from 'ms';\nexport default function setup(env) {\n    createDebug.debug = createDebug;\n    createDebug.default = createDebug;\n    createDebug.coerce = coerce;\n    createDebug.disable = disable;\n    createDebug.enable = enable;\n    createDebug.enabled = enabled;\n    createDebug.humanize = humanize;\n    createDebug.destroy = destroy;\n    Object.keys(env).forEach(key => {\n        // @ts-expect-error cannot use string to index type\n        createDebug[key] = env[key];\n    });\n    /**\n     * The currently active debug mode names, and names to skip.\n     */\n    createDebug.names = [];\n    createDebug.skips = [];\n    /**\n     * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n     *\n     * Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n     */\n    createDebug.formatters = {};\n    /**\n     * Selects a color for a debug namespace\n     *\n     * @param {string} namespace - The namespace string for the debug instance to be colored\n     * @returns {number | string} An ANSI color code for the given namespace\n     */\n    function selectColor(namespace) {\n        let hash = 0;\n        for (let i = 0; i < namespace.length; i++) {\n            hash = ((hash << 5) - hash) + namespace.charCodeAt(i);\n            hash |= 0; // Convert to 32bit integer\n        }\n        // @ts-expect-error colors is not in the types\n        return createDebug.colors[Math.abs(hash) % createDebug.colors.length];\n    }\n    createDebug.selectColor = selectColor;\n    /**\n     * Create a debugger with the given `namespace`.\n     *\n     * @param {string} namespace\n     * @returns {Function}\n     */\n    function createDebug(namespace) {\n        let prevTime;\n        let enableOverride = null;\n        let namespacesCache;\n        let enabledCache;\n        function debug(...args) {\n            // Disabled?\n            // @ts-expect-error enabled is not in the types\n            if (!debug.enabled) {\n                return;\n            }\n            const self = debug;\n            // Set `diff` timestamp\n            const curr = Number(new Date());\n            const ms = curr - (prevTime || curr);\n            self.diff = ms;\n            self.prev = prevTime;\n            self.curr = curr;\n            prevTime = curr;\n            args[0] = createDebug.coerce(args[0]);\n            if (typeof args[0] !== 'string') {\n                // Anything else let's inspect with %O\n                args.unshift('%O');\n            }\n            // Apply any `formatters` transformations\n            let index = 0;\n            args[0] = args[0].replace(/%([a-zA-Z%])/g, (match, format) => {\n                // If we encounter an escaped % then don't increase the array index\n                if (match === '%%') {\n                    return '%';\n                }\n                index++;\n                // @ts-expect-error formatters is not in the types\n                const formatter = createDebug.formatters[format];\n                if (typeof formatter === 'function') {\n                    const val = args[index];\n                    match = formatter.call(self, val);\n                    // Now we need to remove `args[index]` since it's inlined in the `format`\n                    args.splice(index, 1);\n                    index--;\n                }\n                return match;\n            });\n            // Apply env-specific formatting (colors, etc.)\n            // @ts-expect-error formatArgs is not in the types\n            createDebug.formatArgs.call(self, args);\n            // @ts-expect-error log is not in the types\n            const logFn = self.log || createDebug.log;\n            logFn.apply(self, args);\n        }\n        debug.namespace = namespace;\n        // @ts-expect-error useColors is not in the types\n        debug.useColors = createDebug.useColors();\n        debug.color = createDebug.selectColor(namespace);\n        debug.extend = extend;\n        debug.destroy = createDebug.destroy; // XXX Temporary. Will be removed in the next major release.\n        Object.defineProperty(debug, 'enabled', {\n            enumerable: true,\n            configurable: false,\n            get: () => {\n                if (enableOverride !== null) {\n                    return enableOverride;\n                }\n                // @ts-expect-error namespaces is not in the types\n                if (namespacesCache !== createDebug.namespaces) {\n                    // @ts-expect-error namespaces is not in the types\n                    namespacesCache = createDebug.namespaces;\n                    enabledCache = createDebug.enabled(namespace);\n                }\n                return enabledCache;\n            },\n            set: v => {\n                enableOverride = v;\n            }\n        });\n        // Env-specific initialization logic for debug instances\n        // @ts-expect-error init is not in the types\n        if (typeof createDebug.init === 'function') {\n            // @ts-expect-error init is not in the types\n            createDebug.init(debug);\n        }\n        // @ts-expect-error some properties are added dynamically\n        return debug;\n    }\n    function extend(namespace, delimiter) {\n        const newDebug = createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);\n        newDebug.log = this.log;\n        return newDebug;\n    }\n    /**\n     * Enables a debug mode by namespaces. This can include modes\n     * separated by a colon and wildcards.\n     *\n     * @param {string} namespaces\n     */\n    function enable(namespaces) {\n        // @ts-expect-error save is not in the types\n        createDebug.save(namespaces);\n        // @ts-expect-error namespaces is not in the types\n        createDebug.namespaces = namespaces;\n        createDebug.names = [];\n        createDebug.skips = [];\n        let i;\n        const split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n        const len = split.length;\n        for (i = 0; i < len; i++) {\n            if (!split[i]) {\n                // ignore empty strings\n                continue;\n            }\n            namespaces = split[i].replace(/\\*/g, '.*?');\n            if (namespaces[0] === '-') {\n                createDebug.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n            }\n            else {\n                createDebug.names.push(new RegExp('^' + namespaces + '$'));\n            }\n        }\n    }\n    /**\n     * Disable debug output.\n     *\n     * @returns {string} namespaces\n     */\n    function disable() {\n        const namespaces = [\n            ...createDebug.names.map(toNamespace),\n            ...createDebug.skips.map(toNamespace).map(namespace => '-' + namespace)\n        ].join(',');\n        createDebug.enable('');\n        return namespaces;\n    }\n    /**\n     * Returns true if the given mode name is enabled, false otherwise.\n     *\n     * @param {string} name\n     * @returns {boolean}\n     */\n    function enabled(name) {\n        if (name[name.length - 1] === '*') {\n            return true;\n        }\n        let i;\n        let len;\n        for (i = 0, len = createDebug.skips.length; i < len; i++) {\n            if (createDebug.skips[i].test(name)) {\n                return false;\n            }\n        }\n        for (i = 0, len = createDebug.names.length; i < len; i++) {\n            if (createDebug.names[i].test(name)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    /**\n     * Convert regexp to namespace\n     */\n    function toNamespace(regexp) {\n        return regexp.toString()\n            .substring(2, regexp.toString().length - 2)\n            .replace(/\\.\\*\\?$/, '*');\n    }\n    /**\n     * Coerce `val`.\n     */\n    function coerce(val) {\n        if (val instanceof Error) {\n            return val.stack ?? val.message;\n        }\n        return val;\n    }\n    /**\n     * XXX DO NOT USE. This is a temporary stub function.\n     * XXX It WILL be removed in the next major release.\n     */\n    function destroy() {\n        console.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n    }\n    // @ts-expect-error setupFormatters is not in the types\n    createDebug.setupFormatters(createDebug.formatters);\n    // @ts-expect-error load is not in the types\n    createDebug.enable(createDebug.load());\n    // @ts-expect-error some properties are added dynamically\n    return createDebug;\n}\n//# sourceMappingURL=common.js.map","/**\n * @packageDocumentation\n *\n * This module is a fork of the [debug](https://www.npmjs.com/package/debug) module. It has been converted to TypeScript and the output is ESM.\n *\n * It is API compatible with no extra features or bug fixes, it should only be used if you want a 100% ESM application.\n *\n * ESM should be arriving in `debug@5.x.x` so this module can be retired after that.\n *\n * Please see [debug](https://www.npmjs.com/package/debug) for API details.\n */\n/**\n * Module dependencies.\n */\nimport weald from './node.js';\nexport default weald;\n//# sourceMappingURL=index.js.map","/**\n * @packageDocumentation\n *\n * A logger for libp2p based on the venerable [debug](https://www.npmjs.com/package/debug) module.\n *\n * @example\n *\n * ```TypeScript\n * import { logger } from '@libp2p/logger'\n *\n * const log = logger('libp2p:my:component:name')\n *\n * try {\n *   // an operation\n *   log('something happened: %s', 'it was ok')\n * } catch (err) {\n *   log.error('something bad happened: %o', err)\n * }\n *\n * log('with this peer: %p', {})\n * log('and this base58btc: %b', Uint8Array.from([0, 1, 2, 3]))\n * log('and this base32: %t', Uint8Array.from([4, 5, 6, 7]))\n * ```\n *\n * ```console\n * $ DEBUG=libp2p:* node index.js\n * something happened: it was ok\n * something bad happened: <stack trace>\n * with this peer: 12D3Foo\n * with this base58btc: Qmfoo\n * with this base32: bafyfoo\n * ```\n */\nimport { base32 } from 'multiformats/bases/base32';\nimport { base58btc } from 'multiformats/bases/base58';\nimport { base64 } from 'multiformats/bases/base64';\nimport debug from 'weald';\nimport { truncatePeerId } from './utils.js';\n// Add a formatter for converting to a base58 string\ndebug.formatters.b = (v) => {\n    return v == null ? 'undefined' : base58btc.baseEncode(v);\n};\n// Add a formatter for converting to a base32 string\ndebug.formatters.t = (v) => {\n    return v == null ? 'undefined' : base32.baseEncode(v);\n};\n// Add a formatter for converting to a base64 string\ndebug.formatters.m = (v) => {\n    return v == null ? 'undefined' : base64.baseEncode(v);\n};\n// Add a formatter for stringifying peer ids\ndebug.formatters.p = (v) => {\n    return v == null ? 'undefined' : v.toString();\n};\n// Add a formatter for stringifying CIDs\ndebug.formatters.c = (v) => {\n    return v == null ? 'undefined' : v.toString();\n};\n// Add a formatter for stringifying Datastore keys\ndebug.formatters.k = (v) => {\n    return v == null ? 'undefined' : v.toString();\n};\n// Add a formatter for stringifying Multiaddrs\ndebug.formatters.a = (v) => {\n    return v == null ? 'undefined' : v.toString();\n};\nfunction createDisabledLogger(namespace) {\n    const logger = () => { };\n    logger.enabled = false;\n    logger.color = '';\n    logger.diff = 0;\n    logger.log = () => { };\n    logger.namespace = namespace;\n    logger.destroy = () => true;\n    logger.extend = () => logger;\n    return logger;\n}\n/**\n * Create a component logger that will prefix any log messages with a truncated\n * peer id.\n *\n * @example\n *\n * ```TypeScript\n * import { peerLogger } from '@libp2p/logger'\n * import { peerIdFromString } from '@libp2p/peer-id'\n *\n * const peerId = peerIdFromString('12D3FooBar')\n * const logger = peerLogger(peerId)\n *\n * const log = logger.forComponent('my-component')\n * log.info('hello world')\n * // logs \"12…oBar:my-component hello world\"\n * ```\n */\nexport function peerLogger(peerId, options = {}) {\n    return prefixLogger(truncatePeerId(peerId, options));\n}\n/**\n * Create a component logger that will prefix any log messages with the passed\n * string.\n *\n * @example\n *\n * ```TypeScript\n * import { prefixLogger } from '@libp2p/logger'\n *\n * const logger = prefixLogger('my-node')\n *\n * const log = logger.forComponent('my-component')\n * log.info('hello world')\n * // logs \"my-node:my-component hello world\"\n * ```\n */\nexport function prefixLogger(prefix) {\n    return {\n        forComponent(name) {\n            return logger(`${prefix}:${name}`);\n        }\n    };\n}\n/**\n * Create a component logger\n *\n * @example\n *\n * ```TypeScript\n * import { defaultLogger } from '@libp2p/logger'\n * import { peerIdFromString } from '@libp2p/peer-id'\n *\n * const logger = defaultLogger()\n *\n * const log = logger.forComponent('my-component')\n * log.info('hello world')\n * // logs \"my-component hello world\"\n * ```\n */\nexport function defaultLogger() {\n    return {\n        forComponent(name) {\n            return logger(name);\n        }\n    };\n}\n/**\n * Creates a logger for the passed component name.\n *\n * @example\n *\n * ```TypeScript\n * import { logger } from '@libp2p/logger'\n *\n * const log = logger('my-component')\n * log.info('hello world')\n * // logs \"my-component hello world\"\n * ```\n */\nexport function logger(name) {\n    // trace logging is a no-op by default\n    let trace = createDisabledLogger(`${name}:trace`);\n    // look at all the debug names and see if trace logging has explicitly been enabled\n    if (debug.enabled(`${name}:trace`) && debug.names.map((r) => r.toString()).find((n) => n.includes(':trace')) != null) {\n        trace = debug(`${name}:trace`);\n    }\n    return Object.assign(debug(name), {\n        error: debug(`${name}:error`),\n        trace\n    });\n}\nexport function disable() {\n    debug.disable();\n}\nexport function enable(namespaces) {\n    debug.enable(namespaces);\n}\nexport function enabled(namespaces) {\n    return debug.enabled(namespaces);\n}\n//# sourceMappingURL=index.js.map","/**\n * Calls the passed map function on every entry of the passed iterable iterator\n */\nexport function mapIterable(iter, map) {\n    const iterator = {\n        [Symbol.iterator]: () => {\n            return iterator;\n        },\n        next: () => {\n            const next = iter.next();\n            const val = next.value;\n            if (next.done === true || val == null) {\n                const result = {\n                    done: true,\n                    value: undefined\n                };\n                return result;\n            }\n            return {\n                done: false,\n                value: map(val)\n            };\n        }\n    };\n    return iterator;\n}\n//# sourceMappingURL=util.js.map","import { peerIdFromString } from '@libp2p/peer-id';\nimport { mapIterable } from './util.js';\n/**\n * We can't use PeerIds as set entries because set entries are\n * compared using same-value-zero equality, so this is just\n * a map that stringifies the PeerIds before storing them.\n *\n * PeerIds cache stringified versions of themselves so this\n * should be a cheap operation.\n *\n * @example\n *\n * ```TypeScript\n * import { peerSet } from '@libp2p/peer-collections'\n *\n * const set = peerSet()\n * set.add(peerId)\n * ```\n */\nexport class PeerSet {\n    set;\n    constructor(set) {\n        this.set = new Set();\n        if (set != null) {\n            for (const key of set) {\n                this.set.add(key.toString());\n            }\n        }\n    }\n    get size() {\n        return this.set.size;\n    }\n    [Symbol.iterator]() {\n        return this.values();\n    }\n    add(peer) {\n        this.set.add(peer.toString());\n    }\n    clear() {\n        this.set.clear();\n    }\n    delete(peer) {\n        this.set.delete(peer.toString());\n    }\n    entries() {\n        return mapIterable(this.set.entries(), (val) => {\n            const peerId = peerIdFromString(val[0]);\n            return [peerId, peerId];\n        });\n    }\n    forEach(predicate) {\n        this.set.forEach((str) => {\n            const id = peerIdFromString(str);\n            predicate(id, id, this);\n        });\n    }\n    has(peer) {\n        return this.set.has(peer.toString());\n    }\n    values() {\n        return mapIterable(this.set.values(), (val) => {\n            return peerIdFromString(val);\n        });\n    }\n    intersection(other) {\n        const output = new PeerSet();\n        for (const peerId of other) {\n            if (this.has(peerId)) {\n                output.add(peerId);\n            }\n        }\n        return output;\n    }\n    difference(other) {\n        const output = new PeerSet();\n        for (const peerId of this) {\n            if (!other.has(peerId)) {\n                output.add(peerId);\n            }\n        }\n        return output;\n    }\n    union(other) {\n        const output = new PeerSet();\n        for (const peerId of other) {\n            output.add(peerId);\n        }\n        for (const peerId of this) {\n            output.add(peerId);\n        }\n        return output;\n    }\n}\nexport function peerSet() {\n    return new PeerSet();\n}\n//# sourceMappingURL=set.js.map","/**\n * @packageDocumentation\n *\n * Generate, import, and export PeerIDs.\n *\n * A Peer ID is the SHA-256 [multihash](https://github.com/multiformats/multihash) of a public key.\n *\n * The public key is a base64 encoded string of a protobuf containing an RSA DER buffer. This uses a node buffer to pass the base64 encoded public key protobuf to the multihash for ID generation.\n *\n * @example\n *\n * ```TypeScript\n * import { createEd25519PeerId } from '@libp2p/peer-id-factory'\n *\n * const peerId = await createEd25519PeerId()\n * console.log(peerId.toString())\n * ```\n *\n * ```bash\n * 12D3KooWRm8J3iL796zPFi2EtGGtUJn58AG67gcqzMFHZnnsTzqD\n * ```\n */\nimport { generateKeyPair, marshalPrivateKey, unmarshalPrivateKey, marshalPublicKey, unmarshalPublicKey } from '@libp2p/crypto/keys';\nimport { peerIdFromKeys, peerIdFromBytes } from '@libp2p/peer-id';\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string';\nimport { PeerIdProto } from './proto.js';\nexport const createEd25519PeerId = async () => {\n    const key = await generateKeyPair('Ed25519');\n    const id = await createFromPrivKey(key);\n    if (id.type === 'Ed25519') {\n        return id;\n    }\n    throw new Error(`Generated unexpected PeerId type \"${id.type}\"`);\n};\nexport const createSecp256k1PeerId = async () => {\n    const key = await generateKeyPair('secp256k1');\n    const id = await createFromPrivKey(key);\n    if (id.type === 'secp256k1') {\n        return id;\n    }\n    throw new Error(`Generated unexpected PeerId type \"${id.type}\"`);\n};\nexport const createRSAPeerId = async (opts) => {\n    const key = await generateKeyPair('RSA', opts?.bits ?? 2048);\n    const id = await createFromPrivKey(key);\n    if (id.type === 'RSA') {\n        return id;\n    }\n    throw new Error(`Generated unexpected PeerId type \"${id.type}\"`);\n};\nexport async function createFromPubKey(publicKey) {\n    return peerIdFromKeys(marshalPublicKey(publicKey));\n}\nexport async function createFromPrivKey(privateKey) {\n    return peerIdFromKeys(marshalPublicKey(privateKey.public), marshalPrivateKey(privateKey));\n}\nexport function exportToProtobuf(peerId, excludePrivateKey) {\n    return PeerIdProto.encode({\n        id: peerId.multihash.bytes,\n        pubKey: peerId.publicKey,\n        privKey: excludePrivateKey === true || peerId.privateKey == null ? undefined : peerId.privateKey\n    });\n}\nexport async function createFromProtobuf(buf) {\n    const { id, privKey, pubKey } = PeerIdProto.decode(buf);\n    return createFromParts(id ?? new Uint8Array(0), privKey, pubKey);\n}\nexport async function createFromJSON(obj) {\n    return createFromParts(uint8ArrayFromString(obj.id, 'base58btc'), obj.privKey != null ? uint8ArrayFromString(obj.privKey, 'base64pad') : undefined, obj.pubKey != null ? uint8ArrayFromString(obj.pubKey, 'base64pad') : undefined);\n}\nasync function createFromParts(multihash, privKey, pubKey) {\n    if (privKey != null) {\n        const key = await unmarshalPrivateKey(privKey);\n        return createFromPrivKey(key);\n    }\n    else if (pubKey != null) {\n        const key = unmarshalPublicKey(pubKey);\n        return createFromPubKey(key);\n    }\n    const peerId = peerIdFromBytes(multihash);\n    if (peerId.type !== 'Ed25519' && peerId.type !== 'secp256k1' && peerId.type !== 'RSA') {\n        // should not be possible since `multihash` is derived from keys and these\n        // are the cryptographic peer id types\n        throw new Error('Supplied PeerID is invalid');\n    }\n    return peerId;\n}\n//# sourceMappingURL=index.js.map","import { peerIdFromString } from '@libp2p/peer-id';\nimport { mapIterable } from './util.js';\n/**\n * We can't use PeerIds as map keys because map keys are\n * compared using same-value-zero equality, so this is just\n * a map that stringifies the PeerIds before storing them.\n *\n * PeerIds cache stringified versions of themselves so this\n * should be a cheap operation.\n *\n * @example\n *\n * ```TypeScript\n * import { peerMap } from '@libp2p/peer-collections'\n *\n * const map = peerMap<string>()\n * map.set(peerId, 'value')\n * ```\n */\nexport class PeerMap {\n    map;\n    constructor(map) {\n        this.map = new Map();\n        if (map != null) {\n            for (const [key, value] of map.entries()) {\n                this.map.set(key.toString(), value);\n            }\n        }\n    }\n    [Symbol.iterator]() {\n        return this.entries();\n    }\n    clear() {\n        this.map.clear();\n    }\n    delete(peer) {\n        return this.map.delete(peer.toString());\n    }\n    entries() {\n        return mapIterable(this.map.entries(), (val) => {\n            return [peerIdFromString(val[0]), val[1]];\n        });\n    }\n    forEach(fn) {\n        this.map.forEach((value, key) => {\n            fn(value, peerIdFromString(key), this);\n        });\n    }\n    get(peer) {\n        return this.map.get(peer.toString());\n    }\n    has(peer) {\n        return this.map.has(peer.toString());\n    }\n    set(peer, value) {\n        this.map.set(peer.toString(), value);\n    }\n    keys() {\n        return mapIterable(this.map.keys(), (val) => {\n            return peerIdFromString(val);\n        });\n    }\n    values() {\n        return this.map.values();\n    }\n    get size() {\n        return this.map.size;\n    }\n}\nexport function peerMap() {\n    return new PeerMap();\n}\n//# sourceMappingURL=map.js.map","import lowerBound from './lower-bound.js';\nexport default class PriorityQueue {\n    #queue = [];\n    enqueue(run, options) {\n        options = {\n            priority: 0,\n            ...options,\n        };\n        const element = {\n            priority: options.priority,\n            run,\n        };\n        if (this.size && this.#queue[this.size - 1].priority >= options.priority) {\n            this.#queue.push(element);\n            return;\n        }\n        const index = lowerBound(this.#queue, element, (a, b) => b.priority - a.priority);\n        this.#queue.splice(index, 0, element);\n    }\n    dequeue() {\n        const item = this.#queue.shift();\n        return item?.run;\n    }\n    filter(options) {\n        return this.#queue.filter((element) => element.priority === options.priority).map((element) => element.run);\n    }\n    get size() {\n        return this.#queue.length;\n    }\n}\n","// Port of lower_bound from https://en.cppreference.com/w/cpp/algorithm/lower_bound\n// Used to compute insertion index to keep queue sorted after insertion\nexport default function lowerBound(array, value, comparator) {\n    let first = 0;\n    let count = array.length;\n    while (count > 0) {\n        const step = Math.trunc(count / 2);\n        let it = first + step;\n        if (comparator(array[it], value) <= 0) {\n            first = ++it;\n            count -= step + 1;\n        }\n        else {\n            count = step;\n        }\n    }\n    return first;\n}\n","import { EventEmitter } from 'eventemitter3';\nimport pTimeout, { TimeoutError } from 'p-timeout';\nimport PriorityQueue from './priority-queue.js';\n/**\nPromise queue with concurrency control.\n*/\nexport default class PQueue extends EventEmitter {\n    #carryoverConcurrencyCount;\n    #isIntervalIgnored;\n    #intervalCount = 0;\n    #intervalCap;\n    #interval;\n    #intervalEnd = 0;\n    #intervalId;\n    #timeoutId;\n    #queue;\n    #queueClass;\n    #pending = 0;\n    // The `!` is needed because of https://github.com/microsoft/TypeScript/issues/32194\n    #concurrency;\n    #isPaused;\n    #throwOnTimeout;\n    /**\n    Per-operation timeout in milliseconds. Operations fulfill once `timeout` elapses if they haven't already.\n\n    Applies to each future operation.\n    */\n    timeout;\n    // TODO: The `throwOnTimeout` option should affect the return types of `add()` and `addAll()`\n    constructor(options) {\n        super();\n        // eslint-disable-next-line @typescript-eslint/consistent-type-assertions\n        options = {\n            carryoverConcurrencyCount: false,\n            intervalCap: Number.POSITIVE_INFINITY,\n            interval: 0,\n            concurrency: Number.POSITIVE_INFINITY,\n            autoStart: true,\n            queueClass: PriorityQueue,\n            ...options,\n        };\n        if (!(typeof options.intervalCap === 'number' && options.intervalCap >= 1)) {\n            throw new TypeError(`Expected \\`intervalCap\\` to be a number from 1 and up, got \\`${options.intervalCap?.toString() ?? ''}\\` (${typeof options.intervalCap})`);\n        }\n        if (options.interval === undefined || !(Number.isFinite(options.interval) && options.interval >= 0)) {\n            throw new TypeError(`Expected \\`interval\\` to be a finite number >= 0, got \\`${options.interval?.toString() ?? ''}\\` (${typeof options.interval})`);\n        }\n        this.#carryoverConcurrencyCount = options.carryoverConcurrencyCount;\n        this.#isIntervalIgnored = options.intervalCap === Number.POSITIVE_INFINITY || options.interval === 0;\n        this.#intervalCap = options.intervalCap;\n        this.#interval = options.interval;\n        this.#queue = new options.queueClass();\n        this.#queueClass = options.queueClass;\n        this.concurrency = options.concurrency;\n        this.timeout = options.timeout;\n        this.#throwOnTimeout = options.throwOnTimeout === true;\n        this.#isPaused = options.autoStart === false;\n    }\n    get #doesIntervalAllowAnother() {\n        return this.#isIntervalIgnored || this.#intervalCount < this.#intervalCap;\n    }\n    get #doesConcurrentAllowAnother() {\n        return this.#pending < this.#concurrency;\n    }\n    #next() {\n        this.#pending--;\n        this.#tryToStartAnother();\n        this.emit('next');\n    }\n    #onResumeInterval() {\n        this.#onInterval();\n        this.#initializeIntervalIfNeeded();\n        this.#timeoutId = undefined;\n    }\n    get #isIntervalPaused() {\n        const now = Date.now();\n        if (this.#intervalId === undefined) {\n            const delay = this.#intervalEnd - now;\n            if (delay < 0) {\n                // Act as the interval was done\n                // We don't need to resume it here because it will be resumed on line 160\n                this.#intervalCount = (this.#carryoverConcurrencyCount) ? this.#pending : 0;\n            }\n            else {\n                // Act as the interval is pending\n                if (this.#timeoutId === undefined) {\n                    this.#timeoutId = setTimeout(() => {\n                        this.#onResumeInterval();\n                    }, delay);\n                }\n                return true;\n            }\n        }\n        return false;\n    }\n    #tryToStartAnother() {\n        if (this.#queue.size === 0) {\n            // We can clear the interval (\"pause\")\n            // Because we can redo it later (\"resume\")\n            if (this.#intervalId) {\n                clearInterval(this.#intervalId);\n            }\n            this.#intervalId = undefined;\n            this.emit('empty');\n            if (this.#pending === 0) {\n                this.emit('idle');\n            }\n            return false;\n        }\n        if (!this.#isPaused) {\n            const canInitializeInterval = !this.#isIntervalPaused;\n            if (this.#doesIntervalAllowAnother && this.#doesConcurrentAllowAnother) {\n                const job = this.#queue.dequeue();\n                if (!job) {\n                    return false;\n                }\n                this.emit('active');\n                job();\n                if (canInitializeInterval) {\n                    this.#initializeIntervalIfNeeded();\n                }\n                return true;\n            }\n        }\n        return false;\n    }\n    #initializeIntervalIfNeeded() {\n        if (this.#isIntervalIgnored || this.#intervalId !== undefined) {\n            return;\n        }\n        this.#intervalId = setInterval(() => {\n            this.#onInterval();\n        }, this.#interval);\n        this.#intervalEnd = Date.now() + this.#interval;\n    }\n    #onInterval() {\n        if (this.#intervalCount === 0 && this.#pending === 0 && this.#intervalId) {\n            clearInterval(this.#intervalId);\n            this.#intervalId = undefined;\n        }\n        this.#intervalCount = this.#carryoverConcurrencyCount ? this.#pending : 0;\n        this.#processQueue();\n    }\n    /**\n    Executes all queued functions until it reaches the limit.\n    */\n    #processQueue() {\n        // eslint-disable-next-line no-empty\n        while (this.#tryToStartAnother()) { }\n    }\n    get concurrency() {\n        return this.#concurrency;\n    }\n    set concurrency(newConcurrency) {\n        if (!(typeof newConcurrency === 'number' && newConcurrency >= 1)) {\n            throw new TypeError(`Expected \\`concurrency\\` to be a number from 1 and up, got \\`${newConcurrency}\\` (${typeof newConcurrency})`);\n        }\n        this.#concurrency = newConcurrency;\n        this.#processQueue();\n    }\n    async #throwOnAbort(signal) {\n        return new Promise((_resolve, reject) => {\n            signal.addEventListener('abort', () => {\n                reject(signal.reason);\n            }, { once: true });\n        });\n    }\n    async add(function_, options = {}) {\n        options = {\n            timeout: this.timeout,\n            throwOnTimeout: this.#throwOnTimeout,\n            ...options,\n        };\n        return new Promise((resolve, reject) => {\n            this.#queue.enqueue(async () => {\n                this.#pending++;\n                this.#intervalCount++;\n                try {\n                    options.signal?.throwIfAborted();\n                    let operation = function_({ signal: options.signal });\n                    if (options.timeout) {\n                        operation = pTimeout(Promise.resolve(operation), { milliseconds: options.timeout });\n                    }\n                    if (options.signal) {\n                        operation = Promise.race([operation, this.#throwOnAbort(options.signal)]);\n                    }\n                    const result = await operation;\n                    resolve(result);\n                    this.emit('completed', result);\n                }\n                catch (error) {\n                    if (error instanceof TimeoutError && !options.throwOnTimeout) {\n                        resolve();\n                        return;\n                    }\n                    reject(error);\n                    this.emit('error', error);\n                }\n                finally {\n                    this.#next();\n                }\n            }, options);\n            this.emit('add');\n            this.#tryToStartAnother();\n        });\n    }\n    async addAll(functions, options) {\n        return Promise.all(functions.map(async (function_) => this.add(function_, options)));\n    }\n    /**\n    Start (or resume) executing enqueued tasks within concurrency limit. No need to call this if queue is not paused (via `options.autoStart = false` or by `.pause()` method.)\n    */\n    start() {\n        if (!this.#isPaused) {\n            return this;\n        }\n        this.#isPaused = false;\n        this.#processQueue();\n        return this;\n    }\n    /**\n    Put queue execution on hold.\n    */\n    pause() {\n        this.#isPaused = true;\n    }\n    /**\n    Clear the queue.\n    */\n    clear() {\n        this.#queue = new this.#queueClass();\n    }\n    /**\n    Can be called multiple times. Useful if you for example add additional items at a later time.\n\n    @returns A promise that settles when the queue becomes empty.\n    */\n    async onEmpty() {\n        // Instantly resolve if the queue is empty\n        if (this.#queue.size === 0) {\n            return;\n        }\n        await this.#onEvent('empty');\n    }\n    /**\n    @returns A promise that settles when the queue size is less than the given limit: `queue.size < limit`.\n\n    If you want to avoid having the queue grow beyond a certain size you can `await queue.onSizeLessThan()` before adding a new item.\n\n    Note that this only limits the number of items waiting to start. There could still be up to `concurrency` jobs already running that this call does not include in its calculation.\n    */\n    async onSizeLessThan(limit) {\n        // Instantly resolve if the queue is empty.\n        if (this.#queue.size < limit) {\n            return;\n        }\n        await this.#onEvent('next', () => this.#queue.size < limit);\n    }\n    /**\n    The difference with `.onEmpty` is that `.onIdle` guarantees that all work from the queue has finished. `.onEmpty` merely signals that the queue is empty, but it could mean that some promises haven't completed yet.\n\n    @returns A promise that settles when the queue becomes empty, and all promises have completed; `queue.size === 0 && queue.pending === 0`.\n    */\n    async onIdle() {\n        // Instantly resolve if none pending and if nothing else is queued\n        if (this.#pending === 0 && this.#queue.size === 0) {\n            return;\n        }\n        await this.#onEvent('idle');\n    }\n    async #onEvent(event, filter) {\n        return new Promise(resolve => {\n            const listener = () => {\n                if (filter && !filter()) {\n                    return;\n                }\n                this.off(event, listener);\n                resolve();\n            };\n            this.on(event, listener);\n        });\n    }\n    /**\n    Size of the queue, the number of queued items waiting to run.\n    */\n    get size() {\n        return this.#queue.size;\n    }\n    /**\n    Size of the queue, filtered by the given options.\n\n    For example, this can be used to find the number of items remaining in the queue with a specific priority level.\n    */\n    sizeBy(options) {\n        // eslint-disable-next-line unicorn/no-array-callback-reference\n        return this.#queue.filter(options).length;\n    }\n    /**\n    Number of running items (no longer in the queue).\n    */\n    get pending() {\n        return this.#pending;\n    }\n    /**\n    Whether the queue is currently paused.\n    */\n    get isPaused() {\n        return this.#isPaused;\n    }\n}\n","const events = {};\nconst observable = (worker) => {\n    worker.addEventListener('message', (event) => {\n        observable.dispatchEvent('message', worker, event);\n    });\n    if (worker.port != null) {\n        worker.port.addEventListener('message', (event) => {\n            observable.dispatchEvent('message', worker, event);\n        });\n    }\n};\nobservable.addEventListener = (type, fn) => {\n    if (events[type] == null) {\n        events[type] = [];\n    }\n    events[type].push(fn);\n};\nobservable.removeEventListener = (type, fn) => {\n    if (events[type] == null) {\n        return;\n    }\n    events[type] = events[type]\n        .filter(listener => listener === fn);\n};\nobservable.dispatchEvent = function (type, worker, event) {\n    if (events[type] == null) {\n        return;\n    }\n    events[type].forEach(fn => fn(worker, event));\n};\nexport default observable;\n//# sourceMappingURL=index.js.map","export const WORKER_REQUEST_READ_LOCK = 'lock:worker:request-read';\nexport const WORKER_RELEASE_READ_LOCK = 'lock:worker:release-read';\nexport const MASTER_GRANT_READ_LOCK = 'lock:master:grant-read';\nexport const WORKER_REQUEST_WRITE_LOCK = 'lock:worker:request-write';\nexport const WORKER_RELEASE_WRITE_LOCK = 'lock:worker:release-write';\nexport const MASTER_GRANT_WRITE_LOCK = 'lock:master:grant-write';\n//# sourceMappingURL=constants.js.map","import observer from 'observable-webworkers';\nimport { WORKER_REQUEST_READ_LOCK, WORKER_RELEASE_READ_LOCK, MASTER_GRANT_READ_LOCK, WORKER_REQUEST_WRITE_LOCK, WORKER_RELEASE_WRITE_LOCK, MASTER_GRANT_WRITE_LOCK } from './constants.js';\nimport { nanoid } from './utils.js';\nconst handleWorkerLockRequest = (emitter, masterEvent, requestType, releaseType, grantType) => {\n    return (worker, event) => {\n        if (event.data.type !== requestType) {\n            return;\n        }\n        const requestEvent = {\n            type: event.data.type,\n            name: event.data.name,\n            identifier: event.data.identifier\n        };\n        emitter.dispatchEvent(new MessageEvent(masterEvent, {\n            data: {\n                name: requestEvent.name,\n                handler: async () => {\n                    // grant lock to worker\n                    worker.postMessage({\n                        type: grantType,\n                        name: requestEvent.name,\n                        identifier: requestEvent.identifier\n                    });\n                    // wait for worker to finish\n                    await new Promise((resolve) => {\n                        const releaseEventListener = (event) => {\n                            if (event == null || event.data == null) {\n                                return;\n                            }\n                            const releaseEvent = {\n                                type: event.data.type,\n                                name: event.data.name,\n                                identifier: event.data.identifier\n                            };\n                            if (releaseEvent.type === releaseType && releaseEvent.identifier === requestEvent.identifier) {\n                                worker.removeEventListener('message', releaseEventListener);\n                                resolve();\n                            }\n                        };\n                        worker.addEventListener('message', releaseEventListener);\n                    });\n                }\n            }\n        }));\n    };\n};\nconst makeWorkerLockRequest = (name, requestType, grantType, releaseType) => {\n    return async () => {\n        const id = nanoid();\n        globalThis.postMessage({\n            type: requestType,\n            identifier: id,\n            name\n        });\n        return new Promise((resolve) => {\n            const listener = (event) => {\n                if (event == null || event.data == null) {\n                    return;\n                }\n                const responseEvent = {\n                    type: event.data.type,\n                    identifier: event.data.identifier\n                };\n                if (responseEvent.type === grantType && responseEvent.identifier === id) {\n                    globalThis.removeEventListener('message', listener);\n                    // grant lock\n                    resolve(() => {\n                        // release lock\n                        globalThis.postMessage({\n                            type: releaseType,\n                            identifier: id,\n                            name\n                        });\n                    });\n                }\n            };\n            globalThis.addEventListener('message', listener);\n        });\n    };\n};\nconst defaultOptions = {\n    singleProcess: false\n};\nexport default (options) => {\n    options = Object.assign({}, defaultOptions, options);\n    const isPrimary = Boolean(globalThis.document) || options.singleProcess;\n    if (isPrimary) {\n        const emitter = new EventTarget();\n        observer.addEventListener('message', handleWorkerLockRequest(emitter, 'requestReadLock', WORKER_REQUEST_READ_LOCK, WORKER_RELEASE_READ_LOCK, MASTER_GRANT_READ_LOCK));\n        observer.addEventListener('message', handleWorkerLockRequest(emitter, 'requestWriteLock', WORKER_REQUEST_WRITE_LOCK, WORKER_RELEASE_WRITE_LOCK, MASTER_GRANT_WRITE_LOCK));\n        return emitter;\n    }\n    return {\n        isWorker: true,\n        readLock: (name) => makeWorkerLockRequest(name, WORKER_REQUEST_READ_LOCK, MASTER_GRANT_READ_LOCK, WORKER_RELEASE_READ_LOCK),\n        writeLock: (name) => makeWorkerLockRequest(name, WORKER_REQUEST_WRITE_LOCK, MASTER_GRANT_WRITE_LOCK, WORKER_RELEASE_WRITE_LOCK)\n    };\n};\n//# sourceMappingURL=browser.js.map","export const nanoid = (size = 21) => {\n    return Math.random().toString().substring(2);\n};\n//# sourceMappingURL=utils.js.map","/**\n * @packageDocumentation\n *\n * - Reads occur concurrently\n * - Writes occur one at a time\n * - No reads occur while a write operation is in progress\n * - Locks can be created with different names\n * - Reads/writes can time out\n *\n * ## Usage\n *\n * ```javascript\n * import mortice from 'mortice'\n * import delay from 'delay'\n *\n * // the lock name & options objects are both optional\n * const mutex = mortice('my-lock', {\n *\n *   // how long before write locks time out (default: 24 hours)\n *   timeout: 30000,\n *\n *    // control how many read operations are executed concurrently (default: Infinity)\n *   concurrency: 5,\n *\n *   // by default the the lock will be held on the main thread, set this to true if the\n *   // a lock should reside on each worker (default: false)\n *   singleProcess: false\n * })\n *\n * Promise.all([\n *   (async () => {\n *     const release = await mutex.readLock()\n *\n *     try {\n *       console.info('read 1')\n *     } finally {\n *       release()\n *     }\n *   })(),\n *   (async () => {\n *     const release = await mutex.readLock()\n *\n *     try {\n *       console.info('read 2')\n *     } finally {\n *       release()\n *     }\n *   })(),\n *   (async () => {\n *     const release = await mutex.writeLock()\n *\n *     try {\n *       await delay(1000)\n *\n *       console.info('write 1')\n *     } finally {\n *       release()\n *     }\n *   })(),\n *   (async () => {\n *     const release = await mutex.readLock()\n *\n *     try {\n *       console.info('read 3')\n *     } finally {\n *       release()\n *     }\n *   })()\n * ])\n * ```\n *\n *     read 1\n *     read 2\n *     <small pause>\n *     write 1\n *     read 3\n *\n * ## Browser\n *\n * Because there's no global way to evesdrop on messages sent by Web Workers, please pass all created Web Workers to the [`observable-webworkers`](https://npmjs.org/package/observable-webworkers) module:\n *\n * ```javascript\n * // main.js\n * import mortice from 'mortice'\n * import observe from 'observable-webworkers'\n *\n * // create our lock on the main thread, it will be held here\n * const mutex = mortice()\n *\n * const worker = new Worker('worker.js')\n *\n * observe(worker)\n * ```\n *\n * ```javascript\n * // worker.js\n * import mortice from 'mortice'\n * import delay from 'delay'\n *\n * const mutex = mortice()\n *\n * let release = await mutex.readLock()\n * // read something\n * release()\n *\n * release = await mutex.writeLock()\n * // write something\n * release()\n * ```\n */\nimport PQueue from 'p-queue';\nimport pTimeout from 'p-timeout';\nimport impl from './node.js';\nconst mutexes = {};\nlet implementation;\nasync function createReleaseable(queue, options) {\n    let res;\n    const p = new Promise((resolve) => {\n        res = resolve;\n    });\n    void queue.add(async () => pTimeout((async () => {\n        await new Promise((resolve) => {\n            res(() => {\n                resolve();\n            });\n        });\n    })(), {\n        milliseconds: options.timeout\n    }));\n    return p;\n}\nconst createMutex = (name, options) => {\n    if (implementation.isWorker === true) {\n        return {\n            readLock: implementation.readLock(name, options),\n            writeLock: implementation.writeLock(name, options)\n        };\n    }\n    const masterQueue = new PQueue({ concurrency: 1 });\n    let readQueue;\n    return {\n        async readLock() {\n            // If there's already a read queue, just add the task to it\n            if (readQueue != null) {\n                return createReleaseable(readQueue, options);\n            }\n            // Create a new read queue\n            readQueue = new PQueue({\n                concurrency: options.concurrency,\n                autoStart: false\n            });\n            const localReadQueue = readQueue;\n            // Add the task to the read queue\n            const readPromise = createReleaseable(readQueue, options);\n            void masterQueue.add(async () => {\n                // Start the task only once the master queue has completed processing\n                // any previous tasks\n                localReadQueue.start();\n                // Once all the tasks in the read queue have completed, remove it so\n                // that the next read lock will occur after any write locks that were\n                // started in the interim\n                await localReadQueue.onIdle()\n                    .then(() => {\n                    if (readQueue === localReadQueue) {\n                        readQueue = null;\n                    }\n                });\n            });\n            return readPromise;\n        },\n        async writeLock() {\n            // Remove the read queue reference, so that any later read locks will be\n            // added to a new queue that starts after this write lock has been\n            // released\n            readQueue = null;\n            return createReleaseable(masterQueue, options);\n        }\n    };\n};\nconst defaultOptions = {\n    name: 'lock',\n    concurrency: Infinity,\n    timeout: 84600000,\n    singleProcess: false\n};\nexport default function createMortice(options) {\n    const opts = Object.assign({}, defaultOptions, options);\n    if (implementation == null) {\n        implementation = impl(opts);\n        if (implementation.isWorker !== true) {\n            // we are master, set up worker requests\n            implementation.addEventListener('requestReadLock', (event) => {\n                if (mutexes[event.data.name] == null) {\n                    return;\n                }\n                void mutexes[event.data.name].readLock()\n                    .then(async (release) => event.data.handler().finally(() => { release(); }));\n            });\n            implementation.addEventListener('requestWriteLock', async (event) => {\n                if (mutexes[event.data.name] == null) {\n                    return;\n                }\n                void mutexes[event.data.name].writeLock()\n                    .then(async (release) => event.data.handler().finally(() => { release(); }));\n            });\n        }\n    }\n    if (mutexes[opts.name] == null) {\n        mutexes[opts.name] = createMutex(opts.name, opts);\n    }\n    return mutexes[opts.name];\n}\n//# sourceMappingURL=index.js.map","export const codes = {\n    ERR_INVALID_PARAMETERS: 'ERR_INVALID_PARAMETERS'\n};\n//# sourceMappingURL=errors.js.map","/* eslint-disable import/export */\n/* eslint-disable complexity */\n/* eslint-disable @typescript-eslint/no-namespace */\n/* eslint-disable @typescript-eslint/no-unnecessary-boolean-literal-compare */\n/* eslint-disable @typescript-eslint/no-empty-interface */\nimport { encodeMessage, decodeMessage, message } from 'protons-runtime';\nexport var Peer;\n(function (Peer) {\n    let Peer$metadataEntry;\n    (function (Peer$metadataEntry) {\n        let _codec;\n        Peer$metadataEntry.codec = () => {\n            if (_codec == null) {\n                _codec = message((obj, w, opts = {}) => {\n                    if (opts.lengthDelimited !== false) {\n                        w.fork();\n                    }\n                    if ((obj.key != null && obj.key !== '')) {\n                        w.uint32(10);\n                        w.string(obj.key);\n                    }\n                    if ((obj.value != null && obj.value.byteLength > 0)) {\n                        w.uint32(18);\n                        w.bytes(obj.value);\n                    }\n                    if (opts.lengthDelimited !== false) {\n                        w.ldelim();\n                    }\n                }, (reader, length) => {\n                    const obj = {\n                        key: '',\n                        value: new Uint8Array(0)\n                    };\n                    const end = length == null ? reader.len : reader.pos + length;\n                    while (reader.pos < end) {\n                        const tag = reader.uint32();\n                        switch (tag >>> 3) {\n                            case 1:\n                                obj.key = reader.string();\n                                break;\n                            case 2:\n                                obj.value = reader.bytes();\n                                break;\n                            default:\n                                reader.skipType(tag & 7);\n                                break;\n                        }\n                    }\n                    return obj;\n                });\n            }\n            return _codec;\n        };\n        Peer$metadataEntry.encode = (obj) => {\n            return encodeMessage(obj, Peer$metadataEntry.codec());\n        };\n        Peer$metadataEntry.decode = (buf) => {\n            return decodeMessage(buf, Peer$metadataEntry.codec());\n        };\n    })(Peer$metadataEntry = Peer.Peer$metadataEntry || (Peer.Peer$metadataEntry = {}));\n    let Peer$tagsEntry;\n    (function (Peer$tagsEntry) {\n        let _codec;\n        Peer$tagsEntry.codec = () => {\n            if (_codec == null) {\n                _codec = message((obj, w, opts = {}) => {\n                    if (opts.lengthDelimited !== false) {\n                        w.fork();\n                    }\n                    if ((obj.key != null && obj.key !== '')) {\n                        w.uint32(10);\n                        w.string(obj.key);\n                    }\n                    if (obj.value != null) {\n                        w.uint32(18);\n                        Tag.codec().encode(obj.value, w);\n                    }\n                    if (opts.lengthDelimited !== false) {\n                        w.ldelim();\n                    }\n                }, (reader, length) => {\n                    const obj = {\n                        key: ''\n                    };\n                    const end = length == null ? reader.len : reader.pos + length;\n                    while (reader.pos < end) {\n                        const tag = reader.uint32();\n                        switch (tag >>> 3) {\n                            case 1:\n                                obj.key = reader.string();\n                                break;\n                            case 2:\n                                obj.value = Tag.codec().decode(reader, reader.uint32());\n                                break;\n                            default:\n                                reader.skipType(tag & 7);\n                                break;\n                        }\n                    }\n                    return obj;\n                });\n            }\n            return _codec;\n        };\n        Peer$tagsEntry.encode = (obj) => {\n            return encodeMessage(obj, Peer$tagsEntry.codec());\n        };\n        Peer$tagsEntry.decode = (buf) => {\n            return decodeMessage(buf, Peer$tagsEntry.codec());\n        };\n    })(Peer$tagsEntry = Peer.Peer$tagsEntry || (Peer.Peer$tagsEntry = {}));\n    let _codec;\n    Peer.codec = () => {\n        if (_codec == null) {\n            _codec = message((obj, w, opts = {}) => {\n                if (opts.lengthDelimited !== false) {\n                    w.fork();\n                }\n                if (obj.addresses != null) {\n                    for (const value of obj.addresses) {\n                        w.uint32(10);\n                        Address.codec().encode(value, w);\n                    }\n                }\n                if (obj.protocols != null) {\n                    for (const value of obj.protocols) {\n                        w.uint32(18);\n                        w.string(value);\n                    }\n                }\n                if (obj.publicKey != null) {\n                    w.uint32(34);\n                    w.bytes(obj.publicKey);\n                }\n                if (obj.peerRecordEnvelope != null) {\n                    w.uint32(42);\n                    w.bytes(obj.peerRecordEnvelope);\n                }\n                if (obj.metadata != null && obj.metadata.size !== 0) {\n                    for (const [key, value] of obj.metadata.entries()) {\n                        w.uint32(50);\n                        Peer.Peer$metadataEntry.codec().encode({ key, value }, w);\n                    }\n                }\n                if (obj.tags != null && obj.tags.size !== 0) {\n                    for (const [key, value] of obj.tags.entries()) {\n                        w.uint32(58);\n                        Peer.Peer$tagsEntry.codec().encode({ key, value }, w);\n                    }\n                }\n                if (opts.lengthDelimited !== false) {\n                    w.ldelim();\n                }\n            }, (reader, length) => {\n                const obj = {\n                    addresses: [],\n                    protocols: [],\n                    metadata: new Map(),\n                    tags: new Map()\n                };\n                const end = length == null ? reader.len : reader.pos + length;\n                while (reader.pos < end) {\n                    const tag = reader.uint32();\n                    switch (tag >>> 3) {\n                        case 1:\n                            obj.addresses.push(Address.codec().decode(reader, reader.uint32()));\n                            break;\n                        case 2:\n                            obj.protocols.push(reader.string());\n                            break;\n                        case 4:\n                            obj.publicKey = reader.bytes();\n                            break;\n                        case 5:\n                            obj.peerRecordEnvelope = reader.bytes();\n                            break;\n                        case 6: {\n                            const entry = Peer.Peer$metadataEntry.codec().decode(reader, reader.uint32());\n                            obj.metadata.set(entry.key, entry.value);\n                            break;\n                        }\n                        case 7: {\n                            const entry = Peer.Peer$tagsEntry.codec().decode(reader, reader.uint32());\n                            obj.tags.set(entry.key, entry.value);\n                            break;\n                        }\n                        default:\n                            reader.skipType(tag & 7);\n                            break;\n                    }\n                }\n                return obj;\n            });\n        }\n        return _codec;\n    };\n    Peer.encode = (obj) => {\n        return encodeMessage(obj, Peer.codec());\n    };\n    Peer.decode = (buf) => {\n        return decodeMessage(buf, Peer.codec());\n    };\n})(Peer || (Peer = {}));\nexport var Address;\n(function (Address) {\n    let _codec;\n    Address.codec = () => {\n        if (_codec == null) {\n            _codec = message((obj, w, opts = {}) => {\n                if (opts.lengthDelimited !== false) {\n                    w.fork();\n                }\n                if ((obj.multiaddr != null && obj.multiaddr.byteLength > 0)) {\n                    w.uint32(10);\n                    w.bytes(obj.multiaddr);\n                }\n                if (obj.isCertified != null) {\n                    w.uint32(16);\n                    w.bool(obj.isCertified);\n                }\n                if (opts.lengthDelimited !== false) {\n                    w.ldelim();\n                }\n            }, (reader, length) => {\n                const obj = {\n                    multiaddr: new Uint8Array(0)\n                };\n                const end = length == null ? reader.len : reader.pos + length;\n                while (reader.pos < end) {\n                    const tag = reader.uint32();\n                    switch (tag >>> 3) {\n                        case 1:\n                            obj.multiaddr = reader.bytes();\n                            break;\n                        case 2:\n                            obj.isCertified = reader.bool();\n                            break;\n                        default:\n                            reader.skipType(tag & 7);\n                            break;\n                    }\n                }\n                return obj;\n            });\n        }\n        return _codec;\n    };\n    Address.encode = (obj) => {\n        return encodeMessage(obj, Address.codec());\n    };\n    Address.decode = (buf) => {\n        return decodeMessage(buf, Address.codec());\n    };\n})(Address || (Address = {}));\nexport var Tag;\n(function (Tag) {\n    let _codec;\n    Tag.codec = () => {\n        if (_codec == null) {\n            _codec = message((obj, w, opts = {}) => {\n                if (opts.lengthDelimited !== false) {\n                    w.fork();\n                }\n                if ((obj.value != null && obj.value !== 0)) {\n                    w.uint32(8);\n                    w.uint32(obj.value);\n                }\n                if (obj.expiry != null) {\n                    w.uint32(16);\n                    w.uint64(obj.expiry);\n                }\n                if (opts.lengthDelimited !== false) {\n                    w.ldelim();\n                }\n            }, (reader, length) => {\n                const obj = {\n                    value: 0\n                };\n                const end = length == null ? reader.len : reader.pos + length;\n                while (reader.pos < end) {\n                    const tag = reader.uint32();\n                    switch (tag >>> 3) {\n                        case 1:\n                            obj.value = reader.uint32();\n                            break;\n                        case 2:\n                            obj.expiry = reader.uint64();\n                            break;\n                        default:\n                            reader.skipType(tag & 7);\n                            break;\n                    }\n                }\n                return obj;\n            });\n        }\n        return _codec;\n    };\n    Tag.encode = (obj) => {\n        return encodeMessage(obj, Tag.codec());\n    };\n    Tag.decode = (buf) => {\n        return decodeMessage(buf, Tag.codec());\n    };\n})(Tag || (Tag = {}));\n//# sourceMappingURL=peer.js.map","import { peerIdFromPeerId } from '@libp2p/peer-id';\nimport { multiaddr } from '@multiformats/multiaddr';\nimport { Peer as PeerPB } from '../pb/peer.js';\nexport function bytesToPeer(peerId, buf) {\n    const peer = PeerPB.decode(buf);\n    if (peer.publicKey != null && peerId.publicKey == null) {\n        peerId = peerIdFromPeerId({\n            ...peerId,\n            publicKey: peerId.publicKey\n        });\n    }\n    const tags = new Map();\n    // remove any expired tags\n    const now = BigInt(Date.now());\n    for (const [key, tag] of peer.tags.entries()) {\n        if (tag.expiry != null && tag.expiry < now) {\n            continue;\n        }\n        tags.set(key, tag);\n    }\n    return {\n        ...peer,\n        id: peerId,\n        addresses: peer.addresses.map(({ multiaddr: ma, isCertified }) => {\n            return {\n                multiaddr: multiaddr(ma),\n                isCertified: isCertified ?? false\n            };\n        }),\n        metadata: peer.metadata,\n        peerRecordEnvelope: peer.peerRecordEnvelope ?? undefined,\n        tags\n    };\n}\n//# sourceMappingURL=bytes-to-peer.js.map","import { fromString as uint8ArrayFromString } from 'uint8arrays/from-string';\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string';\nconst pathSepS = '/';\nconst pathSepB = new TextEncoder().encode(pathSepS);\nconst pathSep = pathSepB[0];\n/**\n * A Key represents the unique identifier of an object.\n * Our Key scheme is inspired by file systems and Google App Engine key model.\n * Keys are meant to be unique across a system. Keys are hierarchical,\n * incorporating more and more specific namespaces. Thus keys can be deemed\n * 'children' or 'ancestors' of other keys:\n * - `new Key('/Comedy')`\n * - `new Key('/Comedy/MontyPython')`\n * Also, every namespace can be parametrized to embed relevant object\n * information. For example, the Key `name` (most specific namespace) could\n * include the object type:\n * - `new Key('/Comedy/MontyPython/Actor:JohnCleese')`\n * - `new Key('/Comedy/MontyPython/Sketch:CheeseShop')`\n * - `new Key('/Comedy/MontyPython/Sketch:CheeseShop/Character:Mousebender')`\n *\n */\nexport class Key {\n    _buf;\n    /**\n     * @param {string | Uint8Array} s\n     * @param {boolean} [clean]\n     */\n    constructor(s, clean) {\n        if (typeof s === 'string') {\n            this._buf = uint8ArrayFromString(s);\n        }\n        else if (s instanceof Uint8Array) {\n            this._buf = s;\n        }\n        else {\n            throw new Error('Invalid key, should be String of Uint8Array');\n        }\n        if (clean == null) {\n            clean = true;\n        }\n        if (clean) {\n            this.clean();\n        }\n        if (this._buf.byteLength === 0 || this._buf[0] !== pathSep) {\n            throw new Error('Invalid key');\n        }\n    }\n    /**\n     * Convert to the string representation\n     *\n     * @param {import('uint8arrays/to-string').SupportedEncodings} [encoding='utf8'] - The encoding to use.\n     * @returns {string}\n     */\n    toString(encoding = 'utf8') {\n        return uint8ArrayToString(this._buf, encoding);\n    }\n    /**\n     * Return the Uint8Array representation of the key\n     *\n     * @returns {Uint8Array}\n     */\n    uint8Array() {\n        return this._buf;\n    }\n    /**\n     * Return string representation of the key\n     *\n     * @returns {string}\n     */\n    get [Symbol.toStringTag]() {\n        return `Key(${this.toString()})`;\n    }\n    /**\n     * Constructs a key out of a namespace array.\n     *\n     * @param {Array<string>} list - The array of namespaces\n     * @returns {Key}\n     *\n     * @example\n     * ```js\n     * Key.withNamespaces(['one', 'two'])\n     * // => Key('/one/two')\n     * ```\n     */\n    static withNamespaces(list) {\n        return new Key(list.join(pathSepS));\n    }\n    /**\n     * Returns a randomly (uuid) generated key.\n     *\n     * @returns {Key}\n     *\n     * @example\n     * ```js\n     * Key.random()\n     * // => Key('/344502982398')\n     * ```\n     */\n    static random() {\n        return new Key(Math.random().toString().substring(2));\n    }\n    /**\n     * @param {*} other\n     */\n    static asKey(other) {\n        if (other instanceof Uint8Array || typeof other === 'string') {\n            // we can create a key from this\n            return new Key(other);\n        }\n        if (typeof other.uint8Array === 'function') {\n            // this is an older version or may have crossed the esm/cjs boundary\n            return new Key(other.uint8Array());\n        }\n        return null;\n    }\n    /**\n     * Cleanup the current key\n     *\n     * @returns {void}\n     */\n    clean() {\n        if (this._buf == null || this._buf.byteLength === 0) {\n            this._buf = pathSepB;\n        }\n        if (this._buf[0] !== pathSep) {\n            const bytes = new Uint8Array(this._buf.byteLength + 1);\n            bytes.fill(pathSep, 0, 1);\n            bytes.set(this._buf, 1);\n            this._buf = bytes;\n        }\n        // normalize does not remove trailing slashes\n        while (this._buf.byteLength > 1 && this._buf[this._buf.byteLength - 1] === pathSep) {\n            this._buf = this._buf.subarray(0, -1);\n        }\n    }\n    /**\n     * Check if the given key is sorted lower than ourself.\n     *\n     * @param {Key} key - The other Key to check against\n     * @returns {boolean}\n     */\n    less(key) {\n        const list1 = this.list();\n        const list2 = key.list();\n        for (let i = 0; i < list1.length; i++) {\n            if (list2.length < i + 1) {\n                return false;\n            }\n            const c1 = list1[i];\n            const c2 = list2[i];\n            if (c1 < c2) {\n                return true;\n            }\n            else if (c1 > c2) {\n                return false;\n            }\n        }\n        return list1.length < list2.length;\n    }\n    /**\n     * Returns the key with all parts in reversed order.\n     *\n     * @returns {Key}\n     *\n     * @example\n     * ```js\n     * new Key('/Comedy/MontyPython/Actor:JohnCleese').reverse()\n     * // => Key('/Actor:JohnCleese/MontyPython/Comedy')\n     * ```\n     */\n    reverse() {\n        return Key.withNamespaces(this.list().slice().reverse());\n    }\n    /**\n     * Returns the `namespaces` making up this Key.\n     *\n     * @returns {Array<string>}\n     */\n    namespaces() {\n        return this.list();\n    }\n    /** Returns the \"base\" namespace of this key.\n     *\n     * @returns {string}\n     *\n     * @example\n     * ```js\n     * new Key('/Comedy/MontyPython/Actor:JohnCleese').baseNamespace()\n     * // => 'Actor:JohnCleese'\n     * ```\n     */\n    baseNamespace() {\n        const ns = this.namespaces();\n        return ns[ns.length - 1];\n    }\n    /**\n     * Returns the `list` representation of this key.\n     *\n     * @returns {Array<string>}\n     *\n     * @example\n     * ```js\n     * new Key('/Comedy/MontyPython/Actor:JohnCleese').list()\n     * // => ['Comedy', 'MontyPythong', 'Actor:JohnCleese']\n     * ```\n     */\n    list() {\n        return this.toString().split(pathSepS).slice(1);\n    }\n    /**\n     * Returns the \"type\" of this key (value of last namespace).\n     *\n     * @returns {string}\n     *\n     * @example\n     * ```js\n     * new Key('/Comedy/MontyPython/Actor:JohnCleese').type()\n     * // => 'Actor'\n     * ```\n     */\n    type() {\n        return namespaceType(this.baseNamespace());\n    }\n    /**\n     * Returns the \"name\" of this key (field of last namespace).\n     *\n     * @returns {string}\n     *\n     * @example\n     * ```js\n     * new Key('/Comedy/MontyPython/Actor:JohnCleese').name()\n     * // => 'JohnCleese'\n     * ```\n     */\n    name() {\n        return namespaceValue(this.baseNamespace());\n    }\n    /**\n     * Returns an \"instance\" of this type key (appends value to namespace).\n     *\n     * @param {string} s - The string to append.\n     * @returns {Key}\n     *\n     * @example\n     * ```js\n     * new Key('/Comedy/MontyPython/Actor').instance('JohnClesse')\n     * // => Key('/Comedy/MontyPython/Actor:JohnCleese')\n     * ```\n     */\n    instance(s) {\n        return new Key(this.toString() + ':' + s);\n    }\n    /**\n     * Returns the \"path\" of this key (parent + type).\n     *\n     * @returns {Key}\n     *\n     * @example\n     * ```js\n     * new Key('/Comedy/MontyPython/Actor:JohnCleese').path()\n     * // => Key('/Comedy/MontyPython/Actor')\n     * ```\n     */\n    path() {\n        let p = this.parent().toString();\n        if (!p.endsWith(pathSepS)) {\n            p += pathSepS;\n        }\n        p += this.type();\n        return new Key(p);\n    }\n    /**\n     * Returns the `parent` Key of this Key.\n     *\n     * @returns {Key}\n     *\n     * @example\n     * ```js\n     * new Key(\"/Comedy/MontyPython/Actor:JohnCleese\").parent()\n     * // => Key(\"/Comedy/MontyPython\")\n     * ```\n     */\n    parent() {\n        const list = this.list();\n        if (list.length === 1) {\n            return new Key(pathSepS);\n        }\n        return new Key(list.slice(0, -1).join(pathSepS));\n    }\n    /**\n     * Returns the `child` Key of this Key.\n     *\n     * @param {Key} key - The child Key to add\n     * @returns {Key}\n     *\n     * @example\n     * ```js\n     * new Key('/Comedy/MontyPython').child(new Key('Actor:JohnCleese'))\n     * // => Key('/Comedy/MontyPython/Actor:JohnCleese')\n     * ```\n     */\n    child(key) {\n        if (this.toString() === pathSepS) {\n            return key;\n        }\n        else if (key.toString() === pathSepS) {\n            return this;\n        }\n        return new Key(this.toString() + key.toString(), false);\n    }\n    /**\n     * Returns whether this key is a prefix of `other`\n     *\n     * @param {Key} other - The other key to test against\n     * @returns {boolean}\n     *\n     * @example\n     * ```js\n     * new Key('/Comedy').isAncestorOf('/Comedy/MontyPython')\n     * // => true\n     * ```\n     */\n    isAncestorOf(other) {\n        if (other.toString() === this.toString()) {\n            return false;\n        }\n        return other.toString().startsWith(this.toString());\n    }\n    /**\n     * Returns whether this key is a contains another as prefix.\n     *\n     * @param {Key} other - The other Key to test against\n     * @returns {boolean}\n     *\n     * @example\n     * ```js\n     * new Key('/Comedy/MontyPython').isDecendantOf('/Comedy')\n     * // => true\n     * ```\n     */\n    isDecendantOf(other) {\n        if (other.toString() === this.toString()) {\n            return false;\n        }\n        return this.toString().startsWith(other.toString());\n    }\n    /**\n     * Checks if this key has only one namespace.\n     *\n     * @returns {boolean}\n     */\n    isTopLevel() {\n        return this.list().length === 1;\n    }\n    /**\n     * Concats one or more Keys into one new Key.\n     *\n     * @param {Array<Key>} keys - The array of keys to concatenate\n     * @returns {Key}\n     */\n    concat(...keys) {\n        return Key.withNamespaces([...this.namespaces(), ...flatten(keys.map(key => key.namespaces()))]);\n    }\n}\n/**\n * The first component of a namespace. `foo` in `foo:bar`\n *\n * @param {string} ns\n * @returns {string}\n */\nfunction namespaceType(ns) {\n    const parts = ns.split(':');\n    if (parts.length < 2) {\n        return '';\n    }\n    return parts.slice(0, -1).join(':');\n}\n/**\n * The last component of a namespace, `baz` in `foo:bar:baz`.\n *\n * @param {string} ns\n * @returns {string}\n */\nfunction namespaceValue(ns) {\n    const parts = ns.split(':');\n    return parts[parts.length - 1];\n}\n/**\n * Flatten array of arrays (only one level)\n *\n * @template T\n * @param {Array<any>} arr\n * @returns {T[]}\n */\nfunction flatten(arr) {\n    return ([]).concat(...arr);\n}\n//# sourceMappingURL=key.js.map","import { CodeError } from '@libp2p/interface';\nimport { isPeerId } from '@libp2p/interface';\nimport { Key } from 'interface-datastore/key';\nimport { codes } from '../errors.js';\nexport const NAMESPACE_COMMON = '/peers/';\nexport function peerIdToDatastoreKey(peerId) {\n    if (!isPeerId(peerId) || peerId.type == null) {\n        throw new CodeError('Invalid PeerId', codes.ERR_INVALID_PARAMETERS);\n    }\n    const b32key = peerId.toCID().toString();\n    return new Key(`${NAMESPACE_COMMON}${b32key}`);\n}\n//# sourceMappingURL=peer-id-to-datastore-key.js.map","import { CodeError } from '@libp2p/interface';\nimport { isMultiaddr, multiaddr } from '@multiformats/multiaddr';\nimport { codes } from '../errors.js';\nexport async function dedupeFilterAndSortAddresses(peerId, filter, addresses) {\n    const addressMap = new Map();\n    for (const addr of addresses) {\n        if (addr == null) {\n            continue;\n        }\n        if (addr.multiaddr instanceof Uint8Array) {\n            addr.multiaddr = multiaddr(addr.multiaddr);\n        }\n        if (!isMultiaddr(addr.multiaddr)) {\n            throw new CodeError('Multiaddr was invalid', codes.ERR_INVALID_PARAMETERS);\n        }\n        if (!(await filter(peerId, addr.multiaddr))) {\n            continue;\n        }\n        const isCertified = addr.isCertified ?? false;\n        const maStr = addr.multiaddr.toString();\n        const existingAddr = addressMap.get(maStr);\n        if (existingAddr != null) {\n            addr.isCertified = existingAddr.isCertified || isCertified;\n        }\n        else {\n            addressMap.set(maStr, {\n                multiaddr: addr.multiaddr,\n                isCertified\n            });\n        }\n    }\n    return [...addressMap.values()]\n        .sort((a, b) => {\n        return a.multiaddr.toString().localeCompare(b.multiaddr.toString());\n    })\n        .map(({ isCertified, multiaddr }) => ({\n        isCertified,\n        multiaddr: multiaddr.bytes\n    }));\n}\n//# sourceMappingURL=dedupe-addresses.js.map","import { CodeError } from '@libp2p/interface';\nimport { equals as uint8arrayEquals } from 'uint8arrays/equals';\nimport { codes } from '../errors.js';\nimport { dedupeFilterAndSortAddresses } from './dedupe-addresses.js';\nexport async function toPeerPB(peerId, data, strategy, options) {\n    if (data == null) {\n        throw new CodeError('Invalid PeerData', codes.ERR_INVALID_PARAMETERS);\n    }\n    if (data.publicKey != null && peerId.publicKey != null && !uint8arrayEquals(data.publicKey, peerId.publicKey)) {\n        throw new CodeError('publicKey bytes do not match peer id publicKey bytes', codes.ERR_INVALID_PARAMETERS);\n    }\n    const existingPeer = options.existingPeer;\n    if (existingPeer != null && !peerId.equals(existingPeer.id)) {\n        throw new CodeError('peer id did not match existing peer id', codes.ERR_INVALID_PARAMETERS);\n    }\n    let addresses = existingPeer?.addresses ?? [];\n    let protocols = new Set(existingPeer?.protocols ?? []);\n    let metadata = existingPeer?.metadata ?? new Map();\n    let tags = existingPeer?.tags ?? new Map();\n    let peerRecordEnvelope = existingPeer?.peerRecordEnvelope;\n    // when patching, we replace the original fields with passed values\n    if (strategy === 'patch') {\n        if (data.multiaddrs != null || data.addresses != null) {\n            addresses = [];\n            if (data.multiaddrs != null) {\n                addresses.push(...data.multiaddrs.map(multiaddr => ({\n                    isCertified: false,\n                    multiaddr\n                })));\n            }\n            if (data.addresses != null) {\n                addresses.push(...data.addresses);\n            }\n        }\n        if (data.protocols != null) {\n            protocols = new Set(data.protocols);\n        }\n        if (data.metadata != null) {\n            const metadataEntries = data.metadata instanceof Map ? [...data.metadata.entries()] : Object.entries(data.metadata);\n            metadata = createSortedMap(metadataEntries, {\n                validate: validateMetadata\n            });\n        }\n        if (data.tags != null) {\n            const tagsEntries = data.tags instanceof Map ? [...data.tags.entries()] : Object.entries(data.tags);\n            tags = createSortedMap(tagsEntries, {\n                validate: validateTag,\n                map: mapTag\n            });\n        }\n        if (data.peerRecordEnvelope != null) {\n            peerRecordEnvelope = data.peerRecordEnvelope;\n        }\n    }\n    // when merging, we join the original fields with passed values\n    if (strategy === 'merge') {\n        if (data.multiaddrs != null) {\n            addresses.push(...data.multiaddrs.map(multiaddr => ({\n                isCertified: false,\n                multiaddr\n            })));\n        }\n        if (data.addresses != null) {\n            addresses.push(...data.addresses);\n        }\n        if (data.protocols != null) {\n            protocols = new Set([...protocols, ...data.protocols]);\n        }\n        if (data.metadata != null) {\n            const metadataEntries = data.metadata instanceof Map ? [...data.metadata.entries()] : Object.entries(data.metadata);\n            for (const [key, value] of metadataEntries) {\n                if (value == null) {\n                    metadata.delete(key);\n                }\n                else {\n                    metadata.set(key, value);\n                }\n            }\n            metadata = createSortedMap([...metadata.entries()], {\n                validate: validateMetadata\n            });\n        }\n        if (data.tags != null) {\n            const tagsEntries = data.tags instanceof Map ? [...data.tags.entries()] : Object.entries(data.tags);\n            const mergedTags = new Map(tags);\n            for (const [key, value] of tagsEntries) {\n                if (value == null) {\n                    mergedTags.delete(key);\n                }\n                else {\n                    mergedTags.set(key, value);\n                }\n            }\n            tags = createSortedMap([...mergedTags.entries()], {\n                validate: validateTag,\n                map: mapTag\n            });\n        }\n        if (data.peerRecordEnvelope != null) {\n            peerRecordEnvelope = data.peerRecordEnvelope;\n        }\n    }\n    const output = {\n        addresses: await dedupeFilterAndSortAddresses(peerId, options.addressFilter ?? (async () => true), addresses),\n        protocols: [...protocols.values()].sort((a, b) => {\n            return a.localeCompare(b);\n        }),\n        metadata,\n        tags,\n        publicKey: existingPeer?.id.publicKey ?? data.publicKey ?? peerId.publicKey,\n        peerRecordEnvelope\n    };\n    // Ed25519 and secp256k1 have their public key embedded in them so no need to duplicate it\n    if (peerId.type !== 'RSA') {\n        delete output.publicKey;\n    }\n    return output;\n}\n/**\n * In JS maps are ordered by insertion order so create a new map with the\n * keys inserted in alphabetical order.\n */\nfunction createSortedMap(entries, options) {\n    const output = new Map();\n    for (const [key, value] of entries) {\n        if (value == null) {\n            continue;\n        }\n        options.validate(key, value);\n    }\n    for (const [key, value] of entries.sort(([a], [b]) => {\n        return a.localeCompare(b);\n    })) {\n        if (value != null) {\n            output.set(key, options.map?.(key, value) ?? value);\n        }\n    }\n    return output;\n}\nfunction validateMetadata(key, value) {\n    if (typeof key !== 'string') {\n        throw new CodeError('Metadata key must be a string', codes.ERR_INVALID_PARAMETERS);\n    }\n    if (!(value instanceof Uint8Array)) {\n        throw new CodeError('Metadata value must be a Uint8Array', codes.ERR_INVALID_PARAMETERS);\n    }\n}\nfunction validateTag(key, tag) {\n    if (typeof key !== 'string') {\n        throw new CodeError('Tag name must be a string', codes.ERR_INVALID_PARAMETERS);\n    }\n    if (tag.value != null) {\n        if (parseInt(`${tag.value}`, 10) !== tag.value) {\n            throw new CodeError('Tag value must be an integer', codes.ERR_INVALID_PARAMETERS);\n        }\n        if (tag.value < 0 || tag.value > 100) {\n            throw new CodeError('Tag value must be between 0-100', codes.ERR_INVALID_PARAMETERS);\n        }\n    }\n    if (tag.ttl != null) {\n        if (parseInt(`${tag.ttl}`, 10) !== tag.ttl) {\n            throw new CodeError('Tag ttl must be an integer', codes.ERR_INVALID_PARAMETERS);\n        }\n        if (tag.ttl < 0) {\n            throw new CodeError('Tag ttl must be between greater than 0', codes.ERR_INVALID_PARAMETERS);\n        }\n    }\n}\nfunction mapTag(key, tag) {\n    let expiry;\n    if (tag.expiry != null) {\n        expiry = tag.expiry;\n    }\n    if (tag.ttl != null) {\n        expiry = BigInt(Date.now() + Number(tag.ttl));\n    }\n    return {\n        value: tag.value ?? 0,\n        expiry\n    };\n}\n//# sourceMappingURL=to-peer-pb.js.map","import { CodeError } from '@libp2p/interface';\nimport { PeerMap } from '@libp2p/peer-collections';\nimport { peerIdFromBytes } from '@libp2p/peer-id';\nimport mortice, {} from 'mortice';\nimport { base32 } from 'multiformats/bases/base32';\nimport { equals as uint8ArrayEquals } from 'uint8arrays/equals';\nimport { codes } from './errors.js';\nimport { Peer as PeerPB } from './pb/peer.js';\nimport { bytesToPeer } from './utils/bytes-to-peer.js';\nimport { NAMESPACE_COMMON, peerIdToDatastoreKey } from './utils/peer-id-to-datastore-key.js';\nimport { toPeerPB } from './utils/to-peer-pb.js';\nfunction decodePeer(key, value, cache) {\n    // /peers/${peer-id-as-libp2p-key-cid-string-in-base-32}\n    const base32Str = key.toString().split('/')[2];\n    const buf = base32.decode(base32Str);\n    const peerId = peerIdFromBytes(buf);\n    const cached = cache.get(peerId);\n    if (cached != null) {\n        return cached;\n    }\n    const peer = bytesToPeer(peerId, value);\n    cache.set(peerId, peer);\n    return peer;\n}\nfunction mapQuery(query, cache) {\n    if (query == null) {\n        return {};\n    }\n    return {\n        prefix: NAMESPACE_COMMON,\n        filters: (query.filters ?? []).map(fn => ({ key, value }) => {\n            return fn(decodePeer(key, value, cache));\n        }),\n        orders: (query.orders ?? []).map(fn => (a, b) => {\n            return fn(decodePeer(a.key, a.value, cache), decodePeer(b.key, b.value, cache));\n        })\n    };\n}\nexport class PersistentStore {\n    peerId;\n    datastore;\n    lock;\n    addressFilter;\n    constructor(components, init = {}) {\n        this.peerId = components.peerId;\n        this.datastore = components.datastore;\n        this.addressFilter = init.addressFilter;\n        this.lock = mortice({\n            name: 'peer-store',\n            singleProcess: true\n        });\n    }\n    async has(peerId) {\n        return this.datastore.has(peerIdToDatastoreKey(peerId));\n    }\n    async delete(peerId) {\n        if (this.peerId.equals(peerId)) {\n            throw new CodeError('Cannot delete self peer', codes.ERR_INVALID_PARAMETERS);\n        }\n        await this.datastore.delete(peerIdToDatastoreKey(peerId));\n    }\n    async load(peerId) {\n        const buf = await this.datastore.get(peerIdToDatastoreKey(peerId));\n        return bytesToPeer(peerId, buf);\n    }\n    async save(peerId, data) {\n        const { existingBuf, existingPeer } = await this.#findExistingPeer(peerId);\n        const peerPb = await toPeerPB(peerId, data, 'patch', {\n            addressFilter: this.addressFilter\n        });\n        return this.#saveIfDifferent(peerId, peerPb, existingBuf, existingPeer);\n    }\n    async patch(peerId, data) {\n        const { existingBuf, existingPeer } = await this.#findExistingPeer(peerId);\n        const peerPb = await toPeerPB(peerId, data, 'patch', {\n            addressFilter: this.addressFilter,\n            existingPeer\n        });\n        return this.#saveIfDifferent(peerId, peerPb, existingBuf, existingPeer);\n    }\n    async merge(peerId, data) {\n        const { existingBuf, existingPeer } = await this.#findExistingPeer(peerId);\n        const peerPb = await toPeerPB(peerId, data, 'merge', {\n            addressFilter: this.addressFilter,\n            existingPeer\n        });\n        return this.#saveIfDifferent(peerId, peerPb, existingBuf, existingPeer);\n    }\n    async *all(query) {\n        const peerCache = new PeerMap();\n        for await (const { key, value } of this.datastore.query(mapQuery(query ?? {}, peerCache))) {\n            const peer = decodePeer(key, value, peerCache);\n            if (peer.id.equals(this.peerId)) {\n                // Skip self peer if present\n                continue;\n            }\n            yield peer;\n        }\n    }\n    async #findExistingPeer(peerId) {\n        try {\n            const existingBuf = await this.datastore.get(peerIdToDatastoreKey(peerId));\n            const existingPeer = bytesToPeer(peerId, existingBuf);\n            return {\n                existingBuf,\n                existingPeer\n            };\n        }\n        catch (err) {\n            if (err.code !== 'ERR_NOT_FOUND') {\n                throw err;\n            }\n        }\n        return {};\n    }\n    async #saveIfDifferent(peerId, peer, existingBuf, existingPeer) {\n        const buf = PeerPB.encode(peer);\n        if (existingBuf != null && uint8ArrayEquals(buf, existingBuf)) {\n            return {\n                peer: bytesToPeer(peerId, buf),\n                previous: existingPeer,\n                updated: false\n            };\n        }\n        await this.datastore.put(peerIdToDatastoreKey(peerId), buf);\n        return {\n            peer: bytesToPeer(peerId, buf),\n            previous: existingPeer,\n            updated: true\n        };\n    }\n}\n//# sourceMappingURL=store.js.map","/**\n * @packageDocumentation\n *\n * The peer store is where libp2p stores data about the peers it has encountered on the network.\n */\nimport { RecordEnvelope, PeerRecord } from '@libp2p/peer-record';\nimport all from 'it-all';\nimport { PersistentStore } from './store.js';\n/**\n * An implementation of PeerStore that stores data in a Datastore\n */\nexport class PersistentPeerStore {\n    store;\n    events;\n    peerId;\n    log;\n    constructor(components, init = {}) {\n        this.log = components.logger.forComponent('libp2p:peer-store');\n        this.events = components.events;\n        this.peerId = components.peerId;\n        this.store = new PersistentStore(components, init);\n    }\n    [Symbol.toStringTag] = '@libp2p/peer-store';\n    async forEach(fn, query) {\n        this.log.trace('forEach await read lock');\n        const release = await this.store.lock.readLock();\n        this.log.trace('forEach got read lock');\n        try {\n            for await (const peer of this.store.all(query)) {\n                fn(peer);\n            }\n        }\n        finally {\n            this.log.trace('forEach release read lock');\n            release();\n        }\n    }\n    async all(query) {\n        this.log.trace('all await read lock');\n        const release = await this.store.lock.readLock();\n        this.log.trace('all got read lock');\n        try {\n            return await all(this.store.all(query));\n        }\n        finally {\n            this.log.trace('all release read lock');\n            release();\n        }\n    }\n    async delete(peerId) {\n        this.log.trace('delete await write lock');\n        const release = await this.store.lock.writeLock();\n        this.log.trace('delete got write lock');\n        try {\n            await this.store.delete(peerId);\n        }\n        finally {\n            this.log.trace('delete release write lock');\n            release();\n        }\n    }\n    async has(peerId) {\n        this.log.trace('has await read lock');\n        const release = await this.store.lock.readLock();\n        this.log.trace('has got read lock');\n        try {\n            return await this.store.has(peerId);\n        }\n        finally {\n            this.log.trace('has release read lock');\n            release();\n        }\n    }\n    async get(peerId) {\n        this.log.trace('get await read lock');\n        const release = await this.store.lock.readLock();\n        this.log.trace('get got read lock');\n        try {\n            return await this.store.load(peerId);\n        }\n        finally {\n            this.log.trace('get release read lock');\n            release();\n        }\n    }\n    async save(id, data) {\n        this.log.trace('save await write lock');\n        const release = await this.store.lock.writeLock();\n        this.log.trace('save got write lock');\n        try {\n            const result = await this.store.save(id, data);\n            this.#emitIfUpdated(id, result);\n            return result.peer;\n        }\n        finally {\n            this.log.trace('save release write lock');\n            release();\n        }\n    }\n    async patch(id, data) {\n        this.log.trace('patch await write lock');\n        const release = await this.store.lock.writeLock();\n        this.log.trace('patch got write lock');\n        try {\n            const result = await this.store.patch(id, data);\n            this.#emitIfUpdated(id, result);\n            return result.peer;\n        }\n        finally {\n            this.log.trace('patch release write lock');\n            release();\n        }\n    }\n    async merge(id, data) {\n        this.log.trace('merge await write lock');\n        const release = await this.store.lock.writeLock();\n        this.log.trace('merge got write lock');\n        try {\n            const result = await this.store.merge(id, data);\n            this.#emitIfUpdated(id, result);\n            return result.peer;\n        }\n        finally {\n            this.log.trace('merge release write lock');\n            release();\n        }\n    }\n    async consumePeerRecord(buf, expectedPeer) {\n        const envelope = await RecordEnvelope.openAndCertify(buf, PeerRecord.DOMAIN);\n        if (expectedPeer?.equals(envelope.peerId) === false) {\n            this.log('envelope peer id was not the expected peer id - expected: %p received: %p', expectedPeer, envelope.peerId);\n            return false;\n        }\n        const peerRecord = PeerRecord.createFromProtobuf(envelope.payload);\n        let peer;\n        try {\n            peer = await this.get(envelope.peerId);\n        }\n        catch (err) {\n            if (err.code !== 'ERR_NOT_FOUND') {\n                throw err;\n            }\n        }\n        // ensure seq is greater than, or equal to, the last received\n        if (peer?.peerRecordEnvelope != null) {\n            const storedEnvelope = await RecordEnvelope.createFromProtobuf(peer.peerRecordEnvelope);\n            const storedRecord = PeerRecord.createFromProtobuf(storedEnvelope.payload);\n            if (storedRecord.seqNumber >= peerRecord.seqNumber) {\n                this.log('sequence number was lower or equal to existing sequence number - stored: %d received: %d', storedRecord.seqNumber, peerRecord.seqNumber);\n                return false;\n            }\n        }\n        await this.patch(peerRecord.peerId, {\n            peerRecordEnvelope: buf,\n            addresses: peerRecord.multiaddrs.map(multiaddr => ({\n                isCertified: true,\n                multiaddr\n            }))\n        });\n        return true;\n    }\n    #emitIfUpdated(id, result) {\n        if (!result.updated) {\n            return;\n        }\n        if (this.peerId.equals(id)) {\n            this.events.safeDispatchEvent('self:peer:update', { detail: result });\n        }\n        else {\n            this.events.safeDispatchEvent('peer:update', { detail: result });\n        }\n    }\n}\n//# sourceMappingURL=index.js.map","/**\n * @packageDocumentation\n *\n * Mostly useful for tests or when you want to be explicit about consuming an iterable without doing anything with any yielded values.\n *\n * @example\n *\n * ```javascript\n * import drain from 'it-drain'\n *\n * // This can also be an iterator, generator, etc\n * const values = [0, 1, 2, 3, 4]\n *\n * drain(values)\n * ```\n *\n * Async sources must be awaited:\n *\n * ```javascript\n * import drain from 'it-drain'\n *\n * const values = async function * {\n *   yield * [0, 1, 2, 3, 4]\n * }\n *\n * await drain(values())\n * ```\n */\nfunction isAsyncIterable(thing) {\n    return thing[Symbol.asyncIterator] != null;\n}\nfunction drain(source) {\n    if (isAsyncIterable(source)) {\n        return (async () => {\n            for await (const _ of source) { } // eslint-disable-line no-unused-vars,no-empty,@typescript-eslint/no-unused-vars\n        })();\n    }\n    else {\n        for (const _ of source) { } // eslint-disable-line no-unused-vars,no-empty,@typescript-eslint/no-unused-vars\n    }\n}\nexport default drain;\n//# sourceMappingURL=index.js.map","/**\n * @packageDocumentation\n *\n * Filter values out of an (async)iterable\n *\n * @example\n *\n * ```javascript\n * import all from 'it-all'\n * import filter from 'it-filter'\n *\n * // This can also be an iterator, generator, etc\n * const values = [0, 1, 2, 3, 4]\n *\n * const fn = (val, index) => val > 2 // Return boolean to keep item\n *\n * const arr = all(filter(values, fn))\n *\n * console.info(arr) // 3, 4\n * ```\n *\n * Async sources and filter functions must be awaited:\n *\n * ```javascript\n * import all from 'it-all'\n * import filter from 'it-filter'\n *\n * const values = async function * () {\n *   yield * [0, 1, 2, 3, 4]\n * }\n *\n * const fn = async val => (val, index) > 2 // Return boolean or promise of boolean to keep item\n *\n * const arr = await all(filter(values, fn))\n *\n * console.info(arr) // 3, 4\n * ```\n */\nimport peek from 'it-peekable';\nfunction isAsyncIterable(thing) {\n    return thing[Symbol.asyncIterator] != null;\n}\nfunction filter(source, fn) {\n    let index = 0;\n    if (isAsyncIterable(source)) {\n        return (async function* () {\n            for await (const entry of source) {\n                if (await fn(entry, index++)) {\n                    yield entry;\n                }\n            }\n        })();\n    }\n    // if mapping function returns a promise we have to return an async generator\n    const peekable = peek(source);\n    const { value, done } = peekable.next();\n    if (done === true) {\n        return (function* () { }());\n    }\n    const res = fn(value, index++);\n    // @ts-expect-error .then is not present on O\n    if (typeof res.then === 'function') {\n        return (async function* () {\n            if (await res) {\n                yield value;\n            }\n            for await (const entry of peekable) {\n                if (await fn(entry, index++)) {\n                    yield entry;\n                }\n            }\n        })();\n    }\n    const func = fn;\n    return (function* () {\n        if (res === true) {\n            yield value;\n        }\n        for (const entry of peekable) {\n            if (func(entry, index++)) {\n                yield entry;\n            }\n        }\n    })();\n}\nexport default filter;\n//# sourceMappingURL=index.js.map","/**\n * @packageDocumentation\n *\n * Lets you look at the contents of an async iterator and decide what to do\n *\n * @example\n *\n * ```javascript\n * import peekable from 'it-peekable'\n *\n * // This can also be an iterator, generator, etc\n * const values = [0, 1, 2, 3, 4]\n *\n * const it = peekable(value)\n *\n * const first = it.peek()\n *\n * console.info(first) // 0\n *\n * it.push(first)\n *\n * console.info([...it])\n * // [ 0, 1, 2, 3, 4 ]\n * ```\n *\n * Async sources must be awaited:\n *\n * ```javascript\n * import peekable from 'it-peekable'\n *\n * const values = async function * () {\n *   yield * [0, 1, 2, 3, 4]\n * }\n *\n * const it = peekable(values())\n *\n * const first = await it.peek()\n *\n * console.info(first) // 0\n *\n * it.push(first)\n *\n * console.info(await all(it))\n * // [ 0, 1, 2, 3, 4 ]\n * ```\n */\nfunction peekable(iterable) {\n    // @ts-expect-error can't use Symbol.asyncIterator to index iterable since it might be Iterable\n    const [iterator, symbol] = iterable[Symbol.asyncIterator] != null\n        // @ts-expect-error can't use Symbol.asyncIterator to index iterable since it might be Iterable\n        ? [iterable[Symbol.asyncIterator](), Symbol.asyncIterator]\n        // @ts-expect-error can't use Symbol.iterator to index iterable since it might be AsyncIterable\n        : [iterable[Symbol.iterator](), Symbol.iterator];\n    const queue = [];\n    // @ts-expect-error can't use symbol to index peekable\n    return {\n        peek: () => {\n            return iterator.next();\n        },\n        push: (value) => {\n            queue.push(value);\n        },\n        next: () => {\n            if (queue.length > 0) {\n                return {\n                    done: false,\n                    value: queue.shift()\n                };\n            }\n            return iterator.next();\n        },\n        [symbol]() {\n            return this;\n        }\n    };\n}\nexport default peekable;\n//# sourceMappingURL=index.js.map","/**\n * @packageDocumentation\n *\n * Consumes all values from an (async)iterable and returns them sorted by the passed sort function.\n *\n * @example\n *\n * ```javascript\n * import sort from 'it-sort'\n * import all from 'it-all'\n *\n * const sorter = (a, b) => {\n *   return a.localeCompare(b)\n * }\n *\n * // This can also be an iterator, generator, etc\n * const values = ['foo', 'bar']\n *\n * const arr = all(sort(values, sorter))\n *\n * console.info(arr) // 'bar', 'foo'\n * ```\n *\n * Async sources must be awaited:\n *\n * ```javascript\n * import sort from 'it-sort'\n * import all from 'it-all'\n *\n * const sorter = (a, b) => {\n *   return a.localeCompare(b)\n * }\n *\n * const values = async function * () {\n *   yield * ['foo', 'bar']\n * }\n *\n * const arr = await all(sort(values, sorter))\n *\n * console.info(arr) // 'bar', 'foo'\n * ```\n */\nimport all from 'it-all';\nfunction isAsyncIterable(thing) {\n    return thing[Symbol.asyncIterator] != null;\n}\nfunction sort(source, sorter) {\n    if (isAsyncIterable(source)) {\n        return (async function* () {\n            const arr = await all(source);\n            yield* arr.sort(sorter);\n        })();\n    }\n    return (function* () {\n        const arr = all(source);\n        yield* arr.sort(sorter);\n    })();\n}\nexport default sort;\n//# sourceMappingURL=index.js.map","/**\n * @packageDocumentation\n *\n * For when you only want a few values out of an (async)iterable.\n *\n * @example\n *\n * ```javascript\n * import take from 'it-take'\n * import all from 'it-all'\n *\n * // This can also be an iterator, generator, etc\n * const values = [0, 1, 2, 3, 4]\n *\n * const arr = all(take(values, 2))\n *\n * console.info(arr) // 0, 1\n * ```\n *\n * Async sources must be awaited:\n *\n * ```javascript\n * import take from 'it-take'\n * import all from 'it-all'\n *\n * const values = async function * () {\n *   yield * [0, 1, 2, 3, 4]\n * }\n *\n * const arr = await all(take(values(), 2))\n *\n * console.info(arr) // 0, 1\n * ```\n */\nfunction isAsyncIterable(thing) {\n    return thing[Symbol.asyncIterator] != null;\n}\nfunction take(source, limit) {\n    if (isAsyncIterable(source)) {\n        return (async function* () {\n            let items = 0;\n            if (limit < 1) {\n                return;\n            }\n            for await (const entry of source) {\n                yield entry;\n                items++;\n                if (items === limit) {\n                    return;\n                }\n            }\n        })();\n    }\n    return (function* () {\n        let items = 0;\n        if (limit < 1) {\n            return;\n        }\n        for (const entry of source) {\n            yield entry;\n            items++;\n            if (items === limit) {\n                return;\n            }\n        }\n    })();\n}\nexport default take;\n//# sourceMappingURL=index.js.map","import drain from 'it-drain';\nimport filter from 'it-filter';\nimport sort from 'it-sort';\nimport take from 'it-take';\nexport class BaseDatastore {\n    put(key, val, options) {\n        return Promise.reject(new Error('.put is not implemented'));\n    }\n    get(key, options) {\n        return Promise.reject(new Error('.get is not implemented'));\n    }\n    has(key, options) {\n        return Promise.reject(new Error('.has is not implemented'));\n    }\n    delete(key, options) {\n        return Promise.reject(new Error('.delete is not implemented'));\n    }\n    async *putMany(source, options = {}) {\n        for await (const { key, value } of source) {\n            await this.put(key, value, options);\n            yield key;\n        }\n    }\n    async *getMany(source, options = {}) {\n        for await (const key of source) {\n            yield {\n                key,\n                value: await this.get(key, options)\n            };\n        }\n    }\n    async *deleteMany(source, options = {}) {\n        for await (const key of source) {\n            await this.delete(key, options);\n            yield key;\n        }\n    }\n    batch() {\n        let puts = [];\n        let dels = [];\n        return {\n            put(key, value) {\n                puts.push({ key, value });\n            },\n            delete(key) {\n                dels.push(key);\n            },\n            commit: async (options) => {\n                await drain(this.putMany(puts, options));\n                puts = [];\n                await drain(this.deleteMany(dels, options));\n                dels = [];\n            }\n        };\n    }\n    /**\n     * Extending classes should override `query` or implement this method\n     */\n    // eslint-disable-next-line require-yield\n    async *_all(q, options) {\n        throw new Error('._all is not implemented');\n    }\n    /**\n     * Extending classes should override `queryKeys` or implement this method\n     */\n    // eslint-disable-next-line require-yield\n    async *_allKeys(q, options) {\n        throw new Error('._allKeys is not implemented');\n    }\n    query(q, options) {\n        let it = this._all(q, options);\n        if (q.prefix != null) {\n            const prefix = q.prefix;\n            it = filter(it, (e) => e.key.toString().startsWith(prefix));\n        }\n        if (Array.isArray(q.filters)) {\n            it = q.filters.reduce((it, f) => filter(it, f), it);\n        }\n        if (Array.isArray(q.orders)) {\n            it = q.orders.reduce((it, f) => sort(it, f), it);\n        }\n        if (q.offset != null) {\n            let i = 0;\n            const offset = q.offset;\n            it = filter(it, () => i++ >= offset);\n        }\n        if (q.limit != null) {\n            it = take(it, q.limit);\n        }\n        return it;\n    }\n    queryKeys(q, options) {\n        let it = this._allKeys(q, options);\n        if (q.prefix != null) {\n            const prefix = q.prefix;\n            it = filter(it, (key) => key.toString().startsWith(prefix));\n        }\n        if (Array.isArray(q.filters)) {\n            it = q.filters.reduce((it, f) => filter(it, f), it);\n        }\n        if (Array.isArray(q.orders)) {\n            it = q.orders.reduce((it, f) => sort(it, f), it);\n        }\n        if (q.offset != null) {\n            const offset = q.offset;\n            let i = 0;\n            it = filter(it, () => i++ >= offset);\n        }\n        if (q.limit != null) {\n            it = take(it, q.limit);\n        }\n        return it;\n    }\n}\n//# sourceMappingURL=base.js.map","import { Key } from 'interface-datastore/key';\nimport { BaseDatastore } from './base.js';\nimport * as Errors from './errors.js';\nexport class MemoryDatastore extends BaseDatastore {\n    data;\n    constructor() {\n        super();\n        this.data = new Map();\n    }\n    put(key, val) {\n        this.data.set(key.toString(), val);\n        return key;\n    }\n    get(key) {\n        const result = this.data.get(key.toString());\n        if (result == null) {\n            throw Errors.notFoundError();\n        }\n        return result;\n    }\n    has(key) {\n        return this.data.has(key.toString());\n    }\n    delete(key) {\n        this.data.delete(key.toString());\n    }\n    *_all() {\n        for (const [key, value] of this.data.entries()) {\n            yield { key: new Key(key), value };\n        }\n    }\n    *_allKeys() {\n        for (const key of this.data.keys()) {\n            yield new Key(key);\n        }\n    }\n}\n//# sourceMappingURL=memory.js.map","import errCode from 'err-code';\nexport function dbOpenFailedError(err) {\n    err = err ?? new Error('Cannot open database');\n    return errCode(err, 'ERR_DB_OPEN_FAILED');\n}\nexport function dbDeleteFailedError(err) {\n    err = err ?? new Error('Delete failed');\n    return errCode(err, 'ERR_DB_DELETE_FAILED');\n}\nexport function dbWriteFailedError(err) {\n    err = err ?? new Error('Write failed');\n    return errCode(err, 'ERR_DB_WRITE_FAILED');\n}\nexport function dbReadFailedError(err) {\n    err = err ?? new Error('Read failed');\n    return errCode(err, 'ERR_DB_READ_FAILED');\n}\nexport function notFoundError(err) {\n    err = err ?? new Error('Not Found');\n    return errCode(err, 'ERR_NOT_FOUND');\n}\nexport function abortedError(err) {\n    err = err ?? new Error('Aborted');\n    return errCode(err, 'ERR_ABORTED');\n}\n//# sourceMappingURL=errors.js.map","import { peerIdFromString } from '@libp2p/peer-id';\nimport { multiaddr } from '@multiformats/multiaddr';\nimport { debounce } from './utils.js';\nconst defaultAddressFilter = (addrs) => addrs;\n/**\n * If the passed multiaddr contains the passed peer id, remove it\n */\nfunction stripPeerId(ma, peerId) {\n    const observedPeerIdStr = ma.getPeerId();\n    // strip our peer id if it has been passed\n    if (observedPeerIdStr != null) {\n        const observedPeerId = peerIdFromString(observedPeerIdStr);\n        // use same encoding for comparison\n        if (observedPeerId.equals(peerId)) {\n            ma = ma.decapsulate(multiaddr(`/p2p/${peerId.toString()}`));\n        }\n    }\n    return ma;\n}\nexport class DefaultAddressManager {\n    log;\n    components;\n    // this is an array to allow for duplicates, e.g. multiples of `/ip4/0.0.0.0/tcp/0`\n    listen;\n    announce;\n    observed;\n    announceFilter;\n    /**\n     * Responsible for managing the peer addresses.\n     * Peers can specify their listen and announce addresses.\n     * The listen addresses will be used by the libp2p transports to listen for new connections,\n     * while the announce addresses will be used for the peer addresses' to other peers in the network.\n     */\n    constructor(components, init = {}) {\n        const { listen = [], announce = [] } = init;\n        this.components = components;\n        this.log = components.logger.forComponent('libp2p:address-manager');\n        this.listen = listen.map(ma => ma.toString());\n        this.announce = new Set(announce.map(ma => ma.toString()));\n        this.observed = new Map();\n        this.announceFilter = init.announceFilter ?? defaultAddressFilter;\n        // this method gets called repeatedly on startup when transports start listening so\n        // debounce it so we don't cause multiple self:peer:update events to be emitted\n        this._updatePeerStoreAddresses = debounce(this._updatePeerStoreAddresses.bind(this), 1000);\n        // update our stored addresses when new transports listen\n        components.events.addEventListener('transport:listening', () => {\n            this._updatePeerStoreAddresses();\n        });\n        // update our stored addresses when existing transports stop listening\n        components.events.addEventListener('transport:close', () => {\n            this._updatePeerStoreAddresses();\n        });\n    }\n    [Symbol.toStringTag] = '@libp2p/address-manager';\n    _updatePeerStoreAddresses() {\n        // if announce addresses have been configured, ensure they make it into our peer\n        // record for things like identify\n        const addrs = this.getAnnounceAddrs()\n            .concat(this.components.transportManager.getAddrs())\n            .concat([...this.observed.entries()]\n            .filter(([_, metadata]) => metadata.confident)\n            .map(([str]) => multiaddr(str))).map(ma => {\n            // strip our peer id if it is present\n            if (ma.getPeerId() === this.components.peerId.toString()) {\n                return ma.decapsulate(`/p2p/${this.components.peerId.toString()}`);\n            }\n            return ma;\n        });\n        this.components.peerStore.patch(this.components.peerId, {\n            multiaddrs: addrs\n        })\n            .catch(err => { this.log.error('error updating addresses', err); });\n    }\n    /**\n     * Get peer listen multiaddrs\n     */\n    getListenAddrs() {\n        return Array.from(this.listen).map((a) => multiaddr(a));\n    }\n    /**\n     * Get peer announcing multiaddrs\n     */\n    getAnnounceAddrs() {\n        return Array.from(this.announce).map((a) => multiaddr(a));\n    }\n    /**\n     * Get observed multiaddrs\n     */\n    getObservedAddrs() {\n        return Array.from(this.observed).map(([a]) => multiaddr(a));\n    }\n    /**\n     * Add peer observed addresses\n     */\n    addObservedAddr(addr) {\n        addr = stripPeerId(addr, this.components.peerId);\n        const addrString = addr.toString();\n        // do not trigger the change:addresses event if we already know about this address\n        if (this.observed.has(addrString)) {\n            return;\n        }\n        this.observed.set(addrString, {\n            confident: false\n        });\n    }\n    confirmObservedAddr(addr) {\n        addr = stripPeerId(addr, this.components.peerId);\n        const addrString = addr.toString();\n        const metadata = this.observed.get(addrString) ?? {\n            confident: false\n        };\n        const startingConfidence = metadata.confident;\n        this.observed.set(addrString, {\n            confident: true\n        });\n        // only trigger the 'self:peer:update' event if our confidence in an address has changed\n        if (!startingConfidence) {\n            this._updatePeerStoreAddresses();\n        }\n    }\n    removeObservedAddr(addr) {\n        addr = stripPeerId(addr, this.components.peerId);\n        const addrString = addr.toString();\n        this.observed.delete(addrString);\n    }\n    getAddresses() {\n        let addrs = this.getAnnounceAddrs().map(ma => ma.toString());\n        if (addrs.length === 0) {\n            // no configured announce addrs, add configured listen addresses\n            addrs = this.components.transportManager.getAddrs().map(ma => ma.toString());\n        }\n        // add observed addresses we are confident in\n        addrs = addrs.concat(Array.from(this.observed)\n            .filter(([ma, metadata]) => metadata.confident)\n            .map(([ma]) => ma));\n        // dedupe multiaddrs\n        const addrSet = new Set(addrs);\n        // Create advertising list\n        return this.announceFilter(Array.from(addrSet)\n            .map(str => multiaddr(str)))\n            .map(ma => {\n            // do not append our peer id to a path multiaddr as it will become invalid\n            if (ma.protos().pop()?.path === true) {\n                return ma;\n            }\n            if (ma.getPeerId() === this.components.peerId.toString()) {\n                return ma;\n            }\n            return ma.encapsulate(`/p2p/${this.components.peerId.toString()}`);\n        });\n    }\n}\n//# sourceMappingURL=index.js.map","export function debounce(func, wait) {\n    let timeout;\n    return function () {\n        const later = function () {\n            timeout = undefined;\n            func();\n        };\n        clearTimeout(timeout);\n        timeout = setTimeout(later, wait);\n    };\n}\n//# sourceMappingURL=utils.js.map","import { CodeError, serviceCapabilities, serviceDependencies } from '@libp2p/interface';\nimport { isStartable } from '@libp2p/interface';\nimport { defaultLogger } from '@libp2p/logger';\nclass DefaultComponents {\n    components = {};\n    _started = false;\n    constructor(init = {}) {\n        this.components = {};\n        for (const [key, value] of Object.entries(init)) {\n            this.components[key] = value;\n        }\n        if (this.components.logger == null) {\n            this.components.logger = defaultLogger();\n        }\n    }\n    isStarted() {\n        return this._started;\n    }\n    async _invokeStartableMethod(methodName) {\n        await Promise.all(Object.values(this.components)\n            .filter(obj => isStartable(obj))\n            .map(async (startable) => {\n            await startable[methodName]?.();\n        }));\n    }\n    async beforeStart() {\n        await this._invokeStartableMethod('beforeStart');\n    }\n    async start() {\n        await this._invokeStartableMethod('start');\n        this._started = true;\n    }\n    async afterStart() {\n        await this._invokeStartableMethod('afterStart');\n    }\n    async beforeStop() {\n        await this._invokeStartableMethod('beforeStop');\n    }\n    async stop() {\n        await this._invokeStartableMethod('stop');\n        this._started = false;\n    }\n    async afterStop() {\n        await this._invokeStartableMethod('afterStop');\n    }\n}\nconst OPTIONAL_SERVICES = [\n    'metrics',\n    'connectionProtector',\n    'dns'\n];\nconst NON_SERVICE_PROPERTIES = [\n    'components',\n    'isStarted',\n    'beforeStart',\n    'start',\n    'afterStart',\n    'beforeStop',\n    'stop',\n    'afterStop',\n    'then',\n    '_invokeStartableMethod'\n];\nexport function defaultComponents(init = {}) {\n    const components = new DefaultComponents(init);\n    const proxy = new Proxy(components, {\n        get(target, prop, receiver) {\n            if (typeof prop === 'string' && !NON_SERVICE_PROPERTIES.includes(prop)) {\n                const service = components.components[prop];\n                if (service == null && !OPTIONAL_SERVICES.includes(prop)) {\n                    throw new CodeError(`${prop} not set`, 'ERR_SERVICE_MISSING');\n                }\n                return service;\n            }\n            return Reflect.get(target, prop, receiver);\n        },\n        set(target, prop, value) {\n            if (typeof prop === 'string') {\n                components.components[prop] = value;\n            }\n            else {\n                Reflect.set(target, prop, value);\n            }\n            return true;\n        }\n    });\n    // @ts-expect-error component keys are proxied\n    return proxy;\n}\nexport function checkServiceDependencies(components) {\n    const serviceCapabilities = {};\n    for (const service of Object.values(components.components)) {\n        for (const capability of getServiceCapabilities(service)) {\n            serviceCapabilities[capability] = true;\n        }\n    }\n    for (const service of Object.values(components.components)) {\n        for (const capability of getServiceDependencies(service)) {\n            if (serviceCapabilities[capability] !== true) {\n                throw new CodeError(`Service \"${getServiceName(service)}\" required capability \"${capability}\" but it was not provided by any component, you may need to add additional configuration when creating your node.`, 'ERR_UNMET_SERVICE_DEPENDENCIES');\n            }\n        }\n    }\n}\nfunction getServiceCapabilities(service) {\n    if (Array.isArray(service?.[serviceCapabilities])) {\n        return service[serviceCapabilities];\n    }\n    return [];\n}\nfunction getServiceDependencies(service) {\n    if (Array.isArray(service?.[serviceDependencies])) {\n        return service[serviceDependencies];\n    }\n    return [];\n}\nfunction getServiceName(service) {\n    return service?.[Symbol.toStringTag] ?? service?.toString() ?? 'unknown';\n}\n//# sourceMappingURL=components.js.map","export function isStartable(obj) {\n    return obj != null && typeof obj.start === 'function' && typeof obj.stop === 'function';\n}\nexport async function start(...objs) {\n    const startables = [];\n    for (const obj of objs) {\n        if (isStartable(obj)) {\n            startables.push(obj);\n        }\n    }\n    await Promise.all(startables.map(async (s) => {\n        if (s.beforeStart != null) {\n            await s.beforeStart();\n        }\n    }));\n    await Promise.all(startables.map(async (s) => {\n        await s.start();\n    }));\n    await Promise.all(startables.map(async (s) => {\n        if (s.afterStart != null) {\n            await s.afterStart();\n        }\n    }));\n}\nexport async function stop(...objs) {\n    const startables = [];\n    for (const obj of objs) {\n        if (isStartable(obj)) {\n            startables.push(obj);\n        }\n    }\n    await Promise.all(startables.map(async (s) => {\n        if (s.beforeStop != null) {\n            await s.beforeStop();\n        }\n    }));\n    await Promise.all(startables.map(async (s) => {\n        await s.stop();\n    }));\n    await Promise.all(startables.map(async (s) => {\n        if (s.afterStop != null) {\n            await s.afterStop();\n        }\n    }));\n}\n//# sourceMappingURL=startable.js.map","import { isIPv4, isIPv6 } from '@chainsafe/is-ip';\nimport { Netmask } from 'netmask';\nconst PRIVATE_IP_RANGES = [\n    '0.0.0.0/8',\n    '10.0.0.0/8',\n    '100.64.0.0/10',\n    '127.0.0.0/8',\n    '169.254.0.0/16',\n    '172.16.0.0/12',\n    '192.0.0.0/24',\n    '192.0.0.0/29',\n    '192.0.0.8/32',\n    '192.0.0.9/32',\n    '192.0.0.10/32',\n    '192.0.0.170/32',\n    '192.0.0.171/32',\n    '192.0.2.0/24',\n    '192.31.196.0/24',\n    '192.52.193.0/24',\n    '192.88.99.0/24',\n    '192.168.0.0/16',\n    '192.175.48.0/24',\n    '198.18.0.0/15',\n    '198.51.100.0/24',\n    '203.0.113.0/24',\n    '240.0.0.0/4',\n    '255.255.255.255/32'\n];\nconst NETMASK_RANGES = PRIVATE_IP_RANGES.map(ipRange => new Netmask(ipRange));\nfunction ipv4Check(ipAddr) {\n    for (const r of NETMASK_RANGES) {\n        if (r.contains(ipAddr))\n            return true;\n    }\n    return false;\n}\nfunction isIpv4MappedIpv6(ipAddr) {\n    return /^::ffff:([0-9a-fA-F]{1,4}):([0-9a-fA-F]{1,4})$/.test(ipAddr);\n}\n/**\n * @see https://datatracker.ietf.org/doc/html/rfc4291#section-2.5.5.2\n */\nfunction ipv4MappedIpv6Check(ipAddr) {\n    const parts = ipAddr.split(':');\n    if (parts.length < 2) {\n        return false;\n    }\n    const octet34 = parts[parts.length - 1].padStart(4, '0');\n    const octet12 = parts[parts.length - 2].padStart(4, '0');\n    const ip4 = `${parseInt(octet12.substring(0, 2), 16)}.${parseInt(octet12.substring(2), 16)}.${parseInt(octet34.substring(0, 2), 16)}.${parseInt(octet34.substring(2), 16)}`;\n    return ipv4Check(ip4);\n}\n/**\n * @see https://datatracker.ietf.org/doc/html/rfc4291#section-2.2 example 3\n */\nfunction isIpv4EmbeddedIpv6(ipAddr) {\n    return /^::ffff:([0-9]{1,3})\\.([0-9]{1,3})\\.([0-9]{1,3})\\.([0-9]{1,3})$/.test(ipAddr);\n}\nfunction ipv4EmbeddedIpv6Check(ipAddr) {\n    const parts = ipAddr.split(':');\n    const ip4 = parts[parts.length - 1];\n    return ipv4Check(ip4);\n}\nfunction ipv6Check(ipAddr) {\n    return /^::$/.test(ipAddr) ||\n        /^::1$/.test(ipAddr) ||\n        /^64:ff9b::([0-9]{1,3})\\.([0-9]{1,3})\\.([0-9]{1,3})\\.([0-9]{1,3})$/.test(ipAddr) ||\n        /^100::([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4})$/.test(ipAddr) ||\n        /^2001::([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4})$/.test(ipAddr) ||\n        /^2001:2[0-9a-fA-F]:([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4})$/.test(ipAddr) ||\n        /^2001:db8:([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4})$/.test(ipAddr) ||\n        /^2002:([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4})$/.test(ipAddr) ||\n        /^f[c-d]([0-9a-fA-F]{2,2}):/i.test(ipAddr) ||\n        /^fe[8-9a-bA-B][0-9a-fA-F]:/i.test(ipAddr) ||\n        /^ff([0-9a-fA-F]{2,2}):/i.test(ipAddr);\n}\nexport function isPrivateIp(ip) {\n    if (isIPv4(ip))\n        return ipv4Check(ip);\n    else if (isIpv4MappedIpv6(ip))\n        return ipv4MappedIpv6Check(ip);\n    else if (isIpv4EmbeddedIpv6(ip))\n        return ipv4EmbeddedIpv6Check(ip);\n    else if (isIPv6(ip))\n        return ipv6Check(ip);\n    else\n        return undefined;\n}\n//# sourceMappingURL=private-ip.js.map","import { isPrivateIp } from '@libp2p/utils/private-ip';\n/**\n * Returns a connection gater that disallows dialling private addresses by\n * default. Browsers are severely limited in their resource usage so don't\n * waste time trying to dial undiallable addresses.\n */\nexport function connectionGater(gater = {}) {\n    return {\n        denyDialPeer: async () => false,\n        denyDialMultiaddr: async (multiaddr) => {\n            const tuples = multiaddr.stringTuples();\n            if (tuples[0][0] === 4 || tuples[0][0] === 41) {\n                return Boolean(isPrivateIp(`${tuples[0][1]}`));\n            }\n            return false;\n        },\n        denyInboundConnection: async () => false,\n        denyOutboundConnection: async () => false,\n        denyInboundEncryptedConnection: async () => false,\n        denyOutboundEncryptedConnection: async () => false,\n        denyInboundUpgradedConnection: async () => false,\n        denyOutboundUpgradedConnection: async () => false,\n        filterMultiaddrForPeer: async () => true,\n        ...gater\n    };\n}\n//# sourceMappingURL=connection-gater.browser.js.map","import { isPrivateIp } from '../private-ip.js';\n/**\n * Check if a given multiaddr has a private address.\n */\nexport function isPrivate(ma) {\n    try {\n        const { address } = ma.nodeAddress();\n        return Boolean(isPrivateIp(address));\n    }\n    catch {\n        return true;\n    }\n}\n//# sourceMappingURL=is-private.js.map","/**\n * @packageDocumentation\n *\n * Provides strategies to sort a list of multiaddrs.\n *\n * @example\n *\n * ```typescript\n * import { publicAddressesFirst } from '@libp2p/utils/address-sort'\n * import { multiaddr } from '@multformats/multiaddr'\n *\n *\n * const addresses = [\n *   multiaddr('/ip4/127.0.0.1/tcp/9000'),\n *   multiaddr('/ip4/82.41.53.1/tcp/9000')\n * ].sort(publicAddressesFirst)\n *\n * console.info(addresses)\n * // ['/ip4/82.41.53.1/tcp/9000', '/ip4/127.0.0.1/tcp/9000']\n * ```\n */\nimport { Circuit } from '@multiformats/multiaddr-matcher';\nimport { isPrivate } from './multiaddr/is-private.js';\n/**\n * Compare function for array.sort() that moves public addresses to the start\n * of the array.\n */\nexport function publicAddressesFirst(a, b) {\n    const isAPrivate = isPrivate(a.multiaddr);\n    const isBPrivate = isPrivate(b.multiaddr);\n    if (isAPrivate && !isBPrivate) {\n        return 1;\n    }\n    else if (!isAPrivate && isBPrivate) {\n        return -1;\n    }\n    return 0;\n}\n/**\n * Compare function for array.sort() that moves certified addresses to the start\n * of the array.\n */\nexport function certifiedAddressesFirst(a, b) {\n    if (a.isCertified && !b.isCertified) {\n        return -1;\n    }\n    else if (!a.isCertified && b.isCertified) {\n        return 1;\n    }\n    return 0;\n}\n/**\n * Compare function for array.sort() that moves circuit relay addresses to the\n * start of the array.\n */\nexport function circuitRelayAddressesLast(a, b) {\n    const isACircuit = Circuit.exactMatch(a.multiaddr);\n    const isBCircuit = Circuit.exactMatch(b.multiaddr);\n    if (isACircuit && !isBCircuit) {\n        return 1;\n    }\n    else if (!isACircuit && isBCircuit) {\n        return -1;\n    }\n    return 0;\n}\nexport function defaultAddressSort(a, b) {\n    const publicResult = publicAddressesFirst(a, b);\n    if (publicResult !== 0) {\n        return publicResult;\n    }\n    const relayResult = circuitRelayAddressesLast(a, b);\n    if (relayResult !== 0) {\n        return relayResult;\n    }\n    const certifiedResult = certifiedAddressesFirst(a, b);\n    return certifiedResult;\n}\n//# sourceMappingURL=address-sort.js.map","import { RecordType } from '../index.js';\nexport function getTypes(types) {\n    const DEFAULT_TYPES = [\n        RecordType.A\n    ];\n    if (types == null) {\n        return DEFAULT_TYPES;\n    }\n    if (Array.isArray(types)) {\n        if (types.length === 0) {\n            return DEFAULT_TYPES;\n        }\n        return types;\n    }\n    return [\n        types\n    ];\n}\n//# sourceMappingURL=get-types.js.map","import { toString as uint8ArrayToString } from 'uint8arrays/to-string';\nimport { RecordType } from '../index.js';\n/**\n * This TTL will be used if the remote service does not return one\n */\nexport const DEFAULT_TTL = 60;\nexport function toDNSResponse(obj) {\n    return {\n        Status: obj.Status ?? 0,\n        TC: obj.TC ?? obj.flag_tc ?? false,\n        RD: obj.RD ?? obj.flag_rd ?? false,\n        RA: obj.RA ?? obj.flag_ra ?? false,\n        AD: obj.AD ?? obj.flag_ad ?? false,\n        CD: obj.CD ?? obj.flag_cd ?? false,\n        Question: (obj.Question ?? obj.questions ?? []).map((question) => {\n            return {\n                name: question.name,\n                type: RecordType[question.type]\n            };\n        }),\n        Answer: (obj.Answer ?? obj.answers ?? []).map((answer) => {\n            return {\n                name: answer.name,\n                type: RecordType[answer.type],\n                TTL: (answer.TTL ?? answer.ttl ?? DEFAULT_TTL),\n                data: answer.data instanceof Uint8Array ? uint8ArrayToString(answer.data) : answer.data\n            };\n        })\n    };\n}\n//# sourceMappingURL=to-dns-response.js.map","/* eslint-env browser */\nimport PQueue from 'p-queue';\nimport { CustomProgressEvent } from 'progress-events';\nimport { RecordType } from '../index.js';\nimport { getTypes } from '../utils/get-types.js';\nimport { toDNSResponse } from '../utils/to-dns-response.js';\n/**\n * Browsers limit concurrent connections per host (~6), we don't want to exhaust\n * the limit so this value controls how many DNS queries can be in flight at\n * once.\n */\nexport const DEFAULT_QUERY_CONCURRENCY = 4;\n/**\n * Uses the RFC 8427 'application/dns-json' content-type to resolve DNS queries.\n *\n * Supports and server that uses the same schema as Google's DNS over HTTPS\n * resolver.\n *\n * This resolver needs fewer dependencies than the regular DNS-over-HTTPS\n * resolver so can result in a smaller bundle size and consequently is preferred\n * for browser use.\n *\n * @see https://developers.cloudflare.com/1.1.1.1/encryption/dns-over-https/make-api-requests/dns-json/\n * @see https://github.com/curl/curl/wiki/DNS-over-HTTPS#publicly-available-servers\n * @see https://dnsprivacy.org/public_resolvers/\n * @see https://datatracker.ietf.org/doc/html/rfc8427\n */\nexport function dnsJsonOverHttps(url, init = {}) {\n    const httpQueue = new PQueue({\n        concurrency: init.queryConcurrency ?? DEFAULT_QUERY_CONCURRENCY\n    });\n    return async (fqdn, options = {}) => {\n        const searchParams = new URLSearchParams();\n        searchParams.set('name', fqdn);\n        getTypes(options.types).forEach(type => {\n            // We pass record type as a string to the server because cloudflare DNS bug. see https://github.com/ipfs/helia/issues/474\n            searchParams.append('type', RecordType[type]);\n        });\n        options.onProgress?.(new CustomProgressEvent('dns:query', { detail: fqdn }));\n        // query DNS-JSON over HTTPS server\n        const response = await httpQueue.add(async () => {\n            const res = await fetch(`${url}?${searchParams}`, {\n                headers: {\n                    accept: 'application/dns-json'\n                },\n                signal: options?.signal\n            });\n            if (res.status !== 200) {\n                throw new Error(`Unexpected HTTP status: ${res.status} - ${res.statusText}`);\n            }\n            const response = toDNSResponse(await res.json());\n            options.onProgress?.(new CustomProgressEvent('dns:response', { detail: response }));\n            return response;\n        }, {\n            signal: options.signal\n        });\n        if (response == null) {\n            throw new Error('No DNS response received');\n        }\n        return response;\n    };\n}\n//# sourceMappingURL=dns-json-over-https.js.map","/**\n * @packageDocumentation\n *\n * Query DNS records using `node:dns`, DNS over HTTP and/or DNSJSON over HTTP.\n *\n * A list of publicly accessible servers can be found [here](https://github.com/curl/curl/wiki/DNS-over-HTTPS#publicly-available-servers).\n *\n * @example Using the default resolver\n *\n * ```TypeScript\n * import { dns } from '@multiformats/dns'\n *\n * const resolver = dns()\n *\n * // resolve A records with a 5s timeout\n * const result = await dns.query('google.com', {\n *   signal: AbortSignal.timeout(5000)\n * })\n * ```\n *\n * @example Using per-TLD resolvers\n *\n * ```TypeScript\n * import { dns } from '@multiformats/dns'\n * import { dnsJsonOverHttps } from '@multiformats/dns/resolvers'\n *\n * const resolver = dns({\n *   resolvers: {\n *     // will only be used to resolve `.com` addresses\n *     'com.': dnsJsonOverHttps('https://cloudflare-dns.com/dns-query'),\n *\n *     // this can also be an array, resolvers will be shuffled and tried in\n *     // series\n *     'net.': [\n *       dnsJsonOverHttps('https://dns.google/resolve'),\n *       dnsJsonOverHttps('https://dns.pub/dns-query')\n *     ],\n *\n *     // will only be used to resolve all other addresses\n *     '.': dnsJsonOverHttps('https://dnsforge.de/dns-query'),\n *   }\n * })\n * ```\n *\n * @example Query for specific record types\n *\n * ```TypeScript\n * import { dns, RecordType } from '@multiformats/dns'\n *\n * const resolver = dns()\n *\n * // resolve only TXT records\n * const result = await dns.query('google.com', {\n *   types: [\n *     RecordType.TXT\n *   ]\n * })\n * ```\n *\n * ## Caching\n *\n * Individual Aanswers are cached so. If you make a request, for which all\n * record types are cached, all values will be pulled from the cache.\n *\n * If any of the record types are not cached, a new request will be resolved as\n * if none of the records were cached, and the cache will be updated to include\n * the new results.\n *\n * @example Ignoring the cache\n *\n * ```TypeScript\n * import { dns, RecordType } from '@multiformats/dns'\n *\n * const resolver = dns()\n *\n * // do not used cached results, always resolve a new query\n * const result = await dns.query('google.com', {\n *   cached: false\n * })\n * ```\n */\nimport { DNS as DNSClass } from './dns.js';\n/**\n * A subset of DNS Record Types\n *\n * @see https://www.iana.org/assignments/dns-parameters/dns-parameters.xhtml#dns-parameters-4.\n */\nexport var RecordType;\n(function (RecordType) {\n    RecordType[RecordType[\"A\"] = 1] = \"A\";\n    RecordType[RecordType[\"CNAME\"] = 5] = \"CNAME\";\n    RecordType[RecordType[\"TXT\"] = 16] = \"TXT\";\n    RecordType[RecordType[\"AAAA\"] = 28] = \"AAAA\";\n})(RecordType || (RecordType = {}));\n/**\n * The default maximum amount of recursion allowed during a query\n */\nexport const MAX_RECURSIVE_DEPTH = 32;\nexport function dns(init = {}) {\n    return new DNSClass(init);\n}\n//# sourceMappingURL=index.js.map","import hashlru from 'hashlru';\nimport { RecordType } from '../index.js';\nimport { DEFAULT_TTL, toDNSResponse } from './to-dns-response.js';\n/**\n * Time Aware Least Recent Used Cache\n *\n * @see https://arxiv.org/pdf/1801.00390\n */\nclass CachedAnswers {\n    lru;\n    constructor(maxSize) {\n        this.lru = hashlru(maxSize);\n    }\n    get(fqdn, types) {\n        let foundAllAnswers = true;\n        const answers = [];\n        for (const type of types) {\n            const cached = this.getAnswers(fqdn, type);\n            if (cached.length === 0) {\n                foundAllAnswers = false;\n                break;\n            }\n            answers.push(...cached);\n        }\n        if (foundAllAnswers) {\n            return toDNSResponse({ answers });\n        }\n    }\n    getAnswers(domain, type) {\n        const key = `${domain.toLowerCase()}-${type}`;\n        const answers = this.lru.get(key);\n        if (answers != null) {\n            const cachedAnswers = answers\n                .filter((entry) => {\n                return entry.expires > Date.now();\n            })\n                .map(({ expires, value }) => ({\n                ...value,\n                TTL: Math.round((expires - Date.now()) / 1000),\n                type: RecordType[value.type]\n            }));\n            if (cachedAnswers.length === 0) {\n                this.lru.remove(key);\n            }\n            // @ts-expect-error hashlru stringifies stored types which turns enums\n            // into strings, we convert back into enums above but tsc doesn't know\n            return cachedAnswers;\n        }\n        return [];\n    }\n    add(domain, answer) {\n        const key = `${domain.toLowerCase()}-${answer.type}`;\n        const answers = this.lru.get(key) ?? [];\n        answers.push({\n            expires: Date.now() + ((answer.TTL ?? DEFAULT_TTL) * 1000),\n            value: answer\n        });\n        this.lru.set(key, answers);\n    }\n    remove(domain, type) {\n        const key = `${domain.toLowerCase()}-${type}`;\n        this.lru.remove(key);\n    }\n    clear() {\n        this.lru.clear();\n    }\n}\n/**\n * Avoid sending multiple queries for the same hostname by caching results\n */\nexport function cache(size) {\n    return new CachedAnswers(size);\n}\n//# sourceMappingURL=cache.js.map","import { CustomProgressEvent } from 'progress-events';\nimport { defaultResolver } from './resolvers/default.js';\nimport { cache } from './utils/cache.js';\nimport { getTypes } from './utils/get-types.js';\nconst DEFAULT_ANSWER_CACHE_SIZE = 1000;\nexport class DNS {\n    resolvers;\n    cache;\n    constructor(init) {\n        this.resolvers = {};\n        this.cache = cache(init.cacheSize ?? DEFAULT_ANSWER_CACHE_SIZE);\n        Object.entries(init.resolvers ?? {}).forEach(([tld, resolver]) => {\n            if (!Array.isArray(resolver)) {\n                resolver = [resolver];\n            }\n            // convert `com` -> `com.`\n            if (!tld.endsWith('.')) {\n                tld = `${tld}.`;\n            }\n            this.resolvers[tld] = resolver;\n        });\n        // configure default resolver if none specified\n        if (this.resolvers['.'] == null) {\n            this.resolvers['.'] = defaultResolver();\n        }\n    }\n    /**\n     * Queries DNS resolvers for the passed record types for the passed domain.\n     *\n     * If cached records exist for all desired types they will be returned\n     * instead.\n     *\n     * Any new responses will be added to the cache for subsequent requests.\n     */\n    async query(domain, options = {}) {\n        const types = getTypes(options.types);\n        const cached = options.cached !== false ? this.cache.get(domain, types) : undefined;\n        if (cached != null) {\n            options.onProgress?.(new CustomProgressEvent('dns:cache', { detail: cached }));\n            return cached;\n        }\n        const tld = `${domain.split('.').pop()}.`;\n        const resolvers = (this.resolvers[tld] ?? this.resolvers['.']).sort(() => {\n            return (Math.random() > 0.5) ? -1 : 1;\n        });\n        const errors = [];\n        for (const resolver of resolvers) {\n            // skip further resolutions if the user aborted the signal\n            if (options.signal?.aborted === true) {\n                break;\n            }\n            try {\n                const result = await resolver(domain, {\n                    ...options,\n                    types\n                });\n                for (const answer of result.Answer) {\n                    this.cache.add(domain, answer);\n                }\n                return result;\n            }\n            catch (err) {\n                errors.push(err);\n                options.onProgress?.(new CustomProgressEvent('dns:error', { detail: err }));\n            }\n        }\n        if (errors.length === 1) {\n            throw errors[0];\n        }\n        throw new AggregateError(errors, `DNS lookup of ${domain} ${types} failed`);\n    }\n}\n//# sourceMappingURL=dns.js.map","import { dnsJsonOverHttps } from './dns-json-over-https.js';\nexport function defaultResolver() {\n    return [\n        dnsJsonOverHttps('https://cloudflare-dns.com/dns-query'),\n        dnsJsonOverHttps('https://dns.google/resolve')\n    ];\n}\n//# sourceMappingURL=default.browser.js.map","import { dns, RecordType } from '@multiformats/dns';\nimport { multiaddr } from '../index.js';\nimport { getProtocol } from '../protocols-table.js';\nconst MAX_RECURSIVE_DEPTH = 32;\nconst { code: dnsaddrCode } = getProtocol('dnsaddr');\nclass RecursionLimitError extends Error {\n    constructor(message = 'Max recursive depth reached') {\n        super(message);\n        this.name = 'RecursionLimitError';\n    }\n}\nexport const dnsaddrResolver = async function dnsaddrResolver(ma, options = {}) {\n    const recursionLimit = options.maxRecursiveDepth ?? MAX_RECURSIVE_DEPTH;\n    if (recursionLimit === 0) {\n        throw new RecursionLimitError('Max recursive depth reached');\n    }\n    const [, hostname] = ma.stringTuples().find(([proto]) => proto === dnsaddrCode) ?? [];\n    const resolver = options?.dns ?? dns();\n    const result = await resolver.query(`_dnsaddr.${hostname}`, {\n        signal: options?.signal,\n        types: [\n            RecordType.TXT\n        ]\n    });\n    const peerId = ma.getPeerId();\n    const output = [];\n    for (const answer of result.Answer) {\n        const addr = answer.data\n            .replace(/[\"']/g, '')\n            .trim()\n            .split('=')[1];\n        if (addr == null) {\n            continue;\n        }\n        if (peerId != null && !addr.includes(peerId)) {\n            continue;\n        }\n        const ma = multiaddr(addr);\n        if (addr.startsWith('/dnsaddr')) {\n            const resolved = await ma.resolve({\n                ...options,\n                maxRecursiveDepth: recursionLimit - 1\n            });\n            output.push(...resolved.map(ma => ma.toString()));\n        }\n        else {\n            output.push(ma.toString());\n        }\n    }\n    return output;\n};\n//# sourceMappingURL=dnsaddr.js.map","/**\n * Thin ESM wrapper for CJS named exports.\n *\n * Ref: https://redfin.engineering/node-modules-at-war-why-commonjs-and-es-modules-cant-get-along-9617135eeca1\n */\n\nimport mergeOptions from './index.js';\nexport default mergeOptions;\n","export var messages;\n(function (messages) {\n    messages[\"NOT_STARTED_YET\"] = \"The libp2p node is not started yet\";\n    messages[\"ERR_PROTECTOR_REQUIRED\"] = \"Private network is enforced, but no protector was provided\";\n    messages[\"NOT_FOUND\"] = \"Not found\";\n})(messages || (messages = {}));\nexport var codes;\n(function (codes) {\n    codes[\"ERR_PROTECTOR_REQUIRED\"] = \"ERR_PROTECTOR_REQUIRED\";\n    codes[\"ERR_PEER_DIAL_INTERCEPTED\"] = \"ERR_PEER_DIAL_INTERCEPTED\";\n    codes[\"ERR_CONNECTION_INTERCEPTED\"] = \"ERR_CONNECTION_INTERCEPTED\";\n    codes[\"ERR_INVALID_PROTOCOLS_FOR_STREAM\"] = \"ERR_INVALID_PROTOCOLS_FOR_STREAM\";\n    codes[\"ERR_CONNECTION_ENDED\"] = \"ERR_CONNECTION_ENDED\";\n    codes[\"ERR_CONNECTION_FAILED\"] = \"ERR_CONNECTION_FAILED\";\n    codes[\"ERR_NODE_NOT_STARTED\"] = \"ERR_NODE_NOT_STARTED\";\n    codes[\"ERR_ALREADY_ABORTED\"] = \"ERR_ALREADY_ABORTED\";\n    codes[\"ERR_TOO_MANY_ADDRESSES\"] = \"ERR_TOO_MANY_ADDRESSES\";\n    codes[\"ERR_NO_VALID_ADDRESSES\"] = \"ERR_NO_VALID_ADDRESSES\";\n    codes[\"ERR_RELAYED_DIAL\"] = \"ERR_RELAYED_DIAL\";\n    codes[\"ERR_DIALED_SELF\"] = \"ERR_DIALED_SELF\";\n    codes[\"ERR_DISCOVERED_SELF\"] = \"ERR_DISCOVERED_SELF\";\n    codes[\"ERR_DUPLICATE_TRANSPORT\"] = \"ERR_DUPLICATE_TRANSPORT\";\n    codes[\"ERR_ENCRYPTION_FAILED\"] = \"ERR_ENCRYPTION_FAILED\";\n    codes[\"ERR_HOP_REQUEST_FAILED\"] = \"ERR_HOP_REQUEST_FAILED\";\n    codes[\"ERR_INVALID_KEY\"] = \"ERR_INVALID_KEY\";\n    codes[\"ERR_INVALID_MESSAGE\"] = \"ERR_INVALID_MESSAGE\";\n    codes[\"ERR_INVALID_PARAMETERS\"] = \"ERR_INVALID_PARAMETERS\";\n    codes[\"ERR_INVALID_PEER\"] = \"ERR_INVALID_PEER\";\n    codes[\"ERR_MUXER_UNAVAILABLE\"] = \"ERR_MUXER_UNAVAILABLE\";\n    codes[\"ERR_NOT_FOUND\"] = \"ERR_NOT_FOUND\";\n    codes[\"ERR_TRANSPORT_UNAVAILABLE\"] = \"ERR_TRANSPORT_UNAVAILABLE\";\n    codes[\"ERR_TRANSPORT_DIAL_FAILED\"] = \"ERR_TRANSPORT_DIAL_FAILED\";\n    codes[\"ERR_UNSUPPORTED_PROTOCOL\"] = \"ERR_UNSUPPORTED_PROTOCOL\";\n    codes[\"ERR_PROTOCOL_HANDLER_ALREADY_REGISTERED\"] = \"ERR_PROTOCOL_HANDLER_ALREADY_REGISTERED\";\n    codes[\"ERR_INVALID_MULTIADDR\"] = \"ERR_INVALID_MULTIADDR\";\n    codes[\"ERR_SIGNATURE_NOT_VALID\"] = \"ERR_SIGNATURE_NOT_VALID\";\n    codes[\"ERR_FIND_SELF\"] = \"ERR_FIND_SELF\";\n    codes[\"ERR_NO_ROUTERS_AVAILABLE\"] = \"ERR_NO_ROUTERS_AVAILABLE\";\n    codes[\"ERR_CONNECTION_NOT_MULTIPLEXED\"] = \"ERR_CONNECTION_NOT_MULTIPLEXED\";\n    codes[\"ERR_NO_DIAL_TOKENS\"] = \"ERR_NO_DIAL_TOKENS\";\n    codes[\"ERR_INVALID_CMS\"] = \"ERR_INVALID_CMS\";\n    codes[\"ERR_MISSING_KEYS\"] = \"ERR_MISSING_KEYS\";\n    codes[\"ERR_NO_KEY\"] = \"ERR_NO_KEY\";\n    codes[\"ERR_INVALID_KEY_NAME\"] = \"ERR_INVALID_KEY_NAME\";\n    codes[\"ERR_INVALID_KEY_TYPE\"] = \"ERR_INVALID_KEY_TYPE\";\n    codes[\"ERR_KEY_ALREADY_EXISTS\"] = \"ERR_KEY_ALREADY_EXISTS\";\n    codes[\"ERR_INVALID_KEY_SIZE\"] = \"ERR_INVALID_KEY_SIZE\";\n    codes[\"ERR_KEY_NOT_FOUND\"] = \"ERR_KEY_NOT_FOUND\";\n    codes[\"ERR_OLD_KEY_NAME_INVALID\"] = \"ERR_OLD_KEY_NAME_INVALID\";\n    codes[\"ERR_NEW_KEY_NAME_INVALID\"] = \"ERR_NEW_KEY_NAME_INVALID\";\n    codes[\"ERR_PASSWORD_REQUIRED\"] = \"ERR_PASSWORD_REQUIRED\";\n    codes[\"ERR_PEM_REQUIRED\"] = \"ERR_PEM_REQUIRED\";\n    codes[\"ERR_CANNOT_READ_KEY\"] = \"ERR_CANNOT_READ_KEY\";\n    codes[\"ERR_MISSING_PRIVATE_KEY\"] = \"ERR_MISSING_PRIVATE_KEY\";\n    codes[\"ERR_MISSING_PUBLIC_KEY\"] = \"ERR_MISSING_PUBLIC_KEY\";\n    codes[\"ERR_INVALID_OLD_PASS_TYPE\"] = \"ERR_INVALID_OLD_PASS_TYPE\";\n    codes[\"ERR_INVALID_NEW_PASS_TYPE\"] = \"ERR_INVALID_NEW_PASS_TYPE\";\n    codes[\"ERR_INVALID_PASS_LENGTH\"] = \"ERR_INVALID_PASS_LENGTH\";\n    codes[\"ERR_NOT_IMPLEMENTED\"] = \"ERR_NOT_IMPLEMENTED\";\n    codes[\"ERR_WRONG_PING_ACK\"] = \"ERR_WRONG_PING_ACK\";\n    codes[\"ERR_INVALID_RECORD\"] = \"ERR_INVALID_RECORD\";\n    codes[\"ERR_ALREADY_SUCCEEDED\"] = \"ERR_ALREADY_SUCCEEDED\";\n    codes[\"ERR_NO_HANDLER_FOR_PROTOCOL\"] = \"ERR_NO_HANDLER_FOR_PROTOCOL\";\n    codes[\"ERR_TOO_MANY_OUTBOUND_PROTOCOL_STREAMS\"] = \"ERR_TOO_MANY_OUTBOUND_PROTOCOL_STREAMS\";\n    codes[\"ERR_TOO_MANY_INBOUND_PROTOCOL_STREAMS\"] = \"ERR_TOO_MANY_INBOUND_PROTOCOL_STREAMS\";\n    codes[\"ERR_CONNECTION_DENIED\"] = \"ERR_CONNECTION_DENIED\";\n    codes[\"ERR_TRANSFER_LIMIT_EXCEEDED\"] = \"ERR_TRANSFER_LIMIT_EXCEEDED\";\n})(codes || (codes = {}));\n//# sourceMappingURL=errors.js.map","import { CodeError, FaultTolerance } from '@libp2p/interface';\nimport { peerIdFromKeys } from '@libp2p/peer-id';\nimport { defaultAddressSort } from '@libp2p/utils/address-sort';\nimport { dnsaddrResolver } from '@multiformats/multiaddr/resolvers';\nimport mergeOptions from 'merge-options';\nimport { codes, messages } from './errors.js';\nconst DefaultConfig = {\n    addresses: {\n        listen: [],\n        announce: [],\n        noAnnounce: [],\n        announceFilter: (multiaddrs) => multiaddrs\n    },\n    connectionManager: {\n        resolvers: {\n            dnsaddr: dnsaddrResolver\n        },\n        addressSorter: defaultAddressSort\n    },\n    transportManager: {\n        faultTolerance: FaultTolerance.FATAL_ALL\n    }\n};\nexport async function validateConfig(opts) {\n    const resultingOptions = mergeOptions(DefaultConfig, opts);\n    if (resultingOptions.connectionProtector === null && globalThis.process?.env?.LIBP2P_FORCE_PNET != null) { // eslint-disable-line no-undef\n        throw new CodeError(messages.ERR_PROTECTOR_REQUIRED, codes.ERR_PROTECTOR_REQUIRED);\n    }\n    if (resultingOptions.privateKey != null && !(await peerIdFromKeys(resultingOptions.privateKey.public.bytes, resultingOptions.privateKey.bytes)).equals(resultingOptions.peerId)) {\n        throw new CodeError('Private key doesn\\'t match peer id', codes.ERR_INVALID_KEY);\n    }\n    return resultingOptions;\n}\n//# sourceMappingURL=config.js.map","import { CodeError, isPeerId } from '@libp2p/interface';\nimport { peerIdFromString } from '@libp2p/peer-id';\nimport { isMultiaddr } from '@multiformats/multiaddr';\nimport { codes } from './errors.js';\n/**\n * Extracts a PeerId and/or multiaddr from the passed PeerId or Multiaddr or an array of Multiaddrs\n */\nexport function getPeerAddress(peer) {\n    if (isPeerId(peer)) {\n        return { peerId: peer, multiaddrs: [] };\n    }\n    if (!Array.isArray(peer)) {\n        peer = [peer];\n    }\n    let peerId;\n    if (peer.length > 0) {\n        const peerIdStr = peer[0].getPeerId();\n        peerId = peerIdStr == null ? undefined : peerIdFromString(peerIdStr);\n        // ensure PeerId is either not set or is consistent\n        peer.forEach(ma => {\n            if (!isMultiaddr(ma)) {\n                throw new CodeError('Invalid Multiaddr', codes.ERR_INVALID_MULTIADDR);\n            }\n            const maPeerIdStr = ma.getPeerId();\n            if (maPeerIdStr == null) {\n                if (peerId != null) {\n                    throw new CodeError('Multiaddrs must all have the same peer id or have no peer id', codes.ERR_INVALID_PARAMETERS);\n                }\n            }\n            else {\n                const maPeerId = peerIdFromString(maPeerIdStr);\n                if (peerId?.equals(maPeerId) !== true) {\n                    throw new CodeError('Multiaddrs must all have the same peer id or have no peer id', codes.ERR_INVALID_PARAMETERS);\n                }\n            }\n        });\n    }\n    return {\n        peerId,\n        multiaddrs: peer\n    };\n}\n//# sourceMappingURL=get-peer.js.map","/**\n * @packageDocumentation\n *\n * Race an event against an AbortSignal, taking care to remove any event\n * listeners that were added.\n *\n * @example Getting started\n *\n * ```TypeScript\n * import { raceEvent } from 'race-event'\n *\n * const controller = new AbortController()\n * const emitter = new EventTarget()\n *\n * setTimeout(() => {\n *   controller.abort()\n * }, 500)\n *\n * setTimeout(() => {\n *   // too late\n *   emitter.dispatchEvent(new CustomEvent('event'))\n * }, 1000)\n *\n * // throws an AbortError\n * const resolve = await raceEvent(emitter, 'event', controller.signal)\n * ```\n *\n * @example Aborting the promise with an error event\n *\n * ```TypeScript\n * import { raceEvent } from 'race-event'\n *\n * const emitter = new EventTarget()\n *\n * setTimeout(() => {\n *   emitter.dispatchEvent(new CustomEvent('failure', {\n *     detail: new Error('Oh no!')\n *   }))\n * }, 1000)\n *\n * // throws 'Oh no!' error\n * const resolve = await raceEvent(emitter, 'success', AbortSignal.timeout(5000), {\n *   errorEvent: 'failure'\n * })\n * ```\n *\n * @example Customising the thrown AbortError\n *\n * The error message and `.code` property of the thrown `AbortError` can be\n * specified by passing options:\n *\n * ```TypeScript\n * import { raceEvent } from 'race-event'\n *\n * const controller = new AbortController()\n * const emitter = new EventTarget()\n *\n * setTimeout(() => {\n *   controller.abort()\n * }, 500)\n *\n * // throws a Error: Oh no!\n * const resolve = await raceEvent(emitter, 'event', controller.signal, {\n *   errorMessage: 'Oh no!',\n *   errorCode: 'ERR_OH_NO'\n * })\n * ```\n *\n * @example Only resolving on specific events\n *\n * Where multiple events with the same type are emitted, a `filter` function can\n * be passed to only resolve on one of them:\n *\n * ```TypeScript\n * import { raceEvent } from 'race-event'\n *\n * const controller = new AbortController()\n * const emitter = new EventTarget()\n *\n * // throws a Error: Oh no!\n * const resolve = await raceEvent(emitter, 'event', controller.signal, {\n *   filter: (evt: Event) => {\n *     return evt.detail.foo === 'bar'\n *   }\n * })\n * ```\n *\n * @example Terminating early by throwing from the filter\n *\n * You can cause listening for the event to cease and all event listeners to be\n * removed by throwing from the filter:\n *\n * ```TypeScript\n * import { raceEvent } from 'race-event'\n *\n * const controller = new AbortController()\n * const emitter = new EventTarget()\n *\n * // throws Error: Cannot continue\n * const resolve = await raceEvent(emitter, 'event', controller.signal, {\n *   filter: (evt) => {\n *     if (...reasons) {\n *       throw new Error('Cannot continue')\n *     }\n *\n *     return true\n *   }\n * })\n * ```\n */\n/**\n * An abort error class that extends error\n */\nexport class AbortError extends Error {\n    type;\n    code;\n    constructor(message, code) {\n        super(message ?? 'The operation was aborted');\n        this.type = 'aborted';\n        this.name = 'AbortError';\n        this.code = code ?? 'ABORT_ERR';\n    }\n}\n/**\n * Race a promise against an abort signal\n */\nexport async function raceEvent(emitter, eventName, signal, opts) {\n    // create the error here so we have more context in the stack trace\n    const error = new AbortError(opts?.errorMessage, opts?.errorCode);\n    if (signal?.aborted === true) {\n        return Promise.reject(error);\n    }\n    return new Promise((resolve, reject) => {\n        function removeListeners() {\n            signal?.removeEventListener('abort', abortListener);\n            emitter.removeEventListener(eventName, eventListener);\n            if (opts?.errorEvent != null) {\n                emitter.removeEventListener(opts.errorEvent, errorEventListener);\n            }\n        }\n        const eventListener = (evt) => {\n            try {\n                if (opts?.filter?.(evt) === false) {\n                    return;\n                }\n            }\n            catch (err) {\n                removeListeners();\n                reject(err);\n                return;\n            }\n            removeListeners();\n            resolve(evt);\n        };\n        const errorEventListener = (evt) => {\n            removeListeners();\n            reject(evt.detail);\n        };\n        const abortListener = () => {\n            removeListeners();\n            reject(error);\n        };\n        signal?.addEventListener('abort', abortListener);\n        emitter.addEventListener(eventName, eventListener);\n        if (opts?.errorEvent != null) {\n            emitter.addEventListener(opts.errorEvent, errorEventListener);\n        }\n    });\n}\n//# sourceMappingURL=index.js.map","import { AbortError } from '@libp2p/interface';\nimport pDefer from 'p-defer';\nexport class JobRecipient {\n    deferred;\n    signal;\n    constructor(signal) {\n        this.signal = signal;\n        this.deferred = pDefer();\n        this.onAbort = this.onAbort.bind(this);\n        this.signal?.addEventListener('abort', this.onAbort);\n    }\n    onAbort() {\n        this.deferred.reject(this.signal?.reason ?? new AbortError());\n    }\n    cleanup() {\n        this.signal?.removeEventListener('abort', this.onAbort);\n    }\n}\n//# sourceMappingURL=recipient.js.map","import { AbortError, setMaxListeners } from '@libp2p/interface';\nimport { raceSignal } from 'race-signal';\nimport { JobRecipient } from './recipient.js';\n/**\n * Returns a random string\n */\nfunction randomId() {\n    return `${(parseInt(String(Math.random() * 1e9), 10)).toString()}${Date.now()}`;\n}\nexport class Job {\n    id;\n    fn;\n    options;\n    recipients;\n    status;\n    timeline;\n    controller;\n    constructor(fn, options) {\n        this.id = randomId();\n        this.status = 'queued';\n        this.fn = fn;\n        this.options = options;\n        this.recipients = [];\n        this.timeline = {\n            created: Date.now()\n        };\n        this.controller = new AbortController();\n        setMaxListeners(Infinity, this.controller.signal);\n        this.onAbort = this.onAbort.bind(this);\n    }\n    abort(err) {\n        this.controller.abort(err);\n    }\n    onAbort() {\n        const allAborted = this.recipients.reduce((acc, curr) => {\n            return acc && (curr.signal?.aborted === true);\n        }, true);\n        // if all recipients have aborted the job, actually abort the job\n        if (allAborted) {\n            this.controller.abort(new AbortError());\n            this.cleanup();\n        }\n    }\n    async join(options = {}) {\n        const recipient = new JobRecipient(options.signal);\n        this.recipients.push(recipient);\n        options.signal?.addEventListener('abort', this.onAbort);\n        return recipient.deferred.promise;\n    }\n    async run() {\n        this.status = 'running';\n        this.timeline.started = Date.now();\n        try {\n            this.controller.signal.throwIfAborted();\n            const result = await raceSignal(this.fn({\n                ...(this.options ?? {}),\n                signal: this.controller.signal\n            }), this.controller.signal);\n            this.recipients.forEach(recipient => {\n                recipient.deferred.resolve(result);\n            });\n            this.status = 'complete';\n        }\n        catch (err) {\n            this.recipients.forEach(recipient => {\n                recipient.deferred.reject(err);\n            });\n            this.status = 'errored';\n        }\n        finally {\n            this.timeline.finished = Date.now();\n            this.cleanup();\n        }\n    }\n    cleanup() {\n        this.recipients.forEach(recipient => {\n            recipient.cleanup();\n            recipient.signal?.removeEventListener('abort', this.onAbort);\n        });\n    }\n}\n//# sourceMappingURL=job.js.map","import { AbortError, CodeError, TypedEventEmitter } from '@libp2p/interface';\nimport { pushable } from 'it-pushable';\nimport { raceEvent } from 'race-event';\nimport { Job } from './job.js';\n/**\n * Heavily influence by `p-queue` with the following differences:\n *\n * 1. Items remain at the head of the queue while they are running so `queue.size` includes `queue.pending` items - this is so interested parties can join the results of a queue item while it is running\n * 2. The options for a job are stored separately to the job in order for them to be modified while they are still in the queue\n */\nexport class Queue extends TypedEventEmitter {\n    concurrency;\n    queue;\n    pending;\n    sort;\n    constructor(init = {}) {\n        super();\n        this.concurrency = init.concurrency ?? Number.POSITIVE_INFINITY;\n        this.pending = 0;\n        if (init.metricName != null) {\n            init.metrics?.registerMetricGroup(init.metricName, {\n                calculate: () => {\n                    return {\n                        size: this.queue.length,\n                        running: this.pending,\n                        queued: this.queue.length - this.pending\n                    };\n                }\n            });\n        }\n        this.sort = init.sort;\n        this.queue = [];\n    }\n    tryToStartAnother() {\n        if (this.size === 0) {\n            // do this in the microtask queue so all job recipients receive the\n            // result before the \"empty\" event fires\n            queueMicrotask(() => {\n                this.safeDispatchEvent('empty');\n            });\n            if (this.running === 0) {\n                // do this in the microtask queue so all job recipients receive the\n                // result before the \"idle\" event fires\n                queueMicrotask(() => {\n                    this.safeDispatchEvent('idle');\n                });\n            }\n            return false;\n        }\n        if (this.pending < this.concurrency) {\n            let job;\n            for (const j of this.queue) {\n                if (j.status === 'queued') {\n                    job = j;\n                    break;\n                }\n            }\n            if (job == null) {\n                return false;\n            }\n            this.safeDispatchEvent('active');\n            this.pending++;\n            void job.run()\n                .finally(() => {\n                // remove the job from the queue\n                for (let i = 0; i < this.queue.length; i++) {\n                    if (this.queue[i] === job) {\n                        this.queue.splice(i, 1);\n                        break;\n                    }\n                }\n                this.pending--;\n                this.tryToStartAnother();\n                this.safeDispatchEvent('next');\n            });\n            return true;\n        }\n        return false;\n    }\n    enqueue(job) {\n        this.queue.push(job);\n        if (this.sort != null) {\n            this.queue.sort(this.sort);\n        }\n    }\n    /**\n     * Adds a sync or async task to the queue. Always returns a promise.\n     */\n    async add(fn, options) {\n        options?.signal?.throwIfAborted();\n        const job = new Job(fn, options);\n        this.enqueue(job);\n        this.safeDispatchEvent('add');\n        this.tryToStartAnother();\n        return job.join(options)\n            .then(result => {\n            this.safeDispatchEvent('completed', { detail: result });\n            this.safeDispatchEvent('success', { detail: { job, result } });\n            return result;\n        })\n            .catch(err => {\n            if (job.status === 'queued') {\n                // job was aborted before it started - remove the job from the queue\n                for (let i = 0; i < this.queue.length; i++) {\n                    if (this.queue[i] === job) {\n                        this.queue.splice(i, 1);\n                        break;\n                    }\n                }\n            }\n            this.safeDispatchEvent('error', { detail: err });\n            this.safeDispatchEvent('failure', { detail: { job, error: err } });\n            throw err;\n        });\n    }\n    /**\n     * Clear the queue\n     */\n    clear() {\n        this.queue.splice(0, this.queue.length);\n    }\n    /**\n     * Abort all jobs in the queue and clear it\n     */\n    abort() {\n        this.queue.forEach(job => {\n            job.abort(new AbortError());\n        });\n        this.clear();\n    }\n    /**\n     * Can be called multiple times. Useful if you for example add additional items at a later time.\n     *\n     * @returns A promise that settles when the queue becomes empty.\n     */\n    async onEmpty(options) {\n        // Instantly resolve if the queue is empty\n        if (this.size === 0) {\n            return;\n        }\n        await raceEvent(this, 'empty', options?.signal);\n    }\n    /**\n     * @returns A promise that settles when the queue size is less than the given\n     * limit: `queue.size < limit`.\n     *\n     * If you want to avoid having the queue grow beyond a certain size you can\n     * `await queue.onSizeLessThan()` before adding a new item.\n     *\n     * Note that this only limits the number of items waiting to start. There\n     * could still be up to `concurrency` jobs already running that this call does\n     * not include in its calculation.\n     */\n    async onSizeLessThan(limit, options) {\n        // Instantly resolve if the queue is empty.\n        if (this.size < limit) {\n            return;\n        }\n        await raceEvent(this, 'next', options?.signal, {\n            filter: () => this.size < limit\n        });\n    }\n    /**\n     * The difference with `.onEmpty` is that `.onIdle` guarantees that all work\n     * from the queue has finished. `.onEmpty` merely signals that the queue is\n     * empty, but it could mean that some promises haven't completed yet.\n     *\n     * @returns A promise that settles when the queue becomes empty, and all\n     * promises have completed; `queue.size === 0 && queue.pending === 0`.\n     */\n    async onIdle(options) {\n        // Instantly resolve if none pending and if nothing else is queued\n        if (this.pending === 0 && this.size === 0) {\n            return;\n        }\n        await raceEvent(this, 'idle', options?.signal);\n    }\n    /**\n     * Size of the queue including running items\n     */\n    get size() {\n        return this.queue.length;\n    }\n    /**\n     * The number of queued items waiting to run.\n     */\n    get queued() {\n        return this.queue.length - this.pending;\n    }\n    /**\n     * The number of items currently running.\n     */\n    get running() {\n        return this.pending;\n    }\n    /**\n     * Returns an async generator that makes it easy to iterate over the results\n     * of jobs added to the queue.\n     *\n     * The generator will end when the queue becomes idle, that is there are no\n     * jobs running and no jobs that have yet to run.\n     *\n     * If you need to keep the queue open indefinitely, consider using it-pushable\n     * instead.\n     */\n    async *toGenerator(options) {\n        options?.signal?.throwIfAborted();\n        const stream = pushable({\n            objectMode: true\n        });\n        const cleanup = (err) => {\n            if (err != null) {\n                this.abort();\n            }\n            else {\n                this.clear();\n            }\n            stream.end(err);\n        };\n        const onQueueJobComplete = (evt) => {\n            if (evt.detail != null) {\n                stream.push(evt.detail);\n            }\n        };\n        const onQueueError = (evt) => {\n            cleanup(evt.detail);\n        };\n        const onQueueIdle = () => {\n            cleanup();\n        };\n        // clear the queue and throw if the query is aborted\n        const onSignalAbort = () => {\n            cleanup(new CodeError('Queue aborted', 'ERR_QUEUE_ABORTED'));\n        };\n        // add listeners\n        this.addEventListener('completed', onQueueJobComplete);\n        this.addEventListener('error', onQueueError);\n        this.addEventListener('idle', onQueueIdle);\n        options?.signal?.addEventListener('abort', onSignalAbort);\n        try {\n            yield* stream;\n        }\n        finally {\n            // remove listeners\n            this.removeEventListener('completed', onQueueJobComplete);\n            this.removeEventListener('error', onQueueError);\n            this.removeEventListener('idle', onQueueIdle);\n            options?.signal?.removeEventListener('abort', onSignalAbort);\n            // empty the queue for when the user has broken out of a loop early\n            cleanup();\n        }\n    }\n}\n//# sourceMappingURL=index.js.map","import { Queue } from './queue/index.js';\n/**\n * Extends Queue to add support for querying queued jobs by peer id\n */\nexport class PeerQueue extends Queue {\n    has(peerId) {\n        return this.find(peerId) != null;\n    }\n    find(peerId) {\n        return this.queue.find(job => {\n            return peerId.equals(job.options.peerId);\n        });\n    }\n}\n//# sourceMappingURL=peer-queue.js.map","export * from './constants.defaults.js';\n/**\n * @see https://libp2p.github.io/js-libp2p/interfaces/index._internal_.ConnectionManagerConfig.html#minConnections\n */\nexport const MIN_CONNECTIONS = 5;\n/**\n * @see https://libp2p.github.io/js-libp2p/interfaces/index._internal_.ConnectionManagerConfig.html#maxConnections\n */\nexport const MAX_CONNECTIONS = 100;\n/**\n * @see https://libp2p.github.io/js-libp2p/interfaces/index._internal_.ConnectionManagerConfig.html#maxParallelDials\n */\nexport const MAX_PARALLEL_DIALS = 50;\n/**\n * @see https://libp2p.github.io/js-libp2p/interfaces/libp2p.index.unknown.ConnectionManagerInit.html#autoDialPeerRetryThreshold\n */\nexport const AUTO_DIAL_PEER_RETRY_THRESHOLD = 1000 * 60 * 7;\n//# sourceMappingURL=constants.browser.js.map","/**\n * @see https://libp2p.github.io/js-libp2p/interfaces/index._internal_.ConnectionManagerConfig.html#dialTimeout\n */\nexport const DIAL_TIMEOUT = 5e3;\n/**\n * @see https://libp2p.github.io/js-libp2p/interfaces/index._internal_.ConnectionManagerConfig.html#inboundUpgradeTimeout\n */\nexport const INBOUND_UPGRADE_TIMEOUT = 2e3;\n/**\n * @see https://libp2p.github.io/js-libp2p/interfaces/index._internal_.ConnectionManagerConfig.html#maxPeerAddrsToDial\n */\nexport const MAX_PEER_ADDRS_TO_DIAL = 25;\n/**\n * @see https://libp2p.github.io/js-libp2p/interfaces/index._internal_.ConnectionManagerConfig.html#autoDialInterval\n */\nexport const AUTO_DIAL_INTERVAL = 5000;\n/**\n * @see https://libp2p.github.io/js-libp2p/interfaces/index._internal_.ConnectionManagerConfig.html#autoDialConcurrency\n */\nexport const AUTO_DIAL_CONCURRENCY = 25;\n/**\n * @see https://libp2p.github.io/js-libp2p/interfaces/index._internal_.ConnectionManagerConfig.html#autoDialPriority\n */\nexport const AUTO_DIAL_PRIORITY = 0;\n/**\n * @see https://libp2p.github.io/js-libp2p/interfaces/index._internal_.ConnectionManagerConfig.html#autoDialMaxQueueLength\n */\nexport const AUTO_DIAL_MAX_QUEUE_LENGTH = 100;\n/**\n * @see https://libp2p.github.io/js-libp2p/interfaces/libp2p.index.unknown.ConnectionManagerInit.html#autoDialDiscoveredPeersDebounce\n */\nexport const AUTO_DIAL_DISCOVERED_PEERS_DEBOUNCE = 10;\n/**\n * @see https://libp2p.github.io/js-libp2p/interfaces/index._internal_.ConnectionManagerConfig.html#inboundConnectionThreshold\n */\nexport const INBOUND_CONNECTION_THRESHOLD = 5;\n/**\n * @see https://libp2p.github.io/js-libp2p/interfaces/index._internal_.ConnectionManagerConfig.html#maxIncomingPendingConnections\n */\nexport const MAX_INCOMING_PENDING_CONNECTIONS = 10;\n/**\n * Store as part of the peer store metadata for a given peer, the value for this\n * key is a timestamp of the last time a dial attempted failed with the relevant\n * peer stored as a string.\n *\n * Used to insure we do not endlessly try to auto dial peers we have recently\n * failed to dial.\n */\nexport const LAST_DIAL_FAILURE_KEY = 'last-dial-failure';\n/**\n * @see https://libp2p.github.io/js-libp2p/interfaces/index._internal_.ConnectionManagerConfig.html#maxDialQueueLength\n */\nexport const MAX_DIAL_QUEUE_LENGTH = 500;\n//# sourceMappingURL=constants.defaults.js.map","import { PeerMap, PeerSet } from '@libp2p/peer-collections';\nimport { PeerQueue } from '@libp2p/utils/peer-queue';\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string';\nimport { AUTO_DIAL_CONCURRENCY, AUTO_DIAL_DISCOVERED_PEERS_DEBOUNCE, AUTO_DIAL_INTERVAL, AUTO_DIAL_MAX_QUEUE_LENGTH, AUTO_DIAL_PEER_RETRY_THRESHOLD, AUTO_DIAL_PRIORITY, LAST_DIAL_FAILURE_KEY, MIN_CONNECTIONS } from './constants.js';\nconst defaultOptions = {\n    minConnections: MIN_CONNECTIONS,\n    maxQueueLength: AUTO_DIAL_MAX_QUEUE_LENGTH,\n    autoDialConcurrency: AUTO_DIAL_CONCURRENCY,\n    autoDialPriority: AUTO_DIAL_PRIORITY,\n    autoDialInterval: AUTO_DIAL_INTERVAL,\n    autoDialPeerRetryThreshold: AUTO_DIAL_PEER_RETRY_THRESHOLD,\n    autoDialDiscoveredPeersDebounce: AUTO_DIAL_DISCOVERED_PEERS_DEBOUNCE\n};\nexport class AutoDial {\n    connectionManager;\n    peerStore;\n    queue;\n    minConnections;\n    autoDialPriority;\n    autoDialIntervalMs;\n    autoDialMaxQueueLength;\n    autoDialPeerRetryThresholdMs;\n    autoDialDiscoveredPeersDebounce;\n    autoDialInterval;\n    started;\n    running;\n    log;\n    /**\n     * Proactively tries to connect to known peers stored in the PeerStore.\n     * It will keep the number of connections below the upper limit and sort\n     * the peers to connect based on whether we know their keys and protocols.\n     */\n    constructor(components, init) {\n        this.connectionManager = components.connectionManager;\n        this.peerStore = components.peerStore;\n        this.minConnections = init.minConnections ?? defaultOptions.minConnections;\n        this.autoDialPriority = init.autoDialPriority ?? defaultOptions.autoDialPriority;\n        this.autoDialIntervalMs = init.autoDialInterval ?? defaultOptions.autoDialInterval;\n        this.autoDialMaxQueueLength = init.maxQueueLength ?? defaultOptions.maxQueueLength;\n        this.autoDialPeerRetryThresholdMs = init.autoDialPeerRetryThreshold ?? defaultOptions.autoDialPeerRetryThreshold;\n        this.autoDialDiscoveredPeersDebounce = init.autoDialDiscoveredPeersDebounce ?? defaultOptions.autoDialDiscoveredPeersDebounce;\n        this.log = components.logger.forComponent('libp2p:connection-manager:auto-dial');\n        this.started = false;\n        this.running = false;\n        this.queue = new PeerQueue({\n            concurrency: init.autoDialConcurrency ?? defaultOptions.autoDialConcurrency,\n            metricName: 'libp2p_autodial_queue',\n            metrics: components.metrics\n        });\n        this.queue.addEventListener('error', (evt) => {\n            this.log.error('error during auto-dial', evt.detail);\n        });\n        // check the min connection limit whenever a peer disconnects\n        components.events.addEventListener('connection:close', () => {\n            this.autoDial()\n                .catch(err => {\n                this.log.error(err);\n            });\n        });\n        // sometimes peers are discovered in quick succession so add a small\n        // debounce to ensure all eligible peers are autodialed\n        let debounce;\n        // when new peers are discovered, dial them if we don't have\n        // enough connections\n        components.events.addEventListener('peer:discovery', () => {\n            clearTimeout(debounce);\n            debounce = setTimeout(() => {\n                this.autoDial()\n                    .catch(err => {\n                    this.log.error(err);\n                });\n            }, this.autoDialDiscoveredPeersDebounce);\n        });\n    }\n    isStarted() {\n        return this.started;\n    }\n    start() {\n        this.started = true;\n    }\n    afterStart() {\n        this.autoDial()\n            .catch(err => {\n            this.log.error('error while autodialing', err);\n        });\n    }\n    stop() {\n        // clear the queue\n        this.queue.clear();\n        clearTimeout(this.autoDialInterval);\n        this.started = false;\n        this.running = false;\n    }\n    async autoDial() {\n        if (!this.started || this.running) {\n            return;\n        }\n        const connections = this.connectionManager.getConnectionsMap();\n        const numConnections = connections.size;\n        // already have enough connections\n        if (numConnections >= this.minConnections) {\n            if (this.minConnections > 0) {\n                this.log.trace('have enough connections %d/%d', numConnections, this.minConnections);\n            }\n            // no need to schedule next autodial as it will be run when on\n            // connection:close event\n            return;\n        }\n        if (this.queue.size > this.autoDialMaxQueueLength) {\n            this.log('not enough connections %d/%d but auto dial queue is full', numConnections, this.minConnections);\n            this.sheduleNextAutodial();\n            return;\n        }\n        this.running = true;\n        this.log('not enough connections %d/%d - will dial peers to increase the number of connections', numConnections, this.minConnections);\n        const dialQueue = new PeerSet(\n        // @ts-expect-error boolean filter removes falsy peer IDs\n        this.connectionManager.getDialQueue()\n            .map(queue => queue.peerId)\n            .filter(Boolean));\n        // sort peers on whether we know protocols or public keys for them\n        const peers = await this.peerStore.all({\n            filters: [\n                // remove some peers\n                (peer) => {\n                    // remove peers without addresses\n                    if (peer.addresses.length === 0) {\n                        this.log.trace('not autodialing %p because they have no addresses', peer.id);\n                        return false;\n                    }\n                    // remove peers we are already connected to\n                    if (connections.has(peer.id)) {\n                        this.log.trace('not autodialing %p because they are already connected', peer.id);\n                        return false;\n                    }\n                    // remove peers we are already dialling\n                    if (dialQueue.has(peer.id)) {\n                        this.log.trace('not autodialing %p because they are already being dialed', peer.id);\n                        return false;\n                    }\n                    // remove peers already in the autodial queue\n                    if (this.queue.has(peer.id)) {\n                        this.log.trace('not autodialing %p because they are already being autodialed', peer.id);\n                        return false;\n                    }\n                    return true;\n                }\n            ]\n        });\n        // shuffle the peers - this is so peers with the same tag values will be\n        // dialled in a different order each time\n        const shuffledPeers = peers.sort(() => Math.random() > 0.5 ? 1 : -1);\n        // sort shuffled peers by tag value\n        const peerValues = new PeerMap();\n        for (const peer of shuffledPeers) {\n            if (peerValues.has(peer.id)) {\n                continue;\n            }\n            // sum all tag values\n            peerValues.set(peer.id, [...peer.tags.values()].reduce((acc, curr) => {\n                return acc + curr.value;\n            }, 0));\n        }\n        // sort by value, highest to lowest\n        const sortedPeers = shuffledPeers.sort((a, b) => {\n            const peerAValue = peerValues.get(a.id) ?? 0;\n            const peerBValue = peerValues.get(b.id) ?? 0;\n            if (peerAValue > peerBValue) {\n                return -1;\n            }\n            if (peerAValue < peerBValue) {\n                return 1;\n            }\n            return 0;\n        });\n        const peersThatHaveNotFailed = sortedPeers.filter(peer => {\n            const lastDialFailure = peer.metadata.get(LAST_DIAL_FAILURE_KEY);\n            if (lastDialFailure == null) {\n                return true;\n            }\n            const lastDialFailureTimestamp = parseInt(uint8ArrayToString(lastDialFailure));\n            if (isNaN(lastDialFailureTimestamp)) {\n                return true;\n            }\n            // only dial if the time since the last failure is above the retry threshold\n            return Date.now() - lastDialFailureTimestamp > this.autoDialPeerRetryThresholdMs;\n        });\n        this.log('selected %d/%d peers to dial', peersThatHaveNotFailed.length, peers.length);\n        for (const peer of peersThatHaveNotFailed) {\n            this.queue.add(async () => {\n                const numConnections = this.connectionManager.getConnectionsMap().size;\n                // Check to see if we still need to auto dial\n                if (numConnections >= this.minConnections) {\n                    this.log('got enough connections now %d/%d', numConnections, this.minConnections);\n                    this.queue.clear();\n                    return;\n                }\n                this.log('connecting to a peerStore stored peer %p', peer.id);\n                await this.connectionManager.openConnection(peer.id, {\n                    priority: this.autoDialPriority\n                });\n            }, {\n                peerId: peer.id\n            }).catch(err => {\n                this.log.error('could not connect to peerStore stored peer', err);\n            });\n        }\n        this.running = false;\n        this.sheduleNextAutodial();\n    }\n    sheduleNextAutodial() {\n        if (!this.started) {\n            return;\n        }\n        this.autoDialInterval = setTimeout(() => {\n            this.autoDial()\n                .catch(err => {\n                this.log.error('error while autodialing', err);\n            });\n        }, this.autoDialIntervalMs);\n    }\n}\n//# sourceMappingURL=auto-dial.js.map","/**\n * Close the passed stream, falling back to aborting the stream if closing\n * cleanly fails.\n */\nexport async function safelyCloseStream(stream, options) {\n    try {\n        await stream?.close(options);\n    }\n    catch (err) {\n        stream?.abort(err);\n    }\n}\n/**\n * These are speculative protocols that are run automatically on connection open\n * so are usually not the reason the connection was opened.\n *\n * Consequently when requested it should be safe to close connections that only\n * have these protocol streams open.\n */\nconst DEFAULT_CLOSABLE_PROTOCOLS = [\n    // identify\n    '/ipfs/id/1.0.0',\n    // identify-push\n    '/ipfs/id/push/1.0.0',\n    // autonat\n    '/libp2p/autonat/1.0.0',\n    // dcutr\n    '/libp2p/dcutr'\n];\n/**\n * Close the passed connection if it has no streams, or only closable protocol\n * streams, falling back to aborting the connection if closing it cleanly fails.\n */\nexport async function safelyCloseConnectionIfUnused(connection, options) {\n    const streamProtocols = connection?.streams?.map(stream => stream.protocol) ?? [];\n    const closableProtocols = options?.closableProtocols ?? DEFAULT_CLOSABLE_PROTOCOLS;\n    // if the connection has protocols not in the closable protocols list, do not\n    // close the connection\n    if (streamProtocols.filter(proto => proto != null && !closableProtocols.includes(proto)).length > 0) {\n        return;\n    }\n    try {\n        await connection?.close(options);\n    }\n    catch (err) {\n        connection?.abort(err);\n    }\n}\n//# sourceMappingURL=close.js.map","import { PeerMap } from '@libp2p/peer-collections';\nimport { safelyCloseConnectionIfUnused } from '@libp2p/utils/close';\nimport { MAX_CONNECTIONS } from './constants.js';\nconst defaultOptions = {\n    maxConnections: MAX_CONNECTIONS,\n    allow: []\n};\n/**\n * If we go over the max connections limit, choose some connections to close\n */\nexport class ConnectionPruner {\n    maxConnections;\n    connectionManager;\n    peerStore;\n    allow;\n    events;\n    log;\n    constructor(components, init = {}) {\n        this.maxConnections = init.maxConnections ?? defaultOptions.maxConnections;\n        this.allow = init.allow ?? defaultOptions.allow;\n        this.connectionManager = components.connectionManager;\n        this.peerStore = components.peerStore;\n        this.events = components.events;\n        this.log = components.logger.forComponent('libp2p:connection-manager:connection-pruner');\n        // check the max connection limit whenever a peer connects\n        components.events.addEventListener('connection:open', () => {\n            this.maybePruneConnections()\n                .catch(err => {\n                this.log.error(err);\n            });\n        });\n    }\n    /**\n     * If we have more connections than our maximum, select some excess connections\n     * to prune based on peer value\n     */\n    async maybePruneConnections() {\n        const connections = this.connectionManager.getConnections();\n        const numConnections = connections.length;\n        this.log('checking max connections limit %d/%d', numConnections, this.maxConnections);\n        if (numConnections <= this.maxConnections) {\n            return;\n        }\n        const peerValues = new PeerMap();\n        // work out peer values\n        for (const connection of connections) {\n            const remotePeer = connection.remotePeer;\n            if (peerValues.has(remotePeer)) {\n                continue;\n            }\n            peerValues.set(remotePeer, 0);\n            try {\n                const peer = await this.peerStore.get(remotePeer);\n                // sum all tag values\n                peerValues.set(remotePeer, [...peer.tags.values()].reduce((acc, curr) => {\n                    return acc + curr.value;\n                }, 0));\n            }\n            catch (err) {\n                if (err.code !== 'ERR_NOT_FOUND') {\n                    this.log.error('error loading peer tags', err);\n                }\n            }\n        }\n        const sortedConnections = this.sortConnections(connections, peerValues);\n        // close some connections\n        const toPrune = Math.max(numConnections - this.maxConnections, 0);\n        const toClose = [];\n        for (const connection of sortedConnections) {\n            this.log('too many connections open - closing a connection to %p', connection.remotePeer);\n            // check allow list\n            const connectionInAllowList = this.allow.some((ma) => {\n                return connection.remoteAddr.toString().startsWith(ma.toString());\n            });\n            // Connections in the allow list should be excluded from pruning\n            if (!connectionInAllowList) {\n                toClose.push(connection);\n            }\n            if (toClose.length === toPrune) {\n                break;\n            }\n        }\n        // close connections\n        await Promise.all(toClose.map(async (connection) => {\n            await safelyCloseConnectionIfUnused(connection, {\n                signal: AbortSignal.timeout(1000)\n            });\n        }));\n        // despatch prune event\n        this.events.safeDispatchEvent('connection:prune', { detail: toClose });\n    }\n    sortConnections(connections, peerValues) {\n        return connections\n            // sort by connection age, newest to oldest\n            .sort((a, b) => {\n            const connectionALifespan = a.timeline.open;\n            const connectionBLifespan = b.timeline.open;\n            if (connectionALifespan < connectionBLifespan) {\n                return 1;\n            }\n            if (connectionALifespan > connectionBLifespan) {\n                return -1;\n            }\n            return 0;\n        })\n            // sort by direction, incoming first then outgoing\n            .sort((a, b) => {\n            if (a.direction === 'outbound' && b.direction === 'inbound') {\n                return 1;\n            }\n            if (a.direction === 'inbound' && b.direction === 'outbound') {\n                return -1;\n            }\n            return 0;\n        })\n            // sort by number of streams, lowest to highest\n            .sort((a, b) => {\n            if (a.streams.length > b.streams.length) {\n                return 1;\n            }\n            if (a.streams.length < b.streams.length) {\n                return -1;\n            }\n            return 0;\n        })\n            // sort by tag value, lowest to highest\n            .sort((a, b) => {\n            const peerAValue = peerValues.get(a.remotePeer) ?? 0;\n            const peerBValue = peerValues.get(b.remotePeer) ?? 0;\n            if (peerAValue > peerBValue) {\n                return 1;\n            }\n            if (peerAValue < peerBValue) {\n                return -1;\n            }\n            return 0;\n        });\n    }\n}\n//# sourceMappingURL=connection-pruner.js.map","import { Queue } from './queue/index.js';\nexport class PriorityQueue extends Queue {\n    constructor(init = {}) {\n        super({\n            ...init,\n            sort: (a, b) => {\n                if (a.options.priority > b.options.priority) {\n                    return -1;\n                }\n                if (a.options.priority < b.options.priority) {\n                    return 1;\n                }\n                return 0;\n            }\n        });\n    }\n}\n//# sourceMappingURL=priority-queue.js.map","/**\n * Takes an array of AbortSignals and returns a single signal.\n * If any signals are aborted, the returned signal will be aborted.\n */\nexport function anySignal(signals) {\n    const controller = new globalThis.AbortController();\n    function onAbort() {\n        controller.abort();\n        for (const signal of signals) {\n            if (signal?.removeEventListener != null) {\n                signal.removeEventListener('abort', onAbort);\n            }\n        }\n    }\n    for (const signal of signals) {\n        if (signal?.aborted === true) {\n            onAbort();\n            break;\n        }\n        if (signal?.addEventListener != null) {\n            signal.addEventListener('abort', onAbort);\n        }\n    }\n    function clear() {\n        for (const signal of signals) {\n            if (signal?.removeEventListener != null) {\n                signal.removeEventListener('abort', onAbort);\n            }\n        }\n    }\n    const signal = controller.signal;\n    signal.clear = clear;\n    return signal;\n}\n//# sourceMappingURL=index.js.map","/* eslint-disable max-depth */\nimport { CodeError, AggregateCodeError, ERR_TIMEOUT, setMaxListeners } from '@libp2p/interface';\nimport { PeerMap } from '@libp2p/peer-collections';\nimport { defaultAddressSort } from '@libp2p/utils/address-sort';\nimport { PriorityQueue } from '@libp2p/utils/priority-queue';\nimport { resolvers, multiaddr } from '@multiformats/multiaddr';\nimport { dnsaddrResolver } from '@multiformats/multiaddr/resolvers';\nimport { Circuit } from '@multiformats/multiaddr-matcher';\nimport { anySignal } from 'any-signal';\nimport { CustomProgressEvent } from 'progress-events';\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string';\nimport { codes } from '../errors.js';\nimport { getPeerAddress } from '../get-peer.js';\nimport { DIAL_TIMEOUT, MAX_PARALLEL_DIALS, MAX_PEER_ADDRS_TO_DIAL, LAST_DIAL_FAILURE_KEY, MAX_DIAL_QUEUE_LENGTH } from './constants.js';\nimport { resolveMultiaddrs } from './utils.js';\nimport { DEFAULT_DIAL_PRIORITY } from './index.js';\nconst defaultOptions = {\n    addressSorter: defaultAddressSort,\n    maxParallelDials: MAX_PARALLEL_DIALS,\n    maxDialQueueLength: MAX_DIAL_QUEUE_LENGTH,\n    maxPeerAddrsToDial: MAX_PEER_ADDRS_TO_DIAL,\n    dialTimeout: DIAL_TIMEOUT,\n    resolvers: {\n        dnsaddr: dnsaddrResolver\n    }\n};\nexport class DialQueue {\n    queue;\n    components;\n    addressSorter;\n    maxPeerAddrsToDial;\n    maxDialQueueLength;\n    dialTimeout;\n    shutDownController;\n    connections;\n    log;\n    constructor(components, init = {}) {\n        this.addressSorter = init.addressSorter ?? defaultOptions.addressSorter;\n        this.maxPeerAddrsToDial = init.maxPeerAddrsToDial ?? defaultOptions.maxPeerAddrsToDial;\n        this.maxDialQueueLength = init.maxDialQueueLength ?? defaultOptions.maxDialQueueLength;\n        this.dialTimeout = init.dialTimeout ?? defaultOptions.dialTimeout;\n        this.connections = init.connections ?? new PeerMap();\n        this.log = components.logger.forComponent('libp2p:connection-manager:dial-queue');\n        this.components = components;\n        this.shutDownController = new AbortController();\n        setMaxListeners(Infinity, this.shutDownController.signal);\n        for (const [key, value] of Object.entries(init.resolvers ?? {})) {\n            resolvers.set(key, value);\n        }\n        // controls dial concurrency\n        this.queue = new PriorityQueue({\n            concurrency: init.maxParallelDials ?? defaultOptions.maxParallelDials,\n            metricName: 'libp2p_dial_queue',\n            metrics: components.metrics\n        });\n        // a started job errored\n        this.queue.addEventListener('error', (event) => {\n            this.log.error('error in dial queue', event.detail);\n        });\n    }\n    start() {\n        this.shutDownController = new AbortController();\n        setMaxListeners(Infinity, this.shutDownController.signal);\n    }\n    /**\n     * Clears any pending dials\n     */\n    stop() {\n        this.shutDownController.abort();\n        this.queue.abort();\n    }\n    /**\n     * Connects to a given peer, multiaddr or list of multiaddrs.\n     *\n     * If a peer is passed, all known multiaddrs will be tried. If a multiaddr or\n     * multiaddrs are passed only those will be dialled.\n     *\n     * Where a list of multiaddrs is passed, if any contain a peer id then all\n     * multiaddrs in the list must contain the same peer id.\n     *\n     * The dial to the first address that is successfully able to upgrade a\n     * connection will be used, all other dials will be aborted when that happens.\n     */\n    async dial(peerIdOrMultiaddr, options = {}) {\n        const { peerId, multiaddrs } = getPeerAddress(peerIdOrMultiaddr);\n        // make sure we don't have an existing connection to any of the addresses we\n        // are about to dial\n        const existingConnection = Array.from(this.connections.values()).flat().find(conn => {\n            if (options.force === true) {\n                return false;\n            }\n            if (conn.remotePeer.equals(peerId)) {\n                return true;\n            }\n            return multiaddrs.find(addr => {\n                return addr.equals(conn.remoteAddr);\n            });\n        });\n        if (existingConnection != null) {\n            this.log('already connected to %a', existingConnection.remoteAddr);\n            options.onProgress?.(new CustomProgressEvent('dial-queue:already-connected'));\n            return existingConnection;\n        }\n        // ready to dial, all async work finished - make sure we don't have any\n        // pending dials in progress for this peer or set of multiaddrs\n        const existingDial = this.queue.queue.find(job => {\n            if (peerId?.equals(job.options.peerId) === true) {\n                return true;\n            }\n            // does the dial contain any of the target multiaddrs?\n            const addresses = job.options.multiaddrs;\n            if (addresses == null) {\n                return false;\n            }\n            for (const multiaddr of multiaddrs) {\n                if (addresses.has(multiaddr.toString())) {\n                    return true;\n                }\n            }\n            return false;\n        });\n        if (existingDial != null) {\n            this.log('joining existing dial target for %p', peerId);\n            // add all multiaddrs to the dial target\n            for (const multiaddr of multiaddrs) {\n                existingDial.options.multiaddrs.add(multiaddr.toString());\n            }\n            options.onProgress?.(new CustomProgressEvent('dial-queue:already-in-dial-queue'));\n            return existingDial.join(options);\n        }\n        if (this.queue.size >= this.maxDialQueueLength) {\n            throw new CodeError('Dial queue is full', 'ERR_DIAL_QUEUE_FULL');\n        }\n        this.log('creating dial target for %p', peerId, multiaddrs.map(ma => ma.toString()));\n        options.onProgress?.(new CustomProgressEvent('dial-queue:add-to-dial-queue'));\n        return this.queue.add(async (options) => {\n            options?.onProgress?.(new CustomProgressEvent('dial-queue:start-dial'));\n            // create abort conditions - need to do this before `calculateMultiaddrs` as\n            // we may be about to resolve a dns addr which can time out\n            const signal = this.createDialAbortController(options?.signal);\n            let addrsToDial;\n            try {\n                // load addresses from address book, resolve and dnsaddrs, filter\n                // undiallables, add peer IDs, etc\n                addrsToDial = await this.calculateMultiaddrs(peerId, options?.multiaddrs, {\n                    ...options,\n                    signal\n                });\n                options?.onProgress?.(new CustomProgressEvent('dial-queue:calculated-addresses', addrsToDial));\n                addrsToDial.map(({ multiaddr }) => multiaddr.toString()).forEach(addr => {\n                    options?.multiaddrs.add(addr);\n                });\n            }\n            catch (err) {\n                signal.clear();\n                throw err;\n            }\n            try {\n                let dialed = 0;\n                const errors = [];\n                for (const address of addrsToDial) {\n                    if (dialed === this.maxPeerAddrsToDial) {\n                        this.log('dialed maxPeerAddrsToDial (%d) addresses for %p, not trying any others', dialed, peerId);\n                        throw new CodeError('Peer had more than maxPeerAddrsToDial', codes.ERR_TOO_MANY_ADDRESSES);\n                    }\n                    dialed++;\n                    try {\n                        const conn = await this.components.transportManager.dial(address.multiaddr, {\n                            ...options,\n                            signal\n                        });\n                        this.log('dial to %a succeeded', address.multiaddr);\n                        return conn;\n                    }\n                    catch (err) {\n                        this.log.error('dial failed to %a', address.multiaddr, err);\n                        if (peerId != null) {\n                            // record the failed dial\n                            try {\n                                await this.components.peerStore.patch(peerId, {\n                                    metadata: {\n                                        [LAST_DIAL_FAILURE_KEY]: uint8ArrayFromString(Date.now().toString())\n                                    }\n                                });\n                            }\n                            catch (err) {\n                                this.log.error('could not update last dial failure key for %p', peerId, err);\n                            }\n                        }\n                        // the user/dial timeout/shutdown controller signal aborted\n                        if (signal.aborted) {\n                            throw new CodeError(err.message, ERR_TIMEOUT);\n                        }\n                        errors.push(err);\n                    }\n                }\n                if (errors.length === 1) {\n                    throw errors[0];\n                }\n                throw new AggregateCodeError(errors, 'All multiaddr dials failed', codes.ERR_TRANSPORT_DIAL_FAILED);\n            }\n            finally {\n                // clean up abort signals/controllers\n                signal.clear();\n            }\n        }, {\n            peerId,\n            priority: options.priority ?? DEFAULT_DIAL_PRIORITY,\n            multiaddrs: new Set(multiaddrs.map(ma => ma.toString())),\n            signal: options.signal,\n            onProgress: options.onProgress\n        });\n    }\n    createDialAbortController(userSignal) {\n        // let any signal abort the dial\n        const signal = anySignal([\n            AbortSignal.timeout(this.dialTimeout),\n            this.shutDownController.signal,\n            userSignal\n        ]);\n        // This emitter gets listened to a lot\n        setMaxListeners(Infinity, signal);\n        return signal;\n    }\n    // eslint-disable-next-line complexity\n    async calculateMultiaddrs(peerId, multiaddrs = new Set(), options = {}) {\n        const addrs = [...multiaddrs].map(ma => ({\n            multiaddr: multiaddr(ma),\n            isCertified: false\n        }));\n        // if a peer id or multiaddr(s) with a peer id, make sure it isn't our peer id and that we are allowed to dial it\n        if (peerId != null) {\n            if (this.components.peerId.equals(peerId)) {\n                throw new CodeError('Tried to dial self', codes.ERR_DIALED_SELF);\n            }\n            if ((await this.components.connectionGater.denyDialPeer?.(peerId)) === true) {\n                throw new CodeError('The dial request is blocked by gater.allowDialPeer', codes.ERR_PEER_DIAL_INTERCEPTED);\n            }\n            // if just a peer id was passed, load available multiaddrs for this peer\n            // from the peer store\n            if (addrs.length === 0) {\n                this.log('loading multiaddrs for %p', peerId);\n                try {\n                    const peer = await this.components.peerStore.get(peerId);\n                    addrs.push(...peer.addresses);\n                    this.log('loaded multiaddrs for %p', peerId, addrs.map(({ multiaddr }) => multiaddr.toString()));\n                }\n                catch (err) {\n                    if (err.code !== codes.ERR_NOT_FOUND) {\n                        throw err;\n                    }\n                }\n            }\n            // if we still don't have any addresses for this peer, try a lookup\n            // using the peer routing\n            if (addrs.length === 0) {\n                this.log('looking up multiaddrs for %p in the peer routing', peerId);\n                try {\n                    const peerInfo = await this.components.peerRouting.findPeer(peerId);\n                    this.log('found multiaddrs for %p in the peer routing', peerId, addrs.map(({ multiaddr }) => multiaddr.toString()));\n                    addrs.push(...peerInfo.multiaddrs.map(multiaddr => ({\n                        multiaddr,\n                        isCertified: false\n                    })));\n                }\n                catch (err) {\n                    if (err.code !== codes.ERR_NO_ROUTERS_AVAILABLE) {\n                        this.log.error('looking up multiaddrs for %p in the peer routing failed', peerId, err);\n                    }\n                }\n            }\n        }\n        // resolve addresses - this can result in a one-to-many translation when\n        // dnsaddrs are resolved\n        let resolvedAddresses = (await Promise.all(addrs.map(async (addr) => {\n            const result = await resolveMultiaddrs(addr.multiaddr, {\n                dns: this.components.dns,\n                ...options,\n                log: this.log\n            });\n            if (result.length === 1 && result[0].equals(addr.multiaddr)) {\n                return addr;\n            }\n            return result.map(multiaddr => ({\n                multiaddr,\n                isCertified: false\n            }));\n        })))\n            .flat();\n        // ensure the peer id is appended to the multiaddr\n        if (peerId != null) {\n            const peerIdMultiaddr = `/p2p/${peerId.toString()}`;\n            resolvedAddresses = resolvedAddresses.map(addr => {\n                const lastProto = addr.multiaddr.protos().pop();\n                // do not append peer id to path multiaddrs\n                if (lastProto?.path === true) {\n                    return addr;\n                }\n                // append peer id to multiaddr if it is not already present\n                if (addr.multiaddr.getPeerId() == null) {\n                    return {\n                        multiaddr: addr.multiaddr.encapsulate(peerIdMultiaddr),\n                        isCertified: addr.isCertified\n                    };\n                }\n                return addr;\n            });\n        }\n        const filteredAddrs = resolvedAddresses.filter(addr => {\n            // filter out any multiaddrs that we do not have transports for\n            if (this.components.transportManager.dialTransportForMultiaddr(addr.multiaddr) == null) {\n                return false;\n            }\n            // if the resolved multiaddr has a PeerID but it's the wrong one, ignore it\n            // - this can happen with addresses like bootstrap.libp2p.io that resolve\n            // to multiple different peers\n            const addrPeerId = addr.multiaddr.getPeerId();\n            if (peerId != null && addrPeerId != null) {\n                return peerId.equals(addrPeerId);\n            }\n            return true;\n        });\n        // deduplicate addresses\n        const dedupedAddrs = new Map();\n        for (const addr of filteredAddrs) {\n            const maStr = addr.multiaddr.toString();\n            const existing = dedupedAddrs.get(maStr);\n            if (existing != null) {\n                existing.isCertified = existing.isCertified || addr.isCertified || false;\n                continue;\n            }\n            dedupedAddrs.set(maStr, addr);\n        }\n        const dedupedMultiaddrs = [...dedupedAddrs.values()];\n        // make sure we actually have some addresses to dial\n        if (dedupedMultiaddrs.length === 0) {\n            throw new CodeError('The dial request has no valid addresses', codes.ERR_NO_VALID_ADDRESSES);\n        }\n        const gatedAdrs = [];\n        for (const addr of dedupedMultiaddrs) {\n            if (this.components.connectionGater.denyDialMultiaddr != null && await this.components.connectionGater.denyDialMultiaddr(addr.multiaddr)) {\n                continue;\n            }\n            gatedAdrs.push(addr);\n        }\n        const sortedGatedAddrs = gatedAdrs.sort(this.addressSorter);\n        // make sure we actually have some addresses to dial\n        if (sortedGatedAddrs.length === 0) {\n            throw new CodeError('The connection gater denied all addresses in the dial request', codes.ERR_NO_VALID_ADDRESSES);\n        }\n        this.log.trace('addresses for %p before filtering', peerId ?? 'unknown peer', resolvedAddresses.map(({ multiaddr }) => multiaddr.toString()));\n        this.log.trace('addresses for %p after filtering', peerId ?? 'unknown peer', sortedGatedAddrs.map(({ multiaddr }) => multiaddr.toString()));\n        return sortedGatedAddrs;\n    }\n    async isDialable(multiaddr, options = {}) {\n        if (!Array.isArray(multiaddr)) {\n            multiaddr = [multiaddr];\n        }\n        try {\n            const addresses = await this.calculateMultiaddrs(undefined, new Set(multiaddr.map(ma => ma.toString())), options);\n            if (options.runOnTransientConnection === false) {\n                // return true if any resolved multiaddrs are not relay addresses\n                return addresses.find(addr => {\n                    return !Circuit.matches(addr.multiaddr);\n                }) != null;\n            }\n            return true;\n        }\n        catch (err) {\n            this.log.trace('error calculating if multiaddr(s) were dialable', err);\n        }\n        return false;\n    }\n}\n//# sourceMappingURL=dial-queue.js.map","import { resolvers } from '@multiformats/multiaddr';\n/**\n * Recursively resolve DNSADDR multiaddrs\n */\nexport async function resolveMultiaddrs(ma, options) {\n    // check multiaddr resolvers\n    let resolvable = false;\n    for (const key of resolvers.keys()) {\n        resolvable = ma.protoNames().includes(key);\n        if (resolvable) {\n            break;\n        }\n    }\n    // return multiaddr if it is not resolvable\n    if (!resolvable) {\n        return [ma];\n    }\n    const output = await ma.resolve(options);\n    options.log('resolved %s to', ma, output.map(ma => ma.toString()));\n    return output;\n}\n//# sourceMappingURL=utils.js.map","import { CodeError, KEEP_ALIVE } from '@libp2p/interface';\nimport { PeerMap } from '@libp2p/peer-collections';\nimport { defaultAddressSort } from '@libp2p/utils/address-sort';\nimport { RateLimiter } from '@libp2p/utils/rate-limiter';\nimport { multiaddr } from '@multiformats/multiaddr';\nimport { dnsaddrResolver } from '@multiformats/multiaddr/resolvers';\nimport { CustomProgressEvent } from 'progress-events';\nimport { codes } from '../errors.js';\nimport { getPeerAddress } from '../get-peer.js';\nimport { AutoDial } from './auto-dial.js';\nimport { ConnectionPruner } from './connection-pruner.js';\nimport { AUTO_DIAL_CONCURRENCY, AUTO_DIAL_DISCOVERED_PEERS_DEBOUNCE, AUTO_DIAL_MAX_QUEUE_LENGTH, AUTO_DIAL_PEER_RETRY_THRESHOLD, AUTO_DIAL_PRIORITY, DIAL_TIMEOUT, INBOUND_CONNECTION_THRESHOLD, MAX_CONNECTIONS, MAX_DIAL_QUEUE_LENGTH, MAX_INCOMING_PENDING_CONNECTIONS, MAX_PARALLEL_DIALS, MAX_PEER_ADDRS_TO_DIAL, MIN_CONNECTIONS } from './constants.js';\nimport { DialQueue } from './dial-queue.js';\nexport const DEFAULT_DIAL_PRIORITY = 50;\nconst defaultOptions = {\n    minConnections: MIN_CONNECTIONS,\n    maxConnections: MAX_CONNECTIONS,\n    inboundConnectionThreshold: INBOUND_CONNECTION_THRESHOLD,\n    maxIncomingPendingConnections: MAX_INCOMING_PENDING_CONNECTIONS,\n    autoDialConcurrency: AUTO_DIAL_CONCURRENCY,\n    autoDialPriority: AUTO_DIAL_PRIORITY,\n    autoDialMaxQueueLength: AUTO_DIAL_MAX_QUEUE_LENGTH,\n    autoDialPeerRetryThreshold: AUTO_DIAL_PEER_RETRY_THRESHOLD,\n    autoDialDiscoveredPeersDebounce: AUTO_DIAL_DISCOVERED_PEERS_DEBOUNCE\n};\n/**\n * Responsible for managing known connections.\n */\nexport class DefaultConnectionManager {\n    started;\n    connections;\n    allow;\n    deny;\n    maxIncomingPendingConnections;\n    incomingPendingConnections;\n    maxConnections;\n    dialQueue;\n    autoDial;\n    connectionPruner;\n    inboundConnectionRateLimiter;\n    peerStore;\n    metrics;\n    events;\n    log;\n    constructor(components, init = {}) {\n        this.maxConnections = init.maxConnections ?? defaultOptions.maxConnections;\n        const minConnections = init.minConnections ?? defaultOptions.minConnections;\n        if (this.maxConnections < minConnections) {\n            throw new CodeError('Connection Manager maxConnections must be greater than minConnections', codes.ERR_INVALID_PARAMETERS);\n        }\n        /**\n         * Map of connections per peer\n         */\n        this.connections = new PeerMap();\n        this.started = false;\n        this.peerStore = components.peerStore;\n        this.metrics = components.metrics;\n        this.events = components.events;\n        this.log = components.logger.forComponent('libp2p:connection-manager');\n        this.onConnect = this.onConnect.bind(this);\n        this.onDisconnect = this.onDisconnect.bind(this);\n        this.events.addEventListener('connection:open', this.onConnect);\n        this.events.addEventListener('connection:close', this.onDisconnect);\n        // allow/deny lists\n        this.allow = (init.allow ?? []).map(ma => multiaddr(ma));\n        this.deny = (init.deny ?? []).map(ma => multiaddr(ma));\n        this.incomingPendingConnections = 0;\n        this.maxIncomingPendingConnections = init.maxIncomingPendingConnections ?? defaultOptions.maxIncomingPendingConnections;\n        // controls individual peers trying to dial us too quickly\n        this.inboundConnectionRateLimiter = new RateLimiter({\n            points: init.inboundConnectionThreshold ?? defaultOptions.inboundConnectionThreshold,\n            duration: 1\n        });\n        // controls what happens when we don't have enough connections\n        this.autoDial = new AutoDial({\n            connectionManager: this,\n            peerStore: components.peerStore,\n            events: components.events,\n            logger: components.logger\n        }, {\n            minConnections,\n            autoDialConcurrency: init.autoDialConcurrency ?? defaultOptions.autoDialConcurrency,\n            autoDialPriority: init.autoDialPriority ?? defaultOptions.autoDialPriority,\n            autoDialPeerRetryThreshold: init.autoDialPeerRetryThreshold ?? defaultOptions.autoDialPeerRetryThreshold,\n            autoDialDiscoveredPeersDebounce: init.autoDialDiscoveredPeersDebounce ?? defaultOptions.autoDialDiscoveredPeersDebounce,\n            maxQueueLength: init.autoDialMaxQueueLength ?? defaultOptions.autoDialMaxQueueLength\n        });\n        // controls what happens when we have too many connections\n        this.connectionPruner = new ConnectionPruner({\n            connectionManager: this,\n            peerStore: components.peerStore,\n            events: components.events,\n            logger: components.logger\n        }, {\n            maxConnections: this.maxConnections,\n            allow: this.allow\n        });\n        this.dialQueue = new DialQueue(components, {\n            addressSorter: init.addressSorter ?? defaultAddressSort,\n            maxParallelDials: init.maxParallelDials ?? MAX_PARALLEL_DIALS,\n            maxDialQueueLength: init.maxDialQueueLength ?? MAX_DIAL_QUEUE_LENGTH,\n            maxPeerAddrsToDial: init.maxPeerAddrsToDial ?? MAX_PEER_ADDRS_TO_DIAL,\n            dialTimeout: init.dialTimeout ?? DIAL_TIMEOUT,\n            resolvers: init.resolvers ?? {\n                dnsaddr: dnsaddrResolver\n            },\n            connections: this.connections\n        });\n    }\n    [Symbol.toStringTag] = '@libp2p/connection-manager';\n    isStarted() {\n        return this.started;\n    }\n    /**\n     * Starts the Connection Manager. If Metrics are not enabled on libp2p\n     * only event loop and connection limits will be monitored.\n     */\n    async start() {\n        // track inbound/outbound connections\n        this.metrics?.registerMetricGroup('libp2p_connection_manager_connections', {\n            calculate: () => {\n                const metric = {\n                    inbound: 0,\n                    outbound: 0\n                };\n                for (const conns of this.connections.values()) {\n                    for (const conn of conns) {\n                        if (conn.direction === 'inbound') {\n                            metric.inbound++;\n                        }\n                        else {\n                            metric.outbound++;\n                        }\n                    }\n                }\n                return metric;\n            }\n        });\n        // track total number of streams per protocol\n        this.metrics?.registerMetricGroup('libp2p_protocol_streams_total', {\n            label: 'protocol',\n            calculate: () => {\n                const metric = {};\n                for (const conns of this.connections.values()) {\n                    for (const conn of conns) {\n                        for (const stream of conn.streams) {\n                            const key = `${stream.direction} ${stream.protocol ?? 'unnegotiated'}`;\n                            metric[key] = (metric[key] ?? 0) + 1;\n                        }\n                    }\n                }\n                return metric;\n            }\n        });\n        // track 90th percentile of streams per protocol\n        this.metrics?.registerMetricGroup('libp2p_connection_manager_protocol_streams_per_connection_90th_percentile', {\n            label: 'protocol',\n            calculate: () => {\n                const allStreams = {};\n                for (const conns of this.connections.values()) {\n                    for (const conn of conns) {\n                        const streams = {};\n                        for (const stream of conn.streams) {\n                            const key = `${stream.direction} ${stream.protocol ?? 'unnegotiated'}`;\n                            streams[key] = (streams[key] ?? 0) + 1;\n                        }\n                        for (const [protocol, count] of Object.entries(streams)) {\n                            allStreams[protocol] = allStreams[protocol] ?? [];\n                            allStreams[protocol].push(count);\n                        }\n                    }\n                }\n                const metric = {};\n                for (let [protocol, counts] of Object.entries(allStreams)) {\n                    counts = counts.sort((a, b) => a - b);\n                    const index = Math.floor(counts.length * 0.9);\n                    metric[protocol] = counts[index];\n                }\n                return metric;\n            }\n        });\n        this.dialQueue.start();\n        this.autoDial.start();\n        this.started = true;\n        this.log('started');\n    }\n    async afterStart() {\n        // re-connect to any peers with the KEEP_ALIVE tag\n        void Promise.resolve()\n            .then(async () => {\n            const keepAlivePeers = await this.peerStore.all({\n                filters: [(peer) => {\n                        return peer.tags.has(KEEP_ALIVE);\n                    }]\n            });\n            await Promise.all(keepAlivePeers.map(async (peer) => {\n                await this.openConnection(peer.id)\n                    .catch(err => {\n                    this.log.error(err);\n                });\n            }));\n        })\n            .catch(err => {\n            this.log.error(err);\n        });\n        this.autoDial.afterStart();\n    }\n    /**\n     * Stops the Connection Manager\n     */\n    async stop() {\n        this.dialQueue.stop();\n        this.autoDial.stop();\n        // Close all connections we're tracking\n        const tasks = [];\n        for (const connectionList of this.connections.values()) {\n            for (const connection of connectionList) {\n                tasks.push((async () => {\n                    try {\n                        await connection.close();\n                    }\n                    catch (err) {\n                        this.log.error(err);\n                    }\n                })());\n            }\n        }\n        this.log('closing %d connections', tasks.length);\n        await Promise.all(tasks);\n        this.connections.clear();\n        this.log('stopped');\n    }\n    onConnect(evt) {\n        void this._onConnect(evt).catch(err => {\n            this.log.error(err);\n        });\n    }\n    /**\n     * Tracks the incoming connection and check the connection limit\n     */\n    async _onConnect(evt) {\n        const { detail: connection } = evt;\n        if (!this.started) {\n            // This can happen when we are in the process of shutting down the node\n            await connection.close();\n            return;\n        }\n        const peerId = connection.remotePeer;\n        const storedConns = this.connections.get(peerId);\n        let isNewPeer = false;\n        if (storedConns != null) {\n            storedConns.push(connection);\n        }\n        else {\n            isNewPeer = true;\n            this.connections.set(peerId, [connection]);\n        }\n        // only need to store RSA public keys, all other types are embedded in the peer id\n        if (peerId.publicKey != null && peerId.type === 'RSA') {\n            await this.peerStore.patch(peerId, {\n                publicKey: peerId.publicKey\n            });\n        }\n        if (isNewPeer) {\n            this.events.safeDispatchEvent('peer:connect', { detail: connection.remotePeer });\n        }\n    }\n    /**\n     * Removes the connection from tracking\n     */\n    onDisconnect(evt) {\n        const { detail: connection } = evt;\n        if (!this.started) {\n            // This can happen when we are in the process of shutting down the node\n            return;\n        }\n        const peerId = connection.remotePeer;\n        let storedConn = this.connections.get(peerId);\n        if (storedConn != null && storedConn.length > 1) {\n            storedConn = storedConn.filter((conn) => conn.id !== connection.id);\n            this.connections.set(peerId, storedConn);\n        }\n        else if (storedConn != null) {\n            this.connections.delete(peerId);\n            this.events.safeDispatchEvent('peer:disconnect', { detail: connection.remotePeer });\n        }\n    }\n    getConnections(peerId) {\n        if (peerId != null) {\n            return this.connections.get(peerId) ?? [];\n        }\n        let conns = [];\n        for (const c of this.connections.values()) {\n            conns = conns.concat(c);\n        }\n        return conns;\n    }\n    getConnectionsMap() {\n        return this.connections;\n    }\n    async openConnection(peerIdOrMultiaddr, options = {}) {\n        if (!this.isStarted()) {\n            throw new CodeError('Not started', codes.ERR_NODE_NOT_STARTED);\n        }\n        options.signal?.throwIfAborted();\n        const { peerId } = getPeerAddress(peerIdOrMultiaddr);\n        if (peerId != null && options.force !== true) {\n            this.log('dial %p', peerId);\n            const existingConnection = this.getConnections(peerId)\n                .find(conn => !conn.transient);\n            if (existingConnection != null) {\n                this.log('had an existing non-transient connection to %p', peerId);\n                options.onProgress?.(new CustomProgressEvent('dial-queue:already-connected'));\n                return existingConnection;\n            }\n        }\n        const connection = await this.dialQueue.dial(peerIdOrMultiaddr, {\n            ...options,\n            priority: options.priority ?? DEFAULT_DIAL_PRIORITY\n        });\n        let peerConnections = this.connections.get(connection.remotePeer);\n        if (peerConnections == null) {\n            peerConnections = [];\n            this.connections.set(connection.remotePeer, peerConnections);\n        }\n        // we get notified of connections via the Upgrader emitting \"connection\"\n        // events, double check we aren't already tracking this connection before\n        // storing it\n        let trackedConnection = false;\n        for (const conn of peerConnections) {\n            if (conn.id === connection.id) {\n                trackedConnection = true;\n            }\n        }\n        if (!trackedConnection) {\n            peerConnections.push(connection);\n        }\n        return connection;\n    }\n    async closeConnections(peerId, options = {}) {\n        const connections = this.connections.get(peerId) ?? [];\n        await Promise.all(connections.map(async (connection) => {\n            try {\n                await connection.close(options);\n            }\n            catch (err) {\n                connection.abort(err);\n            }\n        }));\n    }\n    async acceptIncomingConnection(maConn) {\n        // check deny list\n        const denyConnection = this.deny.some(ma => {\n            return maConn.remoteAddr.toString().startsWith(ma.toString());\n        });\n        if (denyConnection) {\n            this.log('connection from %a refused - connection remote address was in deny list', maConn.remoteAddr);\n            return false;\n        }\n        // check allow list\n        const allowConnection = this.allow.some(ma => {\n            return maConn.remoteAddr.toString().startsWith(ma.toString());\n        });\n        if (allowConnection) {\n            this.incomingPendingConnections++;\n            return true;\n        }\n        // check pending connections\n        if (this.incomingPendingConnections === this.maxIncomingPendingConnections) {\n            this.log('connection from %a refused - incomingPendingConnections exceeded by host', maConn.remoteAddr);\n            return false;\n        }\n        if (maConn.remoteAddr.isThinWaistAddress()) {\n            const host = maConn.remoteAddr.nodeAddress().address;\n            try {\n                await this.inboundConnectionRateLimiter.consume(host, 1);\n            }\n            catch {\n                this.log('connection from %a refused - inboundConnectionThreshold exceeded by host %s', maConn.remoteAddr, host);\n                return false;\n            }\n        }\n        if (this.getConnections().length < this.maxConnections) {\n            this.incomingPendingConnections++;\n            return true;\n        }\n        this.log('connection from %a refused - maxConnections exceeded', maConn.remoteAddr);\n        return false;\n    }\n    afterUpgradeInbound() {\n        this.incomingPendingConnections--;\n    }\n    getDialQueue() {\n        const statusMap = {\n            queued: 'queued',\n            running: 'active',\n            errored: 'error',\n            complete: 'success'\n        };\n        return this.dialQueue.queue.queue.map(job => {\n            return {\n                id: job.id,\n                status: statusMap[job.status],\n                peerId: job.options.peerId,\n                multiaddrs: [...job.options.multiaddrs].map(ma => multiaddr(ma))\n            };\n        });\n    }\n    async isDialable(multiaddr, options = {}) {\n        return this.dialQueue.isDialable(multiaddr, options);\n    }\n}\n//# sourceMappingURL=index.js.map","export const KEEP_ALIVE = 'keep-alive';\n//# sourceMappingURL=tags.js.map","/**\n * Implements exponential moving average. Ported from `moving-average`.\n *\n * @see https://en.wikipedia.org/wiki/Moving_average#Exponential_moving_average\n * @see https://www.npmjs.com/package/moving-average\n */\nexport class MovingAverage {\n    movingAverage;\n    variance;\n    deviation;\n    forecast;\n    timespan;\n    previousTime;\n    constructor(timespan) {\n        this.timespan = timespan;\n        this.movingAverage = 0;\n        this.variance = 0;\n        this.deviation = 0;\n        this.forecast = 0;\n    }\n    alpha(t, pt) {\n        return 1 - (Math.exp(-(t - pt) / this.timespan));\n    }\n    push(value, time = Date.now()) {\n        if (this.previousTime != null) {\n            // calculate moving average\n            const a = this.alpha(time, this.previousTime);\n            const diff = value - this.movingAverage;\n            const incr = a * diff;\n            this.movingAverage = a * value + (1 - a) * this.movingAverage;\n            // calculate variance & deviation\n            this.variance = (1 - a) * (this.variance + diff * incr);\n            this.deviation = Math.sqrt(this.variance);\n            // calculate forecast\n            this.forecast = this.movingAverage + a * diff;\n        }\n        else {\n            this.movingAverage = value;\n        }\n        this.previousTime = time;\n    }\n}\n//# sourceMappingURL=moving-average.js.map","import { setMaxListeners } from '@libp2p/interface';\nimport { anySignal } from 'any-signal';\nimport { MovingAverage } from './moving-average.js';\nexport const DEFAULT_TIMEOUT_MULTIPLIER = 1.2;\nexport const DEFAULT_FAILURE_MULTIPLIER = 2;\nexport const DEFAULT_MIN_TIMEOUT = 2000;\nexport class AdaptiveTimeout {\n    success;\n    failure;\n    next;\n    metric;\n    timeoutMultiplier;\n    failureMultiplier;\n    minTimeout;\n    constructor(init = {}) {\n        this.success = new MovingAverage(init.interval ?? 5000);\n        this.failure = new MovingAverage(init.interval ?? 5000);\n        this.next = new MovingAverage(init.interval ?? 5000);\n        this.failureMultiplier = init.failureMultiplier ?? DEFAULT_FAILURE_MULTIPLIER;\n        this.timeoutMultiplier = init.timeoutMultiplier ?? DEFAULT_TIMEOUT_MULTIPLIER;\n        this.minTimeout = init.minTimeout ?? DEFAULT_MIN_TIMEOUT;\n        if (init.metricName != null) {\n            this.metric = init.metrics?.registerMetricGroup(init.metricName);\n        }\n    }\n    getTimeoutSignal(options = {}) {\n        // calculate timeout for individual peers based on moving average of\n        // previous successful requests\n        const timeout = Math.max(Math.round(this.next.movingAverage * (options.timeoutFactor ?? this.timeoutMultiplier)), this.minTimeout);\n        const sendTimeout = AbortSignal.timeout(timeout);\n        const timeoutSignal = anySignal([options.signal, sendTimeout]);\n        setMaxListeners(Infinity, timeoutSignal, sendTimeout);\n        timeoutSignal.start = Date.now();\n        timeoutSignal.timeout = timeout;\n        return timeoutSignal;\n    }\n    cleanUp(signal) {\n        const time = Date.now() - signal.start;\n        if (signal.aborted) {\n            this.failure.push(time);\n            this.next.push(time * this.failureMultiplier);\n            this.metric?.update({\n                failureMovingAverage: this.failure.movingAverage,\n                failureDeviation: this.failure.deviation,\n                failureForecast: this.failure.forecast,\n                failureVariance: this.failure.variance,\n                failure: time\n            });\n        }\n        else {\n            this.success.push(time);\n            this.next.push(time);\n            this.metric?.update({\n                successMovingAverage: this.success.movingAverage,\n                successDeviation: this.success.deviation,\n                successForecast: this.success.forecast,\n                successVariance: this.success.variance,\n                success: time\n            });\n        }\n    }\n}\n//# sourceMappingURL=adaptive-timeout.js.map","import { randomBytes } from '@libp2p/crypto';\nimport { serviceCapabilities } from '@libp2p/interface';\nimport { AdaptiveTimeout } from '@libp2p/utils/adaptive-timeout';\nimport { byteStream } from 'it-byte-stream';\nconst DEFAULT_PING_INTERVAL_MS = 10000;\nconst PROTOCOL_VERSION = '1.0.0';\nconst PROTOCOL_NAME = 'ping';\nconst PROTOCOL_PREFIX = 'ipfs';\nconst PING_LENGTH = 32;\nexport class ConnectionMonitor {\n    protocol;\n    components;\n    log;\n    heartbeatInterval;\n    pingIntervalMs;\n    abortController;\n    timeout;\n    constructor(components, init = {}) {\n        this.components = components;\n        this.protocol = `/${init.protocolPrefix ?? PROTOCOL_PREFIX}/${PROTOCOL_NAME}/${PROTOCOL_VERSION}`;\n        this.log = components.logger.forComponent('libp2p:connection-monitor');\n        this.pingIntervalMs = init.pingInterval ?? DEFAULT_PING_INTERVAL_MS;\n        this.timeout = new AdaptiveTimeout({\n            ...(init.pingTimeout ?? {}),\n            metrics: components.metrics,\n            metricName: 'libp2p_connection_monitor_ping_time_milliseconds'\n        });\n    }\n    [Symbol.toStringTag] = '@libp2p/connection-monitor';\n    [serviceCapabilities] = [\n        '@libp2p/connection-monitor'\n    ];\n    start() {\n        this.abortController = new AbortController();\n        this.heartbeatInterval = setInterval(() => {\n            this.components.connectionManager.getConnections().forEach(conn => {\n                Promise.resolve().then(async () => {\n                    let start = Date.now();\n                    try {\n                        const signal = this.timeout.getTimeoutSignal({\n                            signal: this.abortController?.signal\n                        });\n                        const stream = await conn.newStream(this.protocol, {\n                            signal,\n                            runOnTransientConnection: true\n                        });\n                        const bs = byteStream(stream);\n                        start = Date.now();\n                        await Promise.all([\n                            bs.write(randomBytes(PING_LENGTH), {\n                                signal\n                            }),\n                            bs.read(PING_LENGTH, {\n                                signal\n                            })\n                        ]);\n                        conn.rtt = Date.now() - start;\n                        await bs.unwrap().close({\n                            signal\n                        });\n                    }\n                    catch (err) {\n                        if (err.code !== 'ERR_UNSUPPORTED_PROTOCOL') {\n                            throw err;\n                        }\n                        // protocol was unsupported, but that's ok as it means the remote\n                        // peer was still alive. We ran multistream-select which means two\n                        // round trips (e.g. 1x for the mss header, then another for the\n                        // protocol) so divide the time it took by two\n                        conn.rtt = (Date.now() - start) / 2;\n                    }\n                })\n                    .catch(err => {\n                    this.log.error('error during heartbeat, aborting connection', err);\n                    conn.abort(err);\n                });\n            });\n        }, this.pingIntervalMs);\n    }\n    stop() {\n        this.abortController?.abort();\n        if (this.heartbeatInterval != null) {\n            clearInterval(this.heartbeatInterval);\n        }\n    }\n}\n//# sourceMappingURL=connection-monitor.js.map","import { CodeError } from '@libp2p/interface';\nimport { PeerSet } from '@libp2p/peer-collections';\nimport merge from 'it-merge';\nimport { codes, messages } from './errors.js';\nexport class CompoundContentRouting {\n    routers;\n    started;\n    components;\n    constructor(components, init) {\n        this.routers = init.routers ?? [];\n        this.started = false;\n        this.components = components;\n    }\n    [Symbol.toStringTag] = '@libp2p/content-routing';\n    isStarted() {\n        return this.started;\n    }\n    async start() {\n        this.started = true;\n    }\n    async stop() {\n        this.started = false;\n    }\n    /**\n     * Iterates over all content routers in parallel to find providers of the given key\n     */\n    async *findProviders(key, options = {}) {\n        if (this.routers.length === 0) {\n            throw new CodeError('No content routers available', codes.ERR_NO_ROUTERS_AVAILABLE);\n        }\n        const self = this;\n        const seen = new PeerSet();\n        for await (const peer of merge(...self.routers.map(router => router.findProviders(key, options)))) {\n            // the peer was yielded by a content router without multiaddrs and we\n            // failed to load them\n            if (peer == null) {\n                continue;\n            }\n            // store the addresses for the peer if found\n            if (peer.multiaddrs.length > 0) {\n                await this.components.peerStore.merge(peer.id, {\n                    multiaddrs: peer.multiaddrs\n                });\n            }\n            // deduplicate peers\n            if (seen.has(peer.id)) {\n                continue;\n            }\n            seen.add(peer.id);\n            yield peer;\n        }\n    }\n    /**\n     * Iterates over all content routers in parallel to notify it is\n     * a provider of the given key\n     */\n    async provide(key, options = {}) {\n        if (this.routers.length === 0) {\n            throw new CodeError('No content routers available', codes.ERR_NO_ROUTERS_AVAILABLE);\n        }\n        await Promise.all(this.routers.map(async (router) => {\n            await router.provide(key, options);\n        }));\n    }\n    /**\n     * Store the given key/value pair in the available content routings\n     */\n    async put(key, value, options) {\n        if (!this.isStarted()) {\n            throw new CodeError(messages.NOT_STARTED_YET, codes.ERR_NODE_NOT_STARTED);\n        }\n        await Promise.all(this.routers.map(async (router) => {\n            await router.put(key, value, options);\n        }));\n    }\n    /**\n     * Get the value to the given key.\n     * Times out after 1 minute by default.\n     */\n    async get(key, options) {\n        if (!this.isStarted()) {\n            throw new CodeError(messages.NOT_STARTED_YET, codes.ERR_NODE_NOT_STARTED);\n        }\n        return Promise.any(this.routers.map(async (router) => {\n            return router.get(key, options);\n        }));\n    }\n}\n//# sourceMappingURL=content-routing.js.map","import { alloc as uint8ArrayAlloc } from 'uint8arrays/alloc';\nimport { equals as uint8ArrayEquals } from 'uint8arrays/equals';\nexport const MAX_FINGERPRINT_SIZE = 64;\nexport class Fingerprint {\n    fp;\n    h;\n    seed;\n    constructor(buf, hash, seed, fingerprintSize = 2) {\n        if (fingerprintSize > MAX_FINGERPRINT_SIZE) {\n            throw new TypeError('Invalid Fingerprint Size');\n        }\n        const fnv = hash.hashV(buf, seed);\n        const fp = uint8ArrayAlloc(fingerprintSize);\n        for (let i = 0; i < fp.length; i++) {\n            fp[i] = fnv[i];\n        }\n        if (fp.length === 0) {\n            fp[0] = 7;\n        }\n        this.fp = fp;\n        this.h = hash;\n        this.seed = seed;\n    }\n    hash() {\n        return this.h.hash(this.fp, this.seed);\n    }\n    equals(other) {\n        if (!(other?.fp instanceof Uint8Array)) {\n            return false;\n        }\n        return uint8ArrayEquals(this.fp, other.fp);\n    }\n}\n//# sourceMappingURL=fingerprint.js.map","export function getRandomInt(min, max) {\n    return Math.floor(Math.random() * (max - min)) + min;\n}\n//# sourceMappingURL=utils.js.map","import { Fingerprint } from './fingerprint.js';\nimport { getRandomInt } from './utils.js';\nexport class Bucket {\n    contents;\n    constructor(size) {\n        this.contents = new Array(size).fill(null);\n    }\n    has(fingerprint) {\n        if (!(fingerprint instanceof Fingerprint)) {\n            throw new TypeError('Invalid Fingerprint');\n        }\n        return this.contents.some((fp) => {\n            return fingerprint.equals(fp);\n        });\n    }\n    add(fingerprint) {\n        if (!(fingerprint instanceof Fingerprint)) {\n            throw new TypeError('Invalid Fingerprint');\n        }\n        for (let i = 0; i < this.contents.length; i++) {\n            if (this.contents[i] == null) {\n                this.contents[i] = fingerprint;\n                return true;\n            }\n        }\n        return true;\n    }\n    swap(fingerprint) {\n        if (!(fingerprint instanceof Fingerprint)) {\n            throw new TypeError('Invalid Fingerprint');\n        }\n        const i = getRandomInt(0, this.contents.length - 1);\n        const current = this.contents[i];\n        this.contents[i] = fingerprint;\n        return current;\n    }\n    remove(fingerprint) {\n        if (!(fingerprint instanceof Fingerprint)) {\n            throw new TypeError('Invalid Fingerprint');\n        }\n        const found = this.contents.findIndex((fp) => {\n            return fingerprint.equals(fp);\n        });\n        if (found > -1) {\n            this.contents[found] = null;\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n}\n//# sourceMappingURL=bucket.js.map","// FNV_PRIMES and FNV_OFFSETS from\n// http://www.isthe.com/chongo/tech/comp/fnv/index.html#FNV-param\n\nconst FNV_PRIMES = {\n\t32: 16_777_619n,\n\t64: 1_099_511_628_211n,\n\t128: 309_485_009_821_345_068_724_781_371n,\n\t256: 374_144_419_156_711_147_060_143_317_175_368_453_031_918_731_002_211n,\n\t512: 35_835_915_874_844_867_368_919_076_489_095_108_449_946_327_955_754_392_558_399_825_615_420_669_938_882_575_126_094_039_892_345_713_852_759n,\n\t1024: 5_016_456_510_113_118_655_434_598_811_035_278_955_030_765_345_404_790_744_303_017_523_831_112_055_108_147_451_509_157_692_220_295_382_716_162_651_878_526_895_249_385_292_291_816_524_375_083_746_691_371_804_094_271_873_160_484_737_966_720_260_389_217_684_476_157_468_082_573n,\n};\n\nconst FNV_OFFSETS = {\n\t32: 2_166_136_261n,\n\t64: 14_695_981_039_346_656_037n,\n\t128: 144_066_263_297_769_815_596_495_629_667_062_367_629n,\n\t256: 100_029_257_958_052_580_907_070_968_620_625_704_837_092_796_014_241_193_945_225_284_501_741_471_925_557n,\n\t512: 9_659_303_129_496_669_498_009_435_400_716_310_466_090_418_745_672_637_896_108_374_329_434_462_657_994_582_932_197_716_438_449_813_051_892_206_539_805_784_495_328_239_340_083_876_191_928_701_583_869_517_785n,\n\t1024: 14_197_795_064_947_621_068_722_070_641_403_218_320_880_622_795_441_933_960_878_474_914_617_582_723_252_296_732_303_717_722_150_864_096_521_202_355_549_365_628_174_669_108_571_814_760_471_015_076_148_029_755_969_804_077_320_157_692_458_563_003_215_304_957_150_157_403_644_460_363_550_505_412_711_285_966_361_610_267_868_082_893_823_963_790_439_336_411_086_884_584_107_735_010_676_915n,\n};\n\nconst cachedEncoder = new globalThis.TextEncoder();\n\nfunction fnv1aUint8Array(uint8Array, size) {\n\tconst fnvPrime = FNV_PRIMES[size];\n\tlet hash = FNV_OFFSETS[size];\n\n\t// eslint-disable-next-line unicorn/no-for-loop -- This is a performance-sensitive loop\n\tfor (let index = 0; index < uint8Array.length; index++) {\n\t\thash ^= BigInt(uint8Array[index]);\n\t\thash = BigInt.asUintN(size, hash * fnvPrime);\n\t}\n\n\treturn hash;\n}\n\nfunction fnv1aEncodeInto(string, size, utf8Buffer) {\n\tif (utf8Buffer.length === 0) {\n\t\tthrow new Error('The `utf8Buffer` option must have a length greater than zero');\n\t}\n\n\tconst fnvPrime = FNV_PRIMES[size];\n\tlet hash = FNV_OFFSETS[size];\n\tlet remaining = string;\n\n\twhile (remaining.length > 0) {\n\t\tconst result = cachedEncoder.encodeInto(remaining, utf8Buffer);\n\t\tremaining = remaining.slice(result.read);\n\t\tfor (let index = 0; index < result.written; index++) {\n\t\t\thash ^= BigInt(utf8Buffer[index]);\n\t\t\thash = BigInt.asUintN(size, hash * fnvPrime);\n\t\t}\n\t}\n\n\treturn hash;\n}\n\nexport default function fnv1a(value, {size = 32, utf8Buffer} = {}) {\n\tif (!FNV_PRIMES[size]) {\n\t\tthrow new Error('The `size` option must be one of 32, 64, 128, 256, 512, or 1024');\n\t}\n\n\tif (typeof value === 'string') {\n\t\tif (utf8Buffer) {\n\t\t\treturn fnv1aEncodeInto(value, size, utf8Buffer);\n\t\t}\n\n\t\tvalue = cachedEncoder.encode(value);\n\t}\n\n\treturn fnv1aUint8Array(value, size);\n}\n","import fnv1aHash from '@sindresorhus/fnv1a';\nimport mur from 'murmurhash3js-revisited';\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string';\nexport const murmur3 = {\n    hash: (input, seed) => {\n        return mur.x86.hash32(input, seed);\n    },\n    hashV: (input, seed) => {\n        return numberToBuffer(murmur3.hash(input, seed));\n    }\n};\nexport const fnv1a = {\n    hash: (input) => {\n        return Number(fnv1aHash(input, {\n            size: 32\n        }));\n    },\n    hashV: (input, seed) => {\n        return numberToBuffer(fnv1a.hash(input, seed));\n    }\n};\nexport function numberToBuffer(num) {\n    let hex = num.toString(16);\n    if (hex.length % 2 === 1) {\n        hex = `0${hex}`;\n    }\n    return uint8ArrayFromString(hex, 'base16');\n}\n//# sourceMappingURL=hashes.js.map","import { fromString as uint8ArrayFromString } from 'uint8arrays/from-string';\nimport { Bucket } from './bucket.js';\nimport { Fingerprint, MAX_FINGERPRINT_SIZE } from './fingerprint.js';\nimport { fnv1a } from './hashes.js';\nimport { getRandomInt } from './utils.js';\nconst maxCuckooCount = 500;\nexport class CuckooFilter {\n    bucketSize;\n    filterSize;\n    fingerprintSize;\n    buckets;\n    count;\n    hash;\n    seed;\n    constructor(init) {\n        this.filterSize = init.filterSize;\n        this.bucketSize = init.bucketSize ?? 4;\n        this.fingerprintSize = init.fingerprintSize ?? 2;\n        this.count = 0;\n        this.buckets = [];\n        this.hash = init.hash ?? fnv1a;\n        this.seed = init.seed ?? getRandomInt(0, Math.pow(2, 10));\n    }\n    add(item) {\n        if (typeof item === 'string') {\n            item = uint8ArrayFromString(item);\n        }\n        const fingerprint = new Fingerprint(item, this.hash, this.seed, this.fingerprintSize);\n        const j = this.hash.hash(item, this.seed) % this.filterSize;\n        const k = (j ^ fingerprint.hash()) % this.filterSize;\n        if (this.buckets[j] == null) {\n            this.buckets[j] = new Bucket(this.bucketSize);\n        }\n        if (this.buckets[k] == null) {\n            this.buckets[k] = new Bucket(this.bucketSize);\n        }\n        if (this.buckets[j].add(fingerprint) || this.buckets[k].add(fingerprint)) {\n            this.count++;\n            return true;\n        }\n        const rand = [j, k];\n        let i = rand[getRandomInt(0, rand.length - 1)];\n        if (this.buckets[i] == null) {\n            this.buckets[i] = new Bucket(this.bucketSize);\n        }\n        for (let n = 0; n < maxCuckooCount; n++) {\n            const swapped = this.buckets[i].swap(fingerprint);\n            if (swapped == null) {\n                continue;\n            }\n            i = (i ^ swapped.hash()) % this.filterSize;\n            if (this.buckets[i] == null) {\n                this.buckets[i] = new Bucket(this.bucketSize);\n            }\n            if (this.buckets[i].add(swapped)) {\n                this.count++;\n                return true;\n            }\n            else {\n                continue;\n            }\n        }\n        return false;\n    }\n    has(item) {\n        if (typeof item === 'string') {\n            item = uint8ArrayFromString(item);\n        }\n        const fingerprint = new Fingerprint(item, this.hash, this.seed, this.fingerprintSize);\n        const j = this.hash.hash(item, this.seed) % this.filterSize;\n        const inJ = this.buckets[j]?.has(fingerprint) ?? false;\n        if (inJ) {\n            return inJ;\n        }\n        const k = (j ^ fingerprint.hash()) % this.filterSize;\n        return this.buckets[k]?.has(fingerprint) ?? false;\n    }\n    remove(item) {\n        if (typeof item === 'string') {\n            item = uint8ArrayFromString(item);\n        }\n        const fingerprint = new Fingerprint(item, this.hash, this.seed, this.fingerprintSize);\n        const j = this.hash.hash(item, this.seed) % this.filterSize;\n        const inJ = this.buckets[j]?.remove(fingerprint) ?? false;\n        if (inJ) {\n            this.count--;\n            return inJ;\n        }\n        const k = (j ^ fingerprint.hash()) % this.filterSize;\n        const inK = this.buckets[k]?.remove(fingerprint) ?? false;\n        if (inK) {\n            this.count--;\n        }\n        return inK;\n    }\n    get reliable() {\n        return Math.floor(100 * (this.count / this.filterSize)) <= 90;\n    }\n}\n// max load constants, defined in the cuckoo paper\nconst MAX_LOAD = {\n    1: 0.5,\n    2: 0.84,\n    4: 0.95,\n    8: 0.98\n};\nfunction calculateBucketSize(errorRate = 0.001) {\n    if (errorRate > 0.002) {\n        return 2;\n    }\n    if (errorRate > 0.00001) {\n        return 4;\n    }\n    return 8;\n}\nexport function optimize(maxItems, errorRate = 0.001) {\n    // https://www.eecs.harvard.edu/~michaelm/postscripts/cuckoo-conext2014.pdf\n    // Section 5.1 Optimal Bucket Size\n    const bucketSize = calculateBucketSize(errorRate);\n    const load = MAX_LOAD[bucketSize];\n    // https://stackoverflow.com/questions/57555236/how-to-size-a-cuckoo-filter/57617208#57617208\n    const filterSize = Math.round(maxItems / load);\n    const fingerprintSize = Math.min(Math.ceil(Math.log2(1 / errorRate) + Math.log2(2 * bucketSize)), MAX_FINGERPRINT_SIZE);\n    return {\n        filterSize,\n        bucketSize,\n        fingerprintSize\n    };\n}\nexport function createCuckooFilter(maxItems, errorRate = 0.005) {\n    const opts = optimize(maxItems, errorRate);\n    return new CuckooFilter(opts);\n}\n//# sourceMappingURL=cuckoo-filter.js.map","import { fromString as uint8ArrayFromString } from 'uint8arrays/from-string';\nimport { CuckooFilter, optimize } from './cuckoo-filter.js';\nimport { fnv1a } from './hashes.js';\nimport { getRandomInt } from './utils.js';\nexport class ScalableCuckooFilter {\n    filterSize;\n    bucketSize;\n    fingerprintSize;\n    scale;\n    filterSeries;\n    hash;\n    seed;\n    constructor(init) {\n        this.bucketSize = init.bucketSize ?? 4;\n        this.filterSize = init.filterSize ?? (1 << 18) / this.bucketSize;\n        this.fingerprintSize = init.fingerprintSize ?? 2;\n        this.scale = init.scale ?? 2;\n        this.hash = init.hash ?? fnv1a;\n        this.seed = init.seed ?? getRandomInt(0, Math.pow(2, 10));\n        this.filterSeries = [\n            new CuckooFilter({\n                filterSize: this.filterSize,\n                bucketSize: this.bucketSize,\n                fingerprintSize: this.fingerprintSize,\n                hash: this.hash,\n                seed: this.seed\n            })\n        ];\n    }\n    add(item) {\n        if (typeof item === 'string') {\n            item = uint8ArrayFromString(item);\n        }\n        if (this.has(item)) {\n            return true;\n        }\n        let current = this.filterSeries.find((cuckoo) => {\n            return cuckoo.reliable;\n        });\n        if (current == null) {\n            const curSize = this.filterSize * Math.pow(this.scale, this.filterSeries.length);\n            current = new CuckooFilter({\n                filterSize: curSize,\n                bucketSize: this.bucketSize,\n                fingerprintSize: this.fingerprintSize,\n                hash: this.hash,\n                seed: this.seed\n            });\n            this.filterSeries.push(current);\n        }\n        return current.add(item);\n    }\n    has(item) {\n        if (typeof item === 'string') {\n            item = uint8ArrayFromString(item);\n        }\n        for (let i = 0; i < this.filterSeries.length; i++) {\n            if (this.filterSeries[i].has(item)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    remove(item) {\n        if (typeof item === 'string') {\n            item = uint8ArrayFromString(item);\n        }\n        for (let i = 0; i < this.filterSeries.length; i++) {\n            if (this.filterSeries[i].remove(item)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    get count() {\n        return this.filterSeries.reduce((acc, curr) => {\n            return acc + curr.count;\n        }, 0);\n    }\n}\nexport function createScalableCuckooFilter(maxItems, errorRate = 0.001, options) {\n    return new ScalableCuckooFilter({\n        ...optimize(maxItems, errorRate),\n        ...(options ?? {})\n    });\n}\n//# sourceMappingURL=scalable-cuckoo-filter.js.map","/**\n * @packageDocumentation\n *\n * Takes an (async) iterable that emits promise-returning functions, invokes them in parallel up to the concurrency limit and emits the results as they become available, optionally in the same order as the input\n *\n * @example\n *\n * ```javascript\n * import parallel from 'it-parallel'\n * import all from 'it-all'\n * import delay from 'delay'\n *\n * // This can also be an iterator, async iterator, generator, etc\n * const input = [\n *   async () => {\n *     console.info('start 1')\n *     await delay(500)\n *\n *     console.info('end 1')\n *     return 1\n *   },\n *   async () => {\n *     console.info('start 2')\n *     await delay(200)\n *\n *     console.info('end 2')\n *     return 2\n *   },\n *   async () => {\n *     console.info('start 3')\n *     await delay(100)\n *\n *     console.info('end 3')\n *     return 3\n *   }\n * ]\n *\n * const result = await all(parallel(input, {\n *   concurrency: 2\n * }))\n *\n * // output:\n * // start 1\n * // start 2\n * // end 2\n * // start 3\n * // end 3\n * // end 1\n *\n * console.info(result) // [2, 3, 1]\n * ```\n *\n * If order is important, pass `ordered: true` as an option:\n *\n * ```javascript\n * const result = await all(parallel(input, {\n *   concurrency: 2,\n *   ordered: true\n * }))\n *\n * // output:\n * // start 1\n * // start 2\n * // end 2\n * // start 3\n * // end 3\n * // end 1\n *\n * console.info(result) // [1, 2, 3]\n * ```\n */\nimport defer from 'p-defer';\nconst CustomEvent = globalThis.CustomEvent ?? Event;\n/**\n * Takes an (async) iterator that emits promise-returning functions,\n * invokes them in parallel and emits the results as they become available but\n * in the same order as the input\n */\nexport default async function* parallel(source, options = {}) {\n    let concurrency = options.concurrency ?? Infinity;\n    if (concurrency < 1) {\n        concurrency = Infinity;\n    }\n    const ordered = options.ordered == null ? false : options.ordered;\n    const emitter = new EventTarget();\n    const ops = [];\n    let slotAvailable = defer();\n    let resultAvailable = defer();\n    let sourceFinished = false;\n    let sourceErr;\n    let opErred = false;\n    emitter.addEventListener('task-complete', () => {\n        resultAvailable.resolve();\n    });\n    void Promise.resolve().then(async () => {\n        try {\n            for await (const task of source) {\n                if (ops.length === concurrency) {\n                    slotAvailable = defer();\n                    await slotAvailable.promise;\n                }\n                if (opErred) {\n                    break;\n                }\n                const op = {\n                    done: false\n                };\n                ops.push(op);\n                task()\n                    .then(result => {\n                    op.done = true;\n                    op.ok = true;\n                    op.value = result;\n                    emitter.dispatchEvent(new CustomEvent('task-complete'));\n                }, err => {\n                    op.done = true;\n                    op.err = err;\n                    emitter.dispatchEvent(new CustomEvent('task-complete'));\n                });\n            }\n            sourceFinished = true;\n            emitter.dispatchEvent(new CustomEvent('task-complete'));\n        }\n        catch (err) {\n            sourceErr = err;\n            emitter.dispatchEvent(new CustomEvent('task-complete'));\n        }\n    });\n    function valuesAvailable() {\n        if (ordered) {\n            return ops[0]?.done;\n        }\n        return Boolean(ops.find(op => op.done));\n    }\n    function* yieldOrderedValues() {\n        while ((ops.length > 0) && ops[0].done) {\n            const op = ops[0];\n            ops.shift();\n            if (op.ok) {\n                yield op.value;\n            }\n            else {\n                // allow the source to exit\n                opErred = true;\n                slotAvailable.resolve();\n                throw op.err;\n            }\n            slotAvailable.resolve();\n        }\n    }\n    function* yieldUnOrderedValues() {\n        // more values can become available while we wait for `yield`\n        // to return control to this function\n        while (valuesAvailable()) {\n            for (let i = 0; i < ops.length; i++) {\n                if (ops[i].done) {\n                    const op = ops[i];\n                    ops.splice(i, 1);\n                    i--;\n                    if (op.ok) {\n                        yield op.value;\n                    }\n                    else {\n                        opErred = true;\n                        slotAvailable.resolve();\n                        throw op.err;\n                    }\n                    slotAvailable.resolve();\n                }\n            }\n        }\n    }\n    while (true) {\n        if (!valuesAvailable()) {\n            resultAvailable = defer();\n            await resultAvailable.promise;\n        }\n        if (sourceErr != null) {\n            // the source threw an error, propagate it\n            throw sourceErr;\n        }\n        if (ordered) {\n            yield* yieldOrderedValues();\n        }\n        else {\n            yield* yieldUnOrderedValues();\n        }\n        if (sourceFinished && ops.length === 0) {\n            // not waiting for any results and no more tasks so we are done\n            break;\n        }\n    }\n}\n//# sourceMappingURL=index.js.map","import { CodeError } from '@libp2p/interface';\nimport { createScalableCuckooFilter } from '@libp2p/utils/filters';\nimport merge from 'it-merge';\nimport parallel from 'it-parallel';\nimport { codes, messages } from './errors.js';\nexport class DefaultPeerRouting {\n    log;\n    peerId;\n    peerStore;\n    routers;\n    constructor(components, init = {}) {\n        this.log = components.logger.forComponent('libp2p:peer-routing');\n        this.peerId = components.peerId;\n        this.peerStore = components.peerStore;\n        this.routers = init.routers ?? [];\n    }\n    [Symbol.toStringTag] = '@libp2p/peer-routing';\n    /**\n     * Iterates over all peer routers in parallel to find the given peer\n     */\n    async findPeer(id, options) {\n        if (this.routers.length === 0) {\n            throw new CodeError('No peer routers available', codes.ERR_NO_ROUTERS_AVAILABLE);\n        }\n        if (id.toString() === this.peerId.toString()) {\n            throw new CodeError('Should not try to find self', codes.ERR_FIND_SELF);\n        }\n        const self = this;\n        const source = merge(...this.routers.map(router => (async function* () {\n            try {\n                yield await router.findPeer(id, options);\n            }\n            catch (err) {\n                self.log.error(err);\n            }\n        })()));\n        for await (const peer of source) {\n            if (peer == null) {\n                continue;\n            }\n            // store the addresses for the peer if found\n            if (peer.multiaddrs.length > 0) {\n                await this.peerStore.merge(peer.id, {\n                    multiaddrs: peer.multiaddrs\n                });\n            }\n            return peer;\n        }\n        throw new CodeError(messages.NOT_FOUND, codes.ERR_NOT_FOUND);\n    }\n    /**\n     * Attempt to find the closest peers on the network to the given key\n     */\n    async *getClosestPeers(key, options = {}) {\n        if (this.routers.length === 0) {\n            throw new CodeError('No peer routers available', codes.ERR_NO_ROUTERS_AVAILABLE);\n        }\n        const self = this;\n        const seen = createScalableCuckooFilter(1024);\n        for await (const peer of parallel(async function* () {\n            const source = merge(...self.routers.map(router => router.getClosestPeers(key, options)));\n            for await (let peer of source) {\n                yield async () => {\n                    // find multiaddrs if they are missing\n                    if (peer.multiaddrs.length === 0) {\n                        try {\n                            peer = await self.findPeer(peer.id, {\n                                ...options,\n                                useCache: false\n                            });\n                        }\n                        catch (err) {\n                            self.log.error('could not find peer multiaddrs', err);\n                            return;\n                        }\n                    }\n                    return peer;\n                };\n            }\n        }())) {\n            if (peer == null) {\n                continue;\n            }\n            // store the addresses for the peer if found\n            if (peer.multiaddrs.length > 0) {\n                await this.peerStore.merge(peer.id, {\n                    multiaddrs: peer.multiaddrs\n                });\n            }\n            // deduplicate peers\n            if (seen.has(peer.id.toBytes())) {\n                continue;\n            }\n            seen.add(peer.id.toBytes());\n            yield peer;\n        }\n    }\n}\n//# sourceMappingURL=peer-routing.js.map","import { randomBytes } from '@libp2p/crypto';\nimport { TypedEventEmitter, setMaxListeners } from '@libp2p/interface';\nimport { anySignal } from 'any-signal';\nimport pDefer, {} from 'p-defer';\nimport { raceEvent } from 'race-event';\nimport { raceSignal } from 'race-signal';\nexport class RandomWalk extends TypedEventEmitter {\n    peerRouting;\n    log;\n    walking;\n    walkers;\n    shutdownController;\n    walkController;\n    needNext;\n    constructor(components) {\n        super();\n        this.log = components.logger.forComponent('libp2p:random-walk');\n        this.peerRouting = components.peerRouting;\n        this.walkers = 0;\n        this.walking = false;\n        // stops any in-progress walks when the node is shut down\n        this.shutdownController = new AbortController();\n        setMaxListeners(Infinity, this.shutdownController.signal);\n    }\n    [Symbol.toStringTag] = '@libp2p/random-walk';\n    start() {\n        this.shutdownController = new AbortController();\n        setMaxListeners(Infinity, this.shutdownController.signal);\n    }\n    stop() {\n        this.shutdownController.abort();\n    }\n    async *walk(options) {\n        if (!this.walking) {\n            // start the query that causes walk:peer events to be emitted\n            this.startWalk();\n        }\n        this.walkers++;\n        const signal = anySignal([this.shutdownController.signal, options?.signal]);\n        setMaxListeners(Infinity, signal);\n        try {\n            while (true) {\n                // if another consumer has paused the query, start it again\n                this.needNext?.resolve();\n                this.needNext = pDefer();\n                // wait for a walk:peer or walk:error event\n                const event = await raceEvent(this, 'walk:peer', signal, {\n                    errorEvent: 'walk:error'\n                });\n                yield event.detail;\n            }\n        }\n        finally {\n            signal.clear();\n            this.walkers--;\n            // stop the walk if no more consumers are interested\n            if (this.walkers === 0) {\n                this.walkController?.abort();\n                this.walkController = undefined;\n            }\n        }\n    }\n    startWalk() {\n        this.walking = true;\n        // the signal for this controller will be aborted if no more random peers\n        // are required\n        this.walkController = new AbortController();\n        setMaxListeners(Infinity, this.walkController.signal);\n        const signal = anySignal([this.walkController.signal, this.shutdownController.signal]);\n        setMaxListeners(Infinity, signal);\n        const start = Date.now();\n        let found = 0;\n        Promise.resolve().then(async () => {\n            this.log('start walk');\n            // find peers until no more consumers are interested\n            while (this.walkers > 0) {\n                try {\n                    const data = randomBytes(32);\n                    let s = Date.now();\n                    for await (const peer of this.peerRouting.getClosestPeers(data, { signal })) {\n                        if (signal.aborted) {\n                            this.log('aborting walk');\n                        }\n                        signal.throwIfAborted();\n                        this.log('found peer %p after %dms for %d walkers', peer.id, Date.now() - s, this.walkers);\n                        found++;\n                        this.safeDispatchEvent('walk:peer', {\n                            detail: peer\n                        });\n                        // if we only have one consumer, pause the query until they request\n                        // another random peer or they signal they are no longer interested\n                        if (this.walkers === 1 && this.needNext != null) {\n                            this.log('wait for need next');\n                            await raceSignal(this.needNext.promise, signal);\n                        }\n                        s = Date.now();\n                    }\n                    this.log('walk iteration for %b and %d walkers finished, found %d peers', data, this.walkers, found);\n                }\n                catch (err) {\n                    this.log.error('randomwalk errored', err);\n                    this.safeDispatchEvent('walk:error', {\n                        detail: err\n                    });\n                }\n            }\n            this.log('no walkers left, ended walk');\n        })\n            .catch(err => {\n            this.log.error('randomwalk errored', err);\n        })\n            .finally(() => {\n            this.log('finished walk, found %d peers after %dms', found, Date.now() - start);\n            this.walking = false;\n        });\n    }\n}\n//# sourceMappingURL=random-walk.js.map","import { CodeError } from '@libp2p/interface';\nimport merge from 'merge-options';\nimport { codes } from './errors.js';\nexport const DEFAULT_MAX_INBOUND_STREAMS = 32;\nexport const DEFAULT_MAX_OUTBOUND_STREAMS = 64;\n/**\n * Responsible for notifying registered protocols of events in the network.\n */\nexport class DefaultRegistrar {\n    log;\n    topologies;\n    handlers;\n    components;\n    constructor(components) {\n        this.log = components.logger.forComponent('libp2p:registrar');\n        this.topologies = new Map();\n        this.handlers = new Map();\n        this.components = components;\n        this._onDisconnect = this._onDisconnect.bind(this);\n        this._onPeerUpdate = this._onPeerUpdate.bind(this);\n        this._onPeerIdentify = this._onPeerIdentify.bind(this);\n        this.components.events.addEventListener('peer:disconnect', this._onDisconnect);\n        this.components.events.addEventListener('peer:update', this._onPeerUpdate);\n        this.components.events.addEventListener('peer:identify', this._onPeerIdentify);\n    }\n    [Symbol.toStringTag] = '@libp2p/registrar';\n    getProtocols() {\n        return Array.from(new Set([\n            ...this.handlers.keys()\n        ])).sort();\n    }\n    getHandler(protocol) {\n        const handler = this.handlers.get(protocol);\n        if (handler == null) {\n            throw new CodeError(`No handler registered for protocol ${protocol}`, codes.ERR_NO_HANDLER_FOR_PROTOCOL);\n        }\n        return handler;\n    }\n    getTopologies(protocol) {\n        const topologies = this.topologies.get(protocol);\n        if (topologies == null) {\n            return [];\n        }\n        return [\n            ...topologies.values()\n        ];\n    }\n    /**\n     * Registers the `handler` for each protocol\n     */\n    async handle(protocol, handler, opts) {\n        if (this.handlers.has(protocol)) {\n            throw new CodeError(`Handler already registered for protocol ${protocol}`, codes.ERR_PROTOCOL_HANDLER_ALREADY_REGISTERED);\n        }\n        const options = merge.bind({ ignoreUndefined: true })({\n            maxInboundStreams: DEFAULT_MAX_INBOUND_STREAMS,\n            maxOutboundStreams: DEFAULT_MAX_OUTBOUND_STREAMS\n        }, opts);\n        this.handlers.set(protocol, {\n            handler,\n            options\n        });\n        // Add new protocol to self protocols in the peer store\n        await this.components.peerStore.merge(this.components.peerId, {\n            protocols: [protocol]\n        });\n    }\n    /**\n     * Removes the handler for each protocol. The protocol\n     * will no longer be supported on streams.\n     */\n    async unhandle(protocols) {\n        const protocolList = Array.isArray(protocols) ? protocols : [protocols];\n        protocolList.forEach(protocol => {\n            this.handlers.delete(protocol);\n        });\n        // Update self protocols in the peer store\n        await this.components.peerStore.patch(this.components.peerId, {\n            protocols: this.getProtocols()\n        });\n    }\n    /**\n     * Register handlers for a set of multicodecs given\n     */\n    async register(protocol, topology) {\n        if (topology == null) {\n            throw new CodeError('invalid topology', codes.ERR_INVALID_PARAMETERS);\n        }\n        // Create topology\n        const id = `${(Math.random() * 1e9).toString(36)}${Date.now()}`;\n        let topologies = this.topologies.get(protocol);\n        if (topologies == null) {\n            topologies = new Map();\n            this.topologies.set(protocol, topologies);\n        }\n        topologies.set(id, topology);\n        return id;\n    }\n    /**\n     * Unregister topology\n     */\n    unregister(id) {\n        for (const [protocol, topologies] of this.topologies.entries()) {\n            if (topologies.has(id)) {\n                topologies.delete(id);\n                if (topologies.size === 0) {\n                    this.topologies.delete(protocol);\n                }\n            }\n        }\n    }\n    /**\n     * Remove a disconnected peer from the record\n     */\n    _onDisconnect(evt) {\n        const remotePeer = evt.detail;\n        void this.components.peerStore.get(remotePeer)\n            .then(peer => {\n            for (const protocol of peer.protocols) {\n                const topologies = this.topologies.get(protocol);\n                if (topologies == null) {\n                    // no topologies are interested in this protocol\n                    continue;\n                }\n                for (const topology of topologies.values()) {\n                    if (topology.filter?.has(remotePeer) === false) {\n                        continue;\n                    }\n                    topology.filter?.remove(remotePeer);\n                    topology.onDisconnect?.(remotePeer);\n                }\n            }\n        })\n            .catch(err => {\n            if (err.code === codes.ERR_NOT_FOUND) {\n                // peer has not completed identify so they are not in the peer store\n                return;\n            }\n            this.log.error('could not inform topologies of disconnecting peer %p', remotePeer, err);\n        });\n    }\n    /**\n     * When a peer is updated, if they have removed supported protocols notify any\n     * topologies interested in the removed protocols.\n     */\n    _onPeerUpdate(evt) {\n        const { peer, previous } = evt.detail;\n        const removed = (previous?.protocols ?? []).filter(protocol => !peer.protocols.includes(protocol));\n        for (const protocol of removed) {\n            const topologies = this.topologies.get(protocol);\n            if (topologies == null) {\n                // no topologies are interested in this protocol\n                continue;\n            }\n            for (const topology of topologies.values()) {\n                if (topology.filter?.has(peer.id) === false) {\n                    continue;\n                }\n                topology.filter?.remove(peer.id);\n                topology.onDisconnect?.(peer.id);\n            }\n        }\n    }\n    /**\n     * After identify has completed and we have received the list of supported\n     * protocols, notify any topologies interested in those protocols.\n     */\n    _onPeerIdentify(evt) {\n        const protocols = evt.detail.protocols;\n        const connection = evt.detail.connection;\n        const peerId = evt.detail.peerId;\n        for (const protocol of protocols) {\n            const topologies = this.topologies.get(protocol);\n            if (topologies == null) {\n                // no topologies are interested in this protocol\n                continue;\n            }\n            for (const topology of topologies.values()) {\n                if (connection.transient && topology.notifyOnTransient !== true) {\n                    continue;\n                }\n                if (topology.filter?.has(peerId) === true) {\n                    continue;\n                }\n                topology.filter?.add(peerId);\n                topology.onConnect?.(peerId, connection);\n            }\n        }\n    }\n}\n//# sourceMappingURL=registrar.js.map","class TrackedMap extends Map {\n    metric;\n    constructor(init) {\n        super();\n        const { name, metrics } = init;\n        this.metric = metrics.registerMetric(name);\n        this.updateComponentMetric();\n    }\n    set(key, value) {\n        super.set(key, value);\n        this.updateComponentMetric();\n        return this;\n    }\n    delete(key) {\n        const deleted = super.delete(key);\n        this.updateComponentMetric();\n        return deleted;\n    }\n    clear() {\n        super.clear();\n        this.updateComponentMetric();\n    }\n    updateComponentMetric() {\n        this.metric.update(this.size);\n    }\n}\nexport function trackedMap(config) {\n    const { name, metrics } = config;\n    let map;\n    if (metrics != null) {\n        map = new TrackedMap({ name, metrics });\n    }\n    else {\n        map = new Map();\n    }\n    return map;\n}\n//# sourceMappingURL=tracked-map.js.map","import { CodeError, FaultTolerance } from '@libp2p/interface';\nimport { trackedMap } from '@libp2p/utils/tracked-map';\nimport { CustomProgressEvent } from 'progress-events';\nimport { codes } from './errors.js';\nexport class DefaultTransportManager {\n    log;\n    components;\n    transports;\n    listeners;\n    faultTolerance;\n    started;\n    constructor(components, init = {}) {\n        this.log = components.logger.forComponent('libp2p:transports');\n        this.components = components;\n        this.started = false;\n        this.transports = new Map();\n        this.listeners = trackedMap({\n            name: 'libp2p_transport_manager_listeners',\n            metrics: this.components.metrics\n        });\n        this.faultTolerance = init.faultTolerance ?? FaultTolerance.FATAL_ALL;\n    }\n    [Symbol.toStringTag] = '@libp2p/transport-manager';\n    /**\n     * Adds a `Transport` to the manager\n     */\n    add(transport) {\n        const tag = transport[Symbol.toStringTag];\n        if (tag == null) {\n            throw new CodeError('Transport must have a valid tag', codes.ERR_INVALID_KEY);\n        }\n        if (this.transports.has(tag)) {\n            throw new CodeError(`There is already a transport with the tag ${tag}`, codes.ERR_DUPLICATE_TRANSPORT);\n        }\n        this.log('adding transport %s', tag);\n        this.transports.set(tag, transport);\n        if (!this.listeners.has(tag)) {\n            this.listeners.set(tag, []);\n        }\n    }\n    isStarted() {\n        return this.started;\n    }\n    start() {\n        this.started = true;\n    }\n    async afterStart() {\n        // Listen on the provided transports for the provided addresses\n        const addrs = this.components.addressManager.getListenAddrs();\n        await this.listen(addrs);\n    }\n    /**\n     * Stops all listeners\n     */\n    async stop() {\n        const tasks = [];\n        for (const [key, listeners] of this.listeners) {\n            this.log('closing listeners for %s', key);\n            while (listeners.length > 0) {\n                const listener = listeners.pop();\n                if (listener == null) {\n                    continue;\n                }\n                tasks.push(listener.close());\n            }\n        }\n        await Promise.all(tasks);\n        this.log('all listeners closed');\n        for (const key of this.listeners.keys()) {\n            this.listeners.set(key, []);\n        }\n        this.started = false;\n    }\n    /**\n     * Dials the given Multiaddr over it's supported transport\n     */\n    async dial(ma, options) {\n        const transport = this.dialTransportForMultiaddr(ma);\n        if (transport == null) {\n            throw new CodeError(`No transport available for address ${String(ma)}`, codes.ERR_TRANSPORT_UNAVAILABLE);\n        }\n        options?.onProgress?.(new CustomProgressEvent('transport-manager:selected-transport', transport[Symbol.toStringTag]));\n        try {\n            // @ts-expect-error the transport has a typed onProgress option but we\n            // can't predict what transport implementation we selected so all we can\n            // do is pass the onProgress handler in and hope for the best\n            return await transport.dial(ma, {\n                ...options,\n                upgrader: this.components.upgrader\n            });\n        }\n        catch (err) {\n            if (err.code == null) {\n                err.code = codes.ERR_TRANSPORT_DIAL_FAILED;\n            }\n            throw err;\n        }\n    }\n    /**\n     * Returns all Multiaddr's the listeners are using\n     */\n    getAddrs() {\n        let addrs = [];\n        for (const listeners of this.listeners.values()) {\n            for (const listener of listeners) {\n                addrs = [...addrs, ...listener.getAddrs()];\n            }\n        }\n        return addrs;\n    }\n    /**\n     * Returns all the transports instances\n     */\n    getTransports() {\n        return Array.of(...this.transports.values());\n    }\n    /**\n     * Returns all the listener instances\n     */\n    getListeners() {\n        return Array.of(...this.listeners.values()).flat();\n    }\n    /**\n     * Finds a transport that matches the given Multiaddr\n     */\n    dialTransportForMultiaddr(ma) {\n        for (const transport of this.transports.values()) {\n            const addrs = transport.dialFilter([ma]);\n            if (addrs.length > 0) {\n                return transport;\n            }\n        }\n    }\n    /**\n     * Finds a transport that matches the given Multiaddr\n     */\n    listenTransportForMultiaddr(ma) {\n        for (const transport of this.transports.values()) {\n            const addrs = transport.listenFilter([ma]);\n            if (addrs.length > 0) {\n                return transport;\n            }\n        }\n    }\n    /**\n     * Starts listeners for each listen Multiaddr\n     */\n    async listen(addrs) {\n        if (!this.isStarted()) {\n            throw new CodeError('Not started', codes.ERR_NODE_NOT_STARTED);\n        }\n        if (addrs == null || addrs.length === 0) {\n            this.log('no addresses were provided for listening, this node is dial only');\n            return;\n        }\n        const couldNotListen = [];\n        for (const [key, transport] of this.transports.entries()) {\n            const supportedAddrs = transport.listenFilter(addrs);\n            const tasks = [];\n            // For each supported multiaddr, create a listener\n            for (const addr of supportedAddrs) {\n                this.log('creating listener for %s on %a', key, addr);\n                const listener = transport.createListener({\n                    upgrader: this.components.upgrader\n                });\n                let listeners = this.listeners.get(key) ?? [];\n                if (listeners == null) {\n                    listeners = [];\n                    this.listeners.set(key, listeners);\n                }\n                listeners.push(listener);\n                // Track listen/close events\n                listener.addEventListener('listening', () => {\n                    this.components.events.safeDispatchEvent('transport:listening', {\n                        detail: listener\n                    });\n                });\n                listener.addEventListener('close', () => {\n                    const index = listeners.findIndex(l => l === listener);\n                    // remove the listener\n                    listeners.splice(index, 1);\n                    this.components.events.safeDispatchEvent('transport:close', {\n                        detail: listener\n                    });\n                });\n                // We need to attempt to listen on everything\n                tasks.push(listener.listen(addr));\n            }\n            // Keep track of transports we had no addresses for\n            if (tasks.length === 0) {\n                couldNotListen.push(key);\n                continue;\n            }\n            const results = await Promise.allSettled(tasks);\n            // If we are listening on at least 1 address, succeed.\n            // TODO: we should look at adding a retry (`p-retry`) here to better support\n            // listening on remote addresses as they may be offline. We could then potentially\n            // just wait for any (`p-any`) listener to succeed on each transport before returning\n            const isListening = results.find(r => r.status === 'fulfilled');\n            if ((isListening == null) && this.faultTolerance !== FaultTolerance.NO_FATAL) {\n                throw new CodeError(`Transport (${key}) could not listen on any available address`, codes.ERR_NO_VALID_ADDRESSES);\n            }\n        }\n        // If no transports were able to listen, throw an error. This likely\n        // means we were given addresses we do not have transports for\n        if (couldNotListen.length === this.transports.size) {\n            const message = `no valid addresses were provided for transports [${couldNotListen.join(', ')}]`;\n            if (this.faultTolerance === FaultTolerance.FATAL_ALL) {\n                throw new CodeError(message, codes.ERR_NO_VALID_ADDRESSES);\n            }\n            this.log(`libp2p in dial mode only: ${message}`);\n        }\n    }\n    /**\n     * Removes the given transport from the manager.\n     * If a transport has any running listeners, they will be closed.\n     */\n    async remove(key) {\n        const listeners = this.listeners.get(key) ?? [];\n        this.log.trace('removing transport %s', key);\n        // Close any running listeners\n        const tasks = [];\n        this.log.trace('closing listeners for %s', key);\n        while (listeners.length > 0) {\n            const listener = listeners.pop();\n            if (listener == null) {\n                continue;\n            }\n            tasks.push(listener.close());\n        }\n        await Promise.all(tasks);\n        this.transports.delete(key);\n        this.listeners.delete(key);\n    }\n    /**\n     * Removes all transports from the manager.\n     * If any listeners are running, they will be closed.\n     *\n     * @async\n     */\n    async removeAll() {\n        const tasks = [];\n        for (const key of this.transports.keys()) {\n            tasks.push(this.remove(key));\n        }\n        await Promise.all(tasks);\n    }\n}\n//# sourceMappingURL=transport-manager.js.map","export const PROTOCOL_ID = '/multistream/1.0.0';\n// Conforming to go-libp2p\n// See https://github.com/multiformats/go-multistream/blob/master/multistream.go#L297\nexport const MAX_PROTOCOL_LENGTH = 1024;\n//# sourceMappingURL=constants.js.map","import { CodeError } from '@libp2p/interface';\nimport {} from 'uint8arraylist';\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string';\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string';\nconst NewLine = uint8ArrayFromString('\\n');\n/**\n * `write` encodes and writes a single buffer\n */\nexport async function write(writer, buffer, options) {\n    await writer.write(buffer, options);\n}\n/**\n * `writeAll` behaves like `write`, except it encodes an array of items as a single write\n */\nexport async function writeAll(writer, buffers, options) {\n    await writer.writeV(buffers, options);\n}\n/**\n * Read a length-prefixed buffer from the passed stream, stripping the final newline character\n */\nexport async function read(reader, options) {\n    const buf = await reader.read(options);\n    if (buf.byteLength === 0 || buf.get(buf.byteLength - 1) !== NewLine[0]) {\n        options.log.error('Invalid mss message - missing newline', buf);\n        throw new CodeError('missing newline', 'ERR_INVALID_MULTISTREAM_SELECT_MESSAGE');\n    }\n    return buf.sublist(0, -1); // Remove newline\n}\n/**\n * Read a length-prefixed string from the passed stream, stripping the final newline character\n */\nexport async function readString(reader, options) {\n    const buf = await read(reader, options);\n    return uint8ArrayToString(buf.subarray());\n}\n//# sourceMappingURL=multistream.js.map","import { encode } from 'it-length-prefixed';\nimport { lpStream } from 'it-length-prefixed-stream';\nimport { Uint8ArrayList } from 'uint8arraylist';\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string';\nimport { MAX_PROTOCOL_LENGTH, PROTOCOL_ID } from './constants.js';\nimport * as multistream from './multistream.js';\n/**\n * Handle multistream protocol selections for the given list of protocols.\n *\n * Note that after a protocol is handled `listener` can no longer be used.\n *\n * @param stream - A duplex iterable stream to listen on\n * @param protocols - A list of protocols (or single protocol) that this listener is able to speak.\n * @param options - an options object containing an AbortSignal and an optional boolean `writeBytes` - if this is true, `Uint8Array`s will be written into `duplex`, otherwise `Uint8ArrayList`s will\n * @returns A stream for the selected protocol and the protocol that was selected from the list of protocols provided to `select`\n * @example\n *\n * ```TypeScript\n * import { pipe } from 'it-pipe'\n * import * as mss from '@libp2p/multistream-select'\n * import { Mplex } from '@libp2p/mplex'\n *\n * const muxer = new Mplex({\n *   async onStream (muxedStream) {\n *   // mss.handle(handledProtocols)\n *   // Returns selected stream and protocol\n *   const { stream, protocol } = await mss.handle(muxedStream, [\n *     '/ipfs-dht/1.0.0',\n *     '/ipfs-bitswap/1.0.0'\n *   ])\n *\n *   // Typically here we'd call the handler function that was registered in\n *   // libp2p for the given protocol:\n *   // e.g. handlers[protocol].handler(stream)\n *   //\n *   // If protocol was /ipfs-dht/1.0.0 it might do something like this:\n *   // try {\n *   //   await pipe(\n *   //     dhtStream,\n *   //     source => (async function * () {\n *   //       for await (const chunk of source)\n *   //         // Incoming DHT data -> process and yield to respond\n *   //     })(),\n *   //     dhtStream\n *   //   )\n *   // } catch (err) {\n *   //   // Error in stream\n *   // }\n *   }\n * })\n * ```\n */\nexport async function handle(stream, protocols, options) {\n    protocols = Array.isArray(protocols) ? protocols : [protocols];\n    options.log.trace('handle: available protocols %s', protocols);\n    const lp = lpStream(stream, {\n        ...options,\n        maxDataLength: MAX_PROTOCOL_LENGTH,\n        maxLengthLength: 2 // 2 bytes is enough to length-prefix MAX_PROTOCOL_LENGTH\n    });\n    while (true) {\n        options.log.trace('handle: reading incoming string');\n        const protocol = await multistream.readString(lp, options);\n        options.log.trace('handle: read \"%s\"', protocol);\n        if (protocol === PROTOCOL_ID) {\n            options.log.trace('handle: respond with \"%s\" for \"%s\"', PROTOCOL_ID, protocol);\n            await multistream.write(lp, uint8ArrayFromString(`${PROTOCOL_ID}\\n`), options);\n            options.log.trace('handle: responded with \"%s\" for \"%s\"', PROTOCOL_ID, protocol);\n            continue;\n        }\n        if (protocols.includes(protocol)) {\n            options.log.trace('handle: respond with \"%s\" for \"%s\"', protocol, protocol);\n            await multistream.write(lp, uint8ArrayFromString(`${protocol}\\n`), options);\n            options.log.trace('handle: responded with \"%s\" for \"%s\"', protocol, protocol);\n            return { stream: lp.unwrap(), protocol };\n        }\n        if (protocol === 'ls') {\n            // <varint-msg-len><varint-proto-name-len><proto-name>\\n<varint-proto-name-len><proto-name>\\n\\n\n            const protos = new Uint8ArrayList(...protocols.map(p => encode.single(uint8ArrayFromString(`${p}\\n`))), uint8ArrayFromString('\\n'));\n            options.log.trace('handle: respond with \"%s\" for %s', protocols, protocol);\n            await multistream.write(lp, protos, options);\n            options.log.trace('handle: responded with \"%s\" for %s', protocols, protocol);\n            continue;\n        }\n        options.log('handle: respond with \"na\" for \"%s\"', protocol);\n        await multistream.write(lp, uint8ArrayFromString('na\\n'), options);\n        options.log('handle: responded with \"na\" for \"%s\"', protocol);\n    }\n}\n//# sourceMappingURL=handle.js.map","import { CodeError } from '@libp2p/interface';\nimport { lpStream } from 'it-length-prefixed-stream';\nimport pDefer from 'p-defer';\nimport { raceSignal } from 'race-signal';\nimport * as varint from 'uint8-varint';\nimport { Uint8ArrayList } from 'uint8arraylist';\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string';\nimport { MAX_PROTOCOL_LENGTH } from './constants.js';\nimport * as multistream from './multistream.js';\nimport { PROTOCOL_ID } from './index.js';\n/**\n * Negotiate a protocol to use from a list of protocols.\n *\n * @param stream - A duplex iterable stream to dial on\n * @param protocols - A list of protocols (or single protocol) to negotiate with. Protocols are attempted in order until a match is made.\n * @param options - An options object containing an AbortSignal and an optional boolean `writeBytes` - if this is true, `Uint8Array`s will be written into `duplex`, otherwise `Uint8ArrayList`s will\n * @returns A stream for the selected protocol and the protocol that was selected from the list of protocols provided to `select`.\n * @example\n *\n * ```TypeScript\n * import { pipe } from 'it-pipe'\n * import * as mss from '@libp2p/multistream-select'\n * import { Mplex } from '@libp2p/mplex'\n *\n * const muxer = new Mplex()\n * const muxedStream = muxer.newStream()\n *\n * // mss.select(protocol(s))\n * // Select from one of the passed protocols (in priority order)\n * // Returns selected stream and protocol\n * const { stream: dhtStream, protocol } = await mss.select(muxedStream, [\n *   // This might just be different versions of DHT, but could be different impls\n *   '/ipfs-dht/2.0.0', // Most of the time this will probably just be one item.\n *   '/ipfs-dht/1.0.0'\n * ])\n *\n * // Typically this stream will be passed back to the caller of libp2p.dialProtocol\n * //\n * // ...it might then do something like this:\n * // try {\n * //   await pipe(\n * //     [uint8ArrayFromString('Some DHT data')]\n * //     dhtStream,\n * //     async source => {\n * //       for await (const chunk of source)\n * //         // DHT response data\n * //     }\n * //   )\n * // } catch (err) {\n * //   // Error in stream\n * // }\n * ```\n */\nexport async function select(stream, protocols, options) {\n    protocols = Array.isArray(protocols) ? [...protocols] : [protocols];\n    if (protocols.length === 1 && options.negotiateFully === false) {\n        return optimisticSelect(stream, protocols[0], options);\n    }\n    const lp = lpStream(stream, {\n        ...options,\n        maxDataLength: MAX_PROTOCOL_LENGTH\n    });\n    const protocol = protocols.shift();\n    if (protocol == null) {\n        throw new Error('At least one protocol must be specified');\n    }\n    options.log.trace('select: write [\"%s\", \"%s\"]', PROTOCOL_ID, protocol);\n    const p1 = uint8ArrayFromString(`${PROTOCOL_ID}\\n`);\n    const p2 = uint8ArrayFromString(`${protocol}\\n`);\n    await multistream.writeAll(lp, [p1, p2], options);\n    options.log.trace('select: reading multistream-select header');\n    let response = await multistream.readString(lp, options);\n    options.log.trace('select: read \"%s\"', response);\n    // Read the protocol response if we got the protocolId in return\n    if (response === PROTOCOL_ID) {\n        options.log.trace('select: reading protocol response');\n        response = await multistream.readString(lp, options);\n        options.log.trace('select: read \"%s\"', response);\n    }\n    // We're done\n    if (response === protocol) {\n        return { stream: lp.unwrap(), protocol };\n    }\n    // We haven't gotten a valid ack, try the other protocols\n    for (const protocol of protocols) {\n        options.log.trace('select: write \"%s\"', protocol);\n        await multistream.write(lp, uint8ArrayFromString(`${protocol}\\n`), options);\n        options.log.trace('select: reading protocol response');\n        const response = await multistream.readString(lp, options);\n        options.log.trace('select: read \"%s\" for \"%s\"', response, protocol);\n        if (response === protocol) {\n            return { stream: lp.unwrap(), protocol };\n        }\n    }\n    throw new CodeError('protocol selection failed', 'ERR_UNSUPPORTED_PROTOCOL');\n}\n/**\n * Optimistically negotiates a protocol.\n *\n * It *does not* block writes waiting for the other end to respond. Instead, it\n * simply assumes the negotiation went successfully and starts writing data.\n *\n * Use when it is known that the receiver supports the desired protocol.\n */\nfunction optimisticSelect(stream, protocol, options) {\n    const originalSink = stream.sink.bind(stream);\n    const originalSource = stream.source;\n    let negotiated = false;\n    let negotiating = false;\n    const doneNegotiating = pDefer();\n    let sentProtocol = false;\n    let sendingProtocol = false;\n    const doneSendingProtocol = pDefer();\n    let readProtocol = false;\n    let readingProtocol = false;\n    const doneReadingProtocol = pDefer();\n    const lp = lpStream({\n        sink: originalSink,\n        source: originalSource\n    }, {\n        ...options,\n        maxDataLength: MAX_PROTOCOL_LENGTH\n    });\n    stream.sink = async (source) => {\n        const { sink } = lp.unwrap();\n        await sink(async function* () {\n            let sentData = false;\n            for await (const buf of source) {\n                // started reading before the source yielded, wait for protocol send\n                if (sendingProtocol) {\n                    await doneSendingProtocol.promise;\n                }\n                // writing before reading, send the protocol and the first chunk of data\n                if (!sentProtocol) {\n                    sendingProtocol = true;\n                    options.log.trace('optimistic: write [\"%s\", \"%s\", data(%d)] in sink', PROTOCOL_ID, protocol, buf.byteLength);\n                    const protocolString = `${protocol}\\n`;\n                    // send protocols in first chunk of data written to transport\n                    yield new Uint8ArrayList(Uint8Array.from([19]), // length of PROTOCOL_ID plus newline\n                    uint8ArrayFromString(`${PROTOCOL_ID}\\n`), varint.encode(protocolString.length), uint8ArrayFromString(protocolString), buf).subarray();\n                    options.log.trace('optimistic: wrote [\"%s\", \"%s\", data(%d)] in sink', PROTOCOL_ID, protocol, buf.byteLength);\n                    sentProtocol = true;\n                    sendingProtocol = false;\n                    doneSendingProtocol.resolve();\n                    // read the negotiation response but don't block more sending\n                    negotiate()\n                        .catch(err => {\n                        options.log.error('could not finish optimistic protocol negotiation of %s', protocol, err);\n                    });\n                }\n                else {\n                    yield buf;\n                }\n                sentData = true;\n            }\n            // special case - the source passed to the sink has ended but we didn't\n            // negotiated the protocol yet so do it now\n            if (!sentData) {\n                await negotiate();\n            }\n        }());\n    };\n    async function negotiate() {\n        if (negotiating) {\n            options.log.trace('optimistic: already negotiating %s stream', protocol);\n            await doneNegotiating.promise;\n            return;\n        }\n        negotiating = true;\n        try {\n            // we haven't sent the protocol yet, send it now\n            if (!sentProtocol) {\n                options.log.trace('optimistic: doing send protocol for %s stream', protocol);\n                await doSendProtocol();\n            }\n            // if we haven't read the protocol response yet, do it now\n            if (!readProtocol) {\n                options.log.trace('optimistic: doing read protocol for %s stream', protocol);\n                await doReadProtocol();\n            }\n        }\n        finally {\n            negotiating = false;\n            negotiated = true;\n            doneNegotiating.resolve();\n        }\n    }\n    async function doSendProtocol() {\n        if (sendingProtocol) {\n            await doneSendingProtocol.promise;\n            return;\n        }\n        sendingProtocol = true;\n        try {\n            options.log.trace('optimistic: write [\"%s\", \"%s\", data] in source', PROTOCOL_ID, protocol);\n            await lp.writeV([\n                uint8ArrayFromString(`${PROTOCOL_ID}\\n`),\n                uint8ArrayFromString(`${protocol}\\n`)\n            ]);\n            options.log.trace('optimistic: wrote [\"%s\", \"%s\", data] in source', PROTOCOL_ID, protocol);\n        }\n        finally {\n            sentProtocol = true;\n            sendingProtocol = false;\n            doneSendingProtocol.resolve();\n        }\n    }\n    async function doReadProtocol() {\n        if (readingProtocol) {\n            await doneReadingProtocol.promise;\n            return;\n        }\n        readingProtocol = true;\n        try {\n            options.log.trace('optimistic: reading multistream select header');\n            let response = await multistream.readString(lp, options);\n            options.log.trace('optimistic: read multistream select header \"%s\"', response);\n            if (response === PROTOCOL_ID) {\n                response = await multistream.readString(lp, options);\n            }\n            options.log.trace('optimistic: read protocol \"%s\", expecting \"%s\"', response, protocol);\n            if (response !== protocol) {\n                throw new CodeError('protocol selection failed', 'ERR_UNSUPPORTED_PROTOCOL');\n            }\n        }\n        finally {\n            readProtocol = true;\n            readingProtocol = false;\n            doneReadingProtocol.resolve();\n        }\n    }\n    stream.source = (async function* () {\n        // make sure we've done protocol negotiation before we read stream data\n        await negotiate();\n        options.log.trace('optimistic: reading data from \"%s\" stream', protocol);\n        yield* lp.unwrap().source;\n    })();\n    if (stream.closeRead != null) {\n        const originalCloseRead = stream.closeRead.bind(stream);\n        stream.closeRead = async (opts) => {\n            // we need to read & write to negotiate the protocol so ensure we've done\n            // this before closing the readable end of the stream\n            if (!negotiated) {\n                await negotiate().catch(err => {\n                    options.log.error('could not negotiate protocol before close read', err);\n                });\n            }\n            // protocol has been negotiated, ok to close the readable end\n            await originalCloseRead(opts);\n        };\n    }\n    if (stream.closeWrite != null) {\n        const originalCloseWrite = stream.closeWrite.bind(stream);\n        stream.closeWrite = async (opts) => {\n            // we need to read & write to negotiate the protocol so ensure we've done\n            // this before closing the writable end of the stream\n            if (!negotiated) {\n                await negotiate().catch(err => {\n                    options.log.error('could not negotiate protocol before close write', err);\n                });\n            }\n            // protocol has been negotiated, ok to close the writable end\n            await originalCloseWrite(opts);\n        };\n    }\n    if (stream.close != null) {\n        const originalClose = stream.close.bind(stream);\n        stream.close = async (opts) => {\n            // if we are in the process of negotiation, let it finish before closing\n            // because we may have unsent early data\n            const tasks = [];\n            if (sendingProtocol) {\n                tasks.push(doneSendingProtocol.promise);\n            }\n            if (readingProtocol) {\n                tasks.push(doneReadingProtocol.promise);\n            }\n            if (tasks.length > 0) {\n                // let the in-flight protocol negotiation finish gracefully\n                await raceSignal(Promise.all(tasks), opts?.signal);\n            }\n            else {\n                // no protocol negotiation attempt has occurred so don't start one\n                negotiated = true;\n                negotiating = false;\n                doneNegotiating.resolve();\n            }\n            // protocol has been negotiated, ok to close the writable end\n            await originalClose(opts);\n        };\n    }\n    return {\n        stream,\n        protocol\n    };\n}\n//# sourceMappingURL=select.js.map","export const connectionSymbol = Symbol.for('@libp2p/connection');\nexport function isConnection(other) {\n    return other != null && Boolean(other[connectionSymbol]);\n}\n//# sourceMappingURL=index.js.map","import { connectionSymbol, CodeError, setMaxListeners } from '@libp2p/interface';\nconst CLOSE_TIMEOUT = 500;\n/**\n * An implementation of the js-libp2p connection.\n * Any libp2p transport should use an upgrader to return this connection.\n */\nexport class ConnectionImpl {\n    /**\n     * Connection identifier.\n     */\n    id;\n    /**\n     * Observed multiaddr of the remote peer\n     */\n    remoteAddr;\n    /**\n     * Remote peer id\n     */\n    remotePeer;\n    direction;\n    timeline;\n    multiplexer;\n    encryption;\n    status;\n    transient;\n    log;\n    /**\n     * User provided tags\n     *\n     */\n    tags;\n    /**\n     * Reference to the new stream function of the multiplexer\n     */\n    _newStream;\n    /**\n     * Reference to the close function of the raw connection\n     */\n    _close;\n    _abort;\n    /**\n     * Reference to the getStreams function of the muxer\n     */\n    _getStreams;\n    /**\n     * An implementation of the js-libp2p connection.\n     * Any libp2p transport should use an upgrader to return this connection.\n     */\n    constructor(init) {\n        const { remoteAddr, remotePeer, newStream, close, abort, getStreams } = init;\n        this.id = `${(parseInt(String(Math.random() * 1e9))).toString(36)}${Date.now()}`;\n        this.remoteAddr = remoteAddr;\n        this.remotePeer = remotePeer;\n        this.direction = init.direction;\n        this.status = 'open';\n        this.timeline = init.timeline;\n        this.multiplexer = init.multiplexer;\n        this.encryption = init.encryption;\n        this.transient = init.transient ?? false;\n        this.log = init.logger.forComponent(`libp2p:connection:${this.direction}:${this.id}`);\n        if (this.remoteAddr.getPeerId() == null) {\n            this.remoteAddr = this.remoteAddr.encapsulate(`/p2p/${this.remotePeer}`);\n        }\n        this._newStream = newStream;\n        this._close = close;\n        this._abort = abort;\n        this._getStreams = getStreams;\n        this.tags = [];\n    }\n    [Symbol.toStringTag] = 'Connection';\n    [connectionSymbol] = true;\n    /**\n     * Get all the streams of the muxer\n     */\n    get streams() {\n        return this._getStreams();\n    }\n    /**\n     * Create a new stream from this connection\n     */\n    async newStream(protocols, options) {\n        if (this.status === 'closing') {\n            throw new CodeError('the connection is being closed', 'ERR_CONNECTION_BEING_CLOSED');\n        }\n        if (this.status === 'closed') {\n            throw new CodeError('the connection is closed', 'ERR_CONNECTION_CLOSED');\n        }\n        if (!Array.isArray(protocols)) {\n            protocols = [protocols];\n        }\n        if (this.transient && options?.runOnTransientConnection !== true) {\n            throw new CodeError('Cannot open protocol stream on transient connection', 'ERR_TRANSIENT_CONNECTION');\n        }\n        const stream = await this._newStream(protocols, options);\n        stream.direction = 'outbound';\n        return stream;\n    }\n    /**\n     * Close the connection\n     */\n    async close(options = {}) {\n        if (this.status === 'closed' || this.status === 'closing') {\n            return;\n        }\n        this.log('closing connection to %a', this.remoteAddr);\n        this.status = 'closing';\n        if (options.signal == null) {\n            const signal = AbortSignal.timeout(CLOSE_TIMEOUT);\n            setMaxListeners(Infinity, signal);\n            options = {\n                ...options,\n                signal\n            };\n        }\n        try {\n            this.log.trace('closing all streams');\n            // close all streams gracefully - this can throw if we're not multiplexed\n            await Promise.all(this.streams.map(async (s) => s.close(options)));\n            this.log.trace('closing underlying transport');\n            // close raw connection\n            await this._close(options);\n            this.log.trace('updating timeline with close time');\n            this.status = 'closed';\n            this.timeline.close = Date.now();\n        }\n        catch (err) {\n            this.log.error('error encountered during graceful close of connection to %a', this.remoteAddr, err);\n            this.abort(err);\n        }\n    }\n    abort(err) {\n        this.log.error('aborting connection to %a due to error', this.remoteAddr, err);\n        this.status = 'closing';\n        this.streams.forEach(s => { s.abort(err); });\n        this.log.error('all streams aborted', this.streams.length);\n        // Abort raw connection\n        this._abort(err);\n        this.timeline.close = Date.now();\n        this.status = 'closed';\n    }\n}\nexport function createConnection(init) {\n    return new ConnectionImpl(init);\n}\n//# sourceMappingURL=index.js.map","import { CodeError, ERR_TIMEOUT, setMaxListeners } from '@libp2p/interface';\nimport * as mss from '@libp2p/multistream-select';\nimport { peerIdFromString } from '@libp2p/peer-id';\nimport { CustomProgressEvent } from 'progress-events';\nimport { createConnection } from './connection/index.js';\nimport { INBOUND_UPGRADE_TIMEOUT } from './connection-manager/constants.js';\nimport { codes } from './errors.js';\nimport { DEFAULT_MAX_INBOUND_STREAMS, DEFAULT_MAX_OUTBOUND_STREAMS } from './registrar.js';\nconst DEFAULT_PROTOCOL_SELECT_TIMEOUT = 30000;\nfunction findIncomingStreamLimit(protocol, registrar) {\n    try {\n        const { options } = registrar.getHandler(protocol);\n        return options.maxInboundStreams;\n    }\n    catch (err) {\n        if (err.code !== codes.ERR_NO_HANDLER_FOR_PROTOCOL) {\n            throw err;\n        }\n    }\n    return DEFAULT_MAX_INBOUND_STREAMS;\n}\nfunction findOutgoingStreamLimit(protocol, registrar, options = {}) {\n    try {\n        const { options } = registrar.getHandler(protocol);\n        if (options.maxOutboundStreams != null) {\n            return options.maxOutboundStreams;\n        }\n    }\n    catch (err) {\n        if (err.code !== codes.ERR_NO_HANDLER_FOR_PROTOCOL) {\n            throw err;\n        }\n    }\n    return options.maxOutboundStreams ?? DEFAULT_MAX_OUTBOUND_STREAMS;\n}\nfunction countStreams(protocol, direction, connection) {\n    let streamCount = 0;\n    connection.streams.forEach(stream => {\n        if (stream.direction === direction && stream.protocol === protocol) {\n            streamCount++;\n        }\n    });\n    return streamCount;\n}\nexport class DefaultUpgrader {\n    components;\n    connectionEncryption;\n    muxers;\n    inboundUpgradeTimeout;\n    events;\n    constructor(components, init) {\n        this.components = components;\n        this.connectionEncryption = new Map();\n        init.connectionEncryption.forEach(encrypter => {\n            this.connectionEncryption.set(encrypter.protocol, encrypter);\n        });\n        this.muxers = new Map();\n        init.muxers.forEach(muxer => {\n            this.muxers.set(muxer.protocol, muxer);\n        });\n        this.inboundUpgradeTimeout = init.inboundUpgradeTimeout ?? INBOUND_UPGRADE_TIMEOUT;\n        this.events = components.events;\n    }\n    [Symbol.toStringTag] = '@libp2p/upgrader';\n    async shouldBlockConnection(remotePeer, maConn, connectionType) {\n        const connectionGater = this.components.connectionGater[connectionType];\n        if (connectionGater !== undefined) {\n            if (await connectionGater(remotePeer, maConn)) {\n                throw new CodeError(`The multiaddr connection is blocked by gater.${connectionType}`, codes.ERR_CONNECTION_INTERCEPTED);\n            }\n        }\n    }\n    /**\n     * Upgrades an inbound connection\n     */\n    async upgradeInbound(maConn, opts) {\n        const accept = await this.components.connectionManager.acceptIncomingConnection(maConn);\n        if (!accept) {\n            throw new CodeError('connection denied', codes.ERR_CONNECTION_DENIED);\n        }\n        let encryptedConn;\n        let remotePeer;\n        let upgradedConn;\n        let muxerFactory;\n        let cryptoProtocol;\n        const signal = AbortSignal.timeout(this.inboundUpgradeTimeout);\n        const onAbort = () => {\n            maConn.abort(new CodeError('inbound upgrade timeout', ERR_TIMEOUT));\n        };\n        signal.addEventListener('abort', onAbort, { once: true });\n        setMaxListeners(Infinity, signal);\n        try {\n            if ((await this.components.connectionGater.denyInboundConnection?.(maConn)) === true) {\n                throw new CodeError('The multiaddr connection is blocked by gater.acceptConnection', codes.ERR_CONNECTION_INTERCEPTED);\n            }\n            this.components.metrics?.trackMultiaddrConnection(maConn);\n            maConn.log('starting the inbound connection upgrade');\n            // Protect\n            let protectedConn = maConn;\n            if (opts?.skipProtection !== true) {\n                const protector = this.components.connectionProtector;\n                if (protector != null) {\n                    maConn.log('protecting the inbound connection');\n                    protectedConn = await protector.protect(maConn);\n                }\n            }\n            try {\n                // Encrypt the connection\n                encryptedConn = protectedConn;\n                if (opts?.skipEncryption !== true) {\n                    opts?.onProgress?.(new CustomProgressEvent('upgrader:encrypt-inbound-connection'));\n                    ({\n                        conn: encryptedConn,\n                        remotePeer,\n                        protocol: cryptoProtocol\n                    } = await this._encryptInbound(protectedConn));\n                    const maConn = {\n                        ...protectedConn,\n                        ...encryptedConn\n                    };\n                    await this.shouldBlockConnection(remotePeer, maConn, 'denyInboundEncryptedConnection');\n                }\n                else {\n                    const idStr = maConn.remoteAddr.getPeerId();\n                    if (idStr == null) {\n                        throw new CodeError('inbound connection that skipped encryption must have a peer id', codes.ERR_INVALID_MULTIADDR);\n                    }\n                    const remotePeerId = peerIdFromString(idStr);\n                    cryptoProtocol = 'native';\n                    remotePeer = remotePeerId;\n                }\n                upgradedConn = encryptedConn;\n                if (opts?.muxerFactory != null) {\n                    muxerFactory = opts.muxerFactory;\n                }\n                else if (this.muxers.size > 0) {\n                    opts?.onProgress?.(new CustomProgressEvent('upgrader:multiplex-inbound-connection'));\n                    // Multiplex the connection\n                    const multiplexed = await this._multiplexInbound({\n                        ...protectedConn,\n                        ...encryptedConn\n                    }, this.muxers);\n                    muxerFactory = multiplexed.muxerFactory;\n                    upgradedConn = multiplexed.stream;\n                }\n            }\n            catch (err) {\n                maConn.log.error('failed to upgrade inbound connection', err);\n                throw err;\n            }\n            await this.shouldBlockConnection(remotePeer, maConn, 'denyInboundUpgradedConnection');\n            maConn.log('successfully upgraded inbound connection');\n            return this._createConnection({\n                cryptoProtocol,\n                direction: 'inbound',\n                maConn,\n                upgradedConn,\n                muxerFactory,\n                remotePeer,\n                transient: opts?.transient\n            });\n        }\n        finally {\n            signal.removeEventListener('abort', onAbort);\n            this.components.connectionManager.afterUpgradeInbound();\n        }\n    }\n    /**\n     * Upgrades an outbound connection\n     */\n    async upgradeOutbound(maConn, opts) {\n        const idStr = maConn.remoteAddr.getPeerId();\n        let remotePeerId;\n        if (idStr != null) {\n            remotePeerId = peerIdFromString(idStr);\n            await this.shouldBlockConnection(remotePeerId, maConn, 'denyOutboundConnection');\n        }\n        let encryptedConn;\n        let remotePeer;\n        let upgradedConn;\n        let cryptoProtocol;\n        let muxerFactory;\n        this.components.metrics?.trackMultiaddrConnection(maConn);\n        maConn.log('starting the outbound connection upgrade');\n        // If the transport natively supports encryption, skip connection\n        // protector and encryption\n        // Protect\n        let protectedConn = maConn;\n        if (opts?.skipProtection !== true) {\n            const protector = this.components.connectionProtector;\n            if (protector != null) {\n                protectedConn = await protector.protect(maConn);\n            }\n        }\n        try {\n            // Encrypt the connection\n            encryptedConn = protectedConn;\n            if (opts?.skipEncryption !== true) {\n                ({\n                    conn: encryptedConn,\n                    remotePeer,\n                    protocol: cryptoProtocol\n                } = await this._encryptOutbound(protectedConn, remotePeerId));\n                const maConn = {\n                    ...protectedConn,\n                    ...encryptedConn\n                };\n                await this.shouldBlockConnection(remotePeer, maConn, 'denyOutboundEncryptedConnection');\n            }\n            else {\n                if (remotePeerId == null) {\n                    throw new CodeError('Encryption was skipped but no peer id was passed', codes.ERR_INVALID_PEER);\n                }\n                cryptoProtocol = 'native';\n                remotePeer = remotePeerId;\n            }\n            upgradedConn = encryptedConn;\n            if (opts?.muxerFactory != null) {\n                muxerFactory = opts.muxerFactory;\n            }\n            else if (this.muxers.size > 0) {\n                // Multiplex the connection\n                const multiplexed = await this._multiplexOutbound({\n                    ...protectedConn,\n                    ...encryptedConn\n                }, this.muxers);\n                muxerFactory = multiplexed.muxerFactory;\n                upgradedConn = multiplexed.stream;\n            }\n        }\n        catch (err) {\n            maConn.log.error('failed to upgrade outbound connection', err);\n            await maConn.close(err);\n            throw err;\n        }\n        await this.shouldBlockConnection(remotePeer, maConn, 'denyOutboundUpgradedConnection');\n        maConn.log('successfully upgraded outbound connection');\n        return this._createConnection({\n            cryptoProtocol,\n            direction: 'outbound',\n            maConn,\n            upgradedConn,\n            muxerFactory,\n            remotePeer,\n            transient: opts?.transient\n        });\n    }\n    /**\n     * A convenience method for generating a new `Connection`\n     */\n    _createConnection(opts) {\n        const { cryptoProtocol, direction, maConn, upgradedConn, remotePeer, muxerFactory, transient } = opts;\n        let muxer;\n        let newStream;\n        let connection; // eslint-disable-line prefer-const\n        if (muxerFactory != null) {\n            // Create the muxer\n            muxer = muxerFactory.createStreamMuxer({\n                direction,\n                // Run anytime a remote stream is created\n                onIncomingStream: muxedStream => {\n                    if (connection == null) {\n                        return;\n                    }\n                    void Promise.resolve()\n                        .then(async () => {\n                        const protocols = this.components.registrar.getProtocols();\n                        const { stream, protocol } = await mss.handle(muxedStream, protocols, {\n                            log: muxedStream.log,\n                            yieldBytes: false\n                        });\n                        if (connection == null) {\n                            return;\n                        }\n                        connection.log('incoming stream opened on %s', protocol);\n                        const incomingLimit = findIncomingStreamLimit(protocol, this.components.registrar);\n                        const streamCount = countStreams(protocol, 'inbound', connection);\n                        if (streamCount === incomingLimit) {\n                            const err = new CodeError(`Too many inbound protocol streams for protocol \"${protocol}\" - limit ${incomingLimit}`, codes.ERR_TOO_MANY_INBOUND_PROTOCOL_STREAMS);\n                            muxedStream.abort(err);\n                            throw err;\n                        }\n                        // after the handshake the returned stream can have early data so override\n                        // the souce/sink\n                        muxedStream.source = stream.source;\n                        muxedStream.sink = stream.sink;\n                        muxedStream.protocol = protocol;\n                        // allow closing the write end of a not-yet-negotiated stream\n                        if (stream.closeWrite != null) {\n                            muxedStream.closeWrite = stream.closeWrite;\n                        }\n                        // allow closing the read end of a not-yet-negotiated stream\n                        if (stream.closeRead != null) {\n                            muxedStream.closeRead = stream.closeRead;\n                        }\n                        // make sure we don't try to negotiate a stream we are closing\n                        if (stream.close != null) {\n                            muxedStream.close = stream.close;\n                        }\n                        // If a protocol stream has been successfully negotiated and is to be passed to the application,\n                        // the peerstore should ensure that the peer is registered with that protocol\n                        await this.components.peerStore.merge(remotePeer, {\n                            protocols: [protocol]\n                        });\n                        this.components.metrics?.trackProtocolStream(muxedStream, connection);\n                        this._onStream({ connection, stream: muxedStream, protocol });\n                    })\n                        .catch(async (err) => {\n                        connection.log.error('error handling incoming stream id %s', muxedStream.id, err.message, err.code, err.stack);\n                        if (muxedStream.timeline.close == null) {\n                            await muxedStream.close();\n                        }\n                    });\n                }\n            });\n            newStream = async (protocols, options = {}) => {\n                if (muxer == null) {\n                    throw new CodeError('Stream is not multiplexed', codes.ERR_MUXER_UNAVAILABLE);\n                }\n                connection.log('starting new stream for protocols %s', protocols);\n                const muxedStream = await muxer.newStream();\n                connection.log.trace('started new stream %s for protocols %s', muxedStream.id, protocols);\n                try {\n                    if (options.signal == null) {\n                        muxedStream.log('no abort signal was passed while trying to negotiate protocols %s falling back to default timeout', protocols);\n                        const signal = AbortSignal.timeout(DEFAULT_PROTOCOL_SELECT_TIMEOUT);\n                        setMaxListeners(Infinity, signal);\n                        options = {\n                            ...options,\n                            signal\n                        };\n                    }\n                    muxedStream.log.trace('selecting protocol from protocols %s', protocols);\n                    const { stream, protocol } = await mss.select(muxedStream, protocols, {\n                        ...options,\n                        log: muxedStream.log,\n                        yieldBytes: true\n                    });\n                    muxedStream.log('selected protocol %s', protocol);\n                    const outgoingLimit = findOutgoingStreamLimit(protocol, this.components.registrar, options);\n                    const streamCount = countStreams(protocol, 'outbound', connection);\n                    if (streamCount >= outgoingLimit) {\n                        const err = new CodeError(`Too many outbound protocol streams for protocol \"${protocol}\" - ${streamCount}/${outgoingLimit}`, codes.ERR_TOO_MANY_OUTBOUND_PROTOCOL_STREAMS);\n                        muxedStream.abort(err);\n                        throw err;\n                    }\n                    // If a protocol stream has been successfully negotiated and is to be passed to the application,\n                    // the peerstore should ensure that the peer is registered with that protocol\n                    await this.components.peerStore.merge(remotePeer, {\n                        protocols: [protocol]\n                    });\n                    // after the handshake the returned stream can have early data so override\n                    // the souce/sink\n                    muxedStream.source = stream.source;\n                    muxedStream.sink = stream.sink;\n                    muxedStream.protocol = protocol;\n                    // allow closing the write end of a not-yet-negotiated stream\n                    if (stream.closeWrite != null) {\n                        muxedStream.closeWrite = stream.closeWrite;\n                    }\n                    // allow closing the read end of a not-yet-negotiated stream\n                    if (stream.closeRead != null) {\n                        muxedStream.closeRead = stream.closeRead;\n                    }\n                    // make sure we don't try to negotiate a stream we are closing\n                    if (stream.close != null) {\n                        muxedStream.close = stream.close;\n                    }\n                    this.components.metrics?.trackProtocolStream(muxedStream, connection);\n                    return muxedStream;\n                }\n                catch (err) {\n                    connection.log.error('could not create new stream for protocols %s', protocols, err);\n                    if (muxedStream.timeline.close == null) {\n                        muxedStream.abort(err);\n                    }\n                    if (err.code != null) {\n                        throw err;\n                    }\n                    throw new CodeError(String(err), codes.ERR_UNSUPPORTED_PROTOCOL);\n                }\n            };\n            // Pipe all data through the muxer\n            void Promise.all([\n                muxer.sink(upgradedConn.source),\n                upgradedConn.sink(muxer.source)\n            ]).catch(err => {\n                connection.log.error('error piping data through muxer', err);\n            });\n        }\n        const _timeline = maConn.timeline;\n        maConn.timeline = new Proxy(_timeline, {\n            set: (...args) => {\n                if (connection != null && args[1] === 'close' && args[2] != null && _timeline.close == null) {\n                    // Wait for close to finish before notifying of the closure\n                    (async () => {\n                        try {\n                            if (connection.status === 'open') {\n                                await connection.close();\n                            }\n                        }\n                        catch (err) {\n                            connection.log.error('error closing connection after timeline close', err);\n                        }\n                        finally {\n                            this.events.safeDispatchEvent('connection:close', {\n                                detail: connection\n                            });\n                        }\n                    })().catch(err => {\n                        connection.log.error('error thrown while dispatching connection:close event', err);\n                    });\n                }\n                return Reflect.set(...args);\n            }\n        });\n        maConn.timeline.upgraded = Date.now();\n        const errConnectionNotMultiplexed = () => {\n            throw new CodeError('connection is not multiplexed', codes.ERR_CONNECTION_NOT_MULTIPLEXED);\n        };\n        // Create the connection\n        connection = createConnection({\n            remoteAddr: maConn.remoteAddr,\n            remotePeer,\n            status: 'open',\n            direction,\n            timeline: maConn.timeline,\n            multiplexer: muxer?.protocol,\n            encryption: cryptoProtocol,\n            transient,\n            logger: this.components.logger,\n            newStream: newStream ?? errConnectionNotMultiplexed,\n            getStreams: () => { if (muxer != null) {\n                return muxer.streams;\n            }\n            else {\n                return [];\n            } },\n            close: async (options) => {\n                // Ensure remaining streams are closed gracefully\n                if (muxer != null) {\n                    connection.log.trace('close muxer');\n                    await muxer.close(options);\n                }\n                connection.log.trace('close maconn');\n                // close the underlying transport\n                await maConn.close(options);\n                connection.log.trace('closed maconn');\n            },\n            abort: (err) => {\n                maConn.abort(err);\n                // Ensure remaining streams are aborted\n                if (muxer != null) {\n                    muxer.abort(err);\n                }\n            }\n        });\n        this.events.safeDispatchEvent('connection:open', {\n            detail: connection\n        });\n        return connection;\n    }\n    /**\n     * Routes incoming streams to the correct handler\n     */\n    _onStream(opts) {\n        const { connection, stream, protocol } = opts;\n        const { handler, options } = this.components.registrar.getHandler(protocol);\n        if (connection.transient && options.runOnTransientConnection !== true) {\n            throw new CodeError('Cannot open protocol stream on transient connection', 'ERR_TRANSIENT_CONNECTION');\n        }\n        handler({ connection, stream });\n    }\n    /**\n     * Attempts to encrypt the incoming `connection` with the provided `cryptos`\n     */\n    async _encryptInbound(connection) {\n        const protocols = Array.from(this.connectionEncryption.keys());\n        connection.log('handling inbound crypto protocol selection', protocols);\n        try {\n            const { stream, protocol } = await mss.handle(connection, protocols, {\n                log: connection.log\n            });\n            const encrypter = this.connectionEncryption.get(protocol);\n            if (encrypter == null) {\n                throw new Error(`no crypto module found for ${protocol}`);\n            }\n            connection.log('encrypting inbound connection using', protocol);\n            return {\n                ...await encrypter.secureInbound(this.components.peerId, stream),\n                protocol\n            };\n        }\n        catch (err) {\n            connection.log.error('encrypting inbound connection failed', err);\n            throw new CodeError(err.message, codes.ERR_ENCRYPTION_FAILED);\n        }\n    }\n    /**\n     * Attempts to encrypt the given `connection` with the provided connection encrypters.\n     * The first `ConnectionEncrypter` module to succeed will be used\n     */\n    async _encryptOutbound(connection, remotePeerId) {\n        const protocols = Array.from(this.connectionEncryption.keys());\n        connection.log('selecting outbound crypto protocol', protocols);\n        try {\n            connection.log.trace('selecting encrypter from %s', protocols);\n            const { stream, protocol } = await mss.select(connection, protocols, {\n                log: connection.log,\n                yieldBytes: true\n            });\n            const encrypter = this.connectionEncryption.get(protocol);\n            if (encrypter == null) {\n                throw new Error(`no crypto module found for ${protocol}`);\n            }\n            connection.log('encrypting outbound connection to %p using %s', remotePeerId, encrypter);\n            return {\n                ...await encrypter.secureOutbound(this.components.peerId, stream, remotePeerId),\n                protocol\n            };\n        }\n        catch (err) {\n            connection.log.error('encrypting outbound connection to %p failed', remotePeerId, err);\n            throw new CodeError(err.message, codes.ERR_ENCRYPTION_FAILED);\n        }\n    }\n    /**\n     * Selects one of the given muxers via multistream-select. That\n     * muxer will be used for all future streams on the connection.\n     */\n    async _multiplexOutbound(connection, muxers) {\n        const protocols = Array.from(muxers.keys());\n        connection.log('outbound selecting muxer %s', protocols);\n        try {\n            connection.log.trace('selecting stream muxer from %s', protocols);\n            const { stream, protocol } = await mss.select(connection, protocols, {\n                log: connection.log,\n                yieldBytes: true\n            });\n            connection.log('selected %s as muxer protocol', protocol);\n            const muxerFactory = muxers.get(protocol);\n            return { stream, muxerFactory };\n        }\n        catch (err) {\n            connection.log.error('error multiplexing outbound connection', err);\n            throw new CodeError(String(err), codes.ERR_MUXER_UNAVAILABLE);\n        }\n    }\n    /**\n     * Registers support for one of the given muxers via multistream-select. The\n     * selected muxer will be used for all future streams on the connection.\n     */\n    async _multiplexInbound(connection, muxers) {\n        const protocols = Array.from(muxers.keys());\n        connection.log('inbound handling muxers %s', protocols);\n        try {\n            const { stream, protocol } = await mss.handle(connection, protocols, {\n                log: connection.log\n            });\n            const muxerFactory = muxers.get(protocol);\n            return { stream, muxerFactory };\n        }\n        catch (err) {\n            connection.log.error('error multiplexing inbound connection', err);\n            throw new CodeError(String(err), codes.ERR_MUXER_UNAVAILABLE);\n        }\n    }\n}\n//# sourceMappingURL=upgrader.js.map","import { unmarshalPrivateKey, unmarshalPublicKey } from '@libp2p/crypto/keys';\nimport { contentRoutingSymbol, CodeError, TypedEventEmitter, CustomEvent, setMaxListeners, peerDiscoverySymbol, peerRoutingSymbol } from '@libp2p/interface';\nimport { defaultLogger } from '@libp2p/logger';\nimport { PeerSet } from '@libp2p/peer-collections';\nimport { peerIdFromString } from '@libp2p/peer-id';\nimport { createEd25519PeerId } from '@libp2p/peer-id-factory';\nimport { PersistentPeerStore } from '@libp2p/peer-store';\nimport { isMultiaddr } from '@multiformats/multiaddr';\nimport { MemoryDatastore } from 'datastore-core/memory';\nimport { concat as uint8ArrayConcat } from 'uint8arrays/concat';\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string';\nimport { DefaultAddressManager } from './address-manager/index.js';\nimport { checkServiceDependencies, defaultComponents } from './components.js';\nimport { connectionGater } from './config/connection-gater.js';\nimport { validateConfig } from './config.js';\nimport { DefaultConnectionManager } from './connection-manager/index.js';\nimport { ConnectionMonitor } from './connection-monitor.js';\nimport { CompoundContentRouting } from './content-routing.js';\nimport { codes } from './errors.js';\nimport { DefaultPeerRouting } from './peer-routing.js';\nimport { RandomWalk } from './random-walk.js';\nimport { DefaultRegistrar } from './registrar.js';\nimport { DefaultTransportManager } from './transport-manager.js';\nimport { DefaultUpgrader } from './upgrader.js';\nimport * as pkg from './version.js';\nexport class Libp2pNode extends TypedEventEmitter {\n    peerId;\n    peerStore;\n    contentRouting;\n    peerRouting;\n    metrics;\n    services;\n    logger;\n    status;\n    components;\n    log;\n    constructor(init) {\n        super();\n        this.status = 'stopped';\n        // event bus - components can listen to this emitter to be notified of system events\n        // and also cause them to be emitted\n        const events = new TypedEventEmitter();\n        const originalDispatch = events.dispatchEvent.bind(events);\n        events.dispatchEvent = (evt) => {\n            const internalResult = originalDispatch(evt);\n            const externalResult = this.dispatchEvent(new CustomEvent(evt.type, { detail: evt.detail }));\n            return internalResult || externalResult;\n        };\n        // This emitter gets listened to a lot\n        setMaxListeners(Infinity, events);\n        this.peerId = init.peerId;\n        this.logger = init.logger ?? defaultLogger();\n        this.log = this.logger.forComponent('libp2p');\n        // @ts-expect-error {} may not be of type T\n        this.services = {};\n        // @ts-expect-error defaultComponents is missing component types added later\n        const components = this.components = defaultComponents({\n            peerId: init.peerId,\n            privateKey: init.privateKey,\n            nodeInfo: init.nodeInfo ?? {\n                name: pkg.name,\n                version: pkg.version\n            },\n            logger: this.logger,\n            events,\n            datastore: init.datastore ?? new MemoryDatastore(),\n            connectionGater: connectionGater(init.connectionGater),\n            dns: init.dns\n        });\n        this.peerStore = this.configureComponent('peerStore', new PersistentPeerStore(components, {\n            addressFilter: this.components.connectionGater.filterMultiaddrForPeer,\n            ...init.peerStore\n        }));\n        // Create Metrics\n        if (init.metrics != null) {\n            this.metrics = this.configureComponent('metrics', init.metrics(this.components));\n        }\n        components.events.addEventListener('peer:update', evt => {\n            // if there was no peer previously in the peer store this is a new peer\n            if (evt.detail.previous == null) {\n                const peerInfo = {\n                    id: evt.detail.peer.id,\n                    multiaddrs: evt.detail.peer.addresses.map(a => a.multiaddr)\n                };\n                components.events.safeDispatchEvent('peer:discovery', { detail: peerInfo });\n            }\n        });\n        // Set up connection protector if configured\n        if (init.connectionProtector != null) {\n            this.configureComponent('connectionProtector', init.connectionProtector(components));\n        }\n        // Set up the Upgrader\n        this.components.upgrader = new DefaultUpgrader(this.components, {\n            connectionEncryption: (init.connectionEncryption ?? []).map((fn, index) => this.configureComponent(`connection-encryption-${index}`, fn(this.components))),\n            muxers: (init.streamMuxers ?? []).map((fn, index) => this.configureComponent(`stream-muxers-${index}`, fn(this.components))),\n            inboundUpgradeTimeout: init.connectionManager?.inboundUpgradeTimeout\n        });\n        // Setup the transport manager\n        this.configureComponent('transportManager', new DefaultTransportManager(this.components, init.transportManager));\n        // Create the Connection Manager\n        this.configureComponent('connectionManager', new DefaultConnectionManager(this.components, init.connectionManager));\n        if (init.connectionMonitor?.enabled !== false) {\n            // Create the Connection Monitor if not disabled\n            this.configureComponent('connectionMonitor', new ConnectionMonitor(this.components, init.connectionMonitor));\n        }\n        // Create the Registrar\n        this.configureComponent('registrar', new DefaultRegistrar(this.components));\n        // Addresses {listen, announce, noAnnounce}\n        this.configureComponent('addressManager', new DefaultAddressManager(this.components, init.addresses));\n        // Peer routers\n        const peerRouters = (init.peerRouters ?? []).map((fn, index) => this.configureComponent(`peer-router-${index}`, fn(this.components)));\n        this.peerRouting = this.components.peerRouting = this.configureComponent('peerRouting', new DefaultPeerRouting(this.components, {\n            routers: peerRouters\n        }));\n        // Content routers\n        const contentRouters = (init.contentRouters ?? []).map((fn, index) => this.configureComponent(`content-router-${index}`, fn(this.components)));\n        this.contentRouting = this.components.contentRouting = this.configureComponent('contentRouting', new CompoundContentRouting(this.components, {\n            routers: contentRouters\n        }));\n        // Random walk\n        this.configureComponent('randomWalk', new RandomWalk(this.components));\n        (init.peerDiscovery ?? []).forEach((fn, index) => {\n            const service = this.configureComponent(`peer-discovery-${index}`, fn(this.components));\n            service.addEventListener('peer', (evt) => {\n                this.#onDiscoveryPeer(evt);\n            });\n        });\n        // Transport modules\n        init.transports?.forEach((fn, index) => {\n            this.components.transportManager.add(this.configureComponent(`transport-${index}`, fn(this.components)));\n        });\n        // User defined modules\n        if (init.services != null) {\n            for (const name of Object.keys(init.services)) {\n                const createService = init.services[name];\n                const service = createService(this.components);\n                if (service == null) {\n                    this.log.error('service factory %s returned null or undefined instance', name);\n                    continue;\n                }\n                this.services[name] = service;\n                this.configureComponent(name, service);\n                if (service[contentRoutingSymbol] != null) {\n                    this.log('registering service %s for content routing', name);\n                    contentRouters.push(service[contentRoutingSymbol]);\n                }\n                if (service[peerRoutingSymbol] != null) {\n                    this.log('registering service %s for peer routing', name);\n                    peerRouters.push(service[peerRoutingSymbol]);\n                }\n                if (service[peerDiscoverySymbol] != null) {\n                    this.log('registering service %s for peer discovery', name);\n                    service[peerDiscoverySymbol].addEventListener?.('peer', (evt) => {\n                        this.#onDiscoveryPeer(evt);\n                    });\n                }\n            }\n        }\n        // Ensure all services have their required dependencies\n        checkServiceDependencies(components);\n    }\n    configureComponent(name, component) {\n        if (component == null) {\n            this.log.error('component %s was null or undefined', name);\n        }\n        // @ts-expect-error cannot assign props\n        this.components[name] = component;\n        return component;\n    }\n    /**\n     * Starts the libp2p node and all its subsystems\n     */\n    async start() {\n        if (this.status !== 'stopped') {\n            return;\n        }\n        this.status = 'starting';\n        this.log('libp2p is starting');\n        try {\n            await this.components.beforeStart?.();\n            await this.components.start();\n            await this.components.afterStart?.();\n            this.status = 'started';\n            this.safeDispatchEvent('start', { detail: this });\n            this.log('libp2p has started');\n        }\n        catch (err) {\n            this.log.error('An error occurred starting libp2p', err);\n            // set status to 'started' so this.stop() will stop any running components\n            this.status = 'started';\n            await this.stop();\n            throw err;\n        }\n    }\n    /**\n     * Stop the libp2p node by closing its listeners and open connections\n     */\n    async stop() {\n        if (this.status !== 'started') {\n            return;\n        }\n        this.log('libp2p is stopping');\n        this.status = 'stopping';\n        await this.components.beforeStop?.();\n        await this.components.stop();\n        await this.components.afterStop?.();\n        this.status = 'stopped';\n        this.safeDispatchEvent('stop', { detail: this });\n        this.log('libp2p has stopped');\n    }\n    getConnections(peerId) {\n        return this.components.connectionManager.getConnections(peerId);\n    }\n    getDialQueue() {\n        return this.components.connectionManager.getDialQueue();\n    }\n    getPeers() {\n        const peerSet = new PeerSet();\n        for (const conn of this.components.connectionManager.getConnections()) {\n            peerSet.add(conn.remotePeer);\n        }\n        return Array.from(peerSet);\n    }\n    async dial(peer, options = {}) {\n        return this.components.connectionManager.openConnection(peer, {\n            // ensure any userland dials take top priority in the queue\n            priority: 75,\n            ...options\n        });\n    }\n    async dialProtocol(peer, protocols, options = {}) {\n        if (protocols == null) {\n            throw new CodeError('no protocols were provided to open a stream', codes.ERR_INVALID_PROTOCOLS_FOR_STREAM);\n        }\n        protocols = Array.isArray(protocols) ? protocols : [protocols];\n        if (protocols.length === 0) {\n            throw new CodeError('no protocols were provided to open a stream', codes.ERR_INVALID_PROTOCOLS_FOR_STREAM);\n        }\n        const connection = await this.dial(peer, options);\n        return connection.newStream(protocols, options);\n    }\n    getMultiaddrs() {\n        return this.components.addressManager.getAddresses();\n    }\n    getProtocols() {\n        return this.components.registrar.getProtocols();\n    }\n    async hangUp(peer, options = {}) {\n        if (isMultiaddr(peer)) {\n            peer = peerIdFromString(peer.getPeerId() ?? '');\n        }\n        await this.components.connectionManager.closeConnections(peer, options);\n    }\n    /**\n     * Get the public key for the given peer id\n     */\n    async getPublicKey(peer, options = {}) {\n        this.log('getPublicKey %p', peer);\n        if (peer.publicKey != null) {\n            return peer.publicKey;\n        }\n        try {\n            const peerInfo = await this.peerStore.get(peer);\n            if (peerInfo.id.publicKey != null) {\n                return peerInfo.id.publicKey;\n            }\n        }\n        catch (err) {\n            if (err.code !== codes.ERR_NOT_FOUND) {\n                throw err;\n            }\n        }\n        const peerKey = uint8ArrayConcat([\n            uint8ArrayFromString('/pk/'),\n            peer.multihash.digest\n        ]);\n        // search any available content routing methods\n        const bytes = await this.contentRouting.get(peerKey, options);\n        // ensure the returned key is valid\n        unmarshalPublicKey(bytes);\n        await this.peerStore.patch(peer, {\n            publicKey: bytes\n        });\n        return bytes;\n    }\n    async handle(protocols, handler, options) {\n        if (!Array.isArray(protocols)) {\n            protocols = [protocols];\n        }\n        await Promise.all(protocols.map(async (protocol) => {\n            await this.components.registrar.handle(protocol, handler, options);\n        }));\n    }\n    async unhandle(protocols) {\n        if (!Array.isArray(protocols)) {\n            protocols = [protocols];\n        }\n        await Promise.all(protocols.map(async (protocol) => {\n            await this.components.registrar.unhandle(protocol);\n        }));\n    }\n    async register(protocol, topology) {\n        return this.components.registrar.register(protocol, topology);\n    }\n    unregister(id) {\n        this.components.registrar.unregister(id);\n    }\n    async isDialable(multiaddr, options = {}) {\n        return this.components.connectionManager.isDialable(multiaddr, options);\n    }\n    /**\n     * Called whenever peer discovery services emit `peer` events and adds peers\n     * to the peer store.\n     */\n    #onDiscoveryPeer(evt) {\n        const { detail: peer } = evt;\n        if (peer.id.toString() === this.peerId.toString()) {\n            this.log.error(new Error(codes.ERR_DISCOVERED_SELF));\n            return;\n        }\n        void this.components.peerStore.merge(peer.id, {\n            multiaddrs: peer.multiaddrs\n        })\n            .catch(err => { this.log.error(err); });\n    }\n}\n/**\n * Returns a new Libp2pNode instance - this exposes more of the internals than the\n * libp2p interface and is useful for testing and debugging.\n */\nexport async function createLibp2pNode(options = {}) {\n    const peerId = options.peerId ??= await createEd25519PeerId();\n    if (peerId.privateKey == null) {\n        throw new CodeError('peer id was missing private key', 'ERR_MISSING_PRIVATE_KEY');\n    }\n    options.privateKey ??= await unmarshalPrivateKey(peerId.privateKey);\n    return new Libp2pNode(await validateConfig(options));\n}\n//# sourceMappingURL=libp2p.js.map","export const version = '1.9.4';\nexport const name = 'libp2p';\n//# sourceMappingURL=version.js.map","/**\n * The ENR tree for the different fleets.\n * SANDBOX and TEST fleets are for The Waku Network.\n */\nexport const enrTree = {\n    SANDBOX: \"enrtree://AIRVQ5DDA4FFWLRBCHJWUWOO6X6S4ZTZ5B667LQ6AJU6PEYDLRD5O@sandbox.waku.nodes.status.im\",\n    TEST: \"enrtree://AOGYWMBYOUIMOENHXCHILPKY3ZRFEULMFI4DOM442QSZ73TT2A7VI@test.waku.nodes.status.im\"\n};\nexport const DEFAULT_BOOTSTRAP_TAG_NAME = \"bootstrap\";\nexport const DEFAULT_BOOTSTRAP_TAG_VALUE = 50;\nexport const DEFAULT_BOOTSTRAP_TAG_TTL = 100_000_000;\nexport const DEFAULT_NODE_REQUIREMENTS = {\n    store: 1,\n    filter: 2,\n    lightPush: 2\n};\n//# sourceMappingURL=constants.js.map","/*! noble-secp256k1 - MIT License (c) 2019 Paul Miller (paulmillr.com) */\nimport * as nodeCrypto from 'crypto';\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst _3n = BigInt(3);\nconst _8n = BigInt(8);\nconst CURVE = Object.freeze({\n    a: _0n,\n    b: BigInt(7),\n    P: BigInt('0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f'),\n    n: BigInt('0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141'),\n    h: _1n,\n    Gx: BigInt('55066263022277343669578718895168534326250603453777594175500187360389116729240'),\n    Gy: BigInt('32670510020758816978083085130507043184471273380659243275938904335757337482424'),\n    beta: BigInt('0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee'),\n});\nconst divNearest = (a, b) => (a + b / _2n) / b;\nconst endo = {\n    beta: BigInt('0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee'),\n    splitScalar(k) {\n        const { n } = CURVE;\n        const a1 = BigInt('0x3086d221a7d46bcde86c90e49284eb15');\n        const b1 = -_1n * BigInt('0xe4437ed6010e88286f547fa90abfe4c3');\n        const a2 = BigInt('0x114ca50f7a8e2f3f657c1108d9d44cfd8');\n        const b2 = a1;\n        const POW_2_128 = BigInt('0x100000000000000000000000000000000');\n        const c1 = divNearest(b2 * k, n);\n        const c2 = divNearest(-b1 * k, n);\n        let k1 = mod(k - c1 * a1 - c2 * a2, n);\n        let k2 = mod(-c1 * b1 - c2 * b2, n);\n        const k1neg = k1 > POW_2_128;\n        const k2neg = k2 > POW_2_128;\n        if (k1neg)\n            k1 = n - k1;\n        if (k2neg)\n            k2 = n - k2;\n        if (k1 > POW_2_128 || k2 > POW_2_128) {\n            throw new Error('splitScalarEndo: Endomorphism failed, k=' + k);\n        }\n        return { k1neg, k1, k2neg, k2 };\n    },\n};\nconst fieldLen = 32;\nconst groupLen = 32;\nconst hashLen = 32;\nconst compressedLen = fieldLen + 1;\nconst uncompressedLen = 2 * fieldLen + 1;\nexport { CURVE };\nfunction weierstrass(x) {\n    const { a, b } = CURVE;\n    const x2 = mod(x * x);\n    const x3 = mod(x2 * x);\n    return mod(x3 + a * x + b);\n}\nconst USE_ENDOMORPHISM = CURVE.a === _0n;\nclass ShaError extends Error {\n    constructor(message) {\n        super(message);\n    }\n}\nfunction assertJacPoint(other) {\n    if (!(other instanceof JacobianPoint))\n        throw new TypeError('JacobianPoint expected');\n}\nclass JacobianPoint {\n    constructor(x, y, z) {\n        this.x = x;\n        this.y = y;\n        this.z = z;\n    }\n    static fromAffine(p) {\n        if (!(p instanceof Point)) {\n            throw new TypeError('JacobianPoint#fromAffine: expected Point');\n        }\n        if (p.equals(Point.ZERO))\n            return JacobianPoint.ZERO;\n        return new JacobianPoint(p.x, p.y, _1n);\n    }\n    static toAffineBatch(points) {\n        const toInv = invertBatch(points.map((p) => p.z));\n        return points.map((p, i) => p.toAffine(toInv[i]));\n    }\n    static normalizeZ(points) {\n        return JacobianPoint.toAffineBatch(points).map(JacobianPoint.fromAffine);\n    }\n    equals(other) {\n        assertJacPoint(other);\n        const { x: X1, y: Y1, z: Z1 } = this;\n        const { x: X2, y: Y2, z: Z2 } = other;\n        const Z1Z1 = mod(Z1 * Z1);\n        const Z2Z2 = mod(Z2 * Z2);\n        const U1 = mod(X1 * Z2Z2);\n        const U2 = mod(X2 * Z1Z1);\n        const S1 = mod(mod(Y1 * Z2) * Z2Z2);\n        const S2 = mod(mod(Y2 * Z1) * Z1Z1);\n        return U1 === U2 && S1 === S2;\n    }\n    negate() {\n        return new JacobianPoint(this.x, mod(-this.y), this.z);\n    }\n    double() {\n        const { x: X1, y: Y1, z: Z1 } = this;\n        const A = mod(X1 * X1);\n        const B = mod(Y1 * Y1);\n        const C = mod(B * B);\n        const x1b = X1 + B;\n        const D = mod(_2n * (mod(x1b * x1b) - A - C));\n        const E = mod(_3n * A);\n        const F = mod(E * E);\n        const X3 = mod(F - _2n * D);\n        const Y3 = mod(E * (D - X3) - _8n * C);\n        const Z3 = mod(_2n * Y1 * Z1);\n        return new JacobianPoint(X3, Y3, Z3);\n    }\n    add(other) {\n        assertJacPoint(other);\n        const { x: X1, y: Y1, z: Z1 } = this;\n        const { x: X2, y: Y2, z: Z2 } = other;\n        if (X2 === _0n || Y2 === _0n)\n            return this;\n        if (X1 === _0n || Y1 === _0n)\n            return other;\n        const Z1Z1 = mod(Z1 * Z1);\n        const Z2Z2 = mod(Z2 * Z2);\n        const U1 = mod(X1 * Z2Z2);\n        const U2 = mod(X2 * Z1Z1);\n        const S1 = mod(mod(Y1 * Z2) * Z2Z2);\n        const S2 = mod(mod(Y2 * Z1) * Z1Z1);\n        const H = mod(U2 - U1);\n        const r = mod(S2 - S1);\n        if (H === _0n) {\n            if (r === _0n) {\n                return this.double();\n            }\n            else {\n                return JacobianPoint.ZERO;\n            }\n        }\n        const HH = mod(H * H);\n        const HHH = mod(H * HH);\n        const V = mod(U1 * HH);\n        const X3 = mod(r * r - HHH - _2n * V);\n        const Y3 = mod(r * (V - X3) - S1 * HHH);\n        const Z3 = mod(Z1 * Z2 * H);\n        return new JacobianPoint(X3, Y3, Z3);\n    }\n    subtract(other) {\n        return this.add(other.negate());\n    }\n    multiplyUnsafe(scalar) {\n        const P0 = JacobianPoint.ZERO;\n        if (typeof scalar === 'bigint' && scalar === _0n)\n            return P0;\n        let n = normalizeScalar(scalar);\n        if (n === _1n)\n            return this;\n        if (!USE_ENDOMORPHISM) {\n            let p = P0;\n            let d = this;\n            while (n > _0n) {\n                if (n & _1n)\n                    p = p.add(d);\n                d = d.double();\n                n >>= _1n;\n            }\n            return p;\n        }\n        let { k1neg, k1, k2neg, k2 } = endo.splitScalar(n);\n        let k1p = P0;\n        let k2p = P0;\n        let d = this;\n        while (k1 > _0n || k2 > _0n) {\n            if (k1 & _1n)\n                k1p = k1p.add(d);\n            if (k2 & _1n)\n                k2p = k2p.add(d);\n            d = d.double();\n            k1 >>= _1n;\n            k2 >>= _1n;\n        }\n        if (k1neg)\n            k1p = k1p.negate();\n        if (k2neg)\n            k2p = k2p.negate();\n        k2p = new JacobianPoint(mod(k2p.x * endo.beta), k2p.y, k2p.z);\n        return k1p.add(k2p);\n    }\n    precomputeWindow(W) {\n        const windows = USE_ENDOMORPHISM ? 128 / W + 1 : 256 / W + 1;\n        const points = [];\n        let p = this;\n        let base = p;\n        for (let window = 0; window < windows; window++) {\n            base = p;\n            points.push(base);\n            for (let i = 1; i < 2 ** (W - 1); i++) {\n                base = base.add(p);\n                points.push(base);\n            }\n            p = base.double();\n        }\n        return points;\n    }\n    wNAF(n, affinePoint) {\n        if (!affinePoint && this.equals(JacobianPoint.BASE))\n            affinePoint = Point.BASE;\n        const W = (affinePoint && affinePoint._WINDOW_SIZE) || 1;\n        if (256 % W) {\n            throw new Error('Point#wNAF: Invalid precomputation window, must be power of 2');\n        }\n        let precomputes = affinePoint && pointPrecomputes.get(affinePoint);\n        if (!precomputes) {\n            precomputes = this.precomputeWindow(W);\n            if (affinePoint && W !== 1) {\n                precomputes = JacobianPoint.normalizeZ(precomputes);\n                pointPrecomputes.set(affinePoint, precomputes);\n            }\n        }\n        let p = JacobianPoint.ZERO;\n        let f = JacobianPoint.BASE;\n        const windows = 1 + (USE_ENDOMORPHISM ? 128 / W : 256 / W);\n        const windowSize = 2 ** (W - 1);\n        const mask = BigInt(2 ** W - 1);\n        const maxNumber = 2 ** W;\n        const shiftBy = BigInt(W);\n        for (let window = 0; window < windows; window++) {\n            const offset = window * windowSize;\n            let wbits = Number(n & mask);\n            n >>= shiftBy;\n            if (wbits > windowSize) {\n                wbits -= maxNumber;\n                n += _1n;\n            }\n            const offset1 = offset;\n            const offset2 = offset + Math.abs(wbits) - 1;\n            const cond1 = window % 2 !== 0;\n            const cond2 = wbits < 0;\n            if (wbits === 0) {\n                f = f.add(constTimeNegate(cond1, precomputes[offset1]));\n            }\n            else {\n                p = p.add(constTimeNegate(cond2, precomputes[offset2]));\n            }\n        }\n        return { p, f };\n    }\n    multiply(scalar, affinePoint) {\n        let n = normalizeScalar(scalar);\n        let point;\n        let fake;\n        if (USE_ENDOMORPHISM) {\n            const { k1neg, k1, k2neg, k2 } = endo.splitScalar(n);\n            let { p: k1p, f: f1p } = this.wNAF(k1, affinePoint);\n            let { p: k2p, f: f2p } = this.wNAF(k2, affinePoint);\n            k1p = constTimeNegate(k1neg, k1p);\n            k2p = constTimeNegate(k2neg, k2p);\n            k2p = new JacobianPoint(mod(k2p.x * endo.beta), k2p.y, k2p.z);\n            point = k1p.add(k2p);\n            fake = f1p.add(f2p);\n        }\n        else {\n            const { p, f } = this.wNAF(n, affinePoint);\n            point = p;\n            fake = f;\n        }\n        return JacobianPoint.normalizeZ([point, fake])[0];\n    }\n    toAffine(invZ) {\n        const { x, y, z } = this;\n        const is0 = this.equals(JacobianPoint.ZERO);\n        if (invZ == null)\n            invZ = is0 ? _8n : invert(z);\n        const iz1 = invZ;\n        const iz2 = mod(iz1 * iz1);\n        const iz3 = mod(iz2 * iz1);\n        const ax = mod(x * iz2);\n        const ay = mod(y * iz3);\n        const zz = mod(z * iz1);\n        if (is0)\n            return Point.ZERO;\n        if (zz !== _1n)\n            throw new Error('invZ was invalid');\n        return new Point(ax, ay);\n    }\n}\nJacobianPoint.BASE = new JacobianPoint(CURVE.Gx, CURVE.Gy, _1n);\nJacobianPoint.ZERO = new JacobianPoint(_0n, _1n, _0n);\nfunction constTimeNegate(condition, item) {\n    const neg = item.negate();\n    return condition ? neg : item;\n}\nconst pointPrecomputes = new WeakMap();\nexport class Point {\n    constructor(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n    _setWindowSize(windowSize) {\n        this._WINDOW_SIZE = windowSize;\n        pointPrecomputes.delete(this);\n    }\n    hasEvenY() {\n        return this.y % _2n === _0n;\n    }\n    static fromCompressedHex(bytes) {\n        const isShort = bytes.length === 32;\n        const x = bytesToNumber(isShort ? bytes : bytes.subarray(1));\n        if (!isValidFieldElement(x))\n            throw new Error('Point is not on curve');\n        const y2 = weierstrass(x);\n        let y = sqrtMod(y2);\n        const isYOdd = (y & _1n) === _1n;\n        if (isShort) {\n            if (isYOdd)\n                y = mod(-y);\n        }\n        else {\n            const isFirstByteOdd = (bytes[0] & 1) === 1;\n            if (isFirstByteOdd !== isYOdd)\n                y = mod(-y);\n        }\n        const point = new Point(x, y);\n        point.assertValidity();\n        return point;\n    }\n    static fromUncompressedHex(bytes) {\n        const x = bytesToNumber(bytes.subarray(1, fieldLen + 1));\n        const y = bytesToNumber(bytes.subarray(fieldLen + 1, fieldLen * 2 + 1));\n        const point = new Point(x, y);\n        point.assertValidity();\n        return point;\n    }\n    static fromHex(hex) {\n        const bytes = ensureBytes(hex);\n        const len = bytes.length;\n        const header = bytes[0];\n        if (len === fieldLen)\n            return this.fromCompressedHex(bytes);\n        if (len === compressedLen && (header === 0x02 || header === 0x03)) {\n            return this.fromCompressedHex(bytes);\n        }\n        if (len === uncompressedLen && header === 0x04)\n            return this.fromUncompressedHex(bytes);\n        throw new Error(`Point.fromHex: received invalid point. Expected 32-${compressedLen} compressed bytes or ${uncompressedLen} uncompressed bytes, not ${len}`);\n    }\n    static fromPrivateKey(privateKey) {\n        return Point.BASE.multiply(normalizePrivateKey(privateKey));\n    }\n    static fromSignature(msgHash, signature, recovery) {\n        const { r, s } = normalizeSignature(signature);\n        if (![0, 1, 2, 3].includes(recovery))\n            throw new Error('Cannot recover: invalid recovery bit');\n        const h = truncateHash(ensureBytes(msgHash));\n        const { n } = CURVE;\n        const radj = recovery === 2 || recovery === 3 ? r + n : r;\n        const rinv = invert(radj, n);\n        const u1 = mod(-h * rinv, n);\n        const u2 = mod(s * rinv, n);\n        const prefix = recovery & 1 ? '03' : '02';\n        const R = Point.fromHex(prefix + numTo32bStr(radj));\n        const Q = Point.BASE.multiplyAndAddUnsafe(R, u1, u2);\n        if (!Q)\n            throw new Error('Cannot recover signature: point at infinify');\n        Q.assertValidity();\n        return Q;\n    }\n    toRawBytes(isCompressed = false) {\n        return hexToBytes(this.toHex(isCompressed));\n    }\n    toHex(isCompressed = false) {\n        const x = numTo32bStr(this.x);\n        if (isCompressed) {\n            const prefix = this.hasEvenY() ? '02' : '03';\n            return `${prefix}${x}`;\n        }\n        else {\n            return `04${x}${numTo32bStr(this.y)}`;\n        }\n    }\n    toHexX() {\n        return this.toHex(true).slice(2);\n    }\n    toRawX() {\n        return this.toRawBytes(true).slice(1);\n    }\n    assertValidity() {\n        const msg = 'Point is not on elliptic curve';\n        const { x, y } = this;\n        if (!isValidFieldElement(x) || !isValidFieldElement(y))\n            throw new Error(msg);\n        const left = mod(y * y);\n        const right = weierstrass(x);\n        if (mod(left - right) !== _0n)\n            throw new Error(msg);\n    }\n    equals(other) {\n        return this.x === other.x && this.y === other.y;\n    }\n    negate() {\n        return new Point(this.x, mod(-this.y));\n    }\n    double() {\n        return JacobianPoint.fromAffine(this).double().toAffine();\n    }\n    add(other) {\n        return JacobianPoint.fromAffine(this).add(JacobianPoint.fromAffine(other)).toAffine();\n    }\n    subtract(other) {\n        return this.add(other.negate());\n    }\n    multiply(scalar) {\n        return JacobianPoint.fromAffine(this).multiply(scalar, this).toAffine();\n    }\n    multiplyAndAddUnsafe(Q, a, b) {\n        const P = JacobianPoint.fromAffine(this);\n        const aP = a === _0n || a === _1n || this !== Point.BASE ? P.multiplyUnsafe(a) : P.multiply(a);\n        const bQ = JacobianPoint.fromAffine(Q).multiplyUnsafe(b);\n        const sum = aP.add(bQ);\n        return sum.equals(JacobianPoint.ZERO) ? undefined : sum.toAffine();\n    }\n}\nPoint.BASE = new Point(CURVE.Gx, CURVE.Gy);\nPoint.ZERO = new Point(_0n, _0n);\nfunction sliceDER(s) {\n    return Number.parseInt(s[0], 16) >= 8 ? '00' + s : s;\n}\nfunction parseDERInt(data) {\n    if (data.length < 2 || data[0] !== 0x02) {\n        throw new Error(`Invalid signature integer tag: ${bytesToHex(data)}`);\n    }\n    const len = data[1];\n    const res = data.subarray(2, len + 2);\n    if (!len || res.length !== len) {\n        throw new Error(`Invalid signature integer: wrong length`);\n    }\n    if (res[0] === 0x00 && res[1] <= 0x7f) {\n        throw new Error('Invalid signature integer: trailing length');\n    }\n    return { data: bytesToNumber(res), left: data.subarray(len + 2) };\n}\nfunction parseDERSignature(data) {\n    if (data.length < 2 || data[0] != 0x30) {\n        throw new Error(`Invalid signature tag: ${bytesToHex(data)}`);\n    }\n    if (data[1] !== data.length - 2) {\n        throw new Error('Invalid signature: incorrect length');\n    }\n    const { data: r, left: sBytes } = parseDERInt(data.subarray(2));\n    const { data: s, left: rBytesLeft } = parseDERInt(sBytes);\n    if (rBytesLeft.length) {\n        throw new Error(`Invalid signature: left bytes after parsing: ${bytesToHex(rBytesLeft)}`);\n    }\n    return { r, s };\n}\nexport class Signature {\n    constructor(r, s) {\n        this.r = r;\n        this.s = s;\n        this.assertValidity();\n    }\n    static fromCompact(hex) {\n        const arr = hex instanceof Uint8Array;\n        const name = 'Signature.fromCompact';\n        if (typeof hex !== 'string' && !arr)\n            throw new TypeError(`${name}: Expected string or Uint8Array`);\n        const str = arr ? bytesToHex(hex) : hex;\n        if (str.length !== 128)\n            throw new Error(`${name}: Expected 64-byte hex`);\n        return new Signature(hexToNumber(str.slice(0, 64)), hexToNumber(str.slice(64, 128)));\n    }\n    static fromDER(hex) {\n        const arr = hex instanceof Uint8Array;\n        if (typeof hex !== 'string' && !arr)\n            throw new TypeError(`Signature.fromDER: Expected string or Uint8Array`);\n        const { r, s } = parseDERSignature(arr ? hex : hexToBytes(hex));\n        return new Signature(r, s);\n    }\n    static fromHex(hex) {\n        return this.fromDER(hex);\n    }\n    assertValidity() {\n        const { r, s } = this;\n        if (!isWithinCurveOrder(r))\n            throw new Error('Invalid Signature: r must be 0 < r < n');\n        if (!isWithinCurveOrder(s))\n            throw new Error('Invalid Signature: s must be 0 < s < n');\n    }\n    hasHighS() {\n        const HALF = CURVE.n >> _1n;\n        return this.s > HALF;\n    }\n    normalizeS() {\n        return this.hasHighS() ? new Signature(this.r, mod(-this.s, CURVE.n)) : this;\n    }\n    toDERRawBytes() {\n        return hexToBytes(this.toDERHex());\n    }\n    toDERHex() {\n        const sHex = sliceDER(numberToHexUnpadded(this.s));\n        const rHex = sliceDER(numberToHexUnpadded(this.r));\n        const sHexL = sHex.length / 2;\n        const rHexL = rHex.length / 2;\n        const sLen = numberToHexUnpadded(sHexL);\n        const rLen = numberToHexUnpadded(rHexL);\n        const length = numberToHexUnpadded(rHexL + sHexL + 4);\n        return `30${length}02${rLen}${rHex}02${sLen}${sHex}`;\n    }\n    toRawBytes() {\n        return this.toDERRawBytes();\n    }\n    toHex() {\n        return this.toDERHex();\n    }\n    toCompactRawBytes() {\n        return hexToBytes(this.toCompactHex());\n    }\n    toCompactHex() {\n        return numTo32bStr(this.r) + numTo32bStr(this.s);\n    }\n}\nfunction concatBytes(...arrays) {\n    if (!arrays.every((b) => b instanceof Uint8Array))\n        throw new Error('Uint8Array list expected');\n    if (arrays.length === 1)\n        return arrays[0];\n    const length = arrays.reduce((a, arr) => a + arr.length, 0);\n    const result = new Uint8Array(length);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const arr = arrays[i];\n        result.set(arr, pad);\n        pad += arr.length;\n    }\n    return result;\n}\nconst hexes = Array.from({ length: 256 }, (v, i) => i.toString(16).padStart(2, '0'));\nfunction bytesToHex(uint8a) {\n    if (!(uint8a instanceof Uint8Array))\n        throw new Error('Expected Uint8Array');\n    let hex = '';\n    for (let i = 0; i < uint8a.length; i++) {\n        hex += hexes[uint8a[i]];\n    }\n    return hex;\n}\nconst POW_2_256 = BigInt('0x10000000000000000000000000000000000000000000000000000000000000000');\nfunction numTo32bStr(num) {\n    if (typeof num !== 'bigint')\n        throw new Error('Expected bigint');\n    if (!(_0n <= num && num < POW_2_256))\n        throw new Error('Expected number 0 <= n < 2^256');\n    return num.toString(16).padStart(64, '0');\n}\nfunction numTo32b(num) {\n    const b = hexToBytes(numTo32bStr(num));\n    if (b.length !== 32)\n        throw new Error('Error: expected 32 bytes');\n    return b;\n}\nfunction numberToHexUnpadded(num) {\n    const hex = num.toString(16);\n    return hex.length & 1 ? `0${hex}` : hex;\n}\nfunction hexToNumber(hex) {\n    if (typeof hex !== 'string') {\n        throw new TypeError('hexToNumber: expected string, got ' + typeof hex);\n    }\n    return BigInt(`0x${hex}`);\n}\nfunction hexToBytes(hex) {\n    if (typeof hex !== 'string') {\n        throw new TypeError('hexToBytes: expected string, got ' + typeof hex);\n    }\n    if (hex.length % 2)\n        throw new Error('hexToBytes: received invalid unpadded hex' + hex.length);\n    const array = new Uint8Array(hex.length / 2);\n    for (let i = 0; i < array.length; i++) {\n        const j = i * 2;\n        const hexByte = hex.slice(j, j + 2);\n        const byte = Number.parseInt(hexByte, 16);\n        if (Number.isNaN(byte) || byte < 0)\n            throw new Error('Invalid byte sequence');\n        array[i] = byte;\n    }\n    return array;\n}\nfunction bytesToNumber(bytes) {\n    return hexToNumber(bytesToHex(bytes));\n}\nfunction ensureBytes(hex) {\n    return hex instanceof Uint8Array ? Uint8Array.from(hex) : hexToBytes(hex);\n}\nfunction normalizeScalar(num) {\n    if (typeof num === 'number' && Number.isSafeInteger(num) && num > 0)\n        return BigInt(num);\n    if (typeof num === 'bigint' && isWithinCurveOrder(num))\n        return num;\n    throw new TypeError('Expected valid private scalar: 0 < scalar < curve.n');\n}\nfunction mod(a, b = CURVE.P) {\n    const result = a % b;\n    return result >= _0n ? result : b + result;\n}\nfunction pow2(x, power) {\n    const { P } = CURVE;\n    let res = x;\n    while (power-- > _0n) {\n        res *= res;\n        res %= P;\n    }\n    return res;\n}\nfunction sqrtMod(x) {\n    const { P } = CURVE;\n    const _6n = BigInt(6);\n    const _11n = BigInt(11);\n    const _22n = BigInt(22);\n    const _23n = BigInt(23);\n    const _44n = BigInt(44);\n    const _88n = BigInt(88);\n    const b2 = (x * x * x) % P;\n    const b3 = (b2 * b2 * x) % P;\n    const b6 = (pow2(b3, _3n) * b3) % P;\n    const b9 = (pow2(b6, _3n) * b3) % P;\n    const b11 = (pow2(b9, _2n) * b2) % P;\n    const b22 = (pow2(b11, _11n) * b11) % P;\n    const b44 = (pow2(b22, _22n) * b22) % P;\n    const b88 = (pow2(b44, _44n) * b44) % P;\n    const b176 = (pow2(b88, _88n) * b88) % P;\n    const b220 = (pow2(b176, _44n) * b44) % P;\n    const b223 = (pow2(b220, _3n) * b3) % P;\n    const t1 = (pow2(b223, _23n) * b22) % P;\n    const t2 = (pow2(t1, _6n) * b2) % P;\n    const rt = pow2(t2, _2n);\n    const xc = (rt * rt) % P;\n    if (xc !== x)\n        throw new Error('Cannot find square root');\n    return rt;\n}\nfunction invert(number, modulo = CURVE.P) {\n    if (number === _0n || modulo <= _0n) {\n        throw new Error(`invert: expected positive integers, got n=${number} mod=${modulo}`);\n    }\n    let a = mod(number, modulo);\n    let b = modulo;\n    let x = _0n, y = _1n, u = _1n, v = _0n;\n    while (a !== _0n) {\n        const q = b / a;\n        const r = b % a;\n        const m = x - u * q;\n        const n = y - v * q;\n        b = a, a = r, x = u, y = v, u = m, v = n;\n    }\n    const gcd = b;\n    if (gcd !== _1n)\n        throw new Error('invert: does not exist');\n    return mod(x, modulo);\n}\nfunction invertBatch(nums, p = CURVE.P) {\n    const scratch = new Array(nums.length);\n    const lastMultiplied = nums.reduce((acc, num, i) => {\n        if (num === _0n)\n            return acc;\n        scratch[i] = acc;\n        return mod(acc * num, p);\n    }, _1n);\n    const inverted = invert(lastMultiplied, p);\n    nums.reduceRight((acc, num, i) => {\n        if (num === _0n)\n            return acc;\n        scratch[i] = mod(acc * scratch[i], p);\n        return mod(acc * num, p);\n    }, inverted);\n    return scratch;\n}\nfunction bits2int_2(bytes) {\n    const delta = bytes.length * 8 - groupLen * 8;\n    const num = bytesToNumber(bytes);\n    return delta > 0 ? num >> BigInt(delta) : num;\n}\nfunction truncateHash(hash, truncateOnly = false) {\n    const h = bits2int_2(hash);\n    if (truncateOnly)\n        return h;\n    const { n } = CURVE;\n    return h >= n ? h - n : h;\n}\nlet _sha256Sync;\nlet _hmacSha256Sync;\nclass HmacDrbg {\n    constructor(hashLen, qByteLen) {\n        this.hashLen = hashLen;\n        this.qByteLen = qByteLen;\n        if (typeof hashLen !== 'number' || hashLen < 2)\n            throw new Error('hashLen must be a number');\n        if (typeof qByteLen !== 'number' || qByteLen < 2)\n            throw new Error('qByteLen must be a number');\n        this.v = new Uint8Array(hashLen).fill(1);\n        this.k = new Uint8Array(hashLen).fill(0);\n        this.counter = 0;\n    }\n    hmac(...values) {\n        return utils.hmacSha256(this.k, ...values);\n    }\n    hmacSync(...values) {\n        return _hmacSha256Sync(this.k, ...values);\n    }\n    checkSync() {\n        if (typeof _hmacSha256Sync !== 'function')\n            throw new ShaError('hmacSha256Sync needs to be set');\n    }\n    incr() {\n        if (this.counter >= 1000)\n            throw new Error('Tried 1,000 k values for sign(), all were invalid');\n        this.counter += 1;\n    }\n    async reseed(seed = new Uint8Array()) {\n        this.k = await this.hmac(this.v, Uint8Array.from([0x00]), seed);\n        this.v = await this.hmac(this.v);\n        if (seed.length === 0)\n            return;\n        this.k = await this.hmac(this.v, Uint8Array.from([0x01]), seed);\n        this.v = await this.hmac(this.v);\n    }\n    reseedSync(seed = new Uint8Array()) {\n        this.checkSync();\n        this.k = this.hmacSync(this.v, Uint8Array.from([0x00]), seed);\n        this.v = this.hmacSync(this.v);\n        if (seed.length === 0)\n            return;\n        this.k = this.hmacSync(this.v, Uint8Array.from([0x01]), seed);\n        this.v = this.hmacSync(this.v);\n    }\n    async generate() {\n        this.incr();\n        let len = 0;\n        const out = [];\n        while (len < this.qByteLen) {\n            this.v = await this.hmac(this.v);\n            const sl = this.v.slice();\n            out.push(sl);\n            len += this.v.length;\n        }\n        return concatBytes(...out);\n    }\n    generateSync() {\n        this.checkSync();\n        this.incr();\n        let len = 0;\n        const out = [];\n        while (len < this.qByteLen) {\n            this.v = this.hmacSync(this.v);\n            const sl = this.v.slice();\n            out.push(sl);\n            len += this.v.length;\n        }\n        return concatBytes(...out);\n    }\n}\nfunction isWithinCurveOrder(num) {\n    return _0n < num && num < CURVE.n;\n}\nfunction isValidFieldElement(num) {\n    return _0n < num && num < CURVE.P;\n}\nfunction kmdToSig(kBytes, m, d, lowS = true) {\n    const { n } = CURVE;\n    const k = truncateHash(kBytes, true);\n    if (!isWithinCurveOrder(k))\n        return;\n    const kinv = invert(k, n);\n    const q = Point.BASE.multiply(k);\n    const r = mod(q.x, n);\n    if (r === _0n)\n        return;\n    const s = mod(kinv * mod(m + d * r, n), n);\n    if (s === _0n)\n        return;\n    let sig = new Signature(r, s);\n    let recovery = (q.x === sig.r ? 0 : 2) | Number(q.y & _1n);\n    if (lowS && sig.hasHighS()) {\n        sig = sig.normalizeS();\n        recovery ^= 1;\n    }\n    return { sig, recovery };\n}\nfunction normalizePrivateKey(key) {\n    let num;\n    if (typeof key === 'bigint') {\n        num = key;\n    }\n    else if (typeof key === 'number' && Number.isSafeInteger(key) && key > 0) {\n        num = BigInt(key);\n    }\n    else if (typeof key === 'string') {\n        if (key.length !== 2 * groupLen)\n            throw new Error('Expected 32 bytes of private key');\n        num = hexToNumber(key);\n    }\n    else if (key instanceof Uint8Array) {\n        if (key.length !== groupLen)\n            throw new Error('Expected 32 bytes of private key');\n        num = bytesToNumber(key);\n    }\n    else {\n        throw new TypeError('Expected valid private key');\n    }\n    if (!isWithinCurveOrder(num))\n        throw new Error('Expected private key: 0 < key < n');\n    return num;\n}\nfunction normalizePublicKey(publicKey) {\n    if (publicKey instanceof Point) {\n        publicKey.assertValidity();\n        return publicKey;\n    }\n    else {\n        return Point.fromHex(publicKey);\n    }\n}\nfunction normalizeSignature(signature) {\n    if (signature instanceof Signature) {\n        signature.assertValidity();\n        return signature;\n    }\n    try {\n        return Signature.fromDER(signature);\n    }\n    catch (error) {\n        return Signature.fromCompact(signature);\n    }\n}\nexport function getPublicKey(privateKey, isCompressed = false) {\n    return Point.fromPrivateKey(privateKey).toRawBytes(isCompressed);\n}\nexport function recoverPublicKey(msgHash, signature, recovery, isCompressed = false) {\n    return Point.fromSignature(msgHash, signature, recovery).toRawBytes(isCompressed);\n}\nfunction isProbPub(item) {\n    const arr = item instanceof Uint8Array;\n    const str = typeof item === 'string';\n    const len = (arr || str) && item.length;\n    if (arr)\n        return len === compressedLen || len === uncompressedLen;\n    if (str)\n        return len === compressedLen * 2 || len === uncompressedLen * 2;\n    if (item instanceof Point)\n        return true;\n    return false;\n}\nexport function getSharedSecret(privateA, publicB, isCompressed = false) {\n    if (isProbPub(privateA))\n        throw new TypeError('getSharedSecret: first arg must be private key');\n    if (!isProbPub(publicB))\n        throw new TypeError('getSharedSecret: second arg must be public key');\n    const b = normalizePublicKey(publicB);\n    b.assertValidity();\n    return b.multiply(normalizePrivateKey(privateA)).toRawBytes(isCompressed);\n}\nfunction bits2int(bytes) {\n    const slice = bytes.length > fieldLen ? bytes.slice(0, fieldLen) : bytes;\n    return bytesToNumber(slice);\n}\nfunction bits2octets(bytes) {\n    const z1 = bits2int(bytes);\n    const z2 = mod(z1, CURVE.n);\n    return int2octets(z2 < _0n ? z1 : z2);\n}\nfunction int2octets(num) {\n    return numTo32b(num);\n}\nfunction initSigArgs(msgHash, privateKey, extraEntropy) {\n    if (msgHash == null)\n        throw new Error(`sign: expected valid message hash, not \"${msgHash}\"`);\n    const h1 = ensureBytes(msgHash);\n    const d = normalizePrivateKey(privateKey);\n    const seedArgs = [int2octets(d), bits2octets(h1)];\n    if (extraEntropy != null) {\n        if (extraEntropy === true)\n            extraEntropy = utils.randomBytes(fieldLen);\n        const e = ensureBytes(extraEntropy);\n        if (e.length !== fieldLen)\n            throw new Error(`sign: Expected ${fieldLen} bytes of extra data`);\n        seedArgs.push(e);\n    }\n    const seed = concatBytes(...seedArgs);\n    const m = bits2int(h1);\n    return { seed, m, d };\n}\nfunction finalizeSig(recSig, opts) {\n    const { sig, recovery } = recSig;\n    const { der, recovered } = Object.assign({ canonical: true, der: true }, opts);\n    const hashed = der ? sig.toDERRawBytes() : sig.toCompactRawBytes();\n    return recovered ? [hashed, recovery] : hashed;\n}\nasync function sign(msgHash, privKey, opts = {}) {\n    const { seed, m, d } = initSigArgs(msgHash, privKey, opts.extraEntropy);\n    const drbg = new HmacDrbg(hashLen, groupLen);\n    await drbg.reseed(seed);\n    let sig;\n    while (!(sig = kmdToSig(await drbg.generate(), m, d, opts.canonical)))\n        await drbg.reseed();\n    return finalizeSig(sig, opts);\n}\nfunction signSync(msgHash, privKey, opts = {}) {\n    const { seed, m, d } = initSigArgs(msgHash, privKey, opts.extraEntropy);\n    const drbg = new HmacDrbg(hashLen, groupLen);\n    drbg.reseedSync(seed);\n    let sig;\n    while (!(sig = kmdToSig(drbg.generateSync(), m, d, opts.canonical)))\n        drbg.reseedSync();\n    return finalizeSig(sig, opts);\n}\nexport { sign, signSync };\nconst vopts = { strict: true };\nexport function verify(signature, msgHash, publicKey, opts = vopts) {\n    let sig;\n    try {\n        sig = normalizeSignature(signature);\n        msgHash = ensureBytes(msgHash);\n    }\n    catch (error) {\n        return false;\n    }\n    const { r, s } = sig;\n    if (opts.strict && sig.hasHighS())\n        return false;\n    const h = truncateHash(msgHash);\n    let P;\n    try {\n        P = normalizePublicKey(publicKey);\n    }\n    catch (error) {\n        return false;\n    }\n    const { n } = CURVE;\n    const sinv = invert(s, n);\n    const u1 = mod(h * sinv, n);\n    const u2 = mod(r * sinv, n);\n    const R = Point.BASE.multiplyAndAddUnsafe(P, u1, u2);\n    if (!R)\n        return false;\n    const v = mod(R.x, n);\n    return v === r;\n}\nfunction schnorrChallengeFinalize(ch) {\n    return mod(bytesToNumber(ch), CURVE.n);\n}\nclass SchnorrSignature {\n    constructor(r, s) {\n        this.r = r;\n        this.s = s;\n        this.assertValidity();\n    }\n    static fromHex(hex) {\n        const bytes = ensureBytes(hex);\n        if (bytes.length !== 64)\n            throw new TypeError(`SchnorrSignature.fromHex: expected 64 bytes, not ${bytes.length}`);\n        const r = bytesToNumber(bytes.subarray(0, 32));\n        const s = bytesToNumber(bytes.subarray(32, 64));\n        return new SchnorrSignature(r, s);\n    }\n    assertValidity() {\n        const { r, s } = this;\n        if (!isValidFieldElement(r) || !isWithinCurveOrder(s))\n            throw new Error('Invalid signature');\n    }\n    toHex() {\n        return numTo32bStr(this.r) + numTo32bStr(this.s);\n    }\n    toRawBytes() {\n        return hexToBytes(this.toHex());\n    }\n}\nfunction schnorrGetPublicKey(privateKey) {\n    return Point.fromPrivateKey(privateKey).toRawX();\n}\nclass InternalSchnorrSignature {\n    constructor(message, privateKey, auxRand = utils.randomBytes()) {\n        if (message == null)\n            throw new TypeError(`sign: Expected valid message, not \"${message}\"`);\n        this.m = ensureBytes(message);\n        const { x, scalar } = this.getScalar(normalizePrivateKey(privateKey));\n        this.px = x;\n        this.d = scalar;\n        this.rand = ensureBytes(auxRand);\n        if (this.rand.length !== 32)\n            throw new TypeError('sign: Expected 32 bytes of aux randomness');\n    }\n    getScalar(priv) {\n        const point = Point.fromPrivateKey(priv);\n        const scalar = point.hasEvenY() ? priv : CURVE.n - priv;\n        return { point, scalar, x: point.toRawX() };\n    }\n    initNonce(d, t0h) {\n        return numTo32b(d ^ bytesToNumber(t0h));\n    }\n    finalizeNonce(k0h) {\n        const k0 = mod(bytesToNumber(k0h), CURVE.n);\n        if (k0 === _0n)\n            throw new Error('sign: Creation of signature failed. k is zero');\n        const { point: R, x: rx, scalar: k } = this.getScalar(k0);\n        return { R, rx, k };\n    }\n    finalizeSig(R, k, e, d) {\n        return new SchnorrSignature(R.x, mod(k + e * d, CURVE.n)).toRawBytes();\n    }\n    error() {\n        throw new Error('sign: Invalid signature produced');\n    }\n    async calc() {\n        const { m, d, px, rand } = this;\n        const tag = utils.taggedHash;\n        const t = this.initNonce(d, await tag(TAGS.aux, rand));\n        const { R, rx, k } = this.finalizeNonce(await tag(TAGS.nonce, t, px, m));\n        const e = schnorrChallengeFinalize(await tag(TAGS.challenge, rx, px, m));\n        const sig = this.finalizeSig(R, k, e, d);\n        if (!(await schnorrVerify(sig, m, px)))\n            this.error();\n        return sig;\n    }\n    calcSync() {\n        const { m, d, px, rand } = this;\n        const tag = utils.taggedHashSync;\n        const t = this.initNonce(d, tag(TAGS.aux, rand));\n        const { R, rx, k } = this.finalizeNonce(tag(TAGS.nonce, t, px, m));\n        const e = schnorrChallengeFinalize(tag(TAGS.challenge, rx, px, m));\n        const sig = this.finalizeSig(R, k, e, d);\n        if (!schnorrVerifySync(sig, m, px))\n            this.error();\n        return sig;\n    }\n}\nasync function schnorrSign(msg, privKey, auxRand) {\n    return new InternalSchnorrSignature(msg, privKey, auxRand).calc();\n}\nfunction schnorrSignSync(msg, privKey, auxRand) {\n    return new InternalSchnorrSignature(msg, privKey, auxRand).calcSync();\n}\nfunction initSchnorrVerify(signature, message, publicKey) {\n    const raw = signature instanceof SchnorrSignature;\n    const sig = raw ? signature : SchnorrSignature.fromHex(signature);\n    if (raw)\n        sig.assertValidity();\n    return {\n        ...sig,\n        m: ensureBytes(message),\n        P: normalizePublicKey(publicKey),\n    };\n}\nfunction finalizeSchnorrVerify(r, P, s, e) {\n    const R = Point.BASE.multiplyAndAddUnsafe(P, normalizePrivateKey(s), mod(-e, CURVE.n));\n    if (!R || !R.hasEvenY() || R.x !== r)\n        return false;\n    return true;\n}\nasync function schnorrVerify(signature, message, publicKey) {\n    try {\n        const { r, s, m, P } = initSchnorrVerify(signature, message, publicKey);\n        const e = schnorrChallengeFinalize(await utils.taggedHash(TAGS.challenge, numTo32b(r), P.toRawX(), m));\n        return finalizeSchnorrVerify(r, P, s, e);\n    }\n    catch (error) {\n        return false;\n    }\n}\nfunction schnorrVerifySync(signature, message, publicKey) {\n    try {\n        const { r, s, m, P } = initSchnorrVerify(signature, message, publicKey);\n        const e = schnorrChallengeFinalize(utils.taggedHashSync(TAGS.challenge, numTo32b(r), P.toRawX(), m));\n        return finalizeSchnorrVerify(r, P, s, e);\n    }\n    catch (error) {\n        if (error instanceof ShaError)\n            throw error;\n        return false;\n    }\n}\nexport const schnorr = {\n    Signature: SchnorrSignature,\n    getPublicKey: schnorrGetPublicKey,\n    sign: schnorrSign,\n    verify: schnorrVerify,\n    signSync: schnorrSignSync,\n    verifySync: schnorrVerifySync,\n};\nPoint.BASE._setWindowSize(8);\nconst crypto = {\n    node: nodeCrypto,\n    web: typeof self === 'object' && 'crypto' in self ? self.crypto : undefined,\n};\nconst TAGS = {\n    challenge: 'BIP0340/challenge',\n    aux: 'BIP0340/aux',\n    nonce: 'BIP0340/nonce',\n};\nconst TAGGED_HASH_PREFIXES = {};\nexport const utils = {\n    bytesToHex,\n    hexToBytes,\n    concatBytes,\n    mod,\n    invert,\n    isValidPrivateKey(privateKey) {\n        try {\n            normalizePrivateKey(privateKey);\n            return true;\n        }\n        catch (error) {\n            return false;\n        }\n    },\n    _bigintTo32Bytes: numTo32b,\n    _normalizePrivateKey: normalizePrivateKey,\n    hashToPrivateKey: (hash) => {\n        hash = ensureBytes(hash);\n        const minLen = groupLen + 8;\n        if (hash.length < minLen || hash.length > 1024) {\n            throw new Error(`Expected valid bytes of private key as per FIPS 186`);\n        }\n        const num = mod(bytesToNumber(hash), CURVE.n - _1n) + _1n;\n        return numTo32b(num);\n    },\n    randomBytes: (bytesLength = 32) => {\n        if (crypto.web) {\n            return crypto.web.getRandomValues(new Uint8Array(bytesLength));\n        }\n        else if (crypto.node) {\n            const { randomBytes } = crypto.node;\n            return Uint8Array.from(randomBytes(bytesLength));\n        }\n        else {\n            throw new Error(\"The environment doesn't have randomBytes function\");\n        }\n    },\n    randomPrivateKey: () => utils.hashToPrivateKey(utils.randomBytes(groupLen + 8)),\n    precompute(windowSize = 8, point = Point.BASE) {\n        const cached = point === Point.BASE ? point : new Point(point.x, point.y);\n        cached._setWindowSize(windowSize);\n        cached.multiply(_3n);\n        return cached;\n    },\n    sha256: async (...messages) => {\n        if (crypto.web) {\n            const buffer = await crypto.web.subtle.digest('SHA-256', concatBytes(...messages));\n            return new Uint8Array(buffer);\n        }\n        else if (crypto.node) {\n            const { createHash } = crypto.node;\n            const hash = createHash('sha256');\n            messages.forEach((m) => hash.update(m));\n            return Uint8Array.from(hash.digest());\n        }\n        else {\n            throw new Error(\"The environment doesn't have sha256 function\");\n        }\n    },\n    hmacSha256: async (key, ...messages) => {\n        if (crypto.web) {\n            const ckey = await crypto.web.subtle.importKey('raw', key, { name: 'HMAC', hash: { name: 'SHA-256' } }, false, ['sign']);\n            const message = concatBytes(...messages);\n            const buffer = await crypto.web.subtle.sign('HMAC', ckey, message);\n            return new Uint8Array(buffer);\n        }\n        else if (crypto.node) {\n            const { createHmac } = crypto.node;\n            const hash = createHmac('sha256', key);\n            messages.forEach((m) => hash.update(m));\n            return Uint8Array.from(hash.digest());\n        }\n        else {\n            throw new Error(\"The environment doesn't have hmac-sha256 function\");\n        }\n    },\n    sha256Sync: undefined,\n    hmacSha256Sync: undefined,\n    taggedHash: async (tag, ...messages) => {\n        let tagP = TAGGED_HASH_PREFIXES[tag];\n        if (tagP === undefined) {\n            const tagH = await utils.sha256(Uint8Array.from(tag, (c) => c.charCodeAt(0)));\n            tagP = concatBytes(tagH, tagH);\n            TAGGED_HASH_PREFIXES[tag] = tagP;\n        }\n        return utils.sha256(tagP, ...messages);\n    },\n    taggedHashSync: (tag, ...messages) => {\n        if (typeof _sha256Sync !== 'function')\n            throw new ShaError('sha256Sync is undefined, you need to set it');\n        let tagP = TAGGED_HASH_PREFIXES[tag];\n        if (tagP === undefined) {\n            const tagH = _sha256Sync(Uint8Array.from(tag, (c) => c.charCodeAt(0)));\n            tagP = concatBytes(tagH, tagH);\n            TAGGED_HASH_PREFIXES[tag] = tagP;\n        }\n        return _sha256Sync(tagP, ...messages);\n    },\n    _JacobianPoint: JacobianPoint,\n};\nObject.defineProperties(utils, {\n    sha256Sync: {\n        configurable: false,\n        get() {\n            return _sha256Sync;\n        },\n        set(val) {\n            if (!_sha256Sync)\n                _sha256Sync = val;\n        },\n    },\n    hmacSha256Sync: {\n        configurable: false,\n        get() {\n            return _hmacSha256Sync;\n        },\n        set(val) {\n            if (!_hmacSha256Sync)\n                _hmacSha256Sync = val;\n        },\n    },\n});\n","import * as secp from \"@noble/secp256k1\";\nimport { concat } from \"@waku/utils/bytes\";\nimport sha3 from \"js-sha3\";\n/**\n * ECDSA Sign a message with the given private key.\n *\n *  @param message The message to sign, usually a hash.\n *  @param privateKey The ECDSA private key to use to sign the message.\n *\n *  @returns The signature and the recovery id concatenated.\n */\nexport async function sign(message, privateKey) {\n    const [signature, recoveryId] = await secp.sign(message, privateKey, {\n        recovered: true,\n        der: false\n    });\n    return concat([signature, new Uint8Array([recoveryId])], signature.length + 1);\n}\nexport function keccak256(input) {\n    return new Uint8Array(sha3.keccak256.arrayBuffer(input));\n}\nexport function compressPublicKey(publicKey) {\n    if (publicKey.length === 64) {\n        publicKey = concat([new Uint8Array([4]), publicKey], 65);\n    }\n    const point = secp.Point.fromHex(publicKey);\n    return point.toRawBytes(true);\n}\n/**\n * Verify an ECDSA signature.\n */\nexport function verifySignature(signature, message, publicKey) {\n    try {\n        const _signature = secp.Signature.fromCompact(signature.slice(0, 64));\n        return secp.verify(_signature, message, publicKey);\n    }\n    catch {\n        return false;\n    }\n}\n//# sourceMappingURL=crypto.js.map","// Maximum encoded size of an ENR\nexport const MAX_RECORD_SIZE = 300;\nexport const ERR_INVALID_ID = \"Invalid record id\";\nexport const ERR_NO_SIGNATURE = \"No valid signature found\";\n// The maximum length of byte size of a multiaddr to encode in the `multiaddr` field\n// The size is a big endian 16-bit unsigned integer\nexport const MULTIADDR_LENGTH_SIZE = 2;\n//# sourceMappingURL=constants.js.map","import { multiaddrFromFields } from \"./multiaddr_from_fields.js\";\nexport function locationMultiaddrFromEnrFields(enr, protocol) {\n    switch (protocol) {\n        case \"udp\":\n            return (locationMultiaddrFromEnrFields(enr, \"udp4\") ||\n                locationMultiaddrFromEnrFields(enr, \"udp6\"));\n        case \"tcp\":\n            return (locationMultiaddrFromEnrFields(enr, \"tcp4\") ||\n                locationMultiaddrFromEnrFields(enr, \"tcp6\"));\n    }\n    const isIpv6 = protocol.endsWith(\"6\");\n    const ipVal = enr.get(isIpv6 ? \"ip6\" : \"ip\");\n    if (!ipVal)\n        return;\n    const protoName = protocol.slice(0, 3);\n    let protoVal;\n    switch (protoName) {\n        case \"udp\":\n            protoVal = isIpv6 ? enr.get(\"udp6\") : enr.get(\"udp\");\n            break;\n        case \"tcp\":\n            protoVal = isIpv6 ? enr.get(\"tcp6\") : enr.get(\"tcp\");\n            break;\n        default:\n            return;\n    }\n    if (!protoVal)\n        return;\n    return multiaddrFromFields(isIpv6 ? \"ip6\" : \"ip4\", protoName, ipVal, protoVal);\n}\n//# sourceMappingURL=get_multiaddr.js.map","import { multiaddr } from \"@multiformats/multiaddr\";\nimport { convertToString } from \"@multiformats/multiaddr/convert\";\nexport function multiaddrFromFields(ipFamily, protocol, ipBytes, protocolBytes) {\n    let ma = multiaddr(\"/\" + ipFamily + \"/\" + convertToString(ipFamily, ipBytes));\n    ma = ma.encapsulate(multiaddr(\"/\" + protocol + \"/\" + convertToString(protocol, protocolBytes)));\n    return ma;\n}\n//# sourceMappingURL=multiaddr_from_fields.js.map","import { multiaddr } from \"@multiformats/multiaddr\";\nimport { MULTIADDR_LENGTH_SIZE } from \"./constants.js\";\nexport function decodeMultiaddrs(bytes) {\n    const multiaddrs = [];\n    let index = 0;\n    while (index < bytes.length) {\n        const sizeDataView = new DataView(bytes.buffer, index, MULTIADDR_LENGTH_SIZE);\n        const size = sizeDataView.getUint16(0);\n        index += MULTIADDR_LENGTH_SIZE;\n        const multiaddrBytes = bytes.slice(index, index + size);\n        index += size;\n        multiaddrs.push(multiaddr(multiaddrBytes));\n    }\n    return multiaddrs;\n}\nexport function encodeMultiaddrs(multiaddrs) {\n    const totalLength = multiaddrs.reduce((acc, ma) => acc + MULTIADDR_LENGTH_SIZE + ma.bytes.length, 0);\n    const bytes = new Uint8Array(totalLength);\n    const dataView = new DataView(bytes.buffer);\n    let index = 0;\n    multiaddrs.forEach((multiaddr) => {\n        if (multiaddr.getPeerId())\n            throw new Error(\"`multiaddr` field MUST not contain peer id\");\n        // Prepend the size of the next entry\n        dataView.setUint16(index, multiaddr.bytes.length);\n        index += MULTIADDR_LENGTH_SIZE;\n        bytes.set(multiaddr.bytes, index);\n        index += multiaddr.bytes.length;\n    });\n    return bytes;\n}\n//# sourceMappingURL=multiaddrs_codec.js.map","export function encodeWaku2(protocols) {\n    let byte = 0;\n    if (protocols.lightPush)\n        byte += 1;\n    byte = byte << 1;\n    if (protocols.filter)\n        byte += 1;\n    byte = byte << 1;\n    if (protocols.store)\n        byte += 1;\n    byte = byte << 1;\n    if (protocols.relay)\n        byte += 1;\n    return byte;\n}\nexport function decodeWaku2(byte) {\n    const waku2 = {\n        relay: false,\n        store: false,\n        filter: false,\n        lightPush: false\n    };\n    if (byte % 2)\n        waku2.relay = true;\n    byte = byte >> 1;\n    if (byte % 2)\n        waku2.store = true;\n    byte = byte >> 1;\n    if (byte % 2)\n        waku2.filter = true;\n    byte = byte >> 1;\n    if (byte % 2)\n        waku2.lightPush = true;\n    return waku2;\n}\n//# sourceMappingURL=waku2_codec.js.map","import { convertToBytes, convertToString } from \"@multiformats/multiaddr/convert\";\nimport { decodeRelayShard } from \"@waku/utils\";\nimport { bytesToUtf8 } from \"@waku/utils/bytes\";\nimport { ERR_INVALID_ID } from \"./constants.js\";\nimport { decodeMultiaddrs, encodeMultiaddrs } from \"./multiaddrs_codec.js\";\nimport { decodeWaku2, encodeWaku2 } from \"./waku2_codec.js\";\nexport class RawEnr extends Map {\n    seq;\n    signature;\n    constructor(kvs = {}, seq = BigInt(1), signature) {\n        super(Object.entries(kvs));\n        this.seq = seq;\n        this.signature = signature;\n    }\n    set(k, v) {\n        this.signature = undefined;\n        this.seq++;\n        return super.set(k, v);\n    }\n    get id() {\n        const id = this.get(\"id\");\n        if (!id)\n            throw new Error(\"id not found.\");\n        return bytesToUtf8(id);\n    }\n    get publicKey() {\n        switch (this.id) {\n            case \"v4\":\n                return this.get(\"secp256k1\");\n            default:\n                throw new Error(ERR_INVALID_ID);\n        }\n    }\n    get rs() {\n        const rs = this.get(\"rs\");\n        if (!rs)\n            return undefined;\n        return decodeRelayShard(rs);\n    }\n    get rsv() {\n        const rsv = this.get(\"rsv\");\n        if (!rsv)\n            return undefined;\n        return decodeRelayShard(rsv);\n    }\n    get ip() {\n        return getStringValue(this, \"ip\", \"ip4\");\n    }\n    set ip(ip) {\n        setStringValue(this, \"ip\", \"ip4\", ip);\n    }\n    get tcp() {\n        return getNumberAsStringValue(this, \"tcp\", \"tcp\");\n    }\n    set tcp(port) {\n        setNumberAsStringValue(this, \"tcp\", \"tcp\", port);\n    }\n    get udp() {\n        return getNumberAsStringValue(this, \"udp\", \"udp\");\n    }\n    set udp(port) {\n        setNumberAsStringValue(this, \"udp\", \"udp\", port);\n    }\n    get ip6() {\n        return getStringValue(this, \"ip6\", \"ip6\");\n    }\n    set ip6(ip) {\n        setStringValue(this, \"ip6\", \"ip6\", ip);\n    }\n    get tcp6() {\n        return getNumberAsStringValue(this, \"tcp6\", \"tcp\");\n    }\n    set tcp6(port) {\n        setNumberAsStringValue(this, \"tcp6\", \"tcp\", port);\n    }\n    get udp6() {\n        return getNumberAsStringValue(this, \"udp6\", \"udp\");\n    }\n    set udp6(port) {\n        setNumberAsStringValue(this, \"udp6\", \"udp\", port);\n    }\n    /**\n     * Get the `multiaddrs` field from ENR.\n     *\n     * This field is used to store multiaddresses that cannot be stored with the current ENR pre-defined keys.\n     * These can be a multiaddresses that include encapsulation (e.g. wss) or do not use `ip4` nor `ip6` for the host\n     * address (e.g. `dns4`, `dnsaddr`, etc)..\n     *\n     * If the peer information only contains information that can be represented with the ENR pre-defined keys\n     * (ip, tcp, etc) then the usage of { @link ENR.getLocationMultiaddr } should be preferred.\n     *\n     * The multiaddresses stored in this field are expected to be location multiaddresses, ie, peer id less.\n     */\n    get multiaddrs() {\n        const raw = this.get(\"multiaddrs\");\n        if (raw)\n            return decodeMultiaddrs(raw);\n        return;\n    }\n    /**\n     * Set the `multiaddrs` field on the ENR.\n     *\n     * This field is used to store multiaddresses that cannot be stored with the current ENR pre-defined keys.\n     * These can be a multiaddresses that include encapsulation (e.g. wss) or do not use `ip4` nor `ip6` for the host\n     * address (e.g. `dns4`, `dnsaddr`, etc)..\n     *\n     * If the peer information only contains information that can be represented with the ENR pre-defined keys\n     * (ip, tcp, etc) then the usage of { @link ENR.setLocationMultiaddr } should be preferred.\n     * The multiaddresses stored in this field must be location multiaddresses,\n     * ie, without a peer id.\n     */\n    set multiaddrs(multiaddrs) {\n        deleteUndefined(this, \"multiaddrs\", multiaddrs, encodeMultiaddrs);\n    }\n    /**\n     * Get the `waku2` field from ENR.\n     */\n    get waku2() {\n        const raw = this.get(\"waku2\");\n        if (raw)\n            return decodeWaku2(raw[0]);\n        return;\n    }\n    /**\n     * Set the `waku2` field on the ENR.\n     */\n    set waku2(waku2) {\n        deleteUndefined(this, \"waku2\", waku2, (w) => new Uint8Array([encodeWaku2(w)]));\n    }\n}\nfunction getStringValue(map, key, proto) {\n    const raw = map.get(key);\n    if (!raw)\n        return;\n    return convertToString(proto, raw);\n}\nfunction getNumberAsStringValue(map, key, proto) {\n    const raw = map.get(key);\n    if (!raw)\n        return;\n    return Number(convertToString(proto, raw));\n}\nfunction setStringValue(map, key, proto, value) {\n    deleteUndefined(map, key, value, convertToBytes.bind({}, proto));\n}\nfunction setNumberAsStringValue(map, key, proto, value) {\n    setStringValue(map, key, proto, value?.toString(10));\n}\nfunction deleteUndefined(map, key, value, transform) {\n    if (value !== undefined) {\n        map.set(key, transform(value));\n    }\n    else {\n        map.delete(key);\n    }\n}\n//# sourceMappingURL=raw_enr.js.map","import * as secp from \"@noble/secp256k1\";\nimport { bytesToHex } from \"@waku/utils/bytes\";\nimport { keccak256 } from \"./crypto.js\";\nexport async function sign(privKey, msg) {\n    return secp.sign(keccak256(msg), privKey, {\n        der: false\n    });\n}\nexport function nodeId(pubKey) {\n    const publicKey = secp.Point.fromHex(pubKey);\n    const uncompressedPubkey = publicKey.toRawBytes(false);\n    return bytesToHex(keccak256(uncompressedPubkey.slice(1)));\n}\n//# sourceMappingURL=v4.js.map","import { Logger } from \"@waku/utils\";\nimport { ERR_INVALID_ID } from \"./constants.js\";\nimport { keccak256, verifySignature } from \"./crypto.js\";\nimport { locationMultiaddrFromEnrFields } from \"./get_multiaddr.js\";\nimport { createPeerIdFromPublicKey } from \"./peer_id.js\";\nimport { RawEnr } from \"./raw_enr.js\";\nimport * as v4 from \"./v4.js\";\nconst log = new Logger(\"enr\");\nexport var TransportProtocol;\n(function (TransportProtocol) {\n    TransportProtocol[\"TCP\"] = \"tcp\";\n    TransportProtocol[\"UDP\"] = \"udp\";\n})(TransportProtocol || (TransportProtocol = {}));\nexport var TransportProtocolPerIpVersion;\n(function (TransportProtocolPerIpVersion) {\n    TransportProtocolPerIpVersion[\"TCP4\"] = \"tcp4\";\n    TransportProtocolPerIpVersion[\"UDP4\"] = \"udp4\";\n    TransportProtocolPerIpVersion[\"TCP6\"] = \"tcp6\";\n    TransportProtocolPerIpVersion[\"UDP6\"] = \"udp6\";\n})(TransportProtocolPerIpVersion || (TransportProtocolPerIpVersion = {}));\nexport class ENR extends RawEnr {\n    static RECORD_PREFIX = \"enr:\";\n    peerId;\n    static async create(kvs = {}, seq = BigInt(1), signature) {\n        const enr = new ENR(kvs, seq, signature);\n        try {\n            const publicKey = enr.publicKey;\n            if (publicKey) {\n                enr.peerId = await createPeerIdFromPublicKey(publicKey);\n            }\n        }\n        catch (e) {\n            log.error(\"Could not calculate peer id for ENR\", e);\n        }\n        return enr;\n    }\n    get nodeId() {\n        switch (this.id) {\n            case \"v4\":\n                return this.publicKey ? v4.nodeId(this.publicKey) : undefined;\n            default:\n                throw new Error(ERR_INVALID_ID);\n        }\n    }\n    getLocationMultiaddr = locationMultiaddrFromEnrFields.bind({}, this);\n    get shardInfo() {\n        if (this.rs && this.rsv) {\n            log.warn(\"ENR contains both `rs` and `rsv` fields.\");\n        }\n        return this.rs || this.rsv;\n    }\n    setLocationMultiaddr(multiaddr) {\n        const protoNames = multiaddr.protoNames();\n        if (protoNames.length !== 2 &&\n            protoNames[1] !== \"udp\" &&\n            protoNames[1] !== \"tcp\") {\n            throw new Error(\"Invalid multiaddr\");\n        }\n        const tuples = multiaddr.tuples();\n        if (!tuples[0][1] || !tuples[1][1]) {\n            throw new Error(\"Invalid multiaddr\");\n        }\n        // IPv4\n        if (tuples[0][0] === 4) {\n            this.set(\"ip\", tuples[0][1]);\n            this.set(protoNames[1], tuples[1][1]);\n        }\n        else {\n            this.set(\"ip6\", tuples[0][1]);\n            this.set(protoNames[1] + \"6\", tuples[1][1]);\n        }\n    }\n    getAllLocationMultiaddrs() {\n        const multiaddrs = [];\n        for (const protocol of Object.values(TransportProtocolPerIpVersion)) {\n            const ma = this.getLocationMultiaddr(protocol);\n            if (ma)\n                multiaddrs.push(ma);\n        }\n        const _multiaddrs = this.multiaddrs ?? [];\n        return multiaddrs.concat(_multiaddrs).map((ma) => {\n            if (this.peerId) {\n                return ma.encapsulate(`/p2p/${this.peerId.toString()}`);\n            }\n            return ma;\n        });\n    }\n    get peerInfo() {\n        const id = this.peerId;\n        if (!id)\n            return;\n        return {\n            id,\n            multiaddrs: this.getAllLocationMultiaddrs()\n        };\n    }\n    /**\n     * Returns the full multiaddr from the ENR fields matching the provided\n     * `protocol` parameter.\n     * To return full multiaddrs from the `multiaddrs` ENR field,\n     * use { @link ENR.getFullMultiaddrs }.\n     *\n     * @param protocol\n     */\n    getFullMultiaddr(protocol) {\n        if (this.peerId) {\n            const locationMultiaddr = this.getLocationMultiaddr(protocol);\n            if (locationMultiaddr) {\n                return locationMultiaddr.encapsulate(`/p2p/${this.peerId.toString()}`);\n            }\n        }\n        return;\n    }\n    /**\n     * Returns the full multiaddrs from the `multiaddrs` ENR field.\n     */\n    getFullMultiaddrs() {\n        if (this.peerId && this.multiaddrs) {\n            const peerId = this.peerId;\n            return this.multiaddrs.map((ma) => {\n                return ma.encapsulate(`/p2p/${peerId.toString()}`);\n            });\n        }\n        return [];\n    }\n    verify(data, signature) {\n        if (!this.get(\"id\") || this.id !== \"v4\") {\n            throw new Error(ERR_INVALID_ID);\n        }\n        if (!this.publicKey) {\n            throw new Error(\"Failed to verify ENR: No public key\");\n        }\n        return verifySignature(signature, keccak256(data), this.publicKey);\n    }\n    async sign(data, privateKey) {\n        switch (this.id) {\n            case \"v4\":\n                this.signature = await v4.sign(privateKey, data);\n                break;\n            default:\n                throw new Error(ERR_INVALID_ID);\n        }\n        return this.signature;\n    }\n}\n//# sourceMappingURL=enr.js.map","import { unmarshalPrivateKey, unmarshalPublicKey } from \"@libp2p/crypto/keys\";\nimport { supportedKeys } from \"@libp2p/crypto/keys\";\nimport { peerIdFromKeys } from \"@libp2p/peer-id\";\nexport function createPeerIdFromPublicKey(publicKey) {\n    const _publicKey = new supportedKeys.secp256k1.Secp256k1PublicKey(publicKey);\n    return peerIdFromKeys(_publicKey.bytes, undefined);\n}\nexport function getPublicKeyFromPeerId(peerId) {\n    if (peerId.type !== \"secp256k1\") {\n        throw new Error(\"Unsupported peer id type\");\n    }\n    if (!peerId.publicKey) {\n        throw new Error(\"Public key not present on peer id\");\n    }\n    return unmarshalPublicKey(peerId.publicKey).marshal();\n}\n// Only used in tests\nexport async function getPrivateKeyFromPeerId(peerId) {\n    if (peerId.type !== \"secp256k1\") {\n        throw new Error(\"Unsupported peer id type\");\n    }\n    if (!peerId.privateKey) {\n        throw new Error(\"Private key not present on peer id\");\n    }\n    const privateKey = await unmarshalPrivateKey(peerId.privateKey);\n    return privateKey.marshal();\n}\n//# sourceMappingURL=peer_id.js.map","\"use strict\";\nlet _permanentCensorErrors = false;\nlet _censorErrors = false;\nconst LogLevels = { debug: 1, \"default\": 2, info: 2, warning: 3, error: 4, off: 5 };\nlet _logLevel = LogLevels[\"default\"];\nimport { version } from \"./_version\";\nlet _globalLogger = null;\nfunction _checkNormalize() {\n    try {\n        const missing = [];\n        // Make sure all forms of normalization are supported\n        [\"NFD\", \"NFC\", \"NFKD\", \"NFKC\"].forEach((form) => {\n            try {\n                if (\"test\".normalize(form) !== \"test\") {\n                    throw new Error(\"bad normalize\");\n                }\n                ;\n            }\n            catch (error) {\n                missing.push(form);\n            }\n        });\n        if (missing.length) {\n            throw new Error(\"missing \" + missing.join(\", \"));\n        }\n        if (String.fromCharCode(0xe9).normalize(\"NFD\") !== String.fromCharCode(0x65, 0x0301)) {\n            throw new Error(\"broken implementation\");\n        }\n    }\n    catch (error) {\n        return error.message;\n    }\n    return null;\n}\nconst _normalizeError = _checkNormalize();\nexport var LogLevel;\n(function (LogLevel) {\n    LogLevel[\"DEBUG\"] = \"DEBUG\";\n    LogLevel[\"INFO\"] = \"INFO\";\n    LogLevel[\"WARNING\"] = \"WARNING\";\n    LogLevel[\"ERROR\"] = \"ERROR\";\n    LogLevel[\"OFF\"] = \"OFF\";\n})(LogLevel || (LogLevel = {}));\nexport var ErrorCode;\n(function (ErrorCode) {\n    ///////////////////\n    // Generic Errors\n    // Unknown Error\n    ErrorCode[\"UNKNOWN_ERROR\"] = \"UNKNOWN_ERROR\";\n    // Not Implemented\n    ErrorCode[\"NOT_IMPLEMENTED\"] = \"NOT_IMPLEMENTED\";\n    // Unsupported Operation\n    //   - operation\n    ErrorCode[\"UNSUPPORTED_OPERATION\"] = \"UNSUPPORTED_OPERATION\";\n    // Network Error (i.e. Ethereum Network, such as an invalid chain ID)\n    //   - event (\"noNetwork\" is not re-thrown in provider.ready; otherwise thrown)\n    ErrorCode[\"NETWORK_ERROR\"] = \"NETWORK_ERROR\";\n    // Some sort of bad response from the server\n    ErrorCode[\"SERVER_ERROR\"] = \"SERVER_ERROR\";\n    // Timeout\n    ErrorCode[\"TIMEOUT\"] = \"TIMEOUT\";\n    ///////////////////\n    // Operational  Errors\n    // Buffer Overrun\n    ErrorCode[\"BUFFER_OVERRUN\"] = \"BUFFER_OVERRUN\";\n    // Numeric Fault\n    //   - operation: the operation being executed\n    //   - fault: the reason this faulted\n    ErrorCode[\"NUMERIC_FAULT\"] = \"NUMERIC_FAULT\";\n    ///////////////////\n    // Argument Errors\n    // Missing new operator to an object\n    //  - name: The name of the class\n    ErrorCode[\"MISSING_NEW\"] = \"MISSING_NEW\";\n    // Invalid argument (e.g. value is incompatible with type) to a function:\n    //   - argument: The argument name that was invalid\n    //   - value: The value of the argument\n    ErrorCode[\"INVALID_ARGUMENT\"] = \"INVALID_ARGUMENT\";\n    // Missing argument to a function:\n    //   - count: The number of arguments received\n    //   - expectedCount: The number of arguments expected\n    ErrorCode[\"MISSING_ARGUMENT\"] = \"MISSING_ARGUMENT\";\n    // Too many arguments\n    //   - count: The number of arguments received\n    //   - expectedCount: The number of arguments expected\n    ErrorCode[\"UNEXPECTED_ARGUMENT\"] = \"UNEXPECTED_ARGUMENT\";\n    ///////////////////\n    // Blockchain Errors\n    // Call exception\n    //  - transaction: the transaction\n    //  - address?: the contract address\n    //  - args?: The arguments passed into the function\n    //  - method?: The Solidity method signature\n    //  - errorSignature?: The EIP848 error signature\n    //  - errorArgs?: The EIP848 error parameters\n    //  - reason: The reason (only for EIP848 \"Error(string)\")\n    ErrorCode[\"CALL_EXCEPTION\"] = \"CALL_EXCEPTION\";\n    // Insufficient funds (< value + gasLimit * gasPrice)\n    //   - transaction: the transaction attempted\n    ErrorCode[\"INSUFFICIENT_FUNDS\"] = \"INSUFFICIENT_FUNDS\";\n    // Nonce has already been used\n    //   - transaction: the transaction attempted\n    ErrorCode[\"NONCE_EXPIRED\"] = \"NONCE_EXPIRED\";\n    // The replacement fee for the transaction is too low\n    //   - transaction: the transaction attempted\n    ErrorCode[\"REPLACEMENT_UNDERPRICED\"] = \"REPLACEMENT_UNDERPRICED\";\n    // The gas limit could not be estimated\n    //   - transaction: the transaction passed to estimateGas\n    ErrorCode[\"UNPREDICTABLE_GAS_LIMIT\"] = \"UNPREDICTABLE_GAS_LIMIT\";\n    // The transaction was replaced by one with a higher gas price\n    //   - reason: \"cancelled\", \"replaced\" or \"repriced\"\n    //   - cancelled: true if reason == \"cancelled\" or reason == \"replaced\")\n    //   - hash: original transaction hash\n    //   - replacement: the full TransactionsResponse for the replacement\n    //   - receipt: the receipt of the replacement\n    ErrorCode[\"TRANSACTION_REPLACED\"] = \"TRANSACTION_REPLACED\";\n    ///////////////////\n    // Interaction Errors\n    // The user rejected the action, such as signing a message or sending\n    // a transaction\n    ErrorCode[\"ACTION_REJECTED\"] = \"ACTION_REJECTED\";\n})(ErrorCode || (ErrorCode = {}));\n;\nconst HEX = \"0123456789abcdef\";\nexport class Logger {\n    constructor(version) {\n        Object.defineProperty(this, \"version\", {\n            enumerable: true,\n            value: version,\n            writable: false\n        });\n    }\n    _log(logLevel, args) {\n        const level = logLevel.toLowerCase();\n        if (LogLevels[level] == null) {\n            this.throwArgumentError(\"invalid log level name\", \"logLevel\", logLevel);\n        }\n        if (_logLevel > LogLevels[level]) {\n            return;\n        }\n        console.log.apply(console, args);\n    }\n    debug(...args) {\n        this._log(Logger.levels.DEBUG, args);\n    }\n    info(...args) {\n        this._log(Logger.levels.INFO, args);\n    }\n    warn(...args) {\n        this._log(Logger.levels.WARNING, args);\n    }\n    makeError(message, code, params) {\n        // Errors are being censored\n        if (_censorErrors) {\n            return this.makeError(\"censored error\", code, {});\n        }\n        if (!code) {\n            code = Logger.errors.UNKNOWN_ERROR;\n        }\n        if (!params) {\n            params = {};\n        }\n        const messageDetails = [];\n        Object.keys(params).forEach((key) => {\n            const value = params[key];\n            try {\n                if (value instanceof Uint8Array) {\n                    let hex = \"\";\n                    for (let i = 0; i < value.length; i++) {\n                        hex += HEX[value[i] >> 4];\n                        hex += HEX[value[i] & 0x0f];\n                    }\n                    messageDetails.push(key + \"=Uint8Array(0x\" + hex + \")\");\n                }\n                else {\n                    messageDetails.push(key + \"=\" + JSON.stringify(value));\n                }\n            }\n            catch (error) {\n                messageDetails.push(key + \"=\" + JSON.stringify(params[key].toString()));\n            }\n        });\n        messageDetails.push(`code=${code}`);\n        messageDetails.push(`version=${this.version}`);\n        const reason = message;\n        let url = \"\";\n        switch (code) {\n            case ErrorCode.NUMERIC_FAULT: {\n                url = \"NUMERIC_FAULT\";\n                const fault = message;\n                switch (fault) {\n                    case \"overflow\":\n                    case \"underflow\":\n                    case \"division-by-zero\":\n                        url += \"-\" + fault;\n                        break;\n                    case \"negative-power\":\n                    case \"negative-width\":\n                        url += \"-unsupported\";\n                        break;\n                    case \"unbound-bitwise-result\":\n                        url += \"-unbound-result\";\n                        break;\n                }\n                break;\n            }\n            case ErrorCode.CALL_EXCEPTION:\n            case ErrorCode.INSUFFICIENT_FUNDS:\n            case ErrorCode.MISSING_NEW:\n            case ErrorCode.NONCE_EXPIRED:\n            case ErrorCode.REPLACEMENT_UNDERPRICED:\n            case ErrorCode.TRANSACTION_REPLACED:\n            case ErrorCode.UNPREDICTABLE_GAS_LIMIT:\n                url = code;\n                break;\n        }\n        if (url) {\n            message += \" [ See: https:/\\/links.ethers.org/v5-errors-\" + url + \" ]\";\n        }\n        if (messageDetails.length) {\n            message += \" (\" + messageDetails.join(\", \") + \")\";\n        }\n        // @TODO: Any??\n        const error = new Error(message);\n        error.reason = reason;\n        error.code = code;\n        Object.keys(params).forEach(function (key) {\n            error[key] = params[key];\n        });\n        return error;\n    }\n    throwError(message, code, params) {\n        throw this.makeError(message, code, params);\n    }\n    throwArgumentError(message, name, value) {\n        return this.throwError(message, Logger.errors.INVALID_ARGUMENT, {\n            argument: name,\n            value: value\n        });\n    }\n    assert(condition, message, code, params) {\n        if (!!condition) {\n            return;\n        }\n        this.throwError(message, code, params);\n    }\n    assertArgument(condition, message, name, value) {\n        if (!!condition) {\n            return;\n        }\n        this.throwArgumentError(message, name, value);\n    }\n    checkNormalize(message) {\n        if (message == null) {\n            message = \"platform missing String.prototype.normalize\";\n        }\n        if (_normalizeError) {\n            this.throwError(\"platform missing String.prototype.normalize\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"String.prototype.normalize\", form: _normalizeError\n            });\n        }\n    }\n    checkSafeUint53(value, message) {\n        if (typeof (value) !== \"number\") {\n            return;\n        }\n        if (message == null) {\n            message = \"value not safe\";\n        }\n        if (value < 0 || value >= 0x1fffffffffffff) {\n            this.throwError(message, Logger.errors.NUMERIC_FAULT, {\n                operation: \"checkSafeInteger\",\n                fault: \"out-of-safe-range\",\n                value: value\n            });\n        }\n        if (value % 1) {\n            this.throwError(message, Logger.errors.NUMERIC_FAULT, {\n                operation: \"checkSafeInteger\",\n                fault: \"non-integer\",\n                value: value\n            });\n        }\n    }\n    checkArgumentCount(count, expectedCount, message) {\n        if (message) {\n            message = \": \" + message;\n        }\n        else {\n            message = \"\";\n        }\n        if (count < expectedCount) {\n            this.throwError(\"missing argument\" + message, Logger.errors.MISSING_ARGUMENT, {\n                count: count,\n                expectedCount: expectedCount\n            });\n        }\n        if (count > expectedCount) {\n            this.throwError(\"too many arguments\" + message, Logger.errors.UNEXPECTED_ARGUMENT, {\n                count: count,\n                expectedCount: expectedCount\n            });\n        }\n    }\n    checkNew(target, kind) {\n        if (target === Object || target == null) {\n            this.throwError(\"missing new\", Logger.errors.MISSING_NEW, { name: kind.name });\n        }\n    }\n    checkAbstract(target, kind) {\n        if (target === kind) {\n            this.throwError(\"cannot instantiate abstract class \" + JSON.stringify(kind.name) + \" directly; use a sub-class\", Logger.errors.UNSUPPORTED_OPERATION, { name: target.name, operation: \"new\" });\n        }\n        else if (target === Object || target == null) {\n            this.throwError(\"missing new\", Logger.errors.MISSING_NEW, { name: kind.name });\n        }\n    }\n    static globalLogger() {\n        if (!_globalLogger) {\n            _globalLogger = new Logger(version);\n        }\n        return _globalLogger;\n    }\n    static setCensorship(censorship, permanent) {\n        if (!censorship && permanent) {\n            this.globalLogger().throwError(\"cannot permanently disable censorship\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"setCensorship\"\n            });\n        }\n        if (_permanentCensorErrors) {\n            if (!censorship) {\n                return;\n            }\n            this.globalLogger().throwError(\"error censorship permanent\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"setCensorship\"\n            });\n        }\n        _censorErrors = !!censorship;\n        _permanentCensorErrors = !!permanent;\n    }\n    static setLogLevel(logLevel) {\n        const level = LogLevels[logLevel.toLowerCase()];\n        if (level == null) {\n            Logger.globalLogger().warn(\"invalid log level - \" + logLevel);\n            return;\n        }\n        _logLevel = level;\n    }\n    static from(version) {\n        return new Logger(version);\n    }\n}\nLogger.errors = ErrorCode;\nLogger.levels = LogLevel;\n//# sourceMappingURL=index.js.map","export const version = \"logger/5.7.0\";\n//# sourceMappingURL=_version.js.map","export const version = \"bytes/5.7.0\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n///////////////////////////////\nfunction isHexable(value) {\n    return !!(value.toHexString);\n}\nfunction addSlice(array) {\n    if (array.slice) {\n        return array;\n    }\n    array.slice = function () {\n        const args = Array.prototype.slice.call(arguments);\n        return addSlice(new Uint8Array(Array.prototype.slice.apply(array, args)));\n    };\n    return array;\n}\nexport function isBytesLike(value) {\n    return ((isHexString(value) && !(value.length % 2)) || isBytes(value));\n}\nfunction isInteger(value) {\n    return (typeof (value) === \"number\" && value == value && (value % 1) === 0);\n}\nexport function isBytes(value) {\n    if (value == null) {\n        return false;\n    }\n    if (value.constructor === Uint8Array) {\n        return true;\n    }\n    if (typeof (value) === \"string\") {\n        return false;\n    }\n    if (!isInteger(value.length) || value.length < 0) {\n        return false;\n    }\n    for (let i = 0; i < value.length; i++) {\n        const v = value[i];\n        if (!isInteger(v) || v < 0 || v >= 256) {\n            return false;\n        }\n    }\n    return true;\n}\nexport function arrayify(value, options) {\n    if (!options) {\n        options = {};\n    }\n    if (typeof (value) === \"number\") {\n        logger.checkSafeUint53(value, \"invalid arrayify value\");\n        const result = [];\n        while (value) {\n            result.unshift(value & 0xff);\n            value = parseInt(String(value / 256));\n        }\n        if (result.length === 0) {\n            result.push(0);\n        }\n        return addSlice(new Uint8Array(result));\n    }\n    if (options.allowMissingPrefix && typeof (value) === \"string\" && value.substring(0, 2) !== \"0x\") {\n        value = \"0x\" + value;\n    }\n    if (isHexable(value)) {\n        value = value.toHexString();\n    }\n    if (isHexString(value)) {\n        let hex = value.substring(2);\n        if (hex.length % 2) {\n            if (options.hexPad === \"left\") {\n                hex = \"0\" + hex;\n            }\n            else if (options.hexPad === \"right\") {\n                hex += \"0\";\n            }\n            else {\n                logger.throwArgumentError(\"hex data is odd-length\", \"value\", value);\n            }\n        }\n        const result = [];\n        for (let i = 0; i < hex.length; i += 2) {\n            result.push(parseInt(hex.substring(i, i + 2), 16));\n        }\n        return addSlice(new Uint8Array(result));\n    }\n    if (isBytes(value)) {\n        return addSlice(new Uint8Array(value));\n    }\n    return logger.throwArgumentError(\"invalid arrayify value\", \"value\", value);\n}\nexport function concat(items) {\n    const objects = items.map(item => arrayify(item));\n    const length = objects.reduce((accum, item) => (accum + item.length), 0);\n    const result = new Uint8Array(length);\n    objects.reduce((offset, object) => {\n        result.set(object, offset);\n        return offset + object.length;\n    }, 0);\n    return addSlice(result);\n}\nexport function stripZeros(value) {\n    let result = arrayify(value);\n    if (result.length === 0) {\n        return result;\n    }\n    // Find the first non-zero entry\n    let start = 0;\n    while (start < result.length && result[start] === 0) {\n        start++;\n    }\n    // If we started with zeros, strip them\n    if (start) {\n        result = result.slice(start);\n    }\n    return result;\n}\nexport function zeroPad(value, length) {\n    value = arrayify(value);\n    if (value.length > length) {\n        logger.throwArgumentError(\"value out of range\", \"value\", arguments[0]);\n    }\n    const result = new Uint8Array(length);\n    result.set(value, length - value.length);\n    return addSlice(result);\n}\nexport function isHexString(value, length) {\n    if (typeof (value) !== \"string\" || !value.match(/^0x[0-9A-Fa-f]*$/)) {\n        return false;\n    }\n    if (length && value.length !== 2 + 2 * length) {\n        return false;\n    }\n    return true;\n}\nconst HexCharacters = \"0123456789abcdef\";\nexport function hexlify(value, options) {\n    if (!options) {\n        options = {};\n    }\n    if (typeof (value) === \"number\") {\n        logger.checkSafeUint53(value, \"invalid hexlify value\");\n        let hex = \"\";\n        while (value) {\n            hex = HexCharacters[value & 0xf] + hex;\n            value = Math.floor(value / 16);\n        }\n        if (hex.length) {\n            if (hex.length % 2) {\n                hex = \"0\" + hex;\n            }\n            return \"0x\" + hex;\n        }\n        return \"0x00\";\n    }\n    if (typeof (value) === \"bigint\") {\n        value = value.toString(16);\n        if (value.length % 2) {\n            return (\"0x0\" + value);\n        }\n        return \"0x\" + value;\n    }\n    if (options.allowMissingPrefix && typeof (value) === \"string\" && value.substring(0, 2) !== \"0x\") {\n        value = \"0x\" + value;\n    }\n    if (isHexable(value)) {\n        return value.toHexString();\n    }\n    if (isHexString(value)) {\n        if (value.length % 2) {\n            if (options.hexPad === \"left\") {\n                value = \"0x0\" + value.substring(2);\n            }\n            else if (options.hexPad === \"right\") {\n                value += \"0\";\n            }\n            else {\n                logger.throwArgumentError(\"hex data is odd-length\", \"value\", value);\n            }\n        }\n        return value.toLowerCase();\n    }\n    if (isBytes(value)) {\n        let result = \"0x\";\n        for (let i = 0; i < value.length; i++) {\n            let v = value[i];\n            result += HexCharacters[(v & 0xf0) >> 4] + HexCharacters[v & 0x0f];\n        }\n        return result;\n    }\n    return logger.throwArgumentError(\"invalid hexlify value\", \"value\", value);\n}\n/*\nfunction unoddify(value: BytesLike | Hexable | number): BytesLike | Hexable | number {\n    if (typeof(value) === \"string\" && value.length % 2 && value.substring(0, 2) === \"0x\") {\n        return \"0x0\" + value.substring(2);\n    }\n    return value;\n}\n*/\nexport function hexDataLength(data) {\n    if (typeof (data) !== \"string\") {\n        data = hexlify(data);\n    }\n    else if (!isHexString(data) || (data.length % 2)) {\n        return null;\n    }\n    return (data.length - 2) / 2;\n}\nexport function hexDataSlice(data, offset, endOffset) {\n    if (typeof (data) !== \"string\") {\n        data = hexlify(data);\n    }\n    else if (!isHexString(data) || (data.length % 2)) {\n        logger.throwArgumentError(\"invalid hexData\", \"value\", data);\n    }\n    offset = 2 + 2 * offset;\n    if (endOffset != null) {\n        return \"0x\" + data.substring(offset, 2 + 2 * endOffset);\n    }\n    return \"0x\" + data.substring(offset);\n}\nexport function hexConcat(items) {\n    let result = \"0x\";\n    items.forEach((item) => {\n        result += hexlify(item).substring(2);\n    });\n    return result;\n}\nexport function hexValue(value) {\n    const trimmed = hexStripZeros(hexlify(value, { hexPad: \"left\" }));\n    if (trimmed === \"0x\") {\n        return \"0x0\";\n    }\n    return trimmed;\n}\nexport function hexStripZeros(value) {\n    if (typeof (value) !== \"string\") {\n        value = hexlify(value);\n    }\n    if (!isHexString(value)) {\n        logger.throwArgumentError(\"invalid hex string\", \"value\", value);\n    }\n    value = value.substring(2);\n    let offset = 0;\n    while (offset < value.length && value[offset] === \"0\") {\n        offset++;\n    }\n    return \"0x\" + value.substring(offset);\n}\nexport function hexZeroPad(value, length) {\n    if (typeof (value) !== \"string\") {\n        value = hexlify(value);\n    }\n    else if (!isHexString(value)) {\n        logger.throwArgumentError(\"invalid hex string\", \"value\", value);\n    }\n    if (value.length > 2 * length + 2) {\n        logger.throwArgumentError(\"value out of range\", \"value\", arguments[1]);\n    }\n    while (value.length < 2 * length + 2) {\n        value = \"0x0\" + value.substring(2);\n    }\n    return value;\n}\nexport function splitSignature(signature) {\n    const result = {\n        r: \"0x\",\n        s: \"0x\",\n        _vs: \"0x\",\n        recoveryParam: 0,\n        v: 0,\n        yParityAndS: \"0x\",\n        compact: \"0x\"\n    };\n    if (isBytesLike(signature)) {\n        let bytes = arrayify(signature);\n        // Get the r, s and v\n        if (bytes.length === 64) {\n            // EIP-2098; pull the v from the top bit of s and clear it\n            result.v = 27 + (bytes[32] >> 7);\n            bytes[32] &= 0x7f;\n            result.r = hexlify(bytes.slice(0, 32));\n            result.s = hexlify(bytes.slice(32, 64));\n        }\n        else if (bytes.length === 65) {\n            result.r = hexlify(bytes.slice(0, 32));\n            result.s = hexlify(bytes.slice(32, 64));\n            result.v = bytes[64];\n        }\n        else {\n            logger.throwArgumentError(\"invalid signature string\", \"signature\", signature);\n        }\n        // Allow a recid to be used as the v\n        if (result.v < 27) {\n            if (result.v === 0 || result.v === 1) {\n                result.v += 27;\n            }\n            else {\n                logger.throwArgumentError(\"signature invalid v byte\", \"signature\", signature);\n            }\n        }\n        // Compute recoveryParam from v\n        result.recoveryParam = 1 - (result.v % 2);\n        // Compute _vs from recoveryParam and s\n        if (result.recoveryParam) {\n            bytes[32] |= 0x80;\n        }\n        result._vs = hexlify(bytes.slice(32, 64));\n    }\n    else {\n        result.r = signature.r;\n        result.s = signature.s;\n        result.v = signature.v;\n        result.recoveryParam = signature.recoveryParam;\n        result._vs = signature._vs;\n        // If the _vs is available, use it to populate missing s, v and recoveryParam\n        // and verify non-missing s, v and recoveryParam\n        if (result._vs != null) {\n            const vs = zeroPad(arrayify(result._vs), 32);\n            result._vs = hexlify(vs);\n            // Set or check the recid\n            const recoveryParam = ((vs[0] >= 128) ? 1 : 0);\n            if (result.recoveryParam == null) {\n                result.recoveryParam = recoveryParam;\n            }\n            else if (result.recoveryParam !== recoveryParam) {\n                logger.throwArgumentError(\"signature recoveryParam mismatch _vs\", \"signature\", signature);\n            }\n            // Set or check the s\n            vs[0] &= 0x7f;\n            const s = hexlify(vs);\n            if (result.s == null) {\n                result.s = s;\n            }\n            else if (result.s !== s) {\n                logger.throwArgumentError(\"signature v mismatch _vs\", \"signature\", signature);\n            }\n        }\n        // Use recid and v to populate each other\n        if (result.recoveryParam == null) {\n            if (result.v == null) {\n                logger.throwArgumentError(\"signature missing v and recoveryParam\", \"signature\", signature);\n            }\n            else if (result.v === 0 || result.v === 1) {\n                result.recoveryParam = result.v;\n            }\n            else {\n                result.recoveryParam = 1 - (result.v % 2);\n            }\n        }\n        else {\n            if (result.v == null) {\n                result.v = 27 + result.recoveryParam;\n            }\n            else {\n                const recId = (result.v === 0 || result.v === 1) ? result.v : (1 - (result.v % 2));\n                if (result.recoveryParam !== recId) {\n                    logger.throwArgumentError(\"signature recoveryParam mismatch v\", \"signature\", signature);\n                }\n            }\n        }\n        if (result.r == null || !isHexString(result.r)) {\n            logger.throwArgumentError(\"signature missing or invalid r\", \"signature\", signature);\n        }\n        else {\n            result.r = hexZeroPad(result.r, 32);\n        }\n        if (result.s == null || !isHexString(result.s)) {\n            logger.throwArgumentError(\"signature missing or invalid s\", \"signature\", signature);\n        }\n        else {\n            result.s = hexZeroPad(result.s, 32);\n        }\n        const vs = arrayify(result.s);\n        if (vs[0] >= 128) {\n            logger.throwArgumentError(\"signature s out of range\", \"signature\", signature);\n        }\n        if (result.recoveryParam) {\n            vs[0] |= 0x80;\n        }\n        const _vs = hexlify(vs);\n        if (result._vs) {\n            if (!isHexString(result._vs)) {\n                logger.throwArgumentError(\"signature invalid _vs\", \"signature\", signature);\n            }\n            result._vs = hexZeroPad(result._vs, 32);\n        }\n        // Set or check the _vs\n        if (result._vs == null) {\n            result._vs = _vs;\n        }\n        else if (result._vs !== _vs) {\n            logger.throwArgumentError(\"signature _vs mismatch v and s\", \"signature\", signature);\n        }\n    }\n    result.yParityAndS = result._vs;\n    result.compact = result.r + result.yParityAndS.substring(2);\n    return result;\n}\nexport function joinSignature(signature) {\n    signature = splitSignature(signature);\n    return hexlify(concat([\n        signature.r,\n        signature.s,\n        (signature.recoveryParam ? \"0x1c\" : \"0x1b\")\n    ]));\n}\n//# sourceMappingURL=index.js.map","export const version = \"rlp/5.7.0\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\n//See: https://github.com/ethereum/wiki/wiki/RLP\nimport { arrayify, hexlify, isBytesLike } from \"@ethersproject/bytes\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nfunction arrayifyInteger(value) {\n    const result = [];\n    while (value) {\n        result.unshift(value & 0xff);\n        value >>= 8;\n    }\n    return result;\n}\nfunction unarrayifyInteger(data, offset, length) {\n    let result = 0;\n    for (let i = 0; i < length; i++) {\n        result = (result * 256) + data[offset + i];\n    }\n    return result;\n}\nfunction _encode(object) {\n    if (Array.isArray(object)) {\n        let payload = [];\n        object.forEach(function (child) {\n            payload = payload.concat(_encode(child));\n        });\n        if (payload.length <= 55) {\n            payload.unshift(0xc0 + payload.length);\n            return payload;\n        }\n        const length = arrayifyInteger(payload.length);\n        length.unshift(0xf7 + length.length);\n        return length.concat(payload);\n    }\n    if (!isBytesLike(object)) {\n        logger.throwArgumentError(\"RLP object must be BytesLike\", \"object\", object);\n    }\n    const data = Array.prototype.slice.call(arrayify(object));\n    if (data.length === 1 && data[0] <= 0x7f) {\n        return data;\n    }\n    else if (data.length <= 55) {\n        data.unshift(0x80 + data.length);\n        return data;\n    }\n    const length = arrayifyInteger(data.length);\n    length.unshift(0xb7 + length.length);\n    return length.concat(data);\n}\nexport function encode(object) {\n    return hexlify(_encode(object));\n}\nfunction _decodeChildren(data, offset, childOffset, length) {\n    const result = [];\n    while (childOffset < offset + 1 + length) {\n        const decoded = _decode(data, childOffset);\n        result.push(decoded.result);\n        childOffset += decoded.consumed;\n        if (childOffset > offset + 1 + length) {\n            logger.throwError(\"child data too short\", Logger.errors.BUFFER_OVERRUN, {});\n        }\n    }\n    return { consumed: (1 + length), result: result };\n}\n// returns { consumed: number, result: Object }\nfunction _decode(data, offset) {\n    if (data.length === 0) {\n        logger.throwError(\"data too short\", Logger.errors.BUFFER_OVERRUN, {});\n    }\n    // Array with extra length prefix\n    if (data[offset] >= 0xf8) {\n        const lengthLength = data[offset] - 0xf7;\n        if (offset + 1 + lengthLength > data.length) {\n            logger.throwError(\"data short segment too short\", Logger.errors.BUFFER_OVERRUN, {});\n        }\n        const length = unarrayifyInteger(data, offset + 1, lengthLength);\n        if (offset + 1 + lengthLength + length > data.length) {\n            logger.throwError(\"data long segment too short\", Logger.errors.BUFFER_OVERRUN, {});\n        }\n        return _decodeChildren(data, offset, offset + 1 + lengthLength, lengthLength + length);\n    }\n    else if (data[offset] >= 0xc0) {\n        const length = data[offset] - 0xc0;\n        if (offset + 1 + length > data.length) {\n            logger.throwError(\"data array too short\", Logger.errors.BUFFER_OVERRUN, {});\n        }\n        return _decodeChildren(data, offset, offset + 1, length);\n    }\n    else if (data[offset] >= 0xb8) {\n        const lengthLength = data[offset] - 0xb7;\n        if (offset + 1 + lengthLength > data.length) {\n            logger.throwError(\"data array too short\", Logger.errors.BUFFER_OVERRUN, {});\n        }\n        const length = unarrayifyInteger(data, offset + 1, lengthLength);\n        if (offset + 1 + lengthLength + length > data.length) {\n            logger.throwError(\"data array too short\", Logger.errors.BUFFER_OVERRUN, {});\n        }\n        const result = hexlify(data.slice(offset + 1 + lengthLength, offset + 1 + lengthLength + length));\n        return { consumed: (1 + lengthLength + length), result: result };\n    }\n    else if (data[offset] >= 0x80) {\n        const length = data[offset] - 0x80;\n        if (offset + 1 + length > data.length) {\n            logger.throwError(\"data too short\", Logger.errors.BUFFER_OVERRUN, {});\n        }\n        const result = hexlify(data.slice(offset + 1, offset + 1 + length));\n        return { consumed: (1 + length), result: result };\n    }\n    return { consumed: 1, result: hexlify(data[offset]) };\n}\nexport function decode(data) {\n    const bytes = arrayify(data);\n    const decoded = _decode(bytes, 0);\n    if (decoded.consumed !== bytes.length) {\n        logger.throwArgumentError(\"invalid rlp data\", \"data\", data);\n    }\n    return decoded.result;\n}\n//# sourceMappingURL=index.js.map","import * as RLP from \"@ethersproject/rlp\";\nimport { Logger } from \"@waku/utils\";\nimport { bytesToHex, bytesToUtf8, hexToBytes } from \"@waku/utils/bytes\";\nimport { fromString } from \"uint8arrays/from-string\";\nimport { ENR } from \"./enr.js\";\nconst log = new Logger(\"enr:decoder\");\nexport class EnrDecoder {\n    static fromString(encoded) {\n        if (!encoded.startsWith(ENR.RECORD_PREFIX)) {\n            throw new Error(`\"string encoded ENR must start with '${ENR.RECORD_PREFIX}'`);\n        }\n        return EnrDecoder.fromRLP(fromString(encoded.slice(4), \"base64url\"));\n    }\n    static fromRLP(encoded) {\n        const decoded = RLP.decode(encoded).map(hexToBytes);\n        return fromValues(decoded);\n    }\n}\nasync function fromValues(values) {\n    const { signature, seq, kvs } = checkValues(values);\n    const obj = {};\n    for (let i = 0; i < kvs.length; i += 2) {\n        try {\n            obj[bytesToUtf8(kvs[i])] = kvs[i + 1];\n        }\n        catch (e) {\n            log.error(\"Failed to decode ENR key to UTF-8, skipping it\", kvs[i], e);\n        }\n    }\n    const _seq = decodeSeq(seq);\n    const enr = await ENR.create(obj, _seq, signature);\n    checkSignature(seq, kvs, enr, signature);\n    return enr;\n}\nfunction decodeSeq(seq) {\n    // If seq is an empty array, translate as value 0\n    if (!seq.length)\n        return BigInt(0);\n    return BigInt(\"0x\" + bytesToHex(seq));\n}\nfunction checkValues(values) {\n    if (!Array.isArray(values)) {\n        throw new Error(\"Decoded ENR must be an array\");\n    }\n    if (values.length % 2 !== 0) {\n        throw new Error(\"Decoded ENR must have an even number of elements\");\n    }\n    const [signature, seq, ...kvs] = values;\n    if (!signature || Array.isArray(signature)) {\n        throw new Error(\"Decoded ENR invalid signature: must be a byte array\");\n    }\n    if (!seq || Array.isArray(seq)) {\n        throw new Error(\"Decoded ENR invalid sequence number: must be a byte array\");\n    }\n    return { signature, seq, kvs };\n}\nfunction checkSignature(seq, kvs, enr, signature) {\n    const rlpEncodedBytes = hexToBytes(RLP.encode([seq, ...kvs]));\n    if (!enr.verify(rlpEncodedBytes, signature)) {\n        throw new Error(\"Unable to verify ENR signature\");\n    }\n}\n//# sourceMappingURL=decoder.js.map","const v4Regex = /^(\\d{1,3}\\.){3,3}\\d{1,3}$/\nconst v4Size = 4\nconst v6Regex = /^(::)?(((\\d{1,3}\\.){3}(\\d{1,3}){1})?([0-9a-f]){0,4}:{0,2}){1,8}(::)?$/i\nconst v6Size = 16\n\nexport const v4 = {\n  name: 'v4',\n  size: v4Size,\n  isFormat: ip => v4Regex.test(ip),\n  encode (ip, buff, offset) {\n    offset = ~~offset\n    buff = buff || new Uint8Array(offset + v4Size)\n    const max = ip.length\n    let n = 0\n    for (let i = 0; i < max;) {\n      const c = ip.charCodeAt(i++)\n      if (c === 46) { // \".\"\n        buff[offset++] = n\n        n = 0\n      } else {\n        n = n * 10 + (c - 48)\n      }\n    }\n    buff[offset] = n\n    return buff\n  },\n  decode (buff, offset) {\n    offset = ~~offset\n    return `${buff[offset++]}.${buff[offset++]}.${buff[offset++]}.${buff[offset]}`\n  }\n}\n\nexport const v6 = {\n  name: 'v6',\n  size: v6Size,\n  isFormat: ip => ip.length > 0 && v6Regex.test(ip),\n  encode (ip, buff, offset) {\n    offset = ~~offset\n    let end = offset + v6Size\n    let fill = -1\n    let hexN = 0\n    let decN = 0\n    let prevColon = true\n    let useDec = false\n    buff = buff || new Uint8Array(offset + v6Size)\n    // Note: This algorithm needs to check if the offset\n    // could exceed the buffer boundaries as it supports\n    // non-standard compliant encodings that may go beyond\n    // the boundary limits. if (offset < end) checks should\n    // not be necessary...\n    for (let i = 0; i < ip.length; i++) {\n      let c = ip.charCodeAt(i)\n      if (c === 58) { // :\n        if (prevColon) {\n          if (fill !== -1) {\n            // Not Standard! (standard doesn't allow multiple ::)\n            // We need to treat\n            if (offset < end) buff[offset] = 0\n            if (offset < end - 1) buff[offset + 1] = 0\n            offset += 2\n          } else if (offset < end) {\n            // :: in the middle\n            fill = offset\n          }\n        } else {\n          // : ends the previous number\n          if (useDec === true) {\n            // Non-standard! (ipv4 should be at end only)\n            // A ipv4 address should not be found anywhere else but at\n            // the end. This codec also support putting characters\n            // after the ipv4 address..\n            if (offset < end) buff[offset] = decN\n            offset++\n          } else {\n            if (offset < end) buff[offset] = hexN >> 8\n            if (offset < end - 1) buff[offset + 1] = hexN & 0xff\n            offset += 2\n          }\n          hexN = 0\n          decN = 0\n        }\n        prevColon = true\n        useDec = false\n      } else if (c === 46) { // . indicates IPV4 notation\n        if (offset < end) buff[offset] = decN\n        offset++\n        decN = 0\n        hexN = 0\n        prevColon = false\n        useDec = true\n      } else {\n        prevColon = false\n        if (c >= 97) {\n          c -= 87 // a-f ... 97~102 -87 => 10~15\n        } else if (c >= 65) {\n          c -= 55 // A-F ... 65~70 -55 => 10~15\n        } else {\n          c -= 48 // 0-9 ... starting from charCode 48\n          decN = decN * 10 + c\n        }\n        // We don't know yet if its a dec or hex number\n        hexN = (hexN << 4) + c\n      }\n    }\n    if (prevColon === false) {\n      // Commiting last number\n      if (useDec === true) {\n        if (offset < end) buff[offset] = decN\n        offset++\n      } else {\n        if (offset < end) buff[offset] = hexN >> 8\n        if (offset < end - 1) buff[offset + 1] = hexN & 0xff\n        offset += 2\n      }\n    } else if (fill === 0) {\n      // Not Standard! (standard doesn't allow multiple ::)\n      // This means that a : was found at the start AND end which means the\n      // end needs to be treated as 0 entry...\n      if (offset < end) buff[offset] = 0\n      if (offset < end - 1) buff[offset + 1] = 0\n      offset += 2\n    } else if (fill !== -1) {\n      // Non-standard! (standard doens't allow multiple ::)\n      // Here we find that there has been a :: somewhere in the middle\n      // and the end. To treat the end with priority we need to move all\n      // written data two bytes to the right.\n      offset += 2\n      for (let i = Math.min(offset - 1, end - 1); i >= fill + 2; i--) {\n        buff[i] = buff[i - 2]\n      }\n      buff[fill] = 0\n      buff[fill + 1] = 0\n      fill = offset\n    }\n    if (fill !== offset && fill !== -1) {\n      // Move the written numbers to the end while filling the everything\n      // \"fill\" to the bytes with zeros.\n      if (offset > end - 2) {\n        // Non Standard support, when the cursor exceeds bounds.\n        offset = end - 2\n      }\n      while (end > fill) {\n        buff[--end] = offset < end && offset > fill ? buff[--offset] : 0\n      }\n    } else {\n      // Fill the rest with zeros\n      while (offset < end) {\n        buff[offset++] = 0\n      }\n    }\n    return buff\n  },\n  decode (buff, offset) {\n    offset = ~~offset\n    let result = ''\n    for (let i = 0; i < v6Size; i += 2) {\n      if (i !== 0) {\n        result += ':'\n      }\n      result += (buff[offset + i] << 8 | buff[offset + i + 1]).toString(16)\n    }\n    return result\n      .replace(/(^|:)0(:0)*:0(:|$)/, '$1::$3')\n      .replace(/:{3,4}/, '::')\n  }\n}\n\nexport const name = 'ip'\nexport function sizeOf (ip) {\n  if (v4.isFormat(ip)) return v4.size\n  if (v6.isFormat(ip)) return v6.size\n  throw Error(`Invalid ip address: ${ip}`)\n}\n\nexport function familyOf (string) {\n  return sizeOf(string) === v4.size ? 1 : 2\n}\n\nexport function encode (ip, buff, offset) {\n  offset = ~~offset\n  const size = sizeOf(ip)\n  if (typeof buff === 'function') {\n    buff = buff(offset + size)\n  }\n  if (size === v4.size) {\n    return v4.encode(ip, buff, offset)\n  }\n  return v6.encode(ip, buff, offset)\n}\n\nexport function decode (buff, offset, length) {\n  offset = ~~offset\n  length = length || (buff.length - offset)\n  if (length === v4.size) {\n    return v4.decode(buff, offset, length)\n  }\n  if (length === v6.size) {\n    return v6.decode(buff, offset, length)\n  }\n  throw Error(`Invalid buffer size needs to be ${v4.size} for v4 or ${v6.size} for v6.`)\n}\n","export function toString (type) {\n  switch (type) {\n    case 1: return 'A'\n    case 10: return 'NULL'\n    case 28: return 'AAAA'\n    case 18: return 'AFSDB'\n    case 42: return 'APL'\n    case 257: return 'CAA'\n    case 60: return 'CDNSKEY'\n    case 59: return 'CDS'\n    case 37: return 'CERT'\n    case 5: return 'CNAME'\n    case 49: return 'DHCID'\n    case 32769: return 'DLV'\n    case 39: return 'DNAME'\n    case 48: return 'DNSKEY'\n    case 43: return 'DS'\n    case 55: return 'HIP'\n    case 13: return 'HINFO'\n    case 45: return 'IPSECKEY'\n    case 25: return 'KEY'\n    case 36: return 'KX'\n    case 29: return 'LOC'\n    case 15: return 'MX'\n    case 35: return 'NAPTR'\n    case 2: return 'NS'\n    case 47: return 'NSEC'\n    case 50: return 'NSEC3'\n    case 51: return 'NSEC3PARAM'\n    case 12: return 'PTR'\n    case 46: return 'RRSIG'\n    case 17: return 'RP'\n    case 24: return 'SIG'\n    case 6: return 'SOA'\n    case 99: return 'SPF'\n    case 33: return 'SRV'\n    case 44: return 'SSHFP'\n    case 32768: return 'TA'\n    case 249: return 'TKEY'\n    case 52: return 'TLSA'\n    case 250: return 'TSIG'\n    case 16: return 'TXT'\n    case 252: return 'AXFR'\n    case 251: return 'IXFR'\n    case 41: return 'OPT'\n    case 255: return 'ANY'\n  }\n  return 'UNKNOWN_' + type\n}\n\nexport function toType (name) {\n  switch (name.toUpperCase()) {\n    case 'A': return 1\n    case 'NULL': return 10\n    case 'AAAA': return 28\n    case 'AFSDB': return 18\n    case 'APL': return 42\n    case 'CAA': return 257\n    case 'CDNSKEY': return 60\n    case 'CDS': return 59\n    case 'CERT': return 37\n    case 'CNAME': return 5\n    case 'DHCID': return 49\n    case 'DLV': return 32769\n    case 'DNAME': return 39\n    case 'DNSKEY': return 48\n    case 'DS': return 43\n    case 'HIP': return 55\n    case 'HINFO': return 13\n    case 'IPSECKEY': return 45\n    case 'KEY': return 25\n    case 'KX': return 36\n    case 'LOC': return 29\n    case 'MX': return 15\n    case 'NAPTR': return 35\n    case 'NS': return 2\n    case 'NSEC': return 47\n    case 'NSEC3': return 50\n    case 'NSEC3PARAM': return 51\n    case 'PTR': return 12\n    case 'RRSIG': return 46\n    case 'RP': return 17\n    case 'SIG': return 24\n    case 'SOA': return 6\n    case 'SPF': return 99\n    case 'SRV': return 33\n    case 'SSHFP': return 44\n    case 'TA': return 32768\n    case 'TKEY': return 249\n    case 'TLSA': return 52\n    case 'TSIG': return 250\n    case 'TXT': return 16\n    case 'AXFR': return 252\n    case 'IXFR': return 251\n    case 'OPT': return 41\n    case 'ANY': return 255\n    case '*': return 255\n  }\n  if (name.toUpperCase().startsWith('UNKNOWN_')) return parseInt(name.slice(8))\n  return 0\n}\n","/*\n * Traditional DNS header RCODEs (4-bits) defined by IANA in\n * https://www.iana.org/assignments/dns-parameters/dns-parameters.xhtml\n */\n\nexport function toString (rcode) {\n  switch (rcode) {\n    case 0: return 'NOERROR'\n    case 1: return 'FORMERR'\n    case 2: return 'SERVFAIL'\n    case 3: return 'NXDOMAIN'\n    case 4: return 'NOTIMP'\n    case 5: return 'REFUSED'\n    case 6: return 'YXDOMAIN'\n    case 7: return 'YXRRSET'\n    case 8: return 'NXRRSET'\n    case 9: return 'NOTAUTH'\n    case 10: return 'NOTZONE'\n    case 11: return 'RCODE_11'\n    case 12: return 'RCODE_12'\n    case 13: return 'RCODE_13'\n    case 14: return 'RCODE_14'\n    case 15: return 'RCODE_15'\n  }\n  return 'RCODE_' + rcode\n}\n\nexport function toRcode (code) {\n  switch (code.toUpperCase()) {\n    case 'NOERROR': return 0\n    case 'FORMERR': return 1\n    case 'SERVFAIL': return 2\n    case 'NXDOMAIN': return 3\n    case 'NOTIMP': return 4\n    case 'REFUSED': return 5\n    case 'YXDOMAIN': return 6\n    case 'YXRRSET': return 7\n    case 'NXRRSET': return 8\n    case 'NOTAUTH': return 9\n    case 'NOTZONE': return 10\n    case 'RCODE_11': return 11\n    case 'RCODE_12': return 12\n    case 'RCODE_13': return 13\n    case 'RCODE_14': return 14\n    case 'RCODE_15': return 15\n  }\n  return 0\n}\n","/*\n * Traditional DNS header OPCODEs (4-bits) defined by IANA in\n * https://www.iana.org/assignments/dns-parameters/dns-parameters.xhtml#dns-parameters-5\n */\n\nexport function toString (opcode) {\n  switch (opcode) {\n    case 0: return 'QUERY'\n    case 1: return 'IQUERY'\n    case 2: return 'STATUS'\n    case 3: return 'OPCODE_3'\n    case 4: return 'NOTIFY'\n    case 5: return 'UPDATE'\n    case 6: return 'OPCODE_6'\n    case 7: return 'OPCODE_7'\n    case 8: return 'OPCODE_8'\n    case 9: return 'OPCODE_9'\n    case 10: return 'OPCODE_10'\n    case 11: return 'OPCODE_11'\n    case 12: return 'OPCODE_12'\n    case 13: return 'OPCODE_13'\n    case 14: return 'OPCODE_14'\n    case 15: return 'OPCODE_15'\n  }\n  return 'OPCODE_' + opcode\n}\n\nexport function toOpcode (code) {\n  switch (code.toUpperCase()) {\n    case 'QUERY': return 0\n    case 'IQUERY': return 1\n    case 'STATUS': return 2\n    case 'OPCODE_3': return 3\n    case 'NOTIFY': return 4\n    case 'UPDATE': return 5\n    case 'OPCODE_6': return 6\n    case 'OPCODE_7': return 7\n    case 'OPCODE_8': return 8\n    case 'OPCODE_9': return 9\n    case 'OPCODE_10': return 10\n    case 'OPCODE_11': return 11\n    case 'OPCODE_12': return 12\n    case 'OPCODE_13': return 13\n    case 'OPCODE_14': return 14\n    case 'OPCODE_15': return 15\n  }\n  return 0\n}\n","export function toString (klass) {\n  switch (klass) {\n    case 1: return 'IN'\n    case 2: return 'CS'\n    case 3: return 'CH'\n    case 4: return 'HS'\n    case 255: return 'ANY'\n  }\n  return 'UNKNOWN_' + klass\n}\n\nexport function toClass (name) {\n  switch (name.toUpperCase()) {\n    case 'IN': return 1\n    case 'CS': return 2\n    case 'CH': return 3\n    case 'HS': return 4\n    case 'ANY': return 255\n  }\n  return 0\n}\n","export function toString (type) {\n  switch (type) {\n    // list at\n    // https://www.iana.org/assignments/dns-parameters/dns-parameters.xhtml#dns-parameters-11\n    case 1: return 'LLQ'\n    case 2: return 'UL'\n    case 3: return 'NSID'\n    case 5: return 'DAU'\n    case 6: return 'DHU'\n    case 7: return 'N3U'\n    case 8: return 'CLIENT_SUBNET'\n    case 9: return 'EXPIRE'\n    case 10: return 'COOKIE'\n    case 11: return 'TCP_KEEPALIVE'\n    case 12: return 'PADDING'\n    case 13: return 'CHAIN'\n    case 14: return 'KEY_TAG'\n    case 26946: return 'DEVICEID'\n  }\n  if (type < 0) {\n    return null\n  }\n  return `OPTION_${type}`\n}\n\nexport function toCode (name) {\n  if (typeof name === 'number') {\n    return name\n  }\n  if (!name) {\n    return -1\n  }\n  switch (name.toUpperCase()) {\n    case 'OPTION_0': return 0\n    case 'LLQ': return 1\n    case 'UL': return 2\n    case 'NSID': return 3\n    case 'OPTION_4': return 4\n    case 'DAU': return 5\n    case 'DHU': return 6\n    case 'N3U': return 7\n    case 'CLIENT_SUBNET': return 8\n    case 'EXPIRE': return 9\n    case 'COOKIE': return 10\n    case 'TCP_KEEPALIVE': return 11\n    case 'PADDING': return 12\n    case 'CHAIN': return 13\n    case 'KEY_TAG': return 14\n    case 'DEVICEID': return 26946\n    case 'OPTION_65535': return 65535\n  }\n  const m = name.match(/_(\\d+)$/)\n  if (m) {\n    return parseInt(m[1], 10)\n  }\n  return -1\n}\n","const SURROGATE_A = 0b1101100000000000\nconst SURROGATE_B = 0b1101110000000000\n\nexport const name = 'utf8'\n\nexport function encodingLength (str) {\n  let len = 0\n  const strLen = str.length\n  for (let i = 0; i < strLen; i += 1) {\n    const code = str.charCodeAt(i)\n    if (code <= 0x7F) {\n      len += 1\n    } else if (code <= 0x07FF) {\n      len += 2\n    } else if ((code & 0xF800) !== SURROGATE_A) {\n      len += 3\n    } else {\n      const next = i + 1\n      if (next === strLen || code >= SURROGATE_B) {\n        len += 3\n      } else {\n        const nextCode = str.charCodeAt(next)\n        if ((nextCode & 0xFC00) !== SURROGATE_B) {\n          len += 3\n        } else {\n          i = next\n          len += 4\n        }\n      }\n    }\n  }\n  return len\n}\n\nexport function encode (str, buf, offset) {\n  const strLen = str.length\n  if (offset === undefined || offset === null) {\n    offset = 0\n  }\n  if (buf === undefined) {\n    buf = new Uint8Array(encodingLength(str) + offset)\n  }\n  let off = offset\n  for (let i = 0; i < strLen; i += 1) {\n    let code = str.charCodeAt(i)\n    if (code <= 0x7F) {\n      buf[off++] = code\n    } else if (code <= 0x07FF) {\n      buf[off++] = 0b11000000 | ((code & 0b11111000000) >> 6)\n      buf[off++] = 0b10000000 | (code & 0b00000111111)\n    } else if ((code & 0xF800) !== SURROGATE_A) {\n      buf[off++] = 0b11100000 | ((code & 0b1111000000000000) >> 12)\n      buf[off++] = 0b10000000 | ((code & 0b0000111111000000) >> 6)\n      buf[off++] = 0b10000000 | (code & 0b0000000000111111)\n    } else {\n      const next = i + 1\n      if (next === strLen || code >= SURROGATE_B) {\n        // Incorrectly started surrogate pair\n        buf[off++] = 0xef\n        buf[off++] = 0xbf\n        buf[off++] = 0xbd\n      } else {\n        const nextCode = str.charCodeAt(next)\n        if ((nextCode & 0xFC00) !== SURROGATE_B) {\n          // Incorrect surrogate pair\n          buf[off++] = 0xef\n          buf[off++] = 0xbf\n          buf[off++] = 0xbd\n        } else {\n          i = next\n          code = 0b000010000000000000000 |\n            ((code & 0b1111111111) << 10) |\n            (nextCode & 0b1111111111)\n          buf[off++] = 0b11110000 | ((code & 0b111000000000000000000) >> 18)\n          buf[off++] = 0b10000000 | ((code & 0b000111111000000000000) >> 12)\n          buf[off++] = 0b10000000 | ((code & 0b000000000111111000000) >> 6)\n          buf[off++] = 0b10000000 | (code & 0b000000000000000111111)\n        }\n      }\n    }\n  }\n  encode.bytes = off - offset\n  return buf\n}\nencode.bytes = 0\n\nexport function decode (buf, start, end) {\n  let result = ''\n  if (start === undefined || start === null) {\n    start = 0\n  }\n  if (end === undefined || end === null) {\n    end = buf.length\n  }\n  for (let offset = start; offset < end;) {\n    const code = buf[offset++]\n    let num\n    if (code <= 128) {\n      num = code\n    } else if (code > 191 && code < 224) {\n      num = ((code & 0b11111) << 6) | (buf[offset++] & 0b111111)\n    } else if (code > 239 && code < 365) {\n      num = (\n        ((code & 0b111) << 18) |\n        ((buf[offset++] & 0b111111) << 12) |\n        ((buf[offset++] & 0b111111) << 6) |\n        (buf[offset++] & 0b111111)\n      ) - 0x10000\n      const numA = SURROGATE_A | ((num >> 10) & 0b1111111111)\n      result += String.fromCharCode(numA)\n      num = SURROGATE_B | (num & 0b1111111111)\n    } else {\n      num = ((code & 0b1111) << 12) |\n        ((buf[offset++] & 0b111111) << 6) |\n        (buf[offset++] & 0b111111)\n    }\n    result += String.fromCharCode(num)\n  }\n  decode.bytes = end - start\n  return result\n}\ndecode.bytes = 0\n","import * as utf8 from 'utf8-codec'\n\nexport const isU8Arr = input => input instanceof Uint8Array\n\nexport function bytelength (input) {\n  return typeof input === 'string' ? utf8.encodingLength(input) : input.byteLength\n}\n\nexport function from (input) {\n  if (input instanceof Uint8Array) {\n    return input\n  }\n  if (Array.isArray(input)) {\n    return new Uint8Array(input)\n  }\n  return utf8.encode(input)\n}\n\nexport function write (arr, str, start) {\n  if (typeof str !== 'string') {\n    throw new Error('unknown input type')\n  }\n  utf8.encode(str, arr, start)\n  return utf8.encode.bytes\n}\n\nexport function toHex (buf, start, end) {\n  let result = ''\n  for (let offset = start; offset < end;) {\n    const num = buf[offset++]\n    const str = num.toString(16)\n    result += (str.length === 1) ? '0' + str : str\n  }\n  return result\n}\n\nconst P_24 = Math.pow(2, 24)\nconst P_16 = Math.pow(2, 16)\nconst P_8 = Math.pow(2, 8)\nexport const readUInt32BE = (buf, offset) => buf[offset] * P_24 +\n  buf[offset + 1] * P_16 +\n  buf[offset + 2] * P_8 +\n  buf[offset + 3]\n\nexport const readUInt16BE = (buf, offset) => (buf[offset] << 8) | buf[offset + 1]\nexport const writeUInt32BE = (buf, value, offset) => {\n  value = +value\n  buf[offset + 3] = value\n  value = value >>> 8\n  buf[offset + 2] = value\n  value = value >>> 8\n  buf[offset + 1] = value\n  value = value >>> 8\n  buf[offset] = value\n  return offset + 4\n}\nexport const writeUInt16BE = (buf, value, offset) => {\n  buf[offset] = value >> 8\n  buf[offset + 1] = value & 0xFF\n  return offset + 2\n}\n\nexport function copy (source, target, targetStart, sourceStart, sourceEnd) {\n  if (targetStart < 0) {\n    sourceStart -= targetStart\n    targetStart = 0\n  }\n\n  if (sourceStart < 0) {\n    sourceStart = 0\n  }\n\n  if (sourceEnd < 0) {\n    return new Uint8Array(0)\n  }\n\n  if (targetStart >= target.length || sourceStart >= sourceEnd) {\n    return 0\n  }\n\n  return _copyActual(source, target, targetStart, sourceStart, sourceEnd)\n}\n\nfunction _copyActual (source, target, targetStart, sourceStart, sourceEnd) {\n  if (sourceEnd - sourceStart > target.length - targetStart) {\n    sourceEnd = sourceStart + target.length - targetStart\n  }\n\n  let nb = sourceEnd - sourceStart\n  const sourceLen = source.length - sourceStart\n  if (nb > sourceLen) {\n    nb = sourceLen\n  }\n\n  if (sourceStart !== 0 || sourceEnd < source.length) {\n    source = new Uint8Array(source.buffer, source.byteOffset + sourceStart, nb)\n  }\n\n  target.set(source, targetStart)\n\n  return nb\n}\n","import * as ip from '@leichtgewicht/ip-codec'\nimport * as types from './types.mjs'\nimport * as rcodes from './rcodes.mjs'\nimport * as opcodes from './opcodes.mjs'\nimport * as classes from './classes.mjs'\nimport * as optioncodes from './optioncodes.mjs'\nimport * as b from './buffer_utils.mjs'\nimport { decode as toUtf8 } from 'utf8-codec'\n\nconst QUERY_FLAG = 0\nconst RESPONSE_FLAG = 1 << 15\nconst FLUSH_MASK = 1 << 15\nconst NOT_FLUSH_MASK = ~FLUSH_MASK\nconst QU_MASK = 1 << 15\nconst NOT_QU_MASK = ~QU_MASK\n\nfunction codec ({ bytes = 0, encode, decode, encodingLength }) {\n  encode.bytes = bytes\n  decode.bytes = bytes\n  return {\n    encode,\n    decode,\n    encodingLength: encodingLength || (() => bytes)\n  }\n}\n\nexport const name = codec({\n  encode (str, buf, offset) {\n    if (!buf) buf = new Uint8Array(name.encodingLength(str))\n    if (!offset) offset = 0\n    const oldOffset = offset\n\n    // strip leading and trailing .\n    const n = str.replace(/^\\.|\\.$/gm, '')\n    if (n.length) {\n      const list = n.split('.')\n\n      for (let i = 0; i < list.length; i++) {\n        const len = b.write(buf, list[i], offset + 1)\n        buf[offset] = len\n        offset += len + 1\n      }\n    }\n\n    buf[offset++] = 0\n\n    name.encode.bytes = offset - oldOffset\n    return buf\n  },\n  decode (buf, offset) {\n    if (!offset) offset = 0\n\n    const list = []\n    let oldOffset = offset\n    let totalLength = 0\n    let consumedBytes = 0\n    let jumped = false\n\n    while (true) {\n      if (offset >= buf.length) {\n        throw new Error('Cannot decode name (buffer overflow)')\n      }\n      const len = buf[offset++]\n      consumedBytes += jumped ? 0 : 1\n\n      if (len === 0) {\n        break\n      } else if ((len & 0xc0) === 0) {\n        if (offset + len > buf.length) {\n          throw new Error('Cannot decode name (buffer overflow)')\n        }\n        totalLength += len + 1\n        if (totalLength > 254) {\n          throw new Error('Cannot decode name (name too long)')\n        }\n        list.push(toUtf8(buf, offset, offset + len))\n        offset += len\n        consumedBytes += jumped ? 0 : len\n      } else if ((len & 0xc0) === 0xc0) {\n        if (offset + 1 > buf.length) {\n          throw new Error('Cannot decode name (buffer overflow)')\n        }\n        const jumpOffset = b.readUInt16BE(buf, offset - 1) - 0xc000\n        if (jumpOffset >= oldOffset) {\n          // Allow only pointers to prior data. RFC 1035, section 4.1.4 states:\n          // \"[...] an entire domain name or a list of labels at the end of a domain name\n          // is replaced with a pointer to a prior occurance (sic) of the same name.\"\n          throw new Error('Cannot decode name (bad pointer)')\n        }\n        offset = jumpOffset\n        oldOffset = jumpOffset\n        consumedBytes += jumped ? 0 : 1\n        jumped = true\n      } else {\n        throw new Error('Cannot decode name (bad label)')\n      }\n    }\n\n    name.decode.bytes = consumedBytes\n    return list.length === 0 ? '.' : list.join('.')\n  },\n  encodingLength (n) {\n    if (n === '.' || n === '..') return 1\n    return b.bytelength(n.replace(/^\\.|\\.$/gm, '')) + 2\n  }\n})\n\nconst string = codec({\n  encode (s, buf, offset) {\n    if (!buf) buf = new Uint8Array(string.encodingLength(s))\n    if (!offset) offset = 0\n\n    const len = b.write(buf, s, offset + 1)\n    buf[offset] = len\n    string.encode.bytes = len + 1\n    return buf\n  },\n  decode (buf, offset) {\n    if (!offset) offset = 0\n\n    const len = buf[offset]\n    const s = toUtf8(buf, offset + 1, offset + 1 + len)\n    string.decode.bytes = len + 1\n    return s\n  },\n  encodingLength (s) {\n    return b.bytelength(s) + 1\n  }\n})\n\nconst header = codec({\n  bytes: 12,\n  encode (h, buf, offset) {\n    if (!buf) buf = new Uint8Array(header.encodingLength(h))\n    if (!offset) offset = 0\n\n    const flags = (h.flags || 0) & 32767\n    const type = h.type === 'response' ? RESPONSE_FLAG : QUERY_FLAG\n\n    b.writeUInt16BE(buf, h.id || 0, offset)\n    b.writeUInt16BE(buf, flags | type, offset + 2)\n    b.writeUInt16BE(buf, h.questions.length, offset + 4)\n    b.writeUInt16BE(buf, h.answers.length, offset + 6)\n    b.writeUInt16BE(buf, h.authorities.length, offset + 8)\n    b.writeUInt16BE(buf, h.additionals.length, offset + 10)\n\n    return buf\n  },\n  decode (buf, offset) {\n    if (!offset) offset = 0\n    if (buf.length < 12) throw new Error('Header must be 12 bytes')\n    const flags = b.readUInt16BE(buf, offset + 2)\n\n    return {\n      id: b.readUInt16BE(buf, offset),\n      type: flags & RESPONSE_FLAG ? 'response' : 'query',\n      flags: flags & 32767,\n      flag_qr: ((flags >> 15) & 0x1) === 1,\n      opcode: opcodes.toString((flags >> 11) & 0xf),\n      flag_aa: ((flags >> 10) & 0x1) === 1,\n      flag_tc: ((flags >> 9) & 0x1) === 1,\n      flag_rd: ((flags >> 8) & 0x1) === 1,\n      flag_ra: ((flags >> 7) & 0x1) === 1,\n      flag_z: ((flags >> 6) & 0x1) === 1,\n      flag_ad: ((flags >> 5) & 0x1) === 1,\n      flag_cd: ((flags >> 4) & 0x1) === 1,\n      rcode: rcodes.toString(flags & 0xf),\n      questions: new Array(b.readUInt16BE(buf, offset + 4)),\n      answers: new Array(b.readUInt16BE(buf, offset + 6)),\n      authorities: new Array(b.readUInt16BE(buf, offset + 8)),\n      additionals: new Array(b.readUInt16BE(buf, offset + 10))\n    }\n  },\n  encodingLength () {\n    return 12\n  }\n})\n\nconst runknown = codec({\n  encode (data, buf, offset) {\n    if (!buf) buf = new Uint8Array(runknown.encodingLength(data))\n    if (!offset) offset = 0\n\n    const dLen = data.length\n    b.writeUInt16BE(buf, dLen, offset)\n    b.copy(data, buf, offset + 2, 0, dLen)\n\n    runknown.encode.bytes = dLen + 2\n    return buf\n  },\n  decode (buf, offset) {\n    if (!offset) offset = 0\n\n    const len = b.readUInt16BE(buf, offset)\n    const data = buf.slice(offset + 2, offset + 2 + len)\n    runknown.decode.bytes = len + 2\n    return data\n  },\n  encodingLength (data) {\n    return data.length + 2\n  }\n})\n\nconst rns = codec({\n  encode (data, buf, offset) {\n    if (!buf) buf = new Uint8Array(rns.encodingLength(data))\n    if (!offset) offset = 0\n\n    name.encode(data, buf, offset + 2)\n    b.writeUInt16BE(buf, name.encode.bytes, offset)\n    rns.encode.bytes = name.encode.bytes + 2\n    return buf\n  },\n  decode (buf, offset) {\n    if (!offset) offset = 0\n\n    const len = b.readUInt16BE(buf, offset)\n    const dd = name.decode(buf, offset + 2)\n\n    rns.decode.bytes = len + 2\n    return dd\n  },\n  encodingLength (data) {\n    return name.encodingLength(data) + 2\n  }\n})\n\nconst rsoa = codec({\n  encode (data, buf, offset) {\n    if (!buf) buf = new Uint8Array(rsoa.encodingLength(data))\n    if (!offset) offset = 0\n\n    const oldOffset = offset\n    offset += 2\n    name.encode(data.mname, buf, offset)\n    offset += name.encode.bytes\n    name.encode(data.rname, buf, offset)\n    offset += name.encode.bytes\n    b.writeUInt32BE(buf, data.serial || 0, offset)\n    offset += 4\n    b.writeUInt32BE(buf, data.refresh || 0, offset)\n    offset += 4\n    b.writeUInt32BE(buf, data.retry || 0, offset)\n    offset += 4\n    b.writeUInt32BE(buf, data.expire || 0, offset)\n    offset += 4\n    b.writeUInt32BE(buf, data.minimum || 0, offset)\n    offset += 4\n\n    b.writeUInt16BE(buf, offset - oldOffset - 2, oldOffset)\n    rsoa.encode.bytes = offset - oldOffset\n    return buf\n  },\n  decode (buf, offset) {\n    if (!offset) offset = 0\n\n    const oldOffset = offset\n\n    const data = {}\n    offset += 2\n    data.mname = name.decode(buf, offset)\n    offset += name.decode.bytes\n    data.rname = name.decode(buf, offset)\n    offset += name.decode.bytes\n    data.serial = b.readUInt32BE(buf, offset)\n    offset += 4\n    data.refresh = b.readUInt32BE(buf, offset)\n    offset += 4\n    data.retry = b.readUInt32BE(buf, offset)\n    offset += 4\n    data.expire = b.readUInt32BE(buf, offset)\n    offset += 4\n    data.minimum = b.readUInt32BE(buf, offset)\n    offset += 4\n\n    rsoa.decode.bytes = offset - oldOffset\n    return data\n  },\n  encodingLength (data) {\n    return 22 + name.encodingLength(data.mname) + name.encodingLength(data.rname)\n  }\n})\n\nconst rtxt = codec({\n  encode (data, buf, offset) {\n    if (!Array.isArray(data)) data = [data]\n    for (let i = 0; i < data.length; i++) {\n      if (typeof data[i] === 'string') {\n        data[i] = b.from(data[i])\n      }\n      if (!b.isU8Arr(data[i])) {\n        throw new Error('Must be a Buffer')\n      }\n    }\n\n    if (!buf) buf = new Uint8Array(rtxt.encodingLength(data))\n    if (!offset) offset = 0\n\n    const oldOffset = offset\n    offset += 2\n\n    data.forEach(function (d) {\n      buf[offset++] = d.length\n      b.copy(d, buf, offset, 0, d.length)\n      offset += d.length\n    })\n\n    b.writeUInt16BE(buf, offset - oldOffset - 2, oldOffset)\n    rtxt.encode.bytes = offset - oldOffset\n    return buf\n  },\n  decode (buf, offset) {\n    if (!offset) offset = 0\n    const oldOffset = offset\n    let remaining = b.readUInt16BE(buf, offset)\n    offset += 2\n\n    const data = []\n    while (remaining > 0) {\n      const len = buf[offset++]\n      --remaining\n      if (remaining < len) {\n        throw new Error('Buffer overflow')\n      }\n      data.push(buf.slice(offset, offset + len))\n      offset += len\n      remaining -= len\n    }\n\n    rtxt.decode.bytes = offset - oldOffset\n    return data\n  },\n  encodingLength (data) {\n    if (!Array.isArray(data)) data = [data]\n    let length = 2\n    data.forEach(function (buf) {\n      if (typeof buf === 'string') {\n        length += b.bytelength(buf) + 1\n      } else {\n        length += buf.length + 1\n      }\n    })\n    return length\n  }\n})\n\nconst rnull = codec({\n  encode (data, buf, offset) {\n    if (!buf) buf = new Uint8Array(rnull.encodingLength(data))\n    if (!offset) offset = 0\n\n    if (typeof data === 'string') data = b.from(data)\n    if (!data) data = new Uint8Array(0)\n\n    const oldOffset = offset\n    offset += 2\n\n    const len = data.length\n    b.copy(data, buf, offset, 0, len)\n    offset += len\n\n    b.writeUInt16BE(buf, offset - oldOffset - 2, oldOffset)\n    rnull.encode.bytes = offset - oldOffset\n    return buf\n  },\n  decode (buf, offset) {\n    if (!offset) offset = 0\n    const oldOffset = offset\n    const len = b.readUInt16BE(buf, offset)\n\n    offset += 2\n\n    const data = buf.slice(offset, offset + len)\n    offset += len\n\n    rnull.decode.bytes = offset - oldOffset\n    return data\n  },\n  encodingLength (data) {\n    if (!data) return 2\n    return (b.isU8Arr(data) ? data.length : b.bytelength(data)) + 2\n  }\n})\n\nconst rhinfo = codec({\n  encode (data, buf, offset) {\n    if (!buf) buf = new Uint8Array(rhinfo.encodingLength(data))\n    if (!offset) offset = 0\n\n    const oldOffset = offset\n    offset += 2\n    string.encode(data.cpu, buf, offset)\n    offset += string.encode.bytes\n    string.encode(data.os, buf, offset)\n    offset += string.encode.bytes\n    b.writeUInt16BE(buf, offset - oldOffset - 2, oldOffset)\n    rhinfo.encode.bytes = offset - oldOffset\n    return buf\n  },\n  decode (buf, offset) {\n    if (!offset) offset = 0\n\n    const oldOffset = offset\n\n    const data = {}\n    offset += 2\n    data.cpu = string.decode(buf, offset)\n    offset += string.decode.bytes\n    data.os = string.decode(buf, offset)\n    offset += string.decode.bytes\n    rhinfo.decode.bytes = offset - oldOffset\n    return data\n  },\n  encodingLength (data) {\n    return string.encodingLength(data.cpu) + string.encodingLength(data.os) + 2\n  }\n})\n\nconst rptr = codec({\n  encode (data, buf, offset) {\n    if (!buf) buf = new Uint8Array(rptr.encodingLength(data))\n    if (!offset) offset = 0\n\n    name.encode(data, buf, offset + 2)\n    b.writeUInt16BE(buf, name.encode.bytes, offset)\n    rptr.encode.bytes = name.encode.bytes + 2\n    return buf\n  },\n  decode (buf, offset) {\n    if (!offset) offset = 0\n\n    const data = name.decode(buf, offset + 2)\n    rptr.decode.bytes = name.decode.bytes + 2\n    return data\n  },\n  encodingLength (data) {\n    return name.encodingLength(data) + 2\n  }\n})\n\nconst rsrv = codec({\n  encode (data, buf, offset) {\n    if (!buf) buf = new Uint8Array(rsrv.encodingLength(data))\n    if (!offset) offset = 0\n\n    b.writeUInt16BE(buf, data.priority || 0, offset + 2)\n    b.writeUInt16BE(buf, data.weight || 0, offset + 4)\n    b.writeUInt16BE(buf, data.port || 0, offset + 6)\n    name.encode(data.target, buf, offset + 8)\n\n    const len = name.encode.bytes + 6\n    b.writeUInt16BE(buf, len, offset)\n\n    rsrv.encode.bytes = len + 2\n    return buf\n  },\n  decode (buf, offset) {\n    if (!offset) offset = 0\n\n    const len = b.readUInt16BE(buf, offset)\n\n    const data = {}\n    data.priority = b.readUInt16BE(buf, offset + 2)\n    data.weight = b.readUInt16BE(buf, offset + 4)\n    data.port = b.readUInt16BE(buf, offset + 6)\n    data.target = name.decode(buf, offset + 8)\n\n    rsrv.decode.bytes = len + 2\n    return data\n  },\n  encodingLength (data) {\n    return 8 + name.encodingLength(data.target)\n  }\n})\n\nconst rcaa = codec({\n  encode (data, buf, offset) {\n    const len = rcaa.encodingLength(data)\n\n    if (!buf) buf = new Uint8Array(rcaa.encodingLength(data))\n    if (!offset) offset = 0\n\n    if (data.issuerCritical) {\n      data.flags = rcaa.ISSUER_CRITICAL\n    }\n\n    b.writeUInt16BE(buf, len - 2, offset)\n    offset += 2\n    buf[offset] = data.flags || 0\n    offset += 1\n    string.encode(data.tag, buf, offset)\n    offset += string.encode.bytes\n    b.write(buf, data.value, offset)\n    offset += b.bytelength(data.value)\n\n    rcaa.encode.bytes = len\n    return buf\n  },\n  decode (buf, offset) {\n    if (!offset) offset = 0\n\n    const len = b.readUInt16BE(buf, offset)\n    offset += 2\n\n    const oldOffset = offset\n    const data = {}\n    data.flags = buf[offset]\n    offset += 1\n    data.tag = string.decode(buf, offset)\n    offset += string.decode.bytes\n    data.value = toUtf8(buf, offset, oldOffset + len)\n\n    data.issuerCritical = !!(data.flags & rcaa.ISSUER_CRITICAL)\n\n    rcaa.decode.bytes = len + 2\n\n    return data\n  },\n  encodingLength (data) {\n    return string.encodingLength(data.tag) + string.encodingLength(data.value) + 2\n  }\n})\n\nrcaa.ISSUER_CRITICAL = 1 << 7\n\nconst rmx = codec({\n  encode (data, buf, offset) {\n    if (!buf) buf = new Uint8Array(rmx.encodingLength(data))\n    if (!offset) offset = 0\n\n    const oldOffset = offset\n    offset += 2\n    b.writeUInt16BE(buf, data.preference || 0, offset)\n    offset += 2\n    name.encode(data.exchange, buf, offset)\n    offset += name.encode.bytes\n\n    b.writeUInt16BE(buf, offset - oldOffset - 2, oldOffset)\n    rmx.encode.bytes = offset - oldOffset\n    return buf\n  },\n  decode (buf, offset) {\n    if (!offset) offset = 0\n\n    const oldOffset = offset\n\n    const data = {}\n    offset += 2\n    data.preference = b.readUInt16BE(buf, offset)\n    offset += 2\n    data.exchange = name.decode(buf, offset)\n    offset += name.decode.bytes\n\n    rmx.decode.bytes = offset - oldOffset\n    return data\n  },\n  encodingLength (data) {\n    return 4 + name.encodingLength(data.exchange)\n  }\n})\n\nconst ra = codec({\n  encode (host, buf, offset) {\n    if (!buf) buf = new Uint8Array(ra.encodingLength(host))\n    if (!offset) offset = 0\n\n    b.writeUInt16BE(buf, 4, offset)\n    offset += 2\n    ip.v4.encode(host, buf, offset)\n    return buf\n  },\n  decode (buf, offset) {\n    if (!offset) offset = 0\n\n    offset += 2\n    const host = ip.v4.decode(buf, offset)\n    return host\n  },\n  bytes: 6\n})\n\nconst raaaa = codec({\n  encode (host, buf, offset) {\n    if (!buf) buf = new Uint8Array(raaaa.encodingLength(host))\n    if (!offset) offset = 0\n\n    b.writeUInt16BE(buf, 16, offset)\n    offset += 2\n    ip.v6.encode(host, buf, offset)\n    raaaa.encode.bytes = 18\n    return buf\n  },\n  decode (buf, offset) {\n    if (!offset) offset = 0\n\n    offset += 2\n    const host = ip.v6.decode(buf, offset)\n    raaaa.decode.bytes = 18\n    return host\n  },\n  bytes: 18\n})\n\nconst alloc = size => new Uint8Array(size)\n\nconst roption = codec({\n  encode (option, buf, offset) {\n    if (!buf) buf = new Uint8Array(roption.encodingLength(option))\n    if (!offset) offset = 0\n    const oldOffset = offset\n\n    const code = optioncodes.toCode(option.code)\n    b.writeUInt16BE(buf, code, offset)\n    offset += 2\n    if (option.data) {\n      b.writeUInt16BE(buf, option.data.length, offset)\n      offset += 2\n      b.copy(option.data, buf, offset)\n      offset += option.data.length\n    } else {\n      switch (code) {\n        // case 3: NSID.  No encode makes sense.\n        // case 5,6,7: Not implementable\n        case 8: // ECS\n          {\n            // note: do IP math before calling\n            const spl = option.sourcePrefixLength || 0\n            const fam = option.family || ip.familyOf(option.ip, alloc)\n            const ipBuf = ip.encode(option.ip, alloc)\n            const ipLen = Math.ceil(spl / 8)\n            b.writeUInt16BE(buf, ipLen + 4, offset)\n            offset += 2\n            b.writeUInt16BE(buf, fam, offset)\n            offset += 2\n            buf[offset++] = spl\n            buf[offset++] = option.scopePrefixLength || 0\n\n            b.copy(ipBuf, buf, offset, 0, ipLen)\n            offset += ipLen\n          }\n          break\n        // case 9: EXPIRE (experimental)\n        // case 10: COOKIE.  No encode makes sense.\n        case 11: // KEEP-ALIVE\n          if (option.timeout) {\n            b.writeUInt16BE(buf, 2, offset)\n            offset += 2\n            b.writeUInt16BE(buf, option.timeout, offset)\n            offset += 2\n          } else {\n            b.writeUInt16BE(buf, 0, offset)\n            offset += 2\n          }\n          break\n        case 12: // PADDING\n          {\n            const len = option.length || 0\n            b.writeUInt16BE(buf, len, offset)\n            offset += 2\n            buf.fill(0, offset, offset + len)\n            offset += len\n          }\n          break\n        // case 13:  CHAIN.  Experimental.\n        case 14: // KEY-TAG\n          {\n            const tagsLen = option.tags.length * 2\n            b.writeUInt16BE(buf, tagsLen, offset)\n            offset += 2\n            for (const tag of option.tags) {\n              b.writeUInt16BE(buf, tag, offset)\n              offset += 2\n            }\n          }\n          break\n        default:\n          throw new Error(`Unknown roption code: ${option.code}`)\n      }\n    }\n\n    roption.encode.bytes = offset - oldOffset\n    return buf\n  },\n  decode (buf, offset) {\n    if (!offset) offset = 0\n    const option = {}\n    option.code = b.readUInt16BE(buf, offset)\n    option.type = optioncodes.toString(option.code)\n    offset += 2\n    const len = b.readUInt16BE(buf, offset)\n    offset += 2\n    option.data = buf.slice(offset, offset + len)\n    switch (option.code) {\n      // case 3: NSID.  No decode makes sense.\n      case 8: // ECS\n        option.family = b.readUInt16BE(buf, offset)\n        offset += 2\n        option.sourcePrefixLength = buf[offset++]\n        option.scopePrefixLength = buf[offset++]\n        {\n          const padded = new Uint8Array((option.family === 1) ? 4 : 16)\n          b.copy(buf, padded, 0, offset, offset + len - 4)\n          option.ip = ip.decode(padded)\n        }\n        break\n      // case 12: Padding.  No decode makes sense.\n      case 11: // KEEP-ALIVE\n        if (len > 0) {\n          option.timeout = b.readUInt16BE(buf, offset)\n          offset += 2\n        }\n        break\n      case 14:\n        option.tags = []\n        for (let i = 0; i < len; i += 2) {\n          option.tags.push(b.readUInt16BE(buf, offset))\n          offset += 2\n        }\n      // don't worry about default.  caller will use data if desired\n    }\n\n    roption.decode.bytes = len + 4\n    return option\n  },\n  encodingLength (option) {\n    if (option.data) {\n      return option.data.length + 4\n    }\n    const code = optioncodes.toCode(option.code)\n    switch (code) {\n      case 8: // ECS\n      {\n        const spl = option.sourcePrefixLength || 0\n        return Math.ceil(spl / 8) + 8\n      }\n      case 11: // KEEP-ALIVE\n        return (typeof option.timeout === 'number') ? 6 : 4\n      case 12: // PADDING\n        return option.length + 4\n      case 14: // KEY-TAG\n        return 4 + (option.tags.length * 2)\n    }\n    throw new Error(`Unknown roption code: ${option.code}`)\n  }\n})\n\nconst ropt = codec({\n  encode (options, buf, offset) {\n    if (!buf) buf = new Uint8Array(ropt.encodingLength(options))\n    if (!offset) offset = 0\n    const oldOffset = offset\n\n    const rdlen = encodingLengthList(options, roption)\n    b.writeUInt16BE(buf, rdlen, offset)\n    offset = encodeList(options, roption, buf, offset + 2)\n\n    ropt.encode.bytes = offset - oldOffset\n    return buf\n  },\n  decode (buf, offset) {\n    if (!offset) offset = 0\n    const oldOffset = offset\n\n    const options = []\n    let rdlen = b.readUInt16BE(buf, offset)\n    offset += 2\n    let o = 0\n    while (rdlen > 0) {\n      options[o++] = roption.decode(buf, offset)\n      offset += roption.decode.bytes\n      rdlen -= roption.decode.bytes\n    }\n    ropt.decode.bytes = offset - oldOffset\n    return options\n  },\n  encodingLength (options) {\n    return 2 + encodingLengthList(options || [], roption)\n  }\n})\n\nconst rdnskey = codec({\n  encode (key, buf, offset) {\n    if (!buf) buf = new Uint8Array(rdnskey.encodingLength(key))\n    if (!offset) offset = 0\n    const oldOffset = offset\n\n    const keydata = key.key\n    if (!b.isU8Arr(keydata)) {\n      throw new Error('Key must be a Buffer')\n    }\n\n    offset += 2 // Leave space for length\n    b.writeUInt16BE(buf, key.flags, offset)\n    offset += 2\n    buf[offset] = rdnskey.PROTOCOL_DNSSEC\n    offset += 1\n    buf[offset] = key.algorithm\n    offset += 1\n    b.copy(keydata, buf, offset, 0, keydata.length)\n    offset += keydata.length\n\n    rdnskey.encode.bytes = offset - oldOffset\n    b.writeUInt16BE(buf, rdnskey.encode.bytes - 2, oldOffset)\n    return buf\n  },\n  decode (buf, offset) {\n    if (!offset) offset = 0\n    const oldOffset = offset\n\n    const key = {}\n    const length = b.readUInt16BE(buf, offset)\n    offset += 2\n    key.flags = b.readUInt16BE(buf, offset)\n    offset += 2\n    if (buf[offset] !== rdnskey.PROTOCOL_DNSSEC) {\n      throw new Error('Protocol must be 3')\n    }\n    offset += 1\n    key.algorithm = buf[offset]\n    offset += 1\n    key.key = buf.slice(offset, oldOffset + length + 2)\n    offset += key.key.length\n    rdnskey.decode.bytes = offset - oldOffset\n    return key\n  },\n  encodingLength (key) {\n    return 6 + b.bytelength(key.key)\n  }\n})\n\nrdnskey.PROTOCOL_DNSSEC = 3\nrdnskey.ZONE_KEY = 0x80\nrdnskey.SECURE_ENTRYPOINT = 0x8000\n\nconst rrrsig = codec({\n  encode (sig, buf, offset) {\n    if (!buf) buf = new Uint8Array(rrrsig.encodingLength(sig))\n    if (!offset) offset = 0\n    const oldOffset = offset\n\n    const signature = sig.signature\n    if (!b.isU8Arr(signature)) {\n      throw new Error('Signature must be a Buffer')\n    }\n\n    offset += 2 // Leave space for length\n    b.writeUInt16BE(buf, types.toType(sig.typeCovered), offset)\n    offset += 2\n    buf[offset] = sig.algorithm\n    offset += 1\n    buf[offset] = sig.labels\n    offset += 1\n    b.writeUInt32BE(buf, sig.originalTTL, offset)\n    offset += 4\n    b.writeUInt32BE(buf, sig.expiration, offset)\n    offset += 4\n    b.writeUInt32BE(buf, sig.inception, offset)\n    offset += 4\n    b.writeUInt16BE(buf, sig.keyTag, offset)\n    offset += 2\n    name.encode(sig.signersName, buf, offset)\n    offset += name.encode.bytes\n    b.copy(signature, buf, offset, 0, signature.length)\n    offset += signature.length\n\n    rrrsig.encode.bytes = offset - oldOffset\n    b.writeUInt16BE(buf, rrrsig.encode.bytes - 2, oldOffset)\n    return buf\n  },\n  decode (buf, offset) {\n    if (!offset) offset = 0\n    const oldOffset = offset\n\n    const sig = {}\n    const length = b.readUInt16BE(buf, offset)\n    offset += 2\n    sig.typeCovered = types.toString(b.readUInt16BE(buf, offset))\n    offset += 2\n    sig.algorithm = buf[offset]\n    offset += 1\n    sig.labels = buf[offset]\n    offset += 1\n    sig.originalTTL = b.readUInt32BE(buf, offset)\n    offset += 4\n    sig.expiration = b.readUInt32BE(buf, offset)\n    offset += 4\n    sig.inception = b.readUInt32BE(buf, offset)\n    offset += 4\n    sig.keyTag = b.readUInt16BE(buf, offset)\n    offset += 2\n    sig.signersName = name.decode(buf, offset)\n    offset += name.decode.bytes\n    sig.signature = buf.slice(offset, oldOffset + length + 2)\n    offset += sig.signature.length\n    rrrsig.decode.bytes = offset - oldOffset\n    return sig\n  },\n  encodingLength (sig) {\n    return 20 +\n      name.encodingLength(sig.signersName) +\n      b.bytelength(sig.signature)\n  }\n})\nconst rrp = codec({\n  encode (data, buf, offset) {\n    if (!buf) buf = new Uint8Array(rrp.encodingLength(data))\n    if (!offset) offset = 0\n    const oldOffset = offset\n\n    offset += 2 // Leave space for length\n    name.encode(data.mbox || '.', buf, offset)\n    offset += name.encode.bytes\n    name.encode(data.txt || '.', buf, offset)\n    offset += name.encode.bytes\n    rrp.encode.bytes = offset - oldOffset\n    b.writeUInt16BE(buf, rrp.encode.bytes - 2, oldOffset)\n    return buf\n  },\n  decode (buf, offset) {\n    if (!offset) offset = 0\n    const oldOffset = offset\n\n    const data = {}\n    offset += 2\n    data.mbox = name.decode(buf, offset) || '.'\n    offset += name.decode.bytes\n    data.txt = name.decode(buf, offset) || '.'\n    offset += name.decode.bytes\n    rrp.decode.bytes = offset - oldOffset\n    return data\n  },\n  encodingLength (data) {\n    return 2 + name.encodingLength(data.mbox || '.') + name.encodingLength(data.txt || '.')\n  }\n})\n\nconst typebitmap = codec({\n  encode (typelist, buf, offset) {\n    if (!buf) buf = new Uint8Array(typebitmap.encodingLength(typelist))\n    if (!offset) offset = 0\n    const oldOffset = offset\n\n    const typesByWindow = []\n    for (let i = 0; i < typelist.length; i++) {\n      const typeid = types.toType(typelist[i])\n      if (typesByWindow[typeid >> 8] === undefined) {\n        typesByWindow[typeid >> 8] = []\n      }\n      typesByWindow[typeid >> 8][(typeid >> 3) & 0x1F] |= 1 << (7 - (typeid & 0x7))\n    }\n\n    for (let i = 0; i < typesByWindow.length; i++) {\n      if (typesByWindow[i] !== undefined) {\n        const windowBuf = b.from(typesByWindow[i])\n        buf[offset] = i\n        offset += 1\n        buf[offset] = windowBuf.length\n        offset += 1\n        b.copy(windowBuf, buf, offset, 0, windowBuf.length)\n        offset += windowBuf.length\n      }\n    }\n\n    typebitmap.encode.bytes = offset - oldOffset\n    return buf\n  },\n  decode (buf, offset, length) {\n    if (!offset) offset = 0\n    const oldOffset = offset\n\n    const typelist = []\n    while (offset - oldOffset < length) {\n      const window = buf[offset]\n      offset += 1\n      const windowLength = buf[offset]\n      offset += 1\n      for (let i = 0; i < windowLength; i++) {\n        const b = buf[offset + i]\n        for (let j = 0; j < 8; j++) {\n          if (b & (1 << (7 - j))) {\n            const typeid = types.toString((window << 8) | (i << 3) | j)\n            typelist.push(typeid)\n          }\n        }\n      }\n      offset += windowLength\n    }\n\n    typebitmap.decode.bytes = offset - oldOffset\n    return typelist\n  },\n  encodingLength (typelist) {\n    const extents = []\n    for (let i = 0; i < typelist.length; i++) {\n      const typeid = types.toType(typelist[i])\n      extents[typeid >> 8] = Math.max(extents[typeid >> 8] || 0, typeid & 0xFF)\n    }\n\n    let len = 0\n    for (let i = 0; i < extents.length; i++) {\n      if (extents[i] !== undefined) {\n        len += 2 + Math.ceil((extents[i] + 1) / 8)\n      }\n    }\n\n    return len\n  }\n})\n\nconst rnsec = codec({\n  encode (record, buf, offset) {\n    if (!buf) buf = new Uint8Array(rnsec.encodingLength(record))\n    if (!offset) offset = 0\n    const oldOffset = offset\n\n    offset += 2 // Leave space for length\n    name.encode(record.nextDomain, buf, offset)\n    offset += name.encode.bytes\n    typebitmap.encode(record.rrtypes, buf, offset)\n    offset += typebitmap.encode.bytes\n\n    rnsec.encode.bytes = offset - oldOffset\n    b.writeUInt16BE(buf, rnsec.encode.bytes - 2, oldOffset)\n    return buf\n  },\n  decode (buf, offset) {\n    if (!offset) offset = 0\n    const oldOffset = offset\n\n    const record = {}\n    const length = b.readUInt16BE(buf, offset)\n    offset += 2\n    record.nextDomain = name.decode(buf, offset)\n    offset += name.decode.bytes\n    record.rrtypes = typebitmap.decode(buf, offset, length - (offset - oldOffset))\n    offset += typebitmap.decode.bytes\n\n    rnsec.decode.bytes = offset - oldOffset\n    return record\n  },\n  encodingLength (record) {\n    return 2 +\n      name.encodingLength(record.nextDomain) +\n      typebitmap.encodingLength(record.rrtypes)\n  }\n})\n\nconst rnsec3 = codec({\n  encode (record, buf, offset) {\n    if (!buf) buf = new Uint8Array(rnsec3.encodingLength(record))\n    if (!offset) offset = 0\n    const oldOffset = offset\n\n    const salt = record.salt\n    if (!b.isU8Arr(salt)) {\n      throw new Error('salt must be a Buffer')\n    }\n\n    const nextDomain = record.nextDomain\n    if (!b.isU8Arr(nextDomain)) {\n      throw new Error('nextDomain must be a Buffer')\n    }\n\n    offset += 2 // Leave space for length\n    buf[offset] = record.algorithm\n    offset += 1\n    buf[offset] = record.flags\n    offset += 1\n    b.writeUInt16BE(buf, record.iterations, offset)\n    offset += 2\n    buf[offset] = salt.length\n    offset += 1\n    b.copy(salt, buf, offset, 0, salt.length)\n    offset += salt.length\n    buf[offset] = nextDomain.length\n    offset += 1\n    b.copy(nextDomain, buf, offset, 0, nextDomain.length)\n    offset += nextDomain.length\n    typebitmap.encode(record.rrtypes, buf, offset)\n    offset += typebitmap.encode.bytes\n\n    rnsec3.encode.bytes = offset - oldOffset\n    b.writeUInt16BE(buf, rnsec3.encode.bytes - 2, oldOffset)\n    return buf\n  },\n  decode (buf, offset) {\n    if (!offset) offset = 0\n    const oldOffset = offset\n\n    const record = {}\n    const length = b.readUInt16BE(buf, offset)\n    offset += 2\n    record.algorithm = buf[offset]\n    offset += 1\n    record.flags = buf[offset]\n    offset += 1\n    record.iterations = b.readUInt16BE(buf, offset)\n    offset += 2\n    const saltLength = buf[offset]\n    offset += 1\n    record.salt = buf.slice(offset, offset + saltLength)\n    offset += saltLength\n    const hashLength = buf[offset]\n    offset += 1\n    record.nextDomain = buf.slice(offset, offset + hashLength)\n    offset += hashLength\n    record.rrtypes = typebitmap.decode(buf, offset, length - (offset - oldOffset))\n    offset += typebitmap.decode.bytes\n\n    rnsec3.decode.bytes = offset - oldOffset\n    return record\n  },\n  encodingLength (record) {\n    return 8 +\n      record.salt.length +\n      record.nextDomain.length +\n      typebitmap.encodingLength(record.rrtypes)\n  }\n})\n\nconst rds = codec({\n  encode (digest, buf, offset) {\n    if (!buf) buf = new Uint8Array(rds.encodingLength(digest))\n    if (!offset) offset = 0\n    const oldOffset = offset\n\n    const digestdata = digest.digest\n    if (!b.isU8Arr(digestdata)) {\n      throw new Error('Digest must be a Buffer')\n    }\n\n    offset += 2 // Leave space for length\n    b.writeUInt16BE(buf, digest.keyTag, offset)\n    offset += 2\n    buf[offset] = digest.algorithm\n    offset += 1\n    buf[offset] = digest.digestType\n    offset += 1\n    b.copy(digestdata, buf, offset, 0, digestdata.length)\n    offset += digestdata.length\n\n    rds.encode.bytes = offset - oldOffset\n    b.writeUInt16BE(buf, rds.encode.bytes - 2, oldOffset)\n    return buf\n  },\n  decode (buf, offset) {\n    if (!offset) offset = 0\n    const oldOffset = offset\n\n    const digest = {}\n    const length = b.readUInt16BE(buf, offset)\n    offset += 2\n    digest.keyTag = b.readUInt16BE(buf, offset)\n    offset += 2\n    digest.algorithm = buf[offset]\n    offset += 1\n    digest.digestType = buf[offset]\n    offset += 1\n    digest.digest = buf.slice(offset, oldOffset + length + 2)\n    offset += digest.digest.length\n    rds.decode.bytes = offset - oldOffset\n    return digest\n  },\n  encodingLength (digest) {\n    return 6 + b.bytelength(digest.digest)\n  }\n})\n\nfunction renc (type) {\n  switch (type.toUpperCase()) {\n    case 'A': return ra\n    case 'PTR': return rptr\n    case 'CNAME': return rptr\n    case 'DNAME': return rptr\n    case 'TXT': return rtxt\n    case 'NULL': return rnull\n    case 'AAAA': return raaaa\n    case 'SRV': return rsrv\n    case 'HINFO': return rhinfo\n    case 'CAA': return rcaa\n    case 'NS': return rns\n    case 'SOA': return rsoa\n    case 'MX': return rmx\n    case 'OPT': return ropt\n    case 'DNSKEY': return rdnskey\n    case 'RRSIG': return rrrsig\n    case 'RP': return rrp\n    case 'NSEC': return rnsec\n    case 'NSEC3': return rnsec3\n    case 'DS': return rds\n  }\n  return runknown\n}\n\nexport const answer = codec({\n  encode (a, buf, offset) {\n    if (!buf) buf = new Uint8Array(answer.encodingLength(a))\n    if (!offset) offset = 0\n\n    const oldOffset = offset\n\n    name.encode(a.name, buf, offset)\n    offset += name.encode.bytes\n\n    b.writeUInt16BE(buf, types.toType(a.type), offset)\n\n    if (a.type.toUpperCase() === 'OPT') {\n      if (a.name !== '.') {\n        throw new Error('OPT name must be root.')\n      }\n      b.writeUInt16BE(buf, a.udpPayloadSize || 4096, offset + 2)\n      buf[offset + 4] = a.extendedRcode || 0\n      buf[offset + 5] = a.ednsVersion || 0\n      b.writeUInt16BE(buf, a.flags || 0, offset + 6)\n\n      offset += 8\n      ropt.encode(a.options || [], buf, offset)\n      offset += ropt.encode.bytes\n    } else {\n      let klass = classes.toClass(a.class === undefined ? 'IN' : a.class)\n      if (a.flush) klass |= FLUSH_MASK // the 1st bit of the class is the flush bit\n      b.writeUInt16BE(buf, klass, offset + 2)\n      b.writeUInt32BE(buf, a.ttl || 0, offset + 4)\n\n      offset += 8\n      const enc = renc(a.type)\n      enc.encode(a.data, buf, offset)\n      offset += enc.encode.bytes\n    }\n\n    answer.encode.bytes = offset - oldOffset\n    return buf\n  },\n  decode (buf, offset) {\n    if (!offset) offset = 0\n\n    const a = {}\n    const oldOffset = offset\n\n    a.name = name.decode(buf, offset)\n    offset += name.decode.bytes\n    a.type = types.toString(b.readUInt16BE(buf, offset))\n    if (a.type === 'OPT') {\n      a.udpPayloadSize = b.readUInt16BE(buf, offset + 2)\n      a.extendedRcode = buf[offset + 4]\n      a.ednsVersion = buf[offset + 5]\n      a.flags = b.readUInt16BE(buf, offset + 6)\n      a.flag_do = ((a.flags >> 15) & 0x1) === 1\n      a.options = ropt.decode(buf, offset + 8)\n      offset += 8 + ropt.decode.bytes\n    } else {\n      const klass = b.readUInt16BE(buf, offset + 2)\n      a.ttl = b.readUInt32BE(buf, offset + 4)\n\n      a.class = classes.toString(klass & NOT_FLUSH_MASK)\n      a.flush = !!(klass & FLUSH_MASK)\n\n      const enc = renc(a.type)\n      a.data = enc.decode(buf, offset + 8)\n      offset += 8 + enc.decode.bytes\n    }\n\n    answer.decode.bytes = offset - oldOffset\n    return a\n  },\n  encodingLength (a) {\n    const data = (a.data !== null && a.data !== undefined) ? a.data : a.options\n    return name.encodingLength(a.name) + 8 + renc(a.type).encodingLength(data)\n  }\n})\n\nexport const question = codec({\n  encode (q, buf, offset) {\n    if (!buf) buf = new Uint8Array(question.encodingLength(q))\n    if (!offset) offset = 0\n\n    const oldOffset = offset\n\n    name.encode(q.name, buf, offset)\n    offset += name.encode.bytes\n\n    b.writeUInt16BE(buf, types.toType(q.type), offset)\n    offset += 2\n\n    b.writeUInt16BE(buf, classes.toClass(q.class === undefined ? 'IN' : q.class), offset)\n    offset += 2\n\n    question.encode.bytes = offset - oldOffset\n    return q\n  },\n  decode (buf, offset) {\n    if (!offset) offset = 0\n\n    const oldOffset = offset\n    const q = {}\n\n    q.name = name.decode(buf, offset)\n    offset += name.decode.bytes\n\n    q.type = types.toString(b.readUInt16BE(buf, offset))\n    offset += 2\n\n    q.class = classes.toString(b.readUInt16BE(buf, offset))\n    offset += 2\n\n    const qu = !!(q.class & QU_MASK)\n    if (qu) q.class &= NOT_QU_MASK\n\n    question.decode.bytes = offset - oldOffset\n    return q\n  },\n  encodingLength (q) {\n    return name.encodingLength(q.name) + 4\n  }\n})\n\nexport {\n  rsoa as soa,\n  rtxt as txt,\n  rnull as null,\n  runknown as unknown,\n  rns as ns,\n  rhinfo as hinfo,\n  rptr as ptr,\n  rptr as cname,\n  rptr as dname,\n  rsrv as srv,\n  rcaa as caa,\n  rmx as mx,\n  ra as a,\n  raaaa as aaaa,\n  roption as option,\n  ropt as opt,\n  rdnskey as dnskey,\n  rrrsig as rrsig,\n  rrp as rp,\n  rnsec as nsec,\n  rnsec3 as nsec3,\n  rds as ds,\n  renc as enc\n}\n\nexport const AUTHORITATIVE_ANSWER = 1 << 10\nexport const TRUNCATED_RESPONSE = 1 << 9\nexport const RECURSION_DESIRED = 1 << 8\nexport const RECURSION_AVAILABLE = 1 << 7\nexport const AUTHENTIC_DATA = 1 << 5\nexport const CHECKING_DISABLED = 1 << 4\nexport const DNSSEC_OK = 1 << 15\n\nexport const packet = {\n  encode: function (result, buf, offset) {\n    const allocing = !buf\n\n    if (allocing) buf = new Uint8Array(encodingLength(result))\n    if (!offset) offset = 0\n\n    const oldOffset = offset\n\n    if (!result.questions) result.questions = []\n    if (!result.answers) result.answers = []\n    if (!result.authorities) result.authorities = []\n    if (!result.additionals) result.additionals = []\n\n    header.encode(result, buf, offset)\n    offset += header.encode.bytes\n\n    offset = encodeList(result.questions, question, buf, offset)\n    offset = encodeList(result.answers, answer, buf, offset)\n    offset = encodeList(result.authorities, answer, buf, offset)\n    offset = encodeList(result.additionals, answer, buf, offset)\n\n    packet.encode.bytes = offset - oldOffset\n\n    // just a quick sanity check\n    if (allocing && encode.bytes !== buf.length) {\n      return buf.slice(0, encode.bytes)\n    }\n\n    return buf\n  },\n  decode: function (buf, offset) {\n    if (!offset) offset = 0\n\n    const oldOffset = offset\n    const result = header.decode(buf, offset)\n    offset += header.decode.bytes\n\n    offset = decodeList(result.questions, question, buf, offset)\n    offset = decodeList(result.answers, answer, buf, offset)\n    offset = decodeList(result.authorities, answer, buf, offset)\n    offset = decodeList(result.additionals, answer, buf, offset)\n\n    packet.decode.bytes = offset - oldOffset\n\n    return result\n  },\n  encodingLength: function (result) {\n    return header.encodingLength(result) +\n      encodingLengthList(result.questions || [], question) +\n      encodingLengthList(result.answers || [], answer) +\n      encodingLengthList(result.authorities || [], answer) +\n      encodingLengthList(result.additionals || [], answer)\n  }\n}\npacket.encode.bytes = 0\npacket.decode.bytes = 0\n\nfunction sanitizeSingle (input, type) {\n  if (input.questions) {\n    throw new Error('Only one .question object expected instead of a .questions array!')\n  }\n  const sanitized = Object.assign({\n    type\n  }, input)\n  if (sanitized.question) {\n    sanitized.questions = [sanitized.question]\n    delete sanitized.question\n  }\n  return sanitized\n}\n\nexport const query = {\n  encode: function (result, buf, offset) {\n    buf = packet.encode(sanitizeSingle(result, 'query'), buf, offset)\n    query.encode.bytes = packet.encode.bytes\n    return buf\n  },\n  decode: function (buf, offset) {\n    const res = packet.decode(buf, offset)\n    query.decode.bytes = packet.decode.bytes\n    if (res.questions) {\n      res.question = res.questions[0]\n      delete res.questions\n    }\n    return res\n  },\n  encodingLength: function (result) {\n    return packet.encodingLength(sanitizeSingle(result, 'query'))\n  }\n}\nquery.encode.bytes = 0\nquery.decode.bytes = 0\n\nexport const response = {\n  encode: function (result, buf, offset) {\n    buf = packet.encode(sanitizeSingle(result, 'response'), buf, offset)\n    response.encode.bytes = packet.encode.bytes\n    return buf\n  },\n  decode: function (buf, offset) {\n    const res = packet.decode(buf, offset)\n    response.decode.bytes = packet.decode.bytes\n    if (res.questions) {\n      res.question = res.questions[0]\n      delete res.questions\n    }\n    return res\n  },\n  encodingLength: function (result) {\n    return packet.encodingLength(sanitizeSingle(result, 'response'))\n  }\n}\nresponse.encode.bytes = 0\nresponse.decode.bytes = 0\n\nexport const encode = packet.encode\nexport const decode = packet.decode\nexport const encodingLength = packet.encodingLength\n\nexport function streamEncode (result) {\n  const buf = encode(result)\n  const combine = new Uint8Array(2 + buf.byteLength)\n  b.writeUInt16BE(combine, buf.byteLength)\n  b.copy(buf, combine, 2, 0, buf.length)\n  streamEncode.bytes = combine.byteLength\n  return combine\n}\nstreamEncode.bytes = 0\n\nexport function streamDecode (sbuf) {\n  const len = b.readUInt16BE(sbuf, 0)\n  if (sbuf.byteLength < len + 2) {\n    // not enough data\n    return null\n  }\n  const result = decode(sbuf.slice(2))\n  streamDecode.bytes = decode.bytes\n  return result\n}\nstreamDecode.bytes = 0\n\nexport function encodingLengthList (list, enc) {\n  let len = 0\n  for (let i = 0; i < list.length; i++) len += enc.encodingLength(list[i])\n  return len\n}\n\nexport function encodeList (list, enc, buf, offset) {\n  for (let i = 0; i < list.length; i++) {\n    enc.encode(list[i], buf, offset)\n    offset += enc.encode.bytes\n  }\n  return offset\n}\n\nexport function decodeList (list, enc, buf, offset) {\n  for (let i = 0; i < list.length; i++) {\n    list[i] = enc.decode(buf, offset)\n    offset += enc.decode.bytes\n  }\n  return offset\n}\n","export const PREFERS_PADDING = 1\nexport const PREFERS_NO_PADDING = 2\n\nexport function make (name, charset, padding, paddingMode) {\n  if (charset.length !== 64) {\n    throw new Error(`Charset needs to be 64 characters long! (${charset.length})`)\n  }\n  const byCharCode = new Uint8Array(256)\n  const byNum = new Uint8Array(64)\n  for (let i = 0; i < 64; i += 1) {\n    const code = charset.charCodeAt(i)\n    if (code > 255) {\n      throw new Error(`Character #${i} in charset [code=${code}, char=${charset.charAt(i)}] is too high! (max=255)`)\n    }\n    if (byCharCode[code] !== 0) {\n      throw new Error(`Character [code=${code}, char=${charset.charAt(i)}] is more than once in the charset!`)\n    }\n    byCharCode[code] = i\n    byNum[i] = code\n  }\n  const padCode = padding.charCodeAt(0)\n  const codec = {\n    name,\n    encodingLength (str) {\n      const strLen = str.length\n      const len = strLen * 0.75 | 0\n      if (str.charCodeAt(strLen - 1) === padCode) {\n        if (str.charCodeAt(strLen - 2) === padCode) {\n          return len - 2\n        }\n        return len - 1\n      }\n      return len\n    },\n    encode (str, buffer, offset) {\n      if (buffer === null || buffer === undefined) {\n        buffer = new Uint8Array(codec.encodingLength(str))\n      }\n      if (offset === null || offset === undefined) {\n        offset = 0\n      }\n\n      let strLen = str.length\n      if (str.charCodeAt(strLen - 1) === padCode) {\n        if (str.charCodeAt(strLen - 2) === padCode) {\n          strLen -= 2\n        } else {\n          strLen -= 1\n        }\n      }\n\n      const padding = strLen % 4\n      const safeLen = strLen - padding\n\n      let off = offset\n      let i = 0\n      while (i < safeLen) {\n        const code =\n          (byCharCode[str.charCodeAt(i)] << 18) |\n          (byCharCode[str.charCodeAt(i + 1)] << 12) |\n          (byCharCode[str.charCodeAt(i + 2)] << 6) |\n          byCharCode[str.charCodeAt(i + 3)]\n        buffer[off++] = code >> 16\n        buffer[off++] = code >> 8\n        buffer[off++] = code\n        i += 4\n      }\n\n      if (padding === 3) {\n        const code =\n          (byCharCode[str.charCodeAt(i)] << 10) |\n          (byCharCode[str.charCodeAt(i + 1)] << 4) |\n          (byCharCode[str.charCodeAt(i + 2)] >> 2)\n        buffer[off++] = code >> 8\n        buffer[off++] = code\n      } else if (padding === 2) {\n        buffer[off++] = (byCharCode[str.charCodeAt(i)] << 2) |\n          (byCharCode[str.charCodeAt(i + 1)] >> 4)\n      }\n\n      codec.encode.bytes = off - offset\n      return buffer\n    },\n    decode (buffer, start, end) {\n      if (start === null || start === undefined) {\n        start = 0\n      }\n      if (end === null || end === undefined) {\n        end = buffer.length\n      }\n\n      const length = end - start\n      const pad = length % 3\n      const safeEnd = start + length - pad\n      const codes = []\n      for (let off = start; off < safeEnd; off += 3) {\n        const num = (buffer[off] << 16) | ((buffer[off + 1] << 8)) | buffer[off + 2]\n        codes.push(\n          byNum[num >> 18 & 0x3F],\n          byNum[num >> 12 & 0x3F],\n          byNum[num >> 6 & 0x3F],\n          byNum[num & 0x3F]\n        )\n      }\n\n      if (pad === 2) {\n        const num = (buffer[end - 2] << 8) + buffer[end - 1]\n        codes.push(\n          byNum[num >> 10],\n          byNum[(num >> 4) & 0x3F],\n          byNum[(num << 2) & 0x3F]\n        )\n        if (paddingMode === PREFERS_PADDING) {\n          codes.push(padCode)\n        }\n      } else if (pad === 1) {\n        const num = buffer[end - 1]\n        codes.push(\n          byNum[num >> 2],\n          byNum[(num << 4) & 0x3F]\n        )\n        if (paddingMode === PREFERS_PADDING) {\n          codes.push(padCode, padCode)\n        }\n      }\n\n      codec.decode.bytes = length\n      return String.fromCharCode.apply(String, codes)\n    }\n  }\n  return codec\n}\n\nexport const base64 = make('base64', 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/', '=', PREFERS_PADDING)\n// https://datatracker.ietf.org/doc/html/rfc4648#section-5\nexport const base64URL = make('base64-url', 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_', '=', PREFERS_NO_PADDING)\n","let AbortError = typeof global !== 'undefined' ? global.AbortError : typeof window !== 'undefined' ? window.AbortError : null\nif (!AbortError) {\n  AbortError = class AbortError extends Error {\n    constructor (message = 'Request aborted.') {\n      super(message)\n    }\n  }\n}\nAbortError.prototype.name = 'AbortError'\nAbortError.prototype.code = 'ABORT_ERR'\n\nconst URL = (typeof globalThis !== 'undefined' && globalThis.URL) || require('url').URL\n\nexport { AbortError, URL }\n\nexport class HTTPStatusError extends Error {\n  constructor (uri, code, method) {\n    super('status=' + code + ' while requesting ' + uri + ' [' + method + ']')\n    this.uri = uri\n    this.status = code\n    this.method = method\n  }\n\n  toJSON () {\n    return {\n      code: this.code,\n      uri: this.uri,\n      status: this.status,\n      method: this.method,\n      endpoint: this.endpoint\n    }\n  }\n}\nHTTPStatusError.prototype.name = 'HTTPStatusError'\nHTTPStatusError.prototype.code = 'HTTP_STATUS'\n\nexport class ResponseError extends Error {\n  constructor (message, cause) {\n    super(message)\n    this.cause = cause\n  }\n\n  toJSON () {\n    return {\n      message: this.message,\n      endpoint: this.endpoint,\n      code: this.code,\n      cause: reduceError(this.cause)\n    }\n  }\n}\nResponseError.prototype.name = 'ResponseError'\nResponseError.prototype.code = 'RESPONSE_ERR'\n\nexport class TimeoutError extends Error {\n  constructor (timeout) {\n    super('Timeout (t=' + timeout + ').')\n    this.timeout = timeout\n  }\n\n  toJSON () {\n    return {\n      code: this.code,\n      endpoint: this.endpoint,\n      timeout: this.timeout\n    }\n  }\n}\nTimeoutError.prototype.name = 'TimeoutError'\nTimeoutError.prototype.code = 'ETIMEOUT'\n\nconst v4Regex = /^((\\d{1,3}\\.){3,3}\\d{1,3})(:(\\d{2,5}))?$/\nconst v6Regex = /^((::)?(((\\d{1,3}\\.){3}(\\d{1,3}){1})?([0-9a-f]){0,4}:{0,2}){1,8}(::)?)(:(\\d{2,5}))?$/i\n\nexport function reduceError (err) {\n  if (typeof err === 'string') {\n    return {\n      message: err\n    }\n  }\n  try {\n    const json = JSON.stringify(err)\n    if (json !== '{}') {\n      return JSON.parse(json)\n    }\n  } catch (e) {}\n  const error = {\n    message: String(err.message || err)\n  }\n  if (err.code !== undefined) {\n    error.code = String(err.code)\n  }\n  return error\n}\n\nconst baseParts = /^(([a-z0-9]+:)\\/\\/)?([^/[\\s:]+|\\[[^\\]]+\\])?(:([^/\\s]+))?(\\/[^\\s]*)?(.*)$/\nconst httpFlags = /\\[(post|get|((ipv4|ipv6|name)=([^\\]]+)))\\]/ig\nconst updFlags = /\\[(((pk|name)=([^\\]]+)))\\]/ig\n\nexport function parseEndpoint (endpoint) {\n  const parts = baseParts.exec(endpoint)\n  const protocol = parts[2] || 'https:'\n  const host = parts[3]\n  const port = parts[5]\n  const path = parts[6]\n  const rest = parts[7]\n  if (protocol === 'https:' || protocol === 'http:') {\n    const flags = parseFlags(rest, httpFlags)\n    return {\n      name: flags.name,\n      protocol,\n      ipv4: flags.ipv4,\n      ipv6: flags.ipv6,\n      host,\n      port,\n      path,\n      method: flags.post ? 'POST' : 'GET'\n    }\n  }\n  if (protocol === 'udp:' || protocol === 'udp4:' || protocol === 'udp6:') {\n    const flags = parseFlags(rest, updFlags)\n    const v6Parts = /^\\[(.*)\\]$/.exec(host)\n    if (v6Parts && protocol === 'udp4:') {\n      throw new Error(`Endpoint parsing error: Cannot use ipv6 host with udp4: (endpoint=${endpoint})`)\n    }\n    if (!v6Parts && protocol === 'udp6:') {\n      throw new Error(`Endpoint parsing error: Incorrectly formatted host for udp6: (endpoint=${endpoint})`)\n    }\n    if (v6Parts) {\n      return new UDP6Endpoint({ protocol: 'udp6:', ipv6: v6Parts[1], port, pk: flags.pk, name: flags.name })\n    }\n    return new UDP4Endpoint({ protocol: 'udp4:', ipv4: host, port, pk: flags.pk, name: flags.name })\n  }\n  throw new InvalidProtocolError(protocol, endpoint)\n}\n\nfunction parseFlags (rest, regex) {\n  regex.lastIndex = 0\n  const result = {}\n  while (true) {\n    const match = regex.exec(rest)\n    if (!match) break\n    if (match[2]) {\n      result[match[3].toLowerCase()] = match[4]\n    } else {\n      result[match[1].toLowerCase()] = true\n    }\n  }\n  return result\n}\n\nexport class InvalidProtocolError extends Error {\n  constructor (protocol, endpoint) {\n    super(`Invalid Endpoint: unsupported protocol \"${protocol}\" for endpoint: ${endpoint}, supported protocols: ${supportedProtocols.join(', ')}`)\n    this.protocol = protocol\n    this.endpoint = endpoint\n  }\n\n  toJSON () {\n    return {\n      code: this.code,\n      endpoint: this.endpoint,\n      timeout: this.timeout\n    }\n  }\n}\nInvalidProtocolError.prototype.name = 'InvalidProtocolError'\nInvalidProtocolError.prototype.code = 'EPROTOCOL'\n\nexport const supportedProtocols = ['http:', 'https:', 'udp4:', 'udp6:']\n\nexport class BaseEndpoint {\n  constructor (opts, isHTTP) {\n    this.name = opts.name || null\n    this.protocol = opts.protocol\n    const port = typeof opts.port === 'string' ? opts.port = parseInt(opts.port, 10) : opts.port\n    if (port === undefined || port === null) {\n      this.port = isHTTP\n        ? (this.protocol === 'https:' ? 443 : 80)\n        : (opts.pk ? 443 : 53)\n    } else if (typeof port !== 'number' && !isNaN(port)) {\n      throw new Error(`Invalid Endpoint: port \"${opts.port}\" needs to be a number: ${JSON.stringify(opts)}`)\n    } else {\n      this.port = port\n    }\n  }\n\n  toJSON () {\n    return this.toString()\n  }\n}\n\nexport class UDPEndpoint extends BaseEndpoint {\n  constructor (opts) {\n    super(opts, false)\n    this.pk = opts.pk || null\n  }\n\n  toString () {\n    const port = this.port !== (this.pk ? 443 : 53) ? `:${this.port}` : ''\n    const pk = this.pk ? ` [pk=${this.pk}]` : ''\n    const name = this.name ? ` [name=${this.name}]` : ''\n    return `udp://${this.ipv4 || `[${this.ipv6}]`}${port}${pk}${name}`\n  }\n}\n\nexport class UDP4Endpoint extends UDPEndpoint {\n  constructor (opts) {\n    super(Object.assign({ protocol: 'udp4:' }, opts))\n    if (!opts.ipv4 || typeof opts.ipv4 !== 'string') {\n      throw new Error(`Invalid Endpoint: .ipv4 \"${opts.ipv4}\" needs to be set: ${JSON.stringify(opts)}`)\n    }\n    this.ipv4 = opts.ipv4\n  }\n}\n\nexport class UDP6Endpoint extends UDPEndpoint {\n  constructor (opts) {\n    super(Object.assign({ protocol: 'udp6:' }, opts))\n    if (!opts.ipv6 || typeof opts.ipv6 !== 'string') {\n      throw new Error(`Invalid Endpoint: .ipv6 \"${opts.ipv6}\" needs to be set: ${JSON.stringify(opts)}`)\n    }\n    this.ipv6 = opts.ipv6\n  }\n}\n\nfunction safeHost (host) {\n  return v6Regex.test(host) && !v4Regex.test(host) ? `[${host}]` : host\n}\n\nexport class HTTPEndpoint extends BaseEndpoint {\n  constructor (opts) {\n    super(Object.assign({ protocol: 'https:' }, opts), true)\n    if (!opts.host) {\n      if (opts.ipv4) {\n        opts.host = opts.ipv4\n      }\n      if (opts.ipv6) {\n        opts.host = `[${opts.ipv6}]`\n      }\n    }\n    if (!opts.host || typeof opts.host !== 'string') {\n      throw new Error(`Invalid Endpoint: host \"${opts.path}\" needs to be set: ${JSON.stringify(opts)}`)\n    }\n    this.host = opts.host\n    this.path = opts.path || '/dns-query'\n    this.method = /^post$/i.test(opts.method) ? 'POST' : 'GET'\n    this.ipv4 = opts.ipv4\n    this.ipv6 = opts.ipv6\n    if (!this.ipv6) {\n      const v6Parts = v6Regex.exec(this.host)\n      if (v6Parts) {\n        this.ipv6 = v6Parts[1]\n      }\n    }\n    if (!this.ipv4) {\n      if (v4Regex.test(this.host)) {\n        this.ipv4 = this.host\n      }\n    }\n    const url = `${this.protocol}//${safeHost(this.host)}:${this.port}${this.path}`\n    try {\n      this.url = new URL(url)\n    } catch (err) {\n      throw new Error(err.message + ` [${url}]`)\n    }\n  }\n\n  toString () {\n    const protocol = this.protocol === 'https:' ? '' : 'http://'\n    const port = this.port !== (this.protocol === 'https:' ? 443 : 80) ? `:${this.port}` : ''\n    const method = this.method !== 'GET' ? ' [post]' : ''\n    const path = this.path === '/dns-query' ? '' : this.path\n    const name = this.name ? ` [name=${this.name}]` : ''\n    const ipv4 = this.ipv4 && this.ipv4 !== this.host ? ` [ipv4=${this.ipv4}]` : ''\n    const ipv6 = this.ipv6 && this.ipv6 !== this.host ? ` [ipv6=${this.ipv6}]` : ''\n    return `${protocol}${safeHost(this.host)}${port}${path}${method}${ipv4}${ipv6}${name}`\n  }\n}\n\nexport function toEndpoint (input) {\n  let opts\n  if (typeof input === 'string') {\n    opts = parseEndpoint(input)\n  } else {\n    if (typeof input !== 'object' || input === null || Array.isArray(input)) {\n      throw new Error(`Can not convert ${input} to an endpoint`)\n    } else if (input instanceof BaseEndpoint) {\n      return input\n    }\n    opts = input\n  }\n  if (opts.protocol === null || opts.protocol === undefined) {\n    opts.protocol = 'https:'\n  }\n  const protocol = opts.protocol\n  if (protocol === 'udp4:') {\n    return new UDP4Endpoint(opts)\n  }\n  if (protocol === 'udp6:') {\n    return new UDP6Endpoint(opts)\n  }\n  if (protocol === 'https:' || protocol === 'http:') {\n    return new HTTPEndpoint(opts)\n  }\n  throw new InvalidProtocolError(protocol, JSON.stringify(opts))\n}\n","/* global XMLHttpRequest, localStorage */\nimport * as utf8Codec from 'utf8-codec'\nimport { base64URL } from '@leichtgewicht/base64-codec'\nimport {\n  AbortError,\n  HTTPStatusError,\n  TimeoutError,\n  URL\n} from './common.mjs'\nconst contentType = 'application/dns-message'\n\nfunction noop () { }\n\nexport function queryDns () {\n  throw new Error('Only \"doh\" endpoints are supported in the browser')\n}\n\nexport async function loadJSON (url, cache, timeout, abortSignal) {\n  const cacheKey = cache ? cache.localStoragePrefix + cache.name : null\n  if (cacheKey) {\n    try {\n      const cached = JSON.parse(localStorage.getItem(cacheKey))\n      if (cached && cached.time > cache.maxTime) {\n        return cached\n      }\n    } catch (err) {}\n  }\n  const { data } = await requestRaw(url, 'GET', null, timeout, abortSignal)\n  const result = {\n    time: Date.now(),\n    data: JSON.parse(utf8Codec.decode(data))\n  }\n  if (cacheKey) {\n    try {\n      localStorage.setItem(cacheKey, JSON.stringify(result))\n    } catch (err) {\n      result.time = null\n    }\n  }\n  return result\n}\n\nfunction requestRaw (url, method, data, timeout, abortSignal) {\n  return new Promise((resolve, reject) => {\n    const target = new URL(url)\n    if (method === 'GET' && data) {\n      target.search = '?dns=' + base64URL.decode(data)\n    }\n    const uri = target.toString()\n    const xhr = new XMLHttpRequest()\n    xhr.open(method, uri, true)\n    xhr.setRequestHeader('Accept', contentType)\n    if (method === 'POST') {\n      xhr.setRequestHeader('Content-Type', contentType)\n    }\n    xhr.responseType = 'arraybuffer'\n    xhr.timeout = timeout\n    xhr.ontimeout = ontimeout\n    xhr.onreadystatechange = onreadystatechange\n    xhr.onerror = onerror\n    xhr.onload = onload\n    if (method === 'POST') {\n      xhr.send(data)\n    } else {\n      xhr.send()\n    }\n\n    if (abortSignal) {\n      abortSignal.addEventListener('abort', onabort)\n    }\n\n    function ontimeout () {\n      finish(new TimeoutError(timeout))\n      try {\n        xhr.abort()\n      } catch (e) { }\n    }\n\n    function onload () {\n      if (xhr.status !== 200) {\n        finish(new HTTPStatusError(uri, xhr.status, method))\n      } else {\n        let buf\n        if (typeof xhr.response === 'string') {\n          buf = utf8Codec.encode(xhr.response)\n        } else if (xhr.response instanceof Uint8Array) {\n          buf = xhr.response\n        } else if (Array.isArray(xhr.response) || xhr.response instanceof ArrayBuffer) {\n          buf = new Uint8Array(xhr.response)\n        } else {\n          throw new Error('Unprocessable response ' + xhr.response)\n        }\n        finish(null, buf)\n      }\n    }\n\n    function onreadystatechange () {\n      if (xhr.readyState > 1 && xhr.status !== 200 && xhr.status !== 0) {\n        finish(new HTTPStatusError(uri, xhr.status, method))\n        try {\n          xhr.abort()\n        } catch (e) { }\n      }\n    }\n\n    let finish = function (error, data) {\n      finish = noop\n      if (abortSignal) {\n        abortSignal.removeEventListener('abort', onabort)\n      }\n      if (error) {\n        resolve({\n          error,\n          response: xhr\n        })\n      } else {\n        resolve({\n          data,\n          response: xhr\n        })\n      }\n    }\n\n    function onerror () {\n      finish(xhr.status === 200 ? new Error('Inexplicable XHR Error') : new HTTPStatusError(uri, xhr.status, method))\n    }\n\n    function onabort () {\n      finish(new AbortError())\n      try {\n        xhr.abort()\n      } catch (e) { }\n    }\n  })\n}\n\nexport function request (url, method, packet, timeout, abortSignal) {\n  return requestRaw(url, method, packet, timeout, abortSignal)\n}\n\nexport function processResolvers (resolvers) {\n  return resolvers.filter(resolver => resolver.cors || resolver.endpoint.cors)\n}\n","import * as packet from '@leichtgewicht/dns-packet'\nimport { toRcode } from '@leichtgewicht/dns-packet/rcodes.js'\nimport { decode } from 'utf8-codec'\nimport * as lib from './lib.mjs'\nimport { resolvers as backupResolvers } from './resolvers.mjs'\nimport {\n  AbortError,\n  ResponseError,\n  URL,\n  toEndpoint\n} from './common.mjs'\n\nexport {\n  TimeoutError,\n  HTTPStatusError,\n  AbortError,\n  ResponseError,\n  BaseEndpoint,\n  HTTPEndpoint,\n  UDP4Endpoint,\n  UDP6Endpoint,\n  parseEndpoint,\n  toEndpoint\n} from './common.mjs'\n\nexport const DNS_RCODE_ERROR = {\n  1: 'FormErr',\n  2: 'ServFail',\n  3: 'NXDomain',\n  4: 'NotImp',\n  5: 'Refused',\n  6: 'YXDomain',\n  7: 'YXRRSet',\n  8: 'NXRRSet',\n  9: 'NotAuth',\n  10: 'NotZone',\n  11: 'DSOTYPENI'\n}\n\nexport const DNS_RCODE_MESSAGE = {\n  // https://www.iana.org/assignments/dns-parameters/dns-parameters.xhtml#dns-parameters-6\n  1: 'The name server was unable to interpret the query.',\n  2: 'The name server was unable to process this query due to a problem with the name server.',\n  3: 'Non-Existent Domain.',\n  4: 'The name server does not support the requested kind of query.',\n  5: 'The name server refuses to perform the specified operation for policy reasons.',\n  6: 'Name Exists when it should not.',\n  7: 'RR Set Exists when it should not.',\n  8: 'RR Set that should exist does not.',\n  9: 'Server Not Authoritative for zone  / Not Authorized.',\n  10: 'Name not contained in zone.',\n  11: 'DSO-TYPE Not Implemented.'\n}\n\nexport class DNSRcodeError extends Error {\n  constructor (rcode, question) {\n    super(`${(DNS_RCODE_MESSAGE[rcode] || 'Undefined error.')} (rcode=${rcode}${DNS_RCODE_ERROR[rcode] ? `, error=${DNS_RCODE_ERROR[rcode]}` : ''}, question=${JSON.stringify(question)})`)\n    this.rcode = rcode\n    this.code = `DNS_RCODE_${rcode}`\n    this.error = DNS_RCODE_ERROR[rcode]\n    this.question = question\n  }\n\n  toJSON () {\n    return {\n      code: this.code,\n      error: this.error,\n      question: this.question,\n      endpoint: this.endpoint\n    }\n  }\n}\n\nexport function validateResponse (data, question) {\n  const rcode = toRcode(data.rcode)\n  if (rcode !== 0) {\n    const err = new DNSRcodeError(rcode, question)\n    err.endpoint = data.endpoint\n    throw err\n  }\n  return data\n}\n\nfunction processResolvers (res) {\n  const time = (res.time === null || res.time === undefined) ? Date.now() : res.time\n  const resolvers = lib.processResolvers(res.data.map(resolver => {\n    resolver.endpoint = toEndpoint(Object.assign({ name: resolver.name }, resolver.endpoint))\n    return resolver\n  }))\n  const endpoints = resolvers.map(resolver => resolver.endpoint)\n  return {\n    data: {\n      resolvers,\n      resolverByName: resolvers.reduce((byName, resolver) => {\n        byName[resolver.name] = resolver\n        return byName\n      }, {}),\n      endpoints,\n      endpointByName: endpoints.reduce((byName, endpoint) => {\n        byName[endpoint.name] = endpoint\n        return byName\n      }, {})\n    },\n    time\n  }\n}\n\nexport const backup = processResolvers(backupResolvers)\n\nfunction toMultiQuery (singleQuery) {\n  const query = Object.assign({\n    type: 'query'\n  }, singleQuery)\n  delete query.question\n  query.questions = []\n  if (singleQuery.question) {\n    query.questions.push(singleQuery.question)\n  }\n  return query\n}\n\nfunction queryOne (endpoint, query, timeout, abortSignal) {\n  if (abortSignal && abortSignal.aborted) {\n    return Promise.reject(new AbortError())\n  }\n  if (endpoint.protocol === 'udp4:' || endpoint.protocol === 'udp6:') {\n    return lib.queryDns(endpoint, query, timeout, abortSignal)\n  }\n  return queryDoh(endpoint, query, timeout, abortSignal)\n}\n\nfunction queryDoh (endpoint, query, timeout, abortSignal) {\n  return lib.request(\n    endpoint.url,\n    endpoint.method,\n    packet.encode(Object.assign({\n      flags: packet.RECURSION_DESIRED\n    }, query)),\n    timeout,\n    abortSignal\n  ).then(\n    function (res) {\n      const data = res.data\n      const response = res.response\n      let error = res.error\n      if (error === undefined) {\n        if (data.length === 0) {\n          error = new ResponseError('Empty.')\n        } else {\n          try {\n            const decoded = packet.decode(data)\n            decoded.response = response\n            return decoded\n          } catch (err) {\n            error = new ResponseError('Invalid packet (cause=' + err.message + ')', err)\n          }\n        }\n      }\n      throw Object.assign(error, { response })\n    }\n  )\n}\n\nconst UPDATE_URL = new URL('https://martinheidegger.github.io/dns-query/resolvers.json')\n\nfunction concatUint8 (arrs) {\n  const res = new Uint8Array(\n    arrs.reduce((len, arr) => len + arr.length, 0)\n  )\n  let pos = 0\n  for (const arr of arrs) {\n    res.set(arr, pos)\n    pos += arr.length\n  }\n  return res\n}\n\nexport function combineTXT (inputs) {\n  return decode(concatUint8(inputs))\n}\n\nfunction isNameString (entry) {\n  return /^@/.test(entry)\n}\n\nexport class Wellknown {\n  constructor (opts) {\n    this.opts = Object.assign({\n      timeout: 5000,\n      update: true,\n      updateURL: UPDATE_URL,\n      persist: false,\n      localStoragePrefix: 'dnsquery_',\n      maxAge: 300000 // 5 minutes\n    }, opts)\n    this._dataP = null\n  }\n\n  _data (force, outdated) {\n    if (!force && this._dataP !== null) {\n      return this._dataP.then(res => {\n        if (res.time < Date.now() - this.opts.maxAge) {\n          return this._data(true, res)\n        }\n        return res\n      })\n    }\n    this._dataP = (!this.opts.update\n      ? Promise.resolve(backup)\n      : lib.loadJSON(\n        this.opts.updateURL,\n        this.opts.persist\n          ? {\n              name: 'resolvers.json',\n              localStoragePrefix: this.opts.localStoragePrefix,\n              maxTime: Date.now() - this.opts.maxAge\n            }\n          : null,\n        this.opts.timeout\n      )\n        .then(res => processResolvers({\n          data: res.data.resolvers,\n          time: res.time\n        }))\n        .catch(() => outdated || backup)\n    )\n    return this._dataP\n  }\n\n  data () {\n    return this._data(false).then(data => data.data)\n  }\n\n  endpoints (input) {\n    if (input === null || input === undefined) {\n      return this.data().then(data => data.endpoints)\n    }\n    if (input === 'doh') {\n      input = filterDoh\n    }\n    if (input === 'dns') {\n      input = filterDns\n    }\n    if (typeof input === 'function') {\n      return this.data().then(data => data.endpoints.filter(input))\n    }\n    if (typeof input === 'string' || typeof input[Symbol.iterator] !== 'function') {\n      return Promise.reject(new Error(`Endpoints (${input}) needs to be iterable (array).`))\n    }\n    input = Array.from(input).filter(Boolean)\n    if (input.findIndex(isNameString) === -1) {\n      try {\n        return Promise.resolve(input.map(toEndpoint))\n      } catch (err) {\n        return Promise.reject(err)\n      }\n    }\n    return this.data().then(data =>\n      input.map(entry => {\n        if (isNameString(entry)) {\n          const found = data.endpointByName[entry.substring(1)]\n          if (!found) {\n            throw new Error(`Endpoint ${entry} is not known.`)\n          }\n          return found\n        }\n        return toEndpoint(entry)\n      })\n    )\n  }\n}\n\nexport const wellknown = new Wellknown()\n\nfunction isPromise (input) {\n  if (input === null) {\n    return false\n  }\n  if (typeof input !== 'object') {\n    return false\n  }\n  return typeof input.then === 'function'\n}\n\nfunction toPromise (input) {\n  return isPromise(input) ? input : Promise.resolve(input)\n}\n\nexport function query (q, opts) {\n  opts = Object.assign({\n    retries: 5,\n    timeout: 30000 // 30 seconds\n  }, opts)\n  if (!q.question) return Promise.reject(new Error('To request data you need to specify a .question!'))\n  return toPromise(opts.endpoints)\n    .then(endpoints => {\n      if (!Array.isArray(endpoints) || endpoints.length === 0) {\n        throw new Error('No endpoints defined to lookup dns records.')\n      }\n      return queryN(endpoints.map(toEndpoint), toMultiQuery(q), opts)\n    })\n    .then(data => {\n      data.question = data.questions[0]\n      delete data.questions\n      return data\n    })\n}\n\nexport function lookupTxt (domain, opts) {\n  const q = Object.assign({\n    question: {\n      type: 'TXT',\n      name: domain\n    }\n  }, opts.query)\n  return query(q, opts)\n    .then(data => {\n      validateResponse(data, q)\n      return {\n        entries: (data.answers || [])\n          .filter(answer => answer.type === 'TXT' && answer.data)\n          .map(answer => {\n            return ({\n              data: combineTXT(answer.data),\n              ttl: answer.ttl\n            })\n          })\n          .sort((a, b) => {\n            if (a.data > b.data) return 1\n            if (a.data < b.data) return -1\n            return 0\n          }),\n        endpoint: data.endpoint\n      }\n    })\n}\n\nfunction queryN (endpoints, q, opts) {\n  const endpoint = endpoints.length === 1\n    ? endpoints[0]\n    : endpoints[Math.floor(Math.random() * endpoints.length) % endpoints.length]\n  return queryOne(endpoint, q, opts.timeout, opts.signal)\n    .then(\n      data => {\n        // Add the endpoint to give a chance to identify which endpoint returned the result\n        data.endpoint = endpoint.toString()\n        return data\n      },\n      err => {\n        if (err.name === 'AbortError' || opts.retries === 0) {\n          err.endpoint = endpoint.toString()\n          throw err\n        }\n        if (opts.retries > 0) {\n          opts.retries -= 1\n        }\n        return queryN(endpoints, q, opts)\n      }\n    )\n}\n\nfunction filterDoh (endpoint) {\n  return endpoint.protocol === 'https:' || endpoint.protocol === 'http:'\n}\n\nfunction filterDns (endpoint) {\n  return endpoint.protocol === 'udp4:' || endpoint.protocol === 'udp6:'\n}\n","export const resolvers = {\n  data: [\n    {\n      name: 'adfree.usableprivacy.net',\n      endpoint: {\n        protocol: 'https:',\n        host: 'adfree.usableprivacy.net'\n      },\n      description: 'Public updns DoH service with advertising, tracker and malware filters.\\nHosted in Europe by @usableprivacy, details see: https://docs.usableprivacy.com',\n      country: 'Germany',\n      location: {\n        lat: 51.2993,\n        long: 9.491\n      },\n      filter: true\n    },\n    {\n      name: 'adguard-dns-doh',\n      endpoint: {\n        protocol: 'https:',\n        host: 'dns.adguard.com',\n        ipv4: '94.140.15.15'\n      },\n      description: 'Remove ads and protect your computer from malware (over DoH)',\n      country: 'France',\n      location: {\n        lat: 48.8582,\n        long: 2.3387\n      },\n      filter: true\n    },\n    {\n      name: 'adguard-dns-family-doh',\n      endpoint: {\n        protocol: 'https:',\n        host: 'dns-family.adguard.com',\n        ipv4: '94.140.15.16'\n      },\n      description: 'Adguard DNS with safesearch and adult content blocking (over DoH)',\n      country: 'France',\n      location: {\n        lat: 48.8582,\n        long: 2.3387\n      },\n      filter: true\n    },\n    {\n      name: 'adguard-dns-unfiltered-doh',\n      endpoint: {\n        protocol: 'https:',\n        host: 'dns-unfiltered.adguard.com',\n        ipv4: '94.140.14.140'\n      },\n      description: 'AdGuard public DNS servers without filters (over DoH)',\n      country: 'France',\n      location: {\n        lat: 48.8582,\n        long: 2.3387\n      }\n    },\n    {\n      name: 'ahadns-doh-chi',\n      endpoint: {\n        protocol: 'https:',\n        host: 'doh.chi.ahadns.net',\n        cors: true\n      },\n      description: 'A zero logging DNS with support for DNS-over-HTTPS (DoH) & DNS-over-TLS (DoT). Blocks ads, malware, trackers, viruses, ransomware, telemetry and more. No persistent logs. DNSSEC. Hosted in Chicago, USA. By https://ahadns.com/\\nServer statistics can be seen at: https://statistics.ahadns.com/?server=chi',\n      country: 'United States',\n      location: {\n        lat: 41.8483,\n        long: -87.6517\n      },\n      filter: true,\n      cors: true\n    },\n    {\n      name: 'ahadns-doh-in',\n      endpoint: {\n        protocol: 'https:',\n        host: 'doh.in.ahadns.net',\n        cors: true\n      },\n      description: 'A zero logging DNS with support for DNS-over-HTTPS (DoH) & DNS-over-TLS (DoT). Blocks ads, malware, trackers, viruses, ransomware, telemetry and more. No persistent logs. DNSSEC. Hosted in Mumbai, India. By https://ahadns.com/\\nServer statistics can be seen at: https://statistics.ahadns.com/?server=in',\n      country: 'India',\n      location: {\n        lat: 19.0748,\n        long: 72.8856\n      },\n      filter: true,\n      cors: true\n    },\n    {\n      name: 'ahadns-doh-la',\n      endpoint: {\n        protocol: 'https:',\n        host: 'doh.la.ahadns.net',\n        cors: true\n      },\n      description: 'A zero logging DNS with support for DNS-over-HTTPS (DoH) & DNS-over-TLS (DoT). Blocks ads, malware, trackers, viruses, ransomware, telemetry and more. No persistent logs. DNSSEC. Hosted in Los Angeles, USA. By https://ahadns.com/\\nServer statistics can be seen at: https://statistics.ahadns.com/?server=la',\n      country: 'United States',\n      location: {\n        lat: 34.0549,\n        long: -118.2578\n      },\n      filter: true,\n      cors: true\n    },\n    {\n      name: 'ahadns-doh-nl',\n      endpoint: {\n        protocol: 'https:',\n        host: 'doh.nl.ahadns.net',\n        cors: true\n      },\n      description: 'A zero logging DNS with support for DNS-over-HTTPS (DoH) & DNS-over-TLS (DoT). Blocks ads, malware, trackers, viruses, ransomware, telemetry and more. No persistent logs. DNSSEC. Hosted in Amsterdam, Netherlands. By https://ahadns.com/\\nServer statistics can be seen at: https://statistics.ahadns.com/?server=nl',\n      country: 'Netherlands',\n      location: {\n        lat: 52.3824,\n        long: 4.8995\n      },\n      filter: true,\n      cors: true\n    },\n    {\n      name: 'ahadns-doh-ny',\n      endpoint: {\n        protocol: 'https:',\n        host: 'doh.ny.ahadns.net',\n        cors: true\n      },\n      description: 'A zero logging DNS with support for DNS-over-HTTPS (DoH) & DNS-over-TLS (DoT). Blocks ads, malware, trackers, viruses, ransomware, telemetry and more. No persistent logs. DNSSEC. Hosted in New York. By https://ahadns.com/\\nServer statistics can be seen at: https://statistics.ahadns.com/?server=ny',\n      country: 'United States',\n      location: {\n        lat: 40.7308,\n        long: -73.9975\n      },\n      filter: true,\n      cors: true\n    },\n    {\n      name: 'ahadns-doh-pl',\n      endpoint: {\n        protocol: 'https:',\n        host: 'doh.pl.ahadns.net',\n        cors: true\n      },\n      description: 'A zero logging DNS with support for DNS-over-HTTPS (DoH) & DNS-over-TLS (DoT). Blocks ads, malware, trackers, viruses, ransomware, telemetry and more. No persistent logs. DNSSEC. Hosted in Poland. By https://ahadns.com/\\nServer statistics can be seen at: https://statistics.ahadns.com/?server=pl',\n      country: 'Netherlands',\n      location: {\n        lat: 52.3824,\n        long: 4.8995\n      },\n      filter: true,\n      cors: true\n    },\n    {\n      name: 'alidns-doh',\n      endpoint: {\n        protocol: 'https:',\n        host: 'dns.alidns.com',\n        ipv4: '223.5.5.5',\n        cors: true\n      },\n      description: 'A public DNS resolver that supports DoH/DoT in mainland China, provided by Alibaba-Cloud.\\nWarning: GFW filtering rules are applied by that resolver.\\nHomepage: https://alidns.com/',\n      country: 'China',\n      location: {\n        lat: 34.7725,\n        long: 113.7266\n      },\n      filter: true,\n      log: true,\n      cors: true\n    },\n    {\n      name: 'ams-ads-doh-nl',\n      endpoint: {\n        protocol: 'https:',\n        host: 'dnsnl-noads.alekberg.net'\n      },\n      description: 'Resolver in Amsterdam. DoH protocol. Non-logging. Blocks ads, malware and trackers. DNSSEC enabled.',\n      country: 'Romania',\n      location: {\n        lat: 45.9968,\n        long: 24.997\n      },\n      filter: true\n    },\n    {\n      name: 'ams-doh-nl',\n      endpoint: {\n        protocol: 'https:',\n        host: 'dnsnl.alekberg.net'\n      },\n      description: 'Resolver in Amsterdam. DoH protocol. Non-logging, non-filtering, DNSSEC.',\n      country: 'Romania',\n      location: {\n        lat: 45.9968,\n        long: 24.997\n      }\n    },\n    {\n      name: 'att',\n      endpoint: {\n        protocol: 'https:',\n        host: 'dohtrial.att.net'\n      },\n      description: 'AT&T test DoH server.',\n      log: true\n    },\n    {\n      name: 'bcn-ads-doh',\n      endpoint: {\n        protocol: 'https:',\n        host: 'dnses-noads.alekberg.net'\n      },\n      description: 'Resolver in Spain. DoH protocol. Non-logging, remove ads and malware, DNSSEC.',\n      country: 'Spain',\n      location: {\n        lat: 41.3891,\n        long: 2.1611\n      },\n      filter: true\n    },\n    {\n      name: 'bcn-doh',\n      endpoint: {\n        protocol: 'https:',\n        host: 'dnses.alekberg.net'\n      },\n      description: 'Resolver in Spain. DoH protocol. Non-logging, non-filtering, DNSSEC.',\n      country: 'Spain',\n      location: {\n        lat: 41.3891,\n        long: 2.1611\n      }\n    },\n    {\n      name: 'brahma-world',\n      endpoint: {\n        protocol: 'https:',\n        host: 'dns.brahma.world'\n      },\n      description: 'DNS-over-HTTPS server. Non Logging, filters ads, trackers and malware. DNSSEC ready, QNAME Minimization, No EDNS Client-Subnet.\\nHosted in Stockholm, Sweden. (https://dns.brahma.world)',\n      country: 'United States',\n      location: {\n        lat: 37.751,\n        long: -97.822\n      },\n      filter: true\n    },\n    {\n      name: 'cisco-doh',\n      endpoint: {\n        protocol: 'https:',\n        host: 'doh.opendns.com',\n        ipv4: '146.112.41.2'\n      },\n      description: 'Remove your DNS blind spot (DoH protocol)\\nWarning: modifies your queries to include a copy of your network\\naddress when forwarding them to a selection of companies and organizations.',\n      country: 'United States',\n      location: {\n        lat: 37.751,\n        long: -97.822\n      },\n      filter: true,\n      log: true\n    },\n    {\n      name: 'cloudflare',\n      endpoint: {\n        protocol: 'https:',\n        host: 'dns.cloudflare.com',\n        ipv4: '1.0.0.1',\n        cors: true\n      },\n      description: 'Cloudflare DNS (anycast) - aka 1.1.1.1 / 1.0.0.1',\n      country: 'Australia',\n      location: {\n        lat: -33.494,\n        long: 143.2104\n      },\n      cors: true\n    },\n    {\n      name: 'cloudflare-family',\n      endpoint: {\n        protocol: 'https:',\n        host: 'family.cloudflare-dns.com',\n        ipv4: '1.0.0.3',\n        cors: true\n      },\n      description: 'Cloudflare DNS (anycast) with malware protection and parental control - aka 1.1.1.3 / 1.0.0.3',\n      country: 'Australia',\n      location: {\n        lat: -33.494,\n        long: 143.2104\n      },\n      filter: true,\n      cors: true\n    },\n    {\n      name: 'cloudflare-ipv6',\n      endpoint: {\n        protocol: 'https:',\n        host: '1dot1dot1dot1.cloudflare-dns.com',\n        cors: true\n      },\n      description: 'Cloudflare DNS over IPv6 (anycast)',\n      country: 'United States',\n      location: {\n        lat: 37.751,\n        long: -97.822\n      },\n      cors: true\n    },\n    {\n      name: 'cloudflare-security',\n      endpoint: {\n        protocol: 'https:',\n        host: 'security.cloudflare-dns.com',\n        ipv4: '1.0.0.2',\n        cors: true\n      },\n      description: 'Cloudflare DNS (anycast) with malware blocking - aka 1.1.1.2 / 1.0.0.2',\n      country: 'Australia',\n      location: {\n        lat: -33.494,\n        long: 143.2104\n      },\n      filter: true,\n      cors: true\n    },\n    {\n      name: 'controld-block-malware',\n      endpoint: {\n        protocol: 'https:',\n        host: 'freedns.controld.com',\n        path: '/p1'\n      },\n      description: 'ControlD Free DNS. Take CONTROL of your Internet. Block unwanted content, bypass geo-restrictions and be more productive. DoH protocol and No logging. - https://controld.com/free-dns\\nThis DNS blocks Malware domains.',\n      country: 'Canada',\n      location: {\n        lat: 43.6319,\n        long: -79.3716\n      },\n      filter: true\n    },\n    {\n      name: 'controld-block-malware-ad',\n      endpoint: {\n        protocol: 'https:',\n        host: 'freedns.controld.com',\n        path: '/p2'\n      },\n      description: 'ControlD Free DNS. Take CONTROL of your Internet. Block unwanted content, bypass geo-restrictions and be more productive. DoH protocol and No logging. - https://controld.com/free-dns\\nThis DNS blocks Malware, Ads & Tracking domains.',\n      country: 'Canada',\n      location: {\n        lat: 43.6319,\n        long: -79.3716\n      },\n      filter: true\n    },\n    {\n      name: 'controld-block-malware-ad-social',\n      endpoint: {\n        protocol: 'https:',\n        host: 'freedns.controld.com',\n        path: '/p3'\n      },\n      description: 'ControlD Free DNS. Take CONTROL of your Internet. Block unwanted content, bypass geo-restrictions and be more productive. DoH protocol and No logging. - https://controld.com/free-dns\\nThis DNS blocks Malware, Ads & Tracking and Social Networks domains.',\n      country: 'Canada',\n      location: {\n        lat: 43.6319,\n        long: -79.3716\n      },\n      filter: true\n    },\n    {\n      name: 'controld-family-friendly',\n      endpoint: {\n        protocol: 'https:',\n        host: 'freedns.controld.com',\n        path: '/family'\n      },\n      description: 'ControlD Free DNS. Take CONTROL of your Internet. Block unwanted content, bypass geo-restrictions and be more productive. DoH protocol and No logging. - https://controld.com/free-dns\\nThis DNS blocks Malware, Ads & Tracking, Adult Content and Drugs domains.',\n      country: 'Canada',\n      location: {\n        lat: 43.6319,\n        long: -79.3716\n      },\n      filter: true\n    },\n    {\n      name: 'controld-uncensored',\n      endpoint: {\n        protocol: 'https:',\n        host: 'freedns.controld.com',\n        path: '/uncensored'\n      },\n      description: 'ControlD Free DNS. Take CONTROL of your Internet. Block unwanted content, bypass geo-restrictions and be more productive. DoH protocol and No logging. - https://controld.com/free-dns\\nThis DNS unblocks censored domains from various countries.',\n      country: 'Canada',\n      location: {\n        lat: 43.6319,\n        long: -79.3716\n      }\n    },\n    {\n      name: 'controld-unfiltered',\n      endpoint: {\n        protocol: 'https:',\n        host: 'freedns.controld.com',\n        path: '/p0'\n      },\n      description: 'ControlD Free DNS. Take CONTROL of your Internet. Block unwanted content, bypass geo-restrictions and be more productive. DoH protocol and No logging. - https://controld.com/free-dns\\nThis is a Unfiltered DNS, no DNS record blocking or manipulation here, if you want to block Malware, Ads & Tracking or Social Network domains, use the other ControlD DNS configs.',\n      country: 'Canada',\n      location: {\n        lat: 43.6319,\n        long: -79.3716\n      }\n    },\n    {\n      name: 'dns.digitale-gesellschaft.ch',\n      endpoint: {\n        protocol: 'https:',\n        host: 'dns.digitale-gesellschaft.ch'\n      },\n      description: 'Public DoH resolver operated by the Digital Society (https://www.digitale-gesellschaft.ch).\\nHosted in Zurich, Switzerland.\\nNon-logging, non-filtering, supports DNSSEC.',\n      country: 'Switzerland',\n      location: {\n        lat: 47.1449,\n        long: 8.1551\n      }\n    },\n    {\n      name: 'dns.ryan-palmer',\n      endpoint: {\n        protocol: 'https:',\n        host: 'dns1.ryan-palmer.com'\n      },\n      description: 'Non-logging, non-filtering, DNSSEC DoH Server. Hosted in the UK.',\n      country: 'United Kingdom',\n      location: {\n        lat: 51.5164,\n        long: -0.093\n      }\n    },\n    {\n      name: 'dns.sb',\n      endpoint: {\n        protocol: 'https:',\n        host: 'doh.sb',\n        ipv4: '185.222.222.222',\n        cors: true\n      },\n      description: 'DNSSEC-enabled DoH server by https://xtom.com/\\nhttps://dns.sb/doh/',\n      country: 'Unknown',\n      location: {\n        lat: 47,\n        long: 8\n      },\n      cors: true\n    },\n    {\n      name: 'dns.therifleman.name',\n      endpoint: {\n        protocol: 'https:',\n        host: 'dns.therifleman.name'\n      },\n      description: 'DNS-over-HTTPS DNS forwarder from Mumbai, India. Blocks web and Android trackers and ads.\\nIP addresses are not logged, but queries are logged for 24 hours for debugging.\\nReport issues, send suggestions @ joker349 at protonmail.com.\\nAlso supports DoT (for android) @ dns.therifleman.name and plain DNS @ 172.104.206.174',\n      country: 'United States',\n      location: {\n        lat: 37.751,\n        long: -97.822\n      },\n      filter: true\n    },\n    {\n      name: 'dnsforfamily-doh',\n      endpoint: {\n        protocol: 'https:',\n        host: 'dns-doh.dnsforfamily.com'\n      },\n      description: '(DoH Protocol) (Now supports DNSSEC). Block adult websites, gambling websites, malwares and advertisements.\\nIt also enforces safe search in: Google, YouTube, Bing, DuckDuckGo and Yandex.\\nSocial websites like Facebook and Instagram are not blocked. No DNS queries are logged.\\nAs of 26-May-2022 5.9 million websites are blocked and new websites are added to blacklist daily.\\nCompletely free, no ads or any commercial motive. Operating for 4 years now.\\nProvided by: https://dnsforfamily.com',\n      country: 'Finland',\n      location: {\n        lat: 60.1758,\n        long: 24.9349\n      },\n      filter: true\n    },\n    {\n      name: 'dnsforfamily-doh-no-safe-search',\n      endpoint: {\n        protocol: 'https:',\n        host: 'dns-doh-no-safe-search.dnsforfamily.com'\n      },\n      description: '(DoH Protocol) (Now supports DNSSEC) Block adult websites, gambling websites, malwares and advertisements.\\nUnlike other dnsforfamily servers, this one does not enforces safe search. So Google, YouTube, Bing, DuckDuckGo and Yandex are completely accessible without any restriction.\\nSocial websites like Facebook and Instagram are not blocked. No DNS queries are logged.\\nAs of 26-May-2022 5.9 million websites are blocked and new websites are added to blacklist daily.\\nCompletely free, no ads or any commercial motive. Operating for 4 years now.\\nWarning: This server is incompatible with anonymization.\\nProvided by: https://dnsforfamily.com',\n      country: 'Finland',\n      location: {\n        lat: 60.1758,\n        long: 24.9349\n      },\n      filter: true\n    },\n    {\n      name: 'dnsforge.de',\n      endpoint: {\n        protocol: 'https:',\n        host: 'dnsforge.de',\n        cors: true\n      },\n      description: 'Public DoH resolver running with Pihole for Adblocking (https://dnsforge.de).\\nNon-logging, AD-filtering, supports DNSSEC. Hosted in Germany.',\n      country: 'Germany',\n      location: {\n        lat: 52.2998,\n        long: 9.447\n      },\n      filter: true,\n      cors: true\n    },\n    {\n      name: 'dnshome-doh',\n      endpoint: {\n        protocol: 'https:',\n        host: 'dns.dnshome.de'\n      },\n      description: 'https://www.dnshome.de/ public resolver in Germany'\n    },\n    {\n      name: 'dnspod-doh',\n      endpoint: {\n        protocol: 'https:',\n        host: 'doh.pub',\n        cors: true\n      },\n      description: 'A public DNS resolver in mainland China provided by DNSPod (Tencent Cloud).\\nhttps://www.dnspod.cn/Products/Public.DNS?lang=en',\n      filter: true,\n      log: true,\n      cors: true\n    },\n    {\n      name: 'dnswarden-asia-adblock-dohv4',\n      endpoint: {\n        protocol: 'https:',\n        host: 'doh.asia.dnswarden.com',\n        path: '/adblock'\n      },\n      description: 'Hosted in Singapore. For more information look [here](https://github.com/bhanupratapys/dnswarden) or [here](https://dnswarden.com).',\n      country: 'Singapore',\n      location: {\n        lat: 1.2929,\n        long: 103.8547\n      },\n      filter: true\n    },\n    {\n      name: 'dnswarden-asia-adultfilter-dohv4',\n      endpoint: {\n        protocol: 'https:',\n        host: 'doh.asia.dnswarden.com',\n        path: '/adultfilter'\n      },\n      description: 'Hosted in Singapore. For more information look [here](https://github.com/bhanupratapys/dnswarden) or [here](https://dnswarden.com).',\n      country: 'Singapore',\n      location: {\n        lat: 1.2929,\n        long: 103.8547\n      },\n      filter: true\n    },\n    {\n      name: 'dnswarden-asia-uncensor-dohv4',\n      endpoint: {\n        protocol: 'https:',\n        host: 'doh.asia.dnswarden.com',\n        path: '/uncensored'\n      },\n      description: 'Hosted in Singapore. For more information look [here](https://github.com/bhanupratapys/dnswarden) or [here](https://dnswarden.com).',\n      country: 'Singapore',\n      location: {\n        lat: 1.2929,\n        long: 103.8547\n      }\n    },\n    {\n      name: 'dnswarden-eu-adblock-dohv4',\n      endpoint: {\n        protocol: 'https:',\n        host: 'doh.eu.dnswarden.com'\n      },\n      description: 'Hosted in Germany. For more information look [here](https://github.com/bhanupratapys/dnswarden) or [here](https://dnswarden.com).',\n      country: 'Germany',\n      location: {\n        lat: 50.1103,\n        long: 8.7147\n      },\n      filter: true\n    },\n    {\n      name: 'dnswarden-us-adblock-dohv4',\n      endpoint: {\n        protocol: 'https:',\n        host: 'doh.us.dnswarden.com'\n      },\n      description: 'Hosted in USA (Dallas) . For more information look [here](https://github.com/bhanupratapys/dnswarden) or [here](https://dnswarden.com).',\n      country: 'United States',\n      location: {\n        lat: 32.7889,\n        long: -96.8021\n      },\n      filter: true\n    },\n    {\n      name: 'doh-ch-blahdns',\n      endpoint: {\n        protocol: 'https:',\n        host: 'doh-ch.blahdns.com',\n        cors: true\n      },\n      description: 'Blocks ad and Tracking, no Logging, DNSSEC, Hosted in Switzerland. By https://blahdns.com/',\n      country: 'Netherlands',\n      location: {\n        lat: 52.3824,\n        long: 4.8995\n      },\n      filter: true,\n      cors: true\n    },\n    {\n      name: 'doh-cleanbrowsing-adult',\n      endpoint: {\n        protocol: 'https:',\n        host: 'doh.cleanbrowsing.org',\n        path: '/doh/adult-filter/',\n        cors: true\n      },\n      description: 'Blocks access to all adult, pornographic and explicit sites. It does\\nnot block proxy or VPNs, nor mixed-content sites. Sites like Reddit\\nare allowed. Google and Bing are set to the Safe Mode.\\nBy https://cleanbrowsing.org/',\n      filter: true,\n      cors: true\n    },\n    {\n      name: 'doh-cleanbrowsing-family',\n      endpoint: {\n        protocol: 'https:',\n        host: 'doh.cleanbrowsing.org',\n        path: '/doh/family-filter/',\n        cors: true\n      },\n      description: 'Blocks access to all adult, pornographic and explicit sites. It also\\nblocks proxy and VPN domains that are used to bypass the filters.\\nMixed content sites (like Reddit) are also blocked. Google, Bing and\\nYoutube are set to the Safe Mode.\\nBy https://cleanbrowsing.org/',\n      filter: true,\n      cors: true\n    },\n    {\n      name: 'doh-cleanbrowsing-security',\n      endpoint: {\n        protocol: 'https:',\n        host: 'doh.cleanbrowsing.org',\n        path: '/doh/security-filter/',\n        cors: true\n      },\n      description: 'Block access to phishing, malware and malicious domains. It does not block adult content.\\nBy https://cleanbrowsing.org/',\n      filter: true,\n      cors: true\n    },\n    {\n      name: 'doh-crypto-sx',\n      endpoint: {\n        protocol: 'https:',\n        host: 'doh.crypto.sx',\n        cors: true\n      },\n      description: 'DNS-over-HTTPS server. Anycast, no logs, no censorship, DNSSEC.\\nBackend hosted by Scaleway, globally cached via Cloudflare.\\nMaintained by Frank Denis.',\n      country: 'United States',\n      location: {\n        lat: 37.751,\n        long: -97.822\n      },\n      cors: true\n    },\n    {\n      name: 'doh-crypto-sx-ipv6',\n      endpoint: {\n        protocol: 'https:',\n        host: 'doh-ipv6.crypto.sx',\n        cors: true\n      },\n      description: 'DNS-over-HTTPS server accessible over IPv6. Anycast, no logs, no censorship, DNSSEC.\\nBackend hosted by Scaleway, globally cached via Cloudflare.\\nMaintained by Frank Denis.',\n      country: 'United States',\n      location: {\n        lat: 37.751,\n        long: -97.822\n      },\n      cors: true\n    },\n    {\n      name: 'doh-de-blahdns',\n      endpoint: {\n        protocol: 'https:',\n        host: 'doh-de.blahdns.com',\n        cors: true\n      },\n      description: 'Blocks ad and Tracking, no Logging, DNSSEC, Hosted in Germany. By https://blahdns.com/',\n      country: 'Germany',\n      location: {\n        lat: 51.2993,\n        long: 9.491\n      },\n      filter: true,\n      cors: true\n    },\n    {\n      name: 'doh-fi-blahdns',\n      endpoint: {\n        protocol: 'https:',\n        host: 'doh-fi.blahdns.com',\n        cors: true\n      },\n      description: 'Blocks ad and Tracking, no Logging, DNSSEC, Hosted in Finland. By https://blahdns.com/',\n      country: 'Finland',\n      location: {\n        lat: 60.1758,\n        long: 24.9349\n      },\n      filter: true,\n      cors: true\n    },\n    {\n      name: 'doh-ibksturm',\n      endpoint: {\n        protocol: 'https:',\n        host: 'ibksturm.synology.me'\n      },\n      description: 'DoH & DoT Server, No Logging, No Filters, DNSSEC\\nRunning privately by ibksturm in Thurgau, Switzerland'\n    },\n    {\n      name: 'doh-jp-blahdns',\n      endpoint: {\n        protocol: 'https:',\n        host: 'doh-jp.blahdns.com',\n        cors: true\n      },\n      description: 'Blocks ad and Tracking, no Logging, DNSSEC, Hosted in Japan. By https://blahdns.com/',\n      country: 'Japan',\n      location: {\n        lat: 35.6882,\n        long: 139.7532\n      },\n      filter: true,\n      cors: true\n    },\n    {\n      name: 'doh.ffmuc.net',\n      endpoint: {\n        protocol: 'https:',\n        host: 'doh.ffmuc.net'\n      },\n      description: 'An open (non-logging, non-filtering, non-censoring) DoH resolver operated by Freifunk Munich with nodes in DE.\\nhttps://ffmuc.net/',\n      country: 'Germany',\n      location: {\n        lat: 51.2993,\n        long: 9.491\n      }\n    },\n    {\n      name: 'doh.tiarap.org',\n      endpoint: {\n        protocol: 'https:',\n        host: 'doh.tiarap.org'\n      },\n      description: 'Non-Logging DNS-over-HTTPS server, cached via Cloudflare.\\nFilters out ads, trackers and malware, NO ECS, supports DNSSEC.',\n      country: 'United States',\n      location: {\n        lat: 37.751,\n        long: -97.822\n      },\n      filter: true\n    },\n    {\n      name: 'google',\n      endpoint: {\n        protocol: 'https:',\n        host: 'dns.google',\n        ipv4: '8.8.8.8',\n        cors: true\n      },\n      description: 'Google DNS (anycast)',\n      country: 'United States',\n      location: {\n        lat: 37.751,\n        long: -97.822\n      },\n      log: true,\n      cors: true\n    },\n    {\n      name: 'hdns',\n      endpoint: {\n        protocol: 'https:',\n        host: 'query.hdns.io',\n        cors: true\n      },\n      description: 'HDNS is a public DNS resolver that supports Handshake domains.\\nhttps://www.hdns.io',\n      country: 'United States',\n      location: {\n        lat: 37.7771,\n        long: -122.406\n      },\n      cors: true\n    },\n    {\n      name: 'he',\n      endpoint: {\n        protocol: 'https:',\n        host: 'ordns.he.net'\n      },\n      description: 'Hurricane Electric DoH server (anycast)\\nUnknown logging policy.',\n      country: 'United States',\n      location: {\n        lat: 37.751,\n        long: -97.822\n      },\n      log: true\n    },\n    {\n      name: 'id-gmail-doh',\n      endpoint: {\n        protocol: 'https:',\n        host: 'doh.tiar.app'\n      },\n      description: 'Non-Logging DNS-over-HTTPS server located in Singapore.\\nFilters out ads, trackers and malware, supports DNSSEC, provided by id-gmail.',\n      country: 'Singapore',\n      location: {\n        lat: 1.2929,\n        long: 103.8547\n      },\n      filter: true\n    },\n    {\n      name: 'iij',\n      endpoint: {\n        protocol: 'https:',\n        host: 'public.dns.iij.jp'\n      },\n      description: 'DoH server operated by Internet Initiative Japan in Tokyo.\\nhttps://www.iij.ad.jp/',\n      country: 'Japan',\n      location: {\n        lat: 35.69,\n        long: 139.69\n      },\n      log: true\n    },\n    {\n      name: 'iqdns-doh',\n      endpoint: {\n        protocol: 'https:',\n        host: 'a.passcloud.xyz'\n      },\n      description: 'Non-logging DoH service runned by V2EX.com user johnsonwil.\\nReturns \"no such domain\" for anti-Chinese government websites. Supports DNSSEC.\\nFor more information: https://www.v2ex.com/t/785666',\n      filter: true\n    },\n    {\n      name: 'jp.tiar.app-doh',\n      endpoint: {\n        protocol: 'https:',\n        host: 'jp.tiar.app'\n      },\n      description: 'Non-Logging, Non-Filtering DNS-over-HTTPS server in Japan.\\nNo ECS, Support DNSSEC',\n      country: 'Japan',\n      location: {\n        lat: 35.6882,\n        long: 139.7532\n      }\n    },\n    {\n      name: 'jp.tiarap.org',\n      endpoint: {\n        protocol: 'https:',\n        host: 'jp.tiarap.org'\n      },\n      description: 'DNS-over-HTTPS Server. Non-Logging, Non-Filtering, No ECS, Support DNSSEC.\\nCached via Cloudflare.'\n    },\n    {\n      name: 'libredns',\n      endpoint: {\n        protocol: 'https:',\n        host: 'doh.libredns.gr'\n      },\n      description: 'DoH server in Germany. No logging, but no DNS padding and no DNSSEC support.\\nhttps://libredns.gr/',\n      country: 'Germany',\n      location: {\n        lat: 51.2993,\n        long: 9.491\n      }\n    },\n    {\n      name: 'nextdns',\n      endpoint: {\n        protocol: 'https:',\n        host: 'anycsast.dns.nextdns.io'\n      },\n      description: 'NextDNS is a cloud-based private DNS service that gives you full control\\nover what is allowed and what is blocked on the Internet.\\nDNSSEC, Anycast, Non-logging, NoFilters\\nhttps://www.nextdns.io/',\n      country: 'Netherlands',\n      location: {\n        lat: 52.3891,\n        long: 4.6563\n      }\n    },\n    {\n      name: 'nextdns-ultralow',\n      endpoint: {\n        protocol: 'https:',\n        host: 'dns.nextdns.io',\n        path: '/dnscrypt-proxy'\n      },\n      description: 'NextDNS is a cloud-based private DNS service that gives you full control\\nover what is allowed and what is blocked on the Internet.\\nhttps://www.nextdns.io/\\nTo select the server location, the \"-ultralow\" variant relies on bootstrap servers\\ninstead of anycast.'\n    },\n    {\n      name: 'njalla-doh',\n      endpoint: {\n        protocol: 'https:',\n        host: 'dns.njal.la',\n        cors: true\n      },\n      description: 'Non-logging DoH server in Sweden operated by Njalla.\\nhttps://dns.njal.la/',\n      country: 'Sweden',\n      location: {\n        lat: 59.3247,\n        long: 18.056\n      },\n      cors: true\n    },\n    {\n      name: 'odoh-cloudflare',\n      endpoint: {\n        protocol: 'https:',\n        host: 'odoh.cloudflare-dns.com',\n        cors: true\n      },\n      description: 'Cloudflare ODoH server.\\nhttps://cloudflare.com',\n      cors: true\n    },\n    {\n      name: 'odoh-crypto-sx',\n      endpoint: {\n        protocol: 'https:',\n        host: 'odoh.crypto.sx',\n        cors: true\n      },\n      description: 'ODoH target server. Anycast, no logs.\\nBackend hosted by Scaleway. Maintained by Frank Denis.',\n      cors: true\n    },\n    {\n      name: 'odoh-id-gmail',\n      endpoint: {\n        protocol: 'https:',\n        host: 'doh.tiar.app',\n        path: '/odoh'\n      },\n      description: 'ODoH target server. Based in Singapore, no logs.\\nFilter ads, trackers and malware.',\n      filter: true\n    },\n    {\n      name: 'odoh-jp.tiar.app',\n      endpoint: {\n        protocol: 'https:',\n        host: 'jp.tiar.app',\n        path: '/odoh'\n      },\n      description: 'ODoH target server. no logs.'\n    },\n    {\n      name: 'odoh-jp.tiarap.org',\n      endpoint: {\n        protocol: 'https:',\n        host: 'jp.tiarap.org',\n        path: '/odoh'\n      },\n      description: 'ODoH target server via Cloudflare, no logs.'\n    },\n    {\n      name: 'odoh-resolver4.dns.openinternet.io',\n      endpoint: {\n        protocol: 'https:',\n        host: 'resolver4.dns.openinternet.io'\n      },\n      description: \"ODoH target server. no logs, no filter, DNSSEC.\\nRunning on dedicated hardware colocated at Sonic.net in Santa Rosa, CA in the United States.\\nUses Sonic's recusrive DNS servers as upstream resolvers (but is not affiliated with Sonic\\nin any way). Provided by https://openinternet.io\"\n    },\n    {\n      name: 'odoh-tiarap.org',\n      endpoint: {\n        protocol: 'https:',\n        host: 'doh.tiarap.org',\n        path: '/odoh'\n      },\n      description: 'ODoH target server via Cloudflare, no logs.\\nFilter ads, trackers and malware.',\n      filter: true\n    },\n    {\n      name: 'publicarray-au2-doh',\n      endpoint: {\n        protocol: 'https:',\n        host: 'doh-2.seby.io',\n        cors: true\n      },\n      description: 'DNSSEC • OpenNIC • Non-logging • Uncensored - hosted on ovh.com.au\\nMaintained by publicarray - https://dns.seby.io',\n      country: 'Australia',\n      location: {\n        lat: -33.8591,\n        long: 151.2002\n      },\n      cors: true\n    },\n    {\n      name: 'puredns-doh',\n      endpoint: {\n        protocol: 'https:',\n        host: 'puredns.org',\n        ipv4: '146.190.6.13',\n        cors: true\n      },\n      description: 'Public uncensored DNS resolver in Singapore - https://puredns.org\\n** Only available in Indonesia and Singapore **',\n      country: 'United States',\n      location: {\n        lat: 37.751,\n        long: -97.822\n      },\n      cors: true\n    },\n    {\n      name: 'quad101',\n      endpoint: {\n        protocol: 'https:',\n        host: 'dns.twnic.tw',\n        cors: true\n      },\n      description: 'DNSSEC-aware public resolver by the Taiwan Network Information Center (TWNIC)\\nhttps://101.101.101.101/index_en.html',\n      cors: true\n    },\n    {\n      name: 'quad9-doh-ip4-port443-filter-ecs-pri',\n      endpoint: {\n        protocol: 'https:',\n        host: 'dns11.quad9.net',\n        ipv4: '149.112.112.11'\n      },\n      description: 'Quad9 (anycast) dnssec/no-log/filter/ecs 9.9.9.11 - 149.112.112.11',\n      country: 'United States',\n      location: {\n        lat: 37.751,\n        long: -97.822\n      },\n      filter: true\n    },\n    {\n      name: 'quad9-doh-ip4-port443-filter-pri',\n      endpoint: {\n        protocol: 'https:',\n        host: 'dns.quad9.net',\n        ipv4: '149.112.112.112'\n      },\n      description: 'Quad9 (anycast) dnssec/no-log/filter 9.9.9.9 - 149.112.112.9 - 149.112.112.112',\n      country: 'United States',\n      location: {\n        lat: 37.751,\n        long: -97.822\n      },\n      filter: true\n    },\n    {\n      name: 'quad9-doh-ip4-port443-nofilter-ecs-pri',\n      endpoint: {\n        protocol: 'https:',\n        host: 'dns12.quad9.net',\n        ipv4: '9.9.9.12'\n      },\n      description: 'Quad9 (anycast) no-dnssec/no-log/no-filter/ecs 9.9.9.12 - 149.112.112.12',\n      country: 'United States',\n      location: {\n        lat: 37.751,\n        long: -97.822\n      }\n    },\n    {\n      name: 'quad9-doh-ip4-port443-nofilter-pri',\n      endpoint: {\n        protocol: 'https:',\n        host: 'dns10.quad9.net',\n        ipv4: '149.112.112.10'\n      },\n      description: 'Quad9 (anycast) no-dnssec/no-log/no-filter 9.9.9.10 - 149.112.112.10',\n      country: 'United States',\n      location: {\n        lat: 37.751,\n        long: -97.822\n      }\n    },\n    {\n      name: 'quad9-doh-ip6-port5053-filter-pri',\n      endpoint: {\n        protocol: 'https:',\n        host: 'dns9.quad9.net'\n      },\n      description: 'Quad9 (anycast) dnssec/no-log/filter 2620:fe::fe - 2620:fe::9 - 2620:fe::fe:9',\n      country: 'United States',\n      location: {\n        lat: 37.751,\n        long: -97.822\n      },\n      filter: true\n    },\n    {\n      name: 'safesurfer-doh',\n      endpoint: {\n        protocol: 'https:',\n        host: 'doh.safesurfer.io'\n      },\n      description: 'Family safety focused blocklist for over 2 million adult sites, as well as phishing and malware and more.\\nFree to use, paid for customizing blocking for more categories+sites and viewing usage at my.safesurfer.io. Logs taken for viewing\\nusage, data never sold - https://safesurfer.io',\n      filter: true,\n      log: true\n    },\n    {\n      name: 'sth-ads-doh-se',\n      endpoint: {\n        protocol: 'https:',\n        host: 'dnsse-noads.alekberg.net'\n      },\n      description: 'Resolver in Stockholm, Sweden. DoH server. Non-logging, remove ads and malware, DNSSEC.',\n      country: 'Bulgaria',\n      location: {\n        lat: 42.696,\n        long: 23.332\n      },\n      filter: true\n    },\n    {\n      name: 'sth-doh-se',\n      endpoint: {\n        protocol: 'https:',\n        host: 'dnsse.alekberg.net'\n      },\n      description: 'Resolver in Stockholm, Sweden. DoH server. Non-logging, non-filtering, DNSSEC.',\n      country: 'Bulgaria',\n      location: {\n        lat: 42.696,\n        long: 23.332\n      }\n    },\n    {\n      name: 'switch',\n      endpoint: {\n        protocol: 'https:',\n        host: 'dns.switch.ch'\n      },\n      description: 'Public DoH service provided by SWITCH in Switzerland\\nhttps://www.switch.ch\\nProvides protection against malware, but does not block ads.',\n      filter: true\n    },\n    {\n      name: 'uncensoreddns-dk-ipv4',\n      endpoint: {\n        protocol: 'https:',\n        host: 'unicast.uncensoreddns.org'\n      },\n      description: 'Also known as censurfridns.\\nDoH, no logs, no filter, DNSSEC, unicast hosted in Denmark - https://blog.uncensoreddns.org',\n      country: 'Denmark',\n      location: {\n        lat: 55.7123,\n        long: 12.0564\n      }\n    },\n    {\n      name: 'uncensoreddns-ipv4',\n      endpoint: {\n        protocol: 'https:',\n        host: 'anycast.uncensoreddns.org'\n      },\n      description: 'Also known as censurfridns.\\nDoH, no logs, no filter, DNSSEC, anycast - https://blog.uncensoreddns.org',\n      country: 'Denmark',\n      location: {\n        lat: 55.7123,\n        long: 12.0564\n      }\n    },\n    {\n      name: 'v.dnscrypt.uk-doh-ipv4',\n      endpoint: {\n        protocol: 'https:',\n        host: 'v.dnscrypt.uk'\n      },\n      description: 'DoH, no logs, uncensored, DNSSEC. Hosted in London UK on Digital Ocean\\nhttps://www.dnscrypt.uk',\n      country: 'United Kingdom',\n      location: {\n        lat: 51.4964,\n        long: -0.1224\n      }\n    }\n  ],\n  time: 1654187067783\n}\n","import { Logger } from \"@waku/utils\";\nimport { bytesToUtf8 } from \"@waku/utils/bytes\";\nimport { query, wellknown } from \"dns-query\";\nconst log = new Logger(\"dns-over-https\");\nexport class DnsOverHttps {\n    endpoints;\n    retries;\n    /**\n     * Create new Dns-Over-Http DNS client.\n     *\n     * @param endpoints The endpoints for Dns-Over-Https queries;\n     * Defaults to using dns-query's API..\n     * @param retries Retries if a given endpoint fails.\n     *\n     * @throws {code: string} If DNS query fails.\n     */\n    static async create(endpoints, retries) {\n        const _endpoints = endpoints ?? (await wellknown.endpoints(\"doh\"));\n        return new DnsOverHttps(_endpoints, retries);\n    }\n    constructor(endpoints, retries = 3) {\n        this.endpoints = endpoints;\n        this.retries = retries;\n    }\n    /**\n     * Resolves a TXT record\n     *\n     * @param domain The domain name\n     *\n     * @throws if the query fails\n     */\n    async resolveTXT(domain) {\n        let answers;\n        try {\n            const res = await query({\n                question: { type: \"TXT\", name: domain }\n            }, {\n                endpoints: this.endpoints,\n                retries: this.retries\n            });\n            answers = res.answers;\n        }\n        catch (error) {\n            log.error(\"query failed: \", error);\n            throw new Error(\"DNS query failed\");\n        }\n        if (!answers)\n            throw new Error(`Could not resolve ${domain}`);\n        const data = answers.map((a) => a.data);\n        const result = [];\n        data.forEach((d) => {\n            if (typeof d === \"string\") {\n                result.push(d);\n            }\n            else if (Array.isArray(d)) {\n                d.forEach((sd) => {\n                    if (typeof sd === \"string\") {\n                        result.push(sd);\n                    }\n                    else {\n                        result.push(bytesToUtf8(sd));\n                    }\n                });\n            }\n            else {\n                result.push(bytesToUtf8(d));\n            }\n        });\n        return result;\n    }\n}\n//# sourceMappingURL=dns_over_https.js.map","import { ENR } from \"@waku/enr\";\nimport { keccak256, verifySignature } from \"@waku/enr\";\nimport { utf8ToBytes } from \"@waku/utils/bytes\";\nimport base32 from \"hi-base32\";\nimport { fromString } from \"uint8arrays/from-string\";\nexport class ENRTree {\n    static RECORD_PREFIX = ENR.RECORD_PREFIX;\n    static TREE_PREFIX = \"enrtree:\";\n    static BRANCH_PREFIX = \"enrtree-branch:\";\n    static ROOT_PREFIX = \"enrtree-root:\";\n    /**\n     * Extracts the branch subdomain referenced by a DNS tree root string after verifying\n     * the root record signature with its base32 compressed public key.\n     */\n    static parseAndVerifyRoot(root, publicKey) {\n        if (!root.startsWith(this.ROOT_PREFIX))\n            throw new Error(`ENRTree root entry must start with '${this.ROOT_PREFIX}'`);\n        const rootValues = ENRTree.parseRootValues(root);\n        const decodedPublicKey = base32.decode.asBytes(publicKey);\n        // The signature is a 65-byte secp256k1 over the keccak256 hash\n        // of the record content, excluding the `sig=` part, encoded as URL-safe base64 string\n        // (Trailing recovery bit must be trimmed to pass `ecdsaVerify` method)\n        const signedComponent = root.split(\" sig\")[0];\n        const signedComponentBuffer = utf8ToBytes(signedComponent);\n        const signatureBuffer = fromString(rootValues.signature, \"base64url\").slice(0, 64);\n        const isVerified = verifySignature(signatureBuffer, keccak256(signedComponentBuffer), new Uint8Array(decodedPublicKey));\n        if (!isVerified)\n            throw new Error(\"Unable to verify ENRTree root signature\");\n        return rootValues.eRoot;\n    }\n    static parseRootValues(txt) {\n        const matches = txt.match(/^enrtree-root:v1 e=([^ ]+) l=([^ ]+) seq=(\\d+) sig=([^ ]+)$/);\n        if (!Array.isArray(matches))\n            throw new Error(\"Could not parse ENRTree root entry\");\n        matches.shift(); // The first entry is the full match\n        const [eRoot, lRoot, seq, signature] = matches;\n        if (!eRoot)\n            throw new Error(\"Could not parse 'e' value from ENRTree root entry\");\n        if (!lRoot)\n            throw new Error(\"Could not parse 'l' value from ENRTree root entry\");\n        if (!seq)\n            throw new Error(\"Could not parse 'seq' value from ENRTree root entry\");\n        if (!signature)\n            throw new Error(\"Could not parse 'sig' value from ENRTree root entry\");\n        return { eRoot, lRoot, seq: Number(seq), signature };\n    }\n    /**\n     * Returns the public key and top level domain of an ENR tree entry.\n     * The domain is the starting point for traversing a set of linked DNS TXT records\n     * and the public key is used to verify the root entry record\n     */\n    static parseTree(tree) {\n        if (!tree.startsWith(this.TREE_PREFIX))\n            throw new Error(`ENRTree tree entry must start with '${this.TREE_PREFIX}'`);\n        const matches = tree.match(/^enrtree:\\/\\/([^@]+)@(.+)$/);\n        if (!Array.isArray(matches))\n            throw new Error(\"Could not parse ENRTree tree entry\");\n        matches.shift(); // The first entry is the full match\n        const [publicKey, domain] = matches;\n        if (!publicKey)\n            throw new Error(\"Could not parse public key from ENRTree tree entry\");\n        if (!domain)\n            throw new Error(\"Could not parse domain from ENRTree tree entry\");\n        return { publicKey, domain };\n    }\n    /**\n     * Returns subdomains listed in an ENR branch entry. These in turn lead to\n     * either further branch entries or ENR records.\n     */\n    static parseBranch(branch) {\n        if (!branch.startsWith(this.BRANCH_PREFIX))\n            throw new Error(`ENRTree branch entry must start with '${this.BRANCH_PREFIX}'`);\n        return branch.split(this.BRANCH_PREFIX)[1].split(\",\");\n    }\n}\n//# sourceMappingURL=enrtree.js.map","import { Logger } from \"@waku/utils\";\nconst log = new Logger(\"discovery:fetch_nodes\");\n/**\n * Fetch nodes using passed [[getNode]] until all wanted capabilities are\n * fulfilled or the number of [[getNode]] call exceeds the sum of\n * [[wantedNodeCapabilityCount]] plus [[errorTolerance]].\n */\nexport async function fetchNodesUntilCapabilitiesFulfilled(wantedNodeCapabilityCount, errorTolerance, getNode) {\n    const wanted = {\n        relay: wantedNodeCapabilityCount.relay ?? 0,\n        store: wantedNodeCapabilityCount.store ?? 0,\n        filter: wantedNodeCapabilityCount.filter ?? 0,\n        lightPush: wantedNodeCapabilityCount.lightPush ?? 0\n    };\n    const maxSearches = wanted.relay + wanted.store + wanted.filter + wanted.lightPush;\n    const actual = {\n        relay: 0,\n        store: 0,\n        filter: 0,\n        lightPush: 0\n    };\n    let totalSearches = 0;\n    const peers = [];\n    while (!isSatisfied(wanted, actual) &&\n        totalSearches < maxSearches + errorTolerance) {\n        const peer = await getNode();\n        if (peer && isNewPeer(peer, peers)) {\n            // ENRs without a waku2 key are ignored.\n            if (peer.waku2) {\n                if (helpsSatisfyCapabilities(peer.waku2, wanted, actual)) {\n                    addCapabilities(peer.waku2, actual);\n                    peers.push(peer);\n                }\n            }\n            log.info(`got new peer candidate from DNS address=${peer.nodeId}@${peer.ip}`);\n        }\n        totalSearches++;\n    }\n    return peers;\n}\n/**\n * Fetch nodes using passed [[getNode]] until all wanted capabilities are\n * fulfilled or the number of [[getNode]] call exceeds the sum of\n * [[wantedNodeCapabilityCount]] plus [[errorTolerance]].\n */\nexport async function* yieldNodesUntilCapabilitiesFulfilled(wantedNodeCapabilityCount, errorTolerance, getNode) {\n    const wanted = {\n        relay: wantedNodeCapabilityCount.relay ?? 0,\n        store: wantedNodeCapabilityCount.store ?? 0,\n        filter: wantedNodeCapabilityCount.filter ?? 0,\n        lightPush: wantedNodeCapabilityCount.lightPush ?? 0\n    };\n    const maxSearches = wanted.relay + wanted.store + wanted.filter + wanted.lightPush;\n    const actual = {\n        relay: 0,\n        store: 0,\n        filter: 0,\n        lightPush: 0\n    };\n    let totalSearches = 0;\n    const peerNodeIds = new Set();\n    while (!isSatisfied(wanted, actual) &&\n        totalSearches < maxSearches + errorTolerance) {\n        const peer = await getNode();\n        if (peer && peer.nodeId && !peerNodeIds.has(peer.nodeId)) {\n            peerNodeIds.add(peer.nodeId);\n            // ENRs without a waku2 key are ignored.\n            if (peer.waku2) {\n                if (helpsSatisfyCapabilities(peer.waku2, wanted, actual)) {\n                    addCapabilities(peer.waku2, actual);\n                    yield peer;\n                }\n            }\n            log.info(`got new peer candidate from DNS address=${peer.nodeId}@${peer.ip}`);\n        }\n        totalSearches++;\n    }\n}\nfunction isSatisfied(wanted, actual) {\n    return (actual.relay >= wanted.relay &&\n        actual.store >= wanted.store &&\n        actual.filter >= wanted.filter &&\n        actual.lightPush >= wanted.lightPush);\n}\nfunction isNewPeer(peer, peers) {\n    if (!peer.nodeId)\n        return false;\n    for (const existingPeer of peers) {\n        if (peer.nodeId === existingPeer.nodeId) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction addCapabilities(node, total) {\n    if (node.relay)\n        total.relay += 1;\n    if (node.store)\n        total.store += 1;\n    if (node.filter)\n        total.filter += 1;\n    if (node.lightPush)\n        total.lightPush += 1;\n}\n/**\n * Checks if the proposed ENR [[node]] helps satisfy the [[wanted]] capabilities,\n * considering the [[actual]] capabilities of nodes retrieved so far..\n *\n * @throws If the function is called when the wanted capabilities are already fulfilled.\n */\nfunction helpsSatisfyCapabilities(node, wanted, actual) {\n    if (isSatisfied(wanted, actual)) {\n        throw \"Internal Error: Waku2 wanted capabilities are already fulfilled\";\n    }\n    const missing = missingCapabilities(wanted, actual);\n    return ((missing.relay && node.relay) ||\n        (missing.store && node.store) ||\n        (missing.filter && node.filter) ||\n        (missing.lightPush && node.lightPush));\n}\n/**\n * Return a [[Waku2]] Object for which capabilities are set to true if they are\n * [[wanted]] yet missing from [[actual]].\n */\nfunction missingCapabilities(wanted, actual) {\n    return {\n        relay: actual.relay < wanted.relay,\n        store: actual.store < wanted.store,\n        filter: actual.filter < wanted.filter,\n        lightPush: actual.lightPush < wanted.lightPush\n    };\n}\n//# sourceMappingURL=fetch_nodes.js.map","import { EnrDecoder } from \"@waku/enr\";\nimport { Logger } from \"@waku/utils\";\nimport { DnsOverHttps } from \"./dns_over_https.js\";\nimport { ENRTree } from \"./enrtree.js\";\nimport { fetchNodesUntilCapabilitiesFulfilled, yieldNodesUntilCapabilitiesFulfilled } from \"./fetch_nodes.js\";\nconst log = new Logger(\"discovery:dns\");\nexport class DnsNodeDiscovery {\n    dns;\n    _DNSTreeCache;\n    _errorTolerance = 10;\n    static async dnsOverHttp(dnsClient) {\n        if (!dnsClient) {\n            dnsClient = await DnsOverHttps.create();\n        }\n        return new DnsNodeDiscovery(dnsClient);\n    }\n    /**\n     * Returns a list of verified peers listed in an EIP-1459 DNS tree. Method may\n     * return fewer peers than requested if @link wantedNodeCapabilityCount requires\n     * larger quantity of peers than available or the number of errors/duplicate\n     * peers encountered by randomized search exceeds the sum of the fields of\n     * @link wantedNodeCapabilityCount plus the @link _errorTolerance factor.\n     */\n    async getPeers(enrTreeUrls, wantedNodeCapabilityCount) {\n        const networkIndex = Math.floor(Math.random() * enrTreeUrls.length);\n        const { publicKey, domain } = ENRTree.parseTree(enrTreeUrls[networkIndex]);\n        const context = {\n            domain,\n            publicKey,\n            visits: {}\n        };\n        const peers = await fetchNodesUntilCapabilitiesFulfilled(wantedNodeCapabilityCount, this._errorTolerance, () => this._search(domain, context));\n        log.info(\"retrieved peers: \", peers.map((peer) => {\n            return {\n                id: peer.peerId?.toString(),\n                multiaddrs: peer.multiaddrs?.map((ma) => ma.toString())\n            };\n        }));\n        return peers;\n    }\n    constructor(dns) {\n        this._DNSTreeCache = {};\n        this.dns = dns;\n    }\n    /**\n     * {@inheritDoc getPeers}\n     */\n    async *getNextPeer(enrTreeUrls, wantedNodeCapabilityCount) {\n        const networkIndex = Math.floor(Math.random() * enrTreeUrls.length);\n        const { publicKey, domain } = ENRTree.parseTree(enrTreeUrls[networkIndex]);\n        const context = {\n            domain,\n            publicKey,\n            visits: {}\n        };\n        for await (const peer of yieldNodesUntilCapabilitiesFulfilled(wantedNodeCapabilityCount, this._errorTolerance, () => this._search(domain, context))) {\n            yield peer;\n        }\n    }\n    /**\n     * Runs a recursive, randomized descent of the DNS tree to retrieve a single\n     * ENR record as an ENR. Returns null if parsing or DNS resolution fails.\n     */\n    async _search(subdomain, context) {\n        try {\n            const entry = await this._getTXTRecord(subdomain, context);\n            context.visits[subdomain] = true;\n            let next;\n            let branches;\n            const entryType = getEntryType(entry);\n            try {\n                switch (entryType) {\n                    case ENRTree.ROOT_PREFIX:\n                        next = ENRTree.parseAndVerifyRoot(entry, context.publicKey);\n                        return await this._search(next, context);\n                    case ENRTree.BRANCH_PREFIX:\n                        branches = ENRTree.parseBranch(entry);\n                        next = selectRandomPath(branches, context);\n                        return await this._search(next, context);\n                    case ENRTree.RECORD_PREFIX:\n                        return EnrDecoder.fromString(entry);\n                    default:\n                        return null;\n                }\n            }\n            catch (error) {\n                log.error(`Failed to search DNS tree ${entryType} at subdomain ${subdomain}: ${error}`);\n                return null;\n            }\n        }\n        catch (error) {\n            log.error(`Failed to retrieve TXT record at subdomain ${subdomain}: ${error}`);\n            return null;\n        }\n    }\n    /**\n     * Retrieves the TXT record stored at a location from either\n     * this DNS tree cache or via DNS query.\n     *\n     * @throws if the TXT Record contains non-UTF-8 values.\n     */\n    async _getTXTRecord(subdomain, context) {\n        if (this._DNSTreeCache[subdomain]) {\n            return this._DNSTreeCache[subdomain];\n        }\n        // Location is either the top level tree entry host or a subdomain of it.\n        const location = subdomain !== context.domain\n            ? `${subdomain}.${context.domain}`\n            : context.domain;\n        const response = await this.dns.resolveTXT(location);\n        if (!response.length)\n            throw new Error(\"Received empty result array while fetching TXT record\");\n        if (!response[0].length)\n            throw new Error(\"Received empty TXT record\");\n        // Branch entries can be an array of strings of comma delimited subdomains, with\n        // some subdomain strings split across the array elements\n        const result = response.join(\"\");\n        this._DNSTreeCache[subdomain] = result;\n        return result;\n    }\n}\nfunction getEntryType(entry) {\n    if (entry.startsWith(ENRTree.ROOT_PREFIX))\n        return ENRTree.ROOT_PREFIX;\n    if (entry.startsWith(ENRTree.BRANCH_PREFIX))\n        return ENRTree.BRANCH_PREFIX;\n    if (entry.startsWith(ENRTree.RECORD_PREFIX))\n        return ENRTree.RECORD_PREFIX;\n    return \"\";\n}\n/**\n * Returns a randomly selected subdomain string from the list provided by a branch\n * entry record.\n *\n * The client must track subdomains which are already resolved to avoid\n * going into an infinite loop b/c branch entries can contain\n * circular references. It’s in the client’s best interest to traverse the\n * tree in random order.\n */\nfunction selectRandomPath(branches, context) {\n    // Identify domains already visited in this traversal of the DNS tree.\n    // Then filter against them to prevent cycles.\n    const circularRefs = {};\n    for (const [idx, subdomain] of branches.entries()) {\n        if (context.visits[subdomain]) {\n            circularRefs[idx] = true;\n        }\n    }\n    // If all possible paths are circular...\n    if (Object.keys(circularRefs).length === branches.length) {\n        throw new Error(\"Unresolvable circular path detected\");\n    }\n    // Randomly select a viable path\n    let index;\n    do {\n        index = Math.floor(Math.random() * branches.length);\n    } while (circularRefs[index]);\n    return branches[index];\n}\n//# sourceMappingURL=dns.js.map","import { CustomEvent, TypedEventEmitter } from \"@libp2p/interface\";\nimport { peerDiscoverySymbol as symbol } from \"@libp2p/interface\";\nimport { DNS_DISCOVERY_TAG } from \"@waku/interfaces\";\nimport { encodeRelayShard, Logger } from \"@waku/utils\";\nimport { DEFAULT_BOOTSTRAP_TAG_NAME, DEFAULT_BOOTSTRAP_TAG_TTL, DEFAULT_BOOTSTRAP_TAG_VALUE, DEFAULT_NODE_REQUIREMENTS } from \"./constants.js\";\nimport { DnsNodeDiscovery } from \"./dns.js\";\nconst log = new Logger(\"peer-discovery-dns\");\n/**\n * Parse options and expose function to return bootstrap peer addresses.\n */\nexport class PeerDiscoveryDns extends TypedEventEmitter {\n    nextPeer;\n    _started;\n    _components;\n    _options;\n    constructor(components, options) {\n        super();\n        this._started = false;\n        this._components = components;\n        this._options = options;\n        const { enrUrls } = options;\n        log.info(\"Use following EIP-1459 ENR Tree URLs: \", enrUrls);\n    }\n    /**\n     * Start discovery process\n     */\n    async start() {\n        log.info(\"Starting peer discovery via dns\");\n        this._started = true;\n        await this.findPeers();\n    }\n    async findPeers() {\n        if (!this.nextPeer) {\n            let { enrUrls } = this._options;\n            if (!Array.isArray(enrUrls))\n                enrUrls = [enrUrls];\n            const { wantedNodeCapabilityCount } = this._options;\n            const dns = await DnsNodeDiscovery.dnsOverHttp();\n            this.nextPeer = dns.getNextPeer.bind(dns, enrUrls, wantedNodeCapabilityCount);\n        }\n        for await (const peerEnr of this.nextPeer()) {\n            if (!this._started) {\n                return;\n            }\n            const { peerInfo, shardInfo } = peerEnr;\n            if (!peerInfo) {\n                continue;\n            }\n            const tagsToUpdate = {\n                [DEFAULT_BOOTSTRAP_TAG_NAME]: {\n                    value: this._options.tagValue ?? DEFAULT_BOOTSTRAP_TAG_VALUE,\n                    ttl: this._options.tagTTL ?? DEFAULT_BOOTSTRAP_TAG_TTL\n                }\n            };\n            let isPeerChanged = false;\n            const isPeerExists = await this._components.peerStore.has(peerInfo.id);\n            if (isPeerExists) {\n                const peer = await this._components.peerStore.get(peerInfo.id);\n                const hasBootstrapTag = peer.tags.has(DEFAULT_BOOTSTRAP_TAG_NAME);\n                if (!hasBootstrapTag) {\n                    isPeerChanged = true;\n                    await this._components.peerStore.merge(peerInfo.id, {\n                        tags: tagsToUpdate\n                    });\n                }\n            }\n            else {\n                isPeerChanged = true;\n                await this._components.peerStore.save(peerInfo.id, {\n                    tags: tagsToUpdate,\n                    ...(shardInfo && {\n                        metadata: {\n                            shardInfo: encodeRelayShard(shardInfo)\n                        }\n                    })\n                });\n            }\n            if (isPeerChanged) {\n                this.dispatchEvent(new CustomEvent(\"peer\", { detail: peerInfo }));\n            }\n        }\n    }\n    /**\n     * Stop emitting events\n     */\n    stop() {\n        this._started = false;\n    }\n    get [symbol]() {\n        return true;\n    }\n    get [Symbol.toStringTag]() {\n        return DNS_DISCOVERY_TAG;\n    }\n}\nexport function wakuDnsDiscovery(enrUrls, wantedNodeCapabilityCount = DEFAULT_NODE_REQUIREMENTS) {\n    return (components) => new PeerDiscoveryDns(components, { enrUrls, wantedNodeCapabilityCount });\n}\n//# sourceMappingURL=dns_discovery.js.map","import { proto_peer_exchange as proto } from \"@waku/proto\";\n/**\n * PeerExchangeRPC represents a message conforming to the Waku Peer Exchange protocol\n */\nexport class PeerExchangeRPC {\n    proto;\n    constructor(proto) {\n        this.proto = proto;\n    }\n    static createRequest(params) {\n        const { numPeers } = params;\n        return new PeerExchangeRPC({\n            query: {\n                numPeers: numPeers\n            },\n            response: undefined\n        });\n    }\n    /**\n     * Encode the current PeerExchangeRPC request to bytes\n     * @returns Uint8Array\n     */\n    encode() {\n        return proto.PeerExchangeRPC.encode(this.proto);\n    }\n    /**\n     * Decode the current PeerExchangeRPC request to bytes\n     * @returns Uint8Array\n     */\n    static decode(bytes) {\n        const res = proto.PeerExchangeRPC.decode(bytes);\n        return new PeerExchangeRPC(res);\n    }\n    get query() {\n        return this.proto.query;\n    }\n    get response() {\n        return this.proto.response;\n    }\n}\n//# sourceMappingURL=rpc.js.map","import { BaseProtocol } from \"@waku/core/lib/base_protocol\";\nimport { EnrDecoder } from \"@waku/enr\";\nimport { ProtocolError } from \"@waku/interfaces\";\nimport { isDefined } from \"@waku/utils\";\nimport { Logger } from \"@waku/utils\";\nimport all from \"it-all\";\nimport * as lp from \"it-length-prefixed\";\nimport { pipe } from \"it-pipe\";\nimport { Uint8ArrayList } from \"uint8arraylist\";\nimport { PeerExchangeRPC } from \"./rpc.js\";\nexport const PeerExchangeCodec = \"/vac/waku/peer-exchange/2.0.0-alpha1\";\nconst log = new Logger(\"peer-exchange\");\n/**\n * Implementation of the Peer Exchange protocol (https://rfc.vac.dev/spec/34/)\n */\nexport class WakuPeerExchange extends BaseProtocol {\n    /**\n     * @param components - libp2p components\n     */\n    constructor(components, pubsubTopics) {\n        super(PeerExchangeCodec, components, log, pubsubTopics);\n    }\n    /**\n     * Make a peer exchange query to a peer\n     */\n    async query(params) {\n        const { numPeers, peerId } = params;\n        const rpcQuery = PeerExchangeRPC.createRequest({\n            numPeers: BigInt(numPeers)\n        });\n        const peer = await this.peerStore.get(peerId);\n        if (!peer) {\n            return {\n                peerInfos: null,\n                error: ProtocolError.NO_PEER_AVAILABLE\n            };\n        }\n        let stream;\n        try {\n            stream = await this.getStream(peer);\n        }\n        catch (err) {\n            log.error(\"Failed to get stream\", err);\n            return {\n                peerInfos: null,\n                error: ProtocolError.NO_STREAM_AVAILABLE\n            };\n        }\n        const res = await pipe([rpcQuery.encode()], lp.encode, stream, lp.decode, async (source) => await all(source));\n        try {\n            const bytes = new Uint8ArrayList();\n            res.forEach((chunk) => {\n                bytes.append(chunk);\n            });\n            const { response } = PeerExchangeRPC.decode(bytes);\n            if (!response) {\n                log.error(\"PeerExchangeRPC message did not contains a `response` field\");\n                return {\n                    peerInfos: null,\n                    error: ProtocolError.EMPTY_PAYLOAD\n                };\n            }\n            const peerInfos = await Promise.all(response.peerInfos\n                .map((peerInfo) => peerInfo.enr)\n                .filter(isDefined)\n                .map(async (enr) => {\n                return { ENR: await EnrDecoder.fromRLP(enr) };\n            }));\n            return {\n                peerInfos,\n                error: null\n            };\n        }\n        catch (err) {\n            log.error(\"Failed to decode push reply\", err);\n            return {\n                peerInfos: null,\n                error: ProtocolError.DECODE_FAILED\n            };\n        }\n    }\n}\n/**\n *\n * @returns A function that creates a new peer exchange protocol\n */\nexport function wakuPeerExchange(pubsubTopics) {\n    return (components) => new WakuPeerExchange(components, pubsubTopics);\n}\n//# sourceMappingURL=waku_peer_exchange.js.map","import { CustomEvent, TypedEventEmitter } from \"@libp2p/interface\";\nimport { peerDiscoverySymbol as symbol } from \"@libp2p/interface\";\nimport { Tags } from \"@waku/interfaces\";\nimport { decodeRelayShard, encodeRelayShard, Logger } from \"@waku/utils\";\nimport { PeerExchangeCodec, WakuPeerExchange } from \"./waku_peer_exchange.js\";\nconst log = new Logger(\"peer-exchange-discovery\");\nconst DEFAULT_PEER_EXCHANGE_REQUEST_NODES = 10;\nconst DEFAULT_PEER_EXCHANGE_QUERY_INTERVAL_MS = 10 * 1000;\nconst DEFAULT_MAX_RETRIES = 3;\nexport const DEFAULT_PEER_EXCHANGE_TAG_NAME = Tags.PEER_EXCHANGE;\nconst DEFAULT_PEER_EXCHANGE_TAG_VALUE = 50;\nconst DEFAULT_PEER_EXCHANGE_TAG_TTL = 100_000_000;\nexport class PeerExchangeDiscovery extends TypedEventEmitter {\n    components;\n    peerExchange;\n    options;\n    isStarted;\n    queryingPeers = new Set();\n    queryAttempts = new Map();\n    handleDiscoveredPeer = (event) => {\n        const { protocols, peerId } = event.detail;\n        if (!protocols.includes(PeerExchangeCodec) ||\n            this.queryingPeers.has(peerId.toString()))\n            return;\n        this.queryingPeers.add(peerId.toString());\n        this.startRecurringQueries(peerId).catch((error) => log.error(`Error querying peer ${error}`));\n    };\n    constructor(components, pubsubTopics, options = {}) {\n        super();\n        this.components = components;\n        this.peerExchange = new WakuPeerExchange(components, pubsubTopics);\n        this.options = options;\n        this.isStarted = false;\n    }\n    /**\n     * Start emitting events\n     */\n    start() {\n        if (this.isStarted) {\n            return;\n        }\n        this.dispatchEvent(new CustomEvent(\"waku:peer-exchange:started\", { detail: true }));\n        log.info(\"Starting peer exchange node discovery, discovering peers\");\n        // might be better to use \"peer:identify\" or \"peer:update\"\n        this.components.events.addEventListener(\"peer:identify\", this.handleDiscoveredPeer);\n    }\n    /**\n     * Remove event listener\n     */\n    stop() {\n        if (!this.isStarted)\n            return;\n        log.info(\"Stopping peer exchange node discovery\");\n        this.isStarted = false;\n        this.queryingPeers.clear();\n        this.components.events.removeEventListener(\"peer:identify\", this.handleDiscoveredPeer);\n    }\n    get [symbol]() {\n        return true;\n    }\n    get [Symbol.toStringTag]() {\n        return \"@waku/peer-exchange\";\n    }\n    startRecurringQueries = async (peerId) => {\n        const peerIdStr = peerId.toString();\n        const { queryInterval = DEFAULT_PEER_EXCHANGE_QUERY_INTERVAL_MS, maxRetries = DEFAULT_MAX_RETRIES } = this.options;\n        log.info(`Querying peer: ${peerIdStr} (attempt ${this.queryAttempts.get(peerIdStr) ?? 1})`);\n        await this.query(peerId);\n        const currentAttempt = this.queryAttempts.get(peerIdStr) ?? 1;\n        if (currentAttempt > maxRetries) {\n            this.abortQueriesForPeer(peerIdStr);\n            return;\n        }\n        setTimeout(() => {\n            this.queryAttempts.set(peerIdStr, currentAttempt + 1);\n            this.startRecurringQueries(peerId).catch((error) => {\n                log.error(`Error in startRecurringQueries: ${error}`);\n            });\n        }, queryInterval * currentAttempt);\n    };\n    async query(peerId) {\n        const { error, peerInfos } = await this.peerExchange.query({\n            numPeers: DEFAULT_PEER_EXCHANGE_REQUEST_NODES,\n            peerId\n        });\n        if (error) {\n            log.error(\"Peer exchange query failed\", error);\n            return { error, peerInfos: null };\n        }\n        for (const _peerInfo of peerInfos) {\n            const { ENR } = _peerInfo;\n            if (!ENR) {\n                log.warn(\"No ENR in peerInfo object, skipping\");\n                continue;\n            }\n            const { peerId, peerInfo, shardInfo } = ENR;\n            if (!peerId || !peerInfo) {\n                continue;\n            }\n            const hasPeer = await this.components.peerStore.has(peerId);\n            if (hasPeer) {\n                const { hasMultiaddrDiff, hasShardDiff } = await this.checkPeerInfoDiff(peerInfo, shardInfo);\n                if (hasMultiaddrDiff || hasShardDiff) {\n                    log.info(`Peer ${peerId.toString()} has updated multiaddrs or shardInfo, updating`);\n                    if (hasMultiaddrDiff) {\n                        log.info(`Peer ${peerId.toString()} has updated multiaddrs, updating`);\n                        await this.components.peerStore.patch(peerId, {\n                            multiaddrs: peerInfo.multiaddrs\n                        });\n                    }\n                    if (hasShardDiff && shardInfo) {\n                        log.info(`Peer ${peerId.toString()} has updated shardInfo, updating`);\n                        await this.components.peerStore.merge(peerId, {\n                            metadata: {\n                                shardInfo: encodeRelayShard(shardInfo)\n                            }\n                        });\n                        this.dispatchEvent(new CustomEvent(\"peer\", {\n                            detail: {\n                                id: peerId,\n                                multiaddrs: peerInfo.multiaddrs\n                            }\n                        }));\n                    }\n                    continue;\n                }\n            }\n            // update the tags for the peer\n            await this.components.peerStore.save(peerId, {\n                tags: {\n                    [DEFAULT_PEER_EXCHANGE_TAG_NAME]: {\n                        value: this.options.tagValue ?? DEFAULT_PEER_EXCHANGE_TAG_VALUE,\n                        ttl: this.options.tagTTL ?? DEFAULT_PEER_EXCHANGE_TAG_TTL\n                    }\n                },\n                ...(shardInfo && {\n                    metadata: {\n                        shardInfo: encodeRelayShard(shardInfo)\n                    }\n                }),\n                ...(peerInfo.multiaddrs && {\n                    multiaddrs: peerInfo.multiaddrs\n                })\n            });\n            log.info(`Discovered peer: ${peerId.toString()}`);\n            this.dispatchEvent(new CustomEvent(\"peer\", {\n                detail: {\n                    id: peerId,\n                    multiaddrs: peerInfo.multiaddrs\n                }\n            }));\n        }\n        return { error: null, peerInfos };\n    }\n    abortQueriesForPeer(peerIdStr) {\n        log.info(`Aborting queries for peer: ${peerIdStr}`);\n        this.queryingPeers.delete(peerIdStr);\n        this.queryAttempts.delete(peerIdStr);\n    }\n    async checkPeerInfoDiff(peerInfo, shardInfo) {\n        const { id: peerId } = peerInfo;\n        const peer = await this.components.peerStore.get(peerId);\n        const existingMultiaddrs = peer.addresses.map((a) => a.multiaddr.toString());\n        const newMultiaddrs = peerInfo.multiaddrs.map((ma) => ma.toString());\n        const hasMultiaddrDiff = existingMultiaddrs.some((ma) => !newMultiaddrs.includes(ma));\n        let hasShardDiff = false;\n        const existingShardInfoBytes = peer.metadata.get(\"shardInfo\");\n        if (existingShardInfoBytes) {\n            const existingShardInfo = decodeRelayShard(existingShardInfoBytes);\n            if (existingShardInfo || shardInfo) {\n                hasShardDiff =\n                    existingShardInfo.clusterId !== shardInfo?.clusterId ||\n                        existingShardInfo.shards.some((shard) => !shardInfo?.shards.includes(shard));\n            }\n        }\n        return { hasMultiaddrDiff, hasShardDiff };\n    }\n}\nexport function wakuPeerExchangeDiscovery(pubsubTopics) {\n    return (components) => new PeerExchangeDiscovery(components, pubsubTopics);\n}\n//# sourceMappingURL=waku_peer_exchange_discovery.js.map","import { TypedEventEmitter } from \"@libp2p/interface\";\nimport { CustomEvent } from \"@libp2p/interface\";\nimport { createFromJSON } from \"@libp2p/peer-id-factory\";\nimport { multiaddr } from \"@multiformats/multiaddr\";\nimport { Tags } from \"@waku/interfaces\";\nimport { getWsMultiaddrFromMultiaddrs, Logger } from \"@waku/utils\";\nconst log = new Logger(\"peer-exchange-discovery\");\nexport const DEFAULT_LOCAL_TAG_NAME = Tags.LOCAL;\nconst DEFAULT_LOCAL_TAG_VALUE = 50;\nconst DEFAULT_LOCAL_TAG_TTL = 100_000_000;\nexport class LocalPeerCacheDiscovery extends TypedEventEmitter {\n    components;\n    options;\n    isStarted;\n    peers = [];\n    constructor(components, options) {\n        super();\n        this.components = components;\n        this.options = options;\n        this.isStarted = false;\n        this.peers = this.getPeersFromLocalStorage();\n    }\n    get [Symbol.toStringTag]() {\n        return \"@waku/local-peer-cache-discovery\";\n    }\n    async start() {\n        if (this.isStarted)\n            return;\n        log.info(\"Starting Local Storage Discovery\");\n        this.components.events.addEventListener(\"peer:identify\", this.handleNewPeers);\n        for (const { id: idStr, address } of this.peers) {\n            const peerId = await createFromJSON({ id: idStr });\n            if (await this.components.peerStore.has(peerId))\n                continue;\n            await this.components.peerStore.save(peerId, {\n                multiaddrs: [multiaddr(address)],\n                tags: {\n                    [this.options?.tagName ?? DEFAULT_LOCAL_TAG_NAME]: {\n                        value: this.options?.tagValue ?? DEFAULT_LOCAL_TAG_VALUE,\n                        ttl: this.options?.tagTTL ?? DEFAULT_LOCAL_TAG_TTL\n                    }\n                }\n            });\n            this.dispatchEvent(new CustomEvent(\"peer\", {\n                detail: {\n                    id: peerId,\n                    multiaddrs: [multiaddr(address)]\n                }\n            }));\n        }\n        log.info(`Discovered ${this.peers.length} peers`);\n        this.isStarted = true;\n    }\n    stop() {\n        if (!this.isStarted)\n            return;\n        log.info(\"Stopping Local Storage Discovery\");\n        this.components.events.removeEventListener(\"peer:identify\", this.handleNewPeers);\n        this.isStarted = false;\n        this.savePeersToLocalStorage();\n    }\n    handleNewPeers = (event) => {\n        const { peerId, listenAddrs } = event.detail;\n        const websocketMultiaddr = getWsMultiaddrFromMultiaddrs(listenAddrs);\n        const localStoragePeers = this.getPeersFromLocalStorage();\n        const existingPeerIndex = localStoragePeers.findIndex((_peer) => _peer.id === peerId.toString());\n        if (existingPeerIndex >= 0) {\n            localStoragePeers[existingPeerIndex].address =\n                websocketMultiaddr.toString();\n        }\n        else {\n            localStoragePeers.push({\n                id: peerId.toString(),\n                address: websocketMultiaddr.toString()\n            });\n        }\n        this.peers = localStoragePeers;\n        this.savePeersToLocalStorage();\n    };\n    getPeersFromLocalStorage() {\n        try {\n            const storedPeersData = localStorage.getItem(\"waku:peers\");\n            if (!storedPeersData)\n                return [];\n            const peers = JSON.parse(storedPeersData);\n            return peers.filter(isValidStoredPeer);\n        }\n        catch (error) {\n            log.error(\"Error parsing peers from local storage:\", error);\n            return [];\n        }\n    }\n    savePeersToLocalStorage() {\n        try {\n            localStorage.setItem(\"waku:peers\", JSON.stringify(this.peers));\n        }\n        catch (error) {\n            log.error(\"Error saving peers to local storage:\", error);\n        }\n    }\n}\nfunction isValidStoredPeer(peer) {\n    return (peer &&\n        typeof peer === \"object\" &&\n        typeof peer.id === \"string\" &&\n        typeof peer.address === \"string\");\n}\nexport function wakuLocalPeerCacheDiscovery() {\n    return (components, options) => new LocalPeerCacheDiscovery(components, options);\n}\n//# sourceMappingURL=index.js.map","export * from \"./is_defined.js\";\nexport * from \"./random_subset.js\";\nexport * from \"./group_by.js\";\nexport * from \"./to_async_iterator.js\";\nexport * from \"./is_size_valid.js\";\nexport * from \"./sharding/index.js\";\nexport * from \"./push_or_init_map.js\";\nexport * from \"./relay_shard_codec.js\";\nexport * from \"./delay.js\";\nexport function removeItemFromArray(arr, value) {\n    const index = arr.indexOf(value);\n    if (index > -1) {\n        arr.splice(index, 1);\n    }\n    return arr;\n}\nexport function getWsMultiaddrFromMultiaddrs(addresses) {\n    const wsMultiaddr = addresses.find((addr) => addr.toString().includes(\"ws\") || addr.toString().includes(\"wss\"));\n    if (!wsMultiaddr) {\n        throw new Error(\"No ws multiaddr found in the given addresses\");\n    }\n    return wsMultiaddr;\n}\n//# sourceMappingURL=index.js.map","import { noise } from \"@chainsafe/libp2p-noise\";\nimport { bootstrap } from \"@libp2p/bootstrap\";\nimport { identify } from \"@libp2p/identify\";\nimport { mplex } from \"@libp2p/mplex\";\nimport { ping } from \"@libp2p/ping\";\nimport { webSockets } from \"@libp2p/websockets\";\nimport { all as filterAll, wss } from \"@libp2p/websockets/filters\";\nimport { wakuMetadata } from \"@waku/core\";\nimport { DefaultNetworkConfig } from \"@waku/interfaces\";\nimport { derivePubsubTopicsFromNetworkConfig, Logger } from \"@waku/utils\";\nimport { createLibp2p } from \"libp2p\";\nimport { DefaultPingMaxInboundStreams, DefaultUserAgent } from \"../waku.js\";\nimport { defaultPeerDiscoveries } from \"./discovery.js\";\nconst log = new Logger(\"sdk:create\");\nexport async function defaultLibp2p(pubsubTopics, options, userAgent) {\n    if (!options?.hideWebSocketInfo && process?.env?.NODE_ENV !== \"test\") {\n        /* eslint-disable no-console */\n        console.info(\"%cIgnore WebSocket connection failures\", \"background: gray; color: white; font-size: x-large\");\n        console.info(\"%cWaku tries to discover peers and some of them are expected to fail\", \"background: gray; color: white; font-size: x-large\");\n        /* eslint-enable no-console */\n    }\n    const metadataService = pubsubTopics\n        ? { metadata: wakuMetadata(pubsubTopics) }\n        : {};\n    const filter = options?.filterMultiaddrs === false || process?.env?.NODE_ENV === \"test\"\n        ? filterAll\n        : wss;\n    return createLibp2p({\n        connectionManager: {\n            minConnections: 1\n        },\n        transports: [webSockets({ filter: filter })],\n        streamMuxers: [mplex()],\n        connectionEncryption: [noise()],\n        ...options,\n        services: {\n            identify: identify({\n                agentVersion: userAgent ?? DefaultUserAgent\n            }),\n            ping: ping({\n                maxInboundStreams: options?.pingMaxInboundStreams ?? DefaultPingMaxInboundStreams\n            }),\n            ...metadataService,\n            ...options?.services\n        }\n    }); // TODO: make libp2p include it;\n}\nexport async function createLibp2pAndUpdateOptions(options) {\n    const { networkConfig } = options;\n    const pubsubTopics = derivePubsubTopicsFromNetworkConfig(networkConfig ?? DefaultNetworkConfig);\n    log.info(\"Creating Waku node with pubsub topics\", pubsubTopics);\n    const libp2pOptions = options?.libp2p ?? {};\n    const peerDiscovery = libp2pOptions.peerDiscovery ?? [];\n    if (options?.defaultBootstrap) {\n        peerDiscovery.push(...defaultPeerDiscoveries(pubsubTopics));\n    }\n    if (options?.bootstrapPeers) {\n        peerDiscovery.push(bootstrap({ list: options.bootstrapPeers }));\n    }\n    libp2pOptions.peerDiscovery = peerDiscovery;\n    const libp2p = await defaultLibp2p(pubsubTopics, libp2pOptions, options?.userAgent);\n    return { libp2p, pubsubTopics };\n}\n//# sourceMappingURL=libp2p.js.map","/**\n * @packageDocumentation\n *\n * Use the `createLibp2p` function to create a libp2p node.\n *\n * @example\n *\n * ```typescript\n * import { createLibp2p } from 'libp2p'\n *\n * const node = await createLibp2p({\n *   // ...other options\n * })\n * ```\n */\nimport { createLibp2pNode } from './libp2p.js';\n/**\n * Returns a new instance of the Libp2p interface, generating a new PeerId\n * if one is not passed as part of the options.\n *\n * The node will be started unless `start: false` is passed as an option.\n *\n * @example\n *\n * ```TypeScript\n * import { createLibp2p } from 'libp2p'\n * import { tcp } from '@libp2p/tcp'\n * import { mplex } from '@libp2p/mplex'\n * import { noise } from '@chainsafe/libp2p-noise'\n * import { yamux } from '@chainsafe/libp2p-yamux'\n *\n * // specify options\n * const options = {\n *   transports: [tcp()],\n *   streamMuxers: [yamux(), mplex()],\n *   connectionEncryption: [noise()]\n * }\n *\n * // create libp2p\n * const libp2p = await createLibp2p(options)\n * ```\n */\nexport async function createLibp2p(options = {}) {\n    const node = await createLibp2pNode(options);\n    if (options.start !== false) {\n        await node.start();\n    }\n    return node;\n}\n//# sourceMappingURL=index.js.map","import { WakuNode } from \"../waku.js\";\nimport { createLibp2pAndUpdateOptions } from \"./libp2p.js\";\n/**\n * Create a Waku node that uses Waku Light Push, Filter and Store to send and\n * receive messages, enabling low resource consumption.\n * Uses Waku Filter V2 by default.\n */\nexport async function createLightNode(options = {}) {\n    const { libp2p, pubsubTopics } = await createLibp2pAndUpdateOptions(options);\n    return new WakuNode(pubsubTopics, options, libp2p, {\n        store: true,\n        lightpush: true,\n        filter: true\n    });\n}\n//# sourceMappingURL=create.js.map","export function isStaticSharding(config) {\n    return (\"clusterId\" in config && \"shards\" in config && !(\"contentTopics\" in config));\n}\nexport function isAutoSharding(config) {\n    return \"contentTopics\" in config;\n}\n//# sourceMappingURL=type_guards.js.map","import { enrTree, wakuDnsDiscovery, wakuLocalPeerCacheDiscovery, wakuPeerExchangeDiscovery } from \"@waku/discovery\";\nexport function defaultPeerDiscoveries(pubsubTopics) {\n    const dnsEnrTrees = [enrTree[\"SANDBOX\"], enrTree[\"TEST\"]];\n    const discoveries = [\n        wakuDnsDiscovery(dnsEnrTrees),\n        wakuLocalPeerCacheDiscovery(),\n        wakuPeerExchangeDiscovery(pubsubTopics)\n    ];\n    return discoveries;\n}\n//# sourceMappingURL=discovery.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g = Object.create((typeof Iterator === \"function\" ? Iterator : Object).prototype);\n    return g.next = verb(0), g[\"throw\"] = verb(1), g[\"return\"] = verb(2), typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nexport var TelemetryType;\n(function (TelemetryType) {\n    TelemetryType[\"LIGHT_PUSH_FILTER\"] = \"LightPushFilter\";\n})(TelemetryType || (TelemetryType = {}));\nvar TelemetryClient = /** @class */ (function () {\n    function TelemetryClient(url, intervalPeriod) {\n        if (intervalPeriod === void 0) { intervalPeriod = 5000; }\n        this.url = url;\n        this.intervalPeriod = intervalPeriod;\n        this.queue = [];\n        this.intervalId = null;\n        this.requestId = 0;\n    }\n    TelemetryClient.prototype.push = function (messages) {\n        var _a;\n        (_a = this.queue).push.apply(_a, messages);\n    };\n    TelemetryClient.prototype.start = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            return __generator(this, function (_a) {\n                if (!this.intervalId) {\n                    this.intervalId = setInterval(function () { return __awaiter(_this, void 0, void 0, function () {\n                        var success;\n                        return __generator(this, function (_a) {\n                            switch (_a.label) {\n                                case 0:\n                                    if (!(this.queue.length > 0)) return [3 /*break*/, 2];\n                                    return [4 /*yield*/, this.send(this.queue)];\n                                case 1:\n                                    success = _a.sent();\n                                    if (success) {\n                                        console.log(\"Sent \", this.queue.length, \" telemetry logs\");\n                                        this.queue = [];\n                                    }\n                                    _a.label = 2;\n                                case 2: return [2 /*return*/];\n                            }\n                        });\n                    }); }, this.intervalPeriod);\n                }\n                return [2 /*return*/];\n            });\n        });\n    };\n    TelemetryClient.prototype.stop = function () {\n        if (this.intervalId) {\n            clearInterval(this.intervalId);\n            this.intervalId = null;\n        }\n    };\n    TelemetryClient.prototype.send = function (messages) {\n        return __awaiter(this, void 0, void 0, function () {\n            var telemetryRequests, res, e_1;\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        telemetryRequests = messages.map(function (message) { return ({\n                            id: ++_this.requestId,\n                            telemetryType: message.type.toString(),\n                            telemetryData: message\n                        }); });\n                        _a.label = 1;\n                    case 1:\n                        _a.trys.push([1, 3, , 4]);\n                        return [4 /*yield*/, fetch(this.url, {\n                                method: \"POST\",\n                                body: JSON.stringify(telemetryRequests),\n                            })];\n                    case 2:\n                        res = _a.sent();\n                        if (res.status !== 201) {\n                            console.error(\"Error sending messages to telemetry service: \", res.status, res.statusText, res.json);\n                            return [2 /*return*/, false];\n                        }\n                        return [2 /*return*/, true];\n                    case 3:\n                        e_1 = _a.sent();\n                        console.error(\"Error sending messages to telemetry service: \", e_1);\n                        console.error(\"Failed trying to send the following messages: \", telemetryRequests);\n                        return [2 /*return*/, false];\n                    case 4: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    return TelemetryClient;\n}());\nexport { TelemetryClient };\n","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g = Object.create((typeof Iterator === \"function\" ? Iterator : Object).prototype);\n    return g.next = verb(0), g[\"throw\"] = verb(1), g[\"return\"] = verb(2), typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nexport var generateRandomNumber = function () {\n    return Math.floor(Math.random() * 1000000);\n};\nexport var sha256 = function (number) { return __awaiter(void 0, void 0, void 0, function () {\n    var encoder, data, buffer;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                encoder = new TextEncoder();\n                data = encoder.encode(number.toString());\n                return [4 /*yield*/, crypto.subtle.digest(\"SHA-256\", data)];\n            case 1:\n                buffer = _a.sent();\n                return [2 /*return*/, Array.from(new Uint8Array(buffer))\n                        .map(function (b) { return b.toString(16).padStart(2, \"0\"); })\n                        .join(\"\")];\n        }\n    });\n}); };\nvar DEFAULT_EXTRA_DATA = { sdk: \"0.0.28\" };\nexport var DEFAULT_EXTRA_DATA_STR = JSON.stringify(DEFAULT_EXTRA_DATA);\nexport var buildExtraData = function (node, peerId) { return __awaiter(void 0, void 0, void 0, function () {\n    var extraData, peer, websocket;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                extraData = __assign({}, DEFAULT_EXTRA_DATA);\n                return [4 /*yield*/, node.libp2p.peerStore.all()];\n            case 1:\n                peer = (_a.sent()).find(function (p) { return p.id.toString() === peerId; });\n                if (!peer || peerId === node.libp2p.peerId.toString()) {\n                    return [2 /*return*/, JSON.stringify(extraData)];\n                }\n                websocket = peer\n                    .addresses\n                    .map(function (addr) { return addr.multiaddr.toString(); })\n                    .some(function (addr) { return addr.includes(\"ws\") || addr.includes(\"wss\"); });\n                return [2 /*return*/, JSON.stringify(__assign(__assign({}, extraData), { peerId: peerId, websocket: websocket, enabledProtocols: peer.protocols }))];\n        }\n    });\n}); };\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g = Object.create((typeof Iterator === \"function\" ? Iterator : Object).prototype);\n    return g.next = verb(0), g[\"throw\"] = verb(1), g[\"return\"] = verb(2), typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nimport { createLightNode, createEncoder, createDecoder, waitForRemotePeer, utils, } from \"@waku/sdk\";\nimport { createFromPrivKey } from \"@libp2p/peer-id-factory\";\nimport { unmarshalPrivateKey, generateKeyPairFromSeed } from \"@libp2p/crypto/keys\";\nimport { fromString } from \"uint8arrays\";\nimport { Type, Field } from \"protobufjs\";\nimport { TelemetryClient, TelemetryType, } from \"./telemetry_client\";\nimport { generateRandomNumber, sha256, buildExtraData, DEFAULT_EXTRA_DATA_STR } from \"./util\";\nvar DEFAULT_CONTENT_TOPIC = \"/js-waku-examples/1/message-ratio/utf8\";\nvar DEFAULT_PUBSUB_TOPIC = utils.contentTopicToPubsubTopic(DEFAULT_CONTENT_TOPIC);\nvar TELEMETRY_URL = process.env.TELEMETRY_URL || \"http://localhost:8080/waku-metrics\";\nvar ProtoSequencedMessage = new Type(\"SequencedMessage\")\n    .add(new Field(\"hash\", 1, \"string\"))\n    .add(new Field(\"total\", 2, \"uint64\"))\n    .add(new Field(\"index\", 3, \"uint64\"))\n    .add(new Field(\"sender\", 4, \"string\"));\nvar sequenceCompletedEvent = new CustomEvent(\"sequenceCompleted\");\nvar messageSentEvent = new CustomEvent(\"messageSent\");\nvar messageReceivedEvent = new CustomEvent(\"messageReceived\");\nvar wakuNode = function () { return __awaiter(void 0, void 0, void 0, function () {\n    var seed, privateKey, _a, _b;\n    var _c, _d;\n    return __generator(this, function (_e) {\n        switch (_e.label) {\n            case 0:\n                seed = localStorage.getItem(\"seed\");\n                if (!!seed) return [3 /*break*/, 2];\n                return [4 /*yield*/, sha256(generateRandomNumber())];\n            case 1:\n                seed = (_e.sent()).slice(0, 32);\n                localStorage.setItem(\"seed\", seed);\n                _e.label = 2;\n            case 2: return [4 /*yield*/, generateKeyPairFromSeed(\"Ed25519\", fromString(seed))];\n            case 3:\n                privateKey = _e.sent();\n                _a = createLightNode;\n                _c = {\n                    networkConfig: {\n                        contentTopics: [DEFAULT_CONTENT_TOPIC],\n                    },\n                    defaultBootstrap: true\n                };\n                _d = {};\n                _b = createFromPrivKey;\n                return [4 /*yield*/, unmarshalPrivateKey(privateKey.bytes)];\n            case 4: return [4 /*yield*/, _b.apply(void 0, [_e.sent()])];\n            case 5: return [4 /*yield*/, _a.apply(void 0, [(_c.libp2p = (_d.peerId = _e.sent(),\n                        _d),\n                        _c)])];\n            case 6: return [2 /*return*/, _e.sent()];\n        }\n    });\n}); };\nexport function app(telemetryClient) {\n    return __awaiter(this, void 0, void 0, function () {\n        var node, peerId, encoder, startLightPushSequence, startFilterSubscription;\n        var _this = this;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4 /*yield*/, wakuNode()];\n                case 1:\n                    node = _a.sent();\n                    window.waku = node;\n                    console.log(\"DEBUG: your peer ID is:\", node.libp2p.peerId.toString());\n                    return [4 /*yield*/, node.start()];\n                case 2:\n                    _a.sent();\n                    return [4 /*yield*/, waitForRemotePeer(node)];\n                case 3:\n                    _a.sent();\n                    peerId = node.libp2p.peerId.toString();\n                    encoder = createEncoder({\n                        contentTopic: DEFAULT_CONTENT_TOPIC,\n                    });\n                    node.libp2p.addEventListener(\"peer:discovery\", function (event) { return __awaiter(_this, void 0, void 0, function () {\n                        var discoveredPeerId, timestamp, extraData, hash;\n                        return __generator(this, function (_a) {\n                            switch (_a.label) {\n                                case 0:\n                                    discoveredPeerId = event.detail.id.toString();\n                                    timestamp = Math.floor(new Date().getTime() / 1000);\n                                    return [4 /*yield*/, buildExtraData(node, discoveredPeerId)];\n                                case 1:\n                                    extraData = _a.sent();\n                                    return [4 /*yield*/, sha256(\"\".concat(peerId, \"-\").concat(discoveredPeerId, \"-\").concat(timestamp))];\n                                case 2:\n                                    hash = _a.sent();\n                                    telemetryClient.push([\n                                        {\n                                            type: TelemetryType.LIGHT_PUSH_FILTER,\n                                            protocol: \"discovery\",\n                                            timestamp: timestamp,\n                                            createdAt: timestamp,\n                                            seenTimestamp: timestamp,\n                                            peerId: peerId,\n                                            contentTopic: DEFAULT_CONTENT_TOPIC,\n                                            pubsubTopic: DEFAULT_PUBSUB_TOPIC,\n                                            ephemeral: false,\n                                            messageHash: hash,\n                                            errorMessage: \"\",\n                                            extraData: extraData,\n                                        },\n                                    ]);\n                                    return [2 /*return*/];\n                            }\n                        });\n                    }); });\n                    startLightPushSequence = function (numMessages_1) {\n                        var args_1 = [];\n                        for (var _i = 1; _i < arguments.length; _i++) {\n                            args_1[_i - 1] = arguments[_i];\n                        }\n                        return __awaiter(_this, __spreadArray([numMessages_1], args_1, true), void 0, function (numMessages, period) {\n                            var sequenceHash, sequenceTotal, sequenceIndex, sendMessage;\n                            var _this = this;\n                            if (period === void 0) { period = 3000; }\n                            return __generator(this, function (_a) {\n                                switch (_a.label) {\n                                    case 0: return [4 /*yield*/, sha256(generateRandomNumber())];\n                                    case 1:\n                                        sequenceHash = _a.sent();\n                                        sequenceTotal = numMessages;\n                                        sequenceIndex = 0;\n                                        sendMessage = function () { return __awaiter(_this, void 0, void 0, function () {\n                                            var messageHash_1, timestamp_1, message, payload, result, successEvents, failureEvents, events, messageElement, messagesSent, error_1;\n                                            var _this = this;\n                                            return __generator(this, function (_a) {\n                                                switch (_a.label) {\n                                                    case 0:\n                                                        _a.trys.push([0, 4, , 5]);\n                                                        return [4 /*yield*/, sha256(\"\".concat(sequenceHash, \"-\").concat(sequenceIndex, \"-\").concat(sequenceTotal))];\n                                                    case 1:\n                                                        messageHash_1 = _a.sent();\n                                                        timestamp_1 = Math.floor(new Date().getTime() / 1000);\n                                                        message = ProtoSequencedMessage.create({\n                                                            hash: messageHash_1,\n                                                            seqHash: sequenceHash,\n                                                            total: sequenceTotal,\n                                                            index: sequenceIndex,\n                                                            sender: peerId,\n                                                        });\n                                                        payload = ProtoSequencedMessage.encode(message).finish();\n                                                        return [4 /*yield*/, node.lightPush.send(encoder, {\n                                                                payload: payload,\n                                                                timestamp: new Date(),\n                                                            })];\n                                                    case 2:\n                                                        result = _a.sent();\n                                                        console.log(\"DEBUG: light push successes: \", result.successes.length, result.successes);\n                                                        console.log(\"DEBUG: light push failures: \", result.failures.length, result.failures);\n                                                        successEvents = result\n                                                            .successes\n                                                            .map(function (peerId) { return __awaiter(_this, void 0, void 0, function () {\n                                                            var extraData;\n                                                            return __generator(this, function (_a) {\n                                                                switch (_a.label) {\n                                                                    case 0: return [4 /*yield*/, buildExtraData(node, peerId.toString())];\n                                                                    case 1:\n                                                                        extraData = _a.sent();\n                                                                        return [2 /*return*/, {\n                                                                                type: TelemetryType.LIGHT_PUSH_FILTER,\n                                                                                protocol: \"lightPush\",\n                                                                                timestamp: timestamp_1,\n                                                                                createdAt: timestamp_1,\n                                                                                seenTimestamp: timestamp_1,\n                                                                                peerId: peerId.toString(),\n                                                                                contentTopic: DEFAULT_CONTENT_TOPIC,\n                                                                                pubsubTopic: DEFAULT_PUBSUB_TOPIC,\n                                                                                ephemeral: false,\n                                                                                messageHash: messageHash_1,\n                                                                                errorMessage: \"\",\n                                                                                extraData: extraData,\n                                                                            }];\n                                                                }\n                                                            });\n                                                        }); });\n                                                        failureEvents = result\n                                                            .failures\n                                                            .map(function (fail) { return __awaiter(_this, void 0, void 0, function () {\n                                                            var extraData;\n                                                            return __generator(this, function (_a) {\n                                                                switch (_a.label) {\n                                                                    case 0: return [4 /*yield*/, buildExtraData(node, fail.peerId.toString())];\n                                                                    case 1:\n                                                                        extraData = _a.sent();\n                                                                        return [2 /*return*/, {\n                                                                                type: TelemetryType.LIGHT_PUSH_FILTER,\n                                                                                protocol: \"lightPush\",\n                                                                                timestamp: timestamp_1,\n                                                                                createdAt: timestamp_1,\n                                                                                seenTimestamp: timestamp_1,\n                                                                                peerId: fail.peerId.toString(),\n                                                                                contentTopic: DEFAULT_CONTENT_TOPIC,\n                                                                                pubsubTopic: DEFAULT_PUBSUB_TOPIC,\n                                                                                ephemeral: false,\n                                                                                messageHash: messageHash_1,\n                                                                                errorMessage: fail.error.toString(),\n                                                                                extraData: extraData,\n                                                                            }];\n                                                                }\n                                                            });\n                                                        }); });\n                                                        return [4 /*yield*/, Promise.all(__spreadArray(__spreadArray([], successEvents, true), failureEvents, true))];\n                                                    case 3:\n                                                        events = _a.sent();\n                                                        if (events.length > 0) {\n                                                            telemetryClient.push(events);\n                                                        }\n                                                        if (result.successes.length > 0) {\n                                                            messageElement = document.createElement(\"div\");\n                                                            messagesSent = document.getElementById(\"messagesSent\");\n                                                            messageElement.textContent = \"Message: \".concat(messageHash_1, \" \").concat(sequenceIndex, \" of \").concat(sequenceTotal);\n                                                            messagesSent.insertBefore(messageElement, messagesSent.firstChild);\n                                                            messagesSent.insertBefore(document.createElement(\"br\"), messagesSent.firstChild);\n                                                            document.dispatchEvent(messageSentEvent);\n                                                            // Increment sequence\n                                                            sequenceIndex++;\n                                                        }\n                                                        if (sequenceIndex < sequenceTotal) {\n                                                            setTimeout(sendMessage, period); // Schedule the next send\n                                                        }\n                                                        else {\n                                                            document.dispatchEvent(sequenceCompletedEvent);\n                                                        }\n                                                        return [3 /*break*/, 5];\n                                                    case 4:\n                                                        error_1 = _a.sent();\n                                                        console.error(\"Error sending message\", error_1);\n                                                        return [3 /*break*/, 5];\n                                                    case 5: return [2 /*return*/];\n                                                }\n                                            });\n                                        }); };\n                                        sendMessage(); // Start the recursive sending\n                                        return [2 /*return*/];\n                                }\n                            });\n                        });\n                    };\n                    startFilterSubscription = function () { return __awaiter(_this, void 0, void 0, function () {\n                        var decoder, messagesReceived, subscriptionCallback, result, errorEvent, timestamp, _a, _b, failEvents, successEvents, resolvedEvents, events;\n                        var _c;\n                        var _this = this;\n                        return __generator(this, function (_d) {\n                            switch (_d.label) {\n                                case 0:\n                                    decoder = createDecoder(DEFAULT_CONTENT_TOPIC);\n                                    messagesReceived = document.getElementById(\"messagesReceived\");\n                                    subscriptionCallback = function (message) { return __awaiter(_this, void 0, void 0, function () {\n                                        var decodedMessage, extraData, timestamp, messageElement;\n                                        return __generator(this, function (_a) {\n                                            switch (_a.label) {\n                                                case 0:\n                                                    decodedMessage = ProtoSequencedMessage.decode(message.payload);\n                                                    // Don't bother reporting messages sent by this same node\n                                                    if (decodedMessage.sender === peerId) {\n                                                        return [2 /*return*/];\n                                                    }\n                                                    return [4 /*yield*/, buildExtraData(node, decodedMessage.sender)];\n                                                case 1:\n                                                    extraData = _a.sent();\n                                                    timestamp = Math.floor(new Date().getTime() / 1000);\n                                                    telemetryClient.push([\n                                                        {\n                                                            type: TelemetryType.LIGHT_PUSH_FILTER,\n                                                            protocol: \"filter\",\n                                                            timestamp: timestamp,\n                                                            createdAt: Math.floor(message.timestamp.getTime() / 1000),\n                                                            seenTimestamp: timestamp,\n                                                            peerId: peerId,\n                                                            contentTopic: message.contentTopic,\n                                                            pubsubTopic: message.pubsubTopic,\n                                                            ephemeral: message.ephemeral,\n                                                            messageHash: decodedMessage.hash,\n                                                            errorMessage: \"\",\n                                                            extraData: extraData,\n                                                        },\n                                                    ]);\n                                                    messageElement = document.createElement(\"div\");\n                                                    messageElement.textContent = \"Message: \".concat(decodedMessage.hash, \" \").concat(decodedMessage.index, \" of \").concat(decodedMessage.total);\n                                                    messagesReceived.appendChild(messageElement);\n                                                    messagesReceived.appendChild(document.createElement(\"br\"));\n                                                    document.dispatchEvent(messageReceivedEvent);\n                                                    return [2 /*return*/];\n                                            }\n                                        });\n                                    }); };\n                                    return [4 /*yield*/, node.filter.subscribe(decoder, subscriptionCallback)];\n                                case 1:\n                                    result = _d.sent();\n                                    errorEvent = [];\n                                    if (!result.error) return [3 /*break*/, 3];\n                                    timestamp = Math.floor(new Date().getTime() / 1000);\n                                    _b = (_a = errorEvent).push;\n                                    _c = {\n                                        type: TelemetryType.LIGHT_PUSH_FILTER,\n                                        protocol: \"filterCreateSubscription\",\n                                        timestamp: timestamp,\n                                        createdAt: timestamp,\n                                        seenTimestamp: timestamp,\n                                        peerId: peerId,\n                                        contentTopic: DEFAULT_CONTENT_TOPIC,\n                                        pubsubTopic: DEFAULT_PUBSUB_TOPIC,\n                                        ephemeral: false\n                                    };\n                                    return [4 /*yield*/, sha256(generateRandomNumber())];\n                                case 2:\n                                    _b.apply(_a, [(_c.messageHash = _d.sent(),\n                                            _c.errorMessage = result.error,\n                                            _c.extraData = DEFAULT_EXTRA_DATA_STR,\n                                            _c)]);\n                                    _d.label = 3;\n                                case 3:\n                                    failEvents = result.results.failures.map(function (fail) { return __awaiter(_this, void 0, void 0, function () {\n                                        var extraData, timestamp;\n                                        var _a;\n                                        return __generator(this, function (_b) {\n                                            switch (_b.label) {\n                                                case 0: return [4 /*yield*/, buildExtraData(node, fail.peerId.toString())];\n                                                case 1:\n                                                    extraData = _b.sent();\n                                                    timestamp = Math.floor(new Date().getTime() / 1000);\n                                                    _a = {\n                                                        type: TelemetryType.LIGHT_PUSH_FILTER,\n                                                        protocol: \"filterCreateSubscription\",\n                                                        timestamp: timestamp,\n                                                        createdAt: timestamp,\n                                                        seenTimestamp: timestamp,\n                                                        peerId: fail.peerId.toString(),\n                                                        contentTopic: DEFAULT_CONTENT_TOPIC,\n                                                        pubsubTopic: DEFAULT_PUBSUB_TOPIC,\n                                                        ephemeral: false\n                                                    };\n                                                    return [4 /*yield*/, sha256(generateRandomNumber())];\n                                                case 2: return [2 /*return*/, (_a.messageHash = _b.sent(),\n                                                        _a.errorMessage = fail.error,\n                                                        _a.extraData = extraData,\n                                                        _a)];\n                                            }\n                                        });\n                                    }); });\n                                    successEvents = result.results.successes.map(function (peerId) { return __awaiter(_this, void 0, void 0, function () {\n                                        var extraData, timestamp;\n                                        var _a;\n                                        return __generator(this, function (_b) {\n                                            switch (_b.label) {\n                                                case 0: return [4 /*yield*/, buildExtraData(node, peerId.toString())];\n                                                case 1:\n                                                    extraData = _b.sent();\n                                                    timestamp = Math.floor(new Date().getTime() / 1000);\n                                                    _a = {\n                                                        type: TelemetryType.LIGHT_PUSH_FILTER,\n                                                        protocol: \"filterCreateSubscription\",\n                                                        timestamp: timestamp,\n                                                        createdAt: timestamp,\n                                                        seenTimestamp: timestamp,\n                                                        peerId: peerId.toString(),\n                                                        contentTopic: DEFAULT_CONTENT_TOPIC,\n                                                        pubsubTopic: DEFAULT_PUBSUB_TOPIC,\n                                                        ephemeral: false\n                                                    };\n                                                    return [4 /*yield*/, sha256(generateRandomNumber())];\n                                                case 2: return [2 /*return*/, (_a.messageHash = _b.sent(),\n                                                        _a.errorMessage = \"\",\n                                                        _a.extraData = extraData,\n                                                        _a)];\n                                            }\n                                        });\n                                    }); });\n                                    return [4 /*yield*/, Promise.all(__spreadArray(__spreadArray([], failEvents, true), successEvents, true))];\n                                case 4:\n                                    resolvedEvents = _d.sent();\n                                    events = __spreadArray(__spreadArray([], errorEvent, true), resolvedEvents, true);\n                                    if (events.length > 0) {\n                                        telemetryClient.push(events);\n                                    }\n                                    return [2 /*return*/];\n                            }\n                        });\n                    }); };\n                    return [2 /*return*/, {\n                            node: node,\n                            startLightPushSequence: startLightPushSequence,\n                            startFilterSubscription: startFilterSubscription,\n                        }];\n            }\n        });\n    });\n}\n(function () { return __awaiter(void 0, void 0, void 0, function () {\n    function startSequence() {\n        var numMessages = Math.floor(Math.random() * 16) + 5;\n        var messagePeriod = Math.floor(Math.random() * 2001) + 5000;\n        startLightPushSequence(numMessages, messagePeriod);\n    }\n    var telemetryClient, _a, node, startLightPushSequence, startFilterSubscription, peerIDBlock, runningScreen, sentMessagesCount, sentMessagesCounter, receivedMessagesCount, receivedMessagesCounter;\n    return __generator(this, function (_b) {\n        switch (_b.label) {\n            case 0:\n                telemetryClient = new TelemetryClient(TELEMETRY_URL, 5000);\n                return [4 /*yield*/, app(telemetryClient)];\n            case 1:\n                _a = _b.sent(), node = _a.node, startLightPushSequence = _a.startLightPushSequence, startFilterSubscription = _a.startFilterSubscription;\n                peerIDBlock = document.getElementById(\"peerID\");\n                peerIDBlock.innerText = node.libp2p.peerId.toString();\n                runningScreen = document.getElementById(\"runningScreen\");\n                runningScreen.style.display = \"block\";\n                return [4 /*yield*/, telemetryClient.start()];\n            case 2:\n                _b.sent();\n                startFilterSubscription();\n                sentMessagesCount = 0;\n                sentMessagesCounter = document.getElementById(\"numSent\");\n                document.addEventListener(\"messageSent\", function () {\n                    sentMessagesCount++;\n                    sentMessagesCounter.textContent = sentMessagesCount.toString();\n                });\n                receivedMessagesCount = 0;\n                receivedMessagesCounter = document.getElementById(\"numReceived\");\n                document.addEventListener(\"messageReceived\", function () {\n                    receivedMessagesCount++;\n                    receivedMessagesCounter.textContent = receivedMessagesCount.toString();\n                });\n                document.addEventListener(sequenceCompletedEvent.type, function () { return startSequence(); });\n                startSequence();\n                return [2 /*return*/];\n        }\n    });\n}); })();\n"],"names":["module","exports","fn","ctx","params","Array","arguments","length","offset","index","pending","Promise","resolve","reject","err","apply","base64","string","p","n","charAt","Math","ceil","b64","s64","i","encode","buffer","start","end","t","parts","chunk","j","b","push","String","fromCharCode","slice","join","invalidEncoding","decode","c","charCodeAt","undefined","Error","test","codegen","functionParams","functionName","body","Codegen","formatStringOrScope","source","toString","verbose","console","log","scopeKeys","Object","keys","scopeParams","scopeValues","scopeOffset","Function","formatParams","formatOffset","replace","$0","$1","value","Number","floor","JSON","stringify","functionNameOverride","EventEmitter","this","_listeners","prototype","on","evt","off","listeners","splice","emit","args","fetch","asPromise","fs","inquire","filename","options","callback","xhr","readFile","contents","XMLHttpRequest","binary","onreadystatechange","readyState","status","response","responseText","Uint8Array","overrideMimeType","responseType","open","send","factory","Float32Array","f32","f8b","le","writeFloat_f32_cpy","val","buf","pos","writeFloat_f32_rev","readFloat_f32_cpy","readFloat_f32_rev","writeFloatLE","writeFloatBE","readFloatLE","readFloatBE","writeFloat_ieee754","writeUint","sign","isNaN","round","exponent","LN2","pow","readFloat_ieee754","readUint","uint","mantissa","NaN","Infinity","bind","writeUintLE","writeUintBE","readUintLE","readUintBE","Float64Array","f64","writeDouble_f64_cpy","writeDouble_f64_rev","readDouble_f64_cpy","readDouble_f64_rev","writeDoubleLE","writeDoubleBE","readDoubleLE","readDoubleBE","writeDouble_ieee754","off0","off1","readDouble_ieee754","lo","hi","moduleName","mod","eval","e","path","isAbsolute","normalize","split","absolute","prefix","shift","originPath","includePath","alreadyNormalized","alloc","size","SIZE","MAX","slab","call","utf8","len","read","write","c1","c2","formatArgs","useColors","namespace","humanize","diff","color","lastC","match","save","namespaces","storage","setItem","removeItem","error","load","r","getItem","process","env","DEBUG","window","type","__nwjs","navigator","userAgent","toLowerCase","m","document","documentElement","style","WebkitAppearance","firebug","exception","table","parseInt","localStorage","localstorage","destroy","warned","warn","colors","debug","formatters","v","message","createDebug","prevTime","namespacesCache","enabledCache","enableOverride","enabled","self","curr","Date","ms","prev","coerce","unshift","format","formatter","selectColor","extend","defineProperty","enumerable","configurable","get","set","init","delimiter","newDebug","toNamespace","regexp","substring","default","stack","disable","names","map","skips","enable","RegExp","name","forEach","key","hash","abs","assign","obj","props","code","TypeError","_","ErrClass","create","getPrototypeOf","event_iterator_1","EventIterator","EventQueue","constructor","pullQueue","pushQueue","eventHandlers","isPaused","isStopped","resolution","done","placeholder","highWaterMark","highWater","stop","remove","fail","rejection","catch","then","removeCallback","Symbol","asyncIterator","next","result","lowWaterMark","lowWater","return","listen","queue","event","freeze","has","hasOwnProperty","Events","EE","context","once","addListener","emitter","listener","_events","_eventsCount","clearEvent","__proto__","eventNames","events","getOwnPropertySymbols","concat","handlers","l","ee","listenerCount","a1","a2","a3","a4","a5","removeListener","removeAllListeners","prefixed","max","cache","_cache","update","clear","root","HI_BASE32_NO_NODE_JS","versions","node","global","COMMON_JS","HI_BASE32_NO_COMMON_JS","AMD","BASE32_ENCODE_CHAR","BASE32_DECODE_CHAR","blocks","throwInvalidUtf8","position","partial","substr","decodeAsBytes","base32Str","v1","v2","v3","v4","v5","v6","v7","v8","bytes","count","remain","asciiOnly","str","followingChars","toUtf8String","indexOf","input","notString","ArrayBuffer","encodeBytes","encodeAscii","encodeUtf8","asBytes","base32","electron","INPUT_ERROR","WINDOW","JS_SHA3_NO_WINDOW","WEB_WORKER","JS_SHA3_NO_NODE_JS","JS_SHA3_NO_COMMON_JS","ARRAY_BUFFER","JS_SHA3_NO_ARRAY_BUFFER","HEX_CHARS","CSHAKE_PADDING","SHIFT","RC","BITS","SHAKE_BITS","OUTPUT_TYPES","CSHAKE_BYTEPAD","isArray","isView","JS_SHA3_NO_ARRAY_BUFFER_IS_VIEW","formatMessage","empty","cloneArray","array","newArray","createOutputMethod","bits","padding","outputType","Keccak","createShakeOutputMethod","outputBits","createCshakeOutputMethod","s","methods","createKmacOutputMethod","createOutputMethods","method","createMethod","algorithms","w","bytepad","Kmac","methodNames","algorithm","methodName","newMethodName","reset","finalized","block","blockCount","byteCount","outputBlocks","extraBytes","isString","lastByteIndex","f","x","right","o","encodeString","strs","paddingBytes","zeros","finalize","hex","arrayBuffer","Uint32Array","digest","h","c0","c3","c4","c5","c6","c7","c8","c9","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","b10","b11","b12","b13","b14","b15","b16","b17","b18","b19","b20","b21","b22","b23","b24","b25","b26","b27","b28","b29","b30","b31","b32","b33","b34","b35","b36","b37","b38","b39","b40","b41","b42","b43","b44","b45","b46","b47","b48","b49","isOptionObject","propertyIsEnumerable","object","writable","globalThis","defaultMergeOptions","concatArrays","ignoreUndefined","getEnumerableOwnPropertyKeys","symbols","symbol","clone","cloneOptionObject","mergeKeys","merged","config","merge","resultIndex","indices","k","filter","includes","option","d","plural","msAbs","isPlural","exec","parseFloat","parse","isFinite","long","fmtShort","library","_validBytes","isInteger","_x86Multiply","_x86Rotl","_x86Fmix","_x64Add","_x64Multiply","_x64Rotl","_x64LeftShift","_x64Xor","_x64Fmix","x86","hash32","seed","inputValidation","remainder","h1","k1","hash128","h2","h3","h4","k2","k3","k4","x64","murmurHash3","Netmask","atob","chr","chr0","chrA","chra","ip2long","long2ip","ip","ref","base","dmax","net","mask","maskLong","error1","bitmask","netLong","hostmask","first","last","broadcast","contains","lastLong","common","timeType","commonRe","json","nested","google","protobuf","Any","fields","type_url","id","Duration","seconds","nanos","Timestamp","Empty","Struct","keyType","Value","oneofs","kind","oneof","nullValue","numberValue","stringValue","boolValue","structValue","listValue","NullValue","values","NULL_VALUE","ListValue","rule","DoubleValue","FloatValue","Int64Value","UInt64Value","Int32Value","UInt32Value","BoolValue","StringValue","BytesValue","FieldMask","paths","file","converter","Enum","util","genValuePartial_fromObject","gen","field","fieldIndex","prop","defaultAlreadyEmitted","resolvedType","typeDefault","repeated","fullName","isUnsigned","genValuePartial_toObject","fromObject","mtype","fieldsArray","safeProp","toObject","sort","compareFieldsById","repeatedFields","mapFields","normalFields","partOf","valuesById","low","high","unsigned","toNumber","arrayDefault","hasKs2","_fieldsArray","group","types","defaults","basic","packed","rfield","required","missing","wireType","mapKey","genTypePartial","optional","ReflectionObject","className","Namespace","comment","comments","valuesOptions","reserved","fromJSON","enm","toJSON","toJSONOptions","keepComments","Boolean","add","isReservedId","isReservedName","allow_alias","Field","Type","ruleRe","isObject","defaultValue","Long","extensionField","declaringField","_packed","getOption","setOption","ifNotSet","resolved","parent","lookupTypeOrEnum","proto3_optional","fromNumber","newBuffer","emptyObject","emptyArray","ctor","fieldId","fieldType","fieldRule","decorateType","decorateEnum","fieldName","_configure","Type_","build","Root","loadSync","encoder","decoder","verifier","OneOf","MapField","Service","Method","Message","wrappers","configure","Writer","BufferWriter","Reader","BufferReader","rpc","roots","tokenize","resolvedKeyType","fieldKeyType","fieldValueType","properties","$type","writer","encodeDelimited","reader","decodeDelimited","verify","requestType","requestStream","responseStream","parsedOptions","resolvedRequestType","resolvedResponseType","lookupType","arrayToJSON","_nestedArray","clearCache","addJSON","toArray","nestedArray","nestedJson","getEnum","setOptions","onAdd","onRemove","define","ptr","part","resolveAll","lookup","filterTypes","parentAlreadyChecked","found","lookupEnum","lookupService","Service_","Enum_","defineProperties","_handleAdd","_handleRemove","setParsedOption","propName","opt","find","newValue","setProperty","newOpt","Root_","fieldNames","addFieldsToParent","oneofName","oneOfGetter","oneOfSetter","keepCase","base10Re","base10NegRe","base16Re","base16NegRe","base8Re","base8NegRe","numberRe","nameRe","typeRefRe","fqTypeRefRe","pkg","imports","weakImports","syntax","token","preferTrailingComment","tn","alternateCommentMode","peek","skip","cmnt","head","isProto3","applyCase","camelCase","illegal","insideTryCatch","line","readString","readValue","acceptTypeRef","parseNumber","readRanges","target","acceptStrings","parseId","dummy","ifBlock","parseOption","parseInlineOptions","acceptNegative","parsePackage","parseImport","whichImports","parseSyntax","parseCommon","parseType","parseEnum","service","commentText","parseMethod","parseService","reference","parseField","parseExtension","fnIf","fnElse","trailingLine","valueType","parseMapField","parseOneOf","extensions","endsWith","startsWith","lcFirst","ucFirst","parseGroup","parseEnumValue","isCustom","parseOptionValue","objectResult","lastValue","prevValue","simpleValue","LongBits","indexOutOfRange","writeLength","RangeError","create_array","Buffer","isBuffer","readLongVarint","readFixed32_end","readFixed64","_slice","subarray","uint32","int32","sint32","bool","fixed32","sfixed32","float","double","nativeBuffer","skipType","BufferReader_","int64","uint64","sint64","zzDecode","fixed64","sfixed64","utf8Slice","min","deferred","files","SYNC","resolvePath","sync","finish","cb","getBundledFileName","idx","lastIndexOf","altname","parsed","queued","weak","setTimeout","readFileSync","isNode","exposeRe","tryHandleExtension","extendedType","sisterField","parse_","common_","rpcImpl","requestDelimited","responseDelimited","rpcCall","requestCtor","responseCtor","request","endedByRPC","_methodsArray","inherited","methodsArray","rpcService","isReserved","q","delimRe","stringDoubleRe","stringSingleRe","setCommentRe","setCommentAltRe","setCommentSplitRe","whitespaceRe","unescapeRe","unescapeMap","unescape","lastCommentLine","stringDelim","subject","setComment","isLeading","lineEmpty","leading","commentOffset","lines","trim","text","isDoubleSlashCommentLine","startOffset","endOffset","findEndOfLine","lineText","cursor","re","lastIndex","repeat","isDoc","isLeadingComment","expected","actual","ret","_fieldsById","_oneofsArray","_ctor","fieldsById","oneofsArray","generateConstructor","ctorProperties","setup","wrapper","originalThis","fork","ldelim","typeName","bake","safePropBackslashRe","safePropQuoteRe","toUpperCase","camelCaseRe","a","decorateRoot","decorateEnumIndex","dst","setProp","zero","zzEncode","zeroHash","from","fromString","toLong","fromHash","toHash","part0","part1","part2","src","newError","CustomError","captureStackTrace","pool","isset","isSet","utf8Write","_Buffer_from","_Buffer_allocUnsafe","sizeOrArray","dcodeIO","key2Re","key32Re","key64Re","longToHash","longFromHash","fromBits","ProtocolError","fieldMap","longs","enums","encoding","allocUnsafe","seenFirstField","invalid","genVerifyKey","genVerifyValue","oneofProp","Op","noop","State","tail","states","writeByte","VarintOp","writeVarint64","writeFixed32","_push","writeBytes","BufferWriter_","writeStringBuffer","writeBytesBuffer","copy","byteLength","BufferSourceConverter","isArrayBuffer","data","toArrayBuffer","byteOffset","toUint8Array","toView","isArrayBufferView","isBufferSource","isEqual","aView","bView","buffers","res","view","STRING_TYPE","HEX_REGEX","BASE64_REGEX","BASE64URL_REGEX","Utf8Converter","encodeURIComponent","uintArray","encodedString","decodeURIComponent","escape","Utf16Converter","littleEndian","dataView","DataView","getUint16","setUint16","Convert","isHex","isBase64","isBase64Url","ToString","enc","ToUtf8String","ToBinary","ToHex","ToBase64","ToBase64Url","FromString","FromUtf8String","FromBinary","FromHex","FromBase64","FromBase64Url","btoa","formatted","formatString","base64url","Base64Padding","DEFAULT_UTF8_ENCODING","stringLength","resultView","byte","hexString","ToUtf16String","FromUtf16String","padCount","__webpack_module_cache__","leafPrototypes","getProto","__webpack_require__","moduleId","cachedModule","__webpack_modules__","amdO","mode","__esModule","ns","def","current","getOwnPropertyNames","definition","toStringTag","N1","N2","N3","N4","N5","N6","N7","MSB","REST","encodingLength","MAX_SAFE_INTEGER","encodeUint8Array","decodeUint8Array","encodeUint8ArrayList","decodeUint8ArrayList","d8b","MAX_SAFE_NUMBER_INTEGER","BigInt","MIN_SAFE_NUMBER_INTEGER","MIN_SAFE_INTEGER","toBigInt","fromBigInt","negative","TWO_32","readFixed32End","Uint8ArrayReader","int64Number","int64String","uint64Number","uint64String","sint64Number","sint64String","fixed64Number","fixed64String","sfixed64Number","sfixed64String","decodeMessage","codec","opts","createReader","ALPHABET","BASE_MAP","xc","BASE","LEADER","FACTOR","iFACTOR","decodeUnsafe","psz","zeroes","b256","carry","it3","it4","vch","pbegin","pend","b58","it1","it2","Encoder","baseEncode","Decoder","baseDecode","prefixCodePoint","codePointAt","or","ComposedDecoder","decoders","left","Codec","baseX","alphabet","rfc4648","bitsPerChar","pad","out","codes","written","SyntaxError","base10","base16","base16upper","base2","alphabetBytesToChars","reduce","alphabetCharsToBytes","codePoint","base256emoji","byts","char","byt","base32upper","base32pad","base32padupper","base32hex","base32hexupper","base32hexpad","base32hexpadupper","base32z","base36","base36upper","base58btc","base58flickr","base64pad","base64urlpad","base8","identity","TextDecoder","TextEncoder","textEncoder","textDecoder","MSBALL","INT","MSB$1","REST$1","N8","N9","num","oldOffset","counter","encodeTo","int","sizeOffset","digestOffset","Digest","multihash","Hasher","sha","async","crypto","subtle","link","version","cid","toStringV0","baseCache","toStringV1","WeakMap","Map","CID","asCID","toV0","DAG_PB_CODE","SHA_256_CODE","createV0","toV1","createV1","equals","other","unknown","aa","bb","ii","for","encodeCID","cidSymbol","decodeFirst","specs","inspectBytes","prefixSize","multihashSize","multihashBytes","digestBytes","digestSize","multihashCode","initialBytes","parseCIDtoBytes","codeOffset","hashOffset","bases","createCodec","ascii","latin1","bufferPool","Uint8ArrayWriter","writeVarint32","super","encodeMessage","lengthDelimited","CODEC_TYPES","RateLimitProof","WakuMessage","FilterRequest","MessagePush","FilterRpc","TopicOnlyMessage","FilterSubscribeRequest","PushRequest","PushResponse","WakuMessageKeyValue","PeerInfo","PeerExchangeQuery","PeerExchangeResponse","WakuMetadataRequest","WakuMetadataResponse","enumeration","findValue","VARINT","enumValue","LENGTH_DELIMITED","MaxLengthError","isDefined","groupByContentTopic","groupedDecoders","decs","contentTopic","wait","_codec","proof","merkleRoot","epoch","shareX","shareY","nullifier","rlnIdentifier","tag","payload","timestamp","meta","rateLimitProof","ephemeral","limits","ContentFilter","subscribe","topic","contentFilters","contentFilters$","messages","messages$","requestId","FilterSubscribeType","__FilterSubscribeTypeValues","filterSubscribeType","pubsubTopic","contentTopics","SUBSCRIBER_PING","FilterSubscribeResponse","statusCode","statusDesc","wakuMessage","isSuccess","info","PushRpc","messageHash","StoreQueryRequest","includeData","timeStart","timeEnd","messageHashes","paginationCursor","paginationForward","paginationLimit","StoreQueryResponse","enr","numPeers","peerInfos","peerInfos$","PeerExchangeRPC","query","clusterId","shards","number","isSafeInteger","lengths","outputLen","blockLen","exists","instance","checkFinished","destroyed","finished","arr","rotr","word","nextTick","asyncLoop","iters","tick","ts","now","toBytes","Hash","_cloneInto","toStr","hashCons","hashC","msg","tmp","bytesLength","getRandomValues","randomBytes","Maj","HashMD","padOffset","isLE","take","roundClean","digestInto","output","fill","setBigUint64","_32n","_u32_max","wh","wl","setUint32","oview","outLen","state","to","SHA256_K","SHA256_IV","SHA256_W","SHA256","A","B","C","D","E","F","G","H","getUint32","W15","W2","s0","s1","T1","T2","Protocols","Tags","EPeersByDiscoveryEvents","EConnectionStateEvents","DNS_DISCOVERY_TAG","DefaultNetworkConfig","HealthStatus","bytesToUtf8","byteArrays","totalLength","acc","shardInfoToPubsubTopics","shardInfo","Set","contentTopicToPubsubTopic","application","pubsubTopicToSingleShardInfo","pubsubTopics","shard","pubsubTopicsToShardInfo","shardInfoSet","clusterIds","ensurePubsubTopicIsConfigured","configuredTopics","networkShards","generation","topicName","ensureValidContentTopic","dataview","getBigUint64","contentTopicToShardIndex","determinePubsubTopic","pubsubTopicShardInfo","singleShardInfoToPubsubTopic","decodeRelayShard","byteIndex","bitIndex","getUint8","numIndices","encodeRelayShard","setUint8","delay","APP_NAME","Logger","_info","_warn","_error","createDebugNamespace","level","logger","OneMillion","DecodedMessage","proto","_rawTimestamp","metaSetter","toWire","toProtoObj","protoMessage","valueOf","createEncoder","fromWireToProtoObj","fromProtoObj","entry","arrays","findBufAndOffset","bufs","bufEnd","isUint8ArrayList","Uint8ArrayList","appendAll","iterator","append","prepend","prependAll","reverse","consume","trunc","beginInclusive","endExclusive","_subList","sublist","list","bufStart","sliceStartInBuf","sliceEndsInBuf","search","needle","M","rightmostPositions","Int32Array","lastPatIndex","getInt8","setInt8","getInt16","setInt16","getInt32","setInt32","getBigInt64","setBigInt64","getFloat32","setFloat32","getFloat64","setFloat64","fromUint8Arrays","thing","defaultEncoder","lengthLength","lengthBuf","encodeLength","lengthEncoder","maybeYield","single","InvalidMessageLengthError","InvalidDataLengthError","InvalidDataLengthLengthError","UnexpectedEOFError","ReadMode","defaultDecoder","LENGTH","dataLength","lengthDecoder","maxLengthLength","maxDataLength","dataLengthLength","onLength","DATA","onData","pDefer","promise","fromReader","FixedFIFO","top","btm","hwm","isEmpty","FIFO","splitLimit","calculateSize","AbortError","pushable","getNext","onNext","ended","onEnd","drain","bufferNext","objectMode","bufferError","queueMicrotask","throw","readableLength","onEmpty","signal","throwIfAborted","cancel","addEventListener","race","removeEventListener","_pushable","sources","syncSources","all","item","pipe","rest","isDuplex","duplex","isIterable","fns","sink","duplexPipelineFn","rawPipe","stream","sourceWrap","StreamManager","multicodec","getConnections","streamPool","handlePeerUpdateStreamPool","getStream","peer","peerIdStr","streamPromise","createStream","delete","prepareStream","retries","connection","connections","latestConnection","timeline","selectConnection","newStream","backoff","timeoutPromise","detail","protocols","isConnectedTo","peerId","some","BaseProtocol","components","addLibp2pEventListener","removeLibp2pEventListener","streamManager","connectionManager","peerStore","allPeers","peers","getPeersForProtocol","connectedPeers","getPeers","maxBootstrapPeers","filteredPeers","bootstrapPeers","tags","BOOTSTRAP","nonBootstrapPeers","selectedPeers","randomIndex","random","randomPeer","filterPeersByDiscovery","peerPromises","remotePeer","protocol","encodedPeerShardInfo","metadata","peerShardInfo","getConnectedPeersForProtocolAndShard","sortedFilteredPeers","pingBytes","ping","sortPeersByLatency","randomUUID","rnds8","rng","byteToHex","rnds","unsafeStringify","FilterPushRpc","FilterSubscribeRpc","createSubscribeRequest","SUBSCRIBE","createUnsubscribeRequest","UNSUBSCRIBE","createUnsubscribeAllRequest","UNSUBSCRIBE_ALL","createSubscriberPingRequest","FilterCodecs","FilterCore","handleIncomingMessage","libp2p","handle","onRequest","maxInboundStreams","success","failure","GENERIC_FAIL","REMOTE_PEER_REJECTED","unsubscribe","NO_STREAM_AVAILABLE","unsubscribeRequest","unsubscribeAll","NO_RESPONSE","streamData","createRequest","LightPushCore","preparePushMessage","EMPTY_PAYLOAD","isWireSizeUnderCap","isMessageSizeUnderCap","SIZE_TOO_BIG","ENCODE_FAILED","preparationError","DECODE_FAILED","rlnErrorCase","rlnErrorMap","RLN_IDENTITY_MISSING","RLN_MEMBERSHIP_INDEX","RLN_LIMIT_MISSING","infoLowerCase","errorKey","RLN_PROOF_GENERATION","matchRLNErrorMessage","EmptyMessage","ONE_MILLION","getTime","StoreCore","queryPerPage","queryOpts","currentCursor","storeQueryRequest","storeQueryResponse","errorMessage","decodedMessages","protoMsg","wire","TimeoutError","getDOMException","DOMException","getAbortedReason","reason","pTimeout","milliseconds","fallback","customTimers","clearTimeout","timer","cancelablePromise","aborted","POSITIVE_INFINITY","timeoutError","finally","pEvent","arrayPromise","returnValue","rejectionEvents","multiArgs","resolveImmediately","flat","items","normalizeEmitter","onItem","arguments_","rejectHandler","rejectionEvent","timeout","pEventMultiple","waitForRemotePeer","waku","timeoutMs","relay","Relay","Filter","store","Store","lightPush","LightPush","getEnabledProtocols","isStarted","promises","getMeshPeers","gossipSub","waitForGossipSubPeerInMesh","waitForConnectedPeer","services","awaitTimeout","rejectOnTimeout","metadataService","any","confirmOrAttemptHandshake","rejectReason","_resolve","TypedEventEmitter","EventTarget","dispatchEvent","safeDispatchEvent","CustomEvent","KeepAliveManager","pingKeepAliveTimers","relayKeepAliveTimers","pingKeepAlive","pingPeriodSecs","relayKeepAlive","relayPeriodSecs","interval","setInterval","intervals","scheduleRelayPings","clearInterval","stopAll","connectionsExist","ConnectionManager","configuredPubsubTopics","static","keepAliveManager","dialAttemptsForPeer","dialErrorsForPeer","currentActiveParallelDialCount","pendingPeerDialQueue","isP2PNetworkConnected","isConnected","onLine","keepAliveOptions","instances","onEventHandlers","stopNetworkStatusListener","dropConnection","hangUp","getPeersByDiscovery","peersDiscovered","peersConnected","conn","peersDiscoveredByBootstrap","peersDiscoveredByPeerExchange","peersDiscoveredByLocal","peersConnectedByBootstrap","peersConnectedByPeerExchange","peersConnectedByLocal","getTagNamesForPeer","PEER_EXCHANGE","LOCAL","DISCOVERED","CONNECTED","maxDialAttemptsForPeer","maxBootstrapPeersAllowed","maxParallelDials","startEventListeners","dialPeerStorePeers","dialPromises","peerInfo","attemptDial","startPeerDiscoveryListener","startPeerConnectionListener","startPeerDisconnectionListener","startNetworkStatusListener","dialPeer","dialAttempt","dial","AggregateError","errors","processDialQueue","attemptDnsDiscovery","dnsDiscovery","findPeers","shouldDialPeer","dispatchDiscoveryEvent","PEER_CONNECT_BOOTSTRAP","PEER_CONNECT_PEER_EXCHANGE","setP2PNetworkConnected","setP2PNetworkDisconnected","dispatchWakuConnectionEvent","isPeerTopicConfigured","getPeerShardInfo","isPeerDialableBasedOnBootstrapStatus","tagName","isBootstrap","PEER_DISCOVERY_BOOTSTRAP","PEER_DISCOVERY_PEER_EXCHANGE","shardInfoBytes","CONNECTION_STATUS","HealthManager","health","overallStatus","Unhealthy","protocolStatuses","getInstance","getHealthStatus","getProtocolStatus","updateProtocolHealth","getNameFromMulticodec","MinimallyHealthy","SufficientlyHealthy","lastUpdate","updateOverallHealth","statuses","getHealthManager","MetadataCodec","Metadata","libp2pComponents","handshakesConfirmed","registrar","NO_PEER_AVAILABLE","encodedResponse","decodeMetadataResponse","savePeerShardInfo","encodedShardInfo","wakuMetadata","peerIdSymbol","isPeerId","parser","readAtomically","parseWith","peekChar","readChar","readGivenChar","readSeparator","sep","inner","readNumber","radix","maxDigits","allowZeroPrefix","maxBytes","digitCount","leadingChar","hasLeadingZero","maxValue","digit","readIPv4Addr","ix","readIPv6Addr","readGroups","groups","ipv4","headSize","headIp4","limit","tailSize","readIPAddr","isIPv4","new","isIPv6","isIP","isV4","isV6","sections","v4Buffer","argv","V","convertToString","ipBuff","ipString","bytes2ip","bytes2str","bytes2port","address","bytes2mh","addrBytes","portBytes","bytes2onion","bytes2mb","convertToBytes","ip2bytes","str2bytes","port2bytes","mh","mh2bytes","addr","port","portBuf","onion2bytes","onion32bytes","mbstr","mb","anybaseDecoder","mb2bytes","row","resolvable","createProtocol","bytesToMultiaddrParts","tuples","stringTuples","sizeForAddr","stringAddr","stringTuplesToString","tup","cleanPath","tuplesToBytes","inspect","DNS_CODES","NoAvailableResolverError","Multiaddr","stringToMultiaddrParts","isMultiaddr","toOptions","family","transport","host","zone","tcp","udp","ip4","ip6","dns6","ip6zone","protos","protoCodes","protoNames","encapsulate","decapsulate","addrString","decapsulateCode","getPeerId","p2p","tuple","pop","getPath","resolvableProto","resolver","resolvers","nodeAddress","isThinWaistAddress","pubsubTopicBytes","contentTopicBytes","timestampBytes","bigIntTimestamp","numberToBytes","tryConvertTimestampToBytes","BaseProtocolSDK","core","healthManager","numPeersToUse","maintainPeersIntervalId","maintainPeersLock","renewPeersLocker","RenewPeerLocker","maintainPeersInterval","startMaintainPeersInterval","renewPeer","peerToDisconnect","findAndAddPeers","updatedPeers","updatePeers","lock","stopMaintainPeersInterval","hasPeers","autoRetry","forceUseAllPeers","initialDelay","maxAttempts","maxDelay","attempts","maintainPeers","delayMs","numPeersToAdd","cleanUnlocked","additionalPeers","findAdditionalPeers","dials","newPeers","isLocked","lockDuration","time","isTimeUnlocked","entries","SubscriptionManager","subscriptionCallbacks","receivedMessagesHashStr","peerFailures","receivedMessagesHashes","missedMessagesByPeer","keepAliveInterval","maxPingFailures","maxMissedMessagesThreshold","keepAliveTimer","allPeerIdStr","nodes","fromEntries","addHash","keepAlive","pingsBeforePeerRenewed","decodersArray","failures","TOPIC_DECODER_MISMATCH","successes","decodersGroupedByCT","results","allSettled","finalResult","handleResult","subscriptionCallback","startSubscriptionsMaintenance","stopSubscriptionsMaintenance","pingSpecificPeer","validateMessage","hashes","incrementMissedMessageCount","shouldRenewPeer","renewAndSubscribePeer","processIncomingMessage","hashedMessageStr","messageHashStr","decodePromises","dec","decoded","decodedMessage","pushMessage","promiseResult","coreResult","handlePeerFailure","newPeer","startKeepAlivePings","startConnectionListener","stopKeepAlivePings","stopConnectionListener","connectionListener","renewPeerPromises","currentCount","FilterSDK","_connectionManager","activeSubscriptions","subscription","getActiveSubscription","protocolUseOptions","subscribeOptions","uniquePubsubTopics","getUniquePubsubTopics","INVALID_DECODER_TOPICS","createSubscription","setActiveSubscription","subscribeWithUnsubscribe","toSubscriptionIterator","receiver","iteratorOptions","isWithTimeout","startTime","toAsyncIterator","LightPushSDK","_options","TOPIC_NOT_CONFIGURED","sendPromises","StoreSDK","queryGenerator","decodersAsMap","validateDecodersAndPubsubTopic","responseGenerator","queryWithOrderedCallback","processMessages","queryWithPromiseCallback","abort","page","_promises","msgPromise","processedMessages","createCursor","uniquePubsubTopicsInQuery","pubsubTopicForQuery","WakuNode","protocolsEnabled","lightpush","wakuLightPush","wakuFilter","_protocols","mapToPeerIdOrMultiaddr","codecs","multicodecs","dialProtocol","getLocalMultiaddrWithID","localMultiaddr","getMultiaddrs","AggregateCodeError","ERR_TIMEOUT","isPromise","U32_MASK64","fromBig","u64","lst","Ah","Al","toBig","shrSH","_l","shrSL","rotrSH","rotrSL","rotrBH","rotrBL","rotr32H","_h","rotr32L","rotlSH","rotlSL","rotlBH","rotlBL","Bh","Bl","add3L","Cl","add3H","Ch","add4L","Dl","add4H","Dh","add5H","Eh","add5L","El","SHA512_Kh","SHA512_Kl","SHA512_W_H","SHA512_W_L","SHA512","Fh","Fl","Gh","Gl","Hh","Hl","W15h","W15l","s0h","s0l","W2h","W2l","s1h","s1l","SUMl","SUMh","sigma1h","sigma1l","CHIh","CHIl","T1ll","T1h","T1l","sigma0h","sigma0l","MAJh","MAJl","All","_0n","_1n","_2n","abool","title","padStart","numberToHexUnpadded","hexToNumber","_0","_9","_A","_F","_a","_f","hl","al","ai","n1","n2","expectedLength","sum","isPosBig","bitLen","bitMask","u8n","u8fr","createHmacDrbg","hashLen","qByteLen","hmacFn","reseed","sl","pred","validatorFns","bigint","function","boolean","stringOrUint8Array","Fp","isValid","validateObject","validators","optValidators","checkField","isOptional","checkVal","memoized","arg","computed","_3n","_4n","_5n","_8n","power","modulo","pow2","invert","y","u","FIELD_FIELDS","nLength","nBitLength","_nBitLength","nByteLength","ORDER","redef","BYTES","sqrtP","P","p1div4","eql","sqr","mul","nv","sub","ONE","legendreC","Q","S","Z","Q1div2","neg","g","ZERO","t2","ge","tonelliShanks","FpSqrt","MASK","is0","isOdd","lhs","rhs","FpPow","div","sqrN","addN","subN","mulN","inv","sqrt","invertBatch","nums","lastMultiplied","inverted","reduceRight","FpInvertBatch","cmov","fromBytes","getFieldBytesLength","fieldOrder","bitLength","getMinHashLength","pointPrecomputes","pointWindowSizes","wNAF","constTimeNegate","condition","negate","validateW","W","windows","windowSize","unsafeLadder","elm","precomputeWindow","points","precomputes","maxNumber","shiftBy","wbits","offset1","offset2","cond1","cond2","wNAFCached","transform","comp","setWindowSize","pippenger","scalars","buckets","lastBits","scalar","resI","sumI","validateBasic","curve","validateField","Gx","Gy","VERIFY_DEFAULT","zip215","ED25519_P","ED25519_SQRT_M1","ed25519_pow_2_252_3","_10n","_20n","_40n","_80n","b80","b160","b240","b250","pow_p_5_8","adjustScalarBytes","uvRatio","vx2","root1","root2","useRoot1","useRoot2","noRoot","ed25519Defaults","ed25519","curveDef","CURVE","domain","mapToCurve","validateOpts","prehash","cHash","cofactor","modP","Fn","phflag","aCoordinate","assertPoint","Point","toAffineMemo","iz","ex","ey","ez","z","ax","ay","zz","assertValidMemo","X","Y","et","T","X2","Y2","Z2","Z4","aX2","toAffine","fromAffine","normalizeZ","toInv","msm","_setWindowSize","wnaf","assertValidity","X1","Y1","Z1","X1Z2","X2Z1","Y1Z2","Y2Z1","x1y1","X3","Y3","T3","Z3","subtract","multiply","CURVE_ORDER","multiplyUnsafe","I","isSmallOrder","isTorsionFree","clearCofactor","fromHex","normed","lastByte","y2","isXOdd","isLastByteOdd","fromPrivateKey","privKey","getExtendedPublicKey","point","toRawBytes","toHex","modN","modN_LE","hashed","pointBytes","hashDomainToScalar","msgs","verifyOpts","getPublicKey","R","sig","publicKey","SB","ExtendedPoint","utils","randomPrivateKey","precompute","x25519","montgomeryBits","powPminus2","Gu","montgomeryBytes","fieldLen","cswap","swap","x_2","x_3","a24","encodeUCoordinate","scalarMult","pointU","uEnc","decodeUCoordinate","_scalar","decodeScalar","pu","x_1","sw","z_2","z_3","k_t","AA","BB","DA","CB","dacb","da_cb","z2","montgomeryLadder","GuBytes","scalarMultBase","getSharedSecret","privateKey","montgomery","PUBLIC_KEY_BYTE_LENGTH","PRIVATE_KEY_BYTE_LENGTH","KEYS_BYTE_LENGTH","concatKeys","privateKeyRaw","win","nativeCrypto","derivedEmptyPasswordKey","alg","ext","key_ops","kty","exporter","password","cipher","keyLength","iterations","encrypt","salt","nonce","aesGcm","iv","cryptoKey","importKey","deriveParams","runtimeDerivedEmptyPassword","deriveKey","rawKey","ciphertext","decrypt","saltLength","plaintext","encryptedKey","KeyType","__KeyTypeValues","PublicKey","PrivateKey","Data","Ed25519PublicKey","_key","ensureKey","marshal","Ed25519","Ed25519PrivateKey","_publicKey","public","unmarshalEd25519PrivateKey","privateKeyBytes","publicKeyBytes","unmarshalEd25519PublicKey","generateKeyPairFromSeed","pair","derivePublicFromPrivate","exportKey","jwKey","keySize","jwk","HMAC","iHash","oHash","hmac","utilFromBase","inputBuffer","inputBase","utilToBase","internalReserved","internalValue","biggest","retBuf","retView","basis","utilConcatView","views","outputLength","prevLength","utilDecodeTC","valueHex","condition1","condition2","warnings","bigIntBuffer","bigIntView","bigInt","smallIntBuffer","smallIntView","padNumber","inputNumber","fullLength","dif","assertBigInt","baseBlock","inputOffset","inputLength","ViewWriter","final","powers2","digitsString","EMPTY_BUFFER","EMPTY_VIEW","END_OF_CONTENT_NAME","OCTET_STRING_NAME","BIT_STRING_NAME","HexBlock","BaseClass","isHexOnly","valueHexView","fromBER","endLength","blockLength","toBER","sizeOnly","NAME","LocalBaseBlock","EMPTY_STRING","valueBeforeDecode","valueBeforeDecodeView","blockName","ValueBlock","LocalIdentificationBlock","idBlock","_b","_c","_d","tagClass","tagNumber","isConstructed","firstOctet","encodedBuf","encodedView","curView","inputView","intBuffer","tagNumberMask","intTagNumberBuffer","tagNumberBufferMaxLength","tempBufferView","LocalLengthBlock","lenBlock","isIndefiniteForm","longFormUsed","lenOffset","lengthBufferView","typeStore","BaseBlock","primitiveSchema","parameters","valueBlockType","valueBlock","resultOffset","_writer","prepareIndefiniteForm","idBlockBuf","valueBlockBuf","lenBlockBuf","onAsciiEncoding","inputBuffer1","inputBuffer2","view1","view2","Constructed","BaseStringBlock","stringValueBlockType","getValue","setValue","fromBuffer","LocalPrimitiveValueBlock","_a$w","_a$v","_a$u","_a$t","_a$s","_a$r","_a$q","_a$p","_a$o","_a$n","_a$m","_a$l","_a$k","_a$j","_a$i","_a$h","_a$g","_a$f","_a$e","_a$d","_a$c","_a$b","_a$a","_a$9","_a$8","_a$7","_a$6","_a$5","_a$4","_a$3","_a$2","_a$1","Primitive","localFromBER","incomingOffset","returnObject","newASN1Type","EndOfContent","Integer","BitString","OctetString","Null","ObjectIdentifier","Enumerated","Utf8String","RelativeObjectIdentifier","TIME","Sequence","NumericString","PrintableString","TeletexString","VideotexString","IA5String","UTCTime","GeneralizedTime","GraphicString","VisibleString","GeneralString","UniversalString","CharacterString","BmpString","DATE","TimeOfDay","DateTime","newObject","inputObject","newType","localChangeType","LocalConstructedValueBlock","currentOffset","LocalEndOfContentValueBlock","override","LocalBooleanValueBlock","octet","LocalOctetStringValueBlock","currentBlockName","asn","content","LocalBitStringValueBlock","unusedBits","bitsStr","viewAdd","second","firstView","secondView","firstViewCopy","firstViewCopyLength","secondViewCopy","secondViewCopyLength","power2","digits","viewSub","LocalIntegerValueBlock","_valueDec","setValueHex","valueDec","modValue","tempBuf","tempView","fromDER","toDER","updatedView","firstBit","currentByte","bitNumber","asn1View","flag","byteNumber","bigIntValue","secondInt","convertToDER","integer","convertFromDER","LocalSidValueBlock","isFirstSid","valueBigInt","sidValue","LocalObjectIdentifierValueBlock","sidBlock","retBuffers","valueBuf","pos1","pos2","sid","plus","parsedSID","sidStr","sidArray","LocalRelativeSidValueBlock","LocalRelativeObjectIdentifierValueBlock","LocalStringValueBlock","LocalSimpleStringValueBlock","LocalSimpleStringBlock","inputString","strLen","LocalUtf8StringValueBlock","LocalBmpStringValueBlock","LocalUniversalStringValueBlock","copyBuffer","valueView","strLength","codeBuf","codeView","valueDate","year","month","day","hour","minute","fromDate","toBuffer","inputDate","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","toDate","UTC","parserArray","outputArray","toISOString","millisecond","getUTCMilliseconds","isUTC","timeString","dateTimeString","fractionPart","hourDifference","minuteDifference","multiplier","differencePosition","differenceString","fractionPointPosition","fractionPartCheck","fractionResult","tempDate","getUTCDay","bnToBuf","bn","u8","bufToBn","exportToPem","keyBuf","keyArr","encryptionKey","dkLen","asyncTick","DK","PRF","PRFSalt","_password","_salt","_opts","checkOpts","pbkdf2Init","prfW","ti","Ti","pbkdf2Output","encrypted","pbkdf2Params","encryptionAlgorithm","finalWrapperBuf","MAX_RSA_KEY_SIZE","RsaPublicKey","der","RSA","RsaPrivateKey","genSecret","dp","dq","qi","unmarshalRsaPublicKey","fromJwk","generateKey","modulusLength","publicExponent","validateSigVerOpts","lowS","b2n","h2b","DER","Err","_tlv","dataLen","lenLen","lengthBytes","_int","toSig","tlv","seqBytes","seqLeftBytes","rBytes","rLeftBytes","sBytes","sLeftBytes","hexFromSig","seq","weierstrass","bits2int","bits2int_modN","compressedLen","uncompressedLen","invN","ProjectivePoint","normPrivateKeyToScalar","weierstrassEquation","isWithinCurveOrder","allowedPrivateKeyLengths","wrapPrivateKey","allowInfinityPoint","endo","beta","splitScalar","validatePointOpts","_isCompressed","x2","x3","N","assertPrjPoint","px","py","pz","hasEvenY","U1","U2","t0","t1","t3","t4","t5","sc","k1neg","k2neg","k1p","k2p","fake","f1p","f2p","multiplyAndAddUnsafe","isCompressed","_bits","weierstrassPoints","cat","sqrtError","suffix","numToNByteStr","isBiggerThanHalfOrder","slcNum","Signature","recovery","fromCompact","addRecoveryBit","recoverPublicKey","msgHash","rec","radj","ir","u1","u2","hasHighS","normalizeS","toDERRawBytes","toDERHex","toCompactRawBytes","toCompactHex","isValidPrivateKey","minLen","reduced","isProbPub","delta","ORDER_MASK","int2octets","defaultSigOpts","defaultVerOpts","privateA","publicB","k2sig","extraEntropy","ent","h1int","seedArgs","kBytes","ik","normS","prepSig","drbg","signature","sg","_sig","derError","is","getHash","secp256k1P","secp256k1N","divNearest","_6n","_11n","_22n","_23n","_44n","_88n","b88","b176","b220","b223","secp256k1","defHash","createCurve","POW_2_128","validatePublicKey","Secp256k1PublicKey","Secp256k1","Secp256k1PrivateKey","unmarshalSecp256k1PrivateKey","unmarshalSecp256k1PublicKey","supportedKeys","rsa","unsupportedKey","supported","typeToKey","marshalPublicKey","unmarshalRsaPrivateKey","serviceCapabilities","serviceDependencies","baseDecoder","PeerIdImpl","toCID","peerIdFromString","RSAPeerIdImpl","Ed25519PeerIdImpl","Secp256k1PeerIdImpl","TRANSPORT_IPFS_GATEWAY_HTTP_CODE","URLPeerIdImpl","url","peerIdFromBytes","URL","peerIdFromCID","peerIdFromKeys","raceSignal","errorCode","errorName","QueuelessPushable","readNext","haveNext","nextResult","byteStream","readBuffer","abortPromise","unwrap","originalStream","yieldBytes","lpStream","decodeLength","lengthBuffer","writeV","flatMap","piped","NOISE_MSG_MAX_LENGTH_BYTES","DUMP_SESSION_KEYS","copyBytes","wrapCipher","clean","_utf8ToBytes","sigma16","sigma32","sigma16_32","sigma32_32","MAX_COUNTER","U32_EMPTY","createCipher","allowShortKeys","extendNonceFn","counterLength","counterRight","rounds","toClean","sigma","k32","nonceNcLen","nc","n32","isAligned","d32","o32","pos32","posj","runCipher","u8to16","Poly1305","Uint16Array","t6","t7","isLast","hibit","r0","r1","r2","r3","r4","r5","r6","r7","r8","r9","h0","h5","h6","h7","h8","h9","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","opos","poly1305","wrapConstructorWithKey","chachaCore","cnt","y00","y01","y02","y03","y04","y05","y06","y07","y08","y09","y10","y11","y12","y13","y14","y15","x00","x01","x02","x03","x04","x05","x06","x07","x08","x09","x10","x11","x12","x13","x14","x15","oi","chacha20","xchacha20","ZEROS16","updatePadded","ZEROS32","computeTag","AAD","authKey","_poly1305_aead","xorStream","plength","clength","passedTag","chacha20poly1305","blockSize","nonceLength","tagLength","HKDF_COUNTER","defaultCrypto","hashSHA256","getHKDF","ck","ikm","prk","extract","okm","HMACTmp","expand","generateX25519KeyPair","secretKey","generateX25519KeyPairFromSeed","generateX25519SharedKey","chaCha20Poly1305Encrypt","ad","chaCha20Poly1305Decrypt","uint16BEEncode","uint16BEDecode","logLocalStaticKeys","keyLogger","logLocalEphemeralKeys","logRemoteEphemeralKey","logCipherState","cs1","cs2","getUint64","Nonce","increment","getBytes","assertValue","ZEROLEN","CipherState","hasKey","encryptWithAd","decryptWithAd","SymmetricState","cs","protocolName","protocolNameBytes","hashProtocolName","mixKey","tempK","hkdf","mixHash","encryptAndHash","decryptAndHash","tempK1","tempK2","AbstractHandshakeState","ss","rs","initiator","prologue","writeE","generateKeypair","writeS","writeEE","dh","writeES","writeSE","readE","readS","cipherLength","temp","readEE","readES","readSE","XXHandshakeState","writeMessageA","writeMessageB","encS","writeMessageC","readMessageA","readMessageB","consumed","readMessageC","NoiseExtensions","NoiseHandshakePayload","createHandshakePayload","staticPublicKey","identitySig","getSignaturePayload","identityKey","decodeHandshakePayload","payloadBytes","remoteStaticKey","remoteIdentityKey","remoteIdentityKeyBytes","signaturePayload","webtransportCerthashes","Noise","staticKey","metrics","staticNoiseKey","prologueBytes","_crypto","keypair","wrapCrypto","xxHandshakeSuccesses","registerCounter","help","xxHandshakeErrors","encryptedPackets","decryptedPackets","decryptErrors","registerMetrics","secureOutbound","localPeer","parseArgs","wrappedConnection","handshake","performHandshakeInitiator","createSecureConnection","remoteExtensions","secureInbound","performHandshakeResponder","xx","trace","receivedPayload","forComponent","secure","user","duplexPair","network","encryptStream","decryptStream","noise","peerDiscoverySymbol","DNS4","DNS6","DNSADDR","DNS","IP","TCP","and","UDP","UTP","QUIC","QUICV1","_WebSockets","WebSockets","_WebSocketsSecure","WebSocketsSecure","HTTP","HTTPS","_WebRTCDirect","WebRTCDirect","_WebTransport","WebTransport","P2PWebRTCStar","P2PWebRTCDirect","Reliable","_P2P","_Circuit","CircuitRecursive","Circuit","P2P","makeMatchesFunction","partialMatch","ma","matches","pnames","Bootstrap","_init","candidate","peerData","multiaddrs","_discoverBootstrapPeers","tagValue","ttl","tagTTL","ENVELOPE_PAYLOAD_TYPE_PEER_RECORD","PeerRecord","AddressInfo","multiaddr","addresses","peerRecord","seqNumber","DOMAIN","CODEC","marshaled","localeCompare","every","arrayEquals","Envelope","payloadType","RecordEnvelope","envelopeData","record","signData","formatSignaturePayload","envelope","createFromProtobuf","validate","domainUint8Array","domainLength","payloadTypeLength","payloadLength","func","vals","pattern","literal","certhash","matcher","matchers","fmt","toParts","exactMatch","_DNS4","_DNS6","_DNSADDR","_DNS","_IP4","_IP6","_IP","_IP_OR_DOMAIN","IP_OR_DOMAIN","_TCP","_UDP","_QUIC","_QUICV1","QUIC_V0_OR_V1","_WEB","pbStream","lp","pb","Identify","protocolVersion","agentVersion","listenAddrs","observedAddr","signedPeerRecord","isEnvWithDom","nodeType","isElectron","isBrowser","isElectronMain","isElectronRenderer","release","isWebWorker","importScripts","WorkerGlobalScope","isReactNative","product","defaultValues","AbstractIdentify","started","addressManager","maxOutboundStreams","maxMessageSize","maxObservedAddresses","runOnTransientConnection","nodeInfo","protocolPrefix","AgentVersion","ProtocolVersion","handleProtocol","unhandle","runOnConnectionOpen","identify","_identify","AbortSignal","close","cleanObservedAddr","getCleanMultiaddr","getObservedAddrs","addObservedAddr","isCertified","peerRecordEnvelope","openAndCertify","existingPeer","storedEnvelope","storedRecord","patch","consumeIdentifyMessage","getAddresses","seal","remoteAddr","closeSource","getIterator","createAbortError","clearMethods","defaultClear","defaultSet","timeoutId","settle","rejectFunction","signalListener","delayPromise","createDelay","RateLimiter","memoryStorage","duration","blockDuration","execEvenly","execEvenlyMinDelayMs","keyPrefix","MemoryStorage","pointsToConsume","rlKey","getKey","secDuration","_getKeySecDuration","incrby","remainingPoints","consumedPoints","msBeforeNext","isFirstInDuration","penalty","reward","msDuration","initPoints","customDuration","parseKey","durationSec","existing","msBeforeExpires","expiresAt","durationMs","unref","MessageTypes","MessageTypeNames","InitiatorMessageTypes","NEW_STREAM","MESSAGE","MESSAGE_INITIATOR","CLOSE","CLOSE_INITIATOR","RESET","RESET_INITIATOR","ReceiverMessageTypes","MESSAGE_RECEIVER","CLOSE_RECEIVER","RESET_RECEIVER","MAX_MSG_SIZE","_buffer","_headerInfo","_maxMessageSize","_maxUnprocessedMessageQueueSize","maxUnprocessedMessageQueueSize","_decodeHeader","readVarInt","POOL_SIZE","_pool","_poolOffset","header","AbstractStream","direction","readStatus","writeStatus","sinkController","sinkEnd","closed","endErr","streamSource","onCloseRead","onCloseWrite","onReset","onAbort","sendCloseWriteTimeout","sendingData","AbortController","onSourceEnd","sendNewStream","abortListener","sendData","sendCloseWrite","onSinkEnd","closeRead","closeWrite","sendCloseRead","sendReset","_closeSinkAndSource","_closeSink","_closeSource","remoteCloseWrite","remoteCloseRead","sourcePush","sourceReadableLength","MplexStream","streamId","maxDataSize","toSend","printMessage","MplexStreamMuxer","_streamId","_streams","_source","closeController","rateLimiter","closeTimeout","initiators","receivers","_createSink","disconnectThreshold","streams","registry","_newStream","_newReceiverStream","maxMsgSize","onStreamEnd","_handleIncoming","onIncomingStream","maxBufferSize","maxStreamBufferSize","Mplex","createStreamMuxer","mplex","ERR_WRONG_PING_ACK","PingService","handleMessage","received","openConnection","transportSymbol","FaultTolerance","ASSUME_HTTP_CODES","extractSNI","sniProtoCode","hasTLS","interpretNext","headProtoCode","headProtoVal","restMa","interpreter","interpreters","restVal","tailProto","dnsaddr","dns4","dns","ipfs","http","maHasTLS","sni","baseVal","tls","https","ws","wss","socket","cleanup","handleOpen","handleErr","closeOnEnd","ready","CLOSING","CLOSED","wasClean","connect","location","wsUrl","httpProto","wsProto","connectedSource","binaryType","connected","connError","cleanUp","cont","onOpen","onError","onMessage","remoteAddress","remotePort","hostname","CONNECTING","OPEN","terminate","websocket","CustomProgressEvent","Event","testMa","dialerEvents","registerCounterGroup","label","maConn","metricPrefix","socketToMaConn","_connect","upgrader","upgradeOutbound","cOpts","errorPromise","rawSocket","uri","onProgress","createListener","listenFilter","dialFilter","webSockets","contentRoutingSymbol","peerRoutingSymbol","fmtLong","isError","setupFormatters","defaultLogger","createDisabledLogger","mapIterable","iter","PeerSet","predicate","intersection","difference","union","createFromPrivKey","createFromJSON","pubKey","createFromPubKey","createFromParts","PeerMap","PriorityQueue","enqueue","run","element","priority","step","it","lowerBound","dequeue","PQueue","carryoverConcurrencyCount","intervalCap","concurrency","autoStart","queueClass","throwOnTimeout","canInitializeInterval","job","newConcurrency","function_","operation","addAll","functions","pause","onSizeLessThan","onIdle","sizeBy","observable","worker","WORKER_REQUEST_READ_LOCK","WORKER_RELEASE_READ_LOCK","MASTER_GRANT_READ_LOCK","WORKER_REQUEST_WRITE_LOCK","WORKER_RELEASE_WRITE_LOCK","MASTER_GRANT_WRITE_LOCK","handleWorkerLockRequest","masterEvent","releaseType","grantType","requestEvent","identifier","MessageEvent","handler","postMessage","releaseEventListener","releaseEvent","makeWorkerLockRequest","responseEvent","defaultOptions","singleProcess","mutexes","implementation","createReleaseable","Peer","Address","Tag","bytesToPeer","peerIdFromPeerId","expiry","Peer$metadataEntry","Peer$tagsEntry","pathSepS","pathSepB","pathSep","Key","_buf","uint8Array","withNamespaces","asKey","less","list1","list2","baseNamespace","namespaceType","namespaceValue","child","isAncestorOf","isDecendantOf","isTopLevel","NAMESPACE_COMMON","peerIdToDatastoreKey","b32key","dedupeFilterAndSortAddresses","addressMap","maStr","existingAddr","toPeerPB","strategy","createSortedMap","validateMetadata","validateTag","mapTag","metadataEntries","tagsEntries","mergedTags","addressFilter","decodePeer","cached","PersistentStore","datastore","isWorker","readLock","writeLock","masterQueue","readQueue","localReadQueue","readPromise","createMutex","existingBuf","peerPb","peerCache","filters","orders","mapQuery","previous","updated","put","PersistentPeerStore","consumePeerRecord","expectedPeer","peekable","iterable","sorter","BaseDatastore","putMany","getMany","deleteMany","batch","puts","dels","commit","_all","_allKeys","queryKeys","MemoryDatastore","defaultAddressFilter","addrs","stripPeerId","observedPeerIdStr","DefaultAddressManager","announce","observed","announceFilter","_updatePeerStoreAddresses","debounce","getAnnounceAddrs","transportManager","getAddrs","confident","getListenAddrs","confirmObservedAddr","startingConfidence","removeObservedAddr","addrSet","DefaultComponents","_started","_invokeStartableMethod","isStartable","startable","beforeStart","afterStart","beforeStop","afterStop","OPTIONAL_SERVICES","NON_SERVICE_PROPERTIES","getServiceCapabilities","getServiceDependencies","getServiceName","NETMASK_RANGES","ipRange","ipv4Check","ipAddr","isPrivateIp","octet34","octet12","ipv4MappedIpv6Check","ipv4EmbeddedIpv6Check","ipv6Check","connectionGater","gater","denyDialPeer","denyDialMultiaddr","denyInboundConnection","denyOutboundConnection","denyInboundEncryptedConnection","denyOutboundEncryptedConnection","denyInboundUpgradedConnection","denyOutboundUpgradedConnection","filterMultiaddrForPeer","isPrivate","defaultAddressSort","publicResult","isAPrivate","isBPrivate","publicAddressesFirst","relayResult","isACircuit","isBCircuit","circuitRelayAddressesLast","certifiedResult","certifiedAddressesFirst","getTypes","DEFAULT_TYPES","RecordType","toDNSResponse","Status","TC","flag_tc","RD","flag_rd","RA","flag_ra","AD","flag_ad","CD","flag_cd","Question","questions","question","Answer","answers","answer","TTL","dnsJsonOverHttps","httpQueue","queryConcurrency","fqdn","searchParams","URLSearchParams","headers","accept","statusText","CachedAnswers","lru","maxSize","hashlru","foundAllAnswers","getAnswers","cachedAnswers","expires","cacheSize","tld","dnsaddrCode","RecursionLimitError","dnsaddrResolver","recursionLimit","maxRecursiveDepth","TXT","DefaultConfig","noAnnounce","addressSorter","faultTolerance","FATAL_ALL","getPeerAddress","ERR_INVALID_MULTIADDR","maPeerIdStr","ERR_INVALID_PARAMETERS","maPeerId","raceEvent","eventName","removeListeners","eventListener","errorEvent","errorEventListener","JobRecipient","Job","recipients","controller","created","recipient","Queue","metricName","registerMetricGroup","calculate","running","tryToStartAnother","toGenerator","onQueueJobComplete","onQueueError","onQueueIdle","onSignalAbort","PeerQueue","AUTO_DIAL_PEER_RETRY_THRESHOLD","LAST_DIAL_FAILURE_KEY","AutoDial","minConnections","autoDialPriority","autoDialIntervalMs","autoDialMaxQueueLength","autoDialPeerRetryThresholdMs","autoDialDiscoveredPeersDebounce","autoDialInterval","maxQueueLength","autoDialPeerRetryThreshold","autoDialConcurrency","autoDial","getConnectionsMap","numConnections","sheduleNextAutodial","dialQueue","getDialQueue","shuffledPeers","peerValues","peersThatHaveNotFailed","peerAValue","peerBValue","lastDialFailure","lastDialFailureTimestamp","DEFAULT_CLOSABLE_PROTOCOLS","maxConnections","allow","ConnectionPruner","maybePruneConnections","sortedConnections","sortConnections","toPrune","toClose","streamProtocols","closableProtocols","safelyCloseConnectionIfUnused","connectionALifespan","connectionBLifespan","anySignal","signals","maxDialQueueLength","maxPeerAddrsToDial","dialTimeout","DialQueue","shutDownController","peerIdOrMultiaddr","existingConnection","force","existingDial","createDialAbortController","addrsToDial","calculateMultiaddrs","dialed","ERR_TOO_MANY_ADDRESSES","ERR_TRANSPORT_DIAL_FAILED","DEFAULT_DIAL_PRIORITY","userSignal","ERR_DIALED_SELF","ERR_PEER_DIAL_INTERCEPTED","ERR_NOT_FOUND","peerRouting","findPeer","ERR_NO_ROUTERS_AVAILABLE","resolvedAddresses","resolveMultiaddrs","peerIdMultiaddr","lastProto","filteredAddrs","dialTransportForMultiaddr","addrPeerId","dedupedAddrs","dedupedMultiaddrs","ERR_NO_VALID_ADDRESSES","gatedAdrs","sortedGatedAddrs","isDialable","DefaultConnectionManager","deny","maxIncomingPendingConnections","incomingPendingConnections","connectionPruner","inboundConnectionRateLimiter","onConnect","onDisconnect","inboundConnectionThreshold","metric","inbound","outbound","conns","allStreams","counts","keepAlivePeers","tasks","connectionList","_onConnect","storedConns","isNewPeer","storedConn","ERR_NODE_NOT_STARTED","transient","peerConnections","trackedConnection","closeConnections","acceptIncomingConnection","afterUpgradeInbound","statusMap","errored","complete","MovingAverage","movingAverage","variance","deviation","forecast","timespan","previousTime","alpha","pt","exp","incr","AdaptiveTimeout","timeoutMultiplier","failureMultiplier","minTimeout","getTimeoutSignal","timeoutFactor","sendTimeout","timeoutSignal","failureMovingAverage","failureDeviation","failureForecast","failureVariance","successMovingAverage","successDeviation","successForecast","successVariance","ConnectionMonitor","heartbeatInterval","pingIntervalMs","abortController","pingInterval","pingTimeout","bs","rtt","CompoundContentRouting","routers","findProviders","seen","router","provide","NOT_STARTED_YET","Fingerprint","fp","fingerprintSize","fnv","hashV","getRandomInt","Bucket","fingerprint","findIndex","FNV_PRIMES","FNV_OFFSETS","cachedEncoder","utf8Buffer","fnvPrime","remaining","encodeInto","asUintN","fnv1aEncodeInto","fnv1aUint8Array","fnv1a","numberToBuffer","CuckooFilter","bucketSize","filterSize","rand","swapped","inJ","inK","reliable","MAX_LOAD","optimize","maxItems","errorRate","calculateBucketSize","log2","ScalableCuckooFilter","scale","filterSeries","cuckoo","curSize","DefaultPeerRouting","ERR_FIND_SELF","NOT_FOUND","getClosestPeers","createScalableCuckooFilter","ordered","ops","sourceErr","slotAvailable","resultAvailable","sourceFinished","opErred","valuesAvailable","op","yieldOrderedValues","ok","yieldUnOrderedValues","task","parallel","useCache","RandomWalk","walking","walkers","shutdownController","walkController","needNext","walk","startWalk","DefaultRegistrar","topologies","_onDisconnect","_onPeerUpdate","_onPeerIdentify","getProtocols","getHandler","ERR_NO_HANDLER_FOR_PROTOCOL","getTopologies","ERR_PROTOCOL_HANDLER_ALREADY_REGISTERED","register","topology","unregister","removed","notifyOnTransient","TrackedMap","registerMetric","updateComponentMetric","deleted","DefaultTransportManager","transports","trackedMap","ERR_INVALID_KEY","ERR_DUPLICATE_TRANSPORT","ERR_TRANSPORT_UNAVAILABLE","getTransports","of","getListeners","listenTransportForMultiaddr","couldNotListen","supportedAddrs","NO_FATAL","removeAll","PROTOCOL_ID","MAX_PROTOCOL_LENGTH","NewLine","negotiateFully","originalSink","originalSource","negotiated","negotiating","doneNegotiating","sentProtocol","sendingProtocol","doneSendingProtocol","readProtocol","readingProtocol","doneReadingProtocol","negotiate","doSendProtocol","doReadProtocol","sentData","protocolString","originalCloseRead","originalCloseWrite","originalClose","optimisticSelect","p1","p2","connectionSymbol","ConnectionImpl","multiplexer","encryption","_close","_abort","_getStreams","getStreams","countStreams","streamCount","DefaultUpgrader","connectionEncryption","muxers","inboundUpgradeTimeout","encrypter","muxer","shouldBlockConnection","connectionType","ERR_CONNECTION_INTERCEPTED","upgradeInbound","ERR_CONNECTION_DENIED","encryptedConn","upgradedConn","muxerFactory","cryptoProtocol","trackMultiaddrConnection","protectedConn","skipProtection","protector","connectionProtector","protect","skipEncryption","_encryptInbound","idStr","remotePeerId","multiplexed","_multiplexInbound","_createConnection","_encryptOutbound","ERR_INVALID_PEER","_multiplexOutbound","muxedStream","incomingLimit","findIncomingStreamLimit","ERR_TOO_MANY_INBOUND_PROTOCOL_STREAMS","trackProtocolStream","_onStream","ERR_MUXER_UNAVAILABLE","outgoingLimit","findOutgoingStreamLimit","ERR_TOO_MANY_OUTBOUND_PROTOCOL_STREAMS","ERR_UNSUPPORTED_PROTOCOL","_timeline","Proxy","Reflect","upgraded","ERR_CONNECTION_NOT_MULTIPLEXED","ERR_ENCRYPTION_FAILED","Libp2pNode","contentRouting","originalDispatch","internalResult","externalResult","defaultComponents","configureComponent","streamMuxers","connectionMonitor","peerRouters","contentRouters","peerDiscovery","createService","capability","checkServiceDependencies","component","peerSet","ERR_INVALID_PROTOCOLS_FOR_STREAM","peerKey","ERR_DISCOVERED_SELF","createLibp2pNode","generateKeyPair","createEd25519PeerId","resultingOptions","LIBP2P_FORCE_PNET","ERR_PROTECTOR_REQUIRED","validateConfig","DEFAULT_NODE_REQUIREMENTS","USE_ENDOMORPHISM","ShaError","assertJacPoint","JacobianPoint","toAffineBatch","scratch","Z1Z1","Z2Z2","S1","S2","x1b","HH","HHH","P0","normalizeScalar","affinePoint","_WINDOW_SIZE","invZ","iz1","iz2","iz3","fromCompressedHex","isShort","bytesToNumber","isValidFieldElement","rt","isYOdd","fromUncompressedHex","normalizePrivateKey","fromSignature","normalizeSignature","truncateHash","rinv","numTo32bStr","toHexX","toRawX","aP","bQ","sliceDER","parseDERInt","rBytesLeft","parseDERSignature","HALF","sHex","rHex","sHexL","rHexL","sLen","rLen","uint8a","POW_2_256","hexByte","truncateOnly","groupLen","bits2int_2","_sha256Sync","_hmacSha256Sync","HmacDrbg","hmacSha256","hmacSync","checkSync","reseedSync","generate","generateSync","kmdToSig","kinv","bits2octets","z1","vopts","strict","web","bytesToHex","hexToBytes","concatBytes","_bigintTo32Bytes","_normalizePrivateKey","hashToPrivateKey","sha256","createHash","ckey","createHmac","sha256Sync","hmacSha256Sync","taggedHash","tagP","tagH","taggedHashSync","_JacobianPoint","keccak256","sha3","verifySignature","normalizePublicKey","sinv","ERR_INVALID_ID","locationMultiaddrFromEnrFields","isIpv6","ipVal","protoName","protoVal","ipFamily","ipBytes","protocolBytes","multiaddrFromFields","encodeMultiaddrs","encodeWaku2","RawEnr","kvs","rsv","getStringValue","setStringValue","getNumberAsStringValue","setNumberAsStringValue","tcp6","udp6","raw","multiaddrBytes","decodeMultiaddrs","deleteUndefined","waku2","decodeWaku2","initSigArgs","canonical","recSig","recovered","finalizeSig","TransportProtocol","TransportProtocolPerIpVersion","createPeerIdFromPublicKey","nodeId","uncompressedPubkey","getLocationMultiaddr","setLocationMultiaddr","getAllLocationMultiaddrs","_multiaddrs","getFullMultiaddr","locationMultiaddr","getFullMultiaddrs","_permanentCensorErrors","_censorErrors","LogLevels","warning","_logLevel","_globalLogger","_normalizeError","form","_checkNormalize","LogLevel","ErrorCode","HEX","_log","logLevel","throwArgumentError","levels","INFO","WARNING","makeError","UNKNOWN_ERROR","messageDetails","NUMERIC_FAULT","fault","CALL_EXCEPTION","INSUFFICIENT_FUNDS","MISSING_NEW","NONCE_EXPIRED","REPLACEMENT_UNDERPRICED","TRANSACTION_REPLACED","UNPREDICTABLE_GAS_LIMIT","throwError","INVALID_ARGUMENT","argument","assert","assertArgument","checkNormalize","UNSUPPORTED_OPERATION","checkSafeUint53","checkArgumentCount","expectedCount","MISSING_ARGUMENT","UNEXPECTED_ARGUMENT","checkNew","checkAbstract","globalLogger","setCensorship","censorship","permanent","setLogLevel","isHexable","addSlice","arrayify","allowMissingPrefix","toHexString","isHexString","hexPad","HexCharacters","hexlify","arrayifyInteger","unarrayifyInteger","_encode","_decodeChildren","childOffset","_decode","BUFFER_OVERRUN","EnrDecoder","encoded","RECORD_PREFIX","fromRLP","checkValues","_seq","decodeSeq","rlpEncodedBytes","checkSignature","fromValues","v4Regex","v6Regex","isFormat","buff","hexN","decN","prevColon","useDec","sizeOf","toType","rcode","opcode","klass","toClass","toCode","SURROGATE_A","SURROGATE_B","nextCode","numA","isU8Arr","bytelength","P_24","P_16","P_8","readUInt32BE","readUInt16BE","writeUInt32BE","writeUInt16BE","targetStart","sourceStart","sourceEnd","nb","sourceLen","_copyActual","consumedBytes","jumped","jumpOffset","flags","authorities","additionals","flag_qr","flag_aa","flag_z","runknown","dLen","rns","dd","rsoa","mname","rname","serial","refresh","retry","expire","minimum","rtxt","rnull","rhinfo","cpu","os","rptr","rsrv","weight","rcaa","issuerCritical","ISSUER_CRITICAL","rmx","preference","exchange","ra","raaaa","roption","spl","sourcePrefixLength","fam","ipBuf","ipLen","scopePrefixLength","tagsLen","padded","ropt","rdlen","encodingLengthList","encodeList","rdnskey","keydata","PROTOCOL_DNSSEC","ZONE_KEY","SECURE_ENTRYPOINT","rrrsig","typeCovered","labels","originalTTL","expiration","inception","keyTag","signersName","rrp","mbox","txt","typebitmap","typelist","typesByWindow","typeid","windowBuf","windowLength","extents","rnsec","nextDomain","rrtypes","rnsec3","hashLength","rds","digestdata","digestType","renc","udpPayloadSize","extendedRcode","ednsVersion","class","flush","flag_do","packet","allocing","decodeList","sanitizeSingle","sanitized","make","charset","paddingMode","byCharCode","byNum","padCode","safeLen","safeEnd","base64URL","require","HTTPStatusError","endpoint","ResponseError","cause","reduceError","baseParts","httpFlags","updFlags","parseFlags","regex","InvalidProtocolError","supportedProtocols","BaseEndpoint","isHTTP","pk","UDPEndpoint","ipv6","UDP4Endpoint","UDP6Endpoint","safeHost","HTTPEndpoint","v6Parts","toEndpoint","post","parseEndpoint","contentType","requestRaw","abortSignal","setRequestHeader","ontimeout","onerror","onload","onabort","cors","endpoints","resolverByName","byName","endpointByName","backup","description","country","lat","UPDATE_URL","isNameString","wellknown","updateURL","persist","localStoragePrefix","maxAge","_dataP","_data","outdated","cacheKey","maxTime","filterDoh","filterDns","queryN","singleQuery","toMultiQuery","queryDoh","queryOne","DnsOverHttps","_endpoints","resolveTXT","sd","ENRTree","parseAndVerifyRoot","ROOT_PREFIX","rootValues","parseRootValues","decodedPublicKey","signedComponent","signedComponentBuffer","eRoot","lRoot","parseTree","tree","TREE_PREFIX","parseBranch","branch","BRANCH_PREFIX","isSatisfied","wanted","addCapabilities","total","helpsSatisfyCapabilities","missingCapabilities","DnsNodeDiscovery","_DNSTreeCache","_errorTolerance","dnsOverHttp","dnsClient","enrTreeUrls","wantedNodeCapabilityCount","networkIndex","visits","errorTolerance","getNode","maxSearches","totalSearches","fetchNodesUntilCapabilitiesFulfilled","_search","getNextPeer","peerNodeIds","yieldNodesUntilCapabilitiesFulfilled","subdomain","_getTXTRecord","branches","entryType","getEntryType","circularRefs","selectRandomPath","PeerDiscoveryDns","nextPeer","_components","enrUrls","peerEnr","tagsToUpdate","isPeerChanged","wakuDnsDiscovery","PeerExchangeCodec","WakuPeerExchange","rpcQuery","ENR","DEFAULT_PEER_EXCHANGE_QUERY_INTERVAL_MS","DEFAULT_MAX_RETRIES","DEFAULT_PEER_EXCHANGE_TAG_NAME","PeerExchangeDiscovery","peerExchange","queryingPeers","queryAttempts","handleDiscoveredPeer","startRecurringQueries","queryInterval","maxRetries","currentAttempt","abortQueriesForPeer","_peerInfo","hasMultiaddrDiff","hasShardDiff","checkPeerInfoDiff","existingMultiaddrs","newMultiaddrs","existingShardInfoBytes","existingShardInfo","wakuPeerExchangeDiscovery","DEFAULT_LOCAL_TAG_NAME","LocalPeerCacheDiscovery","getPeersFromLocalStorage","handleNewPeers","savePeersToLocalStorage","websocketMultiaddr","wsMultiaddr","getWsMultiaddrFromMultiaddrs","localStoragePeers","existingPeerIndex","_peer","storedPeersData","isValidStoredPeer","defaultLibp2p","hideWebSocketInfo","createLibp2p","filterMultiaddrs","pingMaxInboundStreams","createLightNode","networkConfig","isAutoSharding","derivePubsubTopicsFromNetworkConfig","libp2pOptions","defaultBootstrap","defaultPeerDiscoveries","createLibp2pAndUpdateOptions","TelemetryType","__awaiter","thisArg","_arguments","generator","fulfilled","rejected","__generator","sent","trys","Iterator","verb","TelemetryClient","intervalPeriod","intervalId","_this","telemetryRequests","e_1","telemetryType","telemetryData","__assign","generateRandomNumber","DEFAULT_EXTRA_DATA","sdk","DEFAULT_EXTRA_DATA_STR","buildExtraData","extraData","enabledProtocols","__spreadArray","pack","ar","DEFAULT_CONTENT_TOPIC","DEFAULT_PUBSUB_TOPIC","ProtoSequencedMessage","sequenceCompletedEvent","messageSentEvent","messageReceivedEvent","app","telemetryClient","startLightPushSequence","startFilterSubscription","_e","discoveredPeerId","LIGHT_PUSH_FILTER","createdAt","seenTimestamp","numMessages_1","args_1","_i","numMessages","period","sequenceHash","sequenceTotal","sequenceIndex","sendMessage","messageHash_1","timestamp_1","successEvents","failureEvents","messageElement","messagesSent","error_1","seqHash","sender","createElement","getElementById","textContent","insertBefore","firstChild","messagesReceived","failEvents","resolvedEvents","appendChild","startSequence","messagePeriod","sentMessagesCount","sentMessagesCounter","receivedMessagesCount","receivedMessagesCounter","innerText","display"],"sourceRoot":""}