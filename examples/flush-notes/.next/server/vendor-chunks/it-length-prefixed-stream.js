"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/it-length-prefixed-stream";
exports.ids = ["vendor-chunks/it-length-prefixed-stream"];
exports.modules = {

/***/ "(ssr)/./node_modules/it-length-prefixed-stream/dist/src/index.js":
/*!******************************************************************!*\
  !*** ./node_modules/it-length-prefixed-stream/dist/src/index.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   lpStream: () => (/* binding */ lpStream)\n/* harmony export */ });\n/* harmony import */ var it_byte_stream__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! it-byte-stream */ \"(ssr)/./node_modules/it-byte-stream/dist/src/index.js\");\n/* harmony import */ var uint8_varint__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! uint8-varint */ \"(ssr)/./node_modules/uint8-varint/dist/src/index.js\");\n/* harmony import */ var uint8arraylist__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! uint8arraylist */ \"(ssr)/./node_modules/uint8arraylist/dist/src/index.js\");\n/**\n * @packageDocumentation\n *\n * This module makes it easy to send and receive length-prefixed byte arrays over streams.\n *\n * @example\n *\n * ```typescript\n * import { lpStream } from 'it-length-prefixed-stream'\n *\n * const stream = lpStream(duplex)\n *\n * // read the next length-prefixed chunk\n * const bytes = await stream.read()\n *\n * // write a length-prefixed chunk\n * await stream.write(Uint8Array.from([0, 1, 2, 3, 4]))\n *\n * // write several chunks, all individually length-prefixed\n * await stream.writeV([\n *   Uint8Array.from([0, 1, 2, 3, 4]),\n *   Uint8Array.from([5, 6, 7, 8, 9])\n * ])\n * ```\n */ \n\n\nclass CodeError extends Error {\n    constructor(message, code){\n        super(message);\n        this.code = code;\n    }\n}\nfunction lpStream(duplex, opts = {}) {\n    const bytes = (0,it_byte_stream__WEBPACK_IMPORTED_MODULE_0__.byteStream)(duplex, opts);\n    if (opts.maxDataLength != null && opts.maxLengthLength == null) {\n        // if max data length is set but max length length is not, calculate the\n        // max length length needed to encode max data length\n        opts.maxLengthLength = uint8_varint__WEBPACK_IMPORTED_MODULE_1__.encodingLength(opts.maxDataLength);\n    }\n    const decodeLength = opts?.lengthDecoder ?? uint8_varint__WEBPACK_IMPORTED_MODULE_1__.decode;\n    const encodeLength = opts?.lengthEncoder ?? uint8_varint__WEBPACK_IMPORTED_MODULE_1__.encode;\n    const W = {\n        read: async (options)=>{\n            let dataLength = -1;\n            const lengthBuffer = new uint8arraylist__WEBPACK_IMPORTED_MODULE_2__.Uint8ArrayList();\n            while(true){\n                // read one byte at a time until we can decode a varint\n                lengthBuffer.append(await bytes.read(1, options));\n                try {\n                    dataLength = decodeLength(lengthBuffer);\n                } catch (err) {\n                    if (err instanceof RangeError) {\n                        continue;\n                    }\n                    throw err;\n                }\n                if (opts?.maxLengthLength != null && lengthBuffer.byteLength > opts.maxLengthLength) {\n                    throw new CodeError(\"message length length too long\", \"ERR_MSG_LENGTH_TOO_LONG\");\n                }\n                if (dataLength > -1) {\n                    break;\n                }\n            }\n            if (opts?.maxDataLength != null && dataLength > opts.maxDataLength) {\n                throw new CodeError(\"message length too long\", \"ERR_MSG_DATA_TOO_LONG\");\n            }\n            return bytes.read(dataLength, options);\n        },\n        write: async (data, options)=>{\n            // encode, write\n            await bytes.write(new uint8arraylist__WEBPACK_IMPORTED_MODULE_2__.Uint8ArrayList(encodeLength(data.byteLength), data), options);\n        },\n        writeV: async (data, options)=>{\n            const list = new uint8arraylist__WEBPACK_IMPORTED_MODULE_2__.Uint8ArrayList(...data.flatMap((buf)=>[\n                    encodeLength(buf.byteLength),\n                    buf\n                ]));\n            // encode, write\n            await bytes.write(list, options);\n        },\n        unwrap: ()=>{\n            return bytes.unwrap();\n        }\n    };\n    return W;\n} //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvaXQtbGVuZ3RoLXByZWZpeGVkLXN0cmVhbS9kaXN0L3NyYy9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztDQXdCQyxHQUMyQztBQUNMO0FBQ1M7QUFDaEQsTUFBTUcsa0JBQWtCQztJQUVwQkMsWUFBWUMsT0FBTyxFQUFFQyxJQUFJLENBQUU7UUFDdkIsS0FBSyxDQUFDRDtRQUNOLElBQUksQ0FBQ0MsSUFBSSxHQUFHQTtJQUNoQjtBQUNKO0FBQ08sU0FBU0MsU0FBU0MsTUFBTSxFQUFFQyxPQUFPLENBQUMsQ0FBQztJQUN0QyxNQUFNQyxRQUFRWCwwREFBVUEsQ0FBQ1MsUUFBUUM7SUFDakMsSUFBSUEsS0FBS0UsYUFBYSxJQUFJLFFBQVFGLEtBQUtHLGVBQWUsSUFBSSxNQUFNO1FBQzVELHdFQUF3RTtRQUN4RSxxREFBcUQ7UUFDckRILEtBQUtHLGVBQWUsR0FBR1osd0RBQXFCLENBQUNTLEtBQUtFLGFBQWE7SUFDbkU7SUFDQSxNQUFNRyxlQUFlTCxNQUFNTSxpQkFBaUJmLGdEQUFhO0lBQ3pELE1BQU1pQixlQUFlUixNQUFNUyxpQkFBaUJsQixnREFBYTtJQUN6RCxNQUFNb0IsSUFBSTtRQUNOQyxNQUFNLE9BQU9DO1lBQ1QsSUFBSUMsYUFBYSxDQUFDO1lBQ2xCLE1BQU1DLGVBQWUsSUFBSXZCLDBEQUFjQTtZQUN2QyxNQUFPLEtBQU07Z0JBQ1QsdURBQXVEO2dCQUN2RHVCLGFBQWFDLE1BQU0sQ0FBQyxNQUFNZixNQUFNVyxJQUFJLENBQUMsR0FBR0M7Z0JBQ3hDLElBQUk7b0JBQ0FDLGFBQWFULGFBQWFVO2dCQUM5QixFQUNBLE9BQU9FLEtBQUs7b0JBQ1IsSUFBSUEsZUFBZUMsWUFBWTt3QkFDM0I7b0JBQ0o7b0JBQ0EsTUFBTUQ7Z0JBQ1Y7Z0JBQ0EsSUFBSWpCLE1BQU1HLG1CQUFtQixRQUFRWSxhQUFhSSxVQUFVLEdBQUduQixLQUFLRyxlQUFlLEVBQUU7b0JBQ2pGLE1BQU0sSUFBSVYsVUFBVSxrQ0FBa0M7Z0JBQzFEO2dCQUNBLElBQUlxQixhQUFhLENBQUMsR0FBRztvQkFDakI7Z0JBQ0o7WUFDSjtZQUNBLElBQUlkLE1BQU1FLGlCQUFpQixRQUFRWSxhQUFhZCxLQUFLRSxhQUFhLEVBQUU7Z0JBQ2hFLE1BQU0sSUFBSVQsVUFBVSwyQkFBMkI7WUFDbkQ7WUFDQSxPQUFPUSxNQUFNVyxJQUFJLENBQUNFLFlBQVlEO1FBQ2xDO1FBQ0FPLE9BQU8sT0FBT0MsTUFBTVI7WUFDaEIsZ0JBQWdCO1lBQ2hCLE1BQU1aLE1BQU1tQixLQUFLLENBQUMsSUFBSTVCLDBEQUFjQSxDQUFDZ0IsYUFBYWEsS0FBS0YsVUFBVSxHQUFHRSxPQUFPUjtRQUMvRTtRQUNBUyxRQUFRLE9BQU9ELE1BQU1SO1lBQ2pCLE1BQU1VLE9BQU8sSUFBSS9CLDBEQUFjQSxJQUFJNkIsS0FBS0csT0FBTyxDQUFDQyxDQUFBQSxNQUFRO29CQUFDakIsYUFBYWlCLElBQUlOLFVBQVU7b0JBQUdNO2lCQUFJO1lBQzNGLGdCQUFnQjtZQUNoQixNQUFNeEIsTUFBTW1CLEtBQUssQ0FBQ0csTUFBTVY7UUFDNUI7UUFDQWEsUUFBUTtZQUNKLE9BQU96QixNQUFNeUIsTUFBTTtRQUN2QjtJQUNKO0lBQ0EsT0FBT2Y7QUFDWCxFQUNBLGlDQUFpQyIsInNvdXJjZXMiOlsid2VicGFjazovL2ZsdXNoLW5vdGVzLy4vbm9kZV9tb2R1bGVzL2l0LWxlbmd0aC1wcmVmaXhlZC1zdHJlYW0vZGlzdC9zcmMvaW5kZXguanM/YTY3NyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBwYWNrYWdlRG9jdW1lbnRhdGlvblxuICpcbiAqIFRoaXMgbW9kdWxlIG1ha2VzIGl0IGVhc3kgdG8gc2VuZCBhbmQgcmVjZWl2ZSBsZW5ndGgtcHJlZml4ZWQgYnl0ZSBhcnJheXMgb3ZlciBzdHJlYW1zLlxuICpcbiAqIEBleGFtcGxlXG4gKlxuICogYGBgdHlwZXNjcmlwdFxuICogaW1wb3J0IHsgbHBTdHJlYW0gfSBmcm9tICdpdC1sZW5ndGgtcHJlZml4ZWQtc3RyZWFtJ1xuICpcbiAqIGNvbnN0IHN0cmVhbSA9IGxwU3RyZWFtKGR1cGxleClcbiAqXG4gKiAvLyByZWFkIHRoZSBuZXh0IGxlbmd0aC1wcmVmaXhlZCBjaHVua1xuICogY29uc3QgYnl0ZXMgPSBhd2FpdCBzdHJlYW0ucmVhZCgpXG4gKlxuICogLy8gd3JpdGUgYSBsZW5ndGgtcHJlZml4ZWQgY2h1bmtcbiAqIGF3YWl0IHN0cmVhbS53cml0ZShVaW50OEFycmF5LmZyb20oWzAsIDEsIDIsIDMsIDRdKSlcbiAqXG4gKiAvLyB3cml0ZSBzZXZlcmFsIGNodW5rcywgYWxsIGluZGl2aWR1YWxseSBsZW5ndGgtcHJlZml4ZWRcbiAqIGF3YWl0IHN0cmVhbS53cml0ZVYoW1xuICogICBVaW50OEFycmF5LmZyb20oWzAsIDEsIDIsIDMsIDRdKSxcbiAqICAgVWludDhBcnJheS5mcm9tKFs1LCA2LCA3LCA4LCA5XSlcbiAqIF0pXG4gKiBgYGBcbiAqL1xuaW1wb3J0IHsgYnl0ZVN0cmVhbSB9IGZyb20gJ2l0LWJ5dGUtc3RyZWFtJztcbmltcG9ydCAqIGFzIHZhcmludCBmcm9tICd1aW50OC12YXJpbnQnO1xuaW1wb3J0IHsgVWludDhBcnJheUxpc3QgfSBmcm9tICd1aW50OGFycmF5bGlzdCc7XG5jbGFzcyBDb2RlRXJyb3IgZXh0ZW5kcyBFcnJvciB7XG4gICAgY29kZTtcbiAgICBjb25zdHJ1Y3RvcihtZXNzYWdlLCBjb2RlKSB7XG4gICAgICAgIHN1cGVyKG1lc3NhZ2UpO1xuICAgICAgICB0aGlzLmNvZGUgPSBjb2RlO1xuICAgIH1cbn1cbmV4cG9ydCBmdW5jdGlvbiBscFN0cmVhbShkdXBsZXgsIG9wdHMgPSB7fSkge1xuICAgIGNvbnN0IGJ5dGVzID0gYnl0ZVN0cmVhbShkdXBsZXgsIG9wdHMpO1xuICAgIGlmIChvcHRzLm1heERhdGFMZW5ndGggIT0gbnVsbCAmJiBvcHRzLm1heExlbmd0aExlbmd0aCA9PSBudWxsKSB7XG4gICAgICAgIC8vIGlmIG1heCBkYXRhIGxlbmd0aCBpcyBzZXQgYnV0IG1heCBsZW5ndGggbGVuZ3RoIGlzIG5vdCwgY2FsY3VsYXRlIHRoZVxuICAgICAgICAvLyBtYXggbGVuZ3RoIGxlbmd0aCBuZWVkZWQgdG8gZW5jb2RlIG1heCBkYXRhIGxlbmd0aFxuICAgICAgICBvcHRzLm1heExlbmd0aExlbmd0aCA9IHZhcmludC5lbmNvZGluZ0xlbmd0aChvcHRzLm1heERhdGFMZW5ndGgpO1xuICAgIH1cbiAgICBjb25zdCBkZWNvZGVMZW5ndGggPSBvcHRzPy5sZW5ndGhEZWNvZGVyID8/IHZhcmludC5kZWNvZGU7XG4gICAgY29uc3QgZW5jb2RlTGVuZ3RoID0gb3B0cz8ubGVuZ3RoRW5jb2RlciA/PyB2YXJpbnQuZW5jb2RlO1xuICAgIGNvbnN0IFcgPSB7XG4gICAgICAgIHJlYWQ6IGFzeW5jIChvcHRpb25zKSA9PiB7XG4gICAgICAgICAgICBsZXQgZGF0YUxlbmd0aCA9IC0xO1xuICAgICAgICAgICAgY29uc3QgbGVuZ3RoQnVmZmVyID0gbmV3IFVpbnQ4QXJyYXlMaXN0KCk7XG4gICAgICAgICAgICB3aGlsZSAodHJ1ZSkge1xuICAgICAgICAgICAgICAgIC8vIHJlYWQgb25lIGJ5dGUgYXQgYSB0aW1lIHVudGlsIHdlIGNhbiBkZWNvZGUgYSB2YXJpbnRcbiAgICAgICAgICAgICAgICBsZW5ndGhCdWZmZXIuYXBwZW5kKGF3YWl0IGJ5dGVzLnJlYWQoMSwgb3B0aW9ucykpO1xuICAgICAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgICAgIGRhdGFMZW5ndGggPSBkZWNvZGVMZW5ndGgobGVuZ3RoQnVmZmVyKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgY2F0Y2ggKGVycikge1xuICAgICAgICAgICAgICAgICAgICBpZiAoZXJyIGluc3RhbmNlb2YgUmFuZ2VFcnJvcikge1xuICAgICAgICAgICAgICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgdGhyb3cgZXJyO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpZiAob3B0cz8ubWF4TGVuZ3RoTGVuZ3RoICE9IG51bGwgJiYgbGVuZ3RoQnVmZmVyLmJ5dGVMZW5ndGggPiBvcHRzLm1heExlbmd0aExlbmd0aCkge1xuICAgICAgICAgICAgICAgICAgICB0aHJvdyBuZXcgQ29kZUVycm9yKCdtZXNzYWdlIGxlbmd0aCBsZW5ndGggdG9vIGxvbmcnLCAnRVJSX01TR19MRU5HVEhfVE9PX0xPTkcnKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWYgKGRhdGFMZW5ndGggPiAtMSkge1xuICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAob3B0cz8ubWF4RGF0YUxlbmd0aCAhPSBudWxsICYmIGRhdGFMZW5ndGggPiBvcHRzLm1heERhdGFMZW5ndGgpIHtcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgQ29kZUVycm9yKCdtZXNzYWdlIGxlbmd0aCB0b28gbG9uZycsICdFUlJfTVNHX0RBVEFfVE9PX0xPTkcnKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiBieXRlcy5yZWFkKGRhdGFMZW5ndGgsIG9wdGlvbnMpO1xuICAgICAgICB9LFxuICAgICAgICB3cml0ZTogYXN5bmMgKGRhdGEsIG9wdGlvbnMpID0+IHtcbiAgICAgICAgICAgIC8vIGVuY29kZSwgd3JpdGVcbiAgICAgICAgICAgIGF3YWl0IGJ5dGVzLndyaXRlKG5ldyBVaW50OEFycmF5TGlzdChlbmNvZGVMZW5ndGgoZGF0YS5ieXRlTGVuZ3RoKSwgZGF0YSksIG9wdGlvbnMpO1xuICAgICAgICB9LFxuICAgICAgICB3cml0ZVY6IGFzeW5jIChkYXRhLCBvcHRpb25zKSA9PiB7XG4gICAgICAgICAgICBjb25zdCBsaXN0ID0gbmV3IFVpbnQ4QXJyYXlMaXN0KC4uLmRhdGEuZmxhdE1hcChidWYgPT4gKFtlbmNvZGVMZW5ndGgoYnVmLmJ5dGVMZW5ndGgpLCBidWZdKSkpO1xuICAgICAgICAgICAgLy8gZW5jb2RlLCB3cml0ZVxuICAgICAgICAgICAgYXdhaXQgYnl0ZXMud3JpdGUobGlzdCwgb3B0aW9ucyk7XG4gICAgICAgIH0sXG4gICAgICAgIHVud3JhcDogKCkgPT4ge1xuICAgICAgICAgICAgcmV0dXJuIGJ5dGVzLnVud3JhcCgpO1xuICAgICAgICB9XG4gICAgfTtcbiAgICByZXR1cm4gVztcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJuYW1lcyI6WyJieXRlU3RyZWFtIiwidmFyaW50IiwiVWludDhBcnJheUxpc3QiLCJDb2RlRXJyb3IiLCJFcnJvciIsImNvbnN0cnVjdG9yIiwibWVzc2FnZSIsImNvZGUiLCJscFN0cmVhbSIsImR1cGxleCIsIm9wdHMiLCJieXRlcyIsIm1heERhdGFMZW5ndGgiLCJtYXhMZW5ndGhMZW5ndGgiLCJlbmNvZGluZ0xlbmd0aCIsImRlY29kZUxlbmd0aCIsImxlbmd0aERlY29kZXIiLCJkZWNvZGUiLCJlbmNvZGVMZW5ndGgiLCJsZW5ndGhFbmNvZGVyIiwiZW5jb2RlIiwiVyIsInJlYWQiLCJvcHRpb25zIiwiZGF0YUxlbmd0aCIsImxlbmd0aEJ1ZmZlciIsImFwcGVuZCIsImVyciIsIlJhbmdlRXJyb3IiLCJieXRlTGVuZ3RoIiwid3JpdGUiLCJkYXRhIiwid3JpdGVWIiwibGlzdCIsImZsYXRNYXAiLCJidWYiLCJ1bndyYXAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/it-length-prefixed-stream/dist/src/index.js\n");

/***/ })

};
;