"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@waku";
exports.ids = ["vendor-chunks/@waku"];
exports.modules = {

/***/ "(ssr)/./node_modules/@waku/core/dist/lib/message/version_0.js":
/*!***************************************************************!*\
  !*** ./node_modules/@waku/core/dist/lib/message/version_0.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DecodedMessage: () => (/* binding */ DecodedMessage),\n/* harmony export */   Decoder: () => (/* binding */ Decoder),\n/* harmony export */   Encoder: () => (/* binding */ Encoder),\n/* harmony export */   Version: () => (/* binding */ Version),\n/* harmony export */   createDecoder: () => (/* binding */ createDecoder),\n/* harmony export */   createEncoder: () => (/* binding */ createEncoder),\n/* harmony export */   proto: () => (/* reexport safe */ _waku_proto__WEBPACK_IMPORTED_MODULE_0__.proto_message)\n/* harmony export */ });\n/* harmony import */ var _waku_proto__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @waku/proto */ \"(ssr)/./node_modules/@waku/proto/dist/index.js\");\n/* harmony import */ var _waku_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @waku/utils */ \"(ssr)/./node_modules/@waku/core/node_modules/@waku/utils/dist/index.js\");\n\n\nconst log = new _waku_utils__WEBPACK_IMPORTED_MODULE_1__.Logger(\"message:version-0\");\nconst OneMillion = BigInt(1000000);\nconst Version = 0;\n\nclass DecodedMessage {\n    constructor(pubsubTopic, proto){\n        this.pubsubTopic = pubsubTopic;\n        this.proto = proto;\n    }\n    get ephemeral() {\n        return Boolean(this.proto.ephemeral);\n    }\n    get payload() {\n        return this.proto.payload;\n    }\n    get contentTopic() {\n        return this.proto.contentTopic;\n    }\n    get _rawTimestamp() {\n        return this.proto.timestamp;\n    }\n    get timestamp() {\n        // In the case we receive a value that is bigger than JS's max number,\n        // we catch the error and return undefined.\n        try {\n            if (this.proto.timestamp) {\n                // nanoseconds 10^-9 to milliseconds 10^-3\n                const timestamp = this.proto.timestamp / OneMillion;\n                return new Date(Number(timestamp));\n            }\n            return;\n        } catch (e) {\n            return;\n        }\n    }\n    get meta() {\n        return this.proto.meta;\n    }\n    get version() {\n        // https://rfc.vac.dev/spec/14/\n        // > If omitted, the value SHOULD be interpreted as version 0.\n        return this.proto.version ?? 0;\n    }\n    get rateLimitProof() {\n        return this.proto.rateLimitProof;\n    }\n}\nclass Encoder {\n    constructor(contentTopic, ephemeral = false, pubsubTopic, metaSetter){\n        this.contentTopic = contentTopic;\n        this.ephemeral = ephemeral;\n        this.pubsubTopic = pubsubTopic;\n        this.metaSetter = metaSetter;\n        if (!contentTopic || contentTopic === \"\") {\n            throw new Error(\"Content topic must be specified\");\n        }\n    }\n    async toWire(message) {\n        return _waku_proto__WEBPACK_IMPORTED_MODULE_0__.proto_message.WakuMessage.encode(await this.toProtoObj(message));\n    }\n    async toProtoObj(message) {\n        const timestamp = message.timestamp ?? new Date();\n        const protoMessage = {\n            payload: message.payload,\n            version: Version,\n            contentTopic: this.contentTopic,\n            timestamp: BigInt(timestamp.valueOf()) * OneMillion,\n            meta: undefined,\n            rateLimitProof: message.rateLimitProof,\n            ephemeral: this.ephemeral\n        };\n        if (this.metaSetter) {\n            const meta = this.metaSetter(protoMessage);\n            return {\n                ...protoMessage,\n                meta\n            };\n        }\n        return protoMessage;\n    }\n}\n/**\n * Creates an encoder that encode messages without Waku level encryption or signature.\n *\n * An encoder is used to encode messages in the [14/WAKU2-MESSAGE](https://rfc.vac.dev/spec/14/)\n * format to be sent over the Waku network. The resulting encoder can then be\n * pass to { @link @waku/interfaces!ISender.send } to automatically encode outgoing\n * messages.\n */ function createEncoder({ pubsubTopic, pubsubTopicShardInfo, contentTopic, ephemeral, metaSetter }) {\n    return new Encoder(contentTopic, ephemeral, (0,_waku_utils__WEBPACK_IMPORTED_MODULE_1__.determinePubsubTopic)(contentTopic, pubsubTopic ?? pubsubTopicShardInfo), metaSetter);\n}\nclass Decoder {\n    constructor(pubsubTopic, contentTopic){\n        this.pubsubTopic = pubsubTopic;\n        this.contentTopic = contentTopic;\n        if (!contentTopic || contentTopic === \"\") {\n            throw new Error(\"Content topic must be specified\");\n        }\n    }\n    fromWireToProtoObj(bytes) {\n        const protoMessage = _waku_proto__WEBPACK_IMPORTED_MODULE_0__.proto_message.WakuMessage.decode(bytes);\n        return Promise.resolve({\n            payload: protoMessage.payload,\n            contentTopic: protoMessage.contentTopic,\n            version: protoMessage.version ?? undefined,\n            timestamp: protoMessage.timestamp ?? undefined,\n            meta: protoMessage.meta ?? undefined,\n            rateLimitProof: protoMessage.rateLimitProof ?? undefined,\n            ephemeral: protoMessage.ephemeral ?? false\n        });\n    }\n    async fromProtoObj(pubsubTopic, proto) {\n        // https://rfc.vac.dev/spec/14/\n        // > If omitted, the value SHOULD be interpreted as version 0.\n        if (proto.version ?? 0 !== Version) {\n            log.error(\"Failed to decode due to incorrect version, expected:\", Version, \", actual:\", proto.version);\n            return Promise.resolve(undefined);\n        }\n        return new DecodedMessage(pubsubTopic, proto);\n    }\n}\n/**\n * Creates a decoder that decode messages without Waku level encryption.\n *\n * A decoder is used to decode messages from the [14/WAKU2-MESSAGE](https://rfc.vac.dev/spec/14/)\n * format when received from the Waku network. The resulting decoder can then be\n * pass to { @link @waku/interfaces!IReceiver.subscribe } to automatically decode incoming\n * messages.\n *\n * @param contentTopic The resulting decoder will only decode messages with this content topic.\n */ function createDecoder(contentTopic, pubsubTopicShardInfo) {\n    return new Decoder((0,_waku_utils__WEBPACK_IMPORTED_MODULE_1__.determinePubsubTopic)(contentTopic, pubsubTopicShardInfo), contentTopic);\n} //# sourceMappingURL=version_0.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/core/dist/lib/message/version_0.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/core/node_modules/@waku/utils/dist/bytes/index.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@waku/core/node_modules/@waku/utils/dist/bytes/index.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   bytesToHex: () => (/* binding */ bytesToHex),\n/* harmony export */   bytesToUtf8: () => (/* binding */ bytesToUtf8),\n/* harmony export */   concat: () => (/* binding */ concat),\n/* harmony export */   hexToBytes: () => (/* binding */ hexToBytes),\n/* harmony export */   utf8ToBytes: () => (/* binding */ utf8ToBytes)\n/* harmony export */ });\n/* harmony import */ var uint8arrays_from_string__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! uint8arrays/from-string */ \"(ssr)/./node_modules/uint8arrays/dist/src/from-string.node.js\");\n/* harmony import */ var uint8arrays_to_string__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! uint8arrays/to-string */ \"(ssr)/./node_modules/uint8arrays/dist/src/to-string.node.js\");\n\n\n/**\n * Convert input to a byte array.\n *\n * Handles both `0x` prefixed and non-prefixed strings.\n */ function hexToBytes(hex) {\n    if (typeof hex === \"string\") {\n        const _hex = hex.replace(/^0x/i, \"\");\n        return (0,uint8arrays_from_string__WEBPACK_IMPORTED_MODULE_0__.fromString)(_hex.toLowerCase(), \"base16\");\n    }\n    return hex;\n}\n/**\n * Convert byte array to hex string (no `0x` prefix).\n */ const bytesToHex = (bytes)=>(0,uint8arrays_to_string__WEBPACK_IMPORTED_MODULE_1__.toString)(bytes, \"base16\");\n/**\n * Decode byte array to utf-8 string.\n */ const bytesToUtf8 = (b)=>(0,uint8arrays_to_string__WEBPACK_IMPORTED_MODULE_1__.toString)(b, \"utf8\");\n/**\n * Encode utf-8 string to byte array.\n */ const utf8ToBytes = (s)=>(0,uint8arrays_from_string__WEBPACK_IMPORTED_MODULE_0__.fromString)(s, \"utf8\");\n/**\n * Concatenate using Uint8Arrays as `Buffer` has a different behavior with `DataView`\n */ function concat(byteArrays, totalLength) {\n    const len = totalLength ?? byteArrays.reduce((acc, curr)=>acc + curr.length, 0);\n    const res = new Uint8Array(len);\n    let offset = 0;\n    for (const bytes of byteArrays){\n        res.set(bytes, offset);\n        offset += bytes.length;\n    }\n    return res;\n} //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdha3UvY29yZS9ub2RlX21vZHVsZXMvQHdha3UvdXRpbHMvZGlzdC9ieXRlcy9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQXFEO0FBQ0o7QUFDakQ7Ozs7Q0FJQyxHQUNNLFNBQVNFLFdBQVdDLEdBQUc7SUFDMUIsSUFBSSxPQUFPQSxRQUFRLFVBQVU7UUFDekIsTUFBTUMsT0FBT0QsSUFBSUUsT0FBTyxDQUFDLFFBQVE7UUFDakMsT0FBT0wsbUVBQVVBLENBQUNJLEtBQUtFLFdBQVcsSUFBSTtJQUMxQztJQUNBLE9BQU9IO0FBQ1g7QUFDQTs7Q0FFQyxHQUNNLE1BQU1JLGFBQWEsQ0FBQ0MsUUFBVVAsK0RBQVFBLENBQUNPLE9BQU8sVUFBVTtBQUMvRDs7Q0FFQyxHQUNNLE1BQU1DLGNBQWMsQ0FBQ0MsSUFBTVQsK0RBQVFBLENBQUNTLEdBQUcsUUFBUTtBQUN0RDs7Q0FFQyxHQUNNLE1BQU1DLGNBQWMsQ0FBQ0MsSUFBTVosbUVBQVVBLENBQUNZLEdBQUcsUUFBUTtBQUN4RDs7Q0FFQyxHQUNNLFNBQVNDLE9BQU9DLFVBQVUsRUFBRUMsV0FBVztJQUMxQyxNQUFNQyxNQUFNRCxlQUFlRCxXQUFXRyxNQUFNLENBQUMsQ0FBQ0MsS0FBS0MsT0FBU0QsTUFBTUMsS0FBS0MsTUFBTSxFQUFFO0lBQy9FLE1BQU1DLE1BQU0sSUFBSUMsV0FBV047SUFDM0IsSUFBSU8sU0FBUztJQUNiLEtBQUssTUFBTWYsU0FBU00sV0FBWTtRQUM1Qk8sSUFBSUcsR0FBRyxDQUFDaEIsT0FBT2U7UUFDZkEsVUFBVWYsTUFBTVksTUFBTTtJQUMxQjtJQUNBLE9BQU9DO0FBQ1gsRUFDQSxpQ0FBaUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mbHVzaC1ub3Rlcy8uL25vZGVfbW9kdWxlcy9Ad2FrdS9jb3JlL25vZGVfbW9kdWxlcy9Ad2FrdS91dGlscy9kaXN0L2J5dGVzL2luZGV4LmpzP2U0YzEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZnJvbVN0cmluZyB9IGZyb20gXCJ1aW50OGFycmF5cy9mcm9tLXN0cmluZ1wiO1xuaW1wb3J0IHsgdG9TdHJpbmcgfSBmcm9tIFwidWludDhhcnJheXMvdG8tc3RyaW5nXCI7XG4vKipcbiAqIENvbnZlcnQgaW5wdXQgdG8gYSBieXRlIGFycmF5LlxuICpcbiAqIEhhbmRsZXMgYm90aCBgMHhgIHByZWZpeGVkIGFuZCBub24tcHJlZml4ZWQgc3RyaW5ncy5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGhleFRvQnl0ZXMoaGV4KSB7XG4gICAgaWYgKHR5cGVvZiBoZXggPT09IFwic3RyaW5nXCIpIHtcbiAgICAgICAgY29uc3QgX2hleCA9IGhleC5yZXBsYWNlKC9eMHgvaSwgXCJcIik7XG4gICAgICAgIHJldHVybiBmcm9tU3RyaW5nKF9oZXgudG9Mb3dlckNhc2UoKSwgXCJiYXNlMTZcIik7XG4gICAgfVxuICAgIHJldHVybiBoZXg7XG59XG4vKipcbiAqIENvbnZlcnQgYnl0ZSBhcnJheSB0byBoZXggc3RyaW5nIChubyBgMHhgIHByZWZpeCkuXG4gKi9cbmV4cG9ydCBjb25zdCBieXRlc1RvSGV4ID0gKGJ5dGVzKSA9PiB0b1N0cmluZyhieXRlcywgXCJiYXNlMTZcIik7XG4vKipcbiAqIERlY29kZSBieXRlIGFycmF5IHRvIHV0Zi04IHN0cmluZy5cbiAqL1xuZXhwb3J0IGNvbnN0IGJ5dGVzVG9VdGY4ID0gKGIpID0+IHRvU3RyaW5nKGIsIFwidXRmOFwiKTtcbi8qKlxuICogRW5jb2RlIHV0Zi04IHN0cmluZyB0byBieXRlIGFycmF5LlxuICovXG5leHBvcnQgY29uc3QgdXRmOFRvQnl0ZXMgPSAocykgPT4gZnJvbVN0cmluZyhzLCBcInV0ZjhcIik7XG4vKipcbiAqIENvbmNhdGVuYXRlIHVzaW5nIFVpbnQ4QXJyYXlzIGFzIGBCdWZmZXJgIGhhcyBhIGRpZmZlcmVudCBiZWhhdmlvciB3aXRoIGBEYXRhVmlld2BcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNvbmNhdChieXRlQXJyYXlzLCB0b3RhbExlbmd0aCkge1xuICAgIGNvbnN0IGxlbiA9IHRvdGFsTGVuZ3RoID8/IGJ5dGVBcnJheXMucmVkdWNlKChhY2MsIGN1cnIpID0+IGFjYyArIGN1cnIubGVuZ3RoLCAwKTtcbiAgICBjb25zdCByZXMgPSBuZXcgVWludDhBcnJheShsZW4pO1xuICAgIGxldCBvZmZzZXQgPSAwO1xuICAgIGZvciAoY29uc3QgYnl0ZXMgb2YgYnl0ZUFycmF5cykge1xuICAgICAgICByZXMuc2V0KGJ5dGVzLCBvZmZzZXQpO1xuICAgICAgICBvZmZzZXQgKz0gYnl0ZXMubGVuZ3RoO1xuICAgIH1cbiAgICByZXR1cm4gcmVzO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbImZyb21TdHJpbmciLCJ0b1N0cmluZyIsImhleFRvQnl0ZXMiLCJoZXgiLCJfaGV4IiwicmVwbGFjZSIsInRvTG93ZXJDYXNlIiwiYnl0ZXNUb0hleCIsImJ5dGVzIiwiYnl0ZXNUb1V0ZjgiLCJiIiwidXRmOFRvQnl0ZXMiLCJzIiwiY29uY2F0IiwiYnl0ZUFycmF5cyIsInRvdGFsTGVuZ3RoIiwibGVuIiwicmVkdWNlIiwiYWNjIiwiY3VyciIsImxlbmd0aCIsInJlcyIsIlVpbnQ4QXJyYXkiLCJvZmZzZXQiLCJzZXQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/core/node_modules/@waku/utils/dist/bytes/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/core/node_modules/@waku/utils/dist/common/group_by.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@waku/core/node_modules/@waku/utils/dist/common/group_by.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   groupByContentTopic: () => (/* binding */ groupByContentTopic)\n/* harmony export */ });\nfunction groupByContentTopic(values) {\n    const groupedDecoders = new Map();\n    values.forEach((value)=>{\n        let decs = groupedDecoders.get(value.contentTopic);\n        if (!decs) {\n            groupedDecoders.set(value.contentTopic, []);\n            decs = groupedDecoders.get(value.contentTopic);\n        }\n        decs.push(value);\n    });\n    return groupedDecoders;\n} //# sourceMappingURL=group_by.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdha3UvY29yZS9ub2RlX21vZHVsZXMvQHdha3UvdXRpbHMvZGlzdC9jb21tb24vZ3JvdXBfYnkuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFPLFNBQVNBLG9CQUFvQkMsTUFBTTtJQUN0QyxNQUFNQyxrQkFBa0IsSUFBSUM7SUFDNUJGLE9BQU9HLE9BQU8sQ0FBQyxDQUFDQztRQUNaLElBQUlDLE9BQU9KLGdCQUFnQkssR0FBRyxDQUFDRixNQUFNRyxZQUFZO1FBQ2pELElBQUksQ0FBQ0YsTUFBTTtZQUNQSixnQkFBZ0JPLEdBQUcsQ0FBQ0osTUFBTUcsWUFBWSxFQUFFLEVBQUU7WUFDMUNGLE9BQU9KLGdCQUFnQkssR0FBRyxDQUFDRixNQUFNRyxZQUFZO1FBQ2pEO1FBQ0FGLEtBQUtJLElBQUksQ0FBQ0w7SUFDZDtJQUNBLE9BQU9IO0FBQ1gsRUFDQSxvQ0FBb0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mbHVzaC1ub3Rlcy8uL25vZGVfbW9kdWxlcy9Ad2FrdS9jb3JlL25vZGVfbW9kdWxlcy9Ad2FrdS91dGlscy9kaXN0L2NvbW1vbi9ncm91cF9ieS5qcz85MmMyIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBmdW5jdGlvbiBncm91cEJ5Q29udGVudFRvcGljKHZhbHVlcykge1xuICAgIGNvbnN0IGdyb3VwZWREZWNvZGVycyA9IG5ldyBNYXAoKTtcbiAgICB2YWx1ZXMuZm9yRWFjaCgodmFsdWUpID0+IHtcbiAgICAgICAgbGV0IGRlY3MgPSBncm91cGVkRGVjb2RlcnMuZ2V0KHZhbHVlLmNvbnRlbnRUb3BpYyk7XG4gICAgICAgIGlmICghZGVjcykge1xuICAgICAgICAgICAgZ3JvdXBlZERlY29kZXJzLnNldCh2YWx1ZS5jb250ZW50VG9waWMsIFtdKTtcbiAgICAgICAgICAgIGRlY3MgPSBncm91cGVkRGVjb2RlcnMuZ2V0KHZhbHVlLmNvbnRlbnRUb3BpYyk7XG4gICAgICAgIH1cbiAgICAgICAgZGVjcy5wdXNoKHZhbHVlKTtcbiAgICB9KTtcbiAgICByZXR1cm4gZ3JvdXBlZERlY29kZXJzO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Z3JvdXBfYnkuanMubWFwIl0sIm5hbWVzIjpbImdyb3VwQnlDb250ZW50VG9waWMiLCJ2YWx1ZXMiLCJncm91cGVkRGVjb2RlcnMiLCJNYXAiLCJmb3JFYWNoIiwidmFsdWUiLCJkZWNzIiwiZ2V0IiwiY29udGVudFRvcGljIiwic2V0IiwicHVzaCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/core/node_modules/@waku/utils/dist/common/group_by.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/core/node_modules/@waku/utils/dist/common/index.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@waku/core/node_modules/@waku/utils/dist/common/index.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   contentTopicToPubsubTopic: () => (/* reexport safe */ _sharding_js__WEBPACK_IMPORTED_MODULE_5__.contentTopicToPubsubTopic),\n/* harmony export */   contentTopicToShardIndex: () => (/* reexport safe */ _sharding_js__WEBPACK_IMPORTED_MODULE_5__.contentTopicToShardIndex),\n/* harmony export */   contentTopicsByPubsubTopic: () => (/* reexport safe */ _sharding_js__WEBPACK_IMPORTED_MODULE_5__.contentTopicsByPubsubTopic),\n/* harmony export */   decodeRelayShard: () => (/* reexport safe */ _relay_shard_codec_js__WEBPACK_IMPORTED_MODULE_7__.decodeRelayShard),\n/* harmony export */   determinePubsubTopic: () => (/* reexport safe */ _sharding_js__WEBPACK_IMPORTED_MODULE_5__.determinePubsubTopic),\n/* harmony export */   encodeRelayShard: () => (/* reexport safe */ _relay_shard_codec_js__WEBPACK_IMPORTED_MODULE_7__.encodeRelayShard),\n/* harmony export */   ensurePubsubTopicIsConfigured: () => (/* reexport safe */ _sharding_js__WEBPACK_IMPORTED_MODULE_5__.ensurePubsubTopicIsConfigured),\n/* harmony export */   ensureShardingConfigured: () => (/* reexport safe */ _sharding_js__WEBPACK_IMPORTED_MODULE_5__.ensureShardingConfigured),\n/* harmony export */   ensureValidContentTopic: () => (/* reexport safe */ _sharding_js__WEBPACK_IMPORTED_MODULE_5__.ensureValidContentTopic),\n/* harmony export */   getPseudoRandomSubset: () => (/* reexport safe */ _random_subset_js__WEBPACK_IMPORTED_MODULE_1__.getPseudoRandomSubset),\n/* harmony export */   getWsMultiaddrFromMultiaddrs: () => (/* binding */ getWsMultiaddrFromMultiaddrs),\n/* harmony export */   groupByContentTopic: () => (/* reexport safe */ _group_by_js__WEBPACK_IMPORTED_MODULE_2__.groupByContentTopic),\n/* harmony export */   isDefined: () => (/* reexport safe */ _is_defined_js__WEBPACK_IMPORTED_MODULE_0__.isDefined),\n/* harmony export */   isMessageSizeUnderCap: () => (/* reexport safe */ _is_size_valid_js__WEBPACK_IMPORTED_MODULE_4__.isMessageSizeUnderCap),\n/* harmony export */   isWireSizeUnderCap: () => (/* reexport safe */ _is_size_valid_js__WEBPACK_IMPORTED_MODULE_4__.isWireSizeUnderCap),\n/* harmony export */   pubsubTopicToSingleShardInfo: () => (/* reexport safe */ _sharding_js__WEBPACK_IMPORTED_MODULE_5__.pubsubTopicToSingleShardInfo),\n/* harmony export */   pushOrInitMapSet: () => (/* reexport safe */ _push_or_init_map_js__WEBPACK_IMPORTED_MODULE_6__.pushOrInitMapSet),\n/* harmony export */   removeItemFromArray: () => (/* binding */ removeItemFromArray),\n/* harmony export */   shardInfoToPubsubTopics: () => (/* reexport safe */ _sharding_js__WEBPACK_IMPORTED_MODULE_5__.shardInfoToPubsubTopics),\n/* harmony export */   singleShardInfoToPubsubTopic: () => (/* reexport safe */ _sharding_js__WEBPACK_IMPORTED_MODULE_5__.singleShardInfoToPubsubTopic),\n/* harmony export */   singleShardInfosToShardInfo: () => (/* reexport safe */ _sharding_js__WEBPACK_IMPORTED_MODULE_5__.singleShardInfosToShardInfo),\n/* harmony export */   toAsyncIterator: () => (/* reexport safe */ _to_async_iterator_js__WEBPACK_IMPORTED_MODULE_3__.toAsyncIterator)\n/* harmony export */ });\n/* harmony import */ var _is_defined_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./is_defined.js */ \"(ssr)/./node_modules/@waku/core/node_modules/@waku/utils/dist/common/is_defined.js\");\n/* harmony import */ var _random_subset_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./random_subset.js */ \"(ssr)/./node_modules/@waku/core/node_modules/@waku/utils/dist/common/random_subset.js\");\n/* harmony import */ var _group_by_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./group_by.js */ \"(ssr)/./node_modules/@waku/core/node_modules/@waku/utils/dist/common/group_by.js\");\n/* harmony import */ var _to_async_iterator_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./to_async_iterator.js */ \"(ssr)/./node_modules/@waku/core/node_modules/@waku/utils/dist/common/to_async_iterator.js\");\n/* harmony import */ var _is_size_valid_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./is_size_valid.js */ \"(ssr)/./node_modules/@waku/core/node_modules/@waku/utils/dist/common/is_size_valid.js\");\n/* harmony import */ var _sharding_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./sharding.js */ \"(ssr)/./node_modules/@waku/core/node_modules/@waku/utils/dist/common/sharding.js\");\n/* harmony import */ var _push_or_init_map_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./push_or_init_map.js */ \"(ssr)/./node_modules/@waku/core/node_modules/@waku/utils/dist/common/push_or_init_map.js\");\n/* harmony import */ var _relay_shard_codec_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./relay_shard_codec.js */ \"(ssr)/./node_modules/@waku/core/node_modules/@waku/utils/dist/common/relay_shard_codec.js\");\n\n\n\n\n\n\n\n\nfunction removeItemFromArray(arr, value) {\n    const index = arr.indexOf(value);\n    if (index > -1) {\n        arr.splice(index, 1);\n    }\n    return arr;\n}\nfunction getWsMultiaddrFromMultiaddrs(addresses) {\n    const wsMultiaddr = addresses.find((addr)=>addr.toString().includes(\"ws\") || addr.toString().includes(\"wss\"));\n    if (!wsMultiaddr) {\n        throw new Error(\"No ws multiaddr found in the given addresses\");\n    }\n    return wsMultiaddr;\n} //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdha3UvY29yZS9ub2RlX21vZHVsZXMvQHdha3UvdXRpbHMvZGlzdC9jb21tb24vaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQWdDO0FBQ0c7QUFDTDtBQUNTO0FBQ0o7QUFDTDtBQUNRO0FBQ0M7QUFDaEMsU0FBU0Esb0JBQW9CQyxHQUFHLEVBQUVDLEtBQUs7SUFDMUMsTUFBTUMsUUFBUUYsSUFBSUcsT0FBTyxDQUFDRjtJQUMxQixJQUFJQyxRQUFRLENBQUMsR0FBRztRQUNaRixJQUFJSSxNQUFNLENBQUNGLE9BQU87SUFDdEI7SUFDQSxPQUFPRjtBQUNYO0FBQ08sU0FBU0ssNkJBQTZCQyxTQUFTO0lBQ2xELE1BQU1DLGNBQWNELFVBQVVFLElBQUksQ0FBQyxDQUFDQyxPQUFTQSxLQUFLQyxRQUFRLEdBQUdDLFFBQVEsQ0FBQyxTQUFTRixLQUFLQyxRQUFRLEdBQUdDLFFBQVEsQ0FBQztJQUN4RyxJQUFJLENBQUNKLGFBQWE7UUFDZCxNQUFNLElBQUlLLE1BQU07SUFDcEI7SUFDQSxPQUFPTDtBQUNYLEVBQ0EsaUNBQWlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZmx1c2gtbm90ZXMvLi9ub2RlX21vZHVsZXMvQHdha3UvY29yZS9ub2RlX21vZHVsZXMvQHdha3UvdXRpbHMvZGlzdC9jb21tb24vaW5kZXguanM/M2MxZiJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgKiBmcm9tIFwiLi9pc19kZWZpbmVkLmpzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9yYW5kb21fc3Vic2V0LmpzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9ncm91cF9ieS5qc1wiO1xuZXhwb3J0ICogZnJvbSBcIi4vdG9fYXN5bmNfaXRlcmF0b3IuanNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL2lzX3NpemVfdmFsaWQuanNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL3NoYXJkaW5nLmpzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9wdXNoX29yX2luaXRfbWFwLmpzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9yZWxheV9zaGFyZF9jb2RlYy5qc1wiO1xuZXhwb3J0IGZ1bmN0aW9uIHJlbW92ZUl0ZW1Gcm9tQXJyYXkoYXJyLCB2YWx1ZSkge1xuICAgIGNvbnN0IGluZGV4ID0gYXJyLmluZGV4T2YodmFsdWUpO1xuICAgIGlmIChpbmRleCA+IC0xKSB7XG4gICAgICAgIGFyci5zcGxpY2UoaW5kZXgsIDEpO1xuICAgIH1cbiAgICByZXR1cm4gYXJyO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGdldFdzTXVsdGlhZGRyRnJvbU11bHRpYWRkcnMoYWRkcmVzc2VzKSB7XG4gICAgY29uc3Qgd3NNdWx0aWFkZHIgPSBhZGRyZXNzZXMuZmluZCgoYWRkcikgPT4gYWRkci50b1N0cmluZygpLmluY2x1ZGVzKFwid3NcIikgfHwgYWRkci50b1N0cmluZygpLmluY2x1ZGVzKFwid3NzXCIpKTtcbiAgICBpZiAoIXdzTXVsdGlhZGRyKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIk5vIHdzIG11bHRpYWRkciBmb3VuZCBpbiB0aGUgZ2l2ZW4gYWRkcmVzc2VzXCIpO1xuICAgIH1cbiAgICByZXR1cm4gd3NNdWx0aWFkZHI7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOlsicmVtb3ZlSXRlbUZyb21BcnJheSIsImFyciIsInZhbHVlIiwiaW5kZXgiLCJpbmRleE9mIiwic3BsaWNlIiwiZ2V0V3NNdWx0aWFkZHJGcm9tTXVsdGlhZGRycyIsImFkZHJlc3NlcyIsIndzTXVsdGlhZGRyIiwiZmluZCIsImFkZHIiLCJ0b1N0cmluZyIsImluY2x1ZGVzIiwiRXJyb3IiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/core/node_modules/@waku/utils/dist/common/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/core/node_modules/@waku/utils/dist/common/is_defined.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@waku/core/node_modules/@waku/utils/dist/common/is_defined.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isDefined: () => (/* binding */ isDefined)\n/* harmony export */ });\nfunction isDefined(value) {\n    return Boolean(value);\n} //# sourceMappingURL=is_defined.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdha3UvY29yZS9ub2RlX21vZHVsZXMvQHdha3UvdXRpbHMvZGlzdC9jb21tb24vaXNfZGVmaW5lZC5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQU8sU0FBU0EsVUFBVUMsS0FBSztJQUMzQixPQUFPQyxRQUFRRDtBQUNuQixFQUNBLHNDQUFzQyIsInNvdXJjZXMiOlsid2VicGFjazovL2ZsdXNoLW5vdGVzLy4vbm9kZV9tb2R1bGVzL0B3YWt1L2NvcmUvbm9kZV9tb2R1bGVzL0B3YWt1L3V0aWxzL2Rpc3QvY29tbW9uL2lzX2RlZmluZWQuanM/NmQyNCJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZnVuY3Rpb24gaXNEZWZpbmVkKHZhbHVlKSB7XG4gICAgcmV0dXJuIEJvb2xlYW4odmFsdWUpO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aXNfZGVmaW5lZC5qcy5tYXAiXSwibmFtZXMiOlsiaXNEZWZpbmVkIiwidmFsdWUiLCJCb29sZWFuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/core/node_modules/@waku/utils/dist/common/is_defined.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/core/node_modules/@waku/utils/dist/common/is_size_valid.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@waku/core/node_modules/@waku/utils/dist/common/is_size_valid.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isMessageSizeUnderCap: () => (/* binding */ isMessageSizeUnderCap),\n/* harmony export */   isWireSizeUnderCap: () => (/* binding */ isWireSizeUnderCap)\n/* harmony export */ });\nconst MB = 1024 ** 2;\nconst SIZE_CAP_IN_MB = 1;\n/**\n * Return whether the size of the message is under the upper limit for the network.\n * This performs a protobuf encoding! If you have access to the fully encoded message,\n * use {@link isSizeUnderCapBuf} instead.\n * @param message\n * @param encoder\n */ async function isMessageSizeUnderCap(encoder, message) {\n    const buf = await encoder.toWire(message);\n    if (!buf) return false;\n    return isWireSizeUnderCap(buf);\n}\nconst isWireSizeUnderCap = (buf)=>buf.length / MB <= SIZE_CAP_IN_MB; //# sourceMappingURL=is_size_valid.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdha3UvY29yZS9ub2RlX21vZHVsZXMvQHdha3UvdXRpbHMvZGlzdC9jb21tb24vaXNfc2l6ZV92YWxpZC5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBLE1BQU1BLEtBQUssUUFBUTtBQUNuQixNQUFNQyxpQkFBaUI7QUFDdkI7Ozs7OztDQU1DLEdBQ00sZUFBZUMsc0JBQXNCQyxPQUFPLEVBQUVDLE9BQU87SUFDeEQsTUFBTUMsTUFBTSxNQUFNRixRQUFRRyxNQUFNLENBQUNGO0lBQ2pDLElBQUksQ0FBQ0MsS0FDRCxPQUFPO0lBQ1gsT0FBT0UsbUJBQW1CRjtBQUM5QjtBQUNPLE1BQU1FLHFCQUFxQixDQUFDRixNQUFRQSxJQUFJRyxNQUFNLEdBQUdSLE1BQU1DLGVBQWUsQ0FDN0UseUNBQXlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZmx1c2gtbm90ZXMvLi9ub2RlX21vZHVsZXMvQHdha3UvY29yZS9ub2RlX21vZHVsZXMvQHdha3UvdXRpbHMvZGlzdC9jb21tb24vaXNfc2l6ZV92YWxpZC5qcz9mYWI5Il0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IE1CID0gMTAyNCAqKiAyO1xuY29uc3QgU0laRV9DQVBfSU5fTUIgPSAxO1xuLyoqXG4gKiBSZXR1cm4gd2hldGhlciB0aGUgc2l6ZSBvZiB0aGUgbWVzc2FnZSBpcyB1bmRlciB0aGUgdXBwZXIgbGltaXQgZm9yIHRoZSBuZXR3b3JrLlxuICogVGhpcyBwZXJmb3JtcyBhIHByb3RvYnVmIGVuY29kaW5nISBJZiB5b3UgaGF2ZSBhY2Nlc3MgdG8gdGhlIGZ1bGx5IGVuY29kZWQgbWVzc2FnZSxcbiAqIHVzZSB7QGxpbmsgaXNTaXplVW5kZXJDYXBCdWZ9IGluc3RlYWQuXG4gKiBAcGFyYW0gbWVzc2FnZVxuICogQHBhcmFtIGVuY29kZXJcbiAqL1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGlzTWVzc2FnZVNpemVVbmRlckNhcChlbmNvZGVyLCBtZXNzYWdlKSB7XG4gICAgY29uc3QgYnVmID0gYXdhaXQgZW5jb2Rlci50b1dpcmUobWVzc2FnZSk7XG4gICAgaWYgKCFidWYpXG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICByZXR1cm4gaXNXaXJlU2l6ZVVuZGVyQ2FwKGJ1Zik7XG59XG5leHBvcnQgY29uc3QgaXNXaXJlU2l6ZVVuZGVyQ2FwID0gKGJ1ZikgPT4gYnVmLmxlbmd0aCAvIE1CIDw9IFNJWkVfQ0FQX0lOX01CO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aXNfc2l6ZV92YWxpZC5qcy5tYXAiXSwibmFtZXMiOlsiTUIiLCJTSVpFX0NBUF9JTl9NQiIsImlzTWVzc2FnZVNpemVVbmRlckNhcCIsImVuY29kZXIiLCJtZXNzYWdlIiwiYnVmIiwidG9XaXJlIiwiaXNXaXJlU2l6ZVVuZGVyQ2FwIiwibGVuZ3RoIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/core/node_modules/@waku/utils/dist/common/is_size_valid.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/core/node_modules/@waku/utils/dist/common/push_or_init_map.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@waku/core/node_modules/@waku/utils/dist/common/push_or_init_map.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   pushOrInitMapSet: () => (/* binding */ pushOrInitMapSet)\n/* harmony export */ });\nfunction pushOrInitMapSet(map, key, newValue) {\n    let arr = map.get(key);\n    if (typeof arr === \"undefined\") {\n        map.set(key, new Set());\n        arr = map.get(key);\n    }\n    arr.add(newValue);\n} //# sourceMappingURL=push_or_init_map.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdha3UvY29yZS9ub2RlX21vZHVsZXMvQHdha3UvdXRpbHMvZGlzdC9jb21tb24vcHVzaF9vcl9pbml0X21hcC5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQU8sU0FBU0EsaUJBQWlCQyxHQUFHLEVBQUVDLEdBQUcsRUFBRUMsUUFBUTtJQUMvQyxJQUFJQyxNQUFNSCxJQUFJSSxHQUFHLENBQUNIO0lBQ2xCLElBQUksT0FBT0UsUUFBUSxhQUFhO1FBQzVCSCxJQUFJSyxHQUFHLENBQUNKLEtBQUssSUFBSUs7UUFDakJILE1BQU1ILElBQUlJLEdBQUcsQ0FBQ0g7SUFDbEI7SUFDQUUsSUFBSUksR0FBRyxDQUFDTDtBQUNaLEVBQ0EsNENBQTRDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZmx1c2gtbm90ZXMvLi9ub2RlX21vZHVsZXMvQHdha3UvY29yZS9ub2RlX21vZHVsZXMvQHdha3UvdXRpbHMvZGlzdC9jb21tb24vcHVzaF9vcl9pbml0X21hcC5qcz9kZTEzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBmdW5jdGlvbiBwdXNoT3JJbml0TWFwU2V0KG1hcCwga2V5LCBuZXdWYWx1ZSkge1xuICAgIGxldCBhcnIgPSBtYXAuZ2V0KGtleSk7XG4gICAgaWYgKHR5cGVvZiBhcnIgPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgICAgbWFwLnNldChrZXksIG5ldyBTZXQoKSk7XG4gICAgICAgIGFyciA9IG1hcC5nZXQoa2V5KTtcbiAgICB9XG4gICAgYXJyLmFkZChuZXdWYWx1ZSk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1wdXNoX29yX2luaXRfbWFwLmpzLm1hcCJdLCJuYW1lcyI6WyJwdXNoT3JJbml0TWFwU2V0IiwibWFwIiwia2V5IiwibmV3VmFsdWUiLCJhcnIiLCJnZXQiLCJzZXQiLCJTZXQiLCJhZGQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/core/node_modules/@waku/utils/dist/common/push_or_init_map.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/core/node_modules/@waku/utils/dist/common/random_subset.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@waku/core/node_modules/@waku/utils/dist/common/random_subset.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getPseudoRandomSubset: () => (/* binding */ getPseudoRandomSubset)\n/* harmony export */ });\n/**\n * Return pseudo random subset of the input.\n */ function getPseudoRandomSubset(values, wantedNumber) {\n    if (values.length <= wantedNumber || values.length <= 1) {\n        return values;\n    }\n    return shuffle(values).slice(0, wantedNumber);\n}\nfunction shuffle(arr) {\n    if (arr.length <= 1) {\n        return arr;\n    }\n    const randInt = ()=>{\n        return Math.floor(Math.random() * Math.floor(arr.length));\n    };\n    for(let i = 0; i < arr.length; i++){\n        const j = randInt();\n        const tmp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = tmp;\n    }\n    return arr;\n} //# sourceMappingURL=random_subset.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdha3UvY29yZS9ub2RlX21vZHVsZXMvQHdha3UvdXRpbHMvZGlzdC9jb21tb24vcmFuZG9tX3N1YnNldC5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7O0NBRUMsR0FDTSxTQUFTQSxzQkFBc0JDLE1BQU0sRUFBRUMsWUFBWTtJQUN0RCxJQUFJRCxPQUFPRSxNQUFNLElBQUlELGdCQUFnQkQsT0FBT0UsTUFBTSxJQUFJLEdBQUc7UUFDckQsT0FBT0Y7SUFDWDtJQUNBLE9BQU9HLFFBQVFILFFBQVFJLEtBQUssQ0FBQyxHQUFHSDtBQUNwQztBQUNBLFNBQVNFLFFBQVFFLEdBQUc7SUFDaEIsSUFBSUEsSUFBSUgsTUFBTSxJQUFJLEdBQUc7UUFDakIsT0FBT0c7SUFDWDtJQUNBLE1BQU1DLFVBQVU7UUFDWixPQUFPQyxLQUFLQyxLQUFLLENBQUNELEtBQUtFLE1BQU0sS0FBS0YsS0FBS0MsS0FBSyxDQUFDSCxJQUFJSCxNQUFNO0lBQzNEO0lBQ0EsSUFBSyxJQUFJUSxJQUFJLEdBQUdBLElBQUlMLElBQUlILE1BQU0sRUFBRVEsSUFBSztRQUNqQyxNQUFNQyxJQUFJTDtRQUNWLE1BQU1NLE1BQU1QLEdBQUcsQ0FBQ0ssRUFBRTtRQUNsQkwsR0FBRyxDQUFDSyxFQUFFLEdBQUdMLEdBQUcsQ0FBQ00sRUFBRTtRQUNmTixHQUFHLENBQUNNLEVBQUUsR0FBR0M7SUFDYjtJQUNBLE9BQU9QO0FBQ1gsRUFDQSx5Q0FBeUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mbHVzaC1ub3Rlcy8uL25vZGVfbW9kdWxlcy9Ad2FrdS9jb3JlL25vZGVfbW9kdWxlcy9Ad2FrdS91dGlscy9kaXN0L2NvbW1vbi9yYW5kb21fc3Vic2V0LmpzP2Q0ZGUiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBSZXR1cm4gcHNldWRvIHJhbmRvbSBzdWJzZXQgb2YgdGhlIGlucHV0LlxuICovXG5leHBvcnQgZnVuY3Rpb24gZ2V0UHNldWRvUmFuZG9tU3Vic2V0KHZhbHVlcywgd2FudGVkTnVtYmVyKSB7XG4gICAgaWYgKHZhbHVlcy5sZW5ndGggPD0gd2FudGVkTnVtYmVyIHx8IHZhbHVlcy5sZW5ndGggPD0gMSkge1xuICAgICAgICByZXR1cm4gdmFsdWVzO1xuICAgIH1cbiAgICByZXR1cm4gc2h1ZmZsZSh2YWx1ZXMpLnNsaWNlKDAsIHdhbnRlZE51bWJlcik7XG59XG5mdW5jdGlvbiBzaHVmZmxlKGFycikge1xuICAgIGlmIChhcnIubGVuZ3RoIDw9IDEpIHtcbiAgICAgICAgcmV0dXJuIGFycjtcbiAgICB9XG4gICAgY29uc3QgcmFuZEludCA9ICgpID0+IHtcbiAgICAgICAgcmV0dXJuIE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIE1hdGguZmxvb3IoYXJyLmxlbmd0aCkpO1xuICAgIH07XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBhcnIubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgY29uc3QgaiA9IHJhbmRJbnQoKTtcbiAgICAgICAgY29uc3QgdG1wID0gYXJyW2ldO1xuICAgICAgICBhcnJbaV0gPSBhcnJbal07XG4gICAgICAgIGFycltqXSA9IHRtcDtcbiAgICB9XG4gICAgcmV0dXJuIGFycjtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXJhbmRvbV9zdWJzZXQuanMubWFwIl0sIm5hbWVzIjpbImdldFBzZXVkb1JhbmRvbVN1YnNldCIsInZhbHVlcyIsIndhbnRlZE51bWJlciIsImxlbmd0aCIsInNodWZmbGUiLCJzbGljZSIsImFyciIsInJhbmRJbnQiLCJNYXRoIiwiZmxvb3IiLCJyYW5kb20iLCJpIiwiaiIsInRtcCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/core/node_modules/@waku/utils/dist/common/random_subset.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/core/node_modules/@waku/utils/dist/common/relay_shard_codec.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@waku/core/node_modules/@waku/utils/dist/common/relay_shard_codec.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decodeRelayShard: () => (/* binding */ decodeRelayShard),\n/* harmony export */   encodeRelayShard: () => (/* binding */ encodeRelayShard)\n/* harmony export */ });\nconst decodeRelayShard = (bytes)=>{\n    // explicitly converting to Uint8Array to avoid Buffer\n    // https://github.com/libp2p/js-libp2p/issues/2146\n    bytes = new Uint8Array(bytes);\n    if (bytes.length < 3) throw new Error(\"Insufficient data\");\n    const view = new DataView(bytes.buffer);\n    const clusterId = view.getUint16(0);\n    const shards = [];\n    if (bytes.length === 130) {\n        // rsv format (Bit Vector)\n        for(let i = 0; i < 1024; i++){\n            const byteIndex = Math.floor(i / 8) + 2; // Adjusted for the 2-byte cluster field\n            const bitIndex = 7 - i % 8;\n            if (view.getUint8(byteIndex) & 1 << bitIndex) {\n                shards.push(i);\n            }\n        }\n    } else {\n        // rs format (Index List)\n        const numIndices = view.getUint8(2);\n        for(let i = 0, offset = 3; i < numIndices; i++, offset += 2){\n            if (offset + 1 >= bytes.length) throw new Error(\"Unexpected end of data\");\n            shards.push(view.getUint16(offset));\n        }\n    }\n    return {\n        clusterId,\n        shards\n    };\n};\nconst encodeRelayShard = (shardInfo)=>{\n    const { clusterId, shards } = shardInfo;\n    const totalLength = shards.length >= 64 ? 130 : 3 + 2 * shards.length;\n    const buffer = new ArrayBuffer(totalLength);\n    const view = new DataView(buffer);\n    view.setUint16(0, clusterId);\n    if (shards.length >= 64) {\n        // rsv format (Bit Vector)\n        for (const index of shards){\n            const byteIndex = Math.floor(index / 8) + 2; // Adjusted for the 2-byte cluster field\n            const bitIndex = 7 - index % 8;\n            view.setUint8(byteIndex, view.getUint8(byteIndex) | 1 << bitIndex);\n        }\n    } else {\n        // rs format (Index List)\n        view.setUint8(2, shards.length);\n        for(let i = 0, offset = 3; i < shards.length; i++, offset += 2){\n            view.setUint16(offset, shards[i]);\n        }\n    }\n    return new Uint8Array(buffer);\n}; //# sourceMappingURL=relay_shard_codec.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdha3UvY29yZS9ub2RlX21vZHVsZXMvQHdha3UvdXRpbHMvZGlzdC9jb21tb24vcmVsYXlfc2hhcmRfY29kZWMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBTyxNQUFNQSxtQkFBbUIsQ0FBQ0M7SUFDN0Isc0RBQXNEO0lBQ3RELGtEQUFrRDtJQUNsREEsUUFBUSxJQUFJQyxXQUFXRDtJQUN2QixJQUFJQSxNQUFNRSxNQUFNLEdBQUcsR0FDZixNQUFNLElBQUlDLE1BQU07SUFDcEIsTUFBTUMsT0FBTyxJQUFJQyxTQUFTTCxNQUFNTSxNQUFNO0lBQ3RDLE1BQU1DLFlBQVlILEtBQUtJLFNBQVMsQ0FBQztJQUNqQyxNQUFNQyxTQUFTLEVBQUU7SUFDakIsSUFBSVQsTUFBTUUsTUFBTSxLQUFLLEtBQUs7UUFDdEIsMEJBQTBCO1FBQzFCLElBQUssSUFBSVEsSUFBSSxHQUFHQSxJQUFJLE1BQU1BLElBQUs7WUFDM0IsTUFBTUMsWUFBWUMsS0FBS0MsS0FBSyxDQUFDSCxJQUFJLEtBQUssR0FBRyx3Q0FBd0M7WUFDakYsTUFBTUksV0FBVyxJQUFLSixJQUFJO1lBQzFCLElBQUlOLEtBQUtXLFFBQVEsQ0FBQ0osYUFBYyxLQUFLRyxVQUFXO2dCQUM1Q0wsT0FBT08sSUFBSSxDQUFDTjtZQUNoQjtRQUNKO0lBQ0osT0FDSztRQUNELHlCQUF5QjtRQUN6QixNQUFNTyxhQUFhYixLQUFLVyxRQUFRLENBQUM7UUFDakMsSUFBSyxJQUFJTCxJQUFJLEdBQUdRLFNBQVMsR0FBR1IsSUFBSU8sWUFBWVAsS0FBS1EsVUFBVSxFQUFHO1lBQzFELElBQUlBLFNBQVMsS0FBS2xCLE1BQU1FLE1BQU0sRUFDMUIsTUFBTSxJQUFJQyxNQUFNO1lBQ3BCTSxPQUFPTyxJQUFJLENBQUNaLEtBQUtJLFNBQVMsQ0FBQ1U7UUFDL0I7SUFDSjtJQUNBLE9BQU87UUFBRVg7UUFBV0U7SUFBTztBQUMvQixFQUFFO0FBQ0ssTUFBTVUsbUJBQW1CLENBQUNDO0lBQzdCLE1BQU0sRUFBRWIsU0FBUyxFQUFFRSxNQUFNLEVBQUUsR0FBR1c7SUFDOUIsTUFBTUMsY0FBY1osT0FBT1AsTUFBTSxJQUFJLEtBQUssTUFBTSxJQUFJLElBQUlPLE9BQU9QLE1BQU07SUFDckUsTUFBTUksU0FBUyxJQUFJZ0IsWUFBWUQ7SUFDL0IsTUFBTWpCLE9BQU8sSUFBSUMsU0FBU0M7SUFDMUJGLEtBQUttQixTQUFTLENBQUMsR0FBR2hCO0lBQ2xCLElBQUlFLE9BQU9QLE1BQU0sSUFBSSxJQUFJO1FBQ3JCLDBCQUEwQjtRQUMxQixLQUFLLE1BQU1zQixTQUFTZixPQUFRO1lBQ3hCLE1BQU1FLFlBQVlDLEtBQUtDLEtBQUssQ0FBQ1csUUFBUSxLQUFLLEdBQUcsd0NBQXdDO1lBQ3JGLE1BQU1WLFdBQVcsSUFBS1UsUUFBUTtZQUM5QnBCLEtBQUtxQixRQUFRLENBQUNkLFdBQVdQLEtBQUtXLFFBQVEsQ0FBQ0osYUFBYyxLQUFLRztRQUM5RDtJQUNKLE9BQ0s7UUFDRCx5QkFBeUI7UUFDekJWLEtBQUtxQixRQUFRLENBQUMsR0FBR2hCLE9BQU9QLE1BQU07UUFDOUIsSUFBSyxJQUFJUSxJQUFJLEdBQUdRLFNBQVMsR0FBR1IsSUFBSUQsT0FBT1AsTUFBTSxFQUFFUSxLQUFLUSxVQUFVLEVBQUc7WUFDN0RkLEtBQUttQixTQUFTLENBQUNMLFFBQVFULE1BQU0sQ0FBQ0MsRUFBRTtRQUNwQztJQUNKO0lBQ0EsT0FBTyxJQUFJVCxXQUFXSztBQUMxQixFQUFFLENBQ0YsNkNBQTZDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZmx1c2gtbm90ZXMvLi9ub2RlX21vZHVsZXMvQHdha3UvY29yZS9ub2RlX21vZHVsZXMvQHdha3UvdXRpbHMvZGlzdC9jb21tb24vcmVsYXlfc2hhcmRfY29kZWMuanM/ZWE0NSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3QgZGVjb2RlUmVsYXlTaGFyZCA9IChieXRlcykgPT4ge1xuICAgIC8vIGV4cGxpY2l0bHkgY29udmVydGluZyB0byBVaW50OEFycmF5IHRvIGF2b2lkIEJ1ZmZlclxuICAgIC8vIGh0dHBzOi8vZ2l0aHViLmNvbS9saWJwMnAvanMtbGlicDJwL2lzc3Vlcy8yMTQ2XG4gICAgYnl0ZXMgPSBuZXcgVWludDhBcnJheShieXRlcyk7XG4gICAgaWYgKGJ5dGVzLmxlbmd0aCA8IDMpXG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIkluc3VmZmljaWVudCBkYXRhXCIpO1xuICAgIGNvbnN0IHZpZXcgPSBuZXcgRGF0YVZpZXcoYnl0ZXMuYnVmZmVyKTtcbiAgICBjb25zdCBjbHVzdGVySWQgPSB2aWV3LmdldFVpbnQxNigwKTtcbiAgICBjb25zdCBzaGFyZHMgPSBbXTtcbiAgICBpZiAoYnl0ZXMubGVuZ3RoID09PSAxMzApIHtcbiAgICAgICAgLy8gcnN2IGZvcm1hdCAoQml0IFZlY3RvcilcbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCAxMDI0OyBpKyspIHtcbiAgICAgICAgICAgIGNvbnN0IGJ5dGVJbmRleCA9IE1hdGguZmxvb3IoaSAvIDgpICsgMjsgLy8gQWRqdXN0ZWQgZm9yIHRoZSAyLWJ5dGUgY2x1c3RlciBmaWVsZFxuICAgICAgICAgICAgY29uc3QgYml0SW5kZXggPSA3IC0gKGkgJSA4KTtcbiAgICAgICAgICAgIGlmICh2aWV3LmdldFVpbnQ4KGJ5dGVJbmRleCkgJiAoMSA8PCBiaXRJbmRleCkpIHtcbiAgICAgICAgICAgICAgICBzaGFyZHMucHVzaChpKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgLy8gcnMgZm9ybWF0IChJbmRleCBMaXN0KVxuICAgICAgICBjb25zdCBudW1JbmRpY2VzID0gdmlldy5nZXRVaW50OCgyKTtcbiAgICAgICAgZm9yIChsZXQgaSA9IDAsIG9mZnNldCA9IDM7IGkgPCBudW1JbmRpY2VzOyBpKyssIG9mZnNldCArPSAyKSB7XG4gICAgICAgICAgICBpZiAob2Zmc2V0ICsgMSA+PSBieXRlcy5sZW5ndGgpXG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiVW5leHBlY3RlZCBlbmQgb2YgZGF0YVwiKTtcbiAgICAgICAgICAgIHNoYXJkcy5wdXNoKHZpZXcuZ2V0VWludDE2KG9mZnNldCkpO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiB7IGNsdXN0ZXJJZCwgc2hhcmRzIH07XG59O1xuZXhwb3J0IGNvbnN0IGVuY29kZVJlbGF5U2hhcmQgPSAoc2hhcmRJbmZvKSA9PiB7XG4gICAgY29uc3QgeyBjbHVzdGVySWQsIHNoYXJkcyB9ID0gc2hhcmRJbmZvO1xuICAgIGNvbnN0IHRvdGFsTGVuZ3RoID0gc2hhcmRzLmxlbmd0aCA+PSA2NCA/IDEzMCA6IDMgKyAyICogc2hhcmRzLmxlbmd0aDtcbiAgICBjb25zdCBidWZmZXIgPSBuZXcgQXJyYXlCdWZmZXIodG90YWxMZW5ndGgpO1xuICAgIGNvbnN0IHZpZXcgPSBuZXcgRGF0YVZpZXcoYnVmZmVyKTtcbiAgICB2aWV3LnNldFVpbnQxNigwLCBjbHVzdGVySWQpO1xuICAgIGlmIChzaGFyZHMubGVuZ3RoID49IDY0KSB7XG4gICAgICAgIC8vIHJzdiBmb3JtYXQgKEJpdCBWZWN0b3IpXG4gICAgICAgIGZvciAoY29uc3QgaW5kZXggb2Ygc2hhcmRzKSB7XG4gICAgICAgICAgICBjb25zdCBieXRlSW5kZXggPSBNYXRoLmZsb29yKGluZGV4IC8gOCkgKyAyOyAvLyBBZGp1c3RlZCBmb3IgdGhlIDItYnl0ZSBjbHVzdGVyIGZpZWxkXG4gICAgICAgICAgICBjb25zdCBiaXRJbmRleCA9IDcgLSAoaW5kZXggJSA4KTtcbiAgICAgICAgICAgIHZpZXcuc2V0VWludDgoYnl0ZUluZGV4LCB2aWV3LmdldFVpbnQ4KGJ5dGVJbmRleCkgfCAoMSA8PCBiaXRJbmRleCkpO1xuICAgICAgICB9XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICAvLyBycyBmb3JtYXQgKEluZGV4IExpc3QpXG4gICAgICAgIHZpZXcuc2V0VWludDgoMiwgc2hhcmRzLmxlbmd0aCk7XG4gICAgICAgIGZvciAobGV0IGkgPSAwLCBvZmZzZXQgPSAzOyBpIDwgc2hhcmRzLmxlbmd0aDsgaSsrLCBvZmZzZXQgKz0gMikge1xuICAgICAgICAgICAgdmlldy5zZXRVaW50MTYob2Zmc2V0LCBzaGFyZHNbaV0pO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiBuZXcgVWludDhBcnJheShidWZmZXIpO1xufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXJlbGF5X3NoYXJkX2NvZGVjLmpzLm1hcCJdLCJuYW1lcyI6WyJkZWNvZGVSZWxheVNoYXJkIiwiYnl0ZXMiLCJVaW50OEFycmF5IiwibGVuZ3RoIiwiRXJyb3IiLCJ2aWV3IiwiRGF0YVZpZXciLCJidWZmZXIiLCJjbHVzdGVySWQiLCJnZXRVaW50MTYiLCJzaGFyZHMiLCJpIiwiYnl0ZUluZGV4IiwiTWF0aCIsImZsb29yIiwiYml0SW5kZXgiLCJnZXRVaW50OCIsInB1c2giLCJudW1JbmRpY2VzIiwib2Zmc2V0IiwiZW5jb2RlUmVsYXlTaGFyZCIsInNoYXJkSW5mbyIsInRvdGFsTGVuZ3RoIiwiQXJyYXlCdWZmZXIiLCJzZXRVaW50MTYiLCJpbmRleCIsInNldFVpbnQ4Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/core/node_modules/@waku/utils/dist/common/relay_shard_codec.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/core/node_modules/@waku/utils/dist/common/sharding.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@waku/core/node_modules/@waku/utils/dist/common/sharding.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   contentTopicToPubsubTopic: () => (/* binding */ contentTopicToPubsubTopic),\n/* harmony export */   contentTopicToShardIndex: () => (/* binding */ contentTopicToShardIndex),\n/* harmony export */   contentTopicsByPubsubTopic: () => (/* binding */ contentTopicsByPubsubTopic),\n/* harmony export */   determinePubsubTopic: () => (/* binding */ determinePubsubTopic),\n/* harmony export */   ensurePubsubTopicIsConfigured: () => (/* binding */ ensurePubsubTopicIsConfigured),\n/* harmony export */   ensureShardingConfigured: () => (/* binding */ ensureShardingConfigured),\n/* harmony export */   ensureValidContentTopic: () => (/* binding */ ensureValidContentTopic),\n/* harmony export */   pubsubTopicToSingleShardInfo: () => (/* binding */ pubsubTopicToSingleShardInfo),\n/* harmony export */   shardInfoToPubsubTopics: () => (/* binding */ shardInfoToPubsubTopics),\n/* harmony export */   singleShardInfoToPubsubTopic: () => (/* binding */ singleShardInfoToPubsubTopic),\n/* harmony export */   singleShardInfosToShardInfo: () => (/* binding */ singleShardInfosToShardInfo)\n/* harmony export */ });\n/* harmony import */ var _noble_hashes_sha256__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @noble/hashes/sha256 */ \"(ssr)/./node_modules/@noble/hashes/esm/sha256.js\");\n/* harmony import */ var _waku_interfaces__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @waku/interfaces */ \"(ssr)/./node_modules/@waku/interfaces/dist/index.js\");\n/* harmony import */ var _bytes_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../bytes/index.js */ \"(ssr)/./node_modules/@waku/core/node_modules/@waku/utils/dist/bytes/index.js\");\n\n\n\nconst singleShardInfoToPubsubTopic = (shardInfo)=>{\n    if (shardInfo.clusterId === undefined || shardInfo.shard === undefined) throw new Error(\"Invalid shard\");\n    return `/waku/2/rs/${shardInfo.clusterId}/${shardInfo.shard}`;\n};\nconst singleShardInfosToShardInfo = (singleShardInfos)=>{\n    if (singleShardInfos.length === 0) throw new Error(\"Invalid shard\");\n    const clusterIds = singleShardInfos.map((shardInfo)=>shardInfo.clusterId);\n    if (new Set(clusterIds).size !== 1) {\n        throw new Error(\"Passed shard infos have different clusterIds\");\n    }\n    const shards = singleShardInfos.map((shardInfo)=>shardInfo.shard).filter((shard)=>shard !== undefined);\n    return {\n        clusterId: singleShardInfos[0].clusterId,\n        shards\n    };\n};\nconst shardInfoToPubsubTopics = (shardInfo)=>{\n    if (\"contentTopics\" in shardInfo && shardInfo.contentTopics) {\n        // Autosharding: explicitly defined content topics\n        return Array.from(new Set(shardInfo.contentTopics.map((contentTopic)=>contentTopicToPubsubTopic(contentTopic, shardInfo.clusterId))));\n    } else if (\"shards\" in shardInfo) {\n        // Static sharding\n        if (shardInfo.shards === undefined) throw new Error(\"Invalid shard\");\n        return Array.from(new Set(shardInfo.shards.map((index)=>`/waku/2/rs/${shardInfo.clusterId ?? _waku_interfaces__WEBPACK_IMPORTED_MODULE_0__.DEFAULT_CLUSTER_ID}/${index}`)));\n    } else if (\"application\" in shardInfo && \"version\" in shardInfo) {\n        // Autosharding: single shard from application and version\n        return [\n            contentTopicToPubsubTopic(`/${shardInfo.application}/${shardInfo.version}/default/default`, shardInfo.clusterId)\n        ];\n    } else {\n        throw new Error(\"Missing required configuration in shard parameters\");\n    }\n};\nconst pubsubTopicToSingleShardInfo = (pubsubTopics)=>{\n    const parts = pubsubTopics.split(\"/\");\n    if (parts.length != 6 || parts[1] !== \"waku\" || parts[2] !== \"2\" || parts[3] !== \"rs\") throw new Error(\"Invalid pubsub topic\");\n    const clusterId = parseInt(parts[4]);\n    const shard = parseInt(parts[5]);\n    if (isNaN(clusterId) || isNaN(shard)) throw new Error(\"Invalid clusterId or shard\");\n    return {\n        clusterId,\n        shard\n    };\n};\n//TODO: move part of BaseProtocol instead of utils\n// return `ProtocolError.TOPIC_NOT_CONFIGURED` instead of throwing\nfunction ensurePubsubTopicIsConfigured(pubsubTopic, configuredTopics) {\n    if (!configuredTopics.includes(pubsubTopic)) {\n        throw new Error(`Pubsub topic ${pubsubTopic} has not been configured on this instance. Configured topics are: ${configuredTopics}. Please update your configuration by passing in the topic during Waku node instantiation.`);\n    }\n}\n/**\n * Given a string, will throw an error if it is not formatted as a valid content topic for autosharding based on https://rfc.vac.dev/spec/51/\n * @param contentTopic String to validate\n * @returns Object with each content topic field as an attribute\n */ function ensureValidContentTopic(contentTopic) {\n    const parts = contentTopic.split(\"/\");\n    if (parts.length < 5 || parts.length > 6) {\n        throw Error(\"Content topic format is invalid\");\n    }\n    // Validate generation field if present\n    let generation = 0;\n    if (parts.length == 6) {\n        generation = parseInt(parts[1]);\n        if (isNaN(generation)) {\n            throw new Error(\"Invalid generation field in content topic\");\n        }\n        if (generation > 0) {\n            throw new Error(\"Generation greater than 0 is not supported\");\n        }\n    }\n    // Validate remaining fields\n    const fields = parts.splice(-4);\n    // Validate application field\n    if (fields[0].length == 0) {\n        throw new Error(\"Application field cannot be empty\");\n    }\n    // Validate version field\n    if (fields[1].length == 0) {\n        throw new Error(\"Version field cannot be empty\");\n    }\n    // Validate topic name field\n    if (fields[2].length == 0) {\n        throw new Error(\"Topic name field cannot be empty\");\n    }\n    // Validate encoding field\n    if (fields[3].length == 0) {\n        throw new Error(\"Encoding field cannot be empty\");\n    }\n    return {\n        generation,\n        application: fields[0],\n        version: fields[1],\n        topicName: fields[2],\n        encoding: fields[3]\n    };\n}\n/**\n * Given a string, determines which autoshard index to use for its pubsub topic.\n * Based on the algorithm described in the RFC: https://rfc.vac.dev/spec/51//#algorithm\n */ function contentTopicToShardIndex(contentTopic, networkShards = 8) {\n    const { application, version } = ensureValidContentTopic(contentTopic);\n    const digest = (0,_noble_hashes_sha256__WEBPACK_IMPORTED_MODULE_2__.sha256)((0,_bytes_index_js__WEBPACK_IMPORTED_MODULE_1__.concat)([\n        (0,_bytes_index_js__WEBPACK_IMPORTED_MODULE_1__.utf8ToBytes)(application),\n        (0,_bytes_index_js__WEBPACK_IMPORTED_MODULE_1__.utf8ToBytes)(version)\n    ]));\n    const dataview = new DataView(digest.buffer.slice(-8));\n    return Number(dataview.getBigUint64(0, false) % BigInt(networkShards));\n}\nfunction contentTopicToPubsubTopic(contentTopic, clusterId = _waku_interfaces__WEBPACK_IMPORTED_MODULE_0__.DEFAULT_CLUSTER_ID, networkShards = 8) {\n    const shardIndex = contentTopicToShardIndex(contentTopic, networkShards);\n    return `/waku/2/rs/${clusterId}/${shardIndex}`;\n}\n/**\n * Given an array of content topics, groups them together by their Pubsub topic as derived using the algorithm for autosharding.\n * If any of the content topics are not properly formatted, the function will throw an error.\n */ function contentTopicsByPubsubTopic(contentTopics, clusterId = _waku_interfaces__WEBPACK_IMPORTED_MODULE_0__.DEFAULT_CLUSTER_ID, networkShards = 8) {\n    const groupedContentTopics = new Map();\n    for (const contentTopic of contentTopics){\n        const pubsubTopic = contentTopicToPubsubTopic(contentTopic, clusterId, networkShards);\n        let topics = groupedContentTopics.get(pubsubTopic);\n        if (!topics) {\n            groupedContentTopics.set(pubsubTopic, []);\n            topics = groupedContentTopics.get(pubsubTopic);\n        }\n        topics.push(contentTopic);\n    }\n    return groupedContentTopics;\n}\n/**\n * Used when creating encoders/decoders to determine which pubsub topic to use\n */ function determinePubsubTopic(contentTopic, pubsubTopicShardInfo = _waku_interfaces__WEBPACK_IMPORTED_MODULE_0__.DefaultPubsubTopic) {\n    if (typeof pubsubTopicShardInfo == \"string\") {\n        return pubsubTopicShardInfo;\n    } else {\n        return pubsubTopicShardInfo ? pubsubTopicShardInfo.shard ? singleShardInfoToPubsubTopic(pubsubTopicShardInfo) : contentTopicToPubsubTopic(contentTopic, pubsubTopicShardInfo.clusterId) : _waku_interfaces__WEBPACK_IMPORTED_MODULE_0__.DefaultPubsubTopic;\n    }\n}\n/**\n * Validates sharding configuration and sets defaults where possible.\n * @returns Validated sharding parameters, with any missing values set to defaults\n */ const ensureShardingConfigured = (shardInfo)=>{\n    const clusterId = shardInfo.clusterId ?? _waku_interfaces__WEBPACK_IMPORTED_MODULE_0__.DEFAULT_CLUSTER_ID;\n    const shards = \"shards\" in shardInfo ? shardInfo.shards : [];\n    const contentTopics = \"contentTopics\" in shardInfo ? shardInfo.contentTopics : [];\n    const [application, version] = \"application\" in shardInfo && \"version\" in shardInfo ? [\n        shardInfo.application,\n        shardInfo.version\n    ] : [\n        undefined,\n        undefined\n    ];\n    const isShardsConfigured = shards && shards.length > 0;\n    const isContentTopicsConfigured = contentTopics && contentTopics.length > 0;\n    const isApplicationVersionConfigured = application && version;\n    if (isShardsConfigured) {\n        return {\n            shardingParams: {\n                clusterId,\n                shards\n            },\n            shardInfo: {\n                clusterId,\n                shards\n            },\n            pubsubTopics: shardInfoToPubsubTopics({\n                clusterId,\n                shards\n            })\n        };\n    }\n    if (isContentTopicsConfigured) {\n        const pubsubTopics = Array.from(new Set(contentTopics.map((topic)=>contentTopicToPubsubTopic(topic, clusterId))));\n        const shards = Array.from(new Set(contentTopics.map((topic)=>contentTopicToShardIndex(topic))));\n        return {\n            shardingParams: {\n                clusterId,\n                contentTopics\n            },\n            shardInfo: {\n                clusterId,\n                shards\n            },\n            pubsubTopics\n        };\n    }\n    if (isApplicationVersionConfigured) {\n        const pubsubTopic = contentTopicToPubsubTopic(`/${application}/${version}/default/default`, clusterId);\n        return {\n            shardingParams: {\n                clusterId,\n                application,\n                version\n            },\n            shardInfo: {\n                clusterId,\n                shards: [\n                    pubsubTopicToSingleShardInfo(pubsubTopic).shard\n                ]\n            },\n            pubsubTopics: [\n                pubsubTopic\n            ]\n        };\n    }\n    throw new Error(\"Missing minimum required configuration options for static sharding or autosharding.\");\n}; //# sourceMappingURL=sharding.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/core/node_modules/@waku/utils/dist/common/sharding.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/core/node_modules/@waku/utils/dist/common/to_async_iterator.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@waku/core/node_modules/@waku/utils/dist/common/to_async_iterator.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   toAsyncIterator: () => (/* binding */ toAsyncIterator)\n/* harmony export */ });\nconst FRAME_RATE = 60;\n/**\n * Function that transforms IReceiver subscription to iterable stream of data.\n * @param receiver - object that allows to be subscribed to;\n * @param decoder - parameter to be passed to receiver for subscription;\n * @param options - options for receiver for subscription;\n * @param iteratorOptions - optional configuration for iterator;\n * @returns iterator and stop function to terminate it.\n */ async function toAsyncIterator(receiver, decoder, iteratorOptions) {\n    const iteratorDelay = iteratorOptions?.iteratorDelay ?? FRAME_RATE;\n    const messages = [];\n    let unsubscribe;\n    unsubscribe = await receiver.subscribe(decoder, (message)=>{\n        messages.push(message);\n    });\n    const isWithTimeout = Number.isInteger(iteratorOptions?.timeoutMs);\n    const timeoutMs = iteratorOptions?.timeoutMs ?? 0;\n    const startTime = Date.now();\n    async function* iterator() {\n        while(true){\n            if (isWithTimeout && Date.now() - startTime >= timeoutMs) {\n                return;\n            }\n            await wait(iteratorDelay);\n            const message = messages.shift();\n            if (!unsubscribe && messages.length === 0) {\n                return message;\n            }\n            if (!message && unsubscribe) {\n                continue;\n            }\n            yield message;\n        }\n    }\n    return {\n        iterator: iterator(),\n        async stop () {\n            if (unsubscribe) {\n                await unsubscribe();\n                unsubscribe = undefined;\n            }\n        }\n    };\n}\nfunction wait(ms) {\n    return new Promise((resolve)=>{\n        setTimeout(resolve, ms);\n    });\n} //# sourceMappingURL=to_async_iterator.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdha3UvY29yZS9ub2RlX21vZHVsZXMvQHdha3UvdXRpbHMvZGlzdC9jb21tb24vdG9fYXN5bmNfaXRlcmF0b3IuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE1BQU1BLGFBQWE7QUFDbkI7Ozs7Ozs7Q0FPQyxHQUNNLGVBQWVDLGdCQUFnQkMsUUFBUSxFQUFFQyxPQUFPLEVBQUVDLGVBQWU7SUFDcEUsTUFBTUMsZ0JBQWdCRCxpQkFBaUJDLGlCQUFpQkw7SUFDeEQsTUFBTU0sV0FBVyxFQUFFO0lBQ25CLElBQUlDO0lBQ0pBLGNBQWMsTUFBTUwsU0FBU00sU0FBUyxDQUFDTCxTQUFTLENBQUNNO1FBQzdDSCxTQUFTSSxJQUFJLENBQUNEO0lBQ2xCO0lBQ0EsTUFBTUUsZ0JBQWdCQyxPQUFPQyxTQUFTLENBQUNULGlCQUFpQlU7SUFDeEQsTUFBTUEsWUFBWVYsaUJBQWlCVSxhQUFhO0lBQ2hELE1BQU1DLFlBQVlDLEtBQUtDLEdBQUc7SUFDMUIsZ0JBQWdCQztRQUNaLE1BQU8sS0FBTTtZQUNULElBQUlQLGlCQUFpQkssS0FBS0MsR0FBRyxLQUFLRixhQUFhRCxXQUFXO2dCQUN0RDtZQUNKO1lBQ0EsTUFBTUssS0FBS2Q7WUFDWCxNQUFNSSxVQUFVSCxTQUFTYyxLQUFLO1lBQzlCLElBQUksQ0FBQ2IsZUFBZUQsU0FBU2UsTUFBTSxLQUFLLEdBQUc7Z0JBQ3ZDLE9BQU9aO1lBQ1g7WUFDQSxJQUFJLENBQUNBLFdBQVdGLGFBQWE7Z0JBQ3pCO1lBQ0o7WUFDQSxNQUFNRTtRQUNWO0lBQ0o7SUFDQSxPQUFPO1FBQ0hTLFVBQVVBO1FBQ1YsTUFBTUk7WUFDRixJQUFJZixhQUFhO2dCQUNiLE1BQU1BO2dCQUNOQSxjQUFjZ0I7WUFDbEI7UUFDSjtJQUNKO0FBQ0o7QUFDQSxTQUFTSixLQUFLSyxFQUFFO0lBQ1osT0FBTyxJQUFJQyxRQUFRLENBQUNDO1FBQ2hCQyxXQUFXRCxTQUFTRjtJQUN4QjtBQUNKLEVBQ0EsNkNBQTZDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZmx1c2gtbm90ZXMvLi9ub2RlX21vZHVsZXMvQHdha3UvY29yZS9ub2RlX21vZHVsZXMvQHdha3UvdXRpbHMvZGlzdC9jb21tb24vdG9fYXN5bmNfaXRlcmF0b3IuanM/ODk4MCJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBGUkFNRV9SQVRFID0gNjA7XG4vKipcbiAqIEZ1bmN0aW9uIHRoYXQgdHJhbnNmb3JtcyBJUmVjZWl2ZXIgc3Vic2NyaXB0aW9uIHRvIGl0ZXJhYmxlIHN0cmVhbSBvZiBkYXRhLlxuICogQHBhcmFtIHJlY2VpdmVyIC0gb2JqZWN0IHRoYXQgYWxsb3dzIHRvIGJlIHN1YnNjcmliZWQgdG87XG4gKiBAcGFyYW0gZGVjb2RlciAtIHBhcmFtZXRlciB0byBiZSBwYXNzZWQgdG8gcmVjZWl2ZXIgZm9yIHN1YnNjcmlwdGlvbjtcbiAqIEBwYXJhbSBvcHRpb25zIC0gb3B0aW9ucyBmb3IgcmVjZWl2ZXIgZm9yIHN1YnNjcmlwdGlvbjtcbiAqIEBwYXJhbSBpdGVyYXRvck9wdGlvbnMgLSBvcHRpb25hbCBjb25maWd1cmF0aW9uIGZvciBpdGVyYXRvcjtcbiAqIEByZXR1cm5zIGl0ZXJhdG9yIGFuZCBzdG9wIGZ1bmN0aW9uIHRvIHRlcm1pbmF0ZSBpdC5cbiAqL1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIHRvQXN5bmNJdGVyYXRvcihyZWNlaXZlciwgZGVjb2RlciwgaXRlcmF0b3JPcHRpb25zKSB7XG4gICAgY29uc3QgaXRlcmF0b3JEZWxheSA9IGl0ZXJhdG9yT3B0aW9ucz8uaXRlcmF0b3JEZWxheSA/PyBGUkFNRV9SQVRFO1xuICAgIGNvbnN0IG1lc3NhZ2VzID0gW107XG4gICAgbGV0IHVuc3Vic2NyaWJlO1xuICAgIHVuc3Vic2NyaWJlID0gYXdhaXQgcmVjZWl2ZXIuc3Vic2NyaWJlKGRlY29kZXIsIChtZXNzYWdlKSA9PiB7XG4gICAgICAgIG1lc3NhZ2VzLnB1c2gobWVzc2FnZSk7XG4gICAgfSk7XG4gICAgY29uc3QgaXNXaXRoVGltZW91dCA9IE51bWJlci5pc0ludGVnZXIoaXRlcmF0b3JPcHRpb25zPy50aW1lb3V0TXMpO1xuICAgIGNvbnN0IHRpbWVvdXRNcyA9IGl0ZXJhdG9yT3B0aW9ucz8udGltZW91dE1zID8/IDA7XG4gICAgY29uc3Qgc3RhcnRUaW1lID0gRGF0ZS5ub3coKTtcbiAgICBhc3luYyBmdW5jdGlvbiogaXRlcmF0b3IoKSB7XG4gICAgICAgIHdoaWxlICh0cnVlKSB7XG4gICAgICAgICAgICBpZiAoaXNXaXRoVGltZW91dCAmJiBEYXRlLm5vdygpIC0gc3RhcnRUaW1lID49IHRpbWVvdXRNcykge1xuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGF3YWl0IHdhaXQoaXRlcmF0b3JEZWxheSk7XG4gICAgICAgICAgICBjb25zdCBtZXNzYWdlID0gbWVzc2FnZXMuc2hpZnQoKTtcbiAgICAgICAgICAgIGlmICghdW5zdWJzY3JpYmUgJiYgbWVzc2FnZXMubGVuZ3RoID09PSAwKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIG1lc3NhZ2U7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoIW1lc3NhZ2UgJiYgdW5zdWJzY3JpYmUpIHtcbiAgICAgICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHlpZWxkIG1lc3NhZ2U7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHtcbiAgICAgICAgaXRlcmF0b3I6IGl0ZXJhdG9yKCksXG4gICAgICAgIGFzeW5jIHN0b3AoKSB7XG4gICAgICAgICAgICBpZiAodW5zdWJzY3JpYmUpIHtcbiAgICAgICAgICAgICAgICBhd2FpdCB1bnN1YnNjcmliZSgpO1xuICAgICAgICAgICAgICAgIHVuc3Vic2NyaWJlID0gdW5kZWZpbmVkO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfTtcbn1cbmZ1bmN0aW9uIHdhaXQobXMpIHtcbiAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUpID0+IHtcbiAgICAgICAgc2V0VGltZW91dChyZXNvbHZlLCBtcyk7XG4gICAgfSk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD10b19hc3luY19pdGVyYXRvci5qcy5tYXAiXSwibmFtZXMiOlsiRlJBTUVfUkFURSIsInRvQXN5bmNJdGVyYXRvciIsInJlY2VpdmVyIiwiZGVjb2RlciIsIml0ZXJhdG9yT3B0aW9ucyIsIml0ZXJhdG9yRGVsYXkiLCJtZXNzYWdlcyIsInVuc3Vic2NyaWJlIiwic3Vic2NyaWJlIiwibWVzc2FnZSIsInB1c2giLCJpc1dpdGhUaW1lb3V0IiwiTnVtYmVyIiwiaXNJbnRlZ2VyIiwidGltZW91dE1zIiwic3RhcnRUaW1lIiwiRGF0ZSIsIm5vdyIsIml0ZXJhdG9yIiwid2FpdCIsInNoaWZ0IiwibGVuZ3RoIiwic3RvcCIsInVuZGVmaW5lZCIsIm1zIiwiUHJvbWlzZSIsInJlc29sdmUiLCJzZXRUaW1lb3V0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/core/node_modules/@waku/utils/dist/common/to_async_iterator.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/core/node_modules/@waku/utils/dist/index.js":
/*!************************************************************************!*\
  !*** ./node_modules/@waku/core/node_modules/@waku/utils/dist/index.js ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Logger: () => (/* reexport safe */ _logger_index_js__WEBPACK_IMPORTED_MODULE_1__.Logger),\n/* harmony export */   contentTopicToPubsubTopic: () => (/* reexport safe */ _common_index_js__WEBPACK_IMPORTED_MODULE_0__.contentTopicToPubsubTopic),\n/* harmony export */   contentTopicToShardIndex: () => (/* reexport safe */ _common_index_js__WEBPACK_IMPORTED_MODULE_0__.contentTopicToShardIndex),\n/* harmony export */   contentTopicsByPubsubTopic: () => (/* reexport safe */ _common_index_js__WEBPACK_IMPORTED_MODULE_0__.contentTopicsByPubsubTopic),\n/* harmony export */   decodeRelayShard: () => (/* reexport safe */ _common_index_js__WEBPACK_IMPORTED_MODULE_0__.decodeRelayShard),\n/* harmony export */   determinePubsubTopic: () => (/* reexport safe */ _common_index_js__WEBPACK_IMPORTED_MODULE_0__.determinePubsubTopic),\n/* harmony export */   encodeRelayShard: () => (/* reexport safe */ _common_index_js__WEBPACK_IMPORTED_MODULE_0__.encodeRelayShard),\n/* harmony export */   ensurePubsubTopicIsConfigured: () => (/* reexport safe */ _common_index_js__WEBPACK_IMPORTED_MODULE_0__.ensurePubsubTopicIsConfigured),\n/* harmony export */   ensureShardingConfigured: () => (/* reexport safe */ _common_index_js__WEBPACK_IMPORTED_MODULE_0__.ensureShardingConfigured),\n/* harmony export */   ensureValidContentTopic: () => (/* reexport safe */ _common_index_js__WEBPACK_IMPORTED_MODULE_0__.ensureValidContentTopic),\n/* harmony export */   getPseudoRandomSubset: () => (/* reexport safe */ _common_index_js__WEBPACK_IMPORTED_MODULE_0__.getPseudoRandomSubset),\n/* harmony export */   getWsMultiaddrFromMultiaddrs: () => (/* reexport safe */ _common_index_js__WEBPACK_IMPORTED_MODULE_0__.getWsMultiaddrFromMultiaddrs),\n/* harmony export */   groupByContentTopic: () => (/* reexport safe */ _common_index_js__WEBPACK_IMPORTED_MODULE_0__.groupByContentTopic),\n/* harmony export */   isDefined: () => (/* reexport safe */ _common_index_js__WEBPACK_IMPORTED_MODULE_0__.isDefined),\n/* harmony export */   isMessageSizeUnderCap: () => (/* reexport safe */ _common_index_js__WEBPACK_IMPORTED_MODULE_0__.isMessageSizeUnderCap),\n/* harmony export */   isWireSizeUnderCap: () => (/* reexport safe */ _common_index_js__WEBPACK_IMPORTED_MODULE_0__.isWireSizeUnderCap),\n/* harmony export */   pubsubTopicToSingleShardInfo: () => (/* reexport safe */ _common_index_js__WEBPACK_IMPORTED_MODULE_0__.pubsubTopicToSingleShardInfo),\n/* harmony export */   pushOrInitMapSet: () => (/* reexport safe */ _common_index_js__WEBPACK_IMPORTED_MODULE_0__.pushOrInitMapSet),\n/* harmony export */   removeItemFromArray: () => (/* reexport safe */ _common_index_js__WEBPACK_IMPORTED_MODULE_0__.removeItemFromArray),\n/* harmony export */   shardInfoToPubsubTopics: () => (/* reexport safe */ _common_index_js__WEBPACK_IMPORTED_MODULE_0__.shardInfoToPubsubTopics),\n/* harmony export */   singleShardInfoToPubsubTopic: () => (/* reexport safe */ _common_index_js__WEBPACK_IMPORTED_MODULE_0__.singleShardInfoToPubsubTopic),\n/* harmony export */   singleShardInfosToShardInfo: () => (/* reexport safe */ _common_index_js__WEBPACK_IMPORTED_MODULE_0__.singleShardInfosToShardInfo),\n/* harmony export */   toAsyncIterator: () => (/* reexport safe */ _common_index_js__WEBPACK_IMPORTED_MODULE_0__.toAsyncIterator)\n/* harmony export */ });\n/* harmony import */ var _common_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./common/index.js */ \"(ssr)/./node_modules/@waku/core/node_modules/@waku/utils/dist/common/index.js\");\n/* harmony import */ var _logger_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./logger/index.js */ \"(ssr)/./node_modules/@waku/core/node_modules/@waku/utils/dist/logger/index.js\");\n\n //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdha3UvY29yZS9ub2RlX21vZHVsZXMvQHdha3UvdXRpbHMvZGlzdC9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQWtDO0FBQ1MsQ0FDM0MsaUNBQWlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZmx1c2gtbm90ZXMvLi9ub2RlX21vZHVsZXMvQHdha3UvY29yZS9ub2RlX21vZHVsZXMvQHdha3UvdXRpbHMvZGlzdC9pbmRleC5qcz84M2VhIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCAqIGZyb20gXCIuL2NvbW1vbi9pbmRleC5qc1wiO1xuZXhwb3J0IHsgTG9nZ2VyIH0gZnJvbSBcIi4vbG9nZ2VyL2luZGV4LmpzXCI7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOlsiTG9nZ2VyIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/core/node_modules/@waku/utils/dist/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/core/node_modules/@waku/utils/dist/logger/index.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@waku/core/node_modules/@waku/utils/dist/logger/index.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Logger: () => (/* binding */ Logger)\n/* harmony export */ });\n/* harmony import */ var debug__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! debug */ \"(ssr)/./node_modules/debug/src/index.js\");\n\nconst APP_NAME = \"waku\";\nclass Logger {\n    static createDebugNamespace(level, prefix) {\n        return prefix ? `${APP_NAME}:${level}:${prefix}` : `${APP_NAME}:${level}`;\n    }\n    constructor(prefix){\n        this._info = debug__WEBPACK_IMPORTED_MODULE_0__(Logger.createDebugNamespace(\"info\", prefix));\n        this._warn = debug__WEBPACK_IMPORTED_MODULE_0__(Logger.createDebugNamespace(\"warn\", prefix));\n        this._error = debug__WEBPACK_IMPORTED_MODULE_0__(Logger.createDebugNamespace(\"error\", prefix));\n    }\n    get info() {\n        return this._info;\n    }\n    get warn() {\n        return this._warn;\n    }\n    get error() {\n        return this._error;\n    }\n    log(level, ...args) {\n        const logger = this[level];\n        logger(...args);\n    }\n} //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdha3UvY29yZS9ub2RlX21vZHVsZXMvQHdha3UvdXRpbHMvZGlzdC9sb2dnZXIvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBMEI7QUFDMUIsTUFBTUMsV0FBVztBQUNWLE1BQU1DO0lBSVQsT0FBT0MscUJBQXFCQyxLQUFLLEVBQUVDLE1BQU0sRUFBRTtRQUN2QyxPQUFPQSxTQUFTLENBQUMsRUFBRUosU0FBUyxDQUFDLEVBQUVHLE1BQU0sQ0FBQyxFQUFFQyxPQUFPLENBQUMsR0FBRyxDQUFDLEVBQUVKLFNBQVMsQ0FBQyxFQUFFRyxNQUFNLENBQUM7SUFDN0U7SUFDQUUsWUFBWUQsTUFBTSxDQUFFO1FBQ2hCLElBQUksQ0FBQ0UsS0FBSyxHQUFHUCxrQ0FBS0EsQ0FBQ0UsT0FBT0Msb0JBQW9CLENBQUMsUUFBUUU7UUFDdkQsSUFBSSxDQUFDRyxLQUFLLEdBQUdSLGtDQUFLQSxDQUFDRSxPQUFPQyxvQkFBb0IsQ0FBQyxRQUFRRTtRQUN2RCxJQUFJLENBQUNJLE1BQU0sR0FBR1Qsa0NBQUtBLENBQUNFLE9BQU9DLG9CQUFvQixDQUFDLFNBQVNFO0lBQzdEO0lBQ0EsSUFBSUssT0FBTztRQUNQLE9BQU8sSUFBSSxDQUFDSCxLQUFLO0lBQ3JCO0lBQ0EsSUFBSUksT0FBTztRQUNQLE9BQU8sSUFBSSxDQUFDSCxLQUFLO0lBQ3JCO0lBQ0EsSUFBSUksUUFBUTtRQUNSLE9BQU8sSUFBSSxDQUFDSCxNQUFNO0lBQ3RCO0lBQ0FJLElBQUlULEtBQUssRUFBRSxHQUFHVSxJQUFJLEVBQUU7UUFDaEIsTUFBTUMsU0FBUyxJQUFJLENBQUNYLE1BQU07UUFDMUJXLFVBQVVEO0lBQ2Q7QUFDSixFQUNBLGlDQUFpQyIsInNvdXJjZXMiOlsid2VicGFjazovL2ZsdXNoLW5vdGVzLy4vbm9kZV9tb2R1bGVzL0B3YWt1L2NvcmUvbm9kZV9tb2R1bGVzL0B3YWt1L3V0aWxzL2Rpc3QvbG9nZ2VyL2luZGV4LmpzPzMwYzIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGRlYnVnIGZyb20gXCJkZWJ1Z1wiO1xuY29uc3QgQVBQX05BTUUgPSBcIndha3VcIjtcbmV4cG9ydCBjbGFzcyBMb2dnZXIge1xuICAgIF9pbmZvO1xuICAgIF93YXJuO1xuICAgIF9lcnJvcjtcbiAgICBzdGF0aWMgY3JlYXRlRGVidWdOYW1lc3BhY2UobGV2ZWwsIHByZWZpeCkge1xuICAgICAgICByZXR1cm4gcHJlZml4ID8gYCR7QVBQX05BTUV9OiR7bGV2ZWx9OiR7cHJlZml4fWAgOiBgJHtBUFBfTkFNRX06JHtsZXZlbH1gO1xuICAgIH1cbiAgICBjb25zdHJ1Y3RvcihwcmVmaXgpIHtcbiAgICAgICAgdGhpcy5faW5mbyA9IGRlYnVnKExvZ2dlci5jcmVhdGVEZWJ1Z05hbWVzcGFjZShcImluZm9cIiwgcHJlZml4KSk7XG4gICAgICAgIHRoaXMuX3dhcm4gPSBkZWJ1ZyhMb2dnZXIuY3JlYXRlRGVidWdOYW1lc3BhY2UoXCJ3YXJuXCIsIHByZWZpeCkpO1xuICAgICAgICB0aGlzLl9lcnJvciA9IGRlYnVnKExvZ2dlci5jcmVhdGVEZWJ1Z05hbWVzcGFjZShcImVycm9yXCIsIHByZWZpeCkpO1xuICAgIH1cbiAgICBnZXQgaW5mbygpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2luZm87XG4gICAgfVxuICAgIGdldCB3YXJuKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5fd2FybjtcbiAgICB9XG4gICAgZ2V0IGVycm9yKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5fZXJyb3I7XG4gICAgfVxuICAgIGxvZyhsZXZlbCwgLi4uYXJncykge1xuICAgICAgICBjb25zdCBsb2dnZXIgPSB0aGlzW2xldmVsXTtcbiAgICAgICAgbG9nZ2VyKC4uLmFyZ3MpO1xuICAgIH1cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJuYW1lcyI6WyJkZWJ1ZyIsIkFQUF9OQU1FIiwiTG9nZ2VyIiwiY3JlYXRlRGVidWdOYW1lc3BhY2UiLCJsZXZlbCIsInByZWZpeCIsImNvbnN0cnVjdG9yIiwiX2luZm8iLCJfd2FybiIsIl9lcnJvciIsImluZm8iLCJ3YXJuIiwiZXJyb3IiLCJsb2ciLCJhcmdzIiwibG9nZ2VyIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/core/node_modules/@waku/utils/dist/logger/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/discovery/dist/dns/constants.js":
/*!************************************************************!*\
  !*** ./node_modules/@waku/discovery/dist/dns/constants.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DEFAULT_BOOTSTRAP_TAG_NAME: () => (/* binding */ DEFAULT_BOOTSTRAP_TAG_NAME),\n/* harmony export */   DEFAULT_BOOTSTRAP_TAG_TTL: () => (/* binding */ DEFAULT_BOOTSTRAP_TAG_TTL),\n/* harmony export */   DEFAULT_BOOTSTRAP_TAG_VALUE: () => (/* binding */ DEFAULT_BOOTSTRAP_TAG_VALUE),\n/* harmony export */   DEFAULT_NODE_REQUIREMENTS: () => (/* binding */ DEFAULT_NODE_REQUIREMENTS),\n/* harmony export */   enrTree: () => (/* binding */ enrTree)\n/* harmony export */ });\nconst enrTree = {\n    TEST: \"enrtree://AOGYWMBYOUIMOENHXCHILPKY3ZRFEULMFI4DOM442QSZ73TT2A7VI@test.waku.nodes.status.im\",\n    SANDBOX: \"enrtree://AIRVQ5DDA4FFWLRBCHJWUWOO6X6S4ZTZ5B667LQ6AJU6PEYDLRD5O@sandbox.waku.nodes.status.im\"\n};\nconst DEFAULT_BOOTSTRAP_TAG_NAME = \"bootstrap\";\nconst DEFAULT_BOOTSTRAP_TAG_VALUE = 50;\nconst DEFAULT_BOOTSTRAP_TAG_TTL = 100000000;\nconst DEFAULT_NODE_REQUIREMENTS = {\n    store: 2,\n    filter: 1,\n    lightPush: 1\n}; //# sourceMappingURL=constants.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdha3UvZGlzY292ZXJ5L2Rpc3QvZG5zL2NvbnN0YW50cy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFPLE1BQU1BLFVBQVU7SUFDbkJDLE1BQU07SUFDTkMsU0FBUztBQUNiLEVBQUU7QUFDSyxNQUFNQyw2QkFBNkIsWUFBWTtBQUMvQyxNQUFNQyw4QkFBOEIsR0FBRztBQUN2QyxNQUFNQyw0QkFBNEIsVUFBWTtBQUM5QyxNQUFNQyw0QkFBNEI7SUFDckNDLE9BQU87SUFDUEMsUUFBUTtJQUNSQyxXQUFXO0FBQ2YsRUFBRSxDQUNGLHFDQUFxQyIsInNvdXJjZXMiOlsid2VicGFjazovL2ZsdXNoLW5vdGVzLy4vbm9kZV9tb2R1bGVzL0B3YWt1L2Rpc2NvdmVyeS9kaXN0L2Rucy9jb25zdGFudHMuanM/NjkwOCJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3QgZW5yVHJlZSA9IHtcbiAgICBURVNUOiBcImVucnRyZWU6Ly9BT0dZV01CWU9VSU1PRU5IWENISUxQS1kzWlJGRVVMTUZJNERPTTQ0MlFTWjczVFQyQTdWSUB0ZXN0Lndha3Uubm9kZXMuc3RhdHVzLmltXCIsXG4gICAgU0FOREJPWDogXCJlbnJ0cmVlOi8vQUlSVlE1RERBNEZGV0xSQkNISldVV09PNlg2UzRaVFo1QjY2N0xRNkFKVTZQRVlETFJENU9Ac2FuZGJveC53YWt1Lm5vZGVzLnN0YXR1cy5pbVwiXG59O1xuZXhwb3J0IGNvbnN0IERFRkFVTFRfQk9PVFNUUkFQX1RBR19OQU1FID0gXCJib290c3RyYXBcIjtcbmV4cG9ydCBjb25zdCBERUZBVUxUX0JPT1RTVFJBUF9UQUdfVkFMVUUgPSA1MDtcbmV4cG9ydCBjb25zdCBERUZBVUxUX0JPT1RTVFJBUF9UQUdfVFRMID0gMTAwXzAwMF8wMDA7XG5leHBvcnQgY29uc3QgREVGQVVMVF9OT0RFX1JFUVVJUkVNRU5UUyA9IHtcbiAgICBzdG9yZTogMixcbiAgICBmaWx0ZXI6IDEsXG4gICAgbGlnaHRQdXNoOiAxXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y29uc3RhbnRzLmpzLm1hcCJdLCJuYW1lcyI6WyJlbnJUcmVlIiwiVEVTVCIsIlNBTkRCT1giLCJERUZBVUxUX0JPT1RTVFJBUF9UQUdfTkFNRSIsIkRFRkFVTFRfQk9PVFNUUkFQX1RBR19WQUxVRSIsIkRFRkFVTFRfQk9PVFNUUkFQX1RBR19UVEwiLCJERUZBVUxUX05PREVfUkVRVUlSRU1FTlRTIiwic3RvcmUiLCJmaWx0ZXIiLCJsaWdodFB1c2giXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/discovery/dist/dns/constants.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/discovery/dist/dns/dns.js":
/*!******************************************************!*\
  !*** ./node_modules/@waku/discovery/dist/dns/dns.js ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DnsNodeDiscovery: () => (/* binding */ DnsNodeDiscovery)\n/* harmony export */ });\n/* harmony import */ var _waku_enr__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @waku/enr */ \"(ssr)/./node_modules/@waku/discovery/node_modules/@waku/enr/dist/index.js\");\n/* harmony import */ var _waku_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @waku/utils */ \"(ssr)/./node_modules/@waku/utils/dist/index.js\");\n/* harmony import */ var _dns_over_https_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./dns_over_https.js */ \"(ssr)/./node_modules/@waku/discovery/dist/dns/dns_over_https.js\");\n/* harmony import */ var _enrtree_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./enrtree.js */ \"(ssr)/./node_modules/@waku/discovery/dist/dns/enrtree.js\");\n/* harmony import */ var _fetch_nodes_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./fetch_nodes.js */ \"(ssr)/./node_modules/@waku/discovery/dist/dns/fetch_nodes.js\");\n\n\n\n\n\nconst log = new _waku_utils__WEBPACK_IMPORTED_MODULE_1__.Logger(\"discovery:dns\");\nclass DnsNodeDiscovery {\n    static async dnsOverHttp(dnsClient) {\n        if (!dnsClient) {\n            dnsClient = await _dns_over_https_js__WEBPACK_IMPORTED_MODULE_2__.DnsOverHttps.create();\n        }\n        return new DnsNodeDiscovery(dnsClient);\n    }\n    /**\n     * Returns a list of verified peers listed in an EIP-1459 DNS tree. Method may\n     * return fewer peers than requested if @link wantedNodeCapabilityCount requires\n     * larger quantity of peers than available or the number of errors/duplicate\n     * peers encountered by randomized search exceeds the sum of the fields of\n     * @link wantedNodeCapabilityCount plus the @link _errorTolerance factor.\n     */ async getPeers(enrTreeUrls, wantedNodeCapabilityCount) {\n        const networkIndex = Math.floor(Math.random() * enrTreeUrls.length);\n        const { publicKey, domain } = _enrtree_js__WEBPACK_IMPORTED_MODULE_3__.ENRTree.parseTree(enrTreeUrls[networkIndex]);\n        const context = {\n            domain,\n            publicKey,\n            visits: {}\n        };\n        const peers = await (0,_fetch_nodes_js__WEBPACK_IMPORTED_MODULE_4__.fetchNodesUntilCapabilitiesFulfilled)(wantedNodeCapabilityCount, this._errorTolerance, ()=>this._search(domain, context));\n        log.info(\"retrieved peers: \", peers.map((peer)=>{\n            return {\n                id: peer.peerId?.toString(),\n                multiaddrs: peer.multiaddrs?.map((ma)=>ma.toString())\n            };\n        }));\n        return peers;\n    }\n    constructor(dns){\n        this._errorTolerance = 10;\n        this._DNSTreeCache = {};\n        this.dns = dns;\n    }\n    /**\n     * {@inheritDoc getPeers}\n     */ async *getNextPeer(enrTreeUrls, wantedNodeCapabilityCount) {\n        const networkIndex = Math.floor(Math.random() * enrTreeUrls.length);\n        const { publicKey, domain } = _enrtree_js__WEBPACK_IMPORTED_MODULE_3__.ENRTree.parseTree(enrTreeUrls[networkIndex]);\n        const context = {\n            domain,\n            publicKey,\n            visits: {}\n        };\n        for await (const peer of (0,_fetch_nodes_js__WEBPACK_IMPORTED_MODULE_4__.yieldNodesUntilCapabilitiesFulfilled)(wantedNodeCapabilityCount, this._errorTolerance, ()=>this._search(domain, context))){\n            yield peer;\n        }\n    }\n    /**\n     * Runs a recursive, randomized descent of the DNS tree to retrieve a single\n     * ENR record as an ENR. Returns null if parsing or DNS resolution fails.\n     */ async _search(subdomain, context) {\n        try {\n            const entry = await this._getTXTRecord(subdomain, context);\n            context.visits[subdomain] = true;\n            let next;\n            let branches;\n            const entryType = getEntryType(entry);\n            try {\n                switch(entryType){\n                    case _enrtree_js__WEBPACK_IMPORTED_MODULE_3__.ENRTree.ROOT_PREFIX:\n                        next = _enrtree_js__WEBPACK_IMPORTED_MODULE_3__.ENRTree.parseAndVerifyRoot(entry, context.publicKey);\n                        return await this._search(next, context);\n                    case _enrtree_js__WEBPACK_IMPORTED_MODULE_3__.ENRTree.BRANCH_PREFIX:\n                        branches = _enrtree_js__WEBPACK_IMPORTED_MODULE_3__.ENRTree.parseBranch(entry);\n                        next = selectRandomPath(branches, context);\n                        return await this._search(next, context);\n                    case _enrtree_js__WEBPACK_IMPORTED_MODULE_3__.ENRTree.RECORD_PREFIX:\n                        return _waku_enr__WEBPACK_IMPORTED_MODULE_0__.EnrDecoder.fromString(entry);\n                    default:\n                        return null;\n                }\n            } catch (error) {\n                log.error(`Failed to search DNS tree ${entryType} at subdomain ${subdomain}: ${error}`);\n                return null;\n            }\n        } catch (error) {\n            log.error(`Failed to retrieve TXT record at subdomain ${subdomain}: ${error}`);\n            return null;\n        }\n    }\n    /**\n     * Retrieves the TXT record stored at a location from either\n     * this DNS tree cache or via DNS query.\n     *\n     * @throws if the TXT Record contains non-UTF-8 values.\n     */ async _getTXTRecord(subdomain, context) {\n        if (this._DNSTreeCache[subdomain]) {\n            return this._DNSTreeCache[subdomain];\n        }\n        // Location is either the top level tree entry host or a subdomain of it.\n        const location = subdomain !== context.domain ? `${subdomain}.${context.domain}` : context.domain;\n        const response = await this.dns.resolveTXT(location);\n        if (!response.length) throw new Error(\"Received empty result array while fetching TXT record\");\n        if (!response[0].length) throw new Error(\"Received empty TXT record\");\n        // Branch entries can be an array of strings of comma delimited subdomains, with\n        // some subdomain strings split across the array elements\n        const result = response.join(\"\");\n        this._DNSTreeCache[subdomain] = result;\n        return result;\n    }\n}\nfunction getEntryType(entry) {\n    if (entry.startsWith(_enrtree_js__WEBPACK_IMPORTED_MODULE_3__.ENRTree.ROOT_PREFIX)) return _enrtree_js__WEBPACK_IMPORTED_MODULE_3__.ENRTree.ROOT_PREFIX;\n    if (entry.startsWith(_enrtree_js__WEBPACK_IMPORTED_MODULE_3__.ENRTree.BRANCH_PREFIX)) return _enrtree_js__WEBPACK_IMPORTED_MODULE_3__.ENRTree.BRANCH_PREFIX;\n    if (entry.startsWith(_enrtree_js__WEBPACK_IMPORTED_MODULE_3__.ENRTree.RECORD_PREFIX)) return _enrtree_js__WEBPACK_IMPORTED_MODULE_3__.ENRTree.RECORD_PREFIX;\n    return \"\";\n}\n/**\n * Returns a randomly selected subdomain string from the list provided by a branch\n * entry record.\n *\n * The client must track subdomains which are already resolved to avoid\n * going into an infinite loop b/c branch entries can contain\n * circular references. It’s in the client’s best interest to traverse the\n * tree in random order.\n */ function selectRandomPath(branches, context) {\n    // Identify domains already visited in this traversal of the DNS tree.\n    // Then filter against them to prevent cycles.\n    const circularRefs = {};\n    for (const [idx, subdomain] of branches.entries()){\n        if (context.visits[subdomain]) {\n            circularRefs[idx] = true;\n        }\n    }\n    // If all possible paths are circular...\n    if (Object.keys(circularRefs).length === branches.length) {\n        throw new Error(\"Unresolvable circular path detected\");\n    }\n    // Randomly select a viable path\n    let index;\n    do {\n        index = Math.floor(Math.random() * branches.length);\n    }while (circularRefs[index]);\n    return branches[index];\n} //# sourceMappingURL=dns.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/discovery/dist/dns/dns.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/discovery/dist/dns/dns_discovery.js":
/*!****************************************************************!*\
  !*** ./node_modules/@waku/discovery/dist/dns/dns_discovery.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PeerDiscoveryDns: () => (/* binding */ PeerDiscoveryDns),\n/* harmony export */   wakuDnsDiscovery: () => (/* binding */ wakuDnsDiscovery)\n/* harmony export */ });\n/* harmony import */ var _libp2p_interface__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @libp2p/interface */ \"(ssr)/./node_modules/@libp2p/interface/dist/src/event-target.js\");\n/* harmony import */ var _libp2p_interface__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @libp2p/interface */ \"(ssr)/./node_modules/@libp2p/interface/dist/src/peer-discovery/index.js\");\n/* harmony import */ var _waku_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @waku/utils */ \"(ssr)/./node_modules/@waku/utils/dist/index.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./constants.js */ \"(ssr)/./node_modules/@waku/discovery/dist/dns/constants.js\");\n/* harmony import */ var _dns_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./dns.js */ \"(ssr)/./node_modules/@waku/discovery/dist/dns/dns.js\");\n\n\n\n\n\nconst log = new _waku_utils__WEBPACK_IMPORTED_MODULE_0__.Logger(\"peer-discovery-dns\");\n/**\n * Parse options and expose function to return bootstrap peer addresses.\n */ class PeerDiscoveryDns extends _libp2p_interface__WEBPACK_IMPORTED_MODULE_3__.TypedEventEmitter {\n    constructor(components, options){\n        super();\n        this._started = false;\n        this._components = components;\n        this._options = options;\n        const { enrUrls } = options;\n        log.info(\"Use following EIP-1459 ENR Tree URLs: \", enrUrls);\n    }\n    /**\n     * Start discovery process\n     */ async start() {\n        log.info(\"Starting peer discovery via dns\");\n        this._started = true;\n        if (this.nextPeer === undefined) {\n            let { enrUrls } = this._options;\n            if (!Array.isArray(enrUrls)) enrUrls = [\n                enrUrls\n            ];\n            const { wantedNodeCapabilityCount } = this._options;\n            const dns = await _dns_js__WEBPACK_IMPORTED_MODULE_2__.DnsNodeDiscovery.dnsOverHttp();\n            this.nextPeer = dns.getNextPeer.bind(dns, enrUrls, wantedNodeCapabilityCount);\n        }\n        for await (const peerEnr of this.nextPeer()){\n            if (!this._started) {\n                return;\n            }\n            const { peerInfo, shardInfo } = peerEnr;\n            if (!peerInfo) {\n                continue;\n            }\n            const tagsToUpdate = {\n                [_constants_js__WEBPACK_IMPORTED_MODULE_1__.DEFAULT_BOOTSTRAP_TAG_NAME]: {\n                    value: this._options.tagValue ?? _constants_js__WEBPACK_IMPORTED_MODULE_1__.DEFAULT_BOOTSTRAP_TAG_VALUE,\n                    ttl: this._options.tagTTL ?? _constants_js__WEBPACK_IMPORTED_MODULE_1__.DEFAULT_BOOTSTRAP_TAG_TTL\n                }\n            };\n            let isPeerChanged = false;\n            const isPeerExists = await this._components.peerStore.has(peerInfo.id);\n            if (isPeerExists) {\n                const peer = await this._components.peerStore.get(peerInfo.id);\n                const hasBootstrapTag = peer.tags.has(_constants_js__WEBPACK_IMPORTED_MODULE_1__.DEFAULT_BOOTSTRAP_TAG_NAME);\n                if (!hasBootstrapTag) {\n                    isPeerChanged = true;\n                    await this._components.peerStore.merge(peerInfo.id, {\n                        tags: tagsToUpdate\n                    });\n                }\n            } else {\n                isPeerChanged = true;\n                await this._components.peerStore.save(peerInfo.id, {\n                    tags: tagsToUpdate,\n                    ...shardInfo && {\n                        metadata: {\n                            shardInfo: (0,_waku_utils__WEBPACK_IMPORTED_MODULE_0__.encodeRelayShard)(shardInfo)\n                        }\n                    }\n                });\n            }\n            if (isPeerChanged) {\n                this.dispatchEvent(new _libp2p_interface__WEBPACK_IMPORTED_MODULE_3__.CustomEvent(\"peer\", {\n                    detail: peerInfo\n                }));\n            }\n        }\n    }\n    /**\n     * Stop emitting events\n     */ stop() {\n        this._started = false;\n    }\n    get [_libp2p_interface__WEBPACK_IMPORTED_MODULE_4__.peerDiscoverySymbol]() {\n        return true;\n    }\n    get [Symbol.toStringTag]() {\n        return \"@waku/bootstrap\";\n    }\n}\nfunction wakuDnsDiscovery(enrUrls, wantedNodeCapabilityCount = _constants_js__WEBPACK_IMPORTED_MODULE_1__.DEFAULT_NODE_REQUIREMENTS) {\n    return (components)=>new PeerDiscoveryDns(components, {\n            enrUrls,\n            wantedNodeCapabilityCount\n        });\n} //# sourceMappingURL=dns_discovery.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdha3UvZGlzY292ZXJ5L2Rpc3QvZG5zL2Ruc19kaXNjb3ZlcnkuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUFtRTtBQUNEO0FBQ1g7QUFDd0Y7QUFDbkc7QUFDNUMsTUFBTVcsTUFBTSxJQUFJTiwrQ0FBTUEsQ0FBQztBQUN2Qjs7Q0FFQyxHQUNNLE1BQU1PLHlCQUF5QlgsZ0VBQWlCQTtJQUtuRFksWUFBWUMsVUFBVSxFQUFFQyxPQUFPLENBQUU7UUFDN0IsS0FBSztRQUNMLElBQUksQ0FBQ0MsUUFBUSxHQUFHO1FBQ2hCLElBQUksQ0FBQ0MsV0FBVyxHQUFHSDtRQUNuQixJQUFJLENBQUNJLFFBQVEsR0FBR0g7UUFDaEIsTUFBTSxFQUFFSSxPQUFPLEVBQUUsR0FBR0o7UUFDcEJKLElBQUlTLElBQUksQ0FBQywwQ0FBMENEO0lBQ3ZEO0lBQ0E7O0tBRUMsR0FDRCxNQUFNRSxRQUFRO1FBQ1ZWLElBQUlTLElBQUksQ0FBQztRQUNULElBQUksQ0FBQ0osUUFBUSxHQUFHO1FBQ2hCLElBQUksSUFBSSxDQUFDTSxRQUFRLEtBQUtDLFdBQVc7WUFDN0IsSUFBSSxFQUFFSixPQUFPLEVBQUUsR0FBRyxJQUFJLENBQUNELFFBQVE7WUFDL0IsSUFBSSxDQUFDTSxNQUFNQyxPQUFPLENBQUNOLFVBQ2ZBLFVBQVU7Z0JBQUNBO2FBQVE7WUFDdkIsTUFBTSxFQUFFTyx5QkFBeUIsRUFBRSxHQUFHLElBQUksQ0FBQ1IsUUFBUTtZQUNuRCxNQUFNUyxNQUFNLE1BQU1qQixxREFBZ0JBLENBQUNrQixXQUFXO1lBQzlDLElBQUksQ0FBQ04sUUFBUSxHQUFHSyxJQUFJRSxXQUFXLENBQUNDLElBQUksQ0FBQ0gsS0FBS1IsU0FBU087UUFDdkQ7UUFDQSxXQUFXLE1BQU1LLFdBQVcsSUFBSSxDQUFDVCxRQUFRLEdBQUk7WUFDekMsSUFBSSxDQUFDLElBQUksQ0FBQ04sUUFBUSxFQUFFO2dCQUNoQjtZQUNKO1lBQ0EsTUFBTSxFQUFFZ0IsUUFBUSxFQUFFQyxTQUFTLEVBQUUsR0FBR0Y7WUFDaEMsSUFBSSxDQUFDQyxVQUFVO2dCQUNYO1lBQ0o7WUFDQSxNQUFNRSxlQUFlO2dCQUNqQixDQUFDNUIscUVBQTBCQSxDQUFDLEVBQUU7b0JBQzFCNkIsT0FBTyxJQUFJLENBQUNqQixRQUFRLENBQUNrQixRQUFRLElBQUk1QixzRUFBMkJBO29CQUM1RDZCLEtBQUssSUFBSSxDQUFDbkIsUUFBUSxDQUFDb0IsTUFBTSxJQUFJL0Isb0VBQXlCQTtnQkFDMUQ7WUFDSjtZQUNBLElBQUlnQyxnQkFBZ0I7WUFDcEIsTUFBTUMsZUFBZSxNQUFNLElBQUksQ0FBQ3ZCLFdBQVcsQ0FBQ3dCLFNBQVMsQ0FBQ0MsR0FBRyxDQUFDVixTQUFTVyxFQUFFO1lBQ3JFLElBQUlILGNBQWM7Z0JBQ2QsTUFBTUksT0FBTyxNQUFNLElBQUksQ0FBQzNCLFdBQVcsQ0FBQ3dCLFNBQVMsQ0FBQ0ksR0FBRyxDQUFDYixTQUFTVyxFQUFFO2dCQUM3RCxNQUFNRyxrQkFBa0JGLEtBQUtHLElBQUksQ0FBQ0wsR0FBRyxDQUFDcEMscUVBQTBCQTtnQkFDaEUsSUFBSSxDQUFDd0MsaUJBQWlCO29CQUNsQlAsZ0JBQWdCO29CQUNoQixNQUFNLElBQUksQ0FBQ3RCLFdBQVcsQ0FBQ3dCLFNBQVMsQ0FBQ08sS0FBSyxDQUFDaEIsU0FBU1csRUFBRSxFQUFFO3dCQUNoREksTUFBTWI7b0JBQ1Y7Z0JBQ0o7WUFDSixPQUNLO2dCQUNESyxnQkFBZ0I7Z0JBQ2hCLE1BQU0sSUFBSSxDQUFDdEIsV0FBVyxDQUFDd0IsU0FBUyxDQUFDUSxJQUFJLENBQUNqQixTQUFTVyxFQUFFLEVBQUU7b0JBQy9DSSxNQUFNYjtvQkFDTixHQUFJRCxhQUFhO3dCQUNiaUIsVUFBVTs0QkFDTmpCLFdBQVc3Qiw2REFBZ0JBLENBQUM2Qjt3QkFDaEM7b0JBQ0osQ0FBQztnQkFDTDtZQUNKO1lBQ0EsSUFBSU0sZUFBZTtnQkFDZixJQUFJLENBQUNZLGFBQWEsQ0FBQyxJQUFJbkQsMERBQVdBLENBQUMsUUFBUTtvQkFBRW9ELFFBQVFwQjtnQkFBUztZQUNsRTtRQUNKO0lBQ0o7SUFDQTs7S0FFQyxHQUNEcUIsT0FBTztRQUNILElBQUksQ0FBQ3JDLFFBQVEsR0FBRztJQUNwQjtJQUNBLElBQUksQ0FBQ2Isa0VBQU1BLENBQUMsR0FBRztRQUNYLE9BQU87SUFDWDtJQUNBLElBQUksQ0FBQ21ELE9BQU9DLFdBQVcsQ0FBQyxHQUFHO1FBQ3ZCLE9BQU87SUFDWDtBQUNKO0FBQ08sU0FBU0MsaUJBQWlCckMsT0FBTyxFQUFFTyw0QkFBNEJqQixvRUFBeUI7SUFDM0YsT0FBTyxDQUFDSyxhQUFlLElBQUlGLGlCQUFpQkUsWUFBWTtZQUFFSztZQUFTTztRQUEwQjtBQUNqRyxFQUNBLHlDQUF5QyIsInNvdXJjZXMiOlsid2VicGFjazovL2ZsdXNoLW5vdGVzLy4vbm9kZV9tb2R1bGVzL0B3YWt1L2Rpc2NvdmVyeS9kaXN0L2Rucy9kbnNfZGlzY292ZXJ5LmpzPzY4NmIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ3VzdG9tRXZlbnQsIFR5cGVkRXZlbnRFbWl0dGVyIH0gZnJvbSBcIkBsaWJwMnAvaW50ZXJmYWNlXCI7XG5pbXBvcnQgeyBwZWVyRGlzY292ZXJ5U3ltYm9sIGFzIHN5bWJvbCB9IGZyb20gXCJAbGlicDJwL2ludGVyZmFjZVwiO1xuaW1wb3J0IHsgZW5jb2RlUmVsYXlTaGFyZCwgTG9nZ2VyIH0gZnJvbSBcIkB3YWt1L3V0aWxzXCI7XG5pbXBvcnQgeyBERUZBVUxUX0JPT1RTVFJBUF9UQUdfTkFNRSwgREVGQVVMVF9CT09UU1RSQVBfVEFHX1RUTCwgREVGQVVMVF9CT09UU1RSQVBfVEFHX1ZBTFVFLCBERUZBVUxUX05PREVfUkVRVUlSRU1FTlRTIH0gZnJvbSBcIi4vY29uc3RhbnRzLmpzXCI7XG5pbXBvcnQgeyBEbnNOb2RlRGlzY292ZXJ5IH0gZnJvbSBcIi4vZG5zLmpzXCI7XG5jb25zdCBsb2cgPSBuZXcgTG9nZ2VyKFwicGVlci1kaXNjb3ZlcnktZG5zXCIpO1xuLyoqXG4gKiBQYXJzZSBvcHRpb25zIGFuZCBleHBvc2UgZnVuY3Rpb24gdG8gcmV0dXJuIGJvb3RzdHJhcCBwZWVyIGFkZHJlc3Nlcy5cbiAqL1xuZXhwb3J0IGNsYXNzIFBlZXJEaXNjb3ZlcnlEbnMgZXh0ZW5kcyBUeXBlZEV2ZW50RW1pdHRlciB7XG4gICAgbmV4dFBlZXI7XG4gICAgX3N0YXJ0ZWQ7XG4gICAgX2NvbXBvbmVudHM7XG4gICAgX29wdGlvbnM7XG4gICAgY29uc3RydWN0b3IoY29tcG9uZW50cywgb3B0aW9ucykge1xuICAgICAgICBzdXBlcigpO1xuICAgICAgICB0aGlzLl9zdGFydGVkID0gZmFsc2U7XG4gICAgICAgIHRoaXMuX2NvbXBvbmVudHMgPSBjb21wb25lbnRzO1xuICAgICAgICB0aGlzLl9vcHRpb25zID0gb3B0aW9ucztcbiAgICAgICAgY29uc3QgeyBlbnJVcmxzIH0gPSBvcHRpb25zO1xuICAgICAgICBsb2cuaW5mbyhcIlVzZSBmb2xsb3dpbmcgRUlQLTE0NTkgRU5SIFRyZWUgVVJMczogXCIsIGVuclVybHMpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBTdGFydCBkaXNjb3ZlcnkgcHJvY2Vzc1xuICAgICAqL1xuICAgIGFzeW5jIHN0YXJ0KCkge1xuICAgICAgICBsb2cuaW5mbyhcIlN0YXJ0aW5nIHBlZXIgZGlzY292ZXJ5IHZpYSBkbnNcIik7XG4gICAgICAgIHRoaXMuX3N0YXJ0ZWQgPSB0cnVlO1xuICAgICAgICBpZiAodGhpcy5uZXh0UGVlciA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICBsZXQgeyBlbnJVcmxzIH0gPSB0aGlzLl9vcHRpb25zO1xuICAgICAgICAgICAgaWYgKCFBcnJheS5pc0FycmF5KGVuclVybHMpKVxuICAgICAgICAgICAgICAgIGVuclVybHMgPSBbZW5yVXJsc107XG4gICAgICAgICAgICBjb25zdCB7IHdhbnRlZE5vZGVDYXBhYmlsaXR5Q291bnQgfSA9IHRoaXMuX29wdGlvbnM7XG4gICAgICAgICAgICBjb25zdCBkbnMgPSBhd2FpdCBEbnNOb2RlRGlzY292ZXJ5LmRuc092ZXJIdHRwKCk7XG4gICAgICAgICAgICB0aGlzLm5leHRQZWVyID0gZG5zLmdldE5leHRQZWVyLmJpbmQoZG5zLCBlbnJVcmxzLCB3YW50ZWROb2RlQ2FwYWJpbGl0eUNvdW50KTtcbiAgICAgICAgfVxuICAgICAgICBmb3IgYXdhaXQgKGNvbnN0IHBlZXJFbnIgb2YgdGhpcy5uZXh0UGVlcigpKSB7XG4gICAgICAgICAgICBpZiAoIXRoaXMuX3N0YXJ0ZWQpIHtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjb25zdCB7IHBlZXJJbmZvLCBzaGFyZEluZm8gfSA9IHBlZXJFbnI7XG4gICAgICAgICAgICBpZiAoIXBlZXJJbmZvKSB7XG4gICAgICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjb25zdCB0YWdzVG9VcGRhdGUgPSB7XG4gICAgICAgICAgICAgICAgW0RFRkFVTFRfQk9PVFNUUkFQX1RBR19OQU1FXToge1xuICAgICAgICAgICAgICAgICAgICB2YWx1ZTogdGhpcy5fb3B0aW9ucy50YWdWYWx1ZSA/PyBERUZBVUxUX0JPT1RTVFJBUF9UQUdfVkFMVUUsXG4gICAgICAgICAgICAgICAgICAgIHR0bDogdGhpcy5fb3B0aW9ucy50YWdUVEwgPz8gREVGQVVMVF9CT09UU1RSQVBfVEFHX1RUTFxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH07XG4gICAgICAgICAgICBsZXQgaXNQZWVyQ2hhbmdlZCA9IGZhbHNlO1xuICAgICAgICAgICAgY29uc3QgaXNQZWVyRXhpc3RzID0gYXdhaXQgdGhpcy5fY29tcG9uZW50cy5wZWVyU3RvcmUuaGFzKHBlZXJJbmZvLmlkKTtcbiAgICAgICAgICAgIGlmIChpc1BlZXJFeGlzdHMpIHtcbiAgICAgICAgICAgICAgICBjb25zdCBwZWVyID0gYXdhaXQgdGhpcy5fY29tcG9uZW50cy5wZWVyU3RvcmUuZ2V0KHBlZXJJbmZvLmlkKTtcbiAgICAgICAgICAgICAgICBjb25zdCBoYXNCb290c3RyYXBUYWcgPSBwZWVyLnRhZ3MuaGFzKERFRkFVTFRfQk9PVFNUUkFQX1RBR19OQU1FKTtcbiAgICAgICAgICAgICAgICBpZiAoIWhhc0Jvb3RzdHJhcFRhZykge1xuICAgICAgICAgICAgICAgICAgICBpc1BlZXJDaGFuZ2VkID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICAgICAgYXdhaXQgdGhpcy5fY29tcG9uZW50cy5wZWVyU3RvcmUubWVyZ2UocGVlckluZm8uaWQsIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRhZ3M6IHRhZ3NUb1VwZGF0ZVxuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICBpc1BlZXJDaGFuZ2VkID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICBhd2FpdCB0aGlzLl9jb21wb25lbnRzLnBlZXJTdG9yZS5zYXZlKHBlZXJJbmZvLmlkLCB7XG4gICAgICAgICAgICAgICAgICAgIHRhZ3M6IHRhZ3NUb1VwZGF0ZSxcbiAgICAgICAgICAgICAgICAgICAgLi4uKHNoYXJkSW5mbyAmJiB7XG4gICAgICAgICAgICAgICAgICAgICAgICBtZXRhZGF0YToge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNoYXJkSW5mbzogZW5jb2RlUmVsYXlTaGFyZChzaGFyZEluZm8pXG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoaXNQZWVyQ2hhbmdlZCkge1xuICAgICAgICAgICAgICAgIHRoaXMuZGlzcGF0Y2hFdmVudChuZXcgQ3VzdG9tRXZlbnQoXCJwZWVyXCIsIHsgZGV0YWlsOiBwZWVySW5mbyB9KSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgLyoqXG4gICAgICogU3RvcCBlbWl0dGluZyBldmVudHNcbiAgICAgKi9cbiAgICBzdG9wKCkge1xuICAgICAgICB0aGlzLl9zdGFydGVkID0gZmFsc2U7XG4gICAgfVxuICAgIGdldCBbc3ltYm9sXSgpIHtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuICAgIGdldCBbU3ltYm9sLnRvU3RyaW5nVGFnXSgpIHtcbiAgICAgICAgcmV0dXJuIFwiQHdha3UvYm9vdHN0cmFwXCI7XG4gICAgfVxufVxuZXhwb3J0IGZ1bmN0aW9uIHdha3VEbnNEaXNjb3ZlcnkoZW5yVXJscywgd2FudGVkTm9kZUNhcGFiaWxpdHlDb3VudCA9IERFRkFVTFRfTk9ERV9SRVFVSVJFTUVOVFMpIHtcbiAgICByZXR1cm4gKGNvbXBvbmVudHMpID0+IG5ldyBQZWVyRGlzY292ZXJ5RG5zKGNvbXBvbmVudHMsIHsgZW5yVXJscywgd2FudGVkTm9kZUNhcGFiaWxpdHlDb3VudCB9KTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRuc19kaXNjb3ZlcnkuanMubWFwIl0sIm5hbWVzIjpbIkN1c3RvbUV2ZW50IiwiVHlwZWRFdmVudEVtaXR0ZXIiLCJwZWVyRGlzY292ZXJ5U3ltYm9sIiwic3ltYm9sIiwiZW5jb2RlUmVsYXlTaGFyZCIsIkxvZ2dlciIsIkRFRkFVTFRfQk9PVFNUUkFQX1RBR19OQU1FIiwiREVGQVVMVF9CT09UU1RSQVBfVEFHX1RUTCIsIkRFRkFVTFRfQk9PVFNUUkFQX1RBR19WQUxVRSIsIkRFRkFVTFRfTk9ERV9SRVFVSVJFTUVOVFMiLCJEbnNOb2RlRGlzY292ZXJ5IiwibG9nIiwiUGVlckRpc2NvdmVyeURucyIsImNvbnN0cnVjdG9yIiwiY29tcG9uZW50cyIsIm9wdGlvbnMiLCJfc3RhcnRlZCIsIl9jb21wb25lbnRzIiwiX29wdGlvbnMiLCJlbnJVcmxzIiwiaW5mbyIsInN0YXJ0IiwibmV4dFBlZXIiLCJ1bmRlZmluZWQiLCJBcnJheSIsImlzQXJyYXkiLCJ3YW50ZWROb2RlQ2FwYWJpbGl0eUNvdW50IiwiZG5zIiwiZG5zT3Zlckh0dHAiLCJnZXROZXh0UGVlciIsImJpbmQiLCJwZWVyRW5yIiwicGVlckluZm8iLCJzaGFyZEluZm8iLCJ0YWdzVG9VcGRhdGUiLCJ2YWx1ZSIsInRhZ1ZhbHVlIiwidHRsIiwidGFnVFRMIiwiaXNQZWVyQ2hhbmdlZCIsImlzUGVlckV4aXN0cyIsInBlZXJTdG9yZSIsImhhcyIsImlkIiwicGVlciIsImdldCIsImhhc0Jvb3RzdHJhcFRhZyIsInRhZ3MiLCJtZXJnZSIsInNhdmUiLCJtZXRhZGF0YSIsImRpc3BhdGNoRXZlbnQiLCJkZXRhaWwiLCJzdG9wIiwiU3ltYm9sIiwidG9TdHJpbmdUYWciLCJ3YWt1RG5zRGlzY292ZXJ5Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/discovery/dist/dns/dns_discovery.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/discovery/dist/dns/dns_over_https.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@waku/discovery/dist/dns/dns_over_https.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DnsOverHttps: () => (/* binding */ DnsOverHttps)\n/* harmony export */ });\n/* harmony import */ var _waku_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @waku/utils */ \"(ssr)/./node_modules/@waku/utils/dist/index.js\");\n/* harmony import */ var _waku_utils_bytes__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @waku/utils/bytes */ \"(ssr)/./node_modules/@waku/utils/dist/bytes/index.js\");\n/* harmony import */ var dns_query__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! dns-query */ \"(ssr)/./node_modules/dns-query/index.mjs\");\n\n\n\nconst log = new _waku_utils__WEBPACK_IMPORTED_MODULE_0__.Logger(\"dns-over-https\");\nclass DnsOverHttps {\n    /**\n     * Create new Dns-Over-Http DNS client.\n     *\n     * @param endpoints The endpoints for Dns-Over-Https queries;\n     * Defaults to using dns-query's API..\n     * @param retries Retries if a given endpoint fails.\n     *\n     * @throws {code: string} If DNS query fails.\n     */ static async create(endpoints, retries) {\n        const _endpoints = endpoints ?? await dns_query__WEBPACK_IMPORTED_MODULE_2__.wellknown.endpoints(\"doh\");\n        return new DnsOverHttps(_endpoints, retries);\n    }\n    constructor(endpoints, retries = 3){\n        this.endpoints = endpoints;\n        this.retries = retries;\n    }\n    /**\n     * Resolves a TXT record\n     *\n     * @param domain The domain name\n     *\n     * @throws if the query fails\n     */ async resolveTXT(domain) {\n        let answers;\n        try {\n            const res = await (0,dns_query__WEBPACK_IMPORTED_MODULE_2__.query)({\n                question: {\n                    type: \"TXT\",\n                    name: domain\n                }\n            }, {\n                endpoints: this.endpoints,\n                retries: this.retries\n            });\n            answers = res.answers;\n        } catch (error) {\n            log.error(\"query failed: \", error);\n            throw new Error(\"DNS query failed\");\n        }\n        if (!answers) throw new Error(`Could not resolve ${domain}`);\n        const data = answers.map((a)=>a.data);\n        const result = [];\n        data.forEach((d)=>{\n            if (typeof d === \"string\") {\n                result.push(d);\n            } else if (Array.isArray(d)) {\n                d.forEach((sd)=>{\n                    if (typeof sd === \"string\") {\n                        result.push(sd);\n                    } else {\n                        result.push((0,_waku_utils_bytes__WEBPACK_IMPORTED_MODULE_1__.bytesToUtf8)(sd));\n                    }\n                });\n            } else {\n                result.push((0,_waku_utils_bytes__WEBPACK_IMPORTED_MODULE_1__.bytesToUtf8)(d));\n            }\n        });\n        return result;\n    }\n} //# sourceMappingURL=dns_over_https.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdha3UvZGlzY292ZXJ5L2Rpc3QvZG5zL2Ruc19vdmVyX2h0dHBzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBcUM7QUFDVztBQUNIO0FBQzdDLE1BQU1JLE1BQU0sSUFBSUosK0NBQU1BLENBQUM7QUFDaEIsTUFBTUs7SUFHVDs7Ozs7Ozs7S0FRQyxHQUNELGFBQWFDLE9BQU9DLFNBQVMsRUFBRUMsT0FBTyxFQUFFO1FBQ3BDLE1BQU1DLGFBQWFGLGFBQWMsTUFBTUosZ0RBQVNBLENBQUNJLFNBQVMsQ0FBQztRQUMzRCxPQUFPLElBQUlGLGFBQWFJLFlBQVlEO0lBQ3hDO0lBQ0FFLFlBQVlILFNBQVMsRUFBRUMsVUFBVSxDQUFDLENBQUU7UUFDaEMsSUFBSSxDQUFDRCxTQUFTLEdBQUdBO1FBQ2pCLElBQUksQ0FBQ0MsT0FBTyxHQUFHQTtJQUNuQjtJQUNBOzs7Ozs7S0FNQyxHQUNELE1BQU1HLFdBQVdDLE1BQU0sRUFBRTtRQUNyQixJQUFJQztRQUNKLElBQUk7WUFDQSxNQUFNQyxNQUFNLE1BQU1aLGdEQUFLQSxDQUFDO2dCQUNwQmEsVUFBVTtvQkFBRUMsTUFBTTtvQkFBT0MsTUFBTUw7Z0JBQU87WUFDMUMsR0FBRztnQkFDQ0wsV0FBVyxJQUFJLENBQUNBLFNBQVM7Z0JBQ3pCQyxTQUFTLElBQUksQ0FBQ0EsT0FBTztZQUN6QjtZQUNBSyxVQUFVQyxJQUFJRCxPQUFPO1FBQ3pCLEVBQ0EsT0FBT0ssT0FBTztZQUNWZCxJQUFJYyxLQUFLLENBQUMsa0JBQWtCQTtZQUM1QixNQUFNLElBQUlDLE1BQU07UUFDcEI7UUFDQSxJQUFJLENBQUNOLFNBQ0QsTUFBTSxJQUFJTSxNQUFNLENBQUMsa0JBQWtCLEVBQUVQLE9BQU8sQ0FBQztRQUNqRCxNQUFNUSxPQUFPUCxRQUFRUSxHQUFHLENBQUMsQ0FBQ0MsSUFBTUEsRUFBRUYsSUFBSTtRQUN0QyxNQUFNRyxTQUFTLEVBQUU7UUFDakJILEtBQUtJLE9BQU8sQ0FBQyxDQUFDQztZQUNWLElBQUksT0FBT0EsTUFBTSxVQUFVO2dCQUN2QkYsT0FBT0csSUFBSSxDQUFDRDtZQUNoQixPQUNLLElBQUlFLE1BQU1DLE9BQU8sQ0FBQ0gsSUFBSTtnQkFDdkJBLEVBQUVELE9BQU8sQ0FBQyxDQUFDSztvQkFDUCxJQUFJLE9BQU9BLE9BQU8sVUFBVTt3QkFDeEJOLE9BQU9HLElBQUksQ0FBQ0c7b0JBQ2hCLE9BQ0s7d0JBQ0ROLE9BQU9HLElBQUksQ0FBQ3pCLDhEQUFXQSxDQUFDNEI7b0JBQzVCO2dCQUNKO1lBQ0osT0FDSztnQkFDRE4sT0FBT0csSUFBSSxDQUFDekIsOERBQVdBLENBQUN3QjtZQUM1QjtRQUNKO1FBQ0EsT0FBT0Y7SUFDWDtBQUNKLEVBQ0EsMENBQTBDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZmx1c2gtbm90ZXMvLi9ub2RlX21vZHVsZXMvQHdha3UvZGlzY292ZXJ5L2Rpc3QvZG5zL2Ruc19vdmVyX2h0dHBzLmpzP2MzZmEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTG9nZ2VyIH0gZnJvbSBcIkB3YWt1L3V0aWxzXCI7XG5pbXBvcnQgeyBieXRlc1RvVXRmOCB9IGZyb20gXCJAd2FrdS91dGlscy9ieXRlc1wiO1xuaW1wb3J0IHsgcXVlcnksIHdlbGxrbm93biB9IGZyb20gXCJkbnMtcXVlcnlcIjtcbmNvbnN0IGxvZyA9IG5ldyBMb2dnZXIoXCJkbnMtb3Zlci1odHRwc1wiKTtcbmV4cG9ydCBjbGFzcyBEbnNPdmVySHR0cHMge1xuICAgIGVuZHBvaW50cztcbiAgICByZXRyaWVzO1xuICAgIC8qKlxuICAgICAqIENyZWF0ZSBuZXcgRG5zLU92ZXItSHR0cCBETlMgY2xpZW50LlxuICAgICAqXG4gICAgICogQHBhcmFtIGVuZHBvaW50cyBUaGUgZW5kcG9pbnRzIGZvciBEbnMtT3Zlci1IdHRwcyBxdWVyaWVzO1xuICAgICAqIERlZmF1bHRzIHRvIHVzaW5nIGRucy1xdWVyeSdzIEFQSS4uXG4gICAgICogQHBhcmFtIHJldHJpZXMgUmV0cmllcyBpZiBhIGdpdmVuIGVuZHBvaW50IGZhaWxzLlxuICAgICAqXG4gICAgICogQHRocm93cyB7Y29kZTogc3RyaW5nfSBJZiBETlMgcXVlcnkgZmFpbHMuXG4gICAgICovXG4gICAgc3RhdGljIGFzeW5jIGNyZWF0ZShlbmRwb2ludHMsIHJldHJpZXMpIHtcbiAgICAgICAgY29uc3QgX2VuZHBvaW50cyA9IGVuZHBvaW50cyA/PyAoYXdhaXQgd2VsbGtub3duLmVuZHBvaW50cyhcImRvaFwiKSk7XG4gICAgICAgIHJldHVybiBuZXcgRG5zT3Zlckh0dHBzKF9lbmRwb2ludHMsIHJldHJpZXMpO1xuICAgIH1cbiAgICBjb25zdHJ1Y3RvcihlbmRwb2ludHMsIHJldHJpZXMgPSAzKSB7XG4gICAgICAgIHRoaXMuZW5kcG9pbnRzID0gZW5kcG9pbnRzO1xuICAgICAgICB0aGlzLnJldHJpZXMgPSByZXRyaWVzO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBSZXNvbHZlcyBhIFRYVCByZWNvcmRcbiAgICAgKlxuICAgICAqIEBwYXJhbSBkb21haW4gVGhlIGRvbWFpbiBuYW1lXG4gICAgICpcbiAgICAgKiBAdGhyb3dzIGlmIHRoZSBxdWVyeSBmYWlsc1xuICAgICAqL1xuICAgIGFzeW5jIHJlc29sdmVUWFQoZG9tYWluKSB7XG4gICAgICAgIGxldCBhbnN3ZXJzO1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgY29uc3QgcmVzID0gYXdhaXQgcXVlcnkoe1xuICAgICAgICAgICAgICAgIHF1ZXN0aW9uOiB7IHR5cGU6IFwiVFhUXCIsIG5hbWU6IGRvbWFpbiB9XG4gICAgICAgICAgICB9LCB7XG4gICAgICAgICAgICAgICAgZW5kcG9pbnRzOiB0aGlzLmVuZHBvaW50cyxcbiAgICAgICAgICAgICAgICByZXRyaWVzOiB0aGlzLnJldHJpZXNcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgYW5zd2VycyA9IHJlcy5hbnN3ZXJzO1xuICAgICAgICB9XG4gICAgICAgIGNhdGNoIChlcnJvcikge1xuICAgICAgICAgICAgbG9nLmVycm9yKFwicXVlcnkgZmFpbGVkOiBcIiwgZXJyb3IpO1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiRE5TIHF1ZXJ5IGZhaWxlZFwiKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoIWFuc3dlcnMpXG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYENvdWxkIG5vdCByZXNvbHZlICR7ZG9tYWlufWApO1xuICAgICAgICBjb25zdCBkYXRhID0gYW5zd2Vycy5tYXAoKGEpID0+IGEuZGF0YSk7XG4gICAgICAgIGNvbnN0IHJlc3VsdCA9IFtdO1xuICAgICAgICBkYXRhLmZvckVhY2goKGQpID0+IHtcbiAgICAgICAgICAgIGlmICh0eXBlb2YgZCA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgICAgICAgICAgIHJlc3VsdC5wdXNoKGQpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSBpZiAoQXJyYXkuaXNBcnJheShkKSkge1xuICAgICAgICAgICAgICAgIGQuZm9yRWFjaCgoc2QpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBzZCA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmVzdWx0LnB1c2goc2QpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmVzdWx0LnB1c2goYnl0ZXNUb1V0Zjgoc2QpKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgcmVzdWx0LnB1c2goYnl0ZXNUb1V0ZjgoZCkpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1kbnNfb3Zlcl9odHRwcy5qcy5tYXAiXSwibmFtZXMiOlsiTG9nZ2VyIiwiYnl0ZXNUb1V0ZjgiLCJxdWVyeSIsIndlbGxrbm93biIsImxvZyIsIkRuc092ZXJIdHRwcyIsImNyZWF0ZSIsImVuZHBvaW50cyIsInJldHJpZXMiLCJfZW5kcG9pbnRzIiwiY29uc3RydWN0b3IiLCJyZXNvbHZlVFhUIiwiZG9tYWluIiwiYW5zd2VycyIsInJlcyIsInF1ZXN0aW9uIiwidHlwZSIsIm5hbWUiLCJlcnJvciIsIkVycm9yIiwiZGF0YSIsIm1hcCIsImEiLCJyZXN1bHQiLCJmb3JFYWNoIiwiZCIsInB1c2giLCJBcnJheSIsImlzQXJyYXkiLCJzZCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/discovery/dist/dns/dns_over_https.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/discovery/dist/dns/enrtree.js":
/*!**********************************************************!*\
  !*** ./node_modules/@waku/discovery/dist/dns/enrtree.js ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ENRTree: () => (/* binding */ ENRTree)\n/* harmony export */ });\n/* harmony import */ var _waku_enr__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @waku/enr */ \"(ssr)/./node_modules/@waku/discovery/node_modules/@waku/enr/dist/index.js\");\n/* harmony import */ var _waku_utils_bytes__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @waku/utils/bytes */ \"(ssr)/./node_modules/@waku/utils/dist/bytes/index.js\");\n/* harmony import */ var hi_base32__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! hi-base32 */ \"(ssr)/./node_modules/hi-base32/src/base32.js\");\n/* harmony import */ var uint8arrays_from_string__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! uint8arrays/from-string */ \"(ssr)/./node_modules/uint8arrays/dist/src/from-string.node.js\");\n\n\n\n\n\nclass ENRTree {\n    static{\n        this.RECORD_PREFIX = _waku_enr__WEBPACK_IMPORTED_MODULE_0__.ENR.RECORD_PREFIX;\n    }\n    static{\n        this.TREE_PREFIX = \"enrtree:\";\n    }\n    static{\n        this.BRANCH_PREFIX = \"enrtree-branch:\";\n    }\n    static{\n        this.ROOT_PREFIX = \"enrtree-root:\";\n    }\n    /**\n     * Extracts the branch subdomain referenced by a DNS tree root string after verifying\n     * the root record signature with its base32 compressed public key.\n     */ static parseAndVerifyRoot(root, publicKey) {\n        if (!root.startsWith(this.ROOT_PREFIX)) throw new Error(`ENRTree root entry must start with '${this.ROOT_PREFIX}'`);\n        const rootValues = ENRTree.parseRootValues(root);\n        const decodedPublicKey = hi_base32__WEBPACK_IMPORTED_MODULE_2__.decode.asBytes(publicKey);\n        // The signature is a 65-byte secp256k1 over the keccak256 hash\n        // of the record content, excluding the `sig=` part, encoded as URL-safe base64 string\n        // (Trailing recovery bit must be trimmed to pass `ecdsaVerify` method)\n        const signedComponent = root.split(\" sig\")[0];\n        const signedComponentBuffer = (0,_waku_utils_bytes__WEBPACK_IMPORTED_MODULE_1__.utf8ToBytes)(signedComponent);\n        const signatureBuffer = (0,uint8arrays_from_string__WEBPACK_IMPORTED_MODULE_3__.fromString)(rootValues.signature, \"base64url\").slice(0, 64);\n        const isVerified = (0,_waku_enr__WEBPACK_IMPORTED_MODULE_0__.verifySignature)(signatureBuffer, (0,_waku_enr__WEBPACK_IMPORTED_MODULE_0__.keccak256)(signedComponentBuffer), new Uint8Array(decodedPublicKey));\n        if (!isVerified) throw new Error(\"Unable to verify ENRTree root signature\");\n        return rootValues.eRoot;\n    }\n    static parseRootValues(txt) {\n        const matches = txt.match(/^enrtree-root:v1 e=([^ ]+) l=([^ ]+) seq=(\\d+) sig=([^ ]+)$/);\n        if (!Array.isArray(matches)) throw new Error(\"Could not parse ENRTree root entry\");\n        matches.shift(); // The first entry is the full match\n        const [eRoot, lRoot, seq, signature] = matches;\n        if (!eRoot) throw new Error(\"Could not parse 'e' value from ENRTree root entry\");\n        if (!lRoot) throw new Error(\"Could not parse 'l' value from ENRTree root entry\");\n        if (!seq) throw new Error(\"Could not parse 'seq' value from ENRTree root entry\");\n        if (!signature) throw new Error(\"Could not parse 'sig' value from ENRTree root entry\");\n        return {\n            eRoot,\n            lRoot,\n            seq: Number(seq),\n            signature\n        };\n    }\n    /**\n     * Returns the public key and top level domain of an ENR tree entry.\n     * The domain is the starting point for traversing a set of linked DNS TXT records\n     * and the public key is used to verify the root entry record\n     */ static parseTree(tree) {\n        if (!tree.startsWith(this.TREE_PREFIX)) throw new Error(`ENRTree tree entry must start with '${this.TREE_PREFIX}'`);\n        const matches = tree.match(/^enrtree:\\/\\/([^@]+)@(.+)$/);\n        if (!Array.isArray(matches)) throw new Error(\"Could not parse ENRTree tree entry\");\n        matches.shift(); // The first entry is the full match\n        const [publicKey, domain] = matches;\n        if (!publicKey) throw new Error(\"Could not parse public key from ENRTree tree entry\");\n        if (!domain) throw new Error(\"Could not parse domain from ENRTree tree entry\");\n        return {\n            publicKey,\n            domain\n        };\n    }\n    /**\n     * Returns subdomains listed in an ENR branch entry. These in turn lead to\n     * either further branch entries or ENR records.\n     */ static parseBranch(branch) {\n        if (!branch.startsWith(this.BRANCH_PREFIX)) throw new Error(`ENRTree branch entry must start with '${this.BRANCH_PREFIX}'`);\n        return branch.split(this.BRANCH_PREFIX)[1].split(\",\");\n    }\n} //# sourceMappingURL=enrtree.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/discovery/dist/dns/enrtree.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/discovery/dist/dns/fetch_nodes.js":
/*!**************************************************************!*\
  !*** ./node_modules/@waku/discovery/dist/dns/fetch_nodes.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   fetchNodesUntilCapabilitiesFulfilled: () => (/* binding */ fetchNodesUntilCapabilitiesFulfilled),\n/* harmony export */   yieldNodesUntilCapabilitiesFulfilled: () => (/* binding */ yieldNodesUntilCapabilitiesFulfilled)\n/* harmony export */ });\n/* harmony import */ var _waku_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @waku/utils */ \"(ssr)/./node_modules/@waku/utils/dist/index.js\");\n\nconst log = new _waku_utils__WEBPACK_IMPORTED_MODULE_0__.Logger(\"discovery:fetch_nodes\");\n/**\n * Fetch nodes using passed [[getNode]] until all wanted capabilities are\n * fulfilled or the number of [[getNode]] call exceeds the sum of\n * [[wantedNodeCapabilityCount]] plus [[errorTolerance]].\n */ async function fetchNodesUntilCapabilitiesFulfilled(wantedNodeCapabilityCount, errorTolerance, getNode) {\n    const wanted = {\n        relay: wantedNodeCapabilityCount.relay ?? 0,\n        store: wantedNodeCapabilityCount.store ?? 0,\n        filter: wantedNodeCapabilityCount.filter ?? 0,\n        lightPush: wantedNodeCapabilityCount.lightPush ?? 0\n    };\n    const maxSearches = wanted.relay + wanted.store + wanted.filter + wanted.lightPush;\n    const actual = {\n        relay: 0,\n        store: 0,\n        filter: 0,\n        lightPush: 0\n    };\n    let totalSearches = 0;\n    const peers = [];\n    while(!isSatisfied(wanted, actual) && totalSearches < maxSearches + errorTolerance){\n        const peer = await getNode();\n        if (peer && isNewPeer(peer, peers)) {\n            // ENRs without a waku2 key are ignored.\n            if (peer.waku2) {\n                if (helpsSatisfyCapabilities(peer.waku2, wanted, actual)) {\n                    addCapabilities(peer.waku2, actual);\n                    peers.push(peer);\n                }\n            }\n            log.info(`got new peer candidate from DNS address=${peer.nodeId}@${peer.ip}`);\n        }\n        totalSearches++;\n    }\n    return peers;\n}\n/**\n * Fetch nodes using passed [[getNode]] until all wanted capabilities are\n * fulfilled or the number of [[getNode]] call exceeds the sum of\n * [[wantedNodeCapabilityCount]] plus [[errorTolerance]].\n */ async function* yieldNodesUntilCapabilitiesFulfilled(wantedNodeCapabilityCount, errorTolerance, getNode) {\n    const wanted = {\n        relay: wantedNodeCapabilityCount.relay ?? 0,\n        store: wantedNodeCapabilityCount.store ?? 0,\n        filter: wantedNodeCapabilityCount.filter ?? 0,\n        lightPush: wantedNodeCapabilityCount.lightPush ?? 0\n    };\n    const maxSearches = wanted.relay + wanted.store + wanted.filter + wanted.lightPush;\n    const actual = {\n        relay: 0,\n        store: 0,\n        filter: 0,\n        lightPush: 0\n    };\n    let totalSearches = 0;\n    const peerNodeIds = new Set();\n    while(!isSatisfied(wanted, actual) && totalSearches < maxSearches + errorTolerance){\n        const peer = await getNode();\n        if (peer && peer.nodeId && !peerNodeIds.has(peer.nodeId)) {\n            peerNodeIds.add(peer.nodeId);\n            // ENRs without a waku2 key are ignored.\n            if (peer.waku2) {\n                if (helpsSatisfyCapabilities(peer.waku2, wanted, actual)) {\n                    addCapabilities(peer.waku2, actual);\n                    yield peer;\n                }\n            }\n            log.info(`got new peer candidate from DNS address=${peer.nodeId}@${peer.ip}`);\n        }\n        totalSearches++;\n    }\n}\nfunction isSatisfied(wanted, actual) {\n    return actual.relay >= wanted.relay && actual.store >= wanted.store && actual.filter >= wanted.filter && actual.lightPush >= wanted.lightPush;\n}\nfunction isNewPeer(peer, peers) {\n    if (!peer.nodeId) return false;\n    for (const existingPeer of peers){\n        if (peer.nodeId === existingPeer.nodeId) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction addCapabilities(node, total) {\n    if (node.relay) total.relay += 1;\n    if (node.store) total.store += 1;\n    if (node.filter) total.filter += 1;\n    if (node.lightPush) total.lightPush += 1;\n}\n/**\n * Checks if the proposed ENR [[node]] helps satisfy the [[wanted]] capabilities,\n * considering the [[actual]] capabilities of nodes retrieved so far..\n *\n * @throws If the function is called when the wanted capabilities are already fulfilled.\n */ function helpsSatisfyCapabilities(node, wanted, actual) {\n    if (isSatisfied(wanted, actual)) {\n        throw \"Internal Error: Waku2 wanted capabilities are already fulfilled\";\n    }\n    const missing = missingCapabilities(wanted, actual);\n    return missing.relay && node.relay || missing.store && node.store || missing.filter && node.filter || missing.lightPush && node.lightPush;\n}\n/**\n * Return a [[Waku2]] Object for which capabilities are set to true if they are\n * [[wanted]] yet missing from [[actual]].\n */ function missingCapabilities(wanted, actual) {\n    return {\n        relay: actual.relay < wanted.relay,\n        store: actual.store < wanted.store,\n        filter: actual.filter < wanted.filter,\n        lightPush: actual.lightPush < wanted.lightPush\n    };\n} //# sourceMappingURL=fetch_nodes.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/discovery/dist/dns/fetch_nodes.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/discovery/dist/index.js":
/*!****************************************************!*\
  !*** ./node_modules/@waku/discovery/dist/index.js ***!
  \****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DnsNodeDiscovery: () => (/* reexport safe */ _dns_dns_js__WEBPACK_IMPORTED_MODULE_2__.DnsNodeDiscovery),\n/* harmony export */   LocalPeerCacheDiscovery: () => (/* reexport safe */ _local_peer_cache_index_js__WEBPACK_IMPORTED_MODULE_5__.LocalPeerCacheDiscovery),\n/* harmony export */   PeerDiscoveryDns: () => (/* reexport safe */ _dns_dns_discovery_js__WEBPACK_IMPORTED_MODULE_0__.PeerDiscoveryDns),\n/* harmony export */   PeerExchangeCodec: () => (/* reexport safe */ _peer_exchange_waku_peer_exchange_js__WEBPACK_IMPORTED_MODULE_3__.PeerExchangeCodec),\n/* harmony export */   PeerExchangeDiscovery: () => (/* reexport safe */ _peer_exchange_waku_peer_exchange_discovery_js__WEBPACK_IMPORTED_MODULE_4__.PeerExchangeDiscovery),\n/* harmony export */   WakuPeerExchange: () => (/* reexport safe */ _peer_exchange_waku_peer_exchange_js__WEBPACK_IMPORTED_MODULE_3__.WakuPeerExchange),\n/* harmony export */   enrTree: () => (/* reexport safe */ _dns_constants_js__WEBPACK_IMPORTED_MODULE_1__.enrTree),\n/* harmony export */   wakuDnsDiscovery: () => (/* reexport safe */ _dns_dns_discovery_js__WEBPACK_IMPORTED_MODULE_0__.wakuDnsDiscovery),\n/* harmony export */   wakuLocalPeerCacheDiscovery: () => (/* reexport safe */ _local_peer_cache_index_js__WEBPACK_IMPORTED_MODULE_5__.wakuLocalPeerCacheDiscovery),\n/* harmony export */   wakuPeerExchange: () => (/* reexport safe */ _peer_exchange_waku_peer_exchange_js__WEBPACK_IMPORTED_MODULE_3__.wakuPeerExchange),\n/* harmony export */   wakuPeerExchangeDiscovery: () => (/* reexport safe */ _peer_exchange_waku_peer_exchange_discovery_js__WEBPACK_IMPORTED_MODULE_4__.wakuPeerExchangeDiscovery)\n/* harmony export */ });\n/* harmony import */ var _dns_dns_discovery_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dns/dns_discovery.js */ \"(ssr)/./node_modules/@waku/discovery/dist/dns/dns_discovery.js\");\n/* harmony import */ var _dns_constants_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dns/constants.js */ \"(ssr)/./node_modules/@waku/discovery/dist/dns/constants.js\");\n/* harmony import */ var _dns_dns_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./dns/dns.js */ \"(ssr)/./node_modules/@waku/discovery/dist/dns/dns.js\");\n/* harmony import */ var _peer_exchange_waku_peer_exchange_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./peer-exchange/waku_peer_exchange.js */ \"(ssr)/./node_modules/@waku/discovery/dist/peer-exchange/waku_peer_exchange.js\");\n/* harmony import */ var _peer_exchange_waku_peer_exchange_discovery_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./peer-exchange/waku_peer_exchange_discovery.js */ \"(ssr)/./node_modules/@waku/discovery/dist/peer-exchange/waku_peer_exchange_discovery.js\");\n/* harmony import */ var _local_peer_cache_index_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./local-peer-cache/index.js */ \"(ssr)/./node_modules/@waku/discovery/dist/local-peer-cache/index.js\");\n// DNS Discovery\n\n\n\n// Peer Exchange Discovery\n\n\n// Local Peer Cache Discovery\n //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdha3UvZGlzY292ZXJ5L2Rpc3QvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQSxnQkFBZ0I7QUFDNEQ7QUFDL0I7QUFDRztBQUNoRCwwQkFBMEI7QUFDb0Y7QUFDSztBQUNuSCw2QkFBNkI7QUFDc0UsQ0FDbkcsaUNBQWlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZmx1c2gtbm90ZXMvLi9ub2RlX21vZHVsZXMvQHdha3UvZGlzY292ZXJ5L2Rpc3QvaW5kZXguanM/MmJlZiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBETlMgRGlzY292ZXJ5XG5leHBvcnQgeyBQZWVyRGlzY292ZXJ5RG5zLCB3YWt1RG5zRGlzY292ZXJ5IH0gZnJvbSBcIi4vZG5zL2Ruc19kaXNjb3ZlcnkuanNcIjtcbmV4cG9ydCB7IGVuclRyZWUgfSBmcm9tIFwiLi9kbnMvY29uc3RhbnRzLmpzXCI7XG5leHBvcnQgeyBEbnNOb2RlRGlzY292ZXJ5IH0gZnJvbSBcIi4vZG5zL2Rucy5qc1wiO1xuLy8gUGVlciBFeGNoYW5nZSBEaXNjb3ZlcnlcbmV4cG9ydCB7IHdha3VQZWVyRXhjaGFuZ2UsIFBlZXJFeGNoYW5nZUNvZGVjLCBXYWt1UGVlckV4Y2hhbmdlIH0gZnJvbSBcIi4vcGVlci1leGNoYW5nZS93YWt1X3BlZXJfZXhjaGFuZ2UuanNcIjtcbmV4cG9ydCB7IHdha3VQZWVyRXhjaGFuZ2VEaXNjb3ZlcnksIFBlZXJFeGNoYW5nZURpc2NvdmVyeSB9IGZyb20gXCIuL3BlZXItZXhjaGFuZ2Uvd2FrdV9wZWVyX2V4Y2hhbmdlX2Rpc2NvdmVyeS5qc1wiO1xuLy8gTG9jYWwgUGVlciBDYWNoZSBEaXNjb3ZlcnlcbmV4cG9ydCB7IExvY2FsUGVlckNhY2hlRGlzY292ZXJ5LCB3YWt1TG9jYWxQZWVyQ2FjaGVEaXNjb3ZlcnkgfSBmcm9tIFwiLi9sb2NhbC1wZWVyLWNhY2hlL2luZGV4LmpzXCI7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOlsiUGVlckRpc2NvdmVyeURucyIsIndha3VEbnNEaXNjb3ZlcnkiLCJlbnJUcmVlIiwiRG5zTm9kZURpc2NvdmVyeSIsIndha3VQZWVyRXhjaGFuZ2UiLCJQZWVyRXhjaGFuZ2VDb2RlYyIsIldha3VQZWVyRXhjaGFuZ2UiLCJ3YWt1UGVlckV4Y2hhbmdlRGlzY292ZXJ5IiwiUGVlckV4Y2hhbmdlRGlzY292ZXJ5IiwiTG9jYWxQZWVyQ2FjaGVEaXNjb3ZlcnkiLCJ3YWt1TG9jYWxQZWVyQ2FjaGVEaXNjb3ZlcnkiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/discovery/dist/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/discovery/dist/local-peer-cache/index.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@waku/discovery/dist/local-peer-cache/index.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DEFAULT_LOCAL_TAG_NAME: () => (/* binding */ DEFAULT_LOCAL_TAG_NAME),\n/* harmony export */   LocalPeerCacheDiscovery: () => (/* binding */ LocalPeerCacheDiscovery),\n/* harmony export */   wakuLocalPeerCacheDiscovery: () => (/* binding */ wakuLocalPeerCacheDiscovery)\n/* harmony export */ });\n/* harmony import */ var _libp2p_interface__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @libp2p/interface */ \"(ssr)/./node_modules/@libp2p/interface/dist/src/event-target.js\");\n/* harmony import */ var _libp2p_peer_id_factory__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @libp2p/peer-id-factory */ \"(ssr)/./node_modules/@libp2p/peer-id-factory/dist/src/index.js\");\n/* harmony import */ var _multiformats_multiaddr__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @multiformats/multiaddr */ \"(ssr)/./node_modules/@multiformats/multiaddr/dist/src/index.js\");\n/* harmony import */ var _waku_interfaces__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @waku/interfaces */ \"(ssr)/./node_modules/@waku/discovery/node_modules/@waku/interfaces/dist/index.js\");\n/* harmony import */ var _waku_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @waku/utils */ \"(ssr)/./node_modules/@waku/utils/dist/index.js\");\n\n\n\n\n\n\nconst log = new _waku_utils__WEBPACK_IMPORTED_MODULE_2__.Logger(\"peer-exchange-discovery\");\nconst DEFAULT_LOCAL_TAG_NAME = _waku_interfaces__WEBPACK_IMPORTED_MODULE_1__.Tags.LOCAL;\nconst DEFAULT_LOCAL_TAG_VALUE = 50;\nconst DEFAULT_LOCAL_TAG_TTL = 100000000;\nclass LocalPeerCacheDiscovery extends _libp2p_interface__WEBPACK_IMPORTED_MODULE_3__.TypedEventEmitter {\n    constructor(components, options){\n        super();\n        this.peers = [];\n        this.handleNewPeers = (event)=>{\n            const { peerId, listenAddrs } = event.detail;\n            const websocketMultiaddr = (0,_waku_utils__WEBPACK_IMPORTED_MODULE_2__.getWsMultiaddrFromMultiaddrs)(listenAddrs);\n            const localStoragePeers = this.getPeersFromLocalStorage();\n            const existingPeerIndex = localStoragePeers.findIndex((_peer)=>_peer.id === peerId.toString());\n            if (existingPeerIndex >= 0) {\n                localStoragePeers[existingPeerIndex].address = websocketMultiaddr.toString();\n            } else {\n                localStoragePeers.push({\n                    id: peerId.toString(),\n                    address: websocketMultiaddr.toString()\n                });\n            }\n            this.peers = localStoragePeers;\n            this.savePeersToLocalStorage();\n        };\n        this.components = components;\n        this.options = options;\n        this.isStarted = false;\n        this.peers = this.getPeersFromLocalStorage();\n    }\n    get [Symbol.toStringTag]() {\n        return \"@waku/local-peer-cache-discovery\";\n    }\n    async start() {\n        if (this.isStarted) return;\n        log.info(\"Starting Local Storage Discovery\");\n        this.components.events.addEventListener(\"peer:identify\", this.handleNewPeers);\n        for (const { id: idStr, address } of this.peers){\n            const peerId = await (0,_libp2p_peer_id_factory__WEBPACK_IMPORTED_MODULE_4__.createFromJSON)({\n                id: idStr\n            });\n            if (await this.components.peerStore.has(peerId)) continue;\n            await this.components.peerStore.save(peerId, {\n                multiaddrs: [\n                    (0,_multiformats_multiaddr__WEBPACK_IMPORTED_MODULE_0__.multiaddr)(address)\n                ],\n                tags: {\n                    [this.options?.tagName ?? DEFAULT_LOCAL_TAG_NAME]: {\n                        value: this.options?.tagValue ?? DEFAULT_LOCAL_TAG_VALUE,\n                        ttl: this.options?.tagTTL ?? DEFAULT_LOCAL_TAG_TTL\n                    }\n                }\n            });\n            this.dispatchEvent(new _libp2p_interface__WEBPACK_IMPORTED_MODULE_3__.CustomEvent(\"peer\", {\n                detail: {\n                    id: peerId,\n                    multiaddrs: [\n                        (0,_multiformats_multiaddr__WEBPACK_IMPORTED_MODULE_0__.multiaddr)(address)\n                    ]\n                }\n            }));\n        }\n        log.info(`Discovered ${this.peers.length} peers`);\n        this.isStarted = true;\n    }\n    stop() {\n        if (!this.isStarted) return;\n        log.info(\"Stopping Local Storage Discovery\");\n        this.components.events.removeEventListener(\"peer:identify\", this.handleNewPeers);\n        this.isStarted = false;\n        this.savePeersToLocalStorage();\n    }\n    getPeersFromLocalStorage() {\n        try {\n            const storedPeersData = localStorage.getItem(\"waku:peers\");\n            if (!storedPeersData) return [];\n            const peers = JSON.parse(storedPeersData);\n            return peers.filter(isValidStoredPeer);\n        } catch (error) {\n            log.error(\"Error parsing peers from local storage:\", error);\n            return [];\n        }\n    }\n    savePeersToLocalStorage() {\n        try {\n            localStorage.setItem(\"waku:peers\", JSON.stringify(this.peers));\n        } catch (error) {\n            log.error(\"Error saving peers to local storage:\", error);\n        }\n    }\n}\nfunction isValidStoredPeer(peer) {\n    return peer && typeof peer === \"object\" && typeof peer.id === \"string\" && typeof peer.address === \"string\";\n}\nfunction wakuLocalPeerCacheDiscovery() {\n    return (components, options)=>new LocalPeerCacheDiscovery(components, options);\n} //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/discovery/dist/local-peer-cache/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/discovery/dist/peer-exchange/rpc.js":
/*!****************************************************************!*\
  !*** ./node_modules/@waku/discovery/dist/peer-exchange/rpc.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PeerExchangeRPC: () => (/* binding */ PeerExchangeRPC)\n/* harmony export */ });\n/* harmony import */ var _waku_proto__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @waku/proto */ \"(ssr)/./node_modules/@waku/discovery/node_modules/@waku/proto/dist/index.js\");\n\n/**\n * PeerExchangeRPC represents a message conforming to the Waku Peer Exchange protocol\n */ class PeerExchangeRPC {\n    constructor(proto){\n        this.proto = proto;\n    }\n    static createRequest(params) {\n        const { numPeers } = params;\n        return new PeerExchangeRPC({\n            query: {\n                numPeers: numPeers\n            },\n            response: undefined\n        });\n    }\n    /**\n     * Encode the current PeerExchangeRPC request to bytes\n     * @returns Uint8Array\n     */ encode() {\n        return _waku_proto__WEBPACK_IMPORTED_MODULE_0__.proto_peer_exchange.PeerExchangeRPC.encode(this.proto);\n    }\n    /**\n     * Decode the current PeerExchangeRPC request to bytes\n     * @returns Uint8Array\n     */ static decode(bytes) {\n        const res = _waku_proto__WEBPACK_IMPORTED_MODULE_0__.proto_peer_exchange.PeerExchangeRPC.decode(bytes);\n        return new PeerExchangeRPC(res);\n    }\n    get query() {\n        return this.proto.query;\n    }\n    get response() {\n        return this.proto.response;\n    }\n} //# sourceMappingURL=rpc.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdha3UvZGlzY292ZXJ5L2Rpc3QvcGVlci1leGNoYW5nZS9ycGMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBMkQ7QUFDM0Q7O0NBRUMsR0FDTSxNQUFNRTtJQUVUQyxZQUFZRixLQUFLLENBQUU7UUFDZixJQUFJLENBQUNBLEtBQUssR0FBR0E7SUFDakI7SUFDQSxPQUFPRyxjQUFjQyxNQUFNLEVBQUU7UUFDekIsTUFBTSxFQUFFQyxRQUFRLEVBQUUsR0FBR0Q7UUFDckIsT0FBTyxJQUFJSCxnQkFBZ0I7WUFDdkJLLE9BQU87Z0JBQ0hELFVBQVVBO1lBQ2Q7WUFDQUUsVUFBVUM7UUFDZDtJQUNKO0lBQ0E7OztLQUdDLEdBQ0RDLFNBQVM7UUFDTCxPQUFPVCw0RUFBcUIsQ0FBQ1MsTUFBTSxDQUFDLElBQUksQ0FBQ1QsS0FBSztJQUNsRDtJQUNBOzs7S0FHQyxHQUNELE9BQU9VLE9BQU9DLEtBQUssRUFBRTtRQUNqQixNQUFNQyxNQUFNWiw0RUFBcUIsQ0FBQ1UsTUFBTSxDQUFDQztRQUN6QyxPQUFPLElBQUlWLGdCQUFnQlc7SUFDL0I7SUFDQSxJQUFJTixRQUFRO1FBQ1IsT0FBTyxJQUFJLENBQUNOLEtBQUssQ0FBQ00sS0FBSztJQUMzQjtJQUNBLElBQUlDLFdBQVc7UUFDWCxPQUFPLElBQUksQ0FBQ1AsS0FBSyxDQUFDTyxRQUFRO0lBQzlCO0FBQ0osRUFDQSwrQkFBK0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mbHVzaC1ub3Rlcy8uL25vZGVfbW9kdWxlcy9Ad2FrdS9kaXNjb3ZlcnkvZGlzdC9wZWVyLWV4Y2hhbmdlL3JwYy5qcz80ZDBjIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHByb3RvX3BlZXJfZXhjaGFuZ2UgYXMgcHJvdG8gfSBmcm9tIFwiQHdha3UvcHJvdG9cIjtcbi8qKlxuICogUGVlckV4Y2hhbmdlUlBDIHJlcHJlc2VudHMgYSBtZXNzYWdlIGNvbmZvcm1pbmcgdG8gdGhlIFdha3UgUGVlciBFeGNoYW5nZSBwcm90b2NvbFxuICovXG5leHBvcnQgY2xhc3MgUGVlckV4Y2hhbmdlUlBDIHtcbiAgICBwcm90bztcbiAgICBjb25zdHJ1Y3Rvcihwcm90bykge1xuICAgICAgICB0aGlzLnByb3RvID0gcHJvdG87XG4gICAgfVxuICAgIHN0YXRpYyBjcmVhdGVSZXF1ZXN0KHBhcmFtcykge1xuICAgICAgICBjb25zdCB7IG51bVBlZXJzIH0gPSBwYXJhbXM7XG4gICAgICAgIHJldHVybiBuZXcgUGVlckV4Y2hhbmdlUlBDKHtcbiAgICAgICAgICAgIHF1ZXJ5OiB7XG4gICAgICAgICAgICAgICAgbnVtUGVlcnM6IG51bVBlZXJzXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgcmVzcG9uc2U6IHVuZGVmaW5lZFxuICAgICAgICB9KTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogRW5jb2RlIHRoZSBjdXJyZW50IFBlZXJFeGNoYW5nZVJQQyByZXF1ZXN0IHRvIGJ5dGVzXG4gICAgICogQHJldHVybnMgVWludDhBcnJheVxuICAgICAqL1xuICAgIGVuY29kZSgpIHtcbiAgICAgICAgcmV0dXJuIHByb3RvLlBlZXJFeGNoYW5nZVJQQy5lbmNvZGUodGhpcy5wcm90byk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIERlY29kZSB0aGUgY3VycmVudCBQZWVyRXhjaGFuZ2VSUEMgcmVxdWVzdCB0byBieXRlc1xuICAgICAqIEByZXR1cm5zIFVpbnQ4QXJyYXlcbiAgICAgKi9cbiAgICBzdGF0aWMgZGVjb2RlKGJ5dGVzKSB7XG4gICAgICAgIGNvbnN0IHJlcyA9IHByb3RvLlBlZXJFeGNoYW5nZVJQQy5kZWNvZGUoYnl0ZXMpO1xuICAgICAgICByZXR1cm4gbmV3IFBlZXJFeGNoYW5nZVJQQyhyZXMpO1xuICAgIH1cbiAgICBnZXQgcXVlcnkoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnByb3RvLnF1ZXJ5O1xuICAgIH1cbiAgICBnZXQgcmVzcG9uc2UoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnByb3RvLnJlc3BvbnNlO1xuICAgIH1cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXJwYy5qcy5tYXAiXSwibmFtZXMiOlsicHJvdG9fcGVlcl9leGNoYW5nZSIsInByb3RvIiwiUGVlckV4Y2hhbmdlUlBDIiwiY29uc3RydWN0b3IiLCJjcmVhdGVSZXF1ZXN0IiwicGFyYW1zIiwibnVtUGVlcnMiLCJxdWVyeSIsInJlc3BvbnNlIiwidW5kZWZpbmVkIiwiZW5jb2RlIiwiZGVjb2RlIiwiYnl0ZXMiLCJyZXMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/discovery/dist/peer-exchange/rpc.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/discovery/dist/peer-exchange/waku_peer_exchange.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@waku/discovery/dist/peer-exchange/waku_peer_exchange.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PeerExchangeCodec: () => (/* binding */ PeerExchangeCodec),\n/* harmony export */   WakuPeerExchange: () => (/* binding */ WakuPeerExchange),\n/* harmony export */   wakuPeerExchange: () => (/* binding */ wakuPeerExchange)\n/* harmony export */ });\n/* harmony import */ var _waku_core_lib_base_protocol__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @waku/core/lib/base_protocol */ \"(ssr)/./node_modules/@waku/discovery/node_modules/@waku/core/dist/lib/base_protocol.js\");\n/* harmony import */ var _waku_enr__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @waku/enr */ \"(ssr)/./node_modules/@waku/discovery/node_modules/@waku/enr/dist/index.js\");\n/* harmony import */ var _waku_interfaces__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @waku/interfaces */ \"(ssr)/./node_modules/@waku/discovery/node_modules/@waku/interfaces/dist/index.js\");\n/* harmony import */ var _waku_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @waku/utils */ \"(ssr)/./node_modules/@waku/utils/dist/index.js\");\n/* harmony import */ var it_all__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! it-all */ \"(ssr)/./node_modules/it-all/dist/src/index.js\");\n/* harmony import */ var it_length_prefixed__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! it-length-prefixed */ \"(ssr)/./node_modules/it-length-prefixed/dist/src/index.js\");\n/* harmony import */ var it_pipe__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! it-pipe */ \"(ssr)/./node_modules/it-pipe/dist/src/index.js\");\n/* harmony import */ var uint8arraylist__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! uint8arraylist */ \"(ssr)/./node_modules/uint8arraylist/dist/src/index.js\");\n/* harmony import */ var _rpc_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./rpc.js */ \"(ssr)/./node_modules/@waku/discovery/dist/peer-exchange/rpc.js\");\n\n\n\n\n\n\n\n\n\n\nconst PeerExchangeCodec = \"/vac/waku/peer-exchange/2.0.0-alpha1\";\nconst log = new _waku_utils__WEBPACK_IMPORTED_MODULE_3__.Logger(\"peer-exchange\");\n/**\n * Implementation of the Peer Exchange protocol (https://rfc.vac.dev/spec/34/)\n */ class WakuPeerExchange extends _waku_core_lib_base_protocol__WEBPACK_IMPORTED_MODULE_0__.BaseProtocol {\n    /**\n     * @param components - libp2p components\n     */ constructor(components, pubsubTopics){\n        super(PeerExchangeCodec, components, log, pubsubTopics);\n    }\n    /**\n     * Make a peer exchange query to a peer\n     */ async query(params) {\n        const { numPeers } = params;\n        const rpcQuery = _rpc_js__WEBPACK_IMPORTED_MODULE_8__.PeerExchangeRPC.createRequest({\n            numPeers: BigInt(numPeers)\n        });\n        const peer = await this.peerStore.get(params.peerId);\n        if (!peer) {\n            return {\n                peerInfos: null,\n                error: _waku_interfaces__WEBPACK_IMPORTED_MODULE_2__.ProtocolError.NO_PEER_AVAILABLE\n            };\n        }\n        const stream = await this.getStream(peer);\n        const res = await (0,it_pipe__WEBPACK_IMPORTED_MODULE_6__.pipe)([\n            rpcQuery.encode()\n        ], it_length_prefixed__WEBPACK_IMPORTED_MODULE_5__.encode, stream, it_length_prefixed__WEBPACK_IMPORTED_MODULE_5__.decode, async (source)=>await (0,it_all__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(source));\n        try {\n            const bytes = new uint8arraylist__WEBPACK_IMPORTED_MODULE_7__.Uint8ArrayList();\n            res.forEach((chunk)=>{\n                bytes.append(chunk);\n            });\n            const { response } = _rpc_js__WEBPACK_IMPORTED_MODULE_8__.PeerExchangeRPC.decode(bytes);\n            if (!response) {\n                log.error(\"PeerExchangeRPC message did not contains a `response` field\");\n                return {\n                    peerInfos: null,\n                    error: _waku_interfaces__WEBPACK_IMPORTED_MODULE_2__.ProtocolError.EMPTY_PAYLOAD\n                };\n            }\n            const peerInfos = await Promise.all(response.peerInfos.map((peerInfo)=>peerInfo.enr).filter(_waku_utils__WEBPACK_IMPORTED_MODULE_3__.isDefined).map(async (enr)=>{\n                return {\n                    ENR: await _waku_enr__WEBPACK_IMPORTED_MODULE_1__.EnrDecoder.fromRLP(enr)\n                };\n            }));\n            return {\n                peerInfos,\n                error: null\n            };\n        } catch (err) {\n            log.error(\"Failed to decode push reply\", err);\n            return {\n                peerInfos: null,\n                error: _waku_interfaces__WEBPACK_IMPORTED_MODULE_2__.ProtocolError.DECODE_FAILED\n            };\n        }\n    }\n}\n/**\n *\n * @returns A function that creates a new peer exchange protocol\n */ function wakuPeerExchange(pubsubTopics) {\n    return (components)=>new WakuPeerExchange(components, pubsubTopics);\n} //# sourceMappingURL=waku_peer_exchange.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdha3UvZGlzY292ZXJ5L2Rpc3QvcGVlci1leGNoYW5nZS93YWt1X3BlZXJfZXhjaGFuZ2UuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7O0FBQTREO0FBQ3JCO0FBQ1U7QUFDVDtBQUNIO0FBQ1o7QUFDZ0I7QUFDVjtBQUNpQjtBQUNMO0FBQ3BDLE1BQU1VLG9CQUFvQix1Q0FBdUM7QUFDeEUsTUFBTUMsTUFBTSxJQUFJUCwrQ0FBTUEsQ0FBQztBQUN2Qjs7Q0FFQyxHQUNNLE1BQU1RLHlCQUF5Qlosc0VBQVlBO0lBQzlDOztLQUVDLEdBQ0RhLFlBQVlDLFVBQVUsRUFBRUMsWUFBWSxDQUFFO1FBQ2xDLEtBQUssQ0FBQ0wsbUJBQW1CSSxZQUFZSCxLQUFLSTtJQUM5QztJQUNBOztLQUVDLEdBQ0QsTUFBTUMsTUFBTUMsTUFBTSxFQUFFO1FBQ2hCLE1BQU0sRUFBRUMsUUFBUSxFQUFFLEdBQUdEO1FBQ3JCLE1BQU1FLFdBQVdWLG9EQUFlQSxDQUFDVyxhQUFhLENBQUM7WUFDM0NGLFVBQVVHLE9BQU9IO1FBQ3JCO1FBQ0EsTUFBTUksT0FBTyxNQUFNLElBQUksQ0FBQ0MsU0FBUyxDQUFDQyxHQUFHLENBQUNQLE9BQU9RLE1BQU07UUFDbkQsSUFBSSxDQUFDSCxNQUFNO1lBQ1AsT0FBTztnQkFDSEksV0FBVztnQkFDWEMsT0FBT3pCLDJEQUFhQSxDQUFDMEIsaUJBQWlCO1lBQzFDO1FBQ0o7UUFDQSxNQUFNQyxTQUFTLE1BQU0sSUFBSSxDQUFDQyxTQUFTLENBQUNSO1FBQ3BDLE1BQU1TLE1BQU0sTUFBTXhCLDZDQUFJQSxDQUFDO1lBQUNZLFNBQVNhLE1BQU07U0FBRyxFQUFFMUIsc0RBQVMsRUFBRXVCLFFBQVF2QixzREFBUyxFQUFFLE9BQU80QixTQUFXLE1BQU03QixrREFBR0EsQ0FBQzZCO1FBQ3RHLElBQUk7WUFDQSxNQUFNQyxRQUFRLElBQUkzQiwwREFBY0E7WUFDaEN1QixJQUFJSyxPQUFPLENBQUMsQ0FBQ0M7Z0JBQ1RGLE1BQU1HLE1BQU0sQ0FBQ0Q7WUFDakI7WUFDQSxNQUFNLEVBQUVFLFFBQVEsRUFBRSxHQUFHOUIsb0RBQWVBLENBQUN3QixNQUFNLENBQUNFO1lBQzVDLElBQUksQ0FBQ0ksVUFBVTtnQkFDWDVCLElBQUlnQixLQUFLLENBQUM7Z0JBQ1YsT0FBTztvQkFDSEQsV0FBVztvQkFDWEMsT0FBT3pCLDJEQUFhQSxDQUFDc0MsYUFBYTtnQkFDdEM7WUFDSjtZQUNBLE1BQU1kLFlBQVksTUFBTWUsUUFBUXBDLEdBQUcsQ0FBQ2tDLFNBQVNiLFNBQVMsQ0FDakRnQixHQUFHLENBQUMsQ0FBQ0MsV0FBYUEsU0FBU0MsR0FBRyxFQUM5QkMsTUFBTSxDQUFDMUMsa0RBQVNBLEVBQ2hCdUMsR0FBRyxDQUFDLE9BQU9FO2dCQUNaLE9BQU87b0JBQUVFLEtBQUssTUFBTTdDLGlEQUFVQSxDQUFDOEMsT0FBTyxDQUFDSDtnQkFBSztZQUNoRDtZQUNBLE9BQU87Z0JBQ0hsQjtnQkFDQUMsT0FBTztZQUNYO1FBQ0osRUFDQSxPQUFPcUIsS0FBSztZQUNSckMsSUFBSWdCLEtBQUssQ0FBQywrQkFBK0JxQjtZQUN6QyxPQUFPO2dCQUNIdEIsV0FBVztnQkFDWEMsT0FBT3pCLDJEQUFhQSxDQUFDK0MsYUFBYTtZQUN0QztRQUNKO0lBQ0o7QUFDSjtBQUNBOzs7Q0FHQyxHQUNNLFNBQVNDLGlCQUFpQm5DLFlBQVk7SUFDekMsT0FBTyxDQUFDRCxhQUFlLElBQUlGLGlCQUFpQkUsWUFBWUM7QUFDNUQsRUFDQSw4Q0FBOEMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mbHVzaC1ub3Rlcy8uL25vZGVfbW9kdWxlcy9Ad2FrdS9kaXNjb3ZlcnkvZGlzdC9wZWVyLWV4Y2hhbmdlL3dha3VfcGVlcl9leGNoYW5nZS5qcz80OWE0Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEJhc2VQcm90b2NvbCB9IGZyb20gXCJAd2FrdS9jb3JlL2xpYi9iYXNlX3Byb3RvY29sXCI7XG5pbXBvcnQgeyBFbnJEZWNvZGVyIH0gZnJvbSBcIkB3YWt1L2VuclwiO1xuaW1wb3J0IHsgUHJvdG9jb2xFcnJvciB9IGZyb20gXCJAd2FrdS9pbnRlcmZhY2VzXCI7XG5pbXBvcnQgeyBpc0RlZmluZWQgfSBmcm9tIFwiQHdha3UvdXRpbHNcIjtcbmltcG9ydCB7IExvZ2dlciB9IGZyb20gXCJAd2FrdS91dGlsc1wiO1xuaW1wb3J0IGFsbCBmcm9tIFwiaXQtYWxsXCI7XG5pbXBvcnQgKiBhcyBscCBmcm9tIFwiaXQtbGVuZ3RoLXByZWZpeGVkXCI7XG5pbXBvcnQgeyBwaXBlIH0gZnJvbSBcIml0LXBpcGVcIjtcbmltcG9ydCB7IFVpbnQ4QXJyYXlMaXN0IH0gZnJvbSBcInVpbnQ4YXJyYXlsaXN0XCI7XG5pbXBvcnQgeyBQZWVyRXhjaGFuZ2VSUEMgfSBmcm9tIFwiLi9ycGMuanNcIjtcbmV4cG9ydCBjb25zdCBQZWVyRXhjaGFuZ2VDb2RlYyA9IFwiL3ZhYy93YWt1L3BlZXItZXhjaGFuZ2UvMi4wLjAtYWxwaGExXCI7XG5jb25zdCBsb2cgPSBuZXcgTG9nZ2VyKFwicGVlci1leGNoYW5nZVwiKTtcbi8qKlxuICogSW1wbGVtZW50YXRpb24gb2YgdGhlIFBlZXIgRXhjaGFuZ2UgcHJvdG9jb2wgKGh0dHBzOi8vcmZjLnZhYy5kZXYvc3BlYy8zNC8pXG4gKi9cbmV4cG9ydCBjbGFzcyBXYWt1UGVlckV4Y2hhbmdlIGV4dGVuZHMgQmFzZVByb3RvY29sIHtcbiAgICAvKipcbiAgICAgKiBAcGFyYW0gY29tcG9uZW50cyAtIGxpYnAycCBjb21wb25lbnRzXG4gICAgICovXG4gICAgY29uc3RydWN0b3IoY29tcG9uZW50cywgcHVic3ViVG9waWNzKSB7XG4gICAgICAgIHN1cGVyKFBlZXJFeGNoYW5nZUNvZGVjLCBjb21wb25lbnRzLCBsb2csIHB1YnN1YlRvcGljcyk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIE1ha2UgYSBwZWVyIGV4Y2hhbmdlIHF1ZXJ5IHRvIGEgcGVlclxuICAgICAqL1xuICAgIGFzeW5jIHF1ZXJ5KHBhcmFtcykge1xuICAgICAgICBjb25zdCB7IG51bVBlZXJzIH0gPSBwYXJhbXM7XG4gICAgICAgIGNvbnN0IHJwY1F1ZXJ5ID0gUGVlckV4Y2hhbmdlUlBDLmNyZWF0ZVJlcXVlc3Qoe1xuICAgICAgICAgICAgbnVtUGVlcnM6IEJpZ0ludChudW1QZWVycylcbiAgICAgICAgfSk7XG4gICAgICAgIGNvbnN0IHBlZXIgPSBhd2FpdCB0aGlzLnBlZXJTdG9yZS5nZXQocGFyYW1zLnBlZXJJZCk7XG4gICAgICAgIGlmICghcGVlcikge1xuICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICBwZWVySW5mb3M6IG51bGwsXG4gICAgICAgICAgICAgICAgZXJyb3I6IFByb3RvY29sRXJyb3IuTk9fUEVFUl9BVkFJTEFCTEVcbiAgICAgICAgICAgIH07XG4gICAgICAgIH1cbiAgICAgICAgY29uc3Qgc3RyZWFtID0gYXdhaXQgdGhpcy5nZXRTdHJlYW0ocGVlcik7XG4gICAgICAgIGNvbnN0IHJlcyA9IGF3YWl0IHBpcGUoW3JwY1F1ZXJ5LmVuY29kZSgpXSwgbHAuZW5jb2RlLCBzdHJlYW0sIGxwLmRlY29kZSwgYXN5bmMgKHNvdXJjZSkgPT4gYXdhaXQgYWxsKHNvdXJjZSkpO1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgY29uc3QgYnl0ZXMgPSBuZXcgVWludDhBcnJheUxpc3QoKTtcbiAgICAgICAgICAgIHJlcy5mb3JFYWNoKChjaHVuaykgPT4ge1xuICAgICAgICAgICAgICAgIGJ5dGVzLmFwcGVuZChjaHVuayk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIGNvbnN0IHsgcmVzcG9uc2UgfSA9IFBlZXJFeGNoYW5nZVJQQy5kZWNvZGUoYnl0ZXMpO1xuICAgICAgICAgICAgaWYgKCFyZXNwb25zZSkge1xuICAgICAgICAgICAgICAgIGxvZy5lcnJvcihcIlBlZXJFeGNoYW5nZVJQQyBtZXNzYWdlIGRpZCBub3QgY29udGFpbnMgYSBgcmVzcG9uc2VgIGZpZWxkXCIpO1xuICAgICAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgICAgIHBlZXJJbmZvczogbnVsbCxcbiAgICAgICAgICAgICAgICAgICAgZXJyb3I6IFByb3RvY29sRXJyb3IuRU1QVFlfUEFZTE9BRFxuICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjb25zdCBwZWVySW5mb3MgPSBhd2FpdCBQcm9taXNlLmFsbChyZXNwb25zZS5wZWVySW5mb3NcbiAgICAgICAgICAgICAgICAubWFwKChwZWVySW5mbykgPT4gcGVlckluZm8uZW5yKVxuICAgICAgICAgICAgICAgIC5maWx0ZXIoaXNEZWZpbmVkKVxuICAgICAgICAgICAgICAgIC5tYXAoYXN5bmMgKGVucikgPT4ge1xuICAgICAgICAgICAgICAgIHJldHVybiB7IEVOUjogYXdhaXQgRW5yRGVjb2Rlci5mcm9tUkxQKGVucikgfTtcbiAgICAgICAgICAgIH0pKTtcbiAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgcGVlckluZm9zLFxuICAgICAgICAgICAgICAgIGVycm9yOiBudWxsXG4gICAgICAgICAgICB9O1xuICAgICAgICB9XG4gICAgICAgIGNhdGNoIChlcnIpIHtcbiAgICAgICAgICAgIGxvZy5lcnJvcihcIkZhaWxlZCB0byBkZWNvZGUgcHVzaCByZXBseVwiLCBlcnIpO1xuICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICBwZWVySW5mb3M6IG51bGwsXG4gICAgICAgICAgICAgICAgZXJyb3I6IFByb3RvY29sRXJyb3IuREVDT0RFX0ZBSUxFRFxuICAgICAgICAgICAgfTtcbiAgICAgICAgfVxuICAgIH1cbn1cbi8qKlxuICpcbiAqIEByZXR1cm5zIEEgZnVuY3Rpb24gdGhhdCBjcmVhdGVzIGEgbmV3IHBlZXIgZXhjaGFuZ2UgcHJvdG9jb2xcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHdha3VQZWVyRXhjaGFuZ2UocHVic3ViVG9waWNzKSB7XG4gICAgcmV0dXJuIChjb21wb25lbnRzKSA9PiBuZXcgV2FrdVBlZXJFeGNoYW5nZShjb21wb25lbnRzLCBwdWJzdWJUb3BpY3MpO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9d2FrdV9wZWVyX2V4Y2hhbmdlLmpzLm1hcCJdLCJuYW1lcyI6WyJCYXNlUHJvdG9jb2wiLCJFbnJEZWNvZGVyIiwiUHJvdG9jb2xFcnJvciIsImlzRGVmaW5lZCIsIkxvZ2dlciIsImFsbCIsImxwIiwicGlwZSIsIlVpbnQ4QXJyYXlMaXN0IiwiUGVlckV4Y2hhbmdlUlBDIiwiUGVlckV4Y2hhbmdlQ29kZWMiLCJsb2ciLCJXYWt1UGVlckV4Y2hhbmdlIiwiY29uc3RydWN0b3IiLCJjb21wb25lbnRzIiwicHVic3ViVG9waWNzIiwicXVlcnkiLCJwYXJhbXMiLCJudW1QZWVycyIsInJwY1F1ZXJ5IiwiY3JlYXRlUmVxdWVzdCIsIkJpZ0ludCIsInBlZXIiLCJwZWVyU3RvcmUiLCJnZXQiLCJwZWVySWQiLCJwZWVySW5mb3MiLCJlcnJvciIsIk5PX1BFRVJfQVZBSUxBQkxFIiwic3RyZWFtIiwiZ2V0U3RyZWFtIiwicmVzIiwiZW5jb2RlIiwiZGVjb2RlIiwic291cmNlIiwiYnl0ZXMiLCJmb3JFYWNoIiwiY2h1bmsiLCJhcHBlbmQiLCJyZXNwb25zZSIsIkVNUFRZX1BBWUxPQUQiLCJQcm9taXNlIiwibWFwIiwicGVlckluZm8iLCJlbnIiLCJmaWx0ZXIiLCJFTlIiLCJmcm9tUkxQIiwiZXJyIiwiREVDT0RFX0ZBSUxFRCIsIndha3VQZWVyRXhjaGFuZ2UiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/discovery/dist/peer-exchange/waku_peer_exchange.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/discovery/dist/peer-exchange/waku_peer_exchange_discovery.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@waku/discovery/dist/peer-exchange/waku_peer_exchange_discovery.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DEFAULT_PEER_EXCHANGE_TAG_NAME: () => (/* binding */ DEFAULT_PEER_EXCHANGE_TAG_NAME),\n/* harmony export */   PeerExchangeDiscovery: () => (/* binding */ PeerExchangeDiscovery),\n/* harmony export */   wakuPeerExchangeDiscovery: () => (/* binding */ wakuPeerExchangeDiscovery)\n/* harmony export */ });\n/* harmony import */ var _libp2p_interface__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @libp2p/interface */ \"(ssr)/./node_modules/@libp2p/interface/dist/src/event-target.js\");\n/* harmony import */ var _libp2p_interface__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @libp2p/interface */ \"(ssr)/./node_modules/@libp2p/interface/dist/src/peer-discovery/index.js\");\n/* harmony import */ var _waku_interfaces__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @waku/interfaces */ \"(ssr)/./node_modules/@waku/discovery/node_modules/@waku/interfaces/dist/index.js\");\n/* harmony import */ var _waku_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @waku/utils */ \"(ssr)/./node_modules/@waku/utils/dist/index.js\");\n/* harmony import */ var _waku_peer_exchange_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./waku_peer_exchange.js */ \"(ssr)/./node_modules/@waku/discovery/dist/peer-exchange/waku_peer_exchange.js\");\n\n\n\n\n\nconst log = new _waku_utils__WEBPACK_IMPORTED_MODULE_1__.Logger(\"peer-exchange-discovery\");\nconst DEFAULT_PEER_EXCHANGE_REQUEST_NODES = 10;\nconst DEFAULT_PEER_EXCHANGE_QUERY_INTERVAL_MS = 10 * 1000;\nconst DEFAULT_MAX_RETRIES = 3;\nconst DEFAULT_PEER_EXCHANGE_TAG_NAME = _waku_interfaces__WEBPACK_IMPORTED_MODULE_0__.Tags.PEER_EXCHANGE;\nconst DEFAULT_PEER_EXCHANGE_TAG_VALUE = 50;\nconst DEFAULT_PEER_EXCHANGE_TAG_TTL = 100000000;\nclass PeerExchangeDiscovery extends _libp2p_interface__WEBPACK_IMPORTED_MODULE_3__.TypedEventEmitter {\n    constructor(components, pubsubTopics, options = {}){\n        super();\n        this.queryingPeers = new Set();\n        this.queryAttempts = new Map();\n        this.handleDiscoveredPeer = (event)=>{\n            const { protocols, peerId } = event.detail;\n            if (!protocols.includes(_waku_peer_exchange_js__WEBPACK_IMPORTED_MODULE_2__.PeerExchangeCodec) || this.queryingPeers.has(peerId.toString())) return;\n            this.queryingPeers.add(peerId.toString());\n            this.startRecurringQueries(peerId).catch((error)=>log.error(`Error querying peer ${error}`));\n        };\n        this.startRecurringQueries = async (peerId)=>{\n            const peerIdStr = peerId.toString();\n            const { queryInterval = DEFAULT_PEER_EXCHANGE_QUERY_INTERVAL_MS, maxRetries = DEFAULT_MAX_RETRIES } = this.options;\n            log.info(`Querying peer: ${peerIdStr} (attempt ${this.queryAttempts.get(peerIdStr) ?? 1})`);\n            await this.query(peerId);\n            const currentAttempt = this.queryAttempts.get(peerIdStr) ?? 1;\n            if (currentAttempt > maxRetries) {\n                this.abortQueriesForPeer(peerIdStr);\n                return;\n            }\n            setTimeout(()=>{\n                this.queryAttempts.set(peerIdStr, currentAttempt + 1);\n                this.startRecurringQueries(peerId).catch((error)=>{\n                    log.error(`Error in startRecurringQueries: ${error}`);\n                });\n            }, queryInterval * currentAttempt);\n        };\n        this.components = components;\n        this.peerExchange = new _waku_peer_exchange_js__WEBPACK_IMPORTED_MODULE_2__.WakuPeerExchange(components, pubsubTopics);\n        this.options = options;\n        this.isStarted = false;\n    }\n    /**\n     * Start emitting events\n     */ start() {\n        if (this.isStarted) {\n            return;\n        }\n        log.info(\"Starting peer exchange node discovery, discovering peers\");\n        // might be better to use \"peer:identify\" or \"peer:update\"\n        this.components.events.addEventListener(\"peer:identify\", this.handleDiscoveredPeer);\n    }\n    /**\n     * Remove event listener\n     */ stop() {\n        if (!this.isStarted) return;\n        log.info(\"Stopping peer exchange node discovery\");\n        this.isStarted = false;\n        this.queryingPeers.clear();\n        this.components.events.removeEventListener(\"peer:identify\", this.handleDiscoveredPeer);\n    }\n    get [_libp2p_interface__WEBPACK_IMPORTED_MODULE_4__.peerDiscoverySymbol]() {\n        return true;\n    }\n    get [Symbol.toStringTag]() {\n        return \"@waku/peer-exchange\";\n    }\n    async query(peerId) {\n        const { error, peerInfos } = await this.peerExchange.query({\n            numPeers: DEFAULT_PEER_EXCHANGE_REQUEST_NODES,\n            peerId\n        });\n        if (error) {\n            log.error(\"Peer exchange query failed\", error);\n            return {\n                error,\n                peerInfos: null\n            };\n        }\n        for (const _peerInfo of peerInfos){\n            const { ENR } = _peerInfo;\n            if (!ENR) {\n                log.warn(\"No ENR in peerInfo object, skipping\");\n                continue;\n            }\n            const { peerId, peerInfo, shardInfo } = ENR;\n            if (!peerId || !peerInfo) {\n                continue;\n            }\n            const hasPeer = await this.components.peerStore.has(peerId);\n            if (hasPeer) {\n                continue;\n            }\n            // update the tags for the peer\n            await this.components.peerStore.save(peerId, {\n                tags: {\n                    [DEFAULT_PEER_EXCHANGE_TAG_NAME]: {\n                        value: this.options.tagValue ?? DEFAULT_PEER_EXCHANGE_TAG_VALUE,\n                        ttl: this.options.tagTTL ?? DEFAULT_PEER_EXCHANGE_TAG_TTL\n                    }\n                },\n                ...shardInfo && {\n                    metadata: {\n                        shardInfo: (0,_waku_utils__WEBPACK_IMPORTED_MODULE_1__.encodeRelayShard)(shardInfo)\n                    }\n                }\n            });\n            log.info(`Discovered peer: ${peerId.toString()}`);\n            this.dispatchEvent(new _libp2p_interface__WEBPACK_IMPORTED_MODULE_3__.CustomEvent(\"peer\", {\n                detail: {\n                    id: peerId,\n                    multiaddrs: peerInfo.multiaddrs\n                }\n            }));\n        }\n        return {\n            error: null,\n            peerInfos\n        };\n    }\n    abortQueriesForPeer(peerIdStr) {\n        log.info(`Aborting queries for peer: ${peerIdStr}`);\n        this.queryingPeers.delete(peerIdStr);\n        this.queryAttempts.delete(peerIdStr);\n    }\n}\nfunction wakuPeerExchangeDiscovery(pubsubTopics) {\n    return (components)=>new PeerExchangeDiscovery(components, pubsubTopics);\n} //# sourceMappingURL=waku_peer_exchange_discovery.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/discovery/dist/peer-exchange/waku_peer_exchange_discovery.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/discovery/node_modules/@waku/core/dist/lib/base_protocol.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@waku/discovery/node_modules/@waku/core/dist/lib/base_protocol.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BaseProtocol: () => (/* binding */ BaseProtocol)\n/* harmony export */ });\n/* harmony import */ var _waku_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @waku/utils */ \"(ssr)/./node_modules/@waku/utils/dist/index.js\");\n/* harmony import */ var _waku_utils_libp2p__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @waku/utils/libp2p */ \"(ssr)/./node_modules/@waku/utils/dist/libp2p/index.js\");\n/* harmony import */ var _filterPeers_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./filterPeers.js */ \"(ssr)/./node_modules/@waku/discovery/node_modules/@waku/core/dist/lib/filterPeers.js\");\n/* harmony import */ var _stream_manager_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./stream_manager.js */ \"(ssr)/./node_modules/@waku/discovery/node_modules/@waku/core/dist/lib/stream_manager.js\");\n\n\n\n\n/**\n * A class with predefined helpers, to be used as a base to implement Waku\n * Protocols.\n */ class BaseProtocol {\n    constructor(multicodec, components, log, pubsubTopics, options){\n        this.multicodec = multicodec;\n        this.components = components;\n        this.log = log;\n        this.pubsubTopics = pubsubTopics;\n        this.options = options;\n        this.addLibp2pEventListener = components.events.addEventListener.bind(components.events);\n        this.removeLibp2pEventListener = components.events.removeEventListener.bind(components.events);\n        this.streamManager = new _stream_manager_js__WEBPACK_IMPORTED_MODULE_3__.StreamManager(multicodec, components.connectionManager.getConnections.bind(components.connectionManager), this.addLibp2pEventListener);\n    }\n    async getStream(peer) {\n        return this.streamManager.getStream(peer);\n    }\n    get peerStore() {\n        return this.components.peerStore;\n    }\n    /**\n     * Returns known peers from the address book (`libp2p.peerStore`) that support\n     * the class protocol. Waku may or may not be currently connected to these\n     * peers.\n     */ async allPeers() {\n        return (0,_waku_utils_libp2p__WEBPACK_IMPORTED_MODULE_1__.getPeersForProtocol)(this.peerStore, [\n            this.multicodec\n        ]);\n    }\n    async connectedPeers() {\n        const peers = await this.allPeers();\n        return peers.filter((peer)=>{\n            return this.components.connectionManager.getConnections(peer.id).length > 0;\n        });\n    }\n    /**\n     * Retrieves a list of connected peers that support the protocol. The list is sorted by latency.\n     *\n     * @param numPeers - The total number of peers to retrieve. If 0, all peers are returned.\n     * @param maxBootstrapPeers - The maximum number of bootstrap peers to retrieve.\n  \n    * @returns A list of peers that support the protocol sorted by latency.\n    */ async getPeers({ numPeers, maxBootstrapPeers } = {\n        maxBootstrapPeers: 1,\n        numPeers: 0\n    }) {\n        // Retrieve all connected peers that support the protocol & shard (if configured)\n        const connectedPeersForProtocolAndShard = await (0,_waku_utils_libp2p__WEBPACK_IMPORTED_MODULE_1__.getConnectedPeersForProtocolAndShard)(this.components.connectionManager.getConnections(), this.peerStore, [\n            this.multicodec\n        ], this.options?.shardInfo ? (0,_waku_utils__WEBPACK_IMPORTED_MODULE_0__.ensureShardingConfigured)(this.options.shardInfo).shardInfo : undefined);\n        // Filter the peers based on discovery & number of peers requested\n        const filteredPeers = (0,_filterPeers_js__WEBPACK_IMPORTED_MODULE_2__.filterPeersByDiscovery)(connectedPeersForProtocolAndShard, numPeers, maxBootstrapPeers);\n        // Sort the peers by latency\n        const sortedFilteredPeers = await (0,_waku_utils_libp2p__WEBPACK_IMPORTED_MODULE_1__.sortPeersByLatency)(this.peerStore, filteredPeers);\n        if (sortedFilteredPeers.length === 0) {\n            this.log.warn(\"No peers found. Ensure you have a connection to the network.\");\n        }\n        if (sortedFilteredPeers.length < numPeers) {\n            this.log.warn(`Only ${sortedFilteredPeers.length} peers found. Requested ${numPeers}.`);\n        }\n        return sortedFilteredPeers;\n    }\n} //# sourceMappingURL=base_protocol.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/discovery/node_modules/@waku/core/dist/lib/base_protocol.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/discovery/node_modules/@waku/core/dist/lib/filterPeers.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@waku/discovery/node_modules/@waku/core/dist/lib/filterPeers.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   filterPeersByDiscovery: () => (/* binding */ filterPeersByDiscovery)\n/* harmony export */ });\n/* harmony import */ var _waku_interfaces__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @waku/interfaces */ \"(ssr)/./node_modules/@waku/discovery/node_modules/@waku/interfaces/dist/index.js\");\n\n/**\n * Retrieves a list of peers based on the specified criteria:\n * 1. If numPeers is 0, return all peers\n * 2. Bootstrap peers are prioritized\n * 3. Non-bootstrap peers are randomly selected to fill up to numPeers\n *\n * @param peers - The list of peers to filter from.\n * @param numPeers - The total number of peers to retrieve. If 0, all peers are returned, irrespective of `maxBootstrapPeers`.\n * @param maxBootstrapPeers - The maximum number of bootstrap peers to retrieve.\n * @returns An array of peers based on the specified criteria.\n */ function filterPeersByDiscovery(peers, numPeers, maxBootstrapPeers) {\n    // Collect the bootstrap peers up to the specified maximum\n    let bootstrapPeers = peers.filter((peer)=>peer.tags.has(_waku_interfaces__WEBPACK_IMPORTED_MODULE_0__.Tags.BOOTSTRAP)).slice(0, maxBootstrapPeers);\n    // If numPeers is less than the number of bootstrap peers, adjust the bootstrapPeers array\n    if (numPeers > 0 && numPeers < bootstrapPeers.length) {\n        bootstrapPeers = bootstrapPeers.slice(0, numPeers);\n    }\n    // Collect non-bootstrap peers\n    const nonBootstrapPeers = peers.filter((peer)=>!peer.tags.has(_waku_interfaces__WEBPACK_IMPORTED_MODULE_0__.Tags.BOOTSTRAP));\n    // If numPeers is 0, return all peers\n    if (numPeers === 0) {\n        return [\n            ...bootstrapPeers,\n            ...nonBootstrapPeers\n        ];\n    }\n    // Initialize the list of selected peers with the bootstrap peers\n    const selectedPeers = [\n        ...bootstrapPeers\n    ];\n    // Fill up to numPeers with remaining random peers if needed\n    while(selectedPeers.length < numPeers && nonBootstrapPeers.length > 0){\n        const randomIndex = Math.floor(Math.random() * nonBootstrapPeers.length);\n        const randomPeer = nonBootstrapPeers.splice(randomIndex, 1)[0];\n        selectedPeers.push(randomPeer);\n    }\n    return selectedPeers;\n} //# sourceMappingURL=filterPeers.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdha3UvZGlzY292ZXJ5L25vZGVfbW9kdWxlcy9Ad2FrdS9jb3JlL2Rpc3QvbGliL2ZpbHRlclBlZXJzLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQXdDO0FBQ3hDOzs7Ozs7Ozs7O0NBVUMsR0FDTSxTQUFTQyx1QkFBdUJDLEtBQUssRUFBRUMsUUFBUSxFQUFFQyxpQkFBaUI7SUFDckUsMERBQTBEO0lBQzFELElBQUlDLGlCQUFpQkgsTUFDaEJJLE1BQU0sQ0FBQyxDQUFDQyxPQUFTQSxLQUFLQyxJQUFJLENBQUNDLEdBQUcsQ0FBQ1Qsa0RBQUlBLENBQUNVLFNBQVMsR0FDN0NDLEtBQUssQ0FBQyxHQUFHUDtJQUNkLDBGQUEwRjtJQUMxRixJQUFJRCxXQUFXLEtBQUtBLFdBQVdFLGVBQWVPLE1BQU0sRUFBRTtRQUNsRFAsaUJBQWlCQSxlQUFlTSxLQUFLLENBQUMsR0FBR1I7SUFDN0M7SUFDQSw4QkFBOEI7SUFDOUIsTUFBTVUsb0JBQW9CWCxNQUFNSSxNQUFNLENBQUMsQ0FBQ0MsT0FBUyxDQUFDQSxLQUFLQyxJQUFJLENBQUNDLEdBQUcsQ0FBQ1Qsa0RBQUlBLENBQUNVLFNBQVM7SUFDOUUscUNBQXFDO0lBQ3JDLElBQUlQLGFBQWEsR0FBRztRQUNoQixPQUFPO2VBQUlFO2VBQW1CUTtTQUFrQjtJQUNwRDtJQUNBLGlFQUFpRTtJQUNqRSxNQUFNQyxnQkFBZ0I7V0FBSVQ7S0FBZTtJQUN6Qyw0REFBNEQ7SUFDNUQsTUFBT1MsY0FBY0YsTUFBTSxHQUFHVCxZQUFZVSxrQkFBa0JELE1BQU0sR0FBRyxFQUFHO1FBQ3BFLE1BQU1HLGNBQWNDLEtBQUtDLEtBQUssQ0FBQ0QsS0FBS0UsTUFBTSxLQUFLTCxrQkFBa0JELE1BQU07UUFDdkUsTUFBTU8sYUFBYU4sa0JBQWtCTyxNQUFNLENBQUNMLGFBQWEsRUFBRSxDQUFDLEVBQUU7UUFDOURELGNBQWNPLElBQUksQ0FBQ0Y7SUFDdkI7SUFDQSxPQUFPTDtBQUNYLEVBQ0EsdUNBQXVDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZmx1c2gtbm90ZXMvLi9ub2RlX21vZHVsZXMvQHdha3UvZGlzY292ZXJ5L25vZGVfbW9kdWxlcy9Ad2FrdS9jb3JlL2Rpc3QvbGliL2ZpbHRlclBlZXJzLmpzPzQ3YWIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgVGFncyB9IGZyb20gXCJAd2FrdS9pbnRlcmZhY2VzXCI7XG4vKipcbiAqIFJldHJpZXZlcyBhIGxpc3Qgb2YgcGVlcnMgYmFzZWQgb24gdGhlIHNwZWNpZmllZCBjcml0ZXJpYTpcbiAqIDEuIElmIG51bVBlZXJzIGlzIDAsIHJldHVybiBhbGwgcGVlcnNcbiAqIDIuIEJvb3RzdHJhcCBwZWVycyBhcmUgcHJpb3JpdGl6ZWRcbiAqIDMuIE5vbi1ib290c3RyYXAgcGVlcnMgYXJlIHJhbmRvbWx5IHNlbGVjdGVkIHRvIGZpbGwgdXAgdG8gbnVtUGVlcnNcbiAqXG4gKiBAcGFyYW0gcGVlcnMgLSBUaGUgbGlzdCBvZiBwZWVycyB0byBmaWx0ZXIgZnJvbS5cbiAqIEBwYXJhbSBudW1QZWVycyAtIFRoZSB0b3RhbCBudW1iZXIgb2YgcGVlcnMgdG8gcmV0cmlldmUuIElmIDAsIGFsbCBwZWVycyBhcmUgcmV0dXJuZWQsIGlycmVzcGVjdGl2ZSBvZiBgbWF4Qm9vdHN0cmFwUGVlcnNgLlxuICogQHBhcmFtIG1heEJvb3RzdHJhcFBlZXJzIC0gVGhlIG1heGltdW0gbnVtYmVyIG9mIGJvb3RzdHJhcCBwZWVycyB0byByZXRyaWV2ZS5cbiAqIEByZXR1cm5zIEFuIGFycmF5IG9mIHBlZXJzIGJhc2VkIG9uIHRoZSBzcGVjaWZpZWQgY3JpdGVyaWEuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBmaWx0ZXJQZWVyc0J5RGlzY292ZXJ5KHBlZXJzLCBudW1QZWVycywgbWF4Qm9vdHN0cmFwUGVlcnMpIHtcbiAgICAvLyBDb2xsZWN0IHRoZSBib290c3RyYXAgcGVlcnMgdXAgdG8gdGhlIHNwZWNpZmllZCBtYXhpbXVtXG4gICAgbGV0IGJvb3RzdHJhcFBlZXJzID0gcGVlcnNcbiAgICAgICAgLmZpbHRlcigocGVlcikgPT4gcGVlci50YWdzLmhhcyhUYWdzLkJPT1RTVFJBUCkpXG4gICAgICAgIC5zbGljZSgwLCBtYXhCb290c3RyYXBQZWVycyk7XG4gICAgLy8gSWYgbnVtUGVlcnMgaXMgbGVzcyB0aGFuIHRoZSBudW1iZXIgb2YgYm9vdHN0cmFwIHBlZXJzLCBhZGp1c3QgdGhlIGJvb3RzdHJhcFBlZXJzIGFycmF5XG4gICAgaWYgKG51bVBlZXJzID4gMCAmJiBudW1QZWVycyA8IGJvb3RzdHJhcFBlZXJzLmxlbmd0aCkge1xuICAgICAgICBib290c3RyYXBQZWVycyA9IGJvb3RzdHJhcFBlZXJzLnNsaWNlKDAsIG51bVBlZXJzKTtcbiAgICB9XG4gICAgLy8gQ29sbGVjdCBub24tYm9vdHN0cmFwIHBlZXJzXG4gICAgY29uc3Qgbm9uQm9vdHN0cmFwUGVlcnMgPSBwZWVycy5maWx0ZXIoKHBlZXIpID0+ICFwZWVyLnRhZ3MuaGFzKFRhZ3MuQk9PVFNUUkFQKSk7XG4gICAgLy8gSWYgbnVtUGVlcnMgaXMgMCwgcmV0dXJuIGFsbCBwZWVyc1xuICAgIGlmIChudW1QZWVycyA9PT0gMCkge1xuICAgICAgICByZXR1cm4gWy4uLmJvb3RzdHJhcFBlZXJzLCAuLi5ub25Cb290c3RyYXBQZWVyc107XG4gICAgfVxuICAgIC8vIEluaXRpYWxpemUgdGhlIGxpc3Qgb2Ygc2VsZWN0ZWQgcGVlcnMgd2l0aCB0aGUgYm9vdHN0cmFwIHBlZXJzXG4gICAgY29uc3Qgc2VsZWN0ZWRQZWVycyA9IFsuLi5ib290c3RyYXBQZWVyc107XG4gICAgLy8gRmlsbCB1cCB0byBudW1QZWVycyB3aXRoIHJlbWFpbmluZyByYW5kb20gcGVlcnMgaWYgbmVlZGVkXG4gICAgd2hpbGUgKHNlbGVjdGVkUGVlcnMubGVuZ3RoIDwgbnVtUGVlcnMgJiYgbm9uQm9vdHN0cmFwUGVlcnMubGVuZ3RoID4gMCkge1xuICAgICAgICBjb25zdCByYW5kb21JbmRleCA9IE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIG5vbkJvb3RzdHJhcFBlZXJzLmxlbmd0aCk7XG4gICAgICAgIGNvbnN0IHJhbmRvbVBlZXIgPSBub25Cb290c3RyYXBQZWVycy5zcGxpY2UocmFuZG9tSW5kZXgsIDEpWzBdO1xuICAgICAgICBzZWxlY3RlZFBlZXJzLnB1c2gocmFuZG9tUGVlcik7XG4gICAgfVxuICAgIHJldHVybiBzZWxlY3RlZFBlZXJzO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZmlsdGVyUGVlcnMuanMubWFwIl0sIm5hbWVzIjpbIlRhZ3MiLCJmaWx0ZXJQZWVyc0J5RGlzY292ZXJ5IiwicGVlcnMiLCJudW1QZWVycyIsIm1heEJvb3RzdHJhcFBlZXJzIiwiYm9vdHN0cmFwUGVlcnMiLCJmaWx0ZXIiLCJwZWVyIiwidGFncyIsImhhcyIsIkJPT1RTVFJBUCIsInNsaWNlIiwibGVuZ3RoIiwibm9uQm9vdHN0cmFwUGVlcnMiLCJzZWxlY3RlZFBlZXJzIiwicmFuZG9tSW5kZXgiLCJNYXRoIiwiZmxvb3IiLCJyYW5kb20iLCJyYW5kb21QZWVyIiwic3BsaWNlIiwicHVzaCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/discovery/node_modules/@waku/core/dist/lib/filterPeers.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/discovery/node_modules/@waku/core/dist/lib/stream_manager.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@waku/discovery/node_modules/@waku/core/dist/lib/stream_manager.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   StreamManager: () => (/* binding */ StreamManager)\n/* harmony export */ });\n/* harmony import */ var _waku_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @waku/utils */ \"(ssr)/./node_modules/@waku/utils/dist/index.js\");\n/* harmony import */ var _waku_utils_libp2p__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @waku/utils/libp2p */ \"(ssr)/./node_modules/@waku/utils/dist/libp2p/index.js\");\n\n\nclass StreamManager {\n    constructor(multicodec, getConnections, addEventListener){\n        this.handlePeerUpdateStreamPool = (evt)=>{\n            const peer = evt.detail.peer;\n            if (peer.protocols.includes(this.multicodec)) {\n                this.log.info(`Preemptively opening a stream to ${peer.id.toString()}`);\n                this.prepareNewStream(peer);\n            }\n        };\n        this.multicodec = multicodec;\n        this.getConnections = getConnections;\n        this.addEventListener = addEventListener;\n        this.log = new _waku_utils__WEBPACK_IMPORTED_MODULE_0__.Logger(`stream-manager:${multicodec}`);\n        this.addEventListener(\"peer:update\", this.handlePeerUpdateStreamPool.bind(this));\n        this.getStream = this.getStream.bind(this);\n        this.streamPool = new Map();\n    }\n    async getStream(peer) {\n        const peerIdStr = peer.id.toString();\n        const streamPromise = this.streamPool.get(peerIdStr);\n        if (!streamPromise) {\n            return this.newStream(peer); // fallback by creating a new stream on the spot\n        }\n        // We have the stream, let's remove it from the map\n        this.streamPool.delete(peerIdStr);\n        this.prepareNewStream(peer);\n        const stream = await streamPromise;\n        if (!stream || stream.status === \"closed\") {\n            return this.newStream(peer); // fallback by creating a new stream on the spot\n        }\n        return stream;\n    }\n    async newStream(peer) {\n        const connections = this.getConnections(peer.id);\n        const connection = (0,_waku_utils_libp2p__WEBPACK_IMPORTED_MODULE_1__.selectConnection)(connections);\n        if (!connection) {\n            throw new Error(\"Failed to get a connection to the peer\");\n        }\n        return connection.newStream(this.multicodec);\n    }\n    prepareNewStream(peer) {\n        const streamPromise = this.newStream(peer).catch(()=>{\n            // No error thrown as this call is not triggered by the user\n            this.log.error(`Failed to prepare a new stream for ${peer.id.toString()}`);\n        });\n        this.streamPool.set(peer.id.toString(), streamPromise);\n    }\n} //# sourceMappingURL=stream_manager.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdha3UvZGlzY292ZXJ5L25vZGVfbW9kdWxlcy9Ad2FrdS9jb3JlL2Rpc3QvbGliL3N0cmVhbV9tYW5hZ2VyLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFxQztBQUNpQjtBQUMvQyxNQUFNRTtJQU1UQyxZQUFZQyxVQUFVLEVBQUVDLGNBQWMsRUFBRUMsZ0JBQWdCLENBQUU7YUF1QzFEQyw2QkFBNkIsQ0FBQ0M7WUFDMUIsTUFBTUMsT0FBT0QsSUFBSUUsTUFBTSxDQUFDRCxJQUFJO1lBQzVCLElBQUlBLEtBQUtFLFNBQVMsQ0FBQ0MsUUFBUSxDQUFDLElBQUksQ0FBQ1IsVUFBVSxHQUFHO2dCQUMxQyxJQUFJLENBQUNTLEdBQUcsQ0FBQ0MsSUFBSSxDQUFDLENBQUMsaUNBQWlDLEVBQUVMLEtBQUtNLEVBQUUsQ0FBQ0MsUUFBUSxHQUFHLENBQUM7Z0JBQ3RFLElBQUksQ0FBQ0MsZ0JBQWdCLENBQUNSO1lBQzFCO1FBQ0o7UUE1Q0ksSUFBSSxDQUFDTCxVQUFVLEdBQUdBO1FBQ2xCLElBQUksQ0FBQ0MsY0FBYyxHQUFHQTtRQUN0QixJQUFJLENBQUNDLGdCQUFnQixHQUFHQTtRQUN4QixJQUFJLENBQUNPLEdBQUcsR0FBRyxJQUFJYiwrQ0FBTUEsQ0FBQyxDQUFDLGVBQWUsRUFBRUksV0FBVyxDQUFDO1FBQ3BELElBQUksQ0FBQ0UsZ0JBQWdCLENBQUMsZUFBZSxJQUFJLENBQUNDLDBCQUEwQixDQUFDVyxJQUFJLENBQUMsSUFBSTtRQUM5RSxJQUFJLENBQUNDLFNBQVMsR0FBRyxJQUFJLENBQUNBLFNBQVMsQ0FBQ0QsSUFBSSxDQUFDLElBQUk7UUFDekMsSUFBSSxDQUFDRSxVQUFVLEdBQUcsSUFBSUM7SUFDMUI7SUFDQSxNQUFNRixVQUFVVixJQUFJLEVBQUU7UUFDbEIsTUFBTWEsWUFBWWIsS0FBS00sRUFBRSxDQUFDQyxRQUFRO1FBQ2xDLE1BQU1PLGdCQUFnQixJQUFJLENBQUNILFVBQVUsQ0FBQ0ksR0FBRyxDQUFDRjtRQUMxQyxJQUFJLENBQUNDLGVBQWU7WUFDaEIsT0FBTyxJQUFJLENBQUNFLFNBQVMsQ0FBQ2hCLE9BQU8sZ0RBQWdEO1FBQ2pGO1FBQ0EsbURBQW1EO1FBQ25ELElBQUksQ0FBQ1csVUFBVSxDQUFDTSxNQUFNLENBQUNKO1FBQ3ZCLElBQUksQ0FBQ0wsZ0JBQWdCLENBQUNSO1FBQ3RCLE1BQU1rQixTQUFTLE1BQU1KO1FBQ3JCLElBQUksQ0FBQ0ksVUFBVUEsT0FBT0MsTUFBTSxLQUFLLFVBQVU7WUFDdkMsT0FBTyxJQUFJLENBQUNILFNBQVMsQ0FBQ2hCLE9BQU8sZ0RBQWdEO1FBQ2pGO1FBQ0EsT0FBT2tCO0lBQ1g7SUFDQSxNQUFNRixVQUFVaEIsSUFBSSxFQUFFO1FBQ2xCLE1BQU1vQixjQUFjLElBQUksQ0FBQ3hCLGNBQWMsQ0FBQ0ksS0FBS00sRUFBRTtRQUMvQyxNQUFNZSxhQUFhN0Isb0VBQWdCQSxDQUFDNEI7UUFDcEMsSUFBSSxDQUFDQyxZQUFZO1lBQ2IsTUFBTSxJQUFJQyxNQUFNO1FBQ3BCO1FBQ0EsT0FBT0QsV0FBV0wsU0FBUyxDQUFDLElBQUksQ0FBQ3JCLFVBQVU7SUFDL0M7SUFDQWEsaUJBQWlCUixJQUFJLEVBQUU7UUFDbkIsTUFBTWMsZ0JBQWdCLElBQUksQ0FBQ0UsU0FBUyxDQUFDaEIsTUFBTXVCLEtBQUssQ0FBQztZQUM3Qyw0REFBNEQ7WUFDNUQsSUFBSSxDQUFDbkIsR0FBRyxDQUFDb0IsS0FBSyxDQUFDLENBQUMsbUNBQW1DLEVBQUV4QixLQUFLTSxFQUFFLENBQUNDLFFBQVEsR0FBRyxDQUFDO1FBQzdFO1FBQ0EsSUFBSSxDQUFDSSxVQUFVLENBQUNjLEdBQUcsQ0FBQ3pCLEtBQUtNLEVBQUUsQ0FBQ0MsUUFBUSxJQUFJTztJQUM1QztBQVFKLEVBQ0EsMENBQTBDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZmx1c2gtbm90ZXMvLi9ub2RlX21vZHVsZXMvQHdha3UvZGlzY292ZXJ5L25vZGVfbW9kdWxlcy9Ad2FrdS9jb3JlL2Rpc3QvbGliL3N0cmVhbV9tYW5hZ2VyLmpzP2Y1YmEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTG9nZ2VyIH0gZnJvbSBcIkB3YWt1L3V0aWxzXCI7XG5pbXBvcnQgeyBzZWxlY3RDb25uZWN0aW9uIH0gZnJvbSBcIkB3YWt1L3V0aWxzL2xpYnAycFwiO1xuZXhwb3J0IGNsYXNzIFN0cmVhbU1hbmFnZXIge1xuICAgIG11bHRpY29kZWM7XG4gICAgZ2V0Q29ubmVjdGlvbnM7XG4gICAgYWRkRXZlbnRMaXN0ZW5lcjtcbiAgICBzdHJlYW1Qb29sO1xuICAgIGxvZztcbiAgICBjb25zdHJ1Y3RvcihtdWx0aWNvZGVjLCBnZXRDb25uZWN0aW9ucywgYWRkRXZlbnRMaXN0ZW5lcikge1xuICAgICAgICB0aGlzLm11bHRpY29kZWMgPSBtdWx0aWNvZGVjO1xuICAgICAgICB0aGlzLmdldENvbm5lY3Rpb25zID0gZ2V0Q29ubmVjdGlvbnM7XG4gICAgICAgIHRoaXMuYWRkRXZlbnRMaXN0ZW5lciA9IGFkZEV2ZW50TGlzdGVuZXI7XG4gICAgICAgIHRoaXMubG9nID0gbmV3IExvZ2dlcihgc3RyZWFtLW1hbmFnZXI6JHttdWx0aWNvZGVjfWApO1xuICAgICAgICB0aGlzLmFkZEV2ZW50TGlzdGVuZXIoXCJwZWVyOnVwZGF0ZVwiLCB0aGlzLmhhbmRsZVBlZXJVcGRhdGVTdHJlYW1Qb29sLmJpbmQodGhpcykpO1xuICAgICAgICB0aGlzLmdldFN0cmVhbSA9IHRoaXMuZ2V0U3RyZWFtLmJpbmQodGhpcyk7XG4gICAgICAgIHRoaXMuc3RyZWFtUG9vbCA9IG5ldyBNYXAoKTtcbiAgICB9XG4gICAgYXN5bmMgZ2V0U3RyZWFtKHBlZXIpIHtcbiAgICAgICAgY29uc3QgcGVlcklkU3RyID0gcGVlci5pZC50b1N0cmluZygpO1xuICAgICAgICBjb25zdCBzdHJlYW1Qcm9taXNlID0gdGhpcy5zdHJlYW1Qb29sLmdldChwZWVySWRTdHIpO1xuICAgICAgICBpZiAoIXN0cmVhbVByb21pc2UpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLm5ld1N0cmVhbShwZWVyKTsgLy8gZmFsbGJhY2sgYnkgY3JlYXRpbmcgYSBuZXcgc3RyZWFtIG9uIHRoZSBzcG90XG4gICAgICAgIH1cbiAgICAgICAgLy8gV2UgaGF2ZSB0aGUgc3RyZWFtLCBsZXQncyByZW1vdmUgaXQgZnJvbSB0aGUgbWFwXG4gICAgICAgIHRoaXMuc3RyZWFtUG9vbC5kZWxldGUocGVlcklkU3RyKTtcbiAgICAgICAgdGhpcy5wcmVwYXJlTmV3U3RyZWFtKHBlZXIpO1xuICAgICAgICBjb25zdCBzdHJlYW0gPSBhd2FpdCBzdHJlYW1Qcm9taXNlO1xuICAgICAgICBpZiAoIXN0cmVhbSB8fCBzdHJlYW0uc3RhdHVzID09PSBcImNsb3NlZFwiKSB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5uZXdTdHJlYW0ocGVlcik7IC8vIGZhbGxiYWNrIGJ5IGNyZWF0aW5nIGEgbmV3IHN0cmVhbSBvbiB0aGUgc3BvdFxuICAgICAgICB9XG4gICAgICAgIHJldHVybiBzdHJlYW07XG4gICAgfVxuICAgIGFzeW5jIG5ld1N0cmVhbShwZWVyKSB7XG4gICAgICAgIGNvbnN0IGNvbm5lY3Rpb25zID0gdGhpcy5nZXRDb25uZWN0aW9ucyhwZWVyLmlkKTtcbiAgICAgICAgY29uc3QgY29ubmVjdGlvbiA9IHNlbGVjdENvbm5lY3Rpb24oY29ubmVjdGlvbnMpO1xuICAgICAgICBpZiAoIWNvbm5lY3Rpb24pIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIkZhaWxlZCB0byBnZXQgYSBjb25uZWN0aW9uIHRvIHRoZSBwZWVyXCIpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBjb25uZWN0aW9uLm5ld1N0cmVhbSh0aGlzLm11bHRpY29kZWMpO1xuICAgIH1cbiAgICBwcmVwYXJlTmV3U3RyZWFtKHBlZXIpIHtcbiAgICAgICAgY29uc3Qgc3RyZWFtUHJvbWlzZSA9IHRoaXMubmV3U3RyZWFtKHBlZXIpLmNhdGNoKCgpID0+IHtcbiAgICAgICAgICAgIC8vIE5vIGVycm9yIHRocm93biBhcyB0aGlzIGNhbGwgaXMgbm90IHRyaWdnZXJlZCBieSB0aGUgdXNlclxuICAgICAgICAgICAgdGhpcy5sb2cuZXJyb3IoYEZhaWxlZCB0byBwcmVwYXJlIGEgbmV3IHN0cmVhbSBmb3IgJHtwZWVyLmlkLnRvU3RyaW5nKCl9YCk7XG4gICAgICAgIH0pO1xuICAgICAgICB0aGlzLnN0cmVhbVBvb2wuc2V0KHBlZXIuaWQudG9TdHJpbmcoKSwgc3RyZWFtUHJvbWlzZSk7XG4gICAgfVxuICAgIGhhbmRsZVBlZXJVcGRhdGVTdHJlYW1Qb29sID0gKGV2dCkgPT4ge1xuICAgICAgICBjb25zdCBwZWVyID0gZXZ0LmRldGFpbC5wZWVyO1xuICAgICAgICBpZiAocGVlci5wcm90b2NvbHMuaW5jbHVkZXModGhpcy5tdWx0aWNvZGVjKSkge1xuICAgICAgICAgICAgdGhpcy5sb2cuaW5mbyhgUHJlZW1wdGl2ZWx5IG9wZW5pbmcgYSBzdHJlYW0gdG8gJHtwZWVyLmlkLnRvU3RyaW5nKCl9YCk7XG4gICAgICAgICAgICB0aGlzLnByZXBhcmVOZXdTdHJlYW0ocGVlcik7XG4gICAgICAgIH1cbiAgICB9O1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c3RyZWFtX21hbmFnZXIuanMubWFwIl0sIm5hbWVzIjpbIkxvZ2dlciIsInNlbGVjdENvbm5lY3Rpb24iLCJTdHJlYW1NYW5hZ2VyIiwiY29uc3RydWN0b3IiLCJtdWx0aWNvZGVjIiwiZ2V0Q29ubmVjdGlvbnMiLCJhZGRFdmVudExpc3RlbmVyIiwiaGFuZGxlUGVlclVwZGF0ZVN0cmVhbVBvb2wiLCJldnQiLCJwZWVyIiwiZGV0YWlsIiwicHJvdG9jb2xzIiwiaW5jbHVkZXMiLCJsb2ciLCJpbmZvIiwiaWQiLCJ0b1N0cmluZyIsInByZXBhcmVOZXdTdHJlYW0iLCJiaW5kIiwiZ2V0U3RyZWFtIiwic3RyZWFtUG9vbCIsIk1hcCIsInBlZXJJZFN0ciIsInN0cmVhbVByb21pc2UiLCJnZXQiLCJuZXdTdHJlYW0iLCJkZWxldGUiLCJzdHJlYW0iLCJzdGF0dXMiLCJjb25uZWN0aW9ucyIsImNvbm5lY3Rpb24iLCJFcnJvciIsImNhdGNoIiwiZXJyb3IiLCJzZXQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/discovery/node_modules/@waku/core/dist/lib/stream_manager.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/discovery/node_modules/@waku/enr/dist/constants.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@waku/discovery/node_modules/@waku/enr/dist/constants.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ERR_INVALID_ID: () => (/* binding */ ERR_INVALID_ID),\n/* harmony export */   ERR_NO_SIGNATURE: () => (/* binding */ ERR_NO_SIGNATURE),\n/* harmony export */   MAX_RECORD_SIZE: () => (/* binding */ MAX_RECORD_SIZE),\n/* harmony export */   MULTIADDR_LENGTH_SIZE: () => (/* binding */ MULTIADDR_LENGTH_SIZE)\n/* harmony export */ });\n// Maximum encoded size of an ENR\nconst MAX_RECORD_SIZE = 300;\nconst ERR_INVALID_ID = \"Invalid record id\";\nconst ERR_NO_SIGNATURE = \"No valid signature found\";\n// The maximum length of byte size of a multiaddr to encode in the `multiaddr` field\n// The size is a big endian 16-bit unsigned integer\nconst MULTIADDR_LENGTH_SIZE = 2; //# sourceMappingURL=constants.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdha3UvZGlzY292ZXJ5L25vZGVfbW9kdWxlcy9Ad2FrdS9lbnIvZGlzdC9jb25zdGFudHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBLGlDQUFpQztBQUMxQixNQUFNQSxrQkFBa0IsSUFBSTtBQUM1QixNQUFNQyxpQkFBaUIsb0JBQW9CO0FBQzNDLE1BQU1DLG1CQUFtQiwyQkFBMkI7QUFDM0Qsb0ZBQW9GO0FBQ3BGLG1EQUFtRDtBQUM1QyxNQUFNQyx3QkFBd0IsRUFBRSxDQUN2QyxxQ0FBcUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mbHVzaC1ub3Rlcy8uL25vZGVfbW9kdWxlcy9Ad2FrdS9kaXNjb3Zlcnkvbm9kZV9tb2R1bGVzL0B3YWt1L2Vuci9kaXN0L2NvbnN0YW50cy5qcz81NDg1Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIE1heGltdW0gZW5jb2RlZCBzaXplIG9mIGFuIEVOUlxuZXhwb3J0IGNvbnN0IE1BWF9SRUNPUkRfU0laRSA9IDMwMDtcbmV4cG9ydCBjb25zdCBFUlJfSU5WQUxJRF9JRCA9IFwiSW52YWxpZCByZWNvcmQgaWRcIjtcbmV4cG9ydCBjb25zdCBFUlJfTk9fU0lHTkFUVVJFID0gXCJObyB2YWxpZCBzaWduYXR1cmUgZm91bmRcIjtcbi8vIFRoZSBtYXhpbXVtIGxlbmd0aCBvZiBieXRlIHNpemUgb2YgYSBtdWx0aWFkZHIgdG8gZW5jb2RlIGluIHRoZSBgbXVsdGlhZGRyYCBmaWVsZFxuLy8gVGhlIHNpemUgaXMgYSBiaWcgZW5kaWFuIDE2LWJpdCB1bnNpZ25lZCBpbnRlZ2VyXG5leHBvcnQgY29uc3QgTVVMVElBRERSX0xFTkdUSF9TSVpFID0gMjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNvbnN0YW50cy5qcy5tYXAiXSwibmFtZXMiOlsiTUFYX1JFQ09SRF9TSVpFIiwiRVJSX0lOVkFMSURfSUQiLCJFUlJfTk9fU0lHTkFUVVJFIiwiTVVMVElBRERSX0xFTkdUSF9TSVpFIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/discovery/node_modules/@waku/enr/dist/constants.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/discovery/node_modules/@waku/enr/dist/creator.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@waku/discovery/node_modules/@waku/enr/dist/creator.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   EnrCreator: () => (/* binding */ EnrCreator)\n/* harmony export */ });\n/* harmony import */ var _waku_utils_bytes__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @waku/utils/bytes */ \"(ssr)/./node_modules/@waku/utils/dist/bytes/index.js\");\n/* harmony import */ var _crypto_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./crypto.js */ \"(ssr)/./node_modules/@waku/discovery/node_modules/@waku/enr/dist/crypto.js\");\n/* harmony import */ var _enr_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./enr.js */ \"(ssr)/./node_modules/@waku/discovery/node_modules/@waku/enr/dist/enr.js\");\n/* harmony import */ var _peer_id_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./peer_id.js */ \"(ssr)/./node_modules/@waku/discovery/node_modules/@waku/enr/dist/peer_id.js\");\n\n\n\n\nclass EnrCreator {\n    static fromPublicKey(publicKey, kvs = {}) {\n        // EIP-778 specifies that the key must be in compressed format, 33 bytes\n        if (publicKey.length !== 33) {\n            publicKey = (0,_crypto_js__WEBPACK_IMPORTED_MODULE_1__.compressPublicKey)(publicKey);\n        }\n        return _enr_js__WEBPACK_IMPORTED_MODULE_2__.ENR.create({\n            ...kvs,\n            id: (0,_waku_utils_bytes__WEBPACK_IMPORTED_MODULE_0__.utf8ToBytes)(\"v4\"),\n            secp256k1: publicKey\n        });\n    }\n    static async fromPeerId(peerId, kvs = {}) {\n        switch(peerId.type){\n            case \"secp256k1\":\n                return EnrCreator.fromPublicKey((0,_peer_id_js__WEBPACK_IMPORTED_MODULE_3__.getPublicKeyFromPeerId)(peerId), kvs);\n            default:\n                throw new Error();\n        }\n    }\n} //# sourceMappingURL=creator.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdha3UvZGlzY292ZXJ5L25vZGVfbW9kdWxlcy9Ad2FrdS9lbnIvZGlzdC9jcmVhdG9yLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQWdEO0FBQ0E7QUFDakI7QUFDdUI7QUFDL0MsTUFBTUk7SUFDVCxPQUFPQyxjQUFjQyxTQUFTLEVBQUVDLE1BQU0sQ0FBQyxDQUFDLEVBQUU7UUFDdEMsd0VBQXdFO1FBQ3hFLElBQUlELFVBQVVFLE1BQU0sS0FBSyxJQUFJO1lBQ3pCRixZQUFZTCw2REFBaUJBLENBQUNLO1FBQ2xDO1FBQ0EsT0FBT0osd0NBQUdBLENBQUNPLE1BQU0sQ0FBQztZQUNkLEdBQUdGLEdBQUc7WUFDTkcsSUFBSVYsOERBQVdBLENBQUM7WUFDaEJXLFdBQVdMO1FBQ2Y7SUFDSjtJQUNBLGFBQWFNLFdBQVdDLE1BQU0sRUFBRU4sTUFBTSxDQUFDLENBQUMsRUFBRTtRQUN0QyxPQUFRTSxPQUFPQyxJQUFJO1lBQ2YsS0FBSztnQkFDRCxPQUFPVixXQUFXQyxhQUFhLENBQUNGLG1FQUFzQkEsQ0FBQ1UsU0FBU047WUFDcEU7Z0JBQ0ksTUFBTSxJQUFJUTtRQUNsQjtJQUNKO0FBQ0osRUFDQSxtQ0FBbUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mbHVzaC1ub3Rlcy8uL25vZGVfbW9kdWxlcy9Ad2FrdS9kaXNjb3Zlcnkvbm9kZV9tb2R1bGVzL0B3YWt1L2Vuci9kaXN0L2NyZWF0b3IuanM/MDAxYyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB1dGY4VG9CeXRlcyB9IGZyb20gXCJAd2FrdS91dGlscy9ieXRlc1wiO1xuaW1wb3J0IHsgY29tcHJlc3NQdWJsaWNLZXkgfSBmcm9tIFwiLi9jcnlwdG8uanNcIjtcbmltcG9ydCB7IEVOUiB9IGZyb20gXCIuL2Vuci5qc1wiO1xuaW1wb3J0IHsgZ2V0UHVibGljS2V5RnJvbVBlZXJJZCB9IGZyb20gXCIuL3BlZXJfaWQuanNcIjtcbmV4cG9ydCBjbGFzcyBFbnJDcmVhdG9yIHtcbiAgICBzdGF0aWMgZnJvbVB1YmxpY0tleShwdWJsaWNLZXksIGt2cyA9IHt9KSB7XG4gICAgICAgIC8vIEVJUC03Nzggc3BlY2lmaWVzIHRoYXQgdGhlIGtleSBtdXN0IGJlIGluIGNvbXByZXNzZWQgZm9ybWF0LCAzMyBieXRlc1xuICAgICAgICBpZiAocHVibGljS2V5Lmxlbmd0aCAhPT0gMzMpIHtcbiAgICAgICAgICAgIHB1YmxpY0tleSA9IGNvbXByZXNzUHVibGljS2V5KHB1YmxpY0tleSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIEVOUi5jcmVhdGUoe1xuICAgICAgICAgICAgLi4ua3ZzLFxuICAgICAgICAgICAgaWQ6IHV0ZjhUb0J5dGVzKFwidjRcIiksXG4gICAgICAgICAgICBzZWNwMjU2azE6IHB1YmxpY0tleVxuICAgICAgICB9KTtcbiAgICB9XG4gICAgc3RhdGljIGFzeW5jIGZyb21QZWVySWQocGVlcklkLCBrdnMgPSB7fSkge1xuICAgICAgICBzd2l0Y2ggKHBlZXJJZC50eXBlKSB7XG4gICAgICAgICAgICBjYXNlIFwic2VjcDI1NmsxXCI6XG4gICAgICAgICAgICAgICAgcmV0dXJuIEVuckNyZWF0b3IuZnJvbVB1YmxpY0tleShnZXRQdWJsaWNLZXlGcm9tUGVlcklkKHBlZXJJZCksIGt2cyk7XG4gICAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcigpO1xuICAgICAgICB9XG4gICAgfVxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y3JlYXRvci5qcy5tYXAiXSwibmFtZXMiOlsidXRmOFRvQnl0ZXMiLCJjb21wcmVzc1B1YmxpY0tleSIsIkVOUiIsImdldFB1YmxpY0tleUZyb21QZWVySWQiLCJFbnJDcmVhdG9yIiwiZnJvbVB1YmxpY0tleSIsInB1YmxpY0tleSIsImt2cyIsImxlbmd0aCIsImNyZWF0ZSIsImlkIiwic2VjcDI1NmsxIiwiZnJvbVBlZXJJZCIsInBlZXJJZCIsInR5cGUiLCJFcnJvciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/discovery/node_modules/@waku/enr/dist/creator.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/discovery/node_modules/@waku/enr/dist/crypto.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@waku/discovery/node_modules/@waku/enr/dist/crypto.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   compressPublicKey: () => (/* binding */ compressPublicKey),\n/* harmony export */   keccak256: () => (/* binding */ keccak256),\n/* harmony export */   sign: () => (/* binding */ sign),\n/* harmony export */   verifySignature: () => (/* binding */ verifySignature)\n/* harmony export */ });\n/* harmony import */ var _noble_secp256k1__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @noble/secp256k1 */ \"(ssr)/./node_modules/@noble/secp256k1/lib/esm/index.js\");\n/* harmony import */ var _waku_utils_bytes__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @waku/utils/bytes */ \"(ssr)/./node_modules/@waku/utils/dist/bytes/index.js\");\n/* harmony import */ var js_sha3__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! js-sha3 */ \"(ssr)/./node_modules/js-sha3/src/sha3.js\");\n\n\n\n/**\n * ECDSA Sign a message with the given private key.\n *\n *  @param message The message to sign, usually a hash.\n *  @param privateKey The ECDSA private key to use to sign the message.\n *\n *  @returns The signature and the recovery id concatenated.\n */ async function sign(message, privateKey) {\n    const [signature, recoveryId] = await _noble_secp256k1__WEBPACK_IMPORTED_MODULE_0__.sign(message, privateKey, {\n        recovered: true,\n        der: false\n    });\n    return (0,_waku_utils_bytes__WEBPACK_IMPORTED_MODULE_1__.concat)([\n        signature,\n        new Uint8Array([\n            recoveryId\n        ])\n    ], signature.length + 1);\n}\nfunction keccak256(input) {\n    return new Uint8Array(js_sha3__WEBPACK_IMPORTED_MODULE_2__.keccak256.arrayBuffer(input));\n}\nfunction compressPublicKey(publicKey) {\n    if (publicKey.length === 64) {\n        publicKey = (0,_waku_utils_bytes__WEBPACK_IMPORTED_MODULE_1__.concat)([\n            new Uint8Array([\n                4\n            ]),\n            publicKey\n        ], 65);\n    }\n    const point = _noble_secp256k1__WEBPACK_IMPORTED_MODULE_0__.Point.fromHex(publicKey);\n    return point.toRawBytes(true);\n}\n/**\n * Verify an ECDSA signature.\n */ function verifySignature(signature, message, publicKey) {\n    try {\n        const _signature = _noble_secp256k1__WEBPACK_IMPORTED_MODULE_0__.Signature.fromCompact(signature.slice(0, 64));\n        return _noble_secp256k1__WEBPACK_IMPORTED_MODULE_0__.verify(_signature, message, publicKey);\n    } catch  {\n        return false;\n    }\n} //# sourceMappingURL=crypto.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdha3UvZGlzY292ZXJ5L25vZGVfbW9kdWxlcy9Ad2FrdS9lbnIvZGlzdC9jcnlwdG8uanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUF5QztBQUNFO0FBQ2hCO0FBQzNCOzs7Ozs7O0NBT0MsR0FDTSxlQUFlRyxLQUFLQyxPQUFPLEVBQUVDLFVBQVU7SUFDMUMsTUFBTSxDQUFDQyxXQUFXQyxXQUFXLEdBQUcsTUFBTVAsa0RBQVMsQ0FBQ0ksU0FBU0MsWUFBWTtRQUNqRUcsV0FBVztRQUNYQyxLQUFLO0lBQ1Q7SUFDQSxPQUFPUix5REFBTUEsQ0FBQztRQUFDSztRQUFXLElBQUlJLFdBQVc7WUFBQ0g7U0FBVztLQUFFLEVBQUVELFVBQVVLLE1BQU0sR0FBRztBQUNoRjtBQUNPLFNBQVNDLFVBQVVDLEtBQUs7SUFDM0IsT0FBTyxJQUFJSCxXQUFXUiw4Q0FBYyxDQUFDWSxXQUFXLENBQUNEO0FBQ3JEO0FBQ08sU0FBU0Usa0JBQWtCQyxTQUFTO0lBQ3ZDLElBQUlBLFVBQVVMLE1BQU0sS0FBSyxJQUFJO1FBQ3pCSyxZQUFZZix5REFBTUEsQ0FBQztZQUFDLElBQUlTLFdBQVc7Z0JBQUM7YUFBRTtZQUFHTTtTQUFVLEVBQUU7SUFDekQ7SUFDQSxNQUFNQyxRQUFRakIsbURBQVUsQ0FBQ21CLE9BQU8sQ0FBQ0g7SUFDakMsT0FBT0MsTUFBTUcsVUFBVSxDQUFDO0FBQzVCO0FBQ0E7O0NBRUMsR0FDTSxTQUFTQyxnQkFBZ0JmLFNBQVMsRUFBRUYsT0FBTyxFQUFFWSxTQUFTO0lBQ3pELElBQUk7UUFDQSxNQUFNTSxhQUFhdEIsdURBQWMsQ0FBQ3dCLFdBQVcsQ0FBQ2xCLFVBQVVtQixLQUFLLENBQUMsR0FBRztRQUNqRSxPQUFPekIsb0RBQVcsQ0FBQ3NCLFlBQVlsQixTQUFTWTtJQUM1QyxFQUNBLE9BQU07UUFDRixPQUFPO0lBQ1g7QUFDSixFQUNBLGtDQUFrQyIsInNvdXJjZXMiOlsid2VicGFjazovL2ZsdXNoLW5vdGVzLy4vbm9kZV9tb2R1bGVzL0B3YWt1L2Rpc2NvdmVyeS9ub2RlX21vZHVsZXMvQHdha3UvZW5yL2Rpc3QvY3J5cHRvLmpzP2IyMjMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgc2VjcCBmcm9tIFwiQG5vYmxlL3NlY3AyNTZrMVwiO1xuaW1wb3J0IHsgY29uY2F0IH0gZnJvbSBcIkB3YWt1L3V0aWxzL2J5dGVzXCI7XG5pbXBvcnQgc2hhMyBmcm9tIFwianMtc2hhM1wiO1xuLyoqXG4gKiBFQ0RTQSBTaWduIGEgbWVzc2FnZSB3aXRoIHRoZSBnaXZlbiBwcml2YXRlIGtleS5cbiAqXG4gKiAgQHBhcmFtIG1lc3NhZ2UgVGhlIG1lc3NhZ2UgdG8gc2lnbiwgdXN1YWxseSBhIGhhc2guXG4gKiAgQHBhcmFtIHByaXZhdGVLZXkgVGhlIEVDRFNBIHByaXZhdGUga2V5IHRvIHVzZSB0byBzaWduIHRoZSBtZXNzYWdlLlxuICpcbiAqICBAcmV0dXJucyBUaGUgc2lnbmF0dXJlIGFuZCB0aGUgcmVjb3ZlcnkgaWQgY29uY2F0ZW5hdGVkLlxuICovXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gc2lnbihtZXNzYWdlLCBwcml2YXRlS2V5KSB7XG4gICAgY29uc3QgW3NpZ25hdHVyZSwgcmVjb3ZlcnlJZF0gPSBhd2FpdCBzZWNwLnNpZ24obWVzc2FnZSwgcHJpdmF0ZUtleSwge1xuICAgICAgICByZWNvdmVyZWQ6IHRydWUsXG4gICAgICAgIGRlcjogZmFsc2VcbiAgICB9KTtcbiAgICByZXR1cm4gY29uY2F0KFtzaWduYXR1cmUsIG5ldyBVaW50OEFycmF5KFtyZWNvdmVyeUlkXSldLCBzaWduYXR1cmUubGVuZ3RoICsgMSk7XG59XG5leHBvcnQgZnVuY3Rpb24ga2VjY2FrMjU2KGlucHV0KSB7XG4gICAgcmV0dXJuIG5ldyBVaW50OEFycmF5KHNoYTMua2VjY2FrMjU2LmFycmF5QnVmZmVyKGlucHV0KSk7XG59XG5leHBvcnQgZnVuY3Rpb24gY29tcHJlc3NQdWJsaWNLZXkocHVibGljS2V5KSB7XG4gICAgaWYgKHB1YmxpY0tleS5sZW5ndGggPT09IDY0KSB7XG4gICAgICAgIHB1YmxpY0tleSA9IGNvbmNhdChbbmV3IFVpbnQ4QXJyYXkoWzRdKSwgcHVibGljS2V5XSwgNjUpO1xuICAgIH1cbiAgICBjb25zdCBwb2ludCA9IHNlY3AuUG9pbnQuZnJvbUhleChwdWJsaWNLZXkpO1xuICAgIHJldHVybiBwb2ludC50b1Jhd0J5dGVzKHRydWUpO1xufVxuLyoqXG4gKiBWZXJpZnkgYW4gRUNEU0Egc2lnbmF0dXJlLlxuICovXG5leHBvcnQgZnVuY3Rpb24gdmVyaWZ5U2lnbmF0dXJlKHNpZ25hdHVyZSwgbWVzc2FnZSwgcHVibGljS2V5KSB7XG4gICAgdHJ5IHtcbiAgICAgICAgY29uc3QgX3NpZ25hdHVyZSA9IHNlY3AuU2lnbmF0dXJlLmZyb21Db21wYWN0KHNpZ25hdHVyZS5zbGljZSgwLCA2NCkpO1xuICAgICAgICByZXR1cm4gc2VjcC52ZXJpZnkoX3NpZ25hdHVyZSwgbWVzc2FnZSwgcHVibGljS2V5KTtcbiAgICB9XG4gICAgY2F0Y2gge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y3J5cHRvLmpzLm1hcCJdLCJuYW1lcyI6WyJzZWNwIiwiY29uY2F0Iiwic2hhMyIsInNpZ24iLCJtZXNzYWdlIiwicHJpdmF0ZUtleSIsInNpZ25hdHVyZSIsInJlY292ZXJ5SWQiLCJyZWNvdmVyZWQiLCJkZXIiLCJVaW50OEFycmF5IiwibGVuZ3RoIiwia2VjY2FrMjU2IiwiaW5wdXQiLCJhcnJheUJ1ZmZlciIsImNvbXByZXNzUHVibGljS2V5IiwicHVibGljS2V5IiwicG9pbnQiLCJQb2ludCIsImZyb21IZXgiLCJ0b1Jhd0J5dGVzIiwidmVyaWZ5U2lnbmF0dXJlIiwiX3NpZ25hdHVyZSIsIlNpZ25hdHVyZSIsImZyb21Db21wYWN0Iiwic2xpY2UiLCJ2ZXJpZnkiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/discovery/node_modules/@waku/enr/dist/crypto.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/discovery/node_modules/@waku/enr/dist/decoder.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@waku/discovery/node_modules/@waku/enr/dist/decoder.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   EnrDecoder: () => (/* binding */ EnrDecoder)\n/* harmony export */ });\n/* harmony import */ var _ethersproject_rlp__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @ethersproject/rlp */ \"(ssr)/./node_modules/@ethersproject/rlp/lib.esm/index.js\");\n/* harmony import */ var _waku_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @waku/utils */ \"(ssr)/./node_modules/@waku/utils/dist/index.js\");\n/* harmony import */ var _waku_utils_bytes__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @waku/utils/bytes */ \"(ssr)/./node_modules/@waku/utils/dist/bytes/index.js\");\n/* harmony import */ var uint8arrays_from_string__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! uint8arrays/from-string */ \"(ssr)/./node_modules/uint8arrays/dist/src/from-string.node.js\");\n/* harmony import */ var _enr_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./enr.js */ \"(ssr)/./node_modules/@waku/discovery/node_modules/@waku/enr/dist/enr.js\");\n\n\n\n\n\nconst log = new _waku_utils__WEBPACK_IMPORTED_MODULE_0__.Logger(\"enr:decoder\");\nclass EnrDecoder {\n    static fromString(encoded) {\n        if (!encoded.startsWith(_enr_js__WEBPACK_IMPORTED_MODULE_3__.ENR.RECORD_PREFIX)) {\n            throw new Error(`\"string encoded ENR must start with '${_enr_js__WEBPACK_IMPORTED_MODULE_3__.ENR.RECORD_PREFIX}'`);\n        }\n        return EnrDecoder.fromRLP((0,uint8arrays_from_string__WEBPACK_IMPORTED_MODULE_2__.fromString)(encoded.slice(4), \"base64url\"));\n    }\n    static fromRLP(encoded) {\n        const decoded = _ethersproject_rlp__WEBPACK_IMPORTED_MODULE_4__.decode(encoded).map(_waku_utils_bytes__WEBPACK_IMPORTED_MODULE_1__.hexToBytes);\n        return fromValues(decoded);\n    }\n}\nasync function fromValues(values) {\n    const { signature, seq, kvs } = checkValues(values);\n    const obj = {};\n    for(let i = 0; i < kvs.length; i += 2){\n        try {\n            obj[(0,_waku_utils_bytes__WEBPACK_IMPORTED_MODULE_1__.bytesToUtf8)(kvs[i])] = kvs[i + 1];\n        } catch (e) {\n            log.error(\"Failed to decode ENR key to UTF-8, skipping it\", kvs[i], e);\n        }\n    }\n    const _seq = decodeSeq(seq);\n    const enr = await _enr_js__WEBPACK_IMPORTED_MODULE_3__.ENR.create(obj, _seq, signature);\n    checkSignature(seq, kvs, enr, signature);\n    return enr;\n}\nfunction decodeSeq(seq) {\n    // If seq is an empty array, translate as value 0\n    if (!seq.length) return BigInt(0);\n    return BigInt(\"0x\" + (0,_waku_utils_bytes__WEBPACK_IMPORTED_MODULE_1__.bytesToHex)(seq));\n}\nfunction checkValues(values) {\n    if (!Array.isArray(values)) {\n        throw new Error(\"Decoded ENR must be an array\");\n    }\n    if (values.length % 2 !== 0) {\n        throw new Error(\"Decoded ENR must have an even number of elements\");\n    }\n    const [signature, seq, ...kvs] = values;\n    if (!signature || Array.isArray(signature)) {\n        throw new Error(\"Decoded ENR invalid signature: must be a byte array\");\n    }\n    if (!seq || Array.isArray(seq)) {\n        throw new Error(\"Decoded ENR invalid sequence number: must be a byte array\");\n    }\n    return {\n        signature,\n        seq,\n        kvs\n    };\n}\nfunction checkSignature(seq, kvs, enr, signature) {\n    const rlpEncodedBytes = (0,_waku_utils_bytes__WEBPACK_IMPORTED_MODULE_1__.hexToBytes)(_ethersproject_rlp__WEBPACK_IMPORTED_MODULE_4__.encode([\n        seq,\n        ...kvs\n    ]));\n    if (!enr.verify(rlpEncodedBytes, signature)) {\n        throw new Error(\"Unable to verify ENR signature\");\n    }\n} //# sourceMappingURL=decoder.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdha3UvZGlzY292ZXJ5L25vZGVfbW9kdWxlcy9Ad2FrdS9lbnIvZGlzdC9kZWNvZGVyLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUEwQztBQUNMO0FBQ21DO0FBQ25CO0FBQ3RCO0FBQy9CLE1BQU1PLE1BQU0sSUFBSU4sK0NBQU1BLENBQUM7QUFDaEIsTUFBTU87SUFDVCxPQUFPSCxXQUFXSSxPQUFPLEVBQUU7UUFDdkIsSUFBSSxDQUFDQSxRQUFRQyxVQUFVLENBQUNKLHdDQUFHQSxDQUFDSyxhQUFhLEdBQUc7WUFDeEMsTUFBTSxJQUFJQyxNQUFNLENBQUMscUNBQXFDLEVBQUVOLHdDQUFHQSxDQUFDSyxhQUFhLENBQUMsQ0FBQyxDQUFDO1FBQ2hGO1FBQ0EsT0FBT0gsV0FBV0ssT0FBTyxDQUFDUixtRUFBVUEsQ0FBQ0ksUUFBUUssS0FBSyxDQUFDLElBQUk7SUFDM0Q7SUFDQSxPQUFPRCxRQUFRSixPQUFPLEVBQUU7UUFDcEIsTUFBTU0sVUFBVWYsc0RBQVUsQ0FBQ1MsU0FBU1EsR0FBRyxDQUFDYix5REFBVUE7UUFDbEQsT0FBT2MsV0FBV0g7SUFDdEI7QUFDSjtBQUNBLGVBQWVHLFdBQVdDLE1BQU07SUFDNUIsTUFBTSxFQUFFQyxTQUFTLEVBQUVDLEdBQUcsRUFBRUMsR0FBRyxFQUFFLEdBQUdDLFlBQVlKO0lBQzVDLE1BQU1LLE1BQU0sQ0FBQztJQUNiLElBQUssSUFBSUMsSUFBSSxHQUFHQSxJQUFJSCxJQUFJSSxNQUFNLEVBQUVELEtBQUssRUFBRztRQUNwQyxJQUFJO1lBQ0FELEdBQUcsQ0FBQ3JCLDhEQUFXQSxDQUFDbUIsR0FBRyxDQUFDRyxFQUFFLEVBQUUsR0FBR0gsR0FBRyxDQUFDRyxJQUFJLEVBQUU7UUFDekMsRUFDQSxPQUFPRSxHQUFHO1lBQ05wQixJQUFJcUIsS0FBSyxDQUFDLGtEQUFrRE4sR0FBRyxDQUFDRyxFQUFFLEVBQUVFO1FBQ3hFO0lBQ0o7SUFDQSxNQUFNRSxPQUFPQyxVQUFVVDtJQUN2QixNQUFNVSxNQUFNLE1BQU16Qix3Q0FBR0EsQ0FBQzBCLE1BQU0sQ0FBQ1IsS0FBS0ssTUFBTVQ7SUFDeENhLGVBQWVaLEtBQUtDLEtBQUtTLEtBQUtYO0lBQzlCLE9BQU9XO0FBQ1g7QUFDQSxTQUFTRCxVQUFVVCxHQUFHO0lBQ2xCLGlEQUFpRDtJQUNqRCxJQUFJLENBQUNBLElBQUlLLE1BQU0sRUFDWCxPQUFPUSxPQUFPO0lBQ2xCLE9BQU9BLE9BQU8sT0FBT2hDLDZEQUFVQSxDQUFDbUI7QUFDcEM7QUFDQSxTQUFTRSxZQUFZSixNQUFNO0lBQ3ZCLElBQUksQ0FBQ2dCLE1BQU1DLE9BQU8sQ0FBQ2pCLFNBQVM7UUFDeEIsTUFBTSxJQUFJUCxNQUFNO0lBQ3BCO0lBQ0EsSUFBSU8sT0FBT08sTUFBTSxHQUFHLE1BQU0sR0FBRztRQUN6QixNQUFNLElBQUlkLE1BQU07SUFDcEI7SUFDQSxNQUFNLENBQUNRLFdBQVdDLEtBQUssR0FBR0MsSUFBSSxHQUFHSDtJQUNqQyxJQUFJLENBQUNDLGFBQWFlLE1BQU1DLE9BQU8sQ0FBQ2hCLFlBQVk7UUFDeEMsTUFBTSxJQUFJUixNQUFNO0lBQ3BCO0lBQ0EsSUFBSSxDQUFDUyxPQUFPYyxNQUFNQyxPQUFPLENBQUNmLE1BQU07UUFDNUIsTUFBTSxJQUFJVCxNQUFNO0lBQ3BCO0lBQ0EsT0FBTztRQUFFUTtRQUFXQztRQUFLQztJQUFJO0FBQ2pDO0FBQ0EsU0FBU1csZUFBZVosR0FBRyxFQUFFQyxHQUFHLEVBQUVTLEdBQUcsRUFBRVgsU0FBUztJQUM1QyxNQUFNaUIsa0JBQWtCakMsNkRBQVVBLENBQUNKLHNEQUFVLENBQUM7UUFBQ3FCO1dBQVFDO0tBQUk7SUFDM0QsSUFBSSxDQUFDUyxJQUFJUSxNQUFNLENBQUNGLGlCQUFpQmpCLFlBQVk7UUFDekMsTUFBTSxJQUFJUixNQUFNO0lBQ3BCO0FBQ0osRUFDQSxtQ0FBbUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mbHVzaC1ub3Rlcy8uL25vZGVfbW9kdWxlcy9Ad2FrdS9kaXNjb3Zlcnkvbm9kZV9tb2R1bGVzL0B3YWt1L2Vuci9kaXN0L2RlY29kZXIuanM/YTg4ZSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBSTFAgZnJvbSBcIkBldGhlcnNwcm9qZWN0L3JscFwiO1xuaW1wb3J0IHsgTG9nZ2VyIH0gZnJvbSBcIkB3YWt1L3V0aWxzXCI7XG5pbXBvcnQgeyBieXRlc1RvSGV4LCBieXRlc1RvVXRmOCwgaGV4VG9CeXRlcyB9IGZyb20gXCJAd2FrdS91dGlscy9ieXRlc1wiO1xuaW1wb3J0IHsgZnJvbVN0cmluZyB9IGZyb20gXCJ1aW50OGFycmF5cy9mcm9tLXN0cmluZ1wiO1xuaW1wb3J0IHsgRU5SIH0gZnJvbSBcIi4vZW5yLmpzXCI7XG5jb25zdCBsb2cgPSBuZXcgTG9nZ2VyKFwiZW5yOmRlY29kZXJcIik7XG5leHBvcnQgY2xhc3MgRW5yRGVjb2RlciB7XG4gICAgc3RhdGljIGZyb21TdHJpbmcoZW5jb2RlZCkge1xuICAgICAgICBpZiAoIWVuY29kZWQuc3RhcnRzV2l0aChFTlIuUkVDT1JEX1BSRUZJWCkpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgXCJzdHJpbmcgZW5jb2RlZCBFTlIgbXVzdCBzdGFydCB3aXRoICcke0VOUi5SRUNPUkRfUFJFRklYfSdgKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gRW5yRGVjb2Rlci5mcm9tUkxQKGZyb21TdHJpbmcoZW5jb2RlZC5zbGljZSg0KSwgXCJiYXNlNjR1cmxcIikpO1xuICAgIH1cbiAgICBzdGF0aWMgZnJvbVJMUChlbmNvZGVkKSB7XG4gICAgICAgIGNvbnN0IGRlY29kZWQgPSBSTFAuZGVjb2RlKGVuY29kZWQpLm1hcChoZXhUb0J5dGVzKTtcbiAgICAgICAgcmV0dXJuIGZyb21WYWx1ZXMoZGVjb2RlZCk7XG4gICAgfVxufVxuYXN5bmMgZnVuY3Rpb24gZnJvbVZhbHVlcyh2YWx1ZXMpIHtcbiAgICBjb25zdCB7IHNpZ25hdHVyZSwgc2VxLCBrdnMgfSA9IGNoZWNrVmFsdWVzKHZhbHVlcyk7XG4gICAgY29uc3Qgb2JqID0ge307XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBrdnMubGVuZ3RoOyBpICs9IDIpIHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIG9ialtieXRlc1RvVXRmOChrdnNbaV0pXSA9IGt2c1tpICsgMV07XG4gICAgICAgIH1cbiAgICAgICAgY2F0Y2ggKGUpIHtcbiAgICAgICAgICAgIGxvZy5lcnJvcihcIkZhaWxlZCB0byBkZWNvZGUgRU5SIGtleSB0byBVVEYtOCwgc2tpcHBpbmcgaXRcIiwga3ZzW2ldLCBlKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBjb25zdCBfc2VxID0gZGVjb2RlU2VxKHNlcSk7XG4gICAgY29uc3QgZW5yID0gYXdhaXQgRU5SLmNyZWF0ZShvYmosIF9zZXEsIHNpZ25hdHVyZSk7XG4gICAgY2hlY2tTaWduYXR1cmUoc2VxLCBrdnMsIGVuciwgc2lnbmF0dXJlKTtcbiAgICByZXR1cm4gZW5yO1xufVxuZnVuY3Rpb24gZGVjb2RlU2VxKHNlcSkge1xuICAgIC8vIElmIHNlcSBpcyBhbiBlbXB0eSBhcnJheSwgdHJhbnNsYXRlIGFzIHZhbHVlIDBcbiAgICBpZiAoIXNlcS5sZW5ndGgpXG4gICAgICAgIHJldHVybiBCaWdJbnQoMCk7XG4gICAgcmV0dXJuIEJpZ0ludChcIjB4XCIgKyBieXRlc1RvSGV4KHNlcSkpO1xufVxuZnVuY3Rpb24gY2hlY2tWYWx1ZXModmFsdWVzKSB7XG4gICAgaWYgKCFBcnJheS5pc0FycmF5KHZhbHVlcykpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiRGVjb2RlZCBFTlIgbXVzdCBiZSBhbiBhcnJheVwiKTtcbiAgICB9XG4gICAgaWYgKHZhbHVlcy5sZW5ndGggJSAyICE9PSAwKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIkRlY29kZWQgRU5SIG11c3QgaGF2ZSBhbiBldmVuIG51bWJlciBvZiBlbGVtZW50c1wiKTtcbiAgICB9XG4gICAgY29uc3QgW3NpZ25hdHVyZSwgc2VxLCAuLi5rdnNdID0gdmFsdWVzO1xuICAgIGlmICghc2lnbmF0dXJlIHx8IEFycmF5LmlzQXJyYXkoc2lnbmF0dXJlKSkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJEZWNvZGVkIEVOUiBpbnZhbGlkIHNpZ25hdHVyZTogbXVzdCBiZSBhIGJ5dGUgYXJyYXlcIik7XG4gICAgfVxuICAgIGlmICghc2VxIHx8IEFycmF5LmlzQXJyYXkoc2VxKSkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJEZWNvZGVkIEVOUiBpbnZhbGlkIHNlcXVlbmNlIG51bWJlcjogbXVzdCBiZSBhIGJ5dGUgYXJyYXlcIik7XG4gICAgfVxuICAgIHJldHVybiB7IHNpZ25hdHVyZSwgc2VxLCBrdnMgfTtcbn1cbmZ1bmN0aW9uIGNoZWNrU2lnbmF0dXJlKHNlcSwga3ZzLCBlbnIsIHNpZ25hdHVyZSkge1xuICAgIGNvbnN0IHJscEVuY29kZWRCeXRlcyA9IGhleFRvQnl0ZXMoUkxQLmVuY29kZShbc2VxLCAuLi5rdnNdKSk7XG4gICAgaWYgKCFlbnIudmVyaWZ5KHJscEVuY29kZWRCeXRlcywgc2lnbmF0dXJlKSkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJVbmFibGUgdG8gdmVyaWZ5IEVOUiBzaWduYXR1cmVcIik7XG4gICAgfVxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGVjb2Rlci5qcy5tYXAiXSwibmFtZXMiOlsiUkxQIiwiTG9nZ2VyIiwiYnl0ZXNUb0hleCIsImJ5dGVzVG9VdGY4IiwiaGV4VG9CeXRlcyIsImZyb21TdHJpbmciLCJFTlIiLCJsb2ciLCJFbnJEZWNvZGVyIiwiZW5jb2RlZCIsInN0YXJ0c1dpdGgiLCJSRUNPUkRfUFJFRklYIiwiRXJyb3IiLCJmcm9tUkxQIiwic2xpY2UiLCJkZWNvZGVkIiwiZGVjb2RlIiwibWFwIiwiZnJvbVZhbHVlcyIsInZhbHVlcyIsInNpZ25hdHVyZSIsInNlcSIsImt2cyIsImNoZWNrVmFsdWVzIiwib2JqIiwiaSIsImxlbmd0aCIsImUiLCJlcnJvciIsIl9zZXEiLCJkZWNvZGVTZXEiLCJlbnIiLCJjcmVhdGUiLCJjaGVja1NpZ25hdHVyZSIsIkJpZ0ludCIsIkFycmF5IiwiaXNBcnJheSIsInJscEVuY29kZWRCeXRlcyIsImVuY29kZSIsInZlcmlmeSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/discovery/node_modules/@waku/enr/dist/decoder.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/discovery/node_modules/@waku/enr/dist/enr.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@waku/discovery/node_modules/@waku/enr/dist/enr.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ENR: () => (/* binding */ ENR),\n/* harmony export */   TransportProtocol: () => (/* binding */ TransportProtocol),\n/* harmony export */   TransportProtocolPerIpVersion: () => (/* binding */ TransportProtocolPerIpVersion)\n/* harmony export */ });\n/* harmony import */ var _waku_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @waku/utils */ \"(ssr)/./node_modules/@waku/utils/dist/index.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./constants.js */ \"(ssr)/./node_modules/@waku/discovery/node_modules/@waku/enr/dist/constants.js\");\n/* harmony import */ var _crypto_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./crypto.js */ \"(ssr)/./node_modules/@waku/discovery/node_modules/@waku/enr/dist/crypto.js\");\n/* harmony import */ var _get_multiaddr_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./get_multiaddr.js */ \"(ssr)/./node_modules/@waku/discovery/node_modules/@waku/enr/dist/get_multiaddr.js\");\n/* harmony import */ var _peer_id_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./peer_id.js */ \"(ssr)/./node_modules/@waku/discovery/node_modules/@waku/enr/dist/peer_id.js\");\n/* harmony import */ var _raw_enr_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./raw_enr.js */ \"(ssr)/./node_modules/@waku/discovery/node_modules/@waku/enr/dist/raw_enr.js\");\n/* harmony import */ var _v4_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./v4.js */ \"(ssr)/./node_modules/@waku/discovery/node_modules/@waku/enr/dist/v4.js\");\n\n\n\n\n\n\n\nconst log = new _waku_utils__WEBPACK_IMPORTED_MODULE_0__.Logger(\"enr\");\nvar TransportProtocol;\n(function(TransportProtocol) {\n    TransportProtocol[\"TCP\"] = \"tcp\";\n    TransportProtocol[\"UDP\"] = \"udp\";\n})(TransportProtocol || (TransportProtocol = {}));\nvar TransportProtocolPerIpVersion;\n(function(TransportProtocolPerIpVersion) {\n    TransportProtocolPerIpVersion[\"TCP4\"] = \"tcp4\";\n    TransportProtocolPerIpVersion[\"UDP4\"] = \"udp4\";\n    TransportProtocolPerIpVersion[\"TCP6\"] = \"tcp6\";\n    TransportProtocolPerIpVersion[\"UDP6\"] = \"udp6\";\n})(TransportProtocolPerIpVersion || (TransportProtocolPerIpVersion = {}));\nclass ENR extends _raw_enr_js__WEBPACK_IMPORTED_MODULE_5__.RawEnr {\n    static{\n        this.RECORD_PREFIX = \"enr:\";\n    }\n    static async create(kvs = {}, seq = BigInt(1), signature) {\n        const enr = new ENR(kvs, seq, signature);\n        try {\n            const publicKey = enr.publicKey;\n            if (publicKey) {\n                enr.peerId = await (0,_peer_id_js__WEBPACK_IMPORTED_MODULE_4__.createPeerIdFromPublicKey)(publicKey);\n            }\n        } catch (e) {\n            log.error(\"Could not calculate peer id for ENR\", e);\n        }\n        return enr;\n    }\n    get nodeId() {\n        switch(this.id){\n            case \"v4\":\n                return this.publicKey ? _v4_js__WEBPACK_IMPORTED_MODULE_6__.nodeId(this.publicKey) : undefined;\n            default:\n                throw new Error(_constants_js__WEBPACK_IMPORTED_MODULE_1__.ERR_INVALID_ID);\n        }\n    }\n    get shardInfo() {\n        if (this.rs && this.rsv) {\n            log.warn(\"ENR contains both `rs` and `rsv` fields.\");\n        }\n        return this.rs || this.rsv;\n    }\n    setLocationMultiaddr(multiaddr) {\n        const protoNames = multiaddr.protoNames();\n        if (protoNames.length !== 2 && protoNames[1] !== \"udp\" && protoNames[1] !== \"tcp\") {\n            throw new Error(\"Invalid multiaddr\");\n        }\n        const tuples = multiaddr.tuples();\n        if (!tuples[0][1] || !tuples[1][1]) {\n            throw new Error(\"Invalid multiaddr\");\n        }\n        // IPv4\n        if (tuples[0][0] === 4) {\n            this.set(\"ip\", tuples[0][1]);\n            this.set(protoNames[1], tuples[1][1]);\n        } else {\n            this.set(\"ip6\", tuples[0][1]);\n            this.set(protoNames[1] + \"6\", tuples[1][1]);\n        }\n    }\n    getAllLocationMultiaddrs() {\n        const multiaddrs = [];\n        for (const protocol of Object.values(TransportProtocolPerIpVersion)){\n            const ma = this.getLocationMultiaddr(protocol);\n            if (ma) multiaddrs.push(ma);\n        }\n        const _multiaddrs = this.multiaddrs ?? [];\n        return multiaddrs.concat(_multiaddrs).map((ma)=>{\n            if (this.peerId) {\n                return ma.encapsulate(`/p2p/${this.peerId.toString()}`);\n            }\n            return ma;\n        });\n    }\n    get peerInfo() {\n        const id = this.peerId;\n        if (!id) return;\n        return {\n            id,\n            multiaddrs: this.getAllLocationMultiaddrs()\n        };\n    }\n    /**\n     * Returns the full multiaddr from the ENR fields matching the provided\n     * `protocol` parameter.\n     * To return full multiaddrs from the `multiaddrs` ENR field,\n     * use { @link ENR.getFullMultiaddrs }.\n     *\n     * @param protocol\n     */ getFullMultiaddr(protocol) {\n        if (this.peerId) {\n            const locationMultiaddr = this.getLocationMultiaddr(protocol);\n            if (locationMultiaddr) {\n                return locationMultiaddr.encapsulate(`/p2p/${this.peerId.toString()}`);\n            }\n        }\n        return;\n    }\n    /**\n     * Returns the full multiaddrs from the `multiaddrs` ENR field.\n     */ getFullMultiaddrs() {\n        if (this.peerId && this.multiaddrs) {\n            const peerId = this.peerId;\n            return this.multiaddrs.map((ma)=>{\n                return ma.encapsulate(`/p2p/${peerId.toString()}`);\n            });\n        }\n        return [];\n    }\n    verify(data, signature) {\n        if (!this.get(\"id\") || this.id !== \"v4\") {\n            throw new Error(_constants_js__WEBPACK_IMPORTED_MODULE_1__.ERR_INVALID_ID);\n        }\n        if (!this.publicKey) {\n            throw new Error(\"Failed to verify ENR: No public key\");\n        }\n        return (0,_crypto_js__WEBPACK_IMPORTED_MODULE_2__.verifySignature)(signature, (0,_crypto_js__WEBPACK_IMPORTED_MODULE_2__.keccak256)(data), this.publicKey);\n    }\n    async sign(data, privateKey) {\n        switch(this.id){\n            case \"v4\":\n                this.signature = await _v4_js__WEBPACK_IMPORTED_MODULE_6__.sign(privateKey, data);\n                break;\n            default:\n                throw new Error(_constants_js__WEBPACK_IMPORTED_MODULE_1__.ERR_INVALID_ID);\n        }\n        return this.signature;\n    }\n    constructor(...args){\n        super(...args);\n        this.getLocationMultiaddr = _get_multiaddr_js__WEBPACK_IMPORTED_MODULE_3__.locationMultiaddrFromEnrFields.bind({}, this);\n    }\n} //# sourceMappingURL=enr.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/discovery/node_modules/@waku/enr/dist/enr.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/discovery/node_modules/@waku/enr/dist/get_multiaddr.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@waku/discovery/node_modules/@waku/enr/dist/get_multiaddr.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   locationMultiaddrFromEnrFields: () => (/* binding */ locationMultiaddrFromEnrFields)\n/* harmony export */ });\n/* harmony import */ var _multiaddr_from_fields_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./multiaddr_from_fields.js */ \"(ssr)/./node_modules/@waku/discovery/node_modules/@waku/enr/dist/multiaddr_from_fields.js\");\n\nfunction locationMultiaddrFromEnrFields(enr, protocol) {\n    switch(protocol){\n        case \"udp\":\n            return locationMultiaddrFromEnrFields(enr, \"udp4\") || locationMultiaddrFromEnrFields(enr, \"udp6\");\n        case \"tcp\":\n            return locationMultiaddrFromEnrFields(enr, \"tcp4\") || locationMultiaddrFromEnrFields(enr, \"tcp6\");\n    }\n    const isIpv6 = protocol.endsWith(\"6\");\n    const ipVal = enr.get(isIpv6 ? \"ip6\" : \"ip\");\n    if (!ipVal) return;\n    const protoName = protocol.slice(0, 3);\n    let protoVal;\n    switch(protoName){\n        case \"udp\":\n            protoVal = isIpv6 ? enr.get(\"udp6\") : enr.get(\"udp\");\n            break;\n        case \"tcp\":\n            protoVal = isIpv6 ? enr.get(\"tcp6\") : enr.get(\"tcp\");\n            break;\n        default:\n            return;\n    }\n    if (!protoVal) return;\n    return (0,_multiaddr_from_fields_js__WEBPACK_IMPORTED_MODULE_0__.multiaddrFromFields)(isIpv6 ? \"ip6\" : \"ip4\", protoName, ipVal, protoVal);\n} //# sourceMappingURL=get_multiaddr.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdha3UvZGlzY292ZXJ5L25vZGVfbW9kdWxlcy9Ad2FrdS9lbnIvZGlzdC9nZXRfbXVsdGlhZGRyLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQWlFO0FBQzFELFNBQVNDLCtCQUErQkMsR0FBRyxFQUFFQyxRQUFRO0lBQ3hELE9BQVFBO1FBQ0osS0FBSztZQUNELE9BQVFGLCtCQUErQkMsS0FBSyxXQUN4Q0QsK0JBQStCQyxLQUFLO1FBQzVDLEtBQUs7WUFDRCxPQUFRRCwrQkFBK0JDLEtBQUssV0FDeENELCtCQUErQkMsS0FBSztJQUNoRDtJQUNBLE1BQU1FLFNBQVNELFNBQVNFLFFBQVEsQ0FBQztJQUNqQyxNQUFNQyxRQUFRSixJQUFJSyxHQUFHLENBQUNILFNBQVMsUUFBUTtJQUN2QyxJQUFJLENBQUNFLE9BQ0Q7SUFDSixNQUFNRSxZQUFZTCxTQUFTTSxLQUFLLENBQUMsR0FBRztJQUNwQyxJQUFJQztJQUNKLE9BQVFGO1FBQ0osS0FBSztZQUNERSxXQUFXTixTQUFTRixJQUFJSyxHQUFHLENBQUMsVUFBVUwsSUFBSUssR0FBRyxDQUFDO1lBQzlDO1FBQ0osS0FBSztZQUNERyxXQUFXTixTQUFTRixJQUFJSyxHQUFHLENBQUMsVUFBVUwsSUFBSUssR0FBRyxDQUFDO1lBQzlDO1FBQ0o7WUFDSTtJQUNSO0lBQ0EsSUFBSSxDQUFDRyxVQUNEO0lBQ0osT0FBT1YsOEVBQW1CQSxDQUFDSSxTQUFTLFFBQVEsT0FBT0ksV0FBV0YsT0FBT0k7QUFDekUsRUFDQSx5Q0FBeUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mbHVzaC1ub3Rlcy8uL25vZGVfbW9kdWxlcy9Ad2FrdS9kaXNjb3Zlcnkvbm9kZV9tb2R1bGVzL0B3YWt1L2Vuci9kaXN0L2dldF9tdWx0aWFkZHIuanM/MDUwNCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBtdWx0aWFkZHJGcm9tRmllbGRzIH0gZnJvbSBcIi4vbXVsdGlhZGRyX2Zyb21fZmllbGRzLmpzXCI7XG5leHBvcnQgZnVuY3Rpb24gbG9jYXRpb25NdWx0aWFkZHJGcm9tRW5yRmllbGRzKGVuciwgcHJvdG9jb2wpIHtcbiAgICBzd2l0Y2ggKHByb3RvY29sKSB7XG4gICAgICAgIGNhc2UgXCJ1ZHBcIjpcbiAgICAgICAgICAgIHJldHVybiAobG9jYXRpb25NdWx0aWFkZHJGcm9tRW5yRmllbGRzKGVuciwgXCJ1ZHA0XCIpIHx8XG4gICAgICAgICAgICAgICAgbG9jYXRpb25NdWx0aWFkZHJGcm9tRW5yRmllbGRzKGVuciwgXCJ1ZHA2XCIpKTtcbiAgICAgICAgY2FzZSBcInRjcFwiOlxuICAgICAgICAgICAgcmV0dXJuIChsb2NhdGlvbk11bHRpYWRkckZyb21FbnJGaWVsZHMoZW5yLCBcInRjcDRcIikgfHxcbiAgICAgICAgICAgICAgICBsb2NhdGlvbk11bHRpYWRkckZyb21FbnJGaWVsZHMoZW5yLCBcInRjcDZcIikpO1xuICAgIH1cbiAgICBjb25zdCBpc0lwdjYgPSBwcm90b2NvbC5lbmRzV2l0aChcIjZcIik7XG4gICAgY29uc3QgaXBWYWwgPSBlbnIuZ2V0KGlzSXB2NiA/IFwiaXA2XCIgOiBcImlwXCIpO1xuICAgIGlmICghaXBWYWwpXG4gICAgICAgIHJldHVybjtcbiAgICBjb25zdCBwcm90b05hbWUgPSBwcm90b2NvbC5zbGljZSgwLCAzKTtcbiAgICBsZXQgcHJvdG9WYWw7XG4gICAgc3dpdGNoIChwcm90b05hbWUpIHtcbiAgICAgICAgY2FzZSBcInVkcFwiOlxuICAgICAgICAgICAgcHJvdG9WYWwgPSBpc0lwdjYgPyBlbnIuZ2V0KFwidWRwNlwiKSA6IGVuci5nZXQoXCJ1ZHBcIik7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgY2FzZSBcInRjcFwiOlxuICAgICAgICAgICAgcHJvdG9WYWwgPSBpc0lwdjYgPyBlbnIuZ2V0KFwidGNwNlwiKSA6IGVuci5nZXQoXCJ0Y3BcIik7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgIHJldHVybjtcbiAgICB9XG4gICAgaWYgKCFwcm90b1ZhbClcbiAgICAgICAgcmV0dXJuO1xuICAgIHJldHVybiBtdWx0aWFkZHJGcm9tRmllbGRzKGlzSXB2NiA/IFwiaXA2XCIgOiBcImlwNFwiLCBwcm90b05hbWUsIGlwVmFsLCBwcm90b1ZhbCk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1nZXRfbXVsdGlhZGRyLmpzLm1hcCJdLCJuYW1lcyI6WyJtdWx0aWFkZHJGcm9tRmllbGRzIiwibG9jYXRpb25NdWx0aWFkZHJGcm9tRW5yRmllbGRzIiwiZW5yIiwicHJvdG9jb2wiLCJpc0lwdjYiLCJlbmRzV2l0aCIsImlwVmFsIiwiZ2V0IiwicHJvdG9OYW1lIiwic2xpY2UiLCJwcm90b1ZhbCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/discovery/node_modules/@waku/enr/dist/get_multiaddr.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/discovery/node_modules/@waku/enr/dist/index.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@waku/discovery/node_modules/@waku/enr/dist/index.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ENR: () => (/* reexport safe */ _enr_js__WEBPACK_IMPORTED_MODULE_3__.ENR),\n/* harmony export */   ERR_INVALID_ID: () => (/* reexport safe */ _constants_js__WEBPACK_IMPORTED_MODULE_0__.ERR_INVALID_ID),\n/* harmony export */   ERR_NO_SIGNATURE: () => (/* reexport safe */ _constants_js__WEBPACK_IMPORTED_MODULE_0__.ERR_NO_SIGNATURE),\n/* harmony export */   EnrCreator: () => (/* reexport safe */ _creator_js__WEBPACK_IMPORTED_MODULE_1__.EnrCreator),\n/* harmony export */   EnrDecoder: () => (/* reexport safe */ _decoder_js__WEBPACK_IMPORTED_MODULE_2__.EnrDecoder),\n/* harmony export */   MAX_RECORD_SIZE: () => (/* reexport safe */ _constants_js__WEBPACK_IMPORTED_MODULE_0__.MAX_RECORD_SIZE),\n/* harmony export */   MULTIADDR_LENGTH_SIZE: () => (/* reexport safe */ _constants_js__WEBPACK_IMPORTED_MODULE_0__.MULTIADDR_LENGTH_SIZE),\n/* harmony export */   TransportProtocol: () => (/* reexport safe */ _enr_js__WEBPACK_IMPORTED_MODULE_3__.TransportProtocol),\n/* harmony export */   TransportProtocolPerIpVersion: () => (/* reexport safe */ _enr_js__WEBPACK_IMPORTED_MODULE_3__.TransportProtocolPerIpVersion),\n/* harmony export */   compressPublicKey: () => (/* reexport safe */ _crypto_js__WEBPACK_IMPORTED_MODULE_6__.compressPublicKey),\n/* harmony export */   createPeerIdFromPublicKey: () => (/* reexport safe */ _peer_id_js__WEBPACK_IMPORTED_MODULE_4__.createPeerIdFromPublicKey),\n/* harmony export */   decodeWaku2: () => (/* reexport safe */ _waku2_codec_js__WEBPACK_IMPORTED_MODULE_5__.decodeWaku2),\n/* harmony export */   encodeWaku2: () => (/* reexport safe */ _waku2_codec_js__WEBPACK_IMPORTED_MODULE_5__.encodeWaku2),\n/* harmony export */   getPrivateKeyFromPeerId: () => (/* reexport safe */ _peer_id_js__WEBPACK_IMPORTED_MODULE_4__.getPrivateKeyFromPeerId),\n/* harmony export */   getPublicKeyFromPeerId: () => (/* reexport safe */ _peer_id_js__WEBPACK_IMPORTED_MODULE_4__.getPublicKeyFromPeerId),\n/* harmony export */   keccak256: () => (/* reexport safe */ _crypto_js__WEBPACK_IMPORTED_MODULE_6__.keccak256),\n/* harmony export */   sign: () => (/* reexport safe */ _crypto_js__WEBPACK_IMPORTED_MODULE_6__.sign),\n/* harmony export */   verifySignature: () => (/* reexport safe */ _crypto_js__WEBPACK_IMPORTED_MODULE_6__.verifySignature)\n/* harmony export */ });\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constants.js */ \"(ssr)/./node_modules/@waku/discovery/node_modules/@waku/enr/dist/constants.js\");\n/* harmony import */ var _creator_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./creator.js */ \"(ssr)/./node_modules/@waku/discovery/node_modules/@waku/enr/dist/creator.js\");\n/* harmony import */ var _decoder_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./decoder.js */ \"(ssr)/./node_modules/@waku/discovery/node_modules/@waku/enr/dist/decoder.js\");\n/* harmony import */ var _enr_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./enr.js */ \"(ssr)/./node_modules/@waku/discovery/node_modules/@waku/enr/dist/enr.js\");\n/* harmony import */ var _peer_id_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./peer_id.js */ \"(ssr)/./node_modules/@waku/discovery/node_modules/@waku/enr/dist/peer_id.js\");\n/* harmony import */ var _waku2_codec_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./waku2_codec.js */ \"(ssr)/./node_modules/@waku/discovery/node_modules/@waku/enr/dist/waku2_codec.js\");\n/* harmony import */ var _crypto_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./crypto.js */ \"(ssr)/./node_modules/@waku/discovery/node_modules/@waku/enr/dist/crypto.js\");\n\n\n\n\n\n\n //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdha3UvZGlzY292ZXJ5L25vZGVfbW9kdWxlcy9Ad2FrdS9lbnIvZGlzdC9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQStCO0FBQ0Y7QUFDQTtBQUNKO0FBQ0k7QUFDSTtBQUNMLENBQzVCLGlDQUFpQyIsInNvdXJjZXMiOlsid2VicGFjazovL2ZsdXNoLW5vdGVzLy4vbm9kZV9tb2R1bGVzL0B3YWt1L2Rpc2NvdmVyeS9ub2RlX21vZHVsZXMvQHdha3UvZW5yL2Rpc3QvaW5kZXguanM/MTZjMCJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgKiBmcm9tIFwiLi9jb25zdGFudHMuanNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL2NyZWF0b3IuanNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL2RlY29kZXIuanNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL2Vuci5qc1wiO1xuZXhwb3J0ICogZnJvbSBcIi4vcGVlcl9pZC5qc1wiO1xuZXhwb3J0ICogZnJvbSBcIi4vd2FrdTJfY29kZWMuanNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL2NyeXB0by5qc1wiO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/discovery/node_modules/@waku/enr/dist/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/discovery/node_modules/@waku/enr/dist/multiaddr_from_fields.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@waku/discovery/node_modules/@waku/enr/dist/multiaddr_from_fields.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   multiaddrFromFields: () => (/* binding */ multiaddrFromFields)\n/* harmony export */ });\n/* harmony import */ var _multiformats_multiaddr__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @multiformats/multiaddr */ \"(ssr)/./node_modules/@multiformats/multiaddr/dist/src/index.js\");\n/* harmony import */ var _multiformats_multiaddr_convert__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @multiformats/multiaddr/convert */ \"(ssr)/./node_modules/@multiformats/multiaddr/dist/src/convert.js\");\n\n\nfunction multiaddrFromFields(ipFamily, protocol, ipBytes, protocolBytes) {\n    let ma = (0,_multiformats_multiaddr__WEBPACK_IMPORTED_MODULE_0__.multiaddr)(\"/\" + ipFamily + \"/\" + (0,_multiformats_multiaddr_convert__WEBPACK_IMPORTED_MODULE_1__.convertToString)(ipFamily, ipBytes));\n    ma = ma.encapsulate((0,_multiformats_multiaddr__WEBPACK_IMPORTED_MODULE_0__.multiaddr)(\"/\" + protocol + \"/\" + (0,_multiformats_multiaddr_convert__WEBPACK_IMPORTED_MODULE_1__.convertToString)(protocol, protocolBytes)));\n    return ma;\n} //# sourceMappingURL=multiaddr_from_fields.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdha3UvZGlzY292ZXJ5L25vZGVfbW9kdWxlcy9Ad2FrdS9lbnIvZGlzdC9tdWx0aWFkZHJfZnJvbV9maWVsZHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQW9EO0FBQ2M7QUFDM0QsU0FBU0Usb0JBQW9CQyxRQUFRLEVBQUVDLFFBQVEsRUFBRUMsT0FBTyxFQUFFQyxhQUFhO0lBQzFFLElBQUlDLEtBQUtQLGtFQUFTQSxDQUFDLE1BQU1HLFdBQVcsTUFBTUYsZ0ZBQWVBLENBQUNFLFVBQVVFO0lBQ3BFRSxLQUFLQSxHQUFHQyxXQUFXLENBQUNSLGtFQUFTQSxDQUFDLE1BQU1JLFdBQVcsTUFBTUgsZ0ZBQWVBLENBQUNHLFVBQVVFO0lBQy9FLE9BQU9DO0FBQ1gsRUFDQSxpREFBaUQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mbHVzaC1ub3Rlcy8uL25vZGVfbW9kdWxlcy9Ad2FrdS9kaXNjb3Zlcnkvbm9kZV9tb2R1bGVzL0B3YWt1L2Vuci9kaXN0L211bHRpYWRkcl9mcm9tX2ZpZWxkcy5qcz83NWFlIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IG11bHRpYWRkciB9IGZyb20gXCJAbXVsdGlmb3JtYXRzL211bHRpYWRkclwiO1xuaW1wb3J0IHsgY29udmVydFRvU3RyaW5nIH0gZnJvbSBcIkBtdWx0aWZvcm1hdHMvbXVsdGlhZGRyL2NvbnZlcnRcIjtcbmV4cG9ydCBmdW5jdGlvbiBtdWx0aWFkZHJGcm9tRmllbGRzKGlwRmFtaWx5LCBwcm90b2NvbCwgaXBCeXRlcywgcHJvdG9jb2xCeXRlcykge1xuICAgIGxldCBtYSA9IG11bHRpYWRkcihcIi9cIiArIGlwRmFtaWx5ICsgXCIvXCIgKyBjb252ZXJ0VG9TdHJpbmcoaXBGYW1pbHksIGlwQnl0ZXMpKTtcbiAgICBtYSA9IG1hLmVuY2Fwc3VsYXRlKG11bHRpYWRkcihcIi9cIiArIHByb3RvY29sICsgXCIvXCIgKyBjb252ZXJ0VG9TdHJpbmcocHJvdG9jb2wsIHByb3RvY29sQnl0ZXMpKSk7XG4gICAgcmV0dXJuIG1hO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bXVsdGlhZGRyX2Zyb21fZmllbGRzLmpzLm1hcCJdLCJuYW1lcyI6WyJtdWx0aWFkZHIiLCJjb252ZXJ0VG9TdHJpbmciLCJtdWx0aWFkZHJGcm9tRmllbGRzIiwiaXBGYW1pbHkiLCJwcm90b2NvbCIsImlwQnl0ZXMiLCJwcm90b2NvbEJ5dGVzIiwibWEiLCJlbmNhcHN1bGF0ZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/discovery/node_modules/@waku/enr/dist/multiaddr_from_fields.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/discovery/node_modules/@waku/enr/dist/multiaddrs_codec.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@waku/discovery/node_modules/@waku/enr/dist/multiaddrs_codec.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decodeMultiaddrs: () => (/* binding */ decodeMultiaddrs),\n/* harmony export */   encodeMultiaddrs: () => (/* binding */ encodeMultiaddrs)\n/* harmony export */ });\n/* harmony import */ var _multiformats_multiaddr__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @multiformats/multiaddr */ \"(ssr)/./node_modules/@multiformats/multiaddr/dist/src/index.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./constants.js */ \"(ssr)/./node_modules/@waku/discovery/node_modules/@waku/enr/dist/constants.js\");\n\n\nfunction decodeMultiaddrs(bytes) {\n    const multiaddrs = [];\n    let index = 0;\n    while(index < bytes.length){\n        const sizeDataView = new DataView(bytes.buffer, index, _constants_js__WEBPACK_IMPORTED_MODULE_1__.MULTIADDR_LENGTH_SIZE);\n        const size = sizeDataView.getUint16(0);\n        index += _constants_js__WEBPACK_IMPORTED_MODULE_1__.MULTIADDR_LENGTH_SIZE;\n        const multiaddrBytes = bytes.slice(index, index + size);\n        index += size;\n        multiaddrs.push((0,_multiformats_multiaddr__WEBPACK_IMPORTED_MODULE_0__.multiaddr)(multiaddrBytes));\n    }\n    return multiaddrs;\n}\nfunction encodeMultiaddrs(multiaddrs) {\n    const totalLength = multiaddrs.reduce((acc, ma)=>acc + _constants_js__WEBPACK_IMPORTED_MODULE_1__.MULTIADDR_LENGTH_SIZE + ma.bytes.length, 0);\n    const bytes = new Uint8Array(totalLength);\n    const dataView = new DataView(bytes.buffer);\n    let index = 0;\n    multiaddrs.forEach((multiaddr)=>{\n        if (multiaddr.getPeerId()) throw new Error(\"`multiaddr` field MUST not contain peer id\");\n        // Prepend the size of the next entry\n        dataView.setUint16(index, multiaddr.bytes.length);\n        index += _constants_js__WEBPACK_IMPORTED_MODULE_1__.MULTIADDR_LENGTH_SIZE;\n        bytes.set(multiaddr.bytes, index);\n        index += multiaddr.bytes.length;\n    });\n    return bytes;\n} //# sourceMappingURL=multiaddrs_codec.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdha3UvZGlzY292ZXJ5L25vZGVfbW9kdWxlcy9Ad2FrdS9lbnIvZGlzdC9tdWx0aWFkZHJzX2NvZGVjLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBb0Q7QUFDRztBQUNoRCxTQUFTRSxpQkFBaUJDLEtBQUs7SUFDbEMsTUFBTUMsYUFBYSxFQUFFO0lBQ3JCLElBQUlDLFFBQVE7SUFDWixNQUFPQSxRQUFRRixNQUFNRyxNQUFNLENBQUU7UUFDekIsTUFBTUMsZUFBZSxJQUFJQyxTQUFTTCxNQUFNTSxNQUFNLEVBQUVKLE9BQU9KLGdFQUFxQkE7UUFDNUUsTUFBTVMsT0FBT0gsYUFBYUksU0FBUyxDQUFDO1FBQ3BDTixTQUFTSixnRUFBcUJBO1FBQzlCLE1BQU1XLGlCQUFpQlQsTUFBTVUsS0FBSyxDQUFDUixPQUFPQSxRQUFRSztRQUNsREwsU0FBU0s7UUFDVE4sV0FBV1UsSUFBSSxDQUFDZCxrRUFBU0EsQ0FBQ1k7SUFDOUI7SUFDQSxPQUFPUjtBQUNYO0FBQ08sU0FBU1csaUJBQWlCWCxVQUFVO0lBQ3ZDLE1BQU1ZLGNBQWNaLFdBQVdhLE1BQU0sQ0FBQyxDQUFDQyxLQUFLQyxLQUFPRCxNQUFNakIsZ0VBQXFCQSxHQUFHa0IsR0FBR2hCLEtBQUssQ0FBQ0csTUFBTSxFQUFFO0lBQ2xHLE1BQU1ILFFBQVEsSUFBSWlCLFdBQVdKO0lBQzdCLE1BQU1LLFdBQVcsSUFBSWIsU0FBU0wsTUFBTU0sTUFBTTtJQUMxQyxJQUFJSixRQUFRO0lBQ1pELFdBQVdrQixPQUFPLENBQUMsQ0FBQ3RCO1FBQ2hCLElBQUlBLFVBQVV1QixTQUFTLElBQ25CLE1BQU0sSUFBSUMsTUFBTTtRQUNwQixxQ0FBcUM7UUFDckNILFNBQVNJLFNBQVMsQ0FBQ3BCLE9BQU9MLFVBQVVHLEtBQUssQ0FBQ0csTUFBTTtRQUNoREQsU0FBU0osZ0VBQXFCQTtRQUM5QkUsTUFBTXVCLEdBQUcsQ0FBQzFCLFVBQVVHLEtBQUssRUFBRUU7UUFDM0JBLFNBQVNMLFVBQVVHLEtBQUssQ0FBQ0csTUFBTTtJQUNuQztJQUNBLE9BQU9IO0FBQ1gsRUFDQSw0Q0FBNEMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mbHVzaC1ub3Rlcy8uL25vZGVfbW9kdWxlcy9Ad2FrdS9kaXNjb3Zlcnkvbm9kZV9tb2R1bGVzL0B3YWt1L2Vuci9kaXN0L211bHRpYWRkcnNfY29kZWMuanM/YmNlZCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBtdWx0aWFkZHIgfSBmcm9tIFwiQG11bHRpZm9ybWF0cy9tdWx0aWFkZHJcIjtcbmltcG9ydCB7IE1VTFRJQUREUl9MRU5HVEhfU0laRSB9IGZyb20gXCIuL2NvbnN0YW50cy5qc1wiO1xuZXhwb3J0IGZ1bmN0aW9uIGRlY29kZU11bHRpYWRkcnMoYnl0ZXMpIHtcbiAgICBjb25zdCBtdWx0aWFkZHJzID0gW107XG4gICAgbGV0IGluZGV4ID0gMDtcbiAgICB3aGlsZSAoaW5kZXggPCBieXRlcy5sZW5ndGgpIHtcbiAgICAgICAgY29uc3Qgc2l6ZURhdGFWaWV3ID0gbmV3IERhdGFWaWV3KGJ5dGVzLmJ1ZmZlciwgaW5kZXgsIE1VTFRJQUREUl9MRU5HVEhfU0laRSk7XG4gICAgICAgIGNvbnN0IHNpemUgPSBzaXplRGF0YVZpZXcuZ2V0VWludDE2KDApO1xuICAgICAgICBpbmRleCArPSBNVUxUSUFERFJfTEVOR1RIX1NJWkU7XG4gICAgICAgIGNvbnN0IG11bHRpYWRkckJ5dGVzID0gYnl0ZXMuc2xpY2UoaW5kZXgsIGluZGV4ICsgc2l6ZSk7XG4gICAgICAgIGluZGV4ICs9IHNpemU7XG4gICAgICAgIG11bHRpYWRkcnMucHVzaChtdWx0aWFkZHIobXVsdGlhZGRyQnl0ZXMpKTtcbiAgICB9XG4gICAgcmV0dXJuIG11bHRpYWRkcnM7XG59XG5leHBvcnQgZnVuY3Rpb24gZW5jb2RlTXVsdGlhZGRycyhtdWx0aWFkZHJzKSB7XG4gICAgY29uc3QgdG90YWxMZW5ndGggPSBtdWx0aWFkZHJzLnJlZHVjZSgoYWNjLCBtYSkgPT4gYWNjICsgTVVMVElBRERSX0xFTkdUSF9TSVpFICsgbWEuYnl0ZXMubGVuZ3RoLCAwKTtcbiAgICBjb25zdCBieXRlcyA9IG5ldyBVaW50OEFycmF5KHRvdGFsTGVuZ3RoKTtcbiAgICBjb25zdCBkYXRhVmlldyA9IG5ldyBEYXRhVmlldyhieXRlcy5idWZmZXIpO1xuICAgIGxldCBpbmRleCA9IDA7XG4gICAgbXVsdGlhZGRycy5mb3JFYWNoKChtdWx0aWFkZHIpID0+IHtcbiAgICAgICAgaWYgKG11bHRpYWRkci5nZXRQZWVySWQoKSlcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcImBtdWx0aWFkZHJgIGZpZWxkIE1VU1Qgbm90IGNvbnRhaW4gcGVlciBpZFwiKTtcbiAgICAgICAgLy8gUHJlcGVuZCB0aGUgc2l6ZSBvZiB0aGUgbmV4dCBlbnRyeVxuICAgICAgICBkYXRhVmlldy5zZXRVaW50MTYoaW5kZXgsIG11bHRpYWRkci5ieXRlcy5sZW5ndGgpO1xuICAgICAgICBpbmRleCArPSBNVUxUSUFERFJfTEVOR1RIX1NJWkU7XG4gICAgICAgIGJ5dGVzLnNldChtdWx0aWFkZHIuYnl0ZXMsIGluZGV4KTtcbiAgICAgICAgaW5kZXggKz0gbXVsdGlhZGRyLmJ5dGVzLmxlbmd0aDtcbiAgICB9KTtcbiAgICByZXR1cm4gYnl0ZXM7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1tdWx0aWFkZHJzX2NvZGVjLmpzLm1hcCJdLCJuYW1lcyI6WyJtdWx0aWFkZHIiLCJNVUxUSUFERFJfTEVOR1RIX1NJWkUiLCJkZWNvZGVNdWx0aWFkZHJzIiwiYnl0ZXMiLCJtdWx0aWFkZHJzIiwiaW5kZXgiLCJsZW5ndGgiLCJzaXplRGF0YVZpZXciLCJEYXRhVmlldyIsImJ1ZmZlciIsInNpemUiLCJnZXRVaW50MTYiLCJtdWx0aWFkZHJCeXRlcyIsInNsaWNlIiwicHVzaCIsImVuY29kZU11bHRpYWRkcnMiLCJ0b3RhbExlbmd0aCIsInJlZHVjZSIsImFjYyIsIm1hIiwiVWludDhBcnJheSIsImRhdGFWaWV3IiwiZm9yRWFjaCIsImdldFBlZXJJZCIsIkVycm9yIiwic2V0VWludDE2Iiwic2V0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/discovery/node_modules/@waku/enr/dist/multiaddrs_codec.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/discovery/node_modules/@waku/enr/dist/peer_id.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@waku/discovery/node_modules/@waku/enr/dist/peer_id.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createPeerIdFromPublicKey: () => (/* binding */ createPeerIdFromPublicKey),\n/* harmony export */   getPrivateKeyFromPeerId: () => (/* binding */ getPrivateKeyFromPeerId),\n/* harmony export */   getPublicKeyFromPeerId: () => (/* binding */ getPublicKeyFromPeerId)\n/* harmony export */ });\n/* harmony import */ var _libp2p_crypto_keys__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @libp2p/crypto/keys */ \"(ssr)/./node_modules/@libp2p/crypto/dist/src/keys/index.js\");\n/* harmony import */ var _libp2p_peer_id__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @libp2p/peer-id */ \"(ssr)/./node_modules/@libp2p/peer-id/dist/src/index.js\");\n\n\n\nfunction createPeerIdFromPublicKey(publicKey) {\n    const _publicKey = new _libp2p_crypto_keys__WEBPACK_IMPORTED_MODULE_0__.supportedKeys.secp256k1.Secp256k1PublicKey(publicKey);\n    return (0,_libp2p_peer_id__WEBPACK_IMPORTED_MODULE_1__.peerIdFromKeys)(_publicKey.bytes, undefined);\n}\nfunction getPublicKeyFromPeerId(peerId) {\n    if (peerId.type !== \"secp256k1\") {\n        throw new Error(\"Unsupported peer id type\");\n    }\n    return (0,_libp2p_crypto_keys__WEBPACK_IMPORTED_MODULE_0__.unmarshalPublicKey)(peerId.publicKey).marshal();\n}\n// Only used in tests\nasync function getPrivateKeyFromPeerId(peerId) {\n    if (peerId.type !== \"secp256k1\") {\n        throw new Error(\"Unsupported peer id type\");\n    }\n    if (!peerId.privateKey) {\n        throw new Error(\"Private key not present on peer id\");\n    }\n    const privateKey = await (0,_libp2p_crypto_keys__WEBPACK_IMPORTED_MODULE_0__.unmarshalPrivateKey)(peerId.privateKey);\n    return privateKey.marshal();\n} //# sourceMappingURL=peer_id.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdha3UvZGlzY292ZXJ5L25vZGVfbW9kdWxlcy9Ad2FrdS9lbnIvZGlzdC9wZWVyX2lkLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQThFO0FBQzFCO0FBQ0g7QUFDMUMsU0FBU0ksMEJBQTBCQyxTQUFTO0lBQy9DLE1BQU1DLGFBQWEsSUFBSUosOERBQWFBLENBQUNLLFNBQVMsQ0FBQ0Msa0JBQWtCLENBQUNIO0lBQ2xFLE9BQU9GLCtEQUFjQSxDQUFDRyxXQUFXRyxLQUFLLEVBQUVDO0FBQzVDO0FBQ08sU0FBU0MsdUJBQXVCQyxNQUFNO0lBQ3pDLElBQUlBLE9BQU9DLElBQUksS0FBSyxhQUFhO1FBQzdCLE1BQU0sSUFBSUMsTUFBTTtJQUNwQjtJQUNBLE9BQU9iLHVFQUFrQkEsQ0FBQ1csT0FBT1AsU0FBUyxFQUFFVSxPQUFPO0FBQ3ZEO0FBQ0EscUJBQXFCO0FBQ2QsZUFBZUMsd0JBQXdCSixNQUFNO0lBQ2hELElBQUlBLE9BQU9DLElBQUksS0FBSyxhQUFhO1FBQzdCLE1BQU0sSUFBSUMsTUFBTTtJQUNwQjtJQUNBLElBQUksQ0FBQ0YsT0FBT0ssVUFBVSxFQUFFO1FBQ3BCLE1BQU0sSUFBSUgsTUFBTTtJQUNwQjtJQUNBLE1BQU1HLGFBQWEsTUFBTWpCLHdFQUFtQkEsQ0FBQ1ksT0FBT0ssVUFBVTtJQUM5RCxPQUFPQSxXQUFXRixPQUFPO0FBQzdCLEVBQ0EsbUNBQW1DIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZmx1c2gtbm90ZXMvLi9ub2RlX21vZHVsZXMvQHdha3UvZGlzY292ZXJ5L25vZGVfbW9kdWxlcy9Ad2FrdS9lbnIvZGlzdC9wZWVyX2lkLmpzP2VlMTkiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgdW5tYXJzaGFsUHJpdmF0ZUtleSwgdW5tYXJzaGFsUHVibGljS2V5IH0gZnJvbSBcIkBsaWJwMnAvY3J5cHRvL2tleXNcIjtcbmltcG9ydCB7IHN1cHBvcnRlZEtleXMgfSBmcm9tIFwiQGxpYnAycC9jcnlwdG8va2V5c1wiO1xuaW1wb3J0IHsgcGVlcklkRnJvbUtleXMgfSBmcm9tIFwiQGxpYnAycC9wZWVyLWlkXCI7XG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlUGVlcklkRnJvbVB1YmxpY0tleShwdWJsaWNLZXkpIHtcbiAgICBjb25zdCBfcHVibGljS2V5ID0gbmV3IHN1cHBvcnRlZEtleXMuc2VjcDI1NmsxLlNlY3AyNTZrMVB1YmxpY0tleShwdWJsaWNLZXkpO1xuICAgIHJldHVybiBwZWVySWRGcm9tS2V5cyhfcHVibGljS2V5LmJ5dGVzLCB1bmRlZmluZWQpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGdldFB1YmxpY0tleUZyb21QZWVySWQocGVlcklkKSB7XG4gICAgaWYgKHBlZXJJZC50eXBlICE9PSBcInNlY3AyNTZrMVwiKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIlVuc3VwcG9ydGVkIHBlZXIgaWQgdHlwZVwiKTtcbiAgICB9XG4gICAgcmV0dXJuIHVubWFyc2hhbFB1YmxpY0tleShwZWVySWQucHVibGljS2V5KS5tYXJzaGFsKCk7XG59XG4vLyBPbmx5IHVzZWQgaW4gdGVzdHNcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBnZXRQcml2YXRlS2V5RnJvbVBlZXJJZChwZWVySWQpIHtcbiAgICBpZiAocGVlcklkLnR5cGUgIT09IFwic2VjcDI1NmsxXCIpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiVW5zdXBwb3J0ZWQgcGVlciBpZCB0eXBlXCIpO1xuICAgIH1cbiAgICBpZiAoIXBlZXJJZC5wcml2YXRlS2V5KSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIlByaXZhdGUga2V5IG5vdCBwcmVzZW50IG9uIHBlZXIgaWRcIik7XG4gICAgfVxuICAgIGNvbnN0IHByaXZhdGVLZXkgPSBhd2FpdCB1bm1hcnNoYWxQcml2YXRlS2V5KHBlZXJJZC5wcml2YXRlS2V5KTtcbiAgICByZXR1cm4gcHJpdmF0ZUtleS5tYXJzaGFsKCk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1wZWVyX2lkLmpzLm1hcCJdLCJuYW1lcyI6WyJ1bm1hcnNoYWxQcml2YXRlS2V5IiwidW5tYXJzaGFsUHVibGljS2V5Iiwic3VwcG9ydGVkS2V5cyIsInBlZXJJZEZyb21LZXlzIiwiY3JlYXRlUGVlcklkRnJvbVB1YmxpY0tleSIsInB1YmxpY0tleSIsIl9wdWJsaWNLZXkiLCJzZWNwMjU2azEiLCJTZWNwMjU2azFQdWJsaWNLZXkiLCJieXRlcyIsInVuZGVmaW5lZCIsImdldFB1YmxpY0tleUZyb21QZWVySWQiLCJwZWVySWQiLCJ0eXBlIiwiRXJyb3IiLCJtYXJzaGFsIiwiZ2V0UHJpdmF0ZUtleUZyb21QZWVySWQiLCJwcml2YXRlS2V5Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/discovery/node_modules/@waku/enr/dist/peer_id.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/discovery/node_modules/@waku/enr/dist/raw_enr.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@waku/discovery/node_modules/@waku/enr/dist/raw_enr.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RawEnr: () => (/* binding */ RawEnr)\n/* harmony export */ });\n/* harmony import */ var _multiformats_multiaddr_convert__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @multiformats/multiaddr/convert */ \"(ssr)/./node_modules/@multiformats/multiaddr/dist/src/convert.js\");\n/* harmony import */ var _waku_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @waku/utils */ \"(ssr)/./node_modules/@waku/utils/dist/index.js\");\n/* harmony import */ var _waku_utils_bytes__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @waku/utils/bytes */ \"(ssr)/./node_modules/@waku/utils/dist/bytes/index.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./constants.js */ \"(ssr)/./node_modules/@waku/discovery/node_modules/@waku/enr/dist/constants.js\");\n/* harmony import */ var _multiaddrs_codec_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./multiaddrs_codec.js */ \"(ssr)/./node_modules/@waku/discovery/node_modules/@waku/enr/dist/multiaddrs_codec.js\");\n/* harmony import */ var _waku2_codec_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./waku2_codec.js */ \"(ssr)/./node_modules/@waku/discovery/node_modules/@waku/enr/dist/waku2_codec.js\");\n\n\n\n\n\n\nclass RawEnr extends Map {\n    constructor(kvs = {}, seq = BigInt(1), signature){\n        super(Object.entries(kvs));\n        this.seq = seq;\n        this.signature = signature;\n    }\n    set(k, v) {\n        this.signature = undefined;\n        this.seq++;\n        return super.set(k, v);\n    }\n    get id() {\n        const id = this.get(\"id\");\n        if (!id) throw new Error(\"id not found.\");\n        return (0,_waku_utils_bytes__WEBPACK_IMPORTED_MODULE_2__.bytesToUtf8)(id);\n    }\n    get publicKey() {\n        switch(this.id){\n            case \"v4\":\n                return this.get(\"secp256k1\");\n            default:\n                throw new Error(_constants_js__WEBPACK_IMPORTED_MODULE_3__.ERR_INVALID_ID);\n        }\n    }\n    get rs() {\n        const rs = this.get(\"rs\");\n        if (!rs) return undefined;\n        return (0,_waku_utils__WEBPACK_IMPORTED_MODULE_1__.decodeRelayShard)(rs);\n    }\n    get rsv() {\n        const rsv = this.get(\"rsv\");\n        if (!rsv) return undefined;\n        return (0,_waku_utils__WEBPACK_IMPORTED_MODULE_1__.decodeRelayShard)(rsv);\n    }\n    get ip() {\n        return getStringValue(this, \"ip\", \"ip4\");\n    }\n    set ip(ip) {\n        setStringValue(this, \"ip\", \"ip4\", ip);\n    }\n    get tcp() {\n        return getNumberAsStringValue(this, \"tcp\", \"tcp\");\n    }\n    set tcp(port) {\n        setNumberAsStringValue(this, \"tcp\", \"tcp\", port);\n    }\n    get udp() {\n        return getNumberAsStringValue(this, \"udp\", \"udp\");\n    }\n    set udp(port) {\n        setNumberAsStringValue(this, \"udp\", \"udp\", port);\n    }\n    get ip6() {\n        return getStringValue(this, \"ip6\", \"ip6\");\n    }\n    set ip6(ip) {\n        setStringValue(this, \"ip6\", \"ip6\", ip);\n    }\n    get tcp6() {\n        return getNumberAsStringValue(this, \"tcp6\", \"tcp\");\n    }\n    set tcp6(port) {\n        setNumberAsStringValue(this, \"tcp6\", \"tcp\", port);\n    }\n    get udp6() {\n        return getNumberAsStringValue(this, \"udp6\", \"udp\");\n    }\n    set udp6(port) {\n        setNumberAsStringValue(this, \"udp6\", \"udp\", port);\n    }\n    /**\n     * Get the `multiaddrs` field from ENR.\n     *\n     * This field is used to store multiaddresses that cannot be stored with the current ENR pre-defined keys.\n     * These can be a multiaddresses that include encapsulation (e.g. wss) or do not use `ip4` nor `ip6` for the host\n     * address (e.g. `dns4`, `dnsaddr`, etc)..\n     *\n     * If the peer information only contains information that can be represented with the ENR pre-defined keys\n     * (ip, tcp, etc) then the usage of { @link ENR.getLocationMultiaddr } should be preferred.\n     *\n     * The multiaddresses stored in this field are expected to be location multiaddresses, ie, peer id less.\n     */ get multiaddrs() {\n        const raw = this.get(\"multiaddrs\");\n        if (raw) return (0,_multiaddrs_codec_js__WEBPACK_IMPORTED_MODULE_4__.decodeMultiaddrs)(raw);\n        return;\n    }\n    /**\n     * Set the `multiaddrs` field on the ENR.\n     *\n     * This field is used to store multiaddresses that cannot be stored with the current ENR pre-defined keys.\n     * These can be a multiaddresses that include encapsulation (e.g. wss) or do not use `ip4` nor `ip6` for the host\n     * address (e.g. `dns4`, `dnsaddr`, etc)..\n     *\n     * If the peer information only contains information that can be represented with the ENR pre-defined keys\n     * (ip, tcp, etc) then the usage of { @link ENR.setLocationMultiaddr } should be preferred.\n     * The multiaddresses stored in this field must be location multiaddresses,\n     * ie, without a peer id.\n     */ set multiaddrs(multiaddrs) {\n        deleteUndefined(this, \"multiaddrs\", multiaddrs, _multiaddrs_codec_js__WEBPACK_IMPORTED_MODULE_4__.encodeMultiaddrs);\n    }\n    /**\n     * Get the `waku2` field from ENR.\n     */ get waku2() {\n        const raw = this.get(\"waku2\");\n        if (raw) return (0,_waku2_codec_js__WEBPACK_IMPORTED_MODULE_5__.decodeWaku2)(raw[0]);\n        return;\n    }\n    /**\n     * Set the `waku2` field on the ENR.\n     */ set waku2(waku2) {\n        deleteUndefined(this, \"waku2\", waku2, (w)=>new Uint8Array([\n                (0,_waku2_codec_js__WEBPACK_IMPORTED_MODULE_5__.encodeWaku2)(w)\n            ]));\n    }\n}\nfunction getStringValue(map, key, proto) {\n    const raw = map.get(key);\n    if (!raw) return;\n    return (0,_multiformats_multiaddr_convert__WEBPACK_IMPORTED_MODULE_0__.convertToString)(proto, raw);\n}\nfunction getNumberAsStringValue(map, key, proto) {\n    const raw = map.get(key);\n    if (!raw) return;\n    return Number((0,_multiformats_multiaddr_convert__WEBPACK_IMPORTED_MODULE_0__.convertToString)(proto, raw));\n}\nfunction setStringValue(map, key, proto, value) {\n    deleteUndefined(map, key, value, _multiformats_multiaddr_convert__WEBPACK_IMPORTED_MODULE_0__.convertToBytes.bind({}, proto));\n}\nfunction setNumberAsStringValue(map, key, proto, value) {\n    setStringValue(map, key, proto, value?.toString(10));\n}\nfunction deleteUndefined(map, key, value, transform) {\n    if (value !== undefined) {\n        map.set(key, transform(value));\n    } else {\n        map.delete(key);\n    }\n} //# sourceMappingURL=raw_enr.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/discovery/node_modules/@waku/enr/dist/raw_enr.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/discovery/node_modules/@waku/enr/dist/v4.js":
/*!************************************************************************!*\
  !*** ./node_modules/@waku/discovery/node_modules/@waku/enr/dist/v4.js ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   nodeId: () => (/* binding */ nodeId),\n/* harmony export */   sign: () => (/* binding */ sign)\n/* harmony export */ });\n/* harmony import */ var _noble_secp256k1__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @noble/secp256k1 */ \"(ssr)/./node_modules/@noble/secp256k1/lib/esm/index.js\");\n/* harmony import */ var _waku_utils_bytes__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @waku/utils/bytes */ \"(ssr)/./node_modules/@waku/utils/dist/bytes/index.js\");\n/* harmony import */ var _crypto_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./crypto.js */ \"(ssr)/./node_modules/@waku/discovery/node_modules/@waku/enr/dist/crypto.js\");\n\n\n\nasync function sign(privKey, msg) {\n    return _noble_secp256k1__WEBPACK_IMPORTED_MODULE_0__.sign((0,_crypto_js__WEBPACK_IMPORTED_MODULE_2__.keccak256)(msg), privKey, {\n        der: false\n    });\n}\nfunction nodeId(pubKey) {\n    const publicKey = _noble_secp256k1__WEBPACK_IMPORTED_MODULE_0__.Point.fromHex(pubKey);\n    const uncompressedPubkey = publicKey.toRawBytes(false);\n    return (0,_waku_utils_bytes__WEBPACK_IMPORTED_MODULE_1__.bytesToHex)((0,_crypto_js__WEBPACK_IMPORTED_MODULE_2__.keccak256)(uncompressedPubkey.slice(1)));\n} //# sourceMappingURL=v4.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdha3UvZGlzY292ZXJ5L25vZGVfbW9kdWxlcy9Ad2FrdS9lbnIvZGlzdC92NC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUF5QztBQUNNO0FBQ1A7QUFDakMsZUFBZUcsS0FBS0MsT0FBTyxFQUFFQyxHQUFHO0lBQ25DLE9BQU9MLGtEQUFTLENBQUNFLHFEQUFTQSxDQUFDRyxNQUFNRCxTQUFTO1FBQ3RDRSxLQUFLO0lBQ1Q7QUFDSjtBQUNPLFNBQVNDLE9BQU9DLE1BQU07SUFDekIsTUFBTUMsWUFBWVQsbURBQVUsQ0FBQ1csT0FBTyxDQUFDSDtJQUNyQyxNQUFNSSxxQkFBcUJILFVBQVVJLFVBQVUsQ0FBQztJQUNoRCxPQUFPWiw2REFBVUEsQ0FBQ0MscURBQVNBLENBQUNVLG1CQUFtQkUsS0FBSyxDQUFDO0FBQ3pELEVBQ0EsOEJBQThCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZmx1c2gtbm90ZXMvLi9ub2RlX21vZHVsZXMvQHdha3UvZGlzY292ZXJ5L25vZGVfbW9kdWxlcy9Ad2FrdS9lbnIvZGlzdC92NC5qcz9hMzVhIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIHNlY3AgZnJvbSBcIkBub2JsZS9zZWNwMjU2azFcIjtcbmltcG9ydCB7IGJ5dGVzVG9IZXggfSBmcm9tIFwiQHdha3UvdXRpbHMvYnl0ZXNcIjtcbmltcG9ydCB7IGtlY2NhazI1NiB9IGZyb20gXCIuL2NyeXB0by5qc1wiO1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIHNpZ24ocHJpdktleSwgbXNnKSB7XG4gICAgcmV0dXJuIHNlY3Auc2lnbihrZWNjYWsyNTYobXNnKSwgcHJpdktleSwge1xuICAgICAgICBkZXI6IGZhbHNlXG4gICAgfSk7XG59XG5leHBvcnQgZnVuY3Rpb24gbm9kZUlkKHB1YktleSkge1xuICAgIGNvbnN0IHB1YmxpY0tleSA9IHNlY3AuUG9pbnQuZnJvbUhleChwdWJLZXkpO1xuICAgIGNvbnN0IHVuY29tcHJlc3NlZFB1YmtleSA9IHB1YmxpY0tleS50b1Jhd0J5dGVzKGZhbHNlKTtcbiAgICByZXR1cm4gYnl0ZXNUb0hleChrZWNjYWsyNTYodW5jb21wcmVzc2VkUHVia2V5LnNsaWNlKDEpKSk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD12NC5qcy5tYXAiXSwibmFtZXMiOlsic2VjcCIsImJ5dGVzVG9IZXgiLCJrZWNjYWsyNTYiLCJzaWduIiwicHJpdktleSIsIm1zZyIsImRlciIsIm5vZGVJZCIsInB1YktleSIsInB1YmxpY0tleSIsIlBvaW50IiwiZnJvbUhleCIsInVuY29tcHJlc3NlZFB1YmtleSIsInRvUmF3Qnl0ZXMiLCJzbGljZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/discovery/node_modules/@waku/enr/dist/v4.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/discovery/node_modules/@waku/enr/dist/waku2_codec.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@waku/discovery/node_modules/@waku/enr/dist/waku2_codec.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decodeWaku2: () => (/* binding */ decodeWaku2),\n/* harmony export */   encodeWaku2: () => (/* binding */ encodeWaku2)\n/* harmony export */ });\nfunction encodeWaku2(protocols) {\n    let byte = 0;\n    if (protocols.lightPush) byte += 1;\n    byte = byte << 1;\n    if (protocols.filter) byte += 1;\n    byte = byte << 1;\n    if (protocols.store) byte += 1;\n    byte = byte << 1;\n    if (protocols.relay) byte += 1;\n    return byte;\n}\nfunction decodeWaku2(byte) {\n    const waku2 = {\n        relay: false,\n        store: false,\n        filter: false,\n        lightPush: false\n    };\n    if (byte % 2) waku2.relay = true;\n    byte = byte >> 1;\n    if (byte % 2) waku2.store = true;\n    byte = byte >> 1;\n    if (byte % 2) waku2.filter = true;\n    byte = byte >> 1;\n    if (byte % 2) waku2.lightPush = true;\n    return waku2;\n} //# sourceMappingURL=waku2_codec.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdha3UvZGlzY292ZXJ5L25vZGVfbW9kdWxlcy9Ad2FrdS9lbnIvZGlzdC93YWt1Ml9jb2RlYy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFPLFNBQVNBLFlBQVlDLFNBQVM7SUFDakMsSUFBSUMsT0FBTztJQUNYLElBQUlELFVBQVVFLFNBQVMsRUFDbkJELFFBQVE7SUFDWkEsT0FBT0EsUUFBUTtJQUNmLElBQUlELFVBQVVHLE1BQU0sRUFDaEJGLFFBQVE7SUFDWkEsT0FBT0EsUUFBUTtJQUNmLElBQUlELFVBQVVJLEtBQUssRUFDZkgsUUFBUTtJQUNaQSxPQUFPQSxRQUFRO0lBQ2YsSUFBSUQsVUFBVUssS0FBSyxFQUNmSixRQUFRO0lBQ1osT0FBT0E7QUFDWDtBQUNPLFNBQVNLLFlBQVlMLElBQUk7SUFDNUIsTUFBTU0sUUFBUTtRQUNWRixPQUFPO1FBQ1BELE9BQU87UUFDUEQsUUFBUTtRQUNSRCxXQUFXO0lBQ2Y7SUFDQSxJQUFJRCxPQUFPLEdBQ1BNLE1BQU1GLEtBQUssR0FBRztJQUNsQkosT0FBT0EsUUFBUTtJQUNmLElBQUlBLE9BQU8sR0FDUE0sTUFBTUgsS0FBSyxHQUFHO0lBQ2xCSCxPQUFPQSxRQUFRO0lBQ2YsSUFBSUEsT0FBTyxHQUNQTSxNQUFNSixNQUFNLEdBQUc7SUFDbkJGLE9BQU9BLFFBQVE7SUFDZixJQUFJQSxPQUFPLEdBQ1BNLE1BQU1MLFNBQVMsR0FBRztJQUN0QixPQUFPSztBQUNYLEVBQ0EsdUNBQXVDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZmx1c2gtbm90ZXMvLi9ub2RlX21vZHVsZXMvQHdha3UvZGlzY292ZXJ5L25vZGVfbW9kdWxlcy9Ad2FrdS9lbnIvZGlzdC93YWt1Ml9jb2RlYy5qcz81MTQ5Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBmdW5jdGlvbiBlbmNvZGVXYWt1Mihwcm90b2NvbHMpIHtcbiAgICBsZXQgYnl0ZSA9IDA7XG4gICAgaWYgKHByb3RvY29scy5saWdodFB1c2gpXG4gICAgICAgIGJ5dGUgKz0gMTtcbiAgICBieXRlID0gYnl0ZSA8PCAxO1xuICAgIGlmIChwcm90b2NvbHMuZmlsdGVyKVxuICAgICAgICBieXRlICs9IDE7XG4gICAgYnl0ZSA9IGJ5dGUgPDwgMTtcbiAgICBpZiAocHJvdG9jb2xzLnN0b3JlKVxuICAgICAgICBieXRlICs9IDE7XG4gICAgYnl0ZSA9IGJ5dGUgPDwgMTtcbiAgICBpZiAocHJvdG9jb2xzLnJlbGF5KVxuICAgICAgICBieXRlICs9IDE7XG4gICAgcmV0dXJuIGJ5dGU7XG59XG5leHBvcnQgZnVuY3Rpb24gZGVjb2RlV2FrdTIoYnl0ZSkge1xuICAgIGNvbnN0IHdha3UyID0ge1xuICAgICAgICByZWxheTogZmFsc2UsXG4gICAgICAgIHN0b3JlOiBmYWxzZSxcbiAgICAgICAgZmlsdGVyOiBmYWxzZSxcbiAgICAgICAgbGlnaHRQdXNoOiBmYWxzZVxuICAgIH07XG4gICAgaWYgKGJ5dGUgJSAyKVxuICAgICAgICB3YWt1Mi5yZWxheSA9IHRydWU7XG4gICAgYnl0ZSA9IGJ5dGUgPj4gMTtcbiAgICBpZiAoYnl0ZSAlIDIpXG4gICAgICAgIHdha3UyLnN0b3JlID0gdHJ1ZTtcbiAgICBieXRlID0gYnl0ZSA+PiAxO1xuICAgIGlmIChieXRlICUgMilcbiAgICAgICAgd2FrdTIuZmlsdGVyID0gdHJ1ZTtcbiAgICBieXRlID0gYnl0ZSA+PiAxO1xuICAgIGlmIChieXRlICUgMilcbiAgICAgICAgd2FrdTIubGlnaHRQdXNoID0gdHJ1ZTtcbiAgICByZXR1cm4gd2FrdTI7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD13YWt1Ml9jb2RlYy5qcy5tYXAiXSwibmFtZXMiOlsiZW5jb2RlV2FrdTIiLCJwcm90b2NvbHMiLCJieXRlIiwibGlnaHRQdXNoIiwiZmlsdGVyIiwic3RvcmUiLCJyZWxheSIsImRlY29kZVdha3UyIiwid2FrdTIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/discovery/node_modules/@waku/enr/dist/waku2_codec.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/discovery/node_modules/@waku/interfaces/dist/connection_manager.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@waku/discovery/node_modules/@waku/interfaces/dist/connection_manager.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   EConnectionStateEvents: () => (/* binding */ EConnectionStateEvents),\n/* harmony export */   EPeersByDiscoveryEvents: () => (/* binding */ EPeersByDiscoveryEvents),\n/* harmony export */   Tags: () => (/* binding */ Tags)\n/* harmony export */ });\nvar Tags;\n(function(Tags) {\n    Tags[\"BOOTSTRAP\"] = \"bootstrap\";\n    Tags[\"PEER_EXCHANGE\"] = \"peer-exchange\";\n    Tags[\"LOCAL\"] = \"local-peer-cache\";\n})(Tags || (Tags = {}));\nvar EPeersByDiscoveryEvents;\n(function(EPeersByDiscoveryEvents) {\n    EPeersByDiscoveryEvents[\"PEER_DISCOVERY_BOOTSTRAP\"] = \"peer:discovery:bootstrap\";\n    EPeersByDiscoveryEvents[\"PEER_DISCOVERY_PEER_EXCHANGE\"] = \"peer:discovery:peer-exchange\";\n    EPeersByDiscoveryEvents[\"PEER_CONNECT_BOOTSTRAP\"] = \"peer:connected:bootstrap\";\n    EPeersByDiscoveryEvents[\"PEER_CONNECT_PEER_EXCHANGE\"] = \"peer:connected:peer-exchange\";\n})(EPeersByDiscoveryEvents || (EPeersByDiscoveryEvents = {}));\nvar EConnectionStateEvents;\n(function(EConnectionStateEvents) {\n    EConnectionStateEvents[\"CONNECTION_STATUS\"] = \"waku:connection\";\n})(EConnectionStateEvents || (EConnectionStateEvents = {})); //# sourceMappingURL=connection_manager.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdha3UvZGlzY292ZXJ5L25vZGVfbW9kdWxlcy9Ad2FrdS9pbnRlcmZhY2VzL2Rpc3QvY29ubmVjdGlvbl9tYW5hZ2VyLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFPLElBQUlBLEtBQUs7QUFDZixVQUFVQSxJQUFJO0lBQ1hBLElBQUksQ0FBQyxZQUFZLEdBQUc7SUFDcEJBLElBQUksQ0FBQyxnQkFBZ0IsR0FBRztJQUN4QkEsSUFBSSxDQUFDLFFBQVEsR0FBRztBQUNwQixHQUFHQSxRQUFTQSxDQUFBQSxPQUFPLENBQUM7QUFDYixJQUFJQyx3QkFBd0I7QUFDbEMsVUFBVUEsdUJBQXVCO0lBQzlCQSx1QkFBdUIsQ0FBQywyQkFBMkIsR0FBRztJQUN0REEsdUJBQXVCLENBQUMsK0JBQStCLEdBQUc7SUFDMURBLHVCQUF1QixDQUFDLHlCQUF5QixHQUFHO0lBQ3BEQSx1QkFBdUIsQ0FBQyw2QkFBNkIsR0FBRztBQUM1RCxHQUFHQSwyQkFBNEJBLENBQUFBLDBCQUEwQixDQUFDO0FBQ25ELElBQUlDLHVCQUF1QjtBQUNqQyxVQUFVQSxzQkFBc0I7SUFDN0JBLHNCQUFzQixDQUFDLG9CQUFvQixHQUFHO0FBQ2xELEdBQUdBLDBCQUEyQkEsQ0FBQUEseUJBQXlCLENBQUMsS0FDeEQsOENBQThDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZmx1c2gtbm90ZXMvLi9ub2RlX21vZHVsZXMvQHdha3UvZGlzY292ZXJ5L25vZGVfbW9kdWxlcy9Ad2FrdS9pbnRlcmZhY2VzL2Rpc3QvY29ubmVjdGlvbl9tYW5hZ2VyLmpzPzFhODgiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHZhciBUYWdzO1xuKGZ1bmN0aW9uIChUYWdzKSB7XG4gICAgVGFnc1tcIkJPT1RTVFJBUFwiXSA9IFwiYm9vdHN0cmFwXCI7XG4gICAgVGFnc1tcIlBFRVJfRVhDSEFOR0VcIl0gPSBcInBlZXItZXhjaGFuZ2VcIjtcbiAgICBUYWdzW1wiTE9DQUxcIl0gPSBcImxvY2FsLXBlZXItY2FjaGVcIjtcbn0pKFRhZ3MgfHwgKFRhZ3MgPSB7fSkpO1xuZXhwb3J0IHZhciBFUGVlcnNCeURpc2NvdmVyeUV2ZW50cztcbihmdW5jdGlvbiAoRVBlZXJzQnlEaXNjb3ZlcnlFdmVudHMpIHtcbiAgICBFUGVlcnNCeURpc2NvdmVyeUV2ZW50c1tcIlBFRVJfRElTQ09WRVJZX0JPT1RTVFJBUFwiXSA9IFwicGVlcjpkaXNjb3Zlcnk6Ym9vdHN0cmFwXCI7XG4gICAgRVBlZXJzQnlEaXNjb3ZlcnlFdmVudHNbXCJQRUVSX0RJU0NPVkVSWV9QRUVSX0VYQ0hBTkdFXCJdID0gXCJwZWVyOmRpc2NvdmVyeTpwZWVyLWV4Y2hhbmdlXCI7XG4gICAgRVBlZXJzQnlEaXNjb3ZlcnlFdmVudHNbXCJQRUVSX0NPTk5FQ1RfQk9PVFNUUkFQXCJdID0gXCJwZWVyOmNvbm5lY3RlZDpib290c3RyYXBcIjtcbiAgICBFUGVlcnNCeURpc2NvdmVyeUV2ZW50c1tcIlBFRVJfQ09OTkVDVF9QRUVSX0VYQ0hBTkdFXCJdID0gXCJwZWVyOmNvbm5lY3RlZDpwZWVyLWV4Y2hhbmdlXCI7XG59KShFUGVlcnNCeURpc2NvdmVyeUV2ZW50cyB8fCAoRVBlZXJzQnlEaXNjb3ZlcnlFdmVudHMgPSB7fSkpO1xuZXhwb3J0IHZhciBFQ29ubmVjdGlvblN0YXRlRXZlbnRzO1xuKGZ1bmN0aW9uIChFQ29ubmVjdGlvblN0YXRlRXZlbnRzKSB7XG4gICAgRUNvbm5lY3Rpb25TdGF0ZUV2ZW50c1tcIkNPTk5FQ1RJT05fU1RBVFVTXCJdID0gXCJ3YWt1OmNvbm5lY3Rpb25cIjtcbn0pKEVDb25uZWN0aW9uU3RhdGVFdmVudHMgfHwgKEVDb25uZWN0aW9uU3RhdGVFdmVudHMgPSB7fSkpO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y29ubmVjdGlvbl9tYW5hZ2VyLmpzLm1hcCJdLCJuYW1lcyI6WyJUYWdzIiwiRVBlZXJzQnlEaXNjb3ZlcnlFdmVudHMiLCJFQ29ubmVjdGlvblN0YXRlRXZlbnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/discovery/node_modules/@waku/interfaces/dist/connection_manager.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/discovery/node_modules/@waku/interfaces/dist/constants.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@waku/discovery/node_modules/@waku/interfaces/dist/constants.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DEFAULT_CLUSTER_ID: () => (/* binding */ DEFAULT_CLUSTER_ID),\n/* harmony export */   DefaultPubsubTopic: () => (/* binding */ DefaultPubsubTopic)\n/* harmony export */ });\n/**\n * DefaultPubsubTopic is the default gossipsub topic to use for Waku.\n */ const DefaultPubsubTopic = \"/waku/2/default-waku/proto\";\n/**\n * The default cluster ID for The Waku Network\n */ const DEFAULT_CLUSTER_ID = 1; //# sourceMappingURL=constants.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdha3UvZGlzY292ZXJ5L25vZGVfbW9kdWxlcy9Ad2FrdS9pbnRlcmZhY2VzL2Rpc3QvY29uc3RhbnRzLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7O0NBRUMsR0FDTSxNQUFNQSxxQkFBcUIsNkJBQTZCO0FBQy9EOztDQUVDLEdBQ00sTUFBTUMscUJBQXFCLEVBQUUsQ0FDcEMscUNBQXFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZmx1c2gtbm90ZXMvLi9ub2RlX21vZHVsZXMvQHdha3UvZGlzY292ZXJ5L25vZGVfbW9kdWxlcy9Ad2FrdS9pbnRlcmZhY2VzL2Rpc3QvY29uc3RhbnRzLmpzPzNjYWEiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBEZWZhdWx0UHVic3ViVG9waWMgaXMgdGhlIGRlZmF1bHQgZ29zc2lwc3ViIHRvcGljIHRvIHVzZSBmb3IgV2FrdS5cbiAqL1xuZXhwb3J0IGNvbnN0IERlZmF1bHRQdWJzdWJUb3BpYyA9IFwiL3dha3UvMi9kZWZhdWx0LXdha3UvcHJvdG9cIjtcbi8qKlxuICogVGhlIGRlZmF1bHQgY2x1c3RlciBJRCBmb3IgVGhlIFdha3UgTmV0d29ya1xuICovXG5leHBvcnQgY29uc3QgREVGQVVMVF9DTFVTVEVSX0lEID0gMTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNvbnN0YW50cy5qcy5tYXAiXSwibmFtZXMiOlsiRGVmYXVsdFB1YnN1YlRvcGljIiwiREVGQVVMVF9DTFVTVEVSX0lEIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/discovery/node_modules/@waku/interfaces/dist/constants.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/discovery/node_modules/@waku/interfaces/dist/dns_discovery.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@waku/discovery/node_modules/@waku/interfaces/dist/dns_discovery.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n //# sourceMappingURL=dns_discovery.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdha3UvZGlzY292ZXJ5L25vZGVfbW9kdWxlcy9Ad2FrdS9pbnRlcmZhY2VzL2Rpc3QvZG5zX2Rpc2NvdmVyeS5qcyIsIm1hcHBpbmdzIjoiO0FBQVUsQ0FDVix5Q0FBeUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mbHVzaC1ub3Rlcy8uL25vZGVfbW9kdWxlcy9Ad2FrdS9kaXNjb3Zlcnkvbm9kZV9tb2R1bGVzL0B3YWt1L2ludGVyZmFjZXMvZGlzdC9kbnNfZGlzY292ZXJ5LmpzP2ZlMzgiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHt9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZG5zX2Rpc2NvdmVyeS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/discovery/node_modules/@waku/interfaces/dist/dns_discovery.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/discovery/node_modules/@waku/interfaces/dist/enr.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@waku/discovery/node_modules/@waku/interfaces/dist/enr.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n //# sourceMappingURL=enr.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdha3UvZGlzY292ZXJ5L25vZGVfbW9kdWxlcy9Ad2FrdS9pbnRlcmZhY2VzL2Rpc3QvZW5yLmpzIiwibWFwcGluZ3MiOiI7QUFBVSxDQUNWLCtCQUErQiIsInNvdXJjZXMiOlsid2VicGFjazovL2ZsdXNoLW5vdGVzLy4vbm9kZV9tb2R1bGVzL0B3YWt1L2Rpc2NvdmVyeS9ub2RlX21vZHVsZXMvQHdha3UvaW50ZXJmYWNlcy9kaXN0L2Vuci5qcz80ZWY1Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCB7fTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWVuci5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/discovery/node_modules/@waku/interfaces/dist/enr.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/discovery/node_modules/@waku/interfaces/dist/filter.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@waku/discovery/node_modules/@waku/interfaces/dist/filter.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n //# sourceMappingURL=filter.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdha3UvZGlzY292ZXJ5L25vZGVfbW9kdWxlcy9Ad2FrdS9pbnRlcmZhY2VzL2Rpc3QvZmlsdGVyLmpzIiwibWFwcGluZ3MiOiI7QUFBVSxDQUNWLGtDQUFrQyIsInNvdXJjZXMiOlsid2VicGFjazovL2ZsdXNoLW5vdGVzLy4vbm9kZV9tb2R1bGVzL0B3YWt1L2Rpc2NvdmVyeS9ub2RlX21vZHVsZXMvQHdha3UvaW50ZXJmYWNlcy9kaXN0L2ZpbHRlci5qcz8wNTU0Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCB7fTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWZpbHRlci5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/discovery/node_modules/@waku/interfaces/dist/filter.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/discovery/node_modules/@waku/interfaces/dist/index.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@waku/discovery/node_modules/@waku/interfaces/dist/index.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DEFAULT_CLUSTER_ID: () => (/* reexport safe */ _constants_js__WEBPACK_IMPORTED_MODULE_17__.DEFAULT_CLUSTER_ID),\n/* harmony export */   DefaultPubsubTopic: () => (/* reexport safe */ _constants_js__WEBPACK_IMPORTED_MODULE_17__.DefaultPubsubTopic),\n/* harmony export */   EConnectionStateEvents: () => (/* reexport safe */ _connection_manager_js__WEBPACK_IMPORTED_MODULE_9__.EConnectionStateEvents),\n/* harmony export */   EPeersByDiscoveryEvents: () => (/* reexport safe */ _connection_manager_js__WEBPACK_IMPORTED_MODULE_9__.EPeersByDiscoveryEvents),\n/* harmony export */   PageDirection: () => (/* reexport safe */ _store_js__WEBPACK_IMPORTED_MODULE_7__.PageDirection),\n/* harmony export */   ProtocolError: () => (/* reexport safe */ _protocols_js__WEBPACK_IMPORTED_MODULE_5__.ProtocolError),\n/* harmony export */   Protocols: () => (/* reexport safe */ _protocols_js__WEBPACK_IMPORTED_MODULE_5__.Protocols),\n/* harmony export */   Tags: () => (/* reexport safe */ _connection_manager_js__WEBPACK_IMPORTED_MODULE_9__.Tags)\n/* harmony export */ });\n/* harmony import */ var _enr_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./enr.js */ \"(ssr)/./node_modules/@waku/discovery/node_modules/@waku/interfaces/dist/enr.js\");\n/* harmony import */ var _filter_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./filter.js */ \"(ssr)/./node_modules/@waku/discovery/node_modules/@waku/interfaces/dist/filter.js\");\n/* harmony import */ var _light_push_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./light_push.js */ \"(ssr)/./node_modules/@waku/discovery/node_modules/@waku/interfaces/dist/light_push.js\");\n/* harmony import */ var _message_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./message.js */ \"(ssr)/./node_modules/@waku/discovery/node_modules/@waku/interfaces/dist/message.js\");\n/* harmony import */ var _peer_exchange_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./peer_exchange.js */ \"(ssr)/./node_modules/@waku/discovery/node_modules/@waku/interfaces/dist/peer_exchange.js\");\n/* harmony import */ var _protocols_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./protocols.js */ \"(ssr)/./node_modules/@waku/discovery/node_modules/@waku/interfaces/dist/protocols.js\");\n/* harmony import */ var _relay_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./relay.js */ \"(ssr)/./node_modules/@waku/discovery/node_modules/@waku/interfaces/dist/relay.js\");\n/* harmony import */ var _store_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./store.js */ \"(ssr)/./node_modules/@waku/discovery/node_modules/@waku/interfaces/dist/store.js\");\n/* harmony import */ var _waku_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./waku.js */ \"(ssr)/./node_modules/@waku/discovery/node_modules/@waku/interfaces/dist/waku.js\");\n/* harmony import */ var _connection_manager_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./connection_manager.js */ \"(ssr)/./node_modules/@waku/discovery/node_modules/@waku/interfaces/dist/connection_manager.js\");\n/* harmony import */ var _sender_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./sender.js */ \"(ssr)/./node_modules/@waku/discovery/node_modules/@waku/interfaces/dist/sender.js\");\n/* harmony import */ var _receiver_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./receiver.js */ \"(ssr)/./node_modules/@waku/discovery/node_modules/@waku/interfaces/dist/receiver.js\");\n/* harmony import */ var _misc_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./misc.js */ \"(ssr)/./node_modules/@waku/discovery/node_modules/@waku/interfaces/dist/misc.js\");\n/* harmony import */ var _libp2p_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./libp2p.js */ \"(ssr)/./node_modules/@waku/discovery/node_modules/@waku/interfaces/dist/libp2p.js\");\n/* harmony import */ var _keep_alive_manager_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./keep_alive_manager.js */ \"(ssr)/./node_modules/@waku/discovery/node_modules/@waku/interfaces/dist/keep_alive_manager.js\");\n/* harmony import */ var _dns_discovery_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./dns_discovery.js */ \"(ssr)/./node_modules/@waku/discovery/node_modules/@waku/interfaces/dist/dns_discovery.js\");\n/* harmony import */ var _metadata_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./metadata.js */ \"(ssr)/./node_modules/@waku/discovery/node_modules/@waku/interfaces/dist/metadata.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./constants.js */ \"(ssr)/./node_modules/@waku/discovery/node_modules/@waku/interfaces/dist/constants.js\");\n/* harmony import */ var _local_storage_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./local_storage.js */ \"(ssr)/./node_modules/@waku/discovery/node_modules/@waku/interfaces/dist/local_storage.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdha3UvZGlzY292ZXJ5L25vZGVfbW9kdWxlcy9Ad2FrdS9pbnRlcmZhY2VzL2Rpc3QvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQXlCO0FBQ0c7QUFDSTtBQUNIO0FBQ007QUFDSjtBQUNKO0FBQ0E7QUFDRDtBQUNjO0FBQ1o7QUFDRTtBQUNKO0FBQ0U7QUFDWTtBQUNMO0FBQ0w7QUFDQztBQUNJLENBQ25DLGlDQUFpQyIsInNvdXJjZXMiOlsid2VicGFjazovL2ZsdXNoLW5vdGVzLy4vbm9kZV9tb2R1bGVzL0B3YWt1L2Rpc2NvdmVyeS9ub2RlX21vZHVsZXMvQHdha3UvaW50ZXJmYWNlcy9kaXN0L2luZGV4LmpzPzJkNTUiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0ICogZnJvbSBcIi4vZW5yLmpzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9maWx0ZXIuanNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL2xpZ2h0X3B1c2guanNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL21lc3NhZ2UuanNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL3BlZXJfZXhjaGFuZ2UuanNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL3Byb3RvY29scy5qc1wiO1xuZXhwb3J0ICogZnJvbSBcIi4vcmVsYXkuanNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL3N0b3JlLmpzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi93YWt1LmpzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9jb25uZWN0aW9uX21hbmFnZXIuanNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL3NlbmRlci5qc1wiO1xuZXhwb3J0ICogZnJvbSBcIi4vcmVjZWl2ZXIuanNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL21pc2MuanNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL2xpYnAycC5qc1wiO1xuZXhwb3J0ICogZnJvbSBcIi4va2VlcF9hbGl2ZV9tYW5hZ2VyLmpzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9kbnNfZGlzY292ZXJ5LmpzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9tZXRhZGF0YS5qc1wiO1xuZXhwb3J0ICogZnJvbSBcIi4vY29uc3RhbnRzLmpzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9sb2NhbF9zdG9yYWdlLmpzXCI7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/discovery/node_modules/@waku/interfaces/dist/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/discovery/node_modules/@waku/interfaces/dist/keep_alive_manager.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@waku/discovery/node_modules/@waku/interfaces/dist/keep_alive_manager.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n //# sourceMappingURL=keep_alive_manager.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdha3UvZGlzY292ZXJ5L25vZGVfbW9kdWxlcy9Ad2FrdS9pbnRlcmZhY2VzL2Rpc3Qva2VlcF9hbGl2ZV9tYW5hZ2VyLmpzIiwibWFwcGluZ3MiOiI7QUFBVSxDQUNWLDhDQUE4QyIsInNvdXJjZXMiOlsid2VicGFjazovL2ZsdXNoLW5vdGVzLy4vbm9kZV9tb2R1bGVzL0B3YWt1L2Rpc2NvdmVyeS9ub2RlX21vZHVsZXMvQHdha3UvaW50ZXJmYWNlcy9kaXN0L2tlZXBfYWxpdmVfbWFuYWdlci5qcz9iMmY0Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCB7fTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWtlZXBfYWxpdmVfbWFuYWdlci5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/discovery/node_modules/@waku/interfaces/dist/keep_alive_manager.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/discovery/node_modules/@waku/interfaces/dist/libp2p.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@waku/discovery/node_modules/@waku/interfaces/dist/libp2p.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n //# sourceMappingURL=libp2p.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdha3UvZGlzY292ZXJ5L25vZGVfbW9kdWxlcy9Ad2FrdS9pbnRlcmZhY2VzL2Rpc3QvbGlicDJwLmpzIiwibWFwcGluZ3MiOiI7QUFBVSxDQUNWLGtDQUFrQyIsInNvdXJjZXMiOlsid2VicGFjazovL2ZsdXNoLW5vdGVzLy4vbm9kZV9tb2R1bGVzL0B3YWt1L2Rpc2NvdmVyeS9ub2RlX21vZHVsZXMvQHdha3UvaW50ZXJmYWNlcy9kaXN0L2xpYnAycC5qcz9mYWMzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCB7fTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWxpYnAycC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/discovery/node_modules/@waku/interfaces/dist/libp2p.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/discovery/node_modules/@waku/interfaces/dist/light_push.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@waku/discovery/node_modules/@waku/interfaces/dist/light_push.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n //# sourceMappingURL=light_push.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdha3UvZGlzY292ZXJ5L25vZGVfbW9kdWxlcy9Ad2FrdS9pbnRlcmZhY2VzL2Rpc3QvbGlnaHRfcHVzaC5qcyIsIm1hcHBpbmdzIjoiO0FBQVUsQ0FDVixzQ0FBc0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mbHVzaC1ub3Rlcy8uL25vZGVfbW9kdWxlcy9Ad2FrdS9kaXNjb3Zlcnkvbm9kZV9tb2R1bGVzL0B3YWt1L2ludGVyZmFjZXMvZGlzdC9saWdodF9wdXNoLmpzPzQyMTgiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHt9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bGlnaHRfcHVzaC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/discovery/node_modules/@waku/interfaces/dist/light_push.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/discovery/node_modules/@waku/interfaces/dist/local_storage.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@waku/discovery/node_modules/@waku/interfaces/dist/local_storage.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n //# sourceMappingURL=local_storage.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdha3UvZGlzY292ZXJ5L25vZGVfbW9kdWxlcy9Ad2FrdS9pbnRlcmZhY2VzL2Rpc3QvbG9jYWxfc3RvcmFnZS5qcyIsIm1hcHBpbmdzIjoiO0FBQVUsQ0FDVix5Q0FBeUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mbHVzaC1ub3Rlcy8uL25vZGVfbW9kdWxlcy9Ad2FrdS9kaXNjb3Zlcnkvbm9kZV9tb2R1bGVzL0B3YWt1L2ludGVyZmFjZXMvZGlzdC9sb2NhbF9zdG9yYWdlLmpzP2I5ZmMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHt9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bG9jYWxfc3RvcmFnZS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/discovery/node_modules/@waku/interfaces/dist/local_storage.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/discovery/node_modules/@waku/interfaces/dist/message.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@waku/discovery/node_modules/@waku/interfaces/dist/message.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n //# sourceMappingURL=message.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdha3UvZGlzY292ZXJ5L25vZGVfbW9kdWxlcy9Ad2FrdS9pbnRlcmZhY2VzL2Rpc3QvbWVzc2FnZS5qcyIsIm1hcHBpbmdzIjoiO0FBQVUsQ0FDVixtQ0FBbUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mbHVzaC1ub3Rlcy8uL25vZGVfbW9kdWxlcy9Ad2FrdS9kaXNjb3Zlcnkvbm9kZV9tb2R1bGVzL0B3YWt1L2ludGVyZmFjZXMvZGlzdC9tZXNzYWdlLmpzPzY1NjIiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHt9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bWVzc2FnZS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/discovery/node_modules/@waku/interfaces/dist/message.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/discovery/node_modules/@waku/interfaces/dist/metadata.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@waku/discovery/node_modules/@waku/interfaces/dist/metadata.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n //# sourceMappingURL=metadata.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdha3UvZGlzY292ZXJ5L25vZGVfbW9kdWxlcy9Ad2FrdS9pbnRlcmZhY2VzL2Rpc3QvbWV0YWRhdGEuanMiLCJtYXBwaW5ncyI6IjtBQUFVLENBQ1Ysb0NBQW9DIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZmx1c2gtbm90ZXMvLi9ub2RlX21vZHVsZXMvQHdha3UvZGlzY292ZXJ5L25vZGVfbW9kdWxlcy9Ad2FrdS9pbnRlcmZhY2VzL2Rpc3QvbWV0YWRhdGEuanM/NTU2MCJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQge307XG4vLyMgc291cmNlTWFwcGluZ1VSTD1tZXRhZGF0YS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/discovery/node_modules/@waku/interfaces/dist/metadata.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/discovery/node_modules/@waku/interfaces/dist/misc.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@waku/discovery/node_modules/@waku/interfaces/dist/misc.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n //# sourceMappingURL=misc.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdha3UvZGlzY292ZXJ5L25vZGVfbW9kdWxlcy9Ad2FrdS9pbnRlcmZhY2VzL2Rpc3QvbWlzYy5qcyIsIm1hcHBpbmdzIjoiO0FBQVUsQ0FDVixnQ0FBZ0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mbHVzaC1ub3Rlcy8uL25vZGVfbW9kdWxlcy9Ad2FrdS9kaXNjb3Zlcnkvbm9kZV9tb2R1bGVzL0B3YWt1L2ludGVyZmFjZXMvZGlzdC9taXNjLmpzPzhmMzIiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHt9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bWlzYy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/discovery/node_modules/@waku/interfaces/dist/misc.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/discovery/node_modules/@waku/interfaces/dist/peer_exchange.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@waku/discovery/node_modules/@waku/interfaces/dist/peer_exchange.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n //# sourceMappingURL=peer_exchange.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdha3UvZGlzY292ZXJ5L25vZGVfbW9kdWxlcy9Ad2FrdS9pbnRlcmZhY2VzL2Rpc3QvcGVlcl9leGNoYW5nZS5qcyIsIm1hcHBpbmdzIjoiO0FBQVUsQ0FDVix5Q0FBeUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mbHVzaC1ub3Rlcy8uL25vZGVfbW9kdWxlcy9Ad2FrdS9kaXNjb3Zlcnkvbm9kZV9tb2R1bGVzL0B3YWt1L2ludGVyZmFjZXMvZGlzdC9wZWVyX2V4Y2hhbmdlLmpzP2JkNTYiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHt9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cGVlcl9leGNoYW5nZS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/discovery/node_modules/@waku/interfaces/dist/peer_exchange.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/discovery/node_modules/@waku/interfaces/dist/protocols.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@waku/discovery/node_modules/@waku/interfaces/dist/protocols.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ProtocolError: () => (/* binding */ ProtocolError),\n/* harmony export */   Protocols: () => (/* binding */ Protocols)\n/* harmony export */ });\nvar Protocols;\n(function(Protocols) {\n    Protocols[\"Relay\"] = \"relay\";\n    Protocols[\"Store\"] = \"store\";\n    Protocols[\"LightPush\"] = \"lightpush\";\n    Protocols[\"Filter\"] = \"filter\";\n})(Protocols || (Protocols = {}));\nvar ProtocolError;\n(function(ProtocolError) {\n    /** Could not determine the origin of the fault. Best to check connectivity and try again */ ProtocolError[\"GENERIC_FAIL\"] = \"Generic error\";\n    /**\n     * Failure to protobuf encode the message. This is not recoverable and needs\n     * further investigation.\n     */ ProtocolError[\"ENCODE_FAILED\"] = \"Failed to encode\";\n    /**\n     * Failure to protobuf decode the message. May be due to a remote peer issue,\n     * ensuring that messages are sent via several peer enable mitigation of this error.\n     */ ProtocolError[\"DECODE_FAILED\"] = \"Failed to decode\";\n    /**\n     * The message payload is empty, making the message invalid. Ensure that a non-empty\n     * payload is set on the outgoing message.\n     */ ProtocolError[\"EMPTY_PAYLOAD\"] = \"Payload is empty\";\n    /**\n     * The message size is above the maximum message size allowed on the Waku Network.\n     * Compressing the message or using an alternative strategy for large messages is recommended.\n     */ ProtocolError[\"SIZE_TOO_BIG\"] = \"Size is too big\";\n    /**\n     * The PubsubTopic passed to the send function is not configured on the Waku node.\n     * Please ensure that the PubsubTopic is used when initializing the Waku node.\n     */ ProtocolError[\"TOPIC_NOT_CONFIGURED\"] = \"Topic not configured\";\n    /**\n     * Failure to find a peer with suitable protocols. This may due to a connection issue.\n     * Mitigation can be: retrying after a given time period, display connectivity issue\n     * to user or listening for `peer:connected:bootstrap` or `peer:connected:peer-exchange`\n     * on the connection manager before retrying.\n     */ ProtocolError[\"NO_PEER_AVAILABLE\"] = \"No peer available\";\n    /**\n     * The remote peer did not behave as expected. Mitigation for `NO_PEER_AVAILABLE`\n     * or `DECODE_FAILED` can be used.\n     */ ProtocolError[\"REMOTE_PEER_FAULT\"] = \"Remote peer fault\";\n    /**\n     * The remote peer rejected the message. Information provided by the remote peer\n     * is logged. Review message validity, or mitigation for `NO_PEER_AVAILABLE`\n     * or `DECODE_FAILED` can be used.\n     */ ProtocolError[\"REMOTE_PEER_REJECTED\"] = \"Remote peer rejected\";\n    /**\n     * The protocol request timed out without a response. This may be due to a connection issue.\n     * Mitigation can be: retrying after a given time period\n     */ ProtocolError[\"REQUEST_TIMEOUT\"] = \"Request timeout\";\n})(ProtocolError || (ProtocolError = {})); //# sourceMappingURL=protocols.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdha3UvZGlzY292ZXJ5L25vZGVfbW9kdWxlcy9Ad2FrdS9pbnRlcmZhY2VzL2Rpc3QvcHJvdG9jb2xzLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQU8sSUFBSUEsVUFBVTtBQUNwQixVQUFVQSxTQUFTO0lBQ2hCQSxTQUFTLENBQUMsUUFBUSxHQUFHO0lBQ3JCQSxTQUFTLENBQUMsUUFBUSxHQUFHO0lBQ3JCQSxTQUFTLENBQUMsWUFBWSxHQUFHO0lBQ3pCQSxTQUFTLENBQUMsU0FBUyxHQUFHO0FBQzFCLEdBQUdBLGFBQWNBLENBQUFBLFlBQVksQ0FBQztBQUN2QixJQUFJQyxjQUFjO0FBQ3hCLFVBQVVBLGFBQWE7SUFDcEIsMEZBQTBGLEdBQzFGQSxhQUFhLENBQUMsZUFBZSxHQUFHO0lBQ2hDOzs7S0FHQyxHQUNEQSxhQUFhLENBQUMsZ0JBQWdCLEdBQUc7SUFDakM7OztLQUdDLEdBQ0RBLGFBQWEsQ0FBQyxnQkFBZ0IsR0FBRztJQUNqQzs7O0tBR0MsR0FDREEsYUFBYSxDQUFDLGdCQUFnQixHQUFHO0lBQ2pDOzs7S0FHQyxHQUNEQSxhQUFhLENBQUMsZUFBZSxHQUFHO0lBQ2hDOzs7S0FHQyxHQUNEQSxhQUFhLENBQUMsdUJBQXVCLEdBQUc7SUFDeEM7Ozs7O0tBS0MsR0FDREEsYUFBYSxDQUFDLG9CQUFvQixHQUFHO0lBQ3JDOzs7S0FHQyxHQUNEQSxhQUFhLENBQUMsb0JBQW9CLEdBQUc7SUFDckM7Ozs7S0FJQyxHQUNEQSxhQUFhLENBQUMsdUJBQXVCLEdBQUc7SUFDeEM7OztLQUdDLEdBQ0RBLGFBQWEsQ0FBQyxrQkFBa0IsR0FBRztBQUN2QyxHQUFHQSxpQkFBa0JBLENBQUFBLGdCQUFnQixDQUFDLEtBQ3RDLHFDQUFxQyIsInNvdXJjZXMiOlsid2VicGFjazovL2ZsdXNoLW5vdGVzLy4vbm9kZV9tb2R1bGVzL0B3YWt1L2Rpc2NvdmVyeS9ub2RlX21vZHVsZXMvQHdha3UvaW50ZXJmYWNlcy9kaXN0L3Byb3RvY29scy5qcz80ODUwIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCB2YXIgUHJvdG9jb2xzO1xuKGZ1bmN0aW9uIChQcm90b2NvbHMpIHtcbiAgICBQcm90b2NvbHNbXCJSZWxheVwiXSA9IFwicmVsYXlcIjtcbiAgICBQcm90b2NvbHNbXCJTdG9yZVwiXSA9IFwic3RvcmVcIjtcbiAgICBQcm90b2NvbHNbXCJMaWdodFB1c2hcIl0gPSBcImxpZ2h0cHVzaFwiO1xuICAgIFByb3RvY29sc1tcIkZpbHRlclwiXSA9IFwiZmlsdGVyXCI7XG59KShQcm90b2NvbHMgfHwgKFByb3RvY29scyA9IHt9KSk7XG5leHBvcnQgdmFyIFByb3RvY29sRXJyb3I7XG4oZnVuY3Rpb24gKFByb3RvY29sRXJyb3IpIHtcbiAgICAvKiogQ291bGQgbm90IGRldGVybWluZSB0aGUgb3JpZ2luIG9mIHRoZSBmYXVsdC4gQmVzdCB0byBjaGVjayBjb25uZWN0aXZpdHkgYW5kIHRyeSBhZ2FpbiAqL1xuICAgIFByb3RvY29sRXJyb3JbXCJHRU5FUklDX0ZBSUxcIl0gPSBcIkdlbmVyaWMgZXJyb3JcIjtcbiAgICAvKipcbiAgICAgKiBGYWlsdXJlIHRvIHByb3RvYnVmIGVuY29kZSB0aGUgbWVzc2FnZS4gVGhpcyBpcyBub3QgcmVjb3ZlcmFibGUgYW5kIG5lZWRzXG4gICAgICogZnVydGhlciBpbnZlc3RpZ2F0aW9uLlxuICAgICAqL1xuICAgIFByb3RvY29sRXJyb3JbXCJFTkNPREVfRkFJTEVEXCJdID0gXCJGYWlsZWQgdG8gZW5jb2RlXCI7XG4gICAgLyoqXG4gICAgICogRmFpbHVyZSB0byBwcm90b2J1ZiBkZWNvZGUgdGhlIG1lc3NhZ2UuIE1heSBiZSBkdWUgdG8gYSByZW1vdGUgcGVlciBpc3N1ZSxcbiAgICAgKiBlbnN1cmluZyB0aGF0IG1lc3NhZ2VzIGFyZSBzZW50IHZpYSBzZXZlcmFsIHBlZXIgZW5hYmxlIG1pdGlnYXRpb24gb2YgdGhpcyBlcnJvci5cbiAgICAgKi9cbiAgICBQcm90b2NvbEVycm9yW1wiREVDT0RFX0ZBSUxFRFwiXSA9IFwiRmFpbGVkIHRvIGRlY29kZVwiO1xuICAgIC8qKlxuICAgICAqIFRoZSBtZXNzYWdlIHBheWxvYWQgaXMgZW1wdHksIG1ha2luZyB0aGUgbWVzc2FnZSBpbnZhbGlkLiBFbnN1cmUgdGhhdCBhIG5vbi1lbXB0eVxuICAgICAqIHBheWxvYWQgaXMgc2V0IG9uIHRoZSBvdXRnb2luZyBtZXNzYWdlLlxuICAgICAqL1xuICAgIFByb3RvY29sRXJyb3JbXCJFTVBUWV9QQVlMT0FEXCJdID0gXCJQYXlsb2FkIGlzIGVtcHR5XCI7XG4gICAgLyoqXG4gICAgICogVGhlIG1lc3NhZ2Ugc2l6ZSBpcyBhYm92ZSB0aGUgbWF4aW11bSBtZXNzYWdlIHNpemUgYWxsb3dlZCBvbiB0aGUgV2FrdSBOZXR3b3JrLlxuICAgICAqIENvbXByZXNzaW5nIHRoZSBtZXNzYWdlIG9yIHVzaW5nIGFuIGFsdGVybmF0aXZlIHN0cmF0ZWd5IGZvciBsYXJnZSBtZXNzYWdlcyBpcyByZWNvbW1lbmRlZC5cbiAgICAgKi9cbiAgICBQcm90b2NvbEVycm9yW1wiU0laRV9UT09fQklHXCJdID0gXCJTaXplIGlzIHRvbyBiaWdcIjtcbiAgICAvKipcbiAgICAgKiBUaGUgUHVic3ViVG9waWMgcGFzc2VkIHRvIHRoZSBzZW5kIGZ1bmN0aW9uIGlzIG5vdCBjb25maWd1cmVkIG9uIHRoZSBXYWt1IG5vZGUuXG4gICAgICogUGxlYXNlIGVuc3VyZSB0aGF0IHRoZSBQdWJzdWJUb3BpYyBpcyB1c2VkIHdoZW4gaW5pdGlhbGl6aW5nIHRoZSBXYWt1IG5vZGUuXG4gICAgICovXG4gICAgUHJvdG9jb2xFcnJvcltcIlRPUElDX05PVF9DT05GSUdVUkVEXCJdID0gXCJUb3BpYyBub3QgY29uZmlndXJlZFwiO1xuICAgIC8qKlxuICAgICAqIEZhaWx1cmUgdG8gZmluZCBhIHBlZXIgd2l0aCBzdWl0YWJsZSBwcm90b2NvbHMuIFRoaXMgbWF5IGR1ZSB0byBhIGNvbm5lY3Rpb24gaXNzdWUuXG4gICAgICogTWl0aWdhdGlvbiBjYW4gYmU6IHJldHJ5aW5nIGFmdGVyIGEgZ2l2ZW4gdGltZSBwZXJpb2QsIGRpc3BsYXkgY29ubmVjdGl2aXR5IGlzc3VlXG4gICAgICogdG8gdXNlciBvciBsaXN0ZW5pbmcgZm9yIGBwZWVyOmNvbm5lY3RlZDpib290c3RyYXBgIG9yIGBwZWVyOmNvbm5lY3RlZDpwZWVyLWV4Y2hhbmdlYFxuICAgICAqIG9uIHRoZSBjb25uZWN0aW9uIG1hbmFnZXIgYmVmb3JlIHJldHJ5aW5nLlxuICAgICAqL1xuICAgIFByb3RvY29sRXJyb3JbXCJOT19QRUVSX0FWQUlMQUJMRVwiXSA9IFwiTm8gcGVlciBhdmFpbGFibGVcIjtcbiAgICAvKipcbiAgICAgKiBUaGUgcmVtb3RlIHBlZXIgZGlkIG5vdCBiZWhhdmUgYXMgZXhwZWN0ZWQuIE1pdGlnYXRpb24gZm9yIGBOT19QRUVSX0FWQUlMQUJMRWBcbiAgICAgKiBvciBgREVDT0RFX0ZBSUxFRGAgY2FuIGJlIHVzZWQuXG4gICAgICovXG4gICAgUHJvdG9jb2xFcnJvcltcIlJFTU9URV9QRUVSX0ZBVUxUXCJdID0gXCJSZW1vdGUgcGVlciBmYXVsdFwiO1xuICAgIC8qKlxuICAgICAqIFRoZSByZW1vdGUgcGVlciByZWplY3RlZCB0aGUgbWVzc2FnZS4gSW5mb3JtYXRpb24gcHJvdmlkZWQgYnkgdGhlIHJlbW90ZSBwZWVyXG4gICAgICogaXMgbG9nZ2VkLiBSZXZpZXcgbWVzc2FnZSB2YWxpZGl0eSwgb3IgbWl0aWdhdGlvbiBmb3IgYE5PX1BFRVJfQVZBSUxBQkxFYFxuICAgICAqIG9yIGBERUNPREVfRkFJTEVEYCBjYW4gYmUgdXNlZC5cbiAgICAgKi9cbiAgICBQcm90b2NvbEVycm9yW1wiUkVNT1RFX1BFRVJfUkVKRUNURURcIl0gPSBcIlJlbW90ZSBwZWVyIHJlamVjdGVkXCI7XG4gICAgLyoqXG4gICAgICogVGhlIHByb3RvY29sIHJlcXVlc3QgdGltZWQgb3V0IHdpdGhvdXQgYSByZXNwb25zZS4gVGhpcyBtYXkgYmUgZHVlIHRvIGEgY29ubmVjdGlvbiBpc3N1ZS5cbiAgICAgKiBNaXRpZ2F0aW9uIGNhbiBiZTogcmV0cnlpbmcgYWZ0ZXIgYSBnaXZlbiB0aW1lIHBlcmlvZFxuICAgICAqL1xuICAgIFByb3RvY29sRXJyb3JbXCJSRVFVRVNUX1RJTUVPVVRcIl0gPSBcIlJlcXVlc3QgdGltZW91dFwiO1xufSkoUHJvdG9jb2xFcnJvciB8fCAoUHJvdG9jb2xFcnJvciA9IHt9KSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1wcm90b2NvbHMuanMubWFwIl0sIm5hbWVzIjpbIlByb3RvY29scyIsIlByb3RvY29sRXJyb3IiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/discovery/node_modules/@waku/interfaces/dist/protocols.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/discovery/node_modules/@waku/interfaces/dist/receiver.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@waku/discovery/node_modules/@waku/interfaces/dist/receiver.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n //# sourceMappingURL=receiver.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdha3UvZGlzY292ZXJ5L25vZGVfbW9kdWxlcy9Ad2FrdS9pbnRlcmZhY2VzL2Rpc3QvcmVjZWl2ZXIuanMiLCJtYXBwaW5ncyI6IjtBQUFVLENBQ1Ysb0NBQW9DIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZmx1c2gtbm90ZXMvLi9ub2RlX21vZHVsZXMvQHdha3UvZGlzY292ZXJ5L25vZGVfbW9kdWxlcy9Ad2FrdS9pbnRlcmZhY2VzL2Rpc3QvcmVjZWl2ZXIuanM/OTQzZCJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQge307XG4vLyMgc291cmNlTWFwcGluZ1VSTD1yZWNlaXZlci5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/discovery/node_modules/@waku/interfaces/dist/receiver.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/discovery/node_modules/@waku/interfaces/dist/relay.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@waku/discovery/node_modules/@waku/interfaces/dist/relay.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n //# sourceMappingURL=relay.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdha3UvZGlzY292ZXJ5L25vZGVfbW9kdWxlcy9Ad2FrdS9pbnRlcmZhY2VzL2Rpc3QvcmVsYXkuanMiLCJtYXBwaW5ncyI6IjtBQUFVLENBQ1YsaUNBQWlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZmx1c2gtbm90ZXMvLi9ub2RlX21vZHVsZXMvQHdha3UvZGlzY292ZXJ5L25vZGVfbW9kdWxlcy9Ad2FrdS9pbnRlcmZhY2VzL2Rpc3QvcmVsYXkuanM/ZTdiOCJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQge307XG4vLyMgc291cmNlTWFwcGluZ1VSTD1yZWxheS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/discovery/node_modules/@waku/interfaces/dist/relay.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/discovery/node_modules/@waku/interfaces/dist/sender.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@waku/discovery/node_modules/@waku/interfaces/dist/sender.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n //# sourceMappingURL=sender.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdha3UvZGlzY292ZXJ5L25vZGVfbW9kdWxlcy9Ad2FrdS9pbnRlcmZhY2VzL2Rpc3Qvc2VuZGVyLmpzIiwibWFwcGluZ3MiOiI7QUFBVSxDQUNWLGtDQUFrQyIsInNvdXJjZXMiOlsid2VicGFjazovL2ZsdXNoLW5vdGVzLy4vbm9kZV9tb2R1bGVzL0B3YWt1L2Rpc2NvdmVyeS9ub2RlX21vZHVsZXMvQHdha3UvaW50ZXJmYWNlcy9kaXN0L3NlbmRlci5qcz81ODIzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCB7fTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXNlbmRlci5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/discovery/node_modules/@waku/interfaces/dist/sender.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/discovery/node_modules/@waku/interfaces/dist/store.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@waku/discovery/node_modules/@waku/interfaces/dist/store.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PageDirection: () => (/* binding */ PageDirection)\n/* harmony export */ });\nvar PageDirection;\n(function(PageDirection) {\n    PageDirection[\"BACKWARD\"] = \"backward\";\n    PageDirection[\"FORWARD\"] = \"forward\";\n})(PageDirection || (PageDirection = {})); //# sourceMappingURL=store.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdha3UvZGlzY292ZXJ5L25vZGVfbW9kdWxlcy9Ad2FrdS9pbnRlcmZhY2VzL2Rpc3Qvc3RvcmUuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFPLElBQUlBLGNBQWM7QUFDeEIsVUFBVUEsYUFBYTtJQUNwQkEsYUFBYSxDQUFDLFdBQVcsR0FBRztJQUM1QkEsYUFBYSxDQUFDLFVBQVUsR0FBRztBQUMvQixHQUFHQSxpQkFBa0JBLENBQUFBLGdCQUFnQixDQUFDLEtBQ3RDLGlDQUFpQyIsInNvdXJjZXMiOlsid2VicGFjazovL2ZsdXNoLW5vdGVzLy4vbm9kZV9tb2R1bGVzL0B3YWt1L2Rpc2NvdmVyeS9ub2RlX21vZHVsZXMvQHdha3UvaW50ZXJmYWNlcy9kaXN0L3N0b3JlLmpzPzlmN2IiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHZhciBQYWdlRGlyZWN0aW9uO1xuKGZ1bmN0aW9uIChQYWdlRGlyZWN0aW9uKSB7XG4gICAgUGFnZURpcmVjdGlvbltcIkJBQ0tXQVJEXCJdID0gXCJiYWNrd2FyZFwiO1xuICAgIFBhZ2VEaXJlY3Rpb25bXCJGT1JXQVJEXCJdID0gXCJmb3J3YXJkXCI7XG59KShQYWdlRGlyZWN0aW9uIHx8IChQYWdlRGlyZWN0aW9uID0ge30pKTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXN0b3JlLmpzLm1hcCJdLCJuYW1lcyI6WyJQYWdlRGlyZWN0aW9uIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/discovery/node_modules/@waku/interfaces/dist/store.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/discovery/node_modules/@waku/interfaces/dist/waku.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@waku/discovery/node_modules/@waku/interfaces/dist/waku.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n //# sourceMappingURL=waku.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdha3UvZGlzY292ZXJ5L25vZGVfbW9kdWxlcy9Ad2FrdS9pbnRlcmZhY2VzL2Rpc3Qvd2FrdS5qcyIsIm1hcHBpbmdzIjoiO0FBQVUsQ0FDVixnQ0FBZ0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mbHVzaC1ub3Rlcy8uL25vZGVfbW9kdWxlcy9Ad2FrdS9kaXNjb3Zlcnkvbm9kZV9tb2R1bGVzL0B3YWt1L2ludGVyZmFjZXMvZGlzdC93YWt1LmpzP2ZlZTciXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHt9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9d2FrdS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/discovery/node_modules/@waku/interfaces/dist/waku.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/discovery/node_modules/@waku/proto/dist/generated/filter.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@waku/discovery/node_modules/@waku/proto/dist/generated/filter.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   FilterRequest: () => (/* binding */ FilterRequest),\n/* harmony export */   FilterRpc: () => (/* binding */ FilterRpc),\n/* harmony export */   MessagePush: () => (/* binding */ MessagePush),\n/* harmony export */   RateLimitProof: () => (/* binding */ RateLimitProof),\n/* harmony export */   WakuMessage: () => (/* binding */ WakuMessage)\n/* harmony export */ });\n/* harmony import */ var protons_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! protons-runtime */ \"(ssr)/./node_modules/protons-runtime/dist/src/index.js\");\n/* harmony import */ var uint8arrays_alloc__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! uint8arrays/alloc */ \"(ssr)/./node_modules/uint8arrays/dist/src/alloc.node.js\");\n/* eslint-disable import/export */ /* eslint-disable complexity */ /* eslint-disable @typescript-eslint/no-namespace */ /* eslint-disable @typescript-eslint/no-unnecessary-boolean-literal-compare */ /* eslint-disable @typescript-eslint/no-empty-interface */ \n\nvar FilterRequest;\n(function(FilterRequest) {\n    let ContentFilter;\n    (function(ContentFilter) {\n        let _codec;\n        ContentFilter.codec = ()=>{\n            if (_codec == null) {\n                _codec = (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.message)((obj, w, opts = {})=>{\n                    if (opts.lengthDelimited !== false) {\n                        w.fork();\n                    }\n                    if (obj.contentTopic != null && obj.contentTopic !== \"\") {\n                        w.uint32(10);\n                        w.string(obj.contentTopic);\n                    }\n                    if (opts.lengthDelimited !== false) {\n                        w.ldelim();\n                    }\n                }, (reader, length, opts = {})=>{\n                    const obj = {\n                        contentTopic: \"\"\n                    };\n                    const end = length == null ? reader.len : reader.pos + length;\n                    while(reader.pos < end){\n                        const tag = reader.uint32();\n                        switch(tag >>> 3){\n                            case 1:\n                                {\n                                    obj.contentTopic = reader.string();\n                                    break;\n                                }\n                            default:\n                                {\n                                    reader.skipType(tag & 7);\n                                    break;\n                                }\n                        }\n                    }\n                    return obj;\n                });\n            }\n            return _codec;\n        };\n        ContentFilter.encode = (obj)=>{\n            return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.encodeMessage)(obj, ContentFilter.codec());\n        };\n        ContentFilter.decode = (buf, opts)=>{\n            return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.decodeMessage)(buf, ContentFilter.codec(), opts);\n        };\n    })(ContentFilter = FilterRequest.ContentFilter || (FilterRequest.ContentFilter = {}));\n    let _codec;\n    FilterRequest.codec = ()=>{\n        if (_codec == null) {\n            _codec = (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.message)((obj, w, opts = {})=>{\n                if (opts.lengthDelimited !== false) {\n                    w.fork();\n                }\n                if (obj.subscribe != null && obj.subscribe !== false) {\n                    w.uint32(8);\n                    w.bool(obj.subscribe);\n                }\n                if (obj.topic != null && obj.topic !== \"\") {\n                    w.uint32(18);\n                    w.string(obj.topic);\n                }\n                if (obj.contentFilters != null) {\n                    for (const value of obj.contentFilters){\n                        w.uint32(26);\n                        FilterRequest.ContentFilter.codec().encode(value, w);\n                    }\n                }\n                if (opts.lengthDelimited !== false) {\n                    w.ldelim();\n                }\n            }, (reader, length, opts = {})=>{\n                const obj = {\n                    subscribe: false,\n                    topic: \"\",\n                    contentFilters: []\n                };\n                const end = length == null ? reader.len : reader.pos + length;\n                while(reader.pos < end){\n                    const tag = reader.uint32();\n                    switch(tag >>> 3){\n                        case 1:\n                            {\n                                obj.subscribe = reader.bool();\n                                break;\n                            }\n                        case 2:\n                            {\n                                obj.topic = reader.string();\n                                break;\n                            }\n                        case 3:\n                            {\n                                if (opts.limits?.contentFilters != null && obj.contentFilters.length === opts.limits.contentFilters) {\n                                    throw new protons_runtime__WEBPACK_IMPORTED_MODULE_0__.CodeError('decode error - map field \"contentFilters\" had too many elements', \"ERR_MAX_LENGTH\");\n                                }\n                                obj.contentFilters.push(FilterRequest.ContentFilter.codec().decode(reader, reader.uint32(), {\n                                    limits: opts.limits?.contentFilters$\n                                }));\n                                break;\n                            }\n                        default:\n                            {\n                                reader.skipType(tag & 7);\n                                break;\n                            }\n                    }\n                }\n                return obj;\n            });\n        }\n        return _codec;\n    };\n    FilterRequest.encode = (obj)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.encodeMessage)(obj, FilterRequest.codec());\n    };\n    FilterRequest.decode = (buf, opts)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.decodeMessage)(buf, FilterRequest.codec(), opts);\n    };\n})(FilterRequest || (FilterRequest = {}));\nvar MessagePush;\n(function(MessagePush) {\n    let _codec;\n    MessagePush.codec = ()=>{\n        if (_codec == null) {\n            _codec = (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.message)((obj, w, opts = {})=>{\n                if (opts.lengthDelimited !== false) {\n                    w.fork();\n                }\n                if (obj.messages != null) {\n                    for (const value of obj.messages){\n                        w.uint32(10);\n                        WakuMessage.codec().encode(value, w);\n                    }\n                }\n                if (opts.lengthDelimited !== false) {\n                    w.ldelim();\n                }\n            }, (reader, length, opts = {})=>{\n                const obj = {\n                    messages: []\n                };\n                const end = length == null ? reader.len : reader.pos + length;\n                while(reader.pos < end){\n                    const tag = reader.uint32();\n                    switch(tag >>> 3){\n                        case 1:\n                            {\n                                if (opts.limits?.messages != null && obj.messages.length === opts.limits.messages) {\n                                    throw new protons_runtime__WEBPACK_IMPORTED_MODULE_0__.CodeError('decode error - map field \"messages\" had too many elements', \"ERR_MAX_LENGTH\");\n                                }\n                                obj.messages.push(WakuMessage.codec().decode(reader, reader.uint32(), {\n                                    limits: opts.limits?.messages$\n                                }));\n                                break;\n                            }\n                        default:\n                            {\n                                reader.skipType(tag & 7);\n                                break;\n                            }\n                    }\n                }\n                return obj;\n            });\n        }\n        return _codec;\n    };\n    MessagePush.encode = (obj)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.encodeMessage)(obj, MessagePush.codec());\n    };\n    MessagePush.decode = (buf, opts)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.decodeMessage)(buf, MessagePush.codec(), opts);\n    };\n})(MessagePush || (MessagePush = {}));\nvar FilterRpc;\n(function(FilterRpc) {\n    let _codec;\n    FilterRpc.codec = ()=>{\n        if (_codec == null) {\n            _codec = (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.message)((obj, w, opts = {})=>{\n                if (opts.lengthDelimited !== false) {\n                    w.fork();\n                }\n                if (obj.requestId != null && obj.requestId !== \"\") {\n                    w.uint32(10);\n                    w.string(obj.requestId);\n                }\n                if (obj.request != null) {\n                    w.uint32(18);\n                    FilterRequest.codec().encode(obj.request, w);\n                }\n                if (obj.push != null) {\n                    w.uint32(26);\n                    MessagePush.codec().encode(obj.push, w);\n                }\n                if (opts.lengthDelimited !== false) {\n                    w.ldelim();\n                }\n            }, (reader, length, opts = {})=>{\n                const obj = {\n                    requestId: \"\"\n                };\n                const end = length == null ? reader.len : reader.pos + length;\n                while(reader.pos < end){\n                    const tag = reader.uint32();\n                    switch(tag >>> 3){\n                        case 1:\n                            {\n                                obj.requestId = reader.string();\n                                break;\n                            }\n                        case 2:\n                            {\n                                obj.request = FilterRequest.codec().decode(reader, reader.uint32(), {\n                                    limits: opts.limits?.request\n                                });\n                                break;\n                            }\n                        case 3:\n                            {\n                                obj.push = MessagePush.codec().decode(reader, reader.uint32(), {\n                                    limits: opts.limits?.push\n                                });\n                                break;\n                            }\n                        default:\n                            {\n                                reader.skipType(tag & 7);\n                                break;\n                            }\n                    }\n                }\n                return obj;\n            });\n        }\n        return _codec;\n    };\n    FilterRpc.encode = (obj)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.encodeMessage)(obj, FilterRpc.codec());\n    };\n    FilterRpc.decode = (buf, opts)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.decodeMessage)(buf, FilterRpc.codec(), opts);\n    };\n})(FilterRpc || (FilterRpc = {}));\nvar RateLimitProof;\n(function(RateLimitProof) {\n    let _codec;\n    RateLimitProof.codec = ()=>{\n        if (_codec == null) {\n            _codec = (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.message)((obj, w, opts = {})=>{\n                if (opts.lengthDelimited !== false) {\n                    w.fork();\n                }\n                if (obj.proof != null && obj.proof.byteLength > 0) {\n                    w.uint32(10);\n                    w.bytes(obj.proof);\n                }\n                if (obj.merkleRoot != null && obj.merkleRoot.byteLength > 0) {\n                    w.uint32(18);\n                    w.bytes(obj.merkleRoot);\n                }\n                if (obj.epoch != null && obj.epoch.byteLength > 0) {\n                    w.uint32(26);\n                    w.bytes(obj.epoch);\n                }\n                if (obj.shareX != null && obj.shareX.byteLength > 0) {\n                    w.uint32(34);\n                    w.bytes(obj.shareX);\n                }\n                if (obj.shareY != null && obj.shareY.byteLength > 0) {\n                    w.uint32(42);\n                    w.bytes(obj.shareY);\n                }\n                if (obj.nullifier != null && obj.nullifier.byteLength > 0) {\n                    w.uint32(50);\n                    w.bytes(obj.nullifier);\n                }\n                if (obj.rlnIdentifier != null && obj.rlnIdentifier.byteLength > 0) {\n                    w.uint32(58);\n                    w.bytes(obj.rlnIdentifier);\n                }\n                if (opts.lengthDelimited !== false) {\n                    w.ldelim();\n                }\n            }, (reader, length, opts = {})=>{\n                const obj = {\n                    proof: (0,uint8arrays_alloc__WEBPACK_IMPORTED_MODULE_1__.alloc)(0),\n                    merkleRoot: (0,uint8arrays_alloc__WEBPACK_IMPORTED_MODULE_1__.alloc)(0),\n                    epoch: (0,uint8arrays_alloc__WEBPACK_IMPORTED_MODULE_1__.alloc)(0),\n                    shareX: (0,uint8arrays_alloc__WEBPACK_IMPORTED_MODULE_1__.alloc)(0),\n                    shareY: (0,uint8arrays_alloc__WEBPACK_IMPORTED_MODULE_1__.alloc)(0),\n                    nullifier: (0,uint8arrays_alloc__WEBPACK_IMPORTED_MODULE_1__.alloc)(0),\n                    rlnIdentifier: (0,uint8arrays_alloc__WEBPACK_IMPORTED_MODULE_1__.alloc)(0)\n                };\n                const end = length == null ? reader.len : reader.pos + length;\n                while(reader.pos < end){\n                    const tag = reader.uint32();\n                    switch(tag >>> 3){\n                        case 1:\n                            {\n                                obj.proof = reader.bytes();\n                                break;\n                            }\n                        case 2:\n                            {\n                                obj.merkleRoot = reader.bytes();\n                                break;\n                            }\n                        case 3:\n                            {\n                                obj.epoch = reader.bytes();\n                                break;\n                            }\n                        case 4:\n                            {\n                                obj.shareX = reader.bytes();\n                                break;\n                            }\n                        case 5:\n                            {\n                                obj.shareY = reader.bytes();\n                                break;\n                            }\n                        case 6:\n                            {\n                                obj.nullifier = reader.bytes();\n                                break;\n                            }\n                        case 7:\n                            {\n                                obj.rlnIdentifier = reader.bytes();\n                                break;\n                            }\n                        default:\n                            {\n                                reader.skipType(tag & 7);\n                                break;\n                            }\n                    }\n                }\n                return obj;\n            });\n        }\n        return _codec;\n    };\n    RateLimitProof.encode = (obj)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.encodeMessage)(obj, RateLimitProof.codec());\n    };\n    RateLimitProof.decode = (buf, opts)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.decodeMessage)(buf, RateLimitProof.codec(), opts);\n    };\n})(RateLimitProof || (RateLimitProof = {}));\nvar WakuMessage;\n(function(WakuMessage) {\n    let _codec;\n    WakuMessage.codec = ()=>{\n        if (_codec == null) {\n            _codec = (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.message)((obj, w, opts = {})=>{\n                if (opts.lengthDelimited !== false) {\n                    w.fork();\n                }\n                if (obj.payload != null && obj.payload.byteLength > 0) {\n                    w.uint32(10);\n                    w.bytes(obj.payload);\n                }\n                if (obj.contentTopic != null && obj.contentTopic !== \"\") {\n                    w.uint32(18);\n                    w.string(obj.contentTopic);\n                }\n                if (obj.version != null) {\n                    w.uint32(24);\n                    w.uint32(obj.version);\n                }\n                if (obj.timestamp != null) {\n                    w.uint32(80);\n                    w.sint64(obj.timestamp);\n                }\n                if (obj.meta != null) {\n                    w.uint32(90);\n                    w.bytes(obj.meta);\n                }\n                if (obj.rateLimitProof != null) {\n                    w.uint32(170);\n                    RateLimitProof.codec().encode(obj.rateLimitProof, w);\n                }\n                if (obj.ephemeral != null) {\n                    w.uint32(248);\n                    w.bool(obj.ephemeral);\n                }\n                if (opts.lengthDelimited !== false) {\n                    w.ldelim();\n                }\n            }, (reader, length, opts = {})=>{\n                const obj = {\n                    payload: (0,uint8arrays_alloc__WEBPACK_IMPORTED_MODULE_1__.alloc)(0),\n                    contentTopic: \"\"\n                };\n                const end = length == null ? reader.len : reader.pos + length;\n                while(reader.pos < end){\n                    const tag = reader.uint32();\n                    switch(tag >>> 3){\n                        case 1:\n                            {\n                                obj.payload = reader.bytes();\n                                break;\n                            }\n                        case 2:\n                            {\n                                obj.contentTopic = reader.string();\n                                break;\n                            }\n                        case 3:\n                            {\n                                obj.version = reader.uint32();\n                                break;\n                            }\n                        case 10:\n                            {\n                                obj.timestamp = reader.sint64();\n                                break;\n                            }\n                        case 11:\n                            {\n                                obj.meta = reader.bytes();\n                                break;\n                            }\n                        case 21:\n                            {\n                                obj.rateLimitProof = RateLimitProof.codec().decode(reader, reader.uint32(), {\n                                    limits: opts.limits?.rateLimitProof\n                                });\n                                break;\n                            }\n                        case 31:\n                            {\n                                obj.ephemeral = reader.bool();\n                                break;\n                            }\n                        default:\n                            {\n                                reader.skipType(tag & 7);\n                                break;\n                            }\n                    }\n                }\n                return obj;\n            });\n        }\n        return _codec;\n    };\n    WakuMessage.encode = (obj)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.encodeMessage)(obj, WakuMessage.codec());\n    };\n    WakuMessage.decode = (buf, opts)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.decodeMessage)(buf, WakuMessage.codec(), opts);\n    };\n})(WakuMessage || (WakuMessage = {})); //# sourceMappingURL=filter.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/discovery/node_modules/@waku/proto/dist/generated/filter.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/discovery/node_modules/@waku/proto/dist/generated/filter_v2.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@waku/discovery/node_modules/@waku/proto/dist/generated/filter_v2.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   FilterSubscribeRequest: () => (/* binding */ FilterSubscribeRequest),\n/* harmony export */   FilterSubscribeResponse: () => (/* binding */ FilterSubscribeResponse),\n/* harmony export */   MessagePush: () => (/* binding */ MessagePush),\n/* harmony export */   RateLimitProof: () => (/* binding */ RateLimitProof),\n/* harmony export */   WakuMessage: () => (/* binding */ WakuMessage)\n/* harmony export */ });\n/* harmony import */ var protons_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! protons-runtime */ \"(ssr)/./node_modules/protons-runtime/dist/src/index.js\");\n/* harmony import */ var uint8arrays_alloc__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! uint8arrays/alloc */ \"(ssr)/./node_modules/uint8arrays/dist/src/alloc.node.js\");\n/* eslint-disable import/export */ /* eslint-disable complexity */ /* eslint-disable @typescript-eslint/no-namespace */ /* eslint-disable @typescript-eslint/no-unnecessary-boolean-literal-compare */ /* eslint-disable @typescript-eslint/no-empty-interface */ \n\nvar FilterSubscribeRequest;\n(function(FilterSubscribeRequest) {\n    let FilterSubscribeType;\n    (function(FilterSubscribeType) {\n        FilterSubscribeType[\"SUBSCRIBER_PING\"] = \"SUBSCRIBER_PING\";\n        FilterSubscribeType[\"SUBSCRIBE\"] = \"SUBSCRIBE\";\n        FilterSubscribeType[\"UNSUBSCRIBE\"] = \"UNSUBSCRIBE\";\n        FilterSubscribeType[\"UNSUBSCRIBE_ALL\"] = \"UNSUBSCRIBE_ALL\";\n    })(FilterSubscribeType = FilterSubscribeRequest.FilterSubscribeType || (FilterSubscribeRequest.FilterSubscribeType = {}));\n    let __FilterSubscribeTypeValues;\n    (function(__FilterSubscribeTypeValues) {\n        __FilterSubscribeTypeValues[__FilterSubscribeTypeValues[\"SUBSCRIBER_PING\"] = 0] = \"SUBSCRIBER_PING\";\n        __FilterSubscribeTypeValues[__FilterSubscribeTypeValues[\"SUBSCRIBE\"] = 1] = \"SUBSCRIBE\";\n        __FilterSubscribeTypeValues[__FilterSubscribeTypeValues[\"UNSUBSCRIBE\"] = 2] = \"UNSUBSCRIBE\";\n        __FilterSubscribeTypeValues[__FilterSubscribeTypeValues[\"UNSUBSCRIBE_ALL\"] = 3] = \"UNSUBSCRIBE_ALL\";\n    })(__FilterSubscribeTypeValues || (__FilterSubscribeTypeValues = {}));\n    (function(FilterSubscribeType) {\n        FilterSubscribeType.codec = ()=>{\n            return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.enumeration)(__FilterSubscribeTypeValues);\n        };\n    })(FilterSubscribeType = FilterSubscribeRequest.FilterSubscribeType || (FilterSubscribeRequest.FilterSubscribeType = {}));\n    let _codec;\n    FilterSubscribeRequest.codec = ()=>{\n        if (_codec == null) {\n            _codec = (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.message)((obj, w, opts = {})=>{\n                if (opts.lengthDelimited !== false) {\n                    w.fork();\n                }\n                if (obj.requestId != null && obj.requestId !== \"\") {\n                    w.uint32(10);\n                    w.string(obj.requestId);\n                }\n                if (obj.filterSubscribeType != null && __FilterSubscribeTypeValues[obj.filterSubscribeType] !== 0) {\n                    w.uint32(16);\n                    FilterSubscribeRequest.FilterSubscribeType.codec().encode(obj.filterSubscribeType, w);\n                }\n                if (obj.pubsubTopic != null) {\n                    w.uint32(82);\n                    w.string(obj.pubsubTopic);\n                }\n                if (obj.contentTopics != null) {\n                    for (const value of obj.contentTopics){\n                        w.uint32(90);\n                        w.string(value);\n                    }\n                }\n                if (opts.lengthDelimited !== false) {\n                    w.ldelim();\n                }\n            }, (reader, length, opts = {})=>{\n                const obj = {\n                    requestId: \"\",\n                    filterSubscribeType: FilterSubscribeType.SUBSCRIBER_PING,\n                    contentTopics: []\n                };\n                const end = length == null ? reader.len : reader.pos + length;\n                while(reader.pos < end){\n                    const tag = reader.uint32();\n                    switch(tag >>> 3){\n                        case 1:\n                            {\n                                obj.requestId = reader.string();\n                                break;\n                            }\n                        case 2:\n                            {\n                                obj.filterSubscribeType = FilterSubscribeRequest.FilterSubscribeType.codec().decode(reader);\n                                break;\n                            }\n                        case 10:\n                            {\n                                obj.pubsubTopic = reader.string();\n                                break;\n                            }\n                        case 11:\n                            {\n                                if (opts.limits?.contentTopics != null && obj.contentTopics.length === opts.limits.contentTopics) {\n                                    throw new protons_runtime__WEBPACK_IMPORTED_MODULE_0__.CodeError('decode error - map field \"contentTopics\" had too many elements', \"ERR_MAX_LENGTH\");\n                                }\n                                obj.contentTopics.push(reader.string());\n                                break;\n                            }\n                        default:\n                            {\n                                reader.skipType(tag & 7);\n                                break;\n                            }\n                    }\n                }\n                return obj;\n            });\n        }\n        return _codec;\n    };\n    FilterSubscribeRequest.encode = (obj)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.encodeMessage)(obj, FilterSubscribeRequest.codec());\n    };\n    FilterSubscribeRequest.decode = (buf, opts)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.decodeMessage)(buf, FilterSubscribeRequest.codec(), opts);\n    };\n})(FilterSubscribeRequest || (FilterSubscribeRequest = {}));\nvar FilterSubscribeResponse;\n(function(FilterSubscribeResponse) {\n    let _codec;\n    FilterSubscribeResponse.codec = ()=>{\n        if (_codec == null) {\n            _codec = (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.message)((obj, w, opts = {})=>{\n                if (opts.lengthDelimited !== false) {\n                    w.fork();\n                }\n                if (obj.requestId != null && obj.requestId !== \"\") {\n                    w.uint32(10);\n                    w.string(obj.requestId);\n                }\n                if (obj.statusCode != null && obj.statusCode !== 0) {\n                    w.uint32(80);\n                    w.uint32(obj.statusCode);\n                }\n                if (obj.statusDesc != null) {\n                    w.uint32(90);\n                    w.string(obj.statusDesc);\n                }\n                if (opts.lengthDelimited !== false) {\n                    w.ldelim();\n                }\n            }, (reader, length, opts = {})=>{\n                const obj = {\n                    requestId: \"\",\n                    statusCode: 0\n                };\n                const end = length == null ? reader.len : reader.pos + length;\n                while(reader.pos < end){\n                    const tag = reader.uint32();\n                    switch(tag >>> 3){\n                        case 1:\n                            {\n                                obj.requestId = reader.string();\n                                break;\n                            }\n                        case 10:\n                            {\n                                obj.statusCode = reader.uint32();\n                                break;\n                            }\n                        case 11:\n                            {\n                                obj.statusDesc = reader.string();\n                                break;\n                            }\n                        default:\n                            {\n                                reader.skipType(tag & 7);\n                                break;\n                            }\n                    }\n                }\n                return obj;\n            });\n        }\n        return _codec;\n    };\n    FilterSubscribeResponse.encode = (obj)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.encodeMessage)(obj, FilterSubscribeResponse.codec());\n    };\n    FilterSubscribeResponse.decode = (buf, opts)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.decodeMessage)(buf, FilterSubscribeResponse.codec(), opts);\n    };\n})(FilterSubscribeResponse || (FilterSubscribeResponse = {}));\nvar MessagePush;\n(function(MessagePush) {\n    let _codec;\n    MessagePush.codec = ()=>{\n        if (_codec == null) {\n            _codec = (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.message)((obj, w, opts = {})=>{\n                if (opts.lengthDelimited !== false) {\n                    w.fork();\n                }\n                if (obj.wakuMessage != null) {\n                    w.uint32(10);\n                    WakuMessage.codec().encode(obj.wakuMessage, w);\n                }\n                if (obj.pubsubTopic != null) {\n                    w.uint32(18);\n                    w.string(obj.pubsubTopic);\n                }\n                if (opts.lengthDelimited !== false) {\n                    w.ldelim();\n                }\n            }, (reader, length, opts = {})=>{\n                const obj = {};\n                const end = length == null ? reader.len : reader.pos + length;\n                while(reader.pos < end){\n                    const tag = reader.uint32();\n                    switch(tag >>> 3){\n                        case 1:\n                            {\n                                obj.wakuMessage = WakuMessage.codec().decode(reader, reader.uint32(), {\n                                    limits: opts.limits?.wakuMessage\n                                });\n                                break;\n                            }\n                        case 2:\n                            {\n                                obj.pubsubTopic = reader.string();\n                                break;\n                            }\n                        default:\n                            {\n                                reader.skipType(tag & 7);\n                                break;\n                            }\n                    }\n                }\n                return obj;\n            });\n        }\n        return _codec;\n    };\n    MessagePush.encode = (obj)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.encodeMessage)(obj, MessagePush.codec());\n    };\n    MessagePush.decode = (buf, opts)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.decodeMessage)(buf, MessagePush.codec(), opts);\n    };\n})(MessagePush || (MessagePush = {}));\nvar RateLimitProof;\n(function(RateLimitProof) {\n    let _codec;\n    RateLimitProof.codec = ()=>{\n        if (_codec == null) {\n            _codec = (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.message)((obj, w, opts = {})=>{\n                if (opts.lengthDelimited !== false) {\n                    w.fork();\n                }\n                if (obj.proof != null && obj.proof.byteLength > 0) {\n                    w.uint32(10);\n                    w.bytes(obj.proof);\n                }\n                if (obj.merkleRoot != null && obj.merkleRoot.byteLength > 0) {\n                    w.uint32(18);\n                    w.bytes(obj.merkleRoot);\n                }\n                if (obj.epoch != null && obj.epoch.byteLength > 0) {\n                    w.uint32(26);\n                    w.bytes(obj.epoch);\n                }\n                if (obj.shareX != null && obj.shareX.byteLength > 0) {\n                    w.uint32(34);\n                    w.bytes(obj.shareX);\n                }\n                if (obj.shareY != null && obj.shareY.byteLength > 0) {\n                    w.uint32(42);\n                    w.bytes(obj.shareY);\n                }\n                if (obj.nullifier != null && obj.nullifier.byteLength > 0) {\n                    w.uint32(50);\n                    w.bytes(obj.nullifier);\n                }\n                if (obj.rlnIdentifier != null && obj.rlnIdentifier.byteLength > 0) {\n                    w.uint32(58);\n                    w.bytes(obj.rlnIdentifier);\n                }\n                if (opts.lengthDelimited !== false) {\n                    w.ldelim();\n                }\n            }, (reader, length, opts = {})=>{\n                const obj = {\n                    proof: (0,uint8arrays_alloc__WEBPACK_IMPORTED_MODULE_1__.alloc)(0),\n                    merkleRoot: (0,uint8arrays_alloc__WEBPACK_IMPORTED_MODULE_1__.alloc)(0),\n                    epoch: (0,uint8arrays_alloc__WEBPACK_IMPORTED_MODULE_1__.alloc)(0),\n                    shareX: (0,uint8arrays_alloc__WEBPACK_IMPORTED_MODULE_1__.alloc)(0),\n                    shareY: (0,uint8arrays_alloc__WEBPACK_IMPORTED_MODULE_1__.alloc)(0),\n                    nullifier: (0,uint8arrays_alloc__WEBPACK_IMPORTED_MODULE_1__.alloc)(0),\n                    rlnIdentifier: (0,uint8arrays_alloc__WEBPACK_IMPORTED_MODULE_1__.alloc)(0)\n                };\n                const end = length == null ? reader.len : reader.pos + length;\n                while(reader.pos < end){\n                    const tag = reader.uint32();\n                    switch(tag >>> 3){\n                        case 1:\n                            {\n                                obj.proof = reader.bytes();\n                                break;\n                            }\n                        case 2:\n                            {\n                                obj.merkleRoot = reader.bytes();\n                                break;\n                            }\n                        case 3:\n                            {\n                                obj.epoch = reader.bytes();\n                                break;\n                            }\n                        case 4:\n                            {\n                                obj.shareX = reader.bytes();\n                                break;\n                            }\n                        case 5:\n                            {\n                                obj.shareY = reader.bytes();\n                                break;\n                            }\n                        case 6:\n                            {\n                                obj.nullifier = reader.bytes();\n                                break;\n                            }\n                        case 7:\n                            {\n                                obj.rlnIdentifier = reader.bytes();\n                                break;\n                            }\n                        default:\n                            {\n                                reader.skipType(tag & 7);\n                                break;\n                            }\n                    }\n                }\n                return obj;\n            });\n        }\n        return _codec;\n    };\n    RateLimitProof.encode = (obj)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.encodeMessage)(obj, RateLimitProof.codec());\n    };\n    RateLimitProof.decode = (buf, opts)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.decodeMessage)(buf, RateLimitProof.codec(), opts);\n    };\n})(RateLimitProof || (RateLimitProof = {}));\nvar WakuMessage;\n(function(WakuMessage) {\n    let _codec;\n    WakuMessage.codec = ()=>{\n        if (_codec == null) {\n            _codec = (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.message)((obj, w, opts = {})=>{\n                if (opts.lengthDelimited !== false) {\n                    w.fork();\n                }\n                if (obj.payload != null && obj.payload.byteLength > 0) {\n                    w.uint32(10);\n                    w.bytes(obj.payload);\n                }\n                if (obj.contentTopic != null && obj.contentTopic !== \"\") {\n                    w.uint32(18);\n                    w.string(obj.contentTopic);\n                }\n                if (obj.version != null) {\n                    w.uint32(24);\n                    w.uint32(obj.version);\n                }\n                if (obj.timestamp != null) {\n                    w.uint32(80);\n                    w.sint64(obj.timestamp);\n                }\n                if (obj.meta != null) {\n                    w.uint32(90);\n                    w.bytes(obj.meta);\n                }\n                if (obj.rateLimitProof != null) {\n                    w.uint32(170);\n                    RateLimitProof.codec().encode(obj.rateLimitProof, w);\n                }\n                if (obj.ephemeral != null) {\n                    w.uint32(248);\n                    w.bool(obj.ephemeral);\n                }\n                if (opts.lengthDelimited !== false) {\n                    w.ldelim();\n                }\n            }, (reader, length, opts = {})=>{\n                const obj = {\n                    payload: (0,uint8arrays_alloc__WEBPACK_IMPORTED_MODULE_1__.alloc)(0),\n                    contentTopic: \"\"\n                };\n                const end = length == null ? reader.len : reader.pos + length;\n                while(reader.pos < end){\n                    const tag = reader.uint32();\n                    switch(tag >>> 3){\n                        case 1:\n                            {\n                                obj.payload = reader.bytes();\n                                break;\n                            }\n                        case 2:\n                            {\n                                obj.contentTopic = reader.string();\n                                break;\n                            }\n                        case 3:\n                            {\n                                obj.version = reader.uint32();\n                                break;\n                            }\n                        case 10:\n                            {\n                                obj.timestamp = reader.sint64();\n                                break;\n                            }\n                        case 11:\n                            {\n                                obj.meta = reader.bytes();\n                                break;\n                            }\n                        case 21:\n                            {\n                                obj.rateLimitProof = RateLimitProof.codec().decode(reader, reader.uint32(), {\n                                    limits: opts.limits?.rateLimitProof\n                                });\n                                break;\n                            }\n                        case 31:\n                            {\n                                obj.ephemeral = reader.bool();\n                                break;\n                            }\n                        default:\n                            {\n                                reader.skipType(tag & 7);\n                                break;\n                            }\n                    }\n                }\n                return obj;\n            });\n        }\n        return _codec;\n    };\n    WakuMessage.encode = (obj)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.encodeMessage)(obj, WakuMessage.codec());\n    };\n    WakuMessage.decode = (buf, opts)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.decodeMessage)(buf, WakuMessage.codec(), opts);\n    };\n})(WakuMessage || (WakuMessage = {})); //# sourceMappingURL=filter_v2.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/discovery/node_modules/@waku/proto/dist/generated/filter_v2.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/discovery/node_modules/@waku/proto/dist/generated/light_push.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@waku/discovery/node_modules/@waku/proto/dist/generated/light_push.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PushRequest: () => (/* binding */ PushRequest),\n/* harmony export */   PushResponse: () => (/* binding */ PushResponse),\n/* harmony export */   PushRpc: () => (/* binding */ PushRpc),\n/* harmony export */   RateLimitProof: () => (/* binding */ RateLimitProof),\n/* harmony export */   WakuMessage: () => (/* binding */ WakuMessage)\n/* harmony export */ });\n/* harmony import */ var protons_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! protons-runtime */ \"(ssr)/./node_modules/protons-runtime/dist/src/index.js\");\n/* harmony import */ var uint8arrays_alloc__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! uint8arrays/alloc */ \"(ssr)/./node_modules/uint8arrays/dist/src/alloc.node.js\");\n/* eslint-disable import/export */ /* eslint-disable complexity */ /* eslint-disable @typescript-eslint/no-namespace */ /* eslint-disable @typescript-eslint/no-unnecessary-boolean-literal-compare */ /* eslint-disable @typescript-eslint/no-empty-interface */ \n\nvar PushRequest;\n(function(PushRequest) {\n    let _codec;\n    PushRequest.codec = ()=>{\n        if (_codec == null) {\n            _codec = (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.message)((obj, w, opts = {})=>{\n                if (opts.lengthDelimited !== false) {\n                    w.fork();\n                }\n                if (obj.pubsubTopic != null && obj.pubsubTopic !== \"\") {\n                    w.uint32(10);\n                    w.string(obj.pubsubTopic);\n                }\n                if (obj.message != null) {\n                    w.uint32(18);\n                    WakuMessage.codec().encode(obj.message, w);\n                }\n                if (opts.lengthDelimited !== false) {\n                    w.ldelim();\n                }\n            }, (reader, length, opts = {})=>{\n                const obj = {\n                    pubsubTopic: \"\"\n                };\n                const end = length == null ? reader.len : reader.pos + length;\n                while(reader.pos < end){\n                    const tag = reader.uint32();\n                    switch(tag >>> 3){\n                        case 1:\n                            {\n                                obj.pubsubTopic = reader.string();\n                                break;\n                            }\n                        case 2:\n                            {\n                                obj.message = WakuMessage.codec().decode(reader, reader.uint32(), {\n                                    limits: opts.limits?.message\n                                });\n                                break;\n                            }\n                        default:\n                            {\n                                reader.skipType(tag & 7);\n                                break;\n                            }\n                    }\n                }\n                return obj;\n            });\n        }\n        return _codec;\n    };\n    PushRequest.encode = (obj)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.encodeMessage)(obj, PushRequest.codec());\n    };\n    PushRequest.decode = (buf, opts)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.decodeMessage)(buf, PushRequest.codec(), opts);\n    };\n})(PushRequest || (PushRequest = {}));\nvar PushResponse;\n(function(PushResponse) {\n    let _codec;\n    PushResponse.codec = ()=>{\n        if (_codec == null) {\n            _codec = (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.message)((obj, w, opts = {})=>{\n                if (opts.lengthDelimited !== false) {\n                    w.fork();\n                }\n                if (obj.isSuccess != null && obj.isSuccess !== false) {\n                    w.uint32(8);\n                    w.bool(obj.isSuccess);\n                }\n                if (obj.info != null) {\n                    w.uint32(18);\n                    w.string(obj.info);\n                }\n                if (opts.lengthDelimited !== false) {\n                    w.ldelim();\n                }\n            }, (reader, length, opts = {})=>{\n                const obj = {\n                    isSuccess: false\n                };\n                const end = length == null ? reader.len : reader.pos + length;\n                while(reader.pos < end){\n                    const tag = reader.uint32();\n                    switch(tag >>> 3){\n                        case 1:\n                            {\n                                obj.isSuccess = reader.bool();\n                                break;\n                            }\n                        case 2:\n                            {\n                                obj.info = reader.string();\n                                break;\n                            }\n                        default:\n                            {\n                                reader.skipType(tag & 7);\n                                break;\n                            }\n                    }\n                }\n                return obj;\n            });\n        }\n        return _codec;\n    };\n    PushResponse.encode = (obj)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.encodeMessage)(obj, PushResponse.codec());\n    };\n    PushResponse.decode = (buf, opts)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.decodeMessage)(buf, PushResponse.codec(), opts);\n    };\n})(PushResponse || (PushResponse = {}));\nvar PushRpc;\n(function(PushRpc) {\n    let _codec;\n    PushRpc.codec = ()=>{\n        if (_codec == null) {\n            _codec = (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.message)((obj, w, opts = {})=>{\n                if (opts.lengthDelimited !== false) {\n                    w.fork();\n                }\n                if (obj.requestId != null && obj.requestId !== \"\") {\n                    w.uint32(10);\n                    w.string(obj.requestId);\n                }\n                if (obj.request != null) {\n                    w.uint32(18);\n                    PushRequest.codec().encode(obj.request, w);\n                }\n                if (obj.response != null) {\n                    w.uint32(26);\n                    PushResponse.codec().encode(obj.response, w);\n                }\n                if (opts.lengthDelimited !== false) {\n                    w.ldelim();\n                }\n            }, (reader, length, opts = {})=>{\n                const obj = {\n                    requestId: \"\"\n                };\n                const end = length == null ? reader.len : reader.pos + length;\n                while(reader.pos < end){\n                    const tag = reader.uint32();\n                    switch(tag >>> 3){\n                        case 1:\n                            {\n                                obj.requestId = reader.string();\n                                break;\n                            }\n                        case 2:\n                            {\n                                obj.request = PushRequest.codec().decode(reader, reader.uint32(), {\n                                    limits: opts.limits?.request\n                                });\n                                break;\n                            }\n                        case 3:\n                            {\n                                obj.response = PushResponse.codec().decode(reader, reader.uint32(), {\n                                    limits: opts.limits?.response\n                                });\n                                break;\n                            }\n                        default:\n                            {\n                                reader.skipType(tag & 7);\n                                break;\n                            }\n                    }\n                }\n                return obj;\n            });\n        }\n        return _codec;\n    };\n    PushRpc.encode = (obj)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.encodeMessage)(obj, PushRpc.codec());\n    };\n    PushRpc.decode = (buf, opts)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.decodeMessage)(buf, PushRpc.codec(), opts);\n    };\n})(PushRpc || (PushRpc = {}));\nvar RateLimitProof;\n(function(RateLimitProof) {\n    let _codec;\n    RateLimitProof.codec = ()=>{\n        if (_codec == null) {\n            _codec = (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.message)((obj, w, opts = {})=>{\n                if (opts.lengthDelimited !== false) {\n                    w.fork();\n                }\n                if (obj.proof != null && obj.proof.byteLength > 0) {\n                    w.uint32(10);\n                    w.bytes(obj.proof);\n                }\n                if (obj.merkleRoot != null && obj.merkleRoot.byteLength > 0) {\n                    w.uint32(18);\n                    w.bytes(obj.merkleRoot);\n                }\n                if (obj.epoch != null && obj.epoch.byteLength > 0) {\n                    w.uint32(26);\n                    w.bytes(obj.epoch);\n                }\n                if (obj.shareX != null && obj.shareX.byteLength > 0) {\n                    w.uint32(34);\n                    w.bytes(obj.shareX);\n                }\n                if (obj.shareY != null && obj.shareY.byteLength > 0) {\n                    w.uint32(42);\n                    w.bytes(obj.shareY);\n                }\n                if (obj.nullifier != null && obj.nullifier.byteLength > 0) {\n                    w.uint32(50);\n                    w.bytes(obj.nullifier);\n                }\n                if (obj.rlnIdentifier != null && obj.rlnIdentifier.byteLength > 0) {\n                    w.uint32(58);\n                    w.bytes(obj.rlnIdentifier);\n                }\n                if (opts.lengthDelimited !== false) {\n                    w.ldelim();\n                }\n            }, (reader, length, opts = {})=>{\n                const obj = {\n                    proof: (0,uint8arrays_alloc__WEBPACK_IMPORTED_MODULE_1__.alloc)(0),\n                    merkleRoot: (0,uint8arrays_alloc__WEBPACK_IMPORTED_MODULE_1__.alloc)(0),\n                    epoch: (0,uint8arrays_alloc__WEBPACK_IMPORTED_MODULE_1__.alloc)(0),\n                    shareX: (0,uint8arrays_alloc__WEBPACK_IMPORTED_MODULE_1__.alloc)(0),\n                    shareY: (0,uint8arrays_alloc__WEBPACK_IMPORTED_MODULE_1__.alloc)(0),\n                    nullifier: (0,uint8arrays_alloc__WEBPACK_IMPORTED_MODULE_1__.alloc)(0),\n                    rlnIdentifier: (0,uint8arrays_alloc__WEBPACK_IMPORTED_MODULE_1__.alloc)(0)\n                };\n                const end = length == null ? reader.len : reader.pos + length;\n                while(reader.pos < end){\n                    const tag = reader.uint32();\n                    switch(tag >>> 3){\n                        case 1:\n                            {\n                                obj.proof = reader.bytes();\n                                break;\n                            }\n                        case 2:\n                            {\n                                obj.merkleRoot = reader.bytes();\n                                break;\n                            }\n                        case 3:\n                            {\n                                obj.epoch = reader.bytes();\n                                break;\n                            }\n                        case 4:\n                            {\n                                obj.shareX = reader.bytes();\n                                break;\n                            }\n                        case 5:\n                            {\n                                obj.shareY = reader.bytes();\n                                break;\n                            }\n                        case 6:\n                            {\n                                obj.nullifier = reader.bytes();\n                                break;\n                            }\n                        case 7:\n                            {\n                                obj.rlnIdentifier = reader.bytes();\n                                break;\n                            }\n                        default:\n                            {\n                                reader.skipType(tag & 7);\n                                break;\n                            }\n                    }\n                }\n                return obj;\n            });\n        }\n        return _codec;\n    };\n    RateLimitProof.encode = (obj)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.encodeMessage)(obj, RateLimitProof.codec());\n    };\n    RateLimitProof.decode = (buf, opts)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.decodeMessage)(buf, RateLimitProof.codec(), opts);\n    };\n})(RateLimitProof || (RateLimitProof = {}));\nvar WakuMessage;\n(function(WakuMessage) {\n    let _codec;\n    WakuMessage.codec = ()=>{\n        if (_codec == null) {\n            _codec = (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.message)((obj, w, opts = {})=>{\n                if (opts.lengthDelimited !== false) {\n                    w.fork();\n                }\n                if (obj.payload != null && obj.payload.byteLength > 0) {\n                    w.uint32(10);\n                    w.bytes(obj.payload);\n                }\n                if (obj.contentTopic != null && obj.contentTopic !== \"\") {\n                    w.uint32(18);\n                    w.string(obj.contentTopic);\n                }\n                if (obj.version != null) {\n                    w.uint32(24);\n                    w.uint32(obj.version);\n                }\n                if (obj.timestamp != null) {\n                    w.uint32(80);\n                    w.sint64(obj.timestamp);\n                }\n                if (obj.meta != null) {\n                    w.uint32(90);\n                    w.bytes(obj.meta);\n                }\n                if (obj.rateLimitProof != null) {\n                    w.uint32(170);\n                    RateLimitProof.codec().encode(obj.rateLimitProof, w);\n                }\n                if (obj.ephemeral != null) {\n                    w.uint32(248);\n                    w.bool(obj.ephemeral);\n                }\n                if (opts.lengthDelimited !== false) {\n                    w.ldelim();\n                }\n            }, (reader, length, opts = {})=>{\n                const obj = {\n                    payload: (0,uint8arrays_alloc__WEBPACK_IMPORTED_MODULE_1__.alloc)(0),\n                    contentTopic: \"\"\n                };\n                const end = length == null ? reader.len : reader.pos + length;\n                while(reader.pos < end){\n                    const tag = reader.uint32();\n                    switch(tag >>> 3){\n                        case 1:\n                            {\n                                obj.payload = reader.bytes();\n                                break;\n                            }\n                        case 2:\n                            {\n                                obj.contentTopic = reader.string();\n                                break;\n                            }\n                        case 3:\n                            {\n                                obj.version = reader.uint32();\n                                break;\n                            }\n                        case 10:\n                            {\n                                obj.timestamp = reader.sint64();\n                                break;\n                            }\n                        case 11:\n                            {\n                                obj.meta = reader.bytes();\n                                break;\n                            }\n                        case 21:\n                            {\n                                obj.rateLimitProof = RateLimitProof.codec().decode(reader, reader.uint32(), {\n                                    limits: opts.limits?.rateLimitProof\n                                });\n                                break;\n                            }\n                        case 31:\n                            {\n                                obj.ephemeral = reader.bool();\n                                break;\n                            }\n                        default:\n                            {\n                                reader.skipType(tag & 7);\n                                break;\n                            }\n                    }\n                }\n                return obj;\n            });\n        }\n        return _codec;\n    };\n    WakuMessage.encode = (obj)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.encodeMessage)(obj, WakuMessage.codec());\n    };\n    WakuMessage.decode = (buf, opts)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.decodeMessage)(buf, WakuMessage.codec(), opts);\n    };\n})(WakuMessage || (WakuMessage = {})); //# sourceMappingURL=light_push.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/discovery/node_modules/@waku/proto/dist/generated/light_push.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/discovery/node_modules/@waku/proto/dist/generated/message.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@waku/discovery/node_modules/@waku/proto/dist/generated/message.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RateLimitProof: () => (/* binding */ RateLimitProof),\n/* harmony export */   WakuMessage: () => (/* binding */ WakuMessage)\n/* harmony export */ });\n/* harmony import */ var protons_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! protons-runtime */ \"(ssr)/./node_modules/protons-runtime/dist/src/index.js\");\n/* harmony import */ var uint8arrays_alloc__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! uint8arrays/alloc */ \"(ssr)/./node_modules/uint8arrays/dist/src/alloc.node.js\");\n/* eslint-disable import/export */ /* eslint-disable complexity */ /* eslint-disable @typescript-eslint/no-namespace */ /* eslint-disable @typescript-eslint/no-unnecessary-boolean-literal-compare */ /* eslint-disable @typescript-eslint/no-empty-interface */ \n\nvar RateLimitProof;\n(function(RateLimitProof) {\n    let _codec;\n    RateLimitProof.codec = ()=>{\n        if (_codec == null) {\n            _codec = (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.message)((obj, w, opts = {})=>{\n                if (opts.lengthDelimited !== false) {\n                    w.fork();\n                }\n                if (obj.proof != null && obj.proof.byteLength > 0) {\n                    w.uint32(10);\n                    w.bytes(obj.proof);\n                }\n                if (obj.merkleRoot != null && obj.merkleRoot.byteLength > 0) {\n                    w.uint32(18);\n                    w.bytes(obj.merkleRoot);\n                }\n                if (obj.epoch != null && obj.epoch.byteLength > 0) {\n                    w.uint32(26);\n                    w.bytes(obj.epoch);\n                }\n                if (obj.shareX != null && obj.shareX.byteLength > 0) {\n                    w.uint32(34);\n                    w.bytes(obj.shareX);\n                }\n                if (obj.shareY != null && obj.shareY.byteLength > 0) {\n                    w.uint32(42);\n                    w.bytes(obj.shareY);\n                }\n                if (obj.nullifier != null && obj.nullifier.byteLength > 0) {\n                    w.uint32(50);\n                    w.bytes(obj.nullifier);\n                }\n                if (obj.rlnIdentifier != null && obj.rlnIdentifier.byteLength > 0) {\n                    w.uint32(58);\n                    w.bytes(obj.rlnIdentifier);\n                }\n                if (opts.lengthDelimited !== false) {\n                    w.ldelim();\n                }\n            }, (reader, length, opts = {})=>{\n                const obj = {\n                    proof: (0,uint8arrays_alloc__WEBPACK_IMPORTED_MODULE_1__.alloc)(0),\n                    merkleRoot: (0,uint8arrays_alloc__WEBPACK_IMPORTED_MODULE_1__.alloc)(0),\n                    epoch: (0,uint8arrays_alloc__WEBPACK_IMPORTED_MODULE_1__.alloc)(0),\n                    shareX: (0,uint8arrays_alloc__WEBPACK_IMPORTED_MODULE_1__.alloc)(0),\n                    shareY: (0,uint8arrays_alloc__WEBPACK_IMPORTED_MODULE_1__.alloc)(0),\n                    nullifier: (0,uint8arrays_alloc__WEBPACK_IMPORTED_MODULE_1__.alloc)(0),\n                    rlnIdentifier: (0,uint8arrays_alloc__WEBPACK_IMPORTED_MODULE_1__.alloc)(0)\n                };\n                const end = length == null ? reader.len : reader.pos + length;\n                while(reader.pos < end){\n                    const tag = reader.uint32();\n                    switch(tag >>> 3){\n                        case 1:\n                            {\n                                obj.proof = reader.bytes();\n                                break;\n                            }\n                        case 2:\n                            {\n                                obj.merkleRoot = reader.bytes();\n                                break;\n                            }\n                        case 3:\n                            {\n                                obj.epoch = reader.bytes();\n                                break;\n                            }\n                        case 4:\n                            {\n                                obj.shareX = reader.bytes();\n                                break;\n                            }\n                        case 5:\n                            {\n                                obj.shareY = reader.bytes();\n                                break;\n                            }\n                        case 6:\n                            {\n                                obj.nullifier = reader.bytes();\n                                break;\n                            }\n                        case 7:\n                            {\n                                obj.rlnIdentifier = reader.bytes();\n                                break;\n                            }\n                        default:\n                            {\n                                reader.skipType(tag & 7);\n                                break;\n                            }\n                    }\n                }\n                return obj;\n            });\n        }\n        return _codec;\n    };\n    RateLimitProof.encode = (obj)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.encodeMessage)(obj, RateLimitProof.codec());\n    };\n    RateLimitProof.decode = (buf, opts)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.decodeMessage)(buf, RateLimitProof.codec(), opts);\n    };\n})(RateLimitProof || (RateLimitProof = {}));\nvar WakuMessage;\n(function(WakuMessage) {\n    let _codec;\n    WakuMessage.codec = ()=>{\n        if (_codec == null) {\n            _codec = (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.message)((obj, w, opts = {})=>{\n                if (opts.lengthDelimited !== false) {\n                    w.fork();\n                }\n                if (obj.payload != null && obj.payload.byteLength > 0) {\n                    w.uint32(10);\n                    w.bytes(obj.payload);\n                }\n                if (obj.contentTopic != null && obj.contentTopic !== \"\") {\n                    w.uint32(18);\n                    w.string(obj.contentTopic);\n                }\n                if (obj.version != null) {\n                    w.uint32(24);\n                    w.uint32(obj.version);\n                }\n                if (obj.timestamp != null) {\n                    w.uint32(80);\n                    w.sint64(obj.timestamp);\n                }\n                if (obj.meta != null) {\n                    w.uint32(90);\n                    w.bytes(obj.meta);\n                }\n                if (obj.rateLimitProof != null) {\n                    w.uint32(170);\n                    RateLimitProof.codec().encode(obj.rateLimitProof, w);\n                }\n                if (obj.ephemeral != null) {\n                    w.uint32(248);\n                    w.bool(obj.ephemeral);\n                }\n                if (opts.lengthDelimited !== false) {\n                    w.ldelim();\n                }\n            }, (reader, length, opts = {})=>{\n                const obj = {\n                    payload: (0,uint8arrays_alloc__WEBPACK_IMPORTED_MODULE_1__.alloc)(0),\n                    contentTopic: \"\"\n                };\n                const end = length == null ? reader.len : reader.pos + length;\n                while(reader.pos < end){\n                    const tag = reader.uint32();\n                    switch(tag >>> 3){\n                        case 1:\n                            {\n                                obj.payload = reader.bytes();\n                                break;\n                            }\n                        case 2:\n                            {\n                                obj.contentTopic = reader.string();\n                                break;\n                            }\n                        case 3:\n                            {\n                                obj.version = reader.uint32();\n                                break;\n                            }\n                        case 10:\n                            {\n                                obj.timestamp = reader.sint64();\n                                break;\n                            }\n                        case 11:\n                            {\n                                obj.meta = reader.bytes();\n                                break;\n                            }\n                        case 21:\n                            {\n                                obj.rateLimitProof = RateLimitProof.codec().decode(reader, reader.uint32(), {\n                                    limits: opts.limits?.rateLimitProof\n                                });\n                                break;\n                            }\n                        case 31:\n                            {\n                                obj.ephemeral = reader.bool();\n                                break;\n                            }\n                        default:\n                            {\n                                reader.skipType(tag & 7);\n                                break;\n                            }\n                    }\n                }\n                return obj;\n            });\n        }\n        return _codec;\n    };\n    WakuMessage.encode = (obj)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.encodeMessage)(obj, WakuMessage.codec());\n    };\n    WakuMessage.decode = (buf, opts)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.decodeMessage)(buf, WakuMessage.codec(), opts);\n    };\n})(WakuMessage || (WakuMessage = {})); //# sourceMappingURL=message.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/discovery/node_modules/@waku/proto/dist/generated/message.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/discovery/node_modules/@waku/proto/dist/generated/metadata.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@waku/discovery/node_modules/@waku/proto/dist/generated/metadata.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   WakuMetadataRequest: () => (/* binding */ WakuMetadataRequest),\n/* harmony export */   WakuMetadataResponse: () => (/* binding */ WakuMetadataResponse)\n/* harmony export */ });\n/* harmony import */ var protons_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! protons-runtime */ \"(ssr)/./node_modules/protons-runtime/dist/src/index.js\");\n/* eslint-disable import/export */ /* eslint-disable complexity */ /* eslint-disable @typescript-eslint/no-namespace */ /* eslint-disable @typescript-eslint/no-unnecessary-boolean-literal-compare */ /* eslint-disable @typescript-eslint/no-empty-interface */ \nvar WakuMetadataRequest;\n(function(WakuMetadataRequest) {\n    let _codec;\n    WakuMetadataRequest.codec = ()=>{\n        if (_codec == null) {\n            _codec = (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.message)((obj, w, opts = {})=>{\n                if (opts.lengthDelimited !== false) {\n                    w.fork();\n                }\n                if (obj.clusterId != null) {\n                    w.uint32(8);\n                    w.uint32(obj.clusterId);\n                }\n                if (obj.shards != null) {\n                    for (const value of obj.shards){\n                        w.uint32(16);\n                        w.uint32(value);\n                    }\n                }\n                if (opts.lengthDelimited !== false) {\n                    w.ldelim();\n                }\n            }, (reader, length, opts = {})=>{\n                const obj = {\n                    shards: []\n                };\n                const end = length == null ? reader.len : reader.pos + length;\n                while(reader.pos < end){\n                    const tag = reader.uint32();\n                    switch(tag >>> 3){\n                        case 1:\n                            {\n                                obj.clusterId = reader.uint32();\n                                break;\n                            }\n                        case 2:\n                            {\n                                if (opts.limits?.shards != null && obj.shards.length === opts.limits.shards) {\n                                    throw new protons_runtime__WEBPACK_IMPORTED_MODULE_0__.CodeError('decode error - map field \"shards\" had too many elements', \"ERR_MAX_LENGTH\");\n                                }\n                                obj.shards.push(reader.uint32());\n                                break;\n                            }\n                        default:\n                            {\n                                reader.skipType(tag & 7);\n                                break;\n                            }\n                    }\n                }\n                return obj;\n            });\n        }\n        return _codec;\n    };\n    WakuMetadataRequest.encode = (obj)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.encodeMessage)(obj, WakuMetadataRequest.codec());\n    };\n    WakuMetadataRequest.decode = (buf, opts)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.decodeMessage)(buf, WakuMetadataRequest.codec(), opts);\n    };\n})(WakuMetadataRequest || (WakuMetadataRequest = {}));\nvar WakuMetadataResponse;\n(function(WakuMetadataResponse) {\n    let _codec;\n    WakuMetadataResponse.codec = ()=>{\n        if (_codec == null) {\n            _codec = (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.message)((obj, w, opts = {})=>{\n                if (opts.lengthDelimited !== false) {\n                    w.fork();\n                }\n                if (obj.clusterId != null) {\n                    w.uint32(8);\n                    w.uint32(obj.clusterId);\n                }\n                if (obj.shards != null) {\n                    for (const value of obj.shards){\n                        w.uint32(16);\n                        w.uint32(value);\n                    }\n                }\n                if (opts.lengthDelimited !== false) {\n                    w.ldelim();\n                }\n            }, (reader, length, opts = {})=>{\n                const obj = {\n                    shards: []\n                };\n                const end = length == null ? reader.len : reader.pos + length;\n                while(reader.pos < end){\n                    const tag = reader.uint32();\n                    switch(tag >>> 3){\n                        case 1:\n                            {\n                                obj.clusterId = reader.uint32();\n                                break;\n                            }\n                        case 2:\n                            {\n                                if (opts.limits?.shards != null && obj.shards.length === opts.limits.shards) {\n                                    throw new protons_runtime__WEBPACK_IMPORTED_MODULE_0__.CodeError('decode error - map field \"shards\" had too many elements', \"ERR_MAX_LENGTH\");\n                                }\n                                obj.shards.push(reader.uint32());\n                                break;\n                            }\n                        default:\n                            {\n                                reader.skipType(tag & 7);\n                                break;\n                            }\n                    }\n                }\n                return obj;\n            });\n        }\n        return _codec;\n    };\n    WakuMetadataResponse.encode = (obj)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.encodeMessage)(obj, WakuMetadataResponse.codec());\n    };\n    WakuMetadataResponse.decode = (buf, opts)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.decodeMessage)(buf, WakuMetadataResponse.codec(), opts);\n    };\n})(WakuMetadataResponse || (WakuMetadataResponse = {})); //# sourceMappingURL=metadata.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/discovery/node_modules/@waku/proto/dist/generated/metadata.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/discovery/node_modules/@waku/proto/dist/generated/peer_exchange.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@waku/discovery/node_modules/@waku/proto/dist/generated/peer_exchange.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PeerExchangeQuery: () => (/* binding */ PeerExchangeQuery),\n/* harmony export */   PeerExchangeRPC: () => (/* binding */ PeerExchangeRPC),\n/* harmony export */   PeerExchangeResponse: () => (/* binding */ PeerExchangeResponse),\n/* harmony export */   PeerInfo: () => (/* binding */ PeerInfo)\n/* harmony export */ });\n/* harmony import */ var protons_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! protons-runtime */ \"(ssr)/./node_modules/protons-runtime/dist/src/index.js\");\n/* eslint-disable import/export */ /* eslint-disable complexity */ /* eslint-disable @typescript-eslint/no-namespace */ /* eslint-disable @typescript-eslint/no-unnecessary-boolean-literal-compare */ /* eslint-disable @typescript-eslint/no-empty-interface */ \nvar PeerInfo;\n(function(PeerInfo) {\n    let _codec;\n    PeerInfo.codec = ()=>{\n        if (_codec == null) {\n            _codec = (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.message)((obj, w, opts = {})=>{\n                if (opts.lengthDelimited !== false) {\n                    w.fork();\n                }\n                if (obj.enr != null) {\n                    w.uint32(10);\n                    w.bytes(obj.enr);\n                }\n                if (opts.lengthDelimited !== false) {\n                    w.ldelim();\n                }\n            }, (reader, length, opts = {})=>{\n                const obj = {};\n                const end = length == null ? reader.len : reader.pos + length;\n                while(reader.pos < end){\n                    const tag = reader.uint32();\n                    switch(tag >>> 3){\n                        case 1:\n                            {\n                                obj.enr = reader.bytes();\n                                break;\n                            }\n                        default:\n                            {\n                                reader.skipType(tag & 7);\n                                break;\n                            }\n                    }\n                }\n                return obj;\n            });\n        }\n        return _codec;\n    };\n    PeerInfo.encode = (obj)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.encodeMessage)(obj, PeerInfo.codec());\n    };\n    PeerInfo.decode = (buf, opts)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.decodeMessage)(buf, PeerInfo.codec(), opts);\n    };\n})(PeerInfo || (PeerInfo = {}));\nvar PeerExchangeQuery;\n(function(PeerExchangeQuery) {\n    let _codec;\n    PeerExchangeQuery.codec = ()=>{\n        if (_codec == null) {\n            _codec = (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.message)((obj, w, opts = {})=>{\n                if (opts.lengthDelimited !== false) {\n                    w.fork();\n                }\n                if (obj.numPeers != null) {\n                    w.uint32(8);\n                    w.uint64(obj.numPeers);\n                }\n                if (opts.lengthDelimited !== false) {\n                    w.ldelim();\n                }\n            }, (reader, length, opts = {})=>{\n                const obj = {};\n                const end = length == null ? reader.len : reader.pos + length;\n                while(reader.pos < end){\n                    const tag = reader.uint32();\n                    switch(tag >>> 3){\n                        case 1:\n                            {\n                                obj.numPeers = reader.uint64();\n                                break;\n                            }\n                        default:\n                            {\n                                reader.skipType(tag & 7);\n                                break;\n                            }\n                    }\n                }\n                return obj;\n            });\n        }\n        return _codec;\n    };\n    PeerExchangeQuery.encode = (obj)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.encodeMessage)(obj, PeerExchangeQuery.codec());\n    };\n    PeerExchangeQuery.decode = (buf, opts)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.decodeMessage)(buf, PeerExchangeQuery.codec(), opts);\n    };\n})(PeerExchangeQuery || (PeerExchangeQuery = {}));\nvar PeerExchangeResponse;\n(function(PeerExchangeResponse) {\n    let _codec;\n    PeerExchangeResponse.codec = ()=>{\n        if (_codec == null) {\n            _codec = (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.message)((obj, w, opts = {})=>{\n                if (opts.lengthDelimited !== false) {\n                    w.fork();\n                }\n                if (obj.peerInfos != null) {\n                    for (const value of obj.peerInfos){\n                        w.uint32(10);\n                        PeerInfo.codec().encode(value, w);\n                    }\n                }\n                if (opts.lengthDelimited !== false) {\n                    w.ldelim();\n                }\n            }, (reader, length, opts = {})=>{\n                const obj = {\n                    peerInfos: []\n                };\n                const end = length == null ? reader.len : reader.pos + length;\n                while(reader.pos < end){\n                    const tag = reader.uint32();\n                    switch(tag >>> 3){\n                        case 1:\n                            {\n                                if (opts.limits?.peerInfos != null && obj.peerInfos.length === opts.limits.peerInfos) {\n                                    throw new protons_runtime__WEBPACK_IMPORTED_MODULE_0__.CodeError('decode error - map field \"peerInfos\" had too many elements', \"ERR_MAX_LENGTH\");\n                                }\n                                obj.peerInfos.push(PeerInfo.codec().decode(reader, reader.uint32(), {\n                                    limits: opts.limits?.peerInfos$\n                                }));\n                                break;\n                            }\n                        default:\n                            {\n                                reader.skipType(tag & 7);\n                                break;\n                            }\n                    }\n                }\n                return obj;\n            });\n        }\n        return _codec;\n    };\n    PeerExchangeResponse.encode = (obj)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.encodeMessage)(obj, PeerExchangeResponse.codec());\n    };\n    PeerExchangeResponse.decode = (buf, opts)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.decodeMessage)(buf, PeerExchangeResponse.codec(), opts);\n    };\n})(PeerExchangeResponse || (PeerExchangeResponse = {}));\nvar PeerExchangeRPC;\n(function(PeerExchangeRPC) {\n    let _codec;\n    PeerExchangeRPC.codec = ()=>{\n        if (_codec == null) {\n            _codec = (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.message)((obj, w, opts = {})=>{\n                if (opts.lengthDelimited !== false) {\n                    w.fork();\n                }\n                if (obj.query != null) {\n                    w.uint32(10);\n                    PeerExchangeQuery.codec().encode(obj.query, w);\n                }\n                if (obj.response != null) {\n                    w.uint32(18);\n                    PeerExchangeResponse.codec().encode(obj.response, w);\n                }\n                if (opts.lengthDelimited !== false) {\n                    w.ldelim();\n                }\n            }, (reader, length, opts = {})=>{\n                const obj = {};\n                const end = length == null ? reader.len : reader.pos + length;\n                while(reader.pos < end){\n                    const tag = reader.uint32();\n                    switch(tag >>> 3){\n                        case 1:\n                            {\n                                obj.query = PeerExchangeQuery.codec().decode(reader, reader.uint32(), {\n                                    limits: opts.limits?.query\n                                });\n                                break;\n                            }\n                        case 2:\n                            {\n                                obj.response = PeerExchangeResponse.codec().decode(reader, reader.uint32(), {\n                                    limits: opts.limits?.response\n                                });\n                                break;\n                            }\n                        default:\n                            {\n                                reader.skipType(tag & 7);\n                                break;\n                            }\n                    }\n                }\n                return obj;\n            });\n        }\n        return _codec;\n    };\n    PeerExchangeRPC.encode = (obj)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.encodeMessage)(obj, PeerExchangeRPC.codec());\n    };\n    PeerExchangeRPC.decode = (buf, opts)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.decodeMessage)(buf, PeerExchangeRPC.codec(), opts);\n    };\n})(PeerExchangeRPC || (PeerExchangeRPC = {})); //# sourceMappingURL=peer_exchange.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/discovery/node_modules/@waku/proto/dist/generated/peer_exchange.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/discovery/node_modules/@waku/proto/dist/generated/store.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@waku/discovery/node_modules/@waku/proto/dist/generated/store.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ContentFilter: () => (/* binding */ ContentFilter),\n/* harmony export */   HistoryQuery: () => (/* binding */ HistoryQuery),\n/* harmony export */   HistoryResponse: () => (/* binding */ HistoryResponse),\n/* harmony export */   HistoryRpc: () => (/* binding */ HistoryRpc),\n/* harmony export */   Index: () => (/* binding */ Index),\n/* harmony export */   PagingInfo: () => (/* binding */ PagingInfo),\n/* harmony export */   RateLimitProof: () => (/* binding */ RateLimitProof),\n/* harmony export */   WakuMessage: () => (/* binding */ WakuMessage)\n/* harmony export */ });\n/* harmony import */ var protons_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! protons-runtime */ \"(ssr)/./node_modules/protons-runtime/dist/src/index.js\");\n/* harmony import */ var uint8arrays_alloc__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! uint8arrays/alloc */ \"(ssr)/./node_modules/uint8arrays/dist/src/alloc.node.js\");\n/* eslint-disable import/export */ /* eslint-disable complexity */ /* eslint-disable @typescript-eslint/no-namespace */ /* eslint-disable @typescript-eslint/no-unnecessary-boolean-literal-compare */ /* eslint-disable @typescript-eslint/no-empty-interface */ \n\nvar Index;\n(function(Index) {\n    let _codec;\n    Index.codec = ()=>{\n        if (_codec == null) {\n            _codec = (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.message)((obj, w, opts = {})=>{\n                if (opts.lengthDelimited !== false) {\n                    w.fork();\n                }\n                if (obj.digest != null && obj.digest.byteLength > 0) {\n                    w.uint32(10);\n                    w.bytes(obj.digest);\n                }\n                if (obj.receiverTime != null && obj.receiverTime !== 0n) {\n                    w.uint32(16);\n                    w.sint64(obj.receiverTime);\n                }\n                if (obj.senderTime != null && obj.senderTime !== 0n) {\n                    w.uint32(24);\n                    w.sint64(obj.senderTime);\n                }\n                if (obj.pubsubTopic != null && obj.pubsubTopic !== \"\") {\n                    w.uint32(34);\n                    w.string(obj.pubsubTopic);\n                }\n                if (opts.lengthDelimited !== false) {\n                    w.ldelim();\n                }\n            }, (reader, length, opts = {})=>{\n                const obj = {\n                    digest: (0,uint8arrays_alloc__WEBPACK_IMPORTED_MODULE_1__.alloc)(0),\n                    receiverTime: 0n,\n                    senderTime: 0n,\n                    pubsubTopic: \"\"\n                };\n                const end = length == null ? reader.len : reader.pos + length;\n                while(reader.pos < end){\n                    const tag = reader.uint32();\n                    switch(tag >>> 3){\n                        case 1:\n                            {\n                                obj.digest = reader.bytes();\n                                break;\n                            }\n                        case 2:\n                            {\n                                obj.receiverTime = reader.sint64();\n                                break;\n                            }\n                        case 3:\n                            {\n                                obj.senderTime = reader.sint64();\n                                break;\n                            }\n                        case 4:\n                            {\n                                obj.pubsubTopic = reader.string();\n                                break;\n                            }\n                        default:\n                            {\n                                reader.skipType(tag & 7);\n                                break;\n                            }\n                    }\n                }\n                return obj;\n            });\n        }\n        return _codec;\n    };\n    Index.encode = (obj)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.encodeMessage)(obj, Index.codec());\n    };\n    Index.decode = (buf, opts)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.decodeMessage)(buf, Index.codec(), opts);\n    };\n})(Index || (Index = {}));\nvar PagingInfo;\n(function(PagingInfo) {\n    let Direction;\n    (function(Direction) {\n        Direction[\"BACKWARD\"] = \"BACKWARD\";\n        Direction[\"FORWARD\"] = \"FORWARD\";\n    })(Direction = PagingInfo.Direction || (PagingInfo.Direction = {}));\n    let __DirectionValues;\n    (function(__DirectionValues) {\n        __DirectionValues[__DirectionValues[\"BACKWARD\"] = 0] = \"BACKWARD\";\n        __DirectionValues[__DirectionValues[\"FORWARD\"] = 1] = \"FORWARD\";\n    })(__DirectionValues || (__DirectionValues = {}));\n    (function(Direction) {\n        Direction.codec = ()=>{\n            return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.enumeration)(__DirectionValues);\n        };\n    })(Direction = PagingInfo.Direction || (PagingInfo.Direction = {}));\n    let _codec;\n    PagingInfo.codec = ()=>{\n        if (_codec == null) {\n            _codec = (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.message)((obj, w, opts = {})=>{\n                if (opts.lengthDelimited !== false) {\n                    w.fork();\n                }\n                if (obj.pageSize != null) {\n                    w.uint32(8);\n                    w.uint64(obj.pageSize);\n                }\n                if (obj.cursor != null) {\n                    w.uint32(18);\n                    Index.codec().encode(obj.cursor, w);\n                }\n                if (obj.direction != null) {\n                    w.uint32(24);\n                    PagingInfo.Direction.codec().encode(obj.direction, w);\n                }\n                if (opts.lengthDelimited !== false) {\n                    w.ldelim();\n                }\n            }, (reader, length, opts = {})=>{\n                const obj = {};\n                const end = length == null ? reader.len : reader.pos + length;\n                while(reader.pos < end){\n                    const tag = reader.uint32();\n                    switch(tag >>> 3){\n                        case 1:\n                            {\n                                obj.pageSize = reader.uint64();\n                                break;\n                            }\n                        case 2:\n                            {\n                                obj.cursor = Index.codec().decode(reader, reader.uint32(), {\n                                    limits: opts.limits?.cursor\n                                });\n                                break;\n                            }\n                        case 3:\n                            {\n                                obj.direction = PagingInfo.Direction.codec().decode(reader);\n                                break;\n                            }\n                        default:\n                            {\n                                reader.skipType(tag & 7);\n                                break;\n                            }\n                    }\n                }\n                return obj;\n            });\n        }\n        return _codec;\n    };\n    PagingInfo.encode = (obj)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.encodeMessage)(obj, PagingInfo.codec());\n    };\n    PagingInfo.decode = (buf, opts)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.decodeMessage)(buf, PagingInfo.codec(), opts);\n    };\n})(PagingInfo || (PagingInfo = {}));\nvar ContentFilter;\n(function(ContentFilter) {\n    let _codec;\n    ContentFilter.codec = ()=>{\n        if (_codec == null) {\n            _codec = (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.message)((obj, w, opts = {})=>{\n                if (opts.lengthDelimited !== false) {\n                    w.fork();\n                }\n                if (obj.contentTopic != null && obj.contentTopic !== \"\") {\n                    w.uint32(10);\n                    w.string(obj.contentTopic);\n                }\n                if (opts.lengthDelimited !== false) {\n                    w.ldelim();\n                }\n            }, (reader, length, opts = {})=>{\n                const obj = {\n                    contentTopic: \"\"\n                };\n                const end = length == null ? reader.len : reader.pos + length;\n                while(reader.pos < end){\n                    const tag = reader.uint32();\n                    switch(tag >>> 3){\n                        case 1:\n                            {\n                                obj.contentTopic = reader.string();\n                                break;\n                            }\n                        default:\n                            {\n                                reader.skipType(tag & 7);\n                                break;\n                            }\n                    }\n                }\n                return obj;\n            });\n        }\n        return _codec;\n    };\n    ContentFilter.encode = (obj)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.encodeMessage)(obj, ContentFilter.codec());\n    };\n    ContentFilter.decode = (buf, opts)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.decodeMessage)(buf, ContentFilter.codec(), opts);\n    };\n})(ContentFilter || (ContentFilter = {}));\nvar HistoryQuery;\n(function(HistoryQuery) {\n    let _codec;\n    HistoryQuery.codec = ()=>{\n        if (_codec == null) {\n            _codec = (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.message)((obj, w, opts = {})=>{\n                if (opts.lengthDelimited !== false) {\n                    w.fork();\n                }\n                if (obj.pubsubTopic != null) {\n                    w.uint32(18);\n                    w.string(obj.pubsubTopic);\n                }\n                if (obj.contentFilters != null) {\n                    for (const value of obj.contentFilters){\n                        w.uint32(26);\n                        ContentFilter.codec().encode(value, w);\n                    }\n                }\n                if (obj.pagingInfo != null) {\n                    w.uint32(34);\n                    PagingInfo.codec().encode(obj.pagingInfo, w);\n                }\n                if (obj.startTime != null) {\n                    w.uint32(40);\n                    w.sint64(obj.startTime);\n                }\n                if (obj.endTime != null) {\n                    w.uint32(48);\n                    w.sint64(obj.endTime);\n                }\n                if (opts.lengthDelimited !== false) {\n                    w.ldelim();\n                }\n            }, (reader, length, opts = {})=>{\n                const obj = {\n                    contentFilters: []\n                };\n                const end = length == null ? reader.len : reader.pos + length;\n                while(reader.pos < end){\n                    const tag = reader.uint32();\n                    switch(tag >>> 3){\n                        case 2:\n                            {\n                                obj.pubsubTopic = reader.string();\n                                break;\n                            }\n                        case 3:\n                            {\n                                if (opts.limits?.contentFilters != null && obj.contentFilters.length === opts.limits.contentFilters) {\n                                    throw new protons_runtime__WEBPACK_IMPORTED_MODULE_0__.CodeError('decode error - map field \"contentFilters\" had too many elements', \"ERR_MAX_LENGTH\");\n                                }\n                                obj.contentFilters.push(ContentFilter.codec().decode(reader, reader.uint32(), {\n                                    limits: opts.limits?.contentFilters$\n                                }));\n                                break;\n                            }\n                        case 4:\n                            {\n                                obj.pagingInfo = PagingInfo.codec().decode(reader, reader.uint32(), {\n                                    limits: opts.limits?.pagingInfo\n                                });\n                                break;\n                            }\n                        case 5:\n                            {\n                                obj.startTime = reader.sint64();\n                                break;\n                            }\n                        case 6:\n                            {\n                                obj.endTime = reader.sint64();\n                                break;\n                            }\n                        default:\n                            {\n                                reader.skipType(tag & 7);\n                                break;\n                            }\n                    }\n                }\n                return obj;\n            });\n        }\n        return _codec;\n    };\n    HistoryQuery.encode = (obj)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.encodeMessage)(obj, HistoryQuery.codec());\n    };\n    HistoryQuery.decode = (buf, opts)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.decodeMessage)(buf, HistoryQuery.codec(), opts);\n    };\n})(HistoryQuery || (HistoryQuery = {}));\nvar HistoryResponse;\n(function(HistoryResponse) {\n    let HistoryError;\n    (function(HistoryError) {\n        HistoryError[\"NONE\"] = \"NONE\";\n        HistoryError[\"INVALID_CURSOR\"] = \"INVALID_CURSOR\";\n        HistoryError[\"TOO_MANY_RESULTS\"] = \"TOO_MANY_RESULTS\";\n        HistoryError[\"SERVICE_UNAVAILABLE\"] = \"SERVICE_UNAVAILABLE\";\n    })(HistoryError = HistoryResponse.HistoryError || (HistoryResponse.HistoryError = {}));\n    let __HistoryErrorValues;\n    (function(__HistoryErrorValues) {\n        __HistoryErrorValues[__HistoryErrorValues[\"NONE\"] = 0] = \"NONE\";\n        __HistoryErrorValues[__HistoryErrorValues[\"INVALID_CURSOR\"] = 1] = \"INVALID_CURSOR\";\n        __HistoryErrorValues[__HistoryErrorValues[\"TOO_MANY_RESULTS\"] = 429] = \"TOO_MANY_RESULTS\";\n        __HistoryErrorValues[__HistoryErrorValues[\"SERVICE_UNAVAILABLE\"] = 503] = \"SERVICE_UNAVAILABLE\";\n    })(__HistoryErrorValues || (__HistoryErrorValues = {}));\n    (function(HistoryError) {\n        HistoryError.codec = ()=>{\n            return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.enumeration)(__HistoryErrorValues);\n        };\n    })(HistoryError = HistoryResponse.HistoryError || (HistoryResponse.HistoryError = {}));\n    let _codec;\n    HistoryResponse.codec = ()=>{\n        if (_codec == null) {\n            _codec = (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.message)((obj, w, opts = {})=>{\n                if (opts.lengthDelimited !== false) {\n                    w.fork();\n                }\n                if (obj.messages != null) {\n                    for (const value of obj.messages){\n                        w.uint32(18);\n                        WakuMessage.codec().encode(value, w);\n                    }\n                }\n                if (obj.pagingInfo != null) {\n                    w.uint32(26);\n                    PagingInfo.codec().encode(obj.pagingInfo, w);\n                }\n                if (obj.error != null && __HistoryErrorValues[obj.error] !== 0) {\n                    w.uint32(32);\n                    HistoryResponse.HistoryError.codec().encode(obj.error, w);\n                }\n                if (opts.lengthDelimited !== false) {\n                    w.ldelim();\n                }\n            }, (reader, length, opts = {})=>{\n                const obj = {\n                    messages: [],\n                    error: HistoryError.NONE\n                };\n                const end = length == null ? reader.len : reader.pos + length;\n                while(reader.pos < end){\n                    const tag = reader.uint32();\n                    switch(tag >>> 3){\n                        case 2:\n                            {\n                                if (opts.limits?.messages != null && obj.messages.length === opts.limits.messages) {\n                                    throw new protons_runtime__WEBPACK_IMPORTED_MODULE_0__.CodeError('decode error - map field \"messages\" had too many elements', \"ERR_MAX_LENGTH\");\n                                }\n                                obj.messages.push(WakuMessage.codec().decode(reader, reader.uint32(), {\n                                    limits: opts.limits?.messages$\n                                }));\n                                break;\n                            }\n                        case 3:\n                            {\n                                obj.pagingInfo = PagingInfo.codec().decode(reader, reader.uint32(), {\n                                    limits: opts.limits?.pagingInfo\n                                });\n                                break;\n                            }\n                        case 4:\n                            {\n                                obj.error = HistoryResponse.HistoryError.codec().decode(reader);\n                                break;\n                            }\n                        default:\n                            {\n                                reader.skipType(tag & 7);\n                                break;\n                            }\n                    }\n                }\n                return obj;\n            });\n        }\n        return _codec;\n    };\n    HistoryResponse.encode = (obj)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.encodeMessage)(obj, HistoryResponse.codec());\n    };\n    HistoryResponse.decode = (buf, opts)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.decodeMessage)(buf, HistoryResponse.codec(), opts);\n    };\n})(HistoryResponse || (HistoryResponse = {}));\nvar HistoryRpc;\n(function(HistoryRpc) {\n    let _codec;\n    HistoryRpc.codec = ()=>{\n        if (_codec == null) {\n            _codec = (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.message)((obj, w, opts = {})=>{\n                if (opts.lengthDelimited !== false) {\n                    w.fork();\n                }\n                if (obj.requestId != null && obj.requestId !== \"\") {\n                    w.uint32(10);\n                    w.string(obj.requestId);\n                }\n                if (obj.query != null) {\n                    w.uint32(18);\n                    HistoryQuery.codec().encode(obj.query, w);\n                }\n                if (obj.response != null) {\n                    w.uint32(26);\n                    HistoryResponse.codec().encode(obj.response, w);\n                }\n                if (opts.lengthDelimited !== false) {\n                    w.ldelim();\n                }\n            }, (reader, length, opts = {})=>{\n                const obj = {\n                    requestId: \"\"\n                };\n                const end = length == null ? reader.len : reader.pos + length;\n                while(reader.pos < end){\n                    const tag = reader.uint32();\n                    switch(tag >>> 3){\n                        case 1:\n                            {\n                                obj.requestId = reader.string();\n                                break;\n                            }\n                        case 2:\n                            {\n                                obj.query = HistoryQuery.codec().decode(reader, reader.uint32(), {\n                                    limits: opts.limits?.query\n                                });\n                                break;\n                            }\n                        case 3:\n                            {\n                                obj.response = HistoryResponse.codec().decode(reader, reader.uint32(), {\n                                    limits: opts.limits?.response\n                                });\n                                break;\n                            }\n                        default:\n                            {\n                                reader.skipType(tag & 7);\n                                break;\n                            }\n                    }\n                }\n                return obj;\n            });\n        }\n        return _codec;\n    };\n    HistoryRpc.encode = (obj)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.encodeMessage)(obj, HistoryRpc.codec());\n    };\n    HistoryRpc.decode = (buf, opts)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.decodeMessage)(buf, HistoryRpc.codec(), opts);\n    };\n})(HistoryRpc || (HistoryRpc = {}));\nvar RateLimitProof;\n(function(RateLimitProof) {\n    let _codec;\n    RateLimitProof.codec = ()=>{\n        if (_codec == null) {\n            _codec = (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.message)((obj, w, opts = {})=>{\n                if (opts.lengthDelimited !== false) {\n                    w.fork();\n                }\n                if (obj.proof != null && obj.proof.byteLength > 0) {\n                    w.uint32(10);\n                    w.bytes(obj.proof);\n                }\n                if (obj.merkleRoot != null && obj.merkleRoot.byteLength > 0) {\n                    w.uint32(18);\n                    w.bytes(obj.merkleRoot);\n                }\n                if (obj.epoch != null && obj.epoch.byteLength > 0) {\n                    w.uint32(26);\n                    w.bytes(obj.epoch);\n                }\n                if (obj.shareX != null && obj.shareX.byteLength > 0) {\n                    w.uint32(34);\n                    w.bytes(obj.shareX);\n                }\n                if (obj.shareY != null && obj.shareY.byteLength > 0) {\n                    w.uint32(42);\n                    w.bytes(obj.shareY);\n                }\n                if (obj.nullifier != null && obj.nullifier.byteLength > 0) {\n                    w.uint32(50);\n                    w.bytes(obj.nullifier);\n                }\n                if (obj.rlnIdentifier != null && obj.rlnIdentifier.byteLength > 0) {\n                    w.uint32(58);\n                    w.bytes(obj.rlnIdentifier);\n                }\n                if (opts.lengthDelimited !== false) {\n                    w.ldelim();\n                }\n            }, (reader, length, opts = {})=>{\n                const obj = {\n                    proof: (0,uint8arrays_alloc__WEBPACK_IMPORTED_MODULE_1__.alloc)(0),\n                    merkleRoot: (0,uint8arrays_alloc__WEBPACK_IMPORTED_MODULE_1__.alloc)(0),\n                    epoch: (0,uint8arrays_alloc__WEBPACK_IMPORTED_MODULE_1__.alloc)(0),\n                    shareX: (0,uint8arrays_alloc__WEBPACK_IMPORTED_MODULE_1__.alloc)(0),\n                    shareY: (0,uint8arrays_alloc__WEBPACK_IMPORTED_MODULE_1__.alloc)(0),\n                    nullifier: (0,uint8arrays_alloc__WEBPACK_IMPORTED_MODULE_1__.alloc)(0),\n                    rlnIdentifier: (0,uint8arrays_alloc__WEBPACK_IMPORTED_MODULE_1__.alloc)(0)\n                };\n                const end = length == null ? reader.len : reader.pos + length;\n                while(reader.pos < end){\n                    const tag = reader.uint32();\n                    switch(tag >>> 3){\n                        case 1:\n                            {\n                                obj.proof = reader.bytes();\n                                break;\n                            }\n                        case 2:\n                            {\n                                obj.merkleRoot = reader.bytes();\n                                break;\n                            }\n                        case 3:\n                            {\n                                obj.epoch = reader.bytes();\n                                break;\n                            }\n                        case 4:\n                            {\n                                obj.shareX = reader.bytes();\n                                break;\n                            }\n                        case 5:\n                            {\n                                obj.shareY = reader.bytes();\n                                break;\n                            }\n                        case 6:\n                            {\n                                obj.nullifier = reader.bytes();\n                                break;\n                            }\n                        case 7:\n                            {\n                                obj.rlnIdentifier = reader.bytes();\n                                break;\n                            }\n                        default:\n                            {\n                                reader.skipType(tag & 7);\n                                break;\n                            }\n                    }\n                }\n                return obj;\n            });\n        }\n        return _codec;\n    };\n    RateLimitProof.encode = (obj)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.encodeMessage)(obj, RateLimitProof.codec());\n    };\n    RateLimitProof.decode = (buf, opts)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.decodeMessage)(buf, RateLimitProof.codec(), opts);\n    };\n})(RateLimitProof || (RateLimitProof = {}));\nvar WakuMessage;\n(function(WakuMessage) {\n    let _codec;\n    WakuMessage.codec = ()=>{\n        if (_codec == null) {\n            _codec = (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.message)((obj, w, opts = {})=>{\n                if (opts.lengthDelimited !== false) {\n                    w.fork();\n                }\n                if (obj.payload != null && obj.payload.byteLength > 0) {\n                    w.uint32(10);\n                    w.bytes(obj.payload);\n                }\n                if (obj.contentTopic != null && obj.contentTopic !== \"\") {\n                    w.uint32(18);\n                    w.string(obj.contentTopic);\n                }\n                if (obj.version != null) {\n                    w.uint32(24);\n                    w.uint32(obj.version);\n                }\n                if (obj.timestamp != null) {\n                    w.uint32(80);\n                    w.sint64(obj.timestamp);\n                }\n                if (obj.meta != null) {\n                    w.uint32(90);\n                    w.bytes(obj.meta);\n                }\n                if (obj.rateLimitProof != null) {\n                    w.uint32(170);\n                    RateLimitProof.codec().encode(obj.rateLimitProof, w);\n                }\n                if (obj.ephemeral != null) {\n                    w.uint32(248);\n                    w.bool(obj.ephemeral);\n                }\n                if (opts.lengthDelimited !== false) {\n                    w.ldelim();\n                }\n            }, (reader, length, opts = {})=>{\n                const obj = {\n                    payload: (0,uint8arrays_alloc__WEBPACK_IMPORTED_MODULE_1__.alloc)(0),\n                    contentTopic: \"\"\n                };\n                const end = length == null ? reader.len : reader.pos + length;\n                while(reader.pos < end){\n                    const tag = reader.uint32();\n                    switch(tag >>> 3){\n                        case 1:\n                            {\n                                obj.payload = reader.bytes();\n                                break;\n                            }\n                        case 2:\n                            {\n                                obj.contentTopic = reader.string();\n                                break;\n                            }\n                        case 3:\n                            {\n                                obj.version = reader.uint32();\n                                break;\n                            }\n                        case 10:\n                            {\n                                obj.timestamp = reader.sint64();\n                                break;\n                            }\n                        case 11:\n                            {\n                                obj.meta = reader.bytes();\n                                break;\n                            }\n                        case 21:\n                            {\n                                obj.rateLimitProof = RateLimitProof.codec().decode(reader, reader.uint32(), {\n                                    limits: opts.limits?.rateLimitProof\n                                });\n                                break;\n                            }\n                        case 31:\n                            {\n                                obj.ephemeral = reader.bool();\n                                break;\n                            }\n                        default:\n                            {\n                                reader.skipType(tag & 7);\n                                break;\n                            }\n                    }\n                }\n                return obj;\n            });\n        }\n        return _codec;\n    };\n    WakuMessage.encode = (obj)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.encodeMessage)(obj, WakuMessage.codec());\n    };\n    WakuMessage.decode = (buf, opts)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.decodeMessage)(buf, WakuMessage.codec(), opts);\n    };\n})(WakuMessage || (WakuMessage = {})); //# sourceMappingURL=store.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/discovery/node_modules/@waku/proto/dist/generated/store.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/discovery/node_modules/@waku/proto/dist/generated/topic_only_message.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/@waku/discovery/node_modules/@waku/proto/dist/generated/topic_only_message.js ***!
  \****************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   TopicOnlyMessage: () => (/* binding */ TopicOnlyMessage)\n/* harmony export */ });\n/* harmony import */ var protons_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! protons-runtime */ \"(ssr)/./node_modules/protons-runtime/dist/src/index.js\");\n/* eslint-disable import/export */ /* eslint-disable complexity */ /* eslint-disable @typescript-eslint/no-namespace */ /* eslint-disable @typescript-eslint/no-unnecessary-boolean-literal-compare */ /* eslint-disable @typescript-eslint/no-empty-interface */ \nvar TopicOnlyMessage;\n(function(TopicOnlyMessage) {\n    let _codec;\n    TopicOnlyMessage.codec = ()=>{\n        if (_codec == null) {\n            _codec = (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.message)((obj, w, opts = {})=>{\n                if (opts.lengthDelimited !== false) {\n                    w.fork();\n                }\n                if (obj.contentTopic != null && obj.contentTopic !== \"\") {\n                    w.uint32(18);\n                    w.string(obj.contentTopic);\n                }\n                if (opts.lengthDelimited !== false) {\n                    w.ldelim();\n                }\n            }, (reader, length, opts = {})=>{\n                const obj = {\n                    contentTopic: \"\"\n                };\n                const end = length == null ? reader.len : reader.pos + length;\n                while(reader.pos < end){\n                    const tag = reader.uint32();\n                    switch(tag >>> 3){\n                        case 2:\n                            {\n                                obj.contentTopic = reader.string();\n                                break;\n                            }\n                        default:\n                            {\n                                reader.skipType(tag & 7);\n                                break;\n                            }\n                    }\n                }\n                return obj;\n            });\n        }\n        return _codec;\n    };\n    TopicOnlyMessage.encode = (obj)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.encodeMessage)(obj, TopicOnlyMessage.codec());\n    };\n    TopicOnlyMessage.decode = (buf, opts)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.decodeMessage)(buf, TopicOnlyMessage.codec(), opts);\n    };\n})(TopicOnlyMessage || (TopicOnlyMessage = {})); //# sourceMappingURL=topic_only_message.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdha3UvZGlzY292ZXJ5L25vZGVfbW9kdWxlcy9Ad2FrdS9wcm90by9kaXN0L2dlbmVyYXRlZC90b3BpY19vbmx5X21lc3NhZ2UuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxnQ0FBZ0MsR0FDaEMsNkJBQTZCLEdBQzdCLGtEQUFrRCxHQUNsRCw0RUFBNEUsR0FDNUUsd0RBQXdELEdBQ2dCO0FBQ2pFLElBQUlHLGlCQUFpQjtBQUMzQixVQUFVQSxnQkFBZ0I7SUFDdkIsSUFBSUM7SUFDSkQsaUJBQWlCRSxLQUFLLEdBQUc7UUFDckIsSUFBSUQsVUFBVSxNQUFNO1lBQ2hCQSxTQUFTRix3REFBT0EsQ0FBQyxDQUFDSSxLQUFLQyxHQUFHQyxPQUFPLENBQUMsQ0FBQztnQkFDL0IsSUFBSUEsS0FBS0MsZUFBZSxLQUFLLE9BQU87b0JBQ2hDRixFQUFFRyxJQUFJO2dCQUNWO2dCQUNBLElBQUtKLElBQUlLLFlBQVksSUFBSSxRQUFRTCxJQUFJSyxZQUFZLEtBQUssSUFBSztvQkFDdkRKLEVBQUVLLE1BQU0sQ0FBQztvQkFDVEwsRUFBRU0sTUFBTSxDQUFDUCxJQUFJSyxZQUFZO2dCQUM3QjtnQkFDQSxJQUFJSCxLQUFLQyxlQUFlLEtBQUssT0FBTztvQkFDaENGLEVBQUVPLE1BQU07Z0JBQ1o7WUFDSixHQUFHLENBQUNDLFFBQVFDLFFBQVFSLE9BQU8sQ0FBQyxDQUFDO2dCQUN6QixNQUFNRixNQUFNO29CQUNSSyxjQUFjO2dCQUNsQjtnQkFDQSxNQUFNTSxNQUFNRCxVQUFVLE9BQU9ELE9BQU9HLEdBQUcsR0FBR0gsT0FBT0ksR0FBRyxHQUFHSDtnQkFDdkQsTUFBT0QsT0FBT0ksR0FBRyxHQUFHRixJQUFLO29CQUNyQixNQUFNRyxNQUFNTCxPQUFPSCxNQUFNO29CQUN6QixPQUFRUSxRQUFRO3dCQUNaLEtBQUs7NEJBQUc7Z0NBQ0pkLElBQUlLLFlBQVksR0FBR0ksT0FBT0YsTUFBTTtnQ0FDaEM7NEJBQ0o7d0JBQ0E7NEJBQVM7Z0NBQ0xFLE9BQU9NLFFBQVEsQ0FBQ0QsTUFBTTtnQ0FDdEI7NEJBQ0o7b0JBQ0o7Z0JBQ0o7Z0JBQ0EsT0FBT2Q7WUFDWDtRQUNKO1FBQ0EsT0FBT0Y7SUFDWDtJQUNBRCxpQkFBaUJtQixNQUFNLEdBQUcsQ0FBQ2hCO1FBQ3ZCLE9BQU9MLDhEQUFhQSxDQUFDSyxLQUFLSCxpQkFBaUJFLEtBQUs7SUFDcEQ7SUFDQUYsaUJBQWlCb0IsTUFBTSxHQUFHLENBQUNDLEtBQUtoQjtRQUM1QixPQUFPUiw4REFBYUEsQ0FBQ3dCLEtBQUtyQixpQkFBaUJFLEtBQUssSUFBSUc7SUFDeEQ7QUFDSixHQUFHTCxvQkFBcUJBLENBQUFBLG1CQUFtQixDQUFDLEtBQzVDLDhDQUE4QyIsInNvdXJjZXMiOlsid2VicGFjazovL2ZsdXNoLW5vdGVzLy4vbm9kZV9tb2R1bGVzL0B3YWt1L2Rpc2NvdmVyeS9ub2RlX21vZHVsZXMvQHdha3UvcHJvdG8vZGlzdC9nZW5lcmF0ZWQvdG9waWNfb25seV9tZXNzYWdlLmpzPzRhNjQiXSwic291cmNlc0NvbnRlbnQiOlsiLyogZXNsaW50LWRpc2FibGUgaW1wb3J0L2V4cG9ydCAqL1xuLyogZXNsaW50LWRpc2FibGUgY29tcGxleGl0eSAqL1xuLyogZXNsaW50LWRpc2FibGUgQHR5cGVzY3JpcHQtZXNsaW50L25vLW5hbWVzcGFjZSAqL1xuLyogZXNsaW50LWRpc2FibGUgQHR5cGVzY3JpcHQtZXNsaW50L25vLXVubmVjZXNzYXJ5LWJvb2xlYW4tbGl0ZXJhbC1jb21wYXJlICovXG4vKiBlc2xpbnQtZGlzYWJsZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tZW1wdHktaW50ZXJmYWNlICovXG5pbXBvcnQgeyBkZWNvZGVNZXNzYWdlLCBlbmNvZGVNZXNzYWdlLCBtZXNzYWdlIH0gZnJvbSAncHJvdG9ucy1ydW50aW1lJztcbmV4cG9ydCB2YXIgVG9waWNPbmx5TWVzc2FnZTtcbihmdW5jdGlvbiAoVG9waWNPbmx5TWVzc2FnZSkge1xuICAgIGxldCBfY29kZWM7XG4gICAgVG9waWNPbmx5TWVzc2FnZS5jb2RlYyA9ICgpID0+IHtcbiAgICAgICAgaWYgKF9jb2RlYyA9PSBudWxsKSB7XG4gICAgICAgICAgICBfY29kZWMgPSBtZXNzYWdlKChvYmosIHcsIG9wdHMgPSB7fSkgPT4ge1xuICAgICAgICAgICAgICAgIGlmIChvcHRzLmxlbmd0aERlbGltaXRlZCAhPT0gZmFsc2UpIHtcbiAgICAgICAgICAgICAgICAgICAgdy5mb3JrKCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlmICgob2JqLmNvbnRlbnRUb3BpYyAhPSBudWxsICYmIG9iai5jb250ZW50VG9waWMgIT09ICcnKSkge1xuICAgICAgICAgICAgICAgICAgICB3LnVpbnQzMigxOCk7XG4gICAgICAgICAgICAgICAgICAgIHcuc3RyaW5nKG9iai5jb250ZW50VG9waWMpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpZiAob3B0cy5sZW5ndGhEZWxpbWl0ZWQgIT09IGZhbHNlKSB7XG4gICAgICAgICAgICAgICAgICAgIHcubGRlbGltKCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSwgKHJlYWRlciwgbGVuZ3RoLCBvcHRzID0ge30pID0+IHtcbiAgICAgICAgICAgICAgICBjb25zdCBvYmogPSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnRlbnRUb3BpYzogJydcbiAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgICAgIGNvbnN0IGVuZCA9IGxlbmd0aCA9PSBudWxsID8gcmVhZGVyLmxlbiA6IHJlYWRlci5wb3MgKyBsZW5ndGg7XG4gICAgICAgICAgICAgICAgd2hpbGUgKHJlYWRlci5wb3MgPCBlbmQpIHtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgdGFnID0gcmVhZGVyLnVpbnQzMigpO1xuICAgICAgICAgICAgICAgICAgICBzd2l0Y2ggKHRhZyA+Pj4gMykge1xuICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSAyOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgb2JqLmNvbnRlbnRUb3BpYyA9IHJlYWRlci5zdHJpbmcoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIGRlZmF1bHQ6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZWFkZXIuc2tpcFR5cGUodGFnICYgNyk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcmV0dXJuIG9iajtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBfY29kZWM7XG4gICAgfTtcbiAgICBUb3BpY09ubHlNZXNzYWdlLmVuY29kZSA9IChvYmopID0+IHtcbiAgICAgICAgcmV0dXJuIGVuY29kZU1lc3NhZ2Uob2JqLCBUb3BpY09ubHlNZXNzYWdlLmNvZGVjKCkpO1xuICAgIH07XG4gICAgVG9waWNPbmx5TWVzc2FnZS5kZWNvZGUgPSAoYnVmLCBvcHRzKSA9PiB7XG4gICAgICAgIHJldHVybiBkZWNvZGVNZXNzYWdlKGJ1ZiwgVG9waWNPbmx5TWVzc2FnZS5jb2RlYygpLCBvcHRzKTtcbiAgICB9O1xufSkoVG9waWNPbmx5TWVzc2FnZSB8fCAoVG9waWNPbmx5TWVzc2FnZSA9IHt9KSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD10b3BpY19vbmx5X21lc3NhZ2UuanMubWFwIl0sIm5hbWVzIjpbImRlY29kZU1lc3NhZ2UiLCJlbmNvZGVNZXNzYWdlIiwibWVzc2FnZSIsIlRvcGljT25seU1lc3NhZ2UiLCJfY29kZWMiLCJjb2RlYyIsIm9iaiIsInciLCJvcHRzIiwibGVuZ3RoRGVsaW1pdGVkIiwiZm9yayIsImNvbnRlbnRUb3BpYyIsInVpbnQzMiIsInN0cmluZyIsImxkZWxpbSIsInJlYWRlciIsImxlbmd0aCIsImVuZCIsImxlbiIsInBvcyIsInRhZyIsInNraXBUeXBlIiwiZW5jb2RlIiwiZGVjb2RlIiwiYnVmIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/discovery/node_modules/@waku/proto/dist/generated/topic_only_message.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/discovery/node_modules/@waku/proto/dist/index.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@waku/discovery/node_modules/@waku/proto/dist/index.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PushResponse: () => (/* reexport safe */ _generated_light_push_js__WEBPACK_IMPORTED_MODULE_4__.PushResponse),\n/* harmony export */   TopicOnlyMessage: () => (/* reexport safe */ _generated_topic_only_message_js__WEBPACK_IMPORTED_MODULE_2__.TopicOnlyMessage),\n/* harmony export */   WakuMessage: () => (/* reexport safe */ _generated_filter_js__WEBPACK_IMPORTED_MODULE_1__.WakuMessage),\n/* harmony export */   proto_filter: () => (/* reexport module object */ _generated_filter_js__WEBPACK_IMPORTED_MODULE_1__),\n/* harmony export */   proto_filter_v2: () => (/* reexport module object */ _generated_filter_v2_js__WEBPACK_IMPORTED_MODULE_3__),\n/* harmony export */   proto_lightpush: () => (/* reexport module object */ _generated_light_push_js__WEBPACK_IMPORTED_MODULE_4__),\n/* harmony export */   proto_message: () => (/* reexport module object */ _generated_message_js__WEBPACK_IMPORTED_MODULE_0__),\n/* harmony export */   proto_metadata: () => (/* reexport module object */ _generated_metadata_js__WEBPACK_IMPORTED_MODULE_7__),\n/* harmony export */   proto_peer_exchange: () => (/* reexport module object */ _generated_peer_exchange_js__WEBPACK_IMPORTED_MODULE_6__),\n/* harmony export */   proto_store: () => (/* reexport module object */ _generated_store_js__WEBPACK_IMPORTED_MODULE_5__),\n/* harmony export */   proto_topic_only_message: () => (/* reexport module object */ _generated_topic_only_message_js__WEBPACK_IMPORTED_MODULE_2__)\n/* harmony export */ });\n/* harmony import */ var _generated_message_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./generated/message.js */ \"(ssr)/./node_modules/@waku/discovery/node_modules/@waku/proto/dist/generated/message.js\");\n/* harmony import */ var _generated_filter_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./generated/filter.js */ \"(ssr)/./node_modules/@waku/discovery/node_modules/@waku/proto/dist/generated/filter.js\");\n/* harmony import */ var _generated_topic_only_message_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./generated/topic_only_message.js */ \"(ssr)/./node_modules/@waku/discovery/node_modules/@waku/proto/dist/generated/topic_only_message.js\");\n/* harmony import */ var _generated_filter_v2_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./generated/filter_v2.js */ \"(ssr)/./node_modules/@waku/discovery/node_modules/@waku/proto/dist/generated/filter_v2.js\");\n/* harmony import */ var _generated_light_push_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./generated/light_push.js */ \"(ssr)/./node_modules/@waku/discovery/node_modules/@waku/proto/dist/generated/light_push.js\");\n/* harmony import */ var _generated_store_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./generated/store.js */ \"(ssr)/./node_modules/@waku/discovery/node_modules/@waku/proto/dist/generated/store.js\");\n/* harmony import */ var _generated_peer_exchange_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./generated/peer_exchange.js */ \"(ssr)/./node_modules/@waku/discovery/node_modules/@waku/proto/dist/generated/peer_exchange.js\");\n/* harmony import */ var _generated_metadata_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./generated/metadata.js */ \"(ssr)/./node_modules/@waku/discovery/node_modules/@waku/proto/dist/generated/metadata.js\");\n\n\n\n\n\n\n\n\n\n\n //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdha3UvZGlzY292ZXJ5L25vZGVfbW9kdWxlcy9Ad2FrdS9wcm90by9kaXN0L2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBd0Q7QUFDSjtBQUMwQjtBQUNUO0FBQ2Y7QUFDTTtBQUNDO0FBQ0o7QUFDTDtBQUNnQjtBQUNWLENBQzFELGlDQUFpQyIsInNvdXJjZXMiOlsid2VicGFjazovL2ZsdXNoLW5vdGVzLy4vbm9kZV9tb2R1bGVzL0B3YWt1L2Rpc2NvdmVyeS9ub2RlX21vZHVsZXMvQHdha3UvcHJvdG8vZGlzdC9pbmRleC5qcz8yZDdiIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCAqIGFzIHByb3RvX21lc3NhZ2UgZnJvbSBcIi4vZ2VuZXJhdGVkL21lc3NhZ2UuanNcIjtcbmV4cG9ydCB7IFdha3VNZXNzYWdlIH0gZnJvbSBcIi4vZ2VuZXJhdGVkL2ZpbHRlci5qc1wiO1xuZXhwb3J0ICogYXMgcHJvdG9fdG9waWNfb25seV9tZXNzYWdlIGZyb20gXCIuL2dlbmVyYXRlZC90b3BpY19vbmx5X21lc3NhZ2UuanNcIjtcbmV4cG9ydCB7IFRvcGljT25seU1lc3NhZ2UgfSBmcm9tIFwiLi9nZW5lcmF0ZWQvdG9waWNfb25seV9tZXNzYWdlLmpzXCI7XG5leHBvcnQgKiBhcyBwcm90b19maWx0ZXIgZnJvbSBcIi4vZ2VuZXJhdGVkL2ZpbHRlci5qc1wiO1xuZXhwb3J0ICogYXMgcHJvdG9fZmlsdGVyX3YyIGZyb20gXCIuL2dlbmVyYXRlZC9maWx0ZXJfdjIuanNcIjtcbmV4cG9ydCAqIGFzIHByb3RvX2xpZ2h0cHVzaCBmcm9tIFwiLi9nZW5lcmF0ZWQvbGlnaHRfcHVzaC5qc1wiO1xuZXhwb3J0IHsgUHVzaFJlc3BvbnNlIH0gZnJvbSBcIi4vZ2VuZXJhdGVkL2xpZ2h0X3B1c2guanNcIjtcbmV4cG9ydCAqIGFzIHByb3RvX3N0b3JlIGZyb20gXCIuL2dlbmVyYXRlZC9zdG9yZS5qc1wiO1xuZXhwb3J0ICogYXMgcHJvdG9fcGVlcl9leGNoYW5nZSBmcm9tIFwiLi9nZW5lcmF0ZWQvcGVlcl9leGNoYW5nZS5qc1wiO1xuZXhwb3J0ICogYXMgcHJvdG9fbWV0YWRhdGEgZnJvbSAnLi9nZW5lcmF0ZWQvbWV0YWRhdGEuanMnO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbInByb3RvX21lc3NhZ2UiLCJXYWt1TWVzc2FnZSIsInByb3RvX3RvcGljX29ubHlfbWVzc2FnZSIsIlRvcGljT25seU1lc3NhZ2UiLCJwcm90b19maWx0ZXIiLCJwcm90b19maWx0ZXJfdjIiLCJwcm90b19saWdodHB1c2giLCJQdXNoUmVzcG9uc2UiLCJwcm90b19zdG9yZSIsInByb3RvX3BlZXJfZXhjaGFuZ2UiLCJwcm90b19tZXRhZGF0YSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/discovery/node_modules/@waku/proto/dist/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/interfaces/dist/connection_manager.js":
/*!******************************************************************!*\
  !*** ./node_modules/@waku/interfaces/dist/connection_manager.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   EConnectionStateEvents: () => (/* binding */ EConnectionStateEvents),\n/* harmony export */   EPeersByDiscoveryEvents: () => (/* binding */ EPeersByDiscoveryEvents),\n/* harmony export */   Tags: () => (/* binding */ Tags)\n/* harmony export */ });\nvar Tags;\n(function(Tags) {\n    Tags[\"BOOTSTRAP\"] = \"bootstrap\";\n    Tags[\"PEER_EXCHANGE\"] = \"peer-exchange\";\n    Tags[\"LOCAL\"] = \"local-peer-cache\";\n})(Tags || (Tags = {}));\nvar EPeersByDiscoveryEvents;\n(function(EPeersByDiscoveryEvents) {\n    EPeersByDiscoveryEvents[\"PEER_DISCOVERY_BOOTSTRAP\"] = \"peer:discovery:bootstrap\";\n    EPeersByDiscoveryEvents[\"PEER_DISCOVERY_PEER_EXCHANGE\"] = \"peer:discovery:peer-exchange\";\n    EPeersByDiscoveryEvents[\"PEER_CONNECT_BOOTSTRAP\"] = \"peer:connected:bootstrap\";\n    EPeersByDiscoveryEvents[\"PEER_CONNECT_PEER_EXCHANGE\"] = \"peer:connected:peer-exchange\";\n})(EPeersByDiscoveryEvents || (EPeersByDiscoveryEvents = {}));\nvar EConnectionStateEvents;\n(function(EConnectionStateEvents) {\n    EConnectionStateEvents[\"CONNECTION_STATUS\"] = \"waku:connection\";\n})(EConnectionStateEvents || (EConnectionStateEvents = {})); //# sourceMappingURL=connection_manager.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdha3UvaW50ZXJmYWNlcy9kaXN0L2Nvbm5lY3Rpb25fbWFuYWdlci5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBTyxJQUFJQSxLQUFLO0FBQ2YsVUFBVUEsSUFBSTtJQUNYQSxJQUFJLENBQUMsWUFBWSxHQUFHO0lBQ3BCQSxJQUFJLENBQUMsZ0JBQWdCLEdBQUc7SUFDeEJBLElBQUksQ0FBQyxRQUFRLEdBQUc7QUFDcEIsR0FBR0EsUUFBU0EsQ0FBQUEsT0FBTyxDQUFDO0FBQ2IsSUFBSUMsd0JBQXdCO0FBQ2xDLFVBQVVBLHVCQUF1QjtJQUM5QkEsdUJBQXVCLENBQUMsMkJBQTJCLEdBQUc7SUFDdERBLHVCQUF1QixDQUFDLCtCQUErQixHQUFHO0lBQzFEQSx1QkFBdUIsQ0FBQyx5QkFBeUIsR0FBRztJQUNwREEsdUJBQXVCLENBQUMsNkJBQTZCLEdBQUc7QUFDNUQsR0FBR0EsMkJBQTRCQSxDQUFBQSwwQkFBMEIsQ0FBQztBQUNuRCxJQUFJQyx1QkFBdUI7QUFDakMsVUFBVUEsc0JBQXNCO0lBQzdCQSxzQkFBc0IsQ0FBQyxvQkFBb0IsR0FBRztBQUNsRCxHQUFHQSwwQkFBMkJBLENBQUFBLHlCQUF5QixDQUFDLEtBQ3hELDhDQUE4QyIsInNvdXJjZXMiOlsid2VicGFjazovL2ZsdXNoLW5vdGVzLy4vbm9kZV9tb2R1bGVzL0B3YWt1L2ludGVyZmFjZXMvZGlzdC9jb25uZWN0aW9uX21hbmFnZXIuanM/ZThlNCJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgdmFyIFRhZ3M7XG4oZnVuY3Rpb24gKFRhZ3MpIHtcbiAgICBUYWdzW1wiQk9PVFNUUkFQXCJdID0gXCJib290c3RyYXBcIjtcbiAgICBUYWdzW1wiUEVFUl9FWENIQU5HRVwiXSA9IFwicGVlci1leGNoYW5nZVwiO1xuICAgIFRhZ3NbXCJMT0NBTFwiXSA9IFwibG9jYWwtcGVlci1jYWNoZVwiO1xufSkoVGFncyB8fCAoVGFncyA9IHt9KSk7XG5leHBvcnQgdmFyIEVQZWVyc0J5RGlzY292ZXJ5RXZlbnRzO1xuKGZ1bmN0aW9uIChFUGVlcnNCeURpc2NvdmVyeUV2ZW50cykge1xuICAgIEVQZWVyc0J5RGlzY292ZXJ5RXZlbnRzW1wiUEVFUl9ESVNDT1ZFUllfQk9PVFNUUkFQXCJdID0gXCJwZWVyOmRpc2NvdmVyeTpib290c3RyYXBcIjtcbiAgICBFUGVlcnNCeURpc2NvdmVyeUV2ZW50c1tcIlBFRVJfRElTQ09WRVJZX1BFRVJfRVhDSEFOR0VcIl0gPSBcInBlZXI6ZGlzY292ZXJ5OnBlZXItZXhjaGFuZ2VcIjtcbiAgICBFUGVlcnNCeURpc2NvdmVyeUV2ZW50c1tcIlBFRVJfQ09OTkVDVF9CT09UU1RSQVBcIl0gPSBcInBlZXI6Y29ubmVjdGVkOmJvb3RzdHJhcFwiO1xuICAgIEVQZWVyc0J5RGlzY292ZXJ5RXZlbnRzW1wiUEVFUl9DT05ORUNUX1BFRVJfRVhDSEFOR0VcIl0gPSBcInBlZXI6Y29ubmVjdGVkOnBlZXItZXhjaGFuZ2VcIjtcbn0pKEVQZWVyc0J5RGlzY292ZXJ5RXZlbnRzIHx8IChFUGVlcnNCeURpc2NvdmVyeUV2ZW50cyA9IHt9KSk7XG5leHBvcnQgdmFyIEVDb25uZWN0aW9uU3RhdGVFdmVudHM7XG4oZnVuY3Rpb24gKEVDb25uZWN0aW9uU3RhdGVFdmVudHMpIHtcbiAgICBFQ29ubmVjdGlvblN0YXRlRXZlbnRzW1wiQ09OTkVDVElPTl9TVEFUVVNcIl0gPSBcIndha3U6Y29ubmVjdGlvblwiO1xufSkoRUNvbm5lY3Rpb25TdGF0ZUV2ZW50cyB8fCAoRUNvbm5lY3Rpb25TdGF0ZUV2ZW50cyA9IHt9KSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jb25uZWN0aW9uX21hbmFnZXIuanMubWFwIl0sIm5hbWVzIjpbIlRhZ3MiLCJFUGVlcnNCeURpc2NvdmVyeUV2ZW50cyIsIkVDb25uZWN0aW9uU3RhdGVFdmVudHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/interfaces/dist/connection_manager.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/interfaces/dist/constants.js":
/*!*********************************************************!*\
  !*** ./node_modules/@waku/interfaces/dist/constants.js ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DEFAULT_CLUSTER_ID: () => (/* binding */ DEFAULT_CLUSTER_ID),\n/* harmony export */   DefaultPubsubTopic: () => (/* binding */ DefaultPubsubTopic)\n/* harmony export */ });\n/**\n * DefaultPubsubTopic is the default gossipsub topic to use for Waku.\n */ const DefaultPubsubTopic = \"/waku/2/default-waku/proto\";\n/**\n * The default cluster ID for The Waku Network\n */ const DEFAULT_CLUSTER_ID = 1; //# sourceMappingURL=constants.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdha3UvaW50ZXJmYWNlcy9kaXN0L2NvbnN0YW50cy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBOztDQUVDLEdBQ00sTUFBTUEscUJBQXFCLDZCQUE2QjtBQUMvRDs7Q0FFQyxHQUNNLE1BQU1DLHFCQUFxQixFQUFFLENBQ3BDLHFDQUFxQyIsInNvdXJjZXMiOlsid2VicGFjazovL2ZsdXNoLW5vdGVzLy4vbm9kZV9tb2R1bGVzL0B3YWt1L2ludGVyZmFjZXMvZGlzdC9jb25zdGFudHMuanM/MmQyNyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIERlZmF1bHRQdWJzdWJUb3BpYyBpcyB0aGUgZGVmYXVsdCBnb3NzaXBzdWIgdG9waWMgdG8gdXNlIGZvciBXYWt1LlxuICovXG5leHBvcnQgY29uc3QgRGVmYXVsdFB1YnN1YlRvcGljID0gXCIvd2FrdS8yL2RlZmF1bHQtd2FrdS9wcm90b1wiO1xuLyoqXG4gKiBUaGUgZGVmYXVsdCBjbHVzdGVyIElEIGZvciBUaGUgV2FrdSBOZXR3b3JrXG4gKi9cbmV4cG9ydCBjb25zdCBERUZBVUxUX0NMVVNURVJfSUQgPSAxO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y29uc3RhbnRzLmpzLm1hcCJdLCJuYW1lcyI6WyJEZWZhdWx0UHVic3ViVG9waWMiLCJERUZBVUxUX0NMVVNURVJfSUQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/interfaces/dist/constants.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/interfaces/dist/dns_discovery.js":
/*!*************************************************************!*\
  !*** ./node_modules/@waku/interfaces/dist/dns_discovery.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n //# sourceMappingURL=dns_discovery.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdha3UvaW50ZXJmYWNlcy9kaXN0L2Ruc19kaXNjb3ZlcnkuanMiLCJtYXBwaW5ncyI6IjtBQUFVLENBQ1YseUNBQXlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZmx1c2gtbm90ZXMvLi9ub2RlX21vZHVsZXMvQHdha3UvaW50ZXJmYWNlcy9kaXN0L2Ruc19kaXNjb3ZlcnkuanM/NmJhOCJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQge307XG4vLyMgc291cmNlTWFwcGluZ1VSTD1kbnNfZGlzY292ZXJ5LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/interfaces/dist/dns_discovery.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/interfaces/dist/enr.js":
/*!***************************************************!*\
  !*** ./node_modules/@waku/interfaces/dist/enr.js ***!
  \***************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n //# sourceMappingURL=enr.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdha3UvaW50ZXJmYWNlcy9kaXN0L2Vuci5qcyIsIm1hcHBpbmdzIjoiO0FBQVUsQ0FDViwrQkFBK0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mbHVzaC1ub3Rlcy8uL25vZGVfbW9kdWxlcy9Ad2FrdS9pbnRlcmZhY2VzL2Rpc3QvZW5yLmpzPzEzNGYiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHt9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZW5yLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/interfaces/dist/enr.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/interfaces/dist/filter.js":
/*!******************************************************!*\
  !*** ./node_modules/@waku/interfaces/dist/filter.js ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n //# sourceMappingURL=filter.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdha3UvaW50ZXJmYWNlcy9kaXN0L2ZpbHRlci5qcyIsIm1hcHBpbmdzIjoiO0FBQVUsQ0FDVixrQ0FBa0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mbHVzaC1ub3Rlcy8uL25vZGVfbW9kdWxlcy9Ad2FrdS9pbnRlcmZhY2VzL2Rpc3QvZmlsdGVyLmpzPzYzNzgiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHt9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZmlsdGVyLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/interfaces/dist/filter.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/interfaces/dist/index.js":
/*!*****************************************************!*\
  !*** ./node_modules/@waku/interfaces/dist/index.js ***!
  \*****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DEFAULT_CLUSTER_ID: () => (/* reexport safe */ _constants_js__WEBPACK_IMPORTED_MODULE_17__.DEFAULT_CLUSTER_ID),\n/* harmony export */   DefaultPubsubTopic: () => (/* reexport safe */ _constants_js__WEBPACK_IMPORTED_MODULE_17__.DefaultPubsubTopic),\n/* harmony export */   EConnectionStateEvents: () => (/* reexport safe */ _connection_manager_js__WEBPACK_IMPORTED_MODULE_9__.EConnectionStateEvents),\n/* harmony export */   EPeersByDiscoveryEvents: () => (/* reexport safe */ _connection_manager_js__WEBPACK_IMPORTED_MODULE_9__.EPeersByDiscoveryEvents),\n/* harmony export */   PageDirection: () => (/* reexport safe */ _store_js__WEBPACK_IMPORTED_MODULE_7__.PageDirection),\n/* harmony export */   ProtocolError: () => (/* reexport safe */ _protocols_js__WEBPACK_IMPORTED_MODULE_5__.ProtocolError),\n/* harmony export */   Protocols: () => (/* reexport safe */ _protocols_js__WEBPACK_IMPORTED_MODULE_5__.Protocols),\n/* harmony export */   Tags: () => (/* reexport safe */ _connection_manager_js__WEBPACK_IMPORTED_MODULE_9__.Tags)\n/* harmony export */ });\n/* harmony import */ var _enr_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./enr.js */ \"(ssr)/./node_modules/@waku/interfaces/dist/enr.js\");\n/* harmony import */ var _filter_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./filter.js */ \"(ssr)/./node_modules/@waku/interfaces/dist/filter.js\");\n/* harmony import */ var _light_push_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./light_push.js */ \"(ssr)/./node_modules/@waku/interfaces/dist/light_push.js\");\n/* harmony import */ var _message_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./message.js */ \"(ssr)/./node_modules/@waku/interfaces/dist/message.js\");\n/* harmony import */ var _peer_exchange_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./peer_exchange.js */ \"(ssr)/./node_modules/@waku/interfaces/dist/peer_exchange.js\");\n/* harmony import */ var _protocols_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./protocols.js */ \"(ssr)/./node_modules/@waku/interfaces/dist/protocols.js\");\n/* harmony import */ var _relay_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./relay.js */ \"(ssr)/./node_modules/@waku/interfaces/dist/relay.js\");\n/* harmony import */ var _store_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./store.js */ \"(ssr)/./node_modules/@waku/interfaces/dist/store.js\");\n/* harmony import */ var _waku_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./waku.js */ \"(ssr)/./node_modules/@waku/interfaces/dist/waku.js\");\n/* harmony import */ var _connection_manager_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./connection_manager.js */ \"(ssr)/./node_modules/@waku/interfaces/dist/connection_manager.js\");\n/* harmony import */ var _sender_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./sender.js */ \"(ssr)/./node_modules/@waku/interfaces/dist/sender.js\");\n/* harmony import */ var _receiver_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./receiver.js */ \"(ssr)/./node_modules/@waku/interfaces/dist/receiver.js\");\n/* harmony import */ var _misc_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./misc.js */ \"(ssr)/./node_modules/@waku/interfaces/dist/misc.js\");\n/* harmony import */ var _libp2p_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./libp2p.js */ \"(ssr)/./node_modules/@waku/interfaces/dist/libp2p.js\");\n/* harmony import */ var _keep_alive_manager_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./keep_alive_manager.js */ \"(ssr)/./node_modules/@waku/interfaces/dist/keep_alive_manager.js\");\n/* harmony import */ var _dns_discovery_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./dns_discovery.js */ \"(ssr)/./node_modules/@waku/interfaces/dist/dns_discovery.js\");\n/* harmony import */ var _metadata_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./metadata.js */ \"(ssr)/./node_modules/@waku/interfaces/dist/metadata.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./constants.js */ \"(ssr)/./node_modules/@waku/interfaces/dist/constants.js\");\n/* harmony import */ var _local_storage_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./local_storage.js */ \"(ssr)/./node_modules/@waku/interfaces/dist/local_storage.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdha3UvaW50ZXJmYWNlcy9kaXN0L2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUF5QjtBQUNHO0FBQ0k7QUFDSDtBQUNNO0FBQ0o7QUFDSjtBQUNBO0FBQ0Q7QUFDYztBQUNaO0FBQ0U7QUFDSjtBQUNFO0FBQ1k7QUFDTDtBQUNMO0FBQ0M7QUFDSSxDQUNuQyxpQ0FBaUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mbHVzaC1ub3Rlcy8uL25vZGVfbW9kdWxlcy9Ad2FrdS9pbnRlcmZhY2VzL2Rpc3QvaW5kZXguanM/YzA2NiJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgKiBmcm9tIFwiLi9lbnIuanNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL2ZpbHRlci5qc1wiO1xuZXhwb3J0ICogZnJvbSBcIi4vbGlnaHRfcHVzaC5qc1wiO1xuZXhwb3J0ICogZnJvbSBcIi4vbWVzc2FnZS5qc1wiO1xuZXhwb3J0ICogZnJvbSBcIi4vcGVlcl9leGNoYW5nZS5qc1wiO1xuZXhwb3J0ICogZnJvbSBcIi4vcHJvdG9jb2xzLmpzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9yZWxheS5qc1wiO1xuZXhwb3J0ICogZnJvbSBcIi4vc3RvcmUuanNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL3dha3UuanNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL2Nvbm5lY3Rpb25fbWFuYWdlci5qc1wiO1xuZXhwb3J0ICogZnJvbSBcIi4vc2VuZGVyLmpzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9yZWNlaXZlci5qc1wiO1xuZXhwb3J0ICogZnJvbSBcIi4vbWlzYy5qc1wiO1xuZXhwb3J0ICogZnJvbSBcIi4vbGlicDJwLmpzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9rZWVwX2FsaXZlX21hbmFnZXIuanNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL2Ruc19kaXNjb3ZlcnkuanNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL21ldGFkYXRhLmpzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9jb25zdGFudHMuanNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL2xvY2FsX3N0b3JhZ2UuanNcIjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/interfaces/dist/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/interfaces/dist/keep_alive_manager.js":
/*!******************************************************************!*\
  !*** ./node_modules/@waku/interfaces/dist/keep_alive_manager.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n //# sourceMappingURL=keep_alive_manager.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdha3UvaW50ZXJmYWNlcy9kaXN0L2tlZXBfYWxpdmVfbWFuYWdlci5qcyIsIm1hcHBpbmdzIjoiO0FBQVUsQ0FDViw4Q0FBOEMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mbHVzaC1ub3Rlcy8uL25vZGVfbW9kdWxlcy9Ad2FrdS9pbnRlcmZhY2VzL2Rpc3Qva2VlcF9hbGl2ZV9tYW5hZ2VyLmpzPzg0NWUiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHt9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9a2VlcF9hbGl2ZV9tYW5hZ2VyLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/interfaces/dist/keep_alive_manager.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/interfaces/dist/libp2p.js":
/*!******************************************************!*\
  !*** ./node_modules/@waku/interfaces/dist/libp2p.js ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n //# sourceMappingURL=libp2p.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdha3UvaW50ZXJmYWNlcy9kaXN0L2xpYnAycC5qcyIsIm1hcHBpbmdzIjoiO0FBQVUsQ0FDVixrQ0FBa0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mbHVzaC1ub3Rlcy8uL25vZGVfbW9kdWxlcy9Ad2FrdS9pbnRlcmZhY2VzL2Rpc3QvbGlicDJwLmpzP2Y1MjUiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHt9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bGlicDJwLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/interfaces/dist/libp2p.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/interfaces/dist/light_push.js":
/*!**********************************************************!*\
  !*** ./node_modules/@waku/interfaces/dist/light_push.js ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n //# sourceMappingURL=light_push.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdha3UvaW50ZXJmYWNlcy9kaXN0L2xpZ2h0X3B1c2guanMiLCJtYXBwaW5ncyI6IjtBQUFVLENBQ1Ysc0NBQXNDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZmx1c2gtbm90ZXMvLi9ub2RlX21vZHVsZXMvQHdha3UvaW50ZXJmYWNlcy9kaXN0L2xpZ2h0X3B1c2guanM/N2NmZCJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQge307XG4vLyMgc291cmNlTWFwcGluZ1VSTD1saWdodF9wdXNoLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/interfaces/dist/light_push.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/interfaces/dist/local_storage.js":
/*!*************************************************************!*\
  !*** ./node_modules/@waku/interfaces/dist/local_storage.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n //# sourceMappingURL=local_storage.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdha3UvaW50ZXJmYWNlcy9kaXN0L2xvY2FsX3N0b3JhZ2UuanMiLCJtYXBwaW5ncyI6IjtBQUFVLENBQ1YseUNBQXlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZmx1c2gtbm90ZXMvLi9ub2RlX21vZHVsZXMvQHdha3UvaW50ZXJmYWNlcy9kaXN0L2xvY2FsX3N0b3JhZ2UuanM/ZjY0ZiJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQge307XG4vLyMgc291cmNlTWFwcGluZ1VSTD1sb2NhbF9zdG9yYWdlLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/interfaces/dist/local_storage.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/interfaces/dist/message.js":
/*!*******************************************************!*\
  !*** ./node_modules/@waku/interfaces/dist/message.js ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n //# sourceMappingURL=message.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdha3UvaW50ZXJmYWNlcy9kaXN0L21lc3NhZ2UuanMiLCJtYXBwaW5ncyI6IjtBQUFVLENBQ1YsbUNBQW1DIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZmx1c2gtbm90ZXMvLi9ub2RlX21vZHVsZXMvQHdha3UvaW50ZXJmYWNlcy9kaXN0L21lc3NhZ2UuanM/MzYxZSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQge307XG4vLyMgc291cmNlTWFwcGluZ1VSTD1tZXNzYWdlLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/interfaces/dist/message.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/interfaces/dist/metadata.js":
/*!********************************************************!*\
  !*** ./node_modules/@waku/interfaces/dist/metadata.js ***!
  \********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n //# sourceMappingURL=metadata.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdha3UvaW50ZXJmYWNlcy9kaXN0L21ldGFkYXRhLmpzIiwibWFwcGluZ3MiOiI7QUFBVSxDQUNWLG9DQUFvQyIsInNvdXJjZXMiOlsid2VicGFjazovL2ZsdXNoLW5vdGVzLy4vbm9kZV9tb2R1bGVzL0B3YWt1L2ludGVyZmFjZXMvZGlzdC9tZXRhZGF0YS5qcz80ZWNlIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCB7fTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPW1ldGFkYXRhLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/interfaces/dist/metadata.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/interfaces/dist/misc.js":
/*!****************************************************!*\
  !*** ./node_modules/@waku/interfaces/dist/misc.js ***!
  \****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n //# sourceMappingURL=misc.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdha3UvaW50ZXJmYWNlcy9kaXN0L21pc2MuanMiLCJtYXBwaW5ncyI6IjtBQUFVLENBQ1YsZ0NBQWdDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZmx1c2gtbm90ZXMvLi9ub2RlX21vZHVsZXMvQHdha3UvaW50ZXJmYWNlcy9kaXN0L21pc2MuanM/ZjJhOSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQge307XG4vLyMgc291cmNlTWFwcGluZ1VSTD1taXNjLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/interfaces/dist/misc.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/interfaces/dist/peer_exchange.js":
/*!*************************************************************!*\
  !*** ./node_modules/@waku/interfaces/dist/peer_exchange.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n //# sourceMappingURL=peer_exchange.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdha3UvaW50ZXJmYWNlcy9kaXN0L3BlZXJfZXhjaGFuZ2UuanMiLCJtYXBwaW5ncyI6IjtBQUFVLENBQ1YseUNBQXlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZmx1c2gtbm90ZXMvLi9ub2RlX21vZHVsZXMvQHdha3UvaW50ZXJmYWNlcy9kaXN0L3BlZXJfZXhjaGFuZ2UuanM/ZTMzZiJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQge307XG4vLyMgc291cmNlTWFwcGluZ1VSTD1wZWVyX2V4Y2hhbmdlLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/interfaces/dist/peer_exchange.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/interfaces/dist/protocols.js":
/*!*********************************************************!*\
  !*** ./node_modules/@waku/interfaces/dist/protocols.js ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ProtocolError: () => (/* binding */ ProtocolError),\n/* harmony export */   Protocols: () => (/* binding */ Protocols)\n/* harmony export */ });\nvar Protocols;\n(function(Protocols) {\n    Protocols[\"Relay\"] = \"relay\";\n    Protocols[\"Store\"] = \"store\";\n    Protocols[\"LightPush\"] = \"lightpush\";\n    Protocols[\"Filter\"] = \"filter\";\n})(Protocols || (Protocols = {}));\nvar ProtocolError;\n(function(ProtocolError) {\n    /** Could not determine the origin of the fault. Best to check connectivity and try again */ ProtocolError[\"GENERIC_FAIL\"] = \"Generic error\";\n    /**\n     * Failure to protobuf encode the message. This is not recoverable and needs\n     * further investigation.\n     */ ProtocolError[\"ENCODE_FAILED\"] = \"Failed to encode\";\n    /**\n     * Failure to protobuf decode the message. May be due to a remote peer issue,\n     * ensuring that messages are sent via several peer enable mitigation of this error.\n     */ ProtocolError[\"DECODE_FAILED\"] = \"Failed to decode\";\n    /**\n     * The message payload is empty, making the message invalid. Ensure that a non-empty\n     * payload is set on the outgoing message.\n     */ ProtocolError[\"EMPTY_PAYLOAD\"] = \"Payload is empty\";\n    /**\n     * The message size is above the maximum message size allowed on the Waku Network.\n     * Compressing the message or using an alternative strategy for large messages is recommended.\n     */ ProtocolError[\"SIZE_TOO_BIG\"] = \"Size is too big\";\n    /**\n     * The PubsubTopic passed to the send function is not configured on the Waku node.\n     * Please ensure that the PubsubTopic is used when initializing the Waku node.\n     */ ProtocolError[\"TOPIC_NOT_CONFIGURED\"] = \"Topic not configured\";\n    /**\n     * Failure to find a peer with suitable protocols. This may due to a connection issue.\n     * Mitigation can be: retrying after a given time period, display connectivity issue\n     * to user or listening for `peer:connected:bootstrap` or `peer:connected:peer-exchange`\n     * on the connection manager before retrying.\n     */ ProtocolError[\"NO_PEER_AVAILABLE\"] = \"No peer available\";\n    /**\n     * The remote peer did not behave as expected. Mitigation for `NO_PEER_AVAILABLE`\n     * or `DECODE_FAILED` can be used.\n     */ ProtocolError[\"REMOTE_PEER_FAULT\"] = \"Remote peer fault\";\n    /**\n     * The remote peer rejected the message. Information provided by the remote peer\n     * is logged. Review message validity, or mitigation for `NO_PEER_AVAILABLE`\n     * or `DECODE_FAILED` can be used.\n     */ ProtocolError[\"REMOTE_PEER_REJECTED\"] = \"Remote peer rejected\";\n    /**\n     * The protocol request timed out without a response. This may be due to a connection issue.\n     * Mitigation can be: retrying after a given time period\n     */ ProtocolError[\"REQUEST_TIMEOUT\"] = \"Request timeout\";\n})(ProtocolError || (ProtocolError = {})); //# sourceMappingURL=protocols.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdha3UvaW50ZXJmYWNlcy9kaXN0L3Byb3RvY29scy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFPLElBQUlBLFVBQVU7QUFDcEIsVUFBVUEsU0FBUztJQUNoQkEsU0FBUyxDQUFDLFFBQVEsR0FBRztJQUNyQkEsU0FBUyxDQUFDLFFBQVEsR0FBRztJQUNyQkEsU0FBUyxDQUFDLFlBQVksR0FBRztJQUN6QkEsU0FBUyxDQUFDLFNBQVMsR0FBRztBQUMxQixHQUFHQSxhQUFjQSxDQUFBQSxZQUFZLENBQUM7QUFDdkIsSUFBSUMsY0FBYztBQUN4QixVQUFVQSxhQUFhO0lBQ3BCLDBGQUEwRixHQUMxRkEsYUFBYSxDQUFDLGVBQWUsR0FBRztJQUNoQzs7O0tBR0MsR0FDREEsYUFBYSxDQUFDLGdCQUFnQixHQUFHO0lBQ2pDOzs7S0FHQyxHQUNEQSxhQUFhLENBQUMsZ0JBQWdCLEdBQUc7SUFDakM7OztLQUdDLEdBQ0RBLGFBQWEsQ0FBQyxnQkFBZ0IsR0FBRztJQUNqQzs7O0tBR0MsR0FDREEsYUFBYSxDQUFDLGVBQWUsR0FBRztJQUNoQzs7O0tBR0MsR0FDREEsYUFBYSxDQUFDLHVCQUF1QixHQUFHO0lBQ3hDOzs7OztLQUtDLEdBQ0RBLGFBQWEsQ0FBQyxvQkFBb0IsR0FBRztJQUNyQzs7O0tBR0MsR0FDREEsYUFBYSxDQUFDLG9CQUFvQixHQUFHO0lBQ3JDOzs7O0tBSUMsR0FDREEsYUFBYSxDQUFDLHVCQUF1QixHQUFHO0lBQ3hDOzs7S0FHQyxHQUNEQSxhQUFhLENBQUMsa0JBQWtCLEdBQUc7QUFDdkMsR0FBR0EsaUJBQWtCQSxDQUFBQSxnQkFBZ0IsQ0FBQyxLQUN0QyxxQ0FBcUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mbHVzaC1ub3Rlcy8uL25vZGVfbW9kdWxlcy9Ad2FrdS9pbnRlcmZhY2VzL2Rpc3QvcHJvdG9jb2xzLmpzPzNmNWYiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHZhciBQcm90b2NvbHM7XG4oZnVuY3Rpb24gKFByb3RvY29scykge1xuICAgIFByb3RvY29sc1tcIlJlbGF5XCJdID0gXCJyZWxheVwiO1xuICAgIFByb3RvY29sc1tcIlN0b3JlXCJdID0gXCJzdG9yZVwiO1xuICAgIFByb3RvY29sc1tcIkxpZ2h0UHVzaFwiXSA9IFwibGlnaHRwdXNoXCI7XG4gICAgUHJvdG9jb2xzW1wiRmlsdGVyXCJdID0gXCJmaWx0ZXJcIjtcbn0pKFByb3RvY29scyB8fCAoUHJvdG9jb2xzID0ge30pKTtcbmV4cG9ydCB2YXIgUHJvdG9jb2xFcnJvcjtcbihmdW5jdGlvbiAoUHJvdG9jb2xFcnJvcikge1xuICAgIC8qKiBDb3VsZCBub3QgZGV0ZXJtaW5lIHRoZSBvcmlnaW4gb2YgdGhlIGZhdWx0LiBCZXN0IHRvIGNoZWNrIGNvbm5lY3Rpdml0eSBhbmQgdHJ5IGFnYWluICovXG4gICAgUHJvdG9jb2xFcnJvcltcIkdFTkVSSUNfRkFJTFwiXSA9IFwiR2VuZXJpYyBlcnJvclwiO1xuICAgIC8qKlxuICAgICAqIEZhaWx1cmUgdG8gcHJvdG9idWYgZW5jb2RlIHRoZSBtZXNzYWdlLiBUaGlzIGlzIG5vdCByZWNvdmVyYWJsZSBhbmQgbmVlZHNcbiAgICAgKiBmdXJ0aGVyIGludmVzdGlnYXRpb24uXG4gICAgICovXG4gICAgUHJvdG9jb2xFcnJvcltcIkVOQ09ERV9GQUlMRURcIl0gPSBcIkZhaWxlZCB0byBlbmNvZGVcIjtcbiAgICAvKipcbiAgICAgKiBGYWlsdXJlIHRvIHByb3RvYnVmIGRlY29kZSB0aGUgbWVzc2FnZS4gTWF5IGJlIGR1ZSB0byBhIHJlbW90ZSBwZWVyIGlzc3VlLFxuICAgICAqIGVuc3VyaW5nIHRoYXQgbWVzc2FnZXMgYXJlIHNlbnQgdmlhIHNldmVyYWwgcGVlciBlbmFibGUgbWl0aWdhdGlvbiBvZiB0aGlzIGVycm9yLlxuICAgICAqL1xuICAgIFByb3RvY29sRXJyb3JbXCJERUNPREVfRkFJTEVEXCJdID0gXCJGYWlsZWQgdG8gZGVjb2RlXCI7XG4gICAgLyoqXG4gICAgICogVGhlIG1lc3NhZ2UgcGF5bG9hZCBpcyBlbXB0eSwgbWFraW5nIHRoZSBtZXNzYWdlIGludmFsaWQuIEVuc3VyZSB0aGF0IGEgbm9uLWVtcHR5XG4gICAgICogcGF5bG9hZCBpcyBzZXQgb24gdGhlIG91dGdvaW5nIG1lc3NhZ2UuXG4gICAgICovXG4gICAgUHJvdG9jb2xFcnJvcltcIkVNUFRZX1BBWUxPQURcIl0gPSBcIlBheWxvYWQgaXMgZW1wdHlcIjtcbiAgICAvKipcbiAgICAgKiBUaGUgbWVzc2FnZSBzaXplIGlzIGFib3ZlIHRoZSBtYXhpbXVtIG1lc3NhZ2Ugc2l6ZSBhbGxvd2VkIG9uIHRoZSBXYWt1IE5ldHdvcmsuXG4gICAgICogQ29tcHJlc3NpbmcgdGhlIG1lc3NhZ2Ugb3IgdXNpbmcgYW4gYWx0ZXJuYXRpdmUgc3RyYXRlZ3kgZm9yIGxhcmdlIG1lc3NhZ2VzIGlzIHJlY29tbWVuZGVkLlxuICAgICAqL1xuICAgIFByb3RvY29sRXJyb3JbXCJTSVpFX1RPT19CSUdcIl0gPSBcIlNpemUgaXMgdG9vIGJpZ1wiO1xuICAgIC8qKlxuICAgICAqIFRoZSBQdWJzdWJUb3BpYyBwYXNzZWQgdG8gdGhlIHNlbmQgZnVuY3Rpb24gaXMgbm90IGNvbmZpZ3VyZWQgb24gdGhlIFdha3Ugbm9kZS5cbiAgICAgKiBQbGVhc2UgZW5zdXJlIHRoYXQgdGhlIFB1YnN1YlRvcGljIGlzIHVzZWQgd2hlbiBpbml0aWFsaXppbmcgdGhlIFdha3Ugbm9kZS5cbiAgICAgKi9cbiAgICBQcm90b2NvbEVycm9yW1wiVE9QSUNfTk9UX0NPTkZJR1VSRURcIl0gPSBcIlRvcGljIG5vdCBjb25maWd1cmVkXCI7XG4gICAgLyoqXG4gICAgICogRmFpbHVyZSB0byBmaW5kIGEgcGVlciB3aXRoIHN1aXRhYmxlIHByb3RvY29scy4gVGhpcyBtYXkgZHVlIHRvIGEgY29ubmVjdGlvbiBpc3N1ZS5cbiAgICAgKiBNaXRpZ2F0aW9uIGNhbiBiZTogcmV0cnlpbmcgYWZ0ZXIgYSBnaXZlbiB0aW1lIHBlcmlvZCwgZGlzcGxheSBjb25uZWN0aXZpdHkgaXNzdWVcbiAgICAgKiB0byB1c2VyIG9yIGxpc3RlbmluZyBmb3IgYHBlZXI6Y29ubmVjdGVkOmJvb3RzdHJhcGAgb3IgYHBlZXI6Y29ubmVjdGVkOnBlZXItZXhjaGFuZ2VgXG4gICAgICogb24gdGhlIGNvbm5lY3Rpb24gbWFuYWdlciBiZWZvcmUgcmV0cnlpbmcuXG4gICAgICovXG4gICAgUHJvdG9jb2xFcnJvcltcIk5PX1BFRVJfQVZBSUxBQkxFXCJdID0gXCJObyBwZWVyIGF2YWlsYWJsZVwiO1xuICAgIC8qKlxuICAgICAqIFRoZSByZW1vdGUgcGVlciBkaWQgbm90IGJlaGF2ZSBhcyBleHBlY3RlZC4gTWl0aWdhdGlvbiBmb3IgYE5PX1BFRVJfQVZBSUxBQkxFYFxuICAgICAqIG9yIGBERUNPREVfRkFJTEVEYCBjYW4gYmUgdXNlZC5cbiAgICAgKi9cbiAgICBQcm90b2NvbEVycm9yW1wiUkVNT1RFX1BFRVJfRkFVTFRcIl0gPSBcIlJlbW90ZSBwZWVyIGZhdWx0XCI7XG4gICAgLyoqXG4gICAgICogVGhlIHJlbW90ZSBwZWVyIHJlamVjdGVkIHRoZSBtZXNzYWdlLiBJbmZvcm1hdGlvbiBwcm92aWRlZCBieSB0aGUgcmVtb3RlIHBlZXJcbiAgICAgKiBpcyBsb2dnZWQuIFJldmlldyBtZXNzYWdlIHZhbGlkaXR5LCBvciBtaXRpZ2F0aW9uIGZvciBgTk9fUEVFUl9BVkFJTEFCTEVgXG4gICAgICogb3IgYERFQ09ERV9GQUlMRURgIGNhbiBiZSB1c2VkLlxuICAgICAqL1xuICAgIFByb3RvY29sRXJyb3JbXCJSRU1PVEVfUEVFUl9SRUpFQ1RFRFwiXSA9IFwiUmVtb3RlIHBlZXIgcmVqZWN0ZWRcIjtcbiAgICAvKipcbiAgICAgKiBUaGUgcHJvdG9jb2wgcmVxdWVzdCB0aW1lZCBvdXQgd2l0aG91dCBhIHJlc3BvbnNlLiBUaGlzIG1heSBiZSBkdWUgdG8gYSBjb25uZWN0aW9uIGlzc3VlLlxuICAgICAqIE1pdGlnYXRpb24gY2FuIGJlOiByZXRyeWluZyBhZnRlciBhIGdpdmVuIHRpbWUgcGVyaW9kXG4gICAgICovXG4gICAgUHJvdG9jb2xFcnJvcltcIlJFUVVFU1RfVElNRU9VVFwiXSA9IFwiUmVxdWVzdCB0aW1lb3V0XCI7XG59KShQcm90b2NvbEVycm9yIHx8IChQcm90b2NvbEVycm9yID0ge30pKTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXByb3RvY29scy5qcy5tYXAiXSwibmFtZXMiOlsiUHJvdG9jb2xzIiwiUHJvdG9jb2xFcnJvciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/interfaces/dist/protocols.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/interfaces/dist/receiver.js":
/*!********************************************************!*\
  !*** ./node_modules/@waku/interfaces/dist/receiver.js ***!
  \********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n //# sourceMappingURL=receiver.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdha3UvaW50ZXJmYWNlcy9kaXN0L3JlY2VpdmVyLmpzIiwibWFwcGluZ3MiOiI7QUFBVSxDQUNWLG9DQUFvQyIsInNvdXJjZXMiOlsid2VicGFjazovL2ZsdXNoLW5vdGVzLy4vbm9kZV9tb2R1bGVzL0B3YWt1L2ludGVyZmFjZXMvZGlzdC9yZWNlaXZlci5qcz9kMTcyIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCB7fTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXJlY2VpdmVyLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/interfaces/dist/receiver.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/interfaces/dist/relay.js":
/*!*****************************************************!*\
  !*** ./node_modules/@waku/interfaces/dist/relay.js ***!
  \*****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n //# sourceMappingURL=relay.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdha3UvaW50ZXJmYWNlcy9kaXN0L3JlbGF5LmpzIiwibWFwcGluZ3MiOiI7QUFBVSxDQUNWLGlDQUFpQyIsInNvdXJjZXMiOlsid2VicGFjazovL2ZsdXNoLW5vdGVzLy4vbm9kZV9tb2R1bGVzL0B3YWt1L2ludGVyZmFjZXMvZGlzdC9yZWxheS5qcz82ODA0Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCB7fTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXJlbGF5LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/interfaces/dist/relay.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/interfaces/dist/sender.js":
/*!******************************************************!*\
  !*** ./node_modules/@waku/interfaces/dist/sender.js ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n //# sourceMappingURL=sender.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdha3UvaW50ZXJmYWNlcy9kaXN0L3NlbmRlci5qcyIsIm1hcHBpbmdzIjoiO0FBQVUsQ0FDVixrQ0FBa0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mbHVzaC1ub3Rlcy8uL25vZGVfbW9kdWxlcy9Ad2FrdS9pbnRlcmZhY2VzL2Rpc3Qvc2VuZGVyLmpzPzIzYWYiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHt9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c2VuZGVyLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/interfaces/dist/sender.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/interfaces/dist/store.js":
/*!*****************************************************!*\
  !*** ./node_modules/@waku/interfaces/dist/store.js ***!
  \*****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PageDirection: () => (/* binding */ PageDirection)\n/* harmony export */ });\nvar PageDirection;\n(function(PageDirection) {\n    PageDirection[\"BACKWARD\"] = \"backward\";\n    PageDirection[\"FORWARD\"] = \"forward\";\n})(PageDirection || (PageDirection = {})); //# sourceMappingURL=store.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdha3UvaW50ZXJmYWNlcy9kaXN0L3N0b3JlLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBTyxJQUFJQSxjQUFjO0FBQ3hCLFVBQVVBLGFBQWE7SUFDcEJBLGFBQWEsQ0FBQyxXQUFXLEdBQUc7SUFDNUJBLGFBQWEsQ0FBQyxVQUFVLEdBQUc7QUFDL0IsR0FBR0EsaUJBQWtCQSxDQUFBQSxnQkFBZ0IsQ0FBQyxLQUN0QyxpQ0FBaUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mbHVzaC1ub3Rlcy8uL25vZGVfbW9kdWxlcy9Ad2FrdS9pbnRlcmZhY2VzL2Rpc3Qvc3RvcmUuanM/MmJhOCJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgdmFyIFBhZ2VEaXJlY3Rpb247XG4oZnVuY3Rpb24gKFBhZ2VEaXJlY3Rpb24pIHtcbiAgICBQYWdlRGlyZWN0aW9uW1wiQkFDS1dBUkRcIl0gPSBcImJhY2t3YXJkXCI7XG4gICAgUGFnZURpcmVjdGlvbltcIkZPUldBUkRcIl0gPSBcImZvcndhcmRcIjtcbn0pKFBhZ2VEaXJlY3Rpb24gfHwgKFBhZ2VEaXJlY3Rpb24gPSB7fSkpO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c3RvcmUuanMubWFwIl0sIm5hbWVzIjpbIlBhZ2VEaXJlY3Rpb24iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/interfaces/dist/store.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/interfaces/dist/waku.js":
/*!****************************************************!*\
  !*** ./node_modules/@waku/interfaces/dist/waku.js ***!
  \****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n //# sourceMappingURL=waku.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdha3UvaW50ZXJmYWNlcy9kaXN0L3dha3UuanMiLCJtYXBwaW5ncyI6IjtBQUFVLENBQ1YsZ0NBQWdDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZmx1c2gtbm90ZXMvLi9ub2RlX21vZHVsZXMvQHdha3UvaW50ZXJmYWNlcy9kaXN0L3dha3UuanM/NGVhMiJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQge307XG4vLyMgc291cmNlTWFwcGluZ1VSTD13YWt1LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/interfaces/dist/waku.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/message-encryption/dist/crypto/ecies.js":
/*!********************************************************************!*\
  !*** ./node_modules/@waku/message-encryption/dist/crypto/ecies.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decrypt: () => (/* binding */ decrypt),\n/* harmony export */   encrypt: () => (/* binding */ encrypt)\n/* harmony export */ });\n/* harmony import */ var _noble_secp256k1__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @noble/secp256k1 */ \"(ssr)/./node_modules/@noble/secp256k1/lib/esm/index.js\");\n/* harmony import */ var _waku_utils_bytes__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @waku/utils/bytes */ \"(ssr)/./node_modules/@waku/message-encryption/node_modules/@waku/utils/dist/bytes/index.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils.js */ \"(ssr)/./node_modules/@waku/message-encryption/dist/crypto/utils.js\");\n\n\n\n/**\n * HKDF as implemented in go-ethereum.\n */ function kdf(secret, outputLength) {\n    let ctr = 1;\n    let written = 0;\n    let willBeResult = Promise.resolve(new Uint8Array());\n    while(written < outputLength){\n        const counters = new Uint8Array([\n            ctr >> 24,\n            ctr >> 16,\n            ctr >> 8,\n            ctr\n        ]);\n        const countersSecret = (0,_waku_utils_bytes__WEBPACK_IMPORTED_MODULE_1__.concat)([\n            counters,\n            secret\n        ], counters.length + secret.length);\n        const willBeHashResult = (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.sha256)(countersSecret);\n        willBeResult = willBeResult.then((result)=>willBeHashResult.then((hashResult)=>{\n                const _hashResult = new Uint8Array(hashResult);\n                return (0,_waku_utils_bytes__WEBPACK_IMPORTED_MODULE_1__.concat)([\n                    result,\n                    _hashResult\n                ], result.length + _hashResult.length);\n            }));\n        written += 32;\n        ctr += 1;\n    }\n    return willBeResult;\n}\nfunction aesCtrEncrypt(counter, key, data) {\n    return (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.getSubtle)().importKey(\"raw\", key, \"AES-CTR\", false, [\n        \"encrypt\"\n    ]).then((cryptoKey)=>(0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.getSubtle)().encrypt({\n            name: \"AES-CTR\",\n            counter: counter,\n            length: 128\n        }, cryptoKey, data)).then((bytes)=>new Uint8Array(bytes));\n}\nfunction aesCtrDecrypt(counter, key, data) {\n    return (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.getSubtle)().importKey(\"raw\", key, \"AES-CTR\", false, [\n        \"decrypt\"\n    ]).then((cryptoKey)=>(0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.getSubtle)().decrypt({\n            name: \"AES-CTR\",\n            counter: counter,\n            length: 128\n        }, cryptoKey, data)).then((bytes)=>new Uint8Array(bytes));\n}\nfunction hmacSha256Sign(key, msg) {\n    const algorithm = {\n        name: \"HMAC\",\n        hash: {\n            name: \"SHA-256\"\n        }\n    };\n    return (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.getSubtle)().importKey(\"raw\", key, algorithm, false, [\n        \"sign\"\n    ]).then((cryptoKey)=>(0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.getSubtle)().sign(algorithm, cryptoKey, msg)).then((bytes)=>new Uint8Array(bytes));\n}\nfunction hmacSha256Verify(key, msg, sig) {\n    const algorithm = {\n        name: \"HMAC\",\n        hash: {\n            name: \"SHA-256\"\n        }\n    };\n    const _key = (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.getSubtle)().importKey(\"raw\", key, algorithm, false, [\n        \"verify\"\n    ]);\n    return _key.then((cryptoKey)=>(0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.getSubtle)().verify(algorithm, cryptoKey, sig, msg));\n}\n/**\n * Derive shared secret for given private and public keys.\n *\n * @param  privateKeyA Sender's private key (32 bytes)\n * @param  publicKeyB Recipient's public key (65 bytes)\n * @returns  A promise that resolves with the derived shared secret (Px, 32 bytes)\n * @throws Error If arguments are invalid\n */ function derive(privateKeyA, publicKeyB) {\n    if (privateKeyA.length !== 32) {\n        throw new Error(`Bad private key, it should be 32 bytes but it's actually ${privateKeyA.length} bytes long`);\n    } else if (publicKeyB.length !== 65) {\n        throw new Error(`Bad public key, it should be 65 bytes but it's actually ${publicKeyB.length} bytes long`);\n    } else if (publicKeyB[0] !== 4) {\n        throw new Error(\"Bad public key, a valid public key would begin with 4\");\n    } else {\n        const px = _noble_secp256k1__WEBPACK_IMPORTED_MODULE_0__.getSharedSecret(privateKeyA, publicKeyB, true);\n        // Remove the compression prefix\n        return new Uint8Array((0,_waku_utils_bytes__WEBPACK_IMPORTED_MODULE_1__.hexToBytes)(px).slice(1));\n    }\n}\n/**\n * Encrypt message for given recipient's public key.\n *\n * @param  publicKeyTo Recipient's public key (65 bytes)\n * @param  msg The message being encrypted\n * @return A promise that resolves with the ECIES structure serialized\n */ async function encrypt(publicKeyTo, msg) {\n    const ephemPrivateKey = (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.randomBytes)(32);\n    const sharedPx = derive(ephemPrivateKey, publicKeyTo);\n    const hash = await kdf(sharedPx, 32);\n    const iv = (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.randomBytes)(16);\n    const encryptionKey = hash.slice(0, 16);\n    const cipherText = await aesCtrEncrypt(iv, encryptionKey, msg);\n    const ivCipherText = (0,_waku_utils_bytes__WEBPACK_IMPORTED_MODULE_1__.concat)([\n        iv,\n        cipherText\n    ], iv.length + cipherText.length);\n    const macKey = await (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.sha256)(hash.slice(16));\n    const hmac = await hmacSha256Sign(macKey, ivCipherText);\n    const ephemPublicKey = _noble_secp256k1__WEBPACK_IMPORTED_MODULE_0__.getPublicKey(ephemPrivateKey, false);\n    return (0,_waku_utils_bytes__WEBPACK_IMPORTED_MODULE_1__.concat)([\n        ephemPublicKey,\n        ivCipherText,\n        hmac\n    ], ephemPublicKey.length + ivCipherText.length + hmac.length);\n}\nconst metaLength = 1 + 64 + 16 + 32;\n/**\n * Decrypt message using given private key.\n *\n * @param privateKey A 32-byte private key of recipient of the message\n * @param encrypted ECIES serialized structure (result of ECIES encryption)\n * @returns The clear text\n * @throws Error If decryption fails\n */ async function decrypt(privateKey, encrypted) {\n    if (encrypted.length <= metaLength) {\n        throw new Error(`Invalid Ciphertext. Data is too small. It should ba at least ${metaLength} bytes`);\n    } else if (encrypted[0] !== 4) {\n        throw new Error(`Not a valid ciphertext. It should begin with 4 but actually begin with ${encrypted[0]}`);\n    } else {\n        // deserialize\n        const ephemPublicKey = encrypted.slice(0, 65);\n        const cipherTextLength = encrypted.length - metaLength;\n        const iv = encrypted.slice(65, 65 + 16);\n        const cipherAndIv = encrypted.slice(65, 65 + 16 + cipherTextLength);\n        const ciphertext = cipherAndIv.slice(16);\n        const msgMac = encrypted.slice(65 + 16 + cipherTextLength);\n        // check HMAC\n        const px = derive(privateKey, ephemPublicKey);\n        const hash = await kdf(px, 32);\n        const [encryptionKey, macKey] = await (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.sha256)(hash.slice(16)).then((macKey)=>[\n                hash.slice(0, 16),\n                macKey\n            ]);\n        if (!await hmacSha256Verify(macKey, cipherAndIv, msgMac)) {\n            throw new Error(\"Incorrect MAC\");\n        }\n        return aesCtrDecrypt(iv, encryptionKey, ciphertext);\n    }\n} //# sourceMappingURL=ecies.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/message-encryption/dist/crypto/ecies.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/message-encryption/dist/crypto/index.js":
/*!********************************************************************!*\
  !*** ./node_modules/@waku/message-encryption/dist/crypto/index.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ecies: () => (/* reexport module object */ _ecies_js__WEBPACK_IMPORTED_MODULE_1__),\n/* harmony export */   generatePrivateKey: () => (/* reexport safe */ _utils_js__WEBPACK_IMPORTED_MODULE_0__.generatePrivateKey),\n/* harmony export */   generateSymmetricKey: () => (/* reexport safe */ _utils_js__WEBPACK_IMPORTED_MODULE_0__.generateSymmetricKey),\n/* harmony export */   getPublicKey: () => (/* reexport safe */ _utils_js__WEBPACK_IMPORTED_MODULE_0__.getPublicKey),\n/* harmony export */   getSubtle: () => (/* reexport safe */ _utils_js__WEBPACK_IMPORTED_MODULE_0__.getSubtle),\n/* harmony export */   keccak256: () => (/* reexport safe */ _utils_js__WEBPACK_IMPORTED_MODULE_0__.keccak256),\n/* harmony export */   randomBytes: () => (/* reexport safe */ _utils_js__WEBPACK_IMPORTED_MODULE_0__.randomBytes),\n/* harmony export */   sha256: () => (/* reexport safe */ _utils_js__WEBPACK_IMPORTED_MODULE_0__.sha256),\n/* harmony export */   sign: () => (/* reexport safe */ _utils_js__WEBPACK_IMPORTED_MODULE_0__.sign),\n/* harmony export */   symmetric: () => (/* reexport module object */ _symmetric_js__WEBPACK_IMPORTED_MODULE_2__)\n/* harmony export */ });\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils.js */ \"(ssr)/./node_modules/@waku/message-encryption/dist/crypto/utils.js\");\n/* harmony import */ var _ecies_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ecies.js */ \"(ssr)/./node_modules/@waku/message-encryption/dist/crypto/ecies.js\");\n/* harmony import */ var _symmetric_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./symmetric.js */ \"(ssr)/./node_modules/@waku/message-encryption/dist/crypto/symmetric.js\");\n\n\n //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdha3UvbWVzc2FnZS1lbmNyeXB0aW9uL2Rpc3QvY3J5cHRvL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBMkI7QUFDUztBQUNRLENBQzVDLGlDQUFpQyIsInNvdXJjZXMiOlsid2VicGFjazovL2ZsdXNoLW5vdGVzLy4vbm9kZV9tb2R1bGVzL0B3YWt1L21lc3NhZ2UtZW5jcnlwdGlvbi9kaXN0L2NyeXB0by9pbmRleC5qcz85OGZhIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCAqIGZyb20gXCIuL3V0aWxzLmpzXCI7XG5leHBvcnQgKiBhcyBlY2llcyBmcm9tIFwiLi9lY2llcy5qc1wiO1xuZXhwb3J0ICogYXMgc3ltbWV0cmljIGZyb20gXCIuL3N5bW1ldHJpYy5qc1wiO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbImVjaWVzIiwic3ltbWV0cmljIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/message-encryption/dist/crypto/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/message-encryption/dist/crypto/symmetric.js":
/*!************************************************************************!*\
  !*** ./node_modules/@waku/message-encryption/dist/crypto/symmetric.js ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decrypt: () => (/* binding */ decrypt),\n/* harmony export */   encrypt: () => (/* binding */ encrypt),\n/* harmony export */   generateIv: () => (/* binding */ generateIv)\n/* harmony export */ });\n/* harmony import */ var _misc_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../misc.js */ \"(ssr)/./node_modules/@waku/message-encryption/dist/misc.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils.js */ \"(ssr)/./node_modules/@waku/message-encryption/dist/crypto/utils.js\");\n\n\nasync function encrypt(iv, key, clearText) {\n    return (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.getSubtle)().importKey(\"raw\", key, _misc_js__WEBPACK_IMPORTED_MODULE_0__.Symmetric.algorithm, false, [\n        \"encrypt\"\n    ]).then((cryptoKey)=>(0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.getSubtle)().encrypt({\n            iv,\n            ..._misc_js__WEBPACK_IMPORTED_MODULE_0__.Symmetric.algorithm\n        }, cryptoKey, clearText)).then((cipher)=>new Uint8Array(cipher));\n}\nasync function decrypt(iv, key, cipherText) {\n    return (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.getSubtle)().importKey(\"raw\", key, _misc_js__WEBPACK_IMPORTED_MODULE_0__.Symmetric.algorithm, false, [\n        \"decrypt\"\n    ]).then((cryptoKey)=>(0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.getSubtle)().decrypt({\n            iv,\n            ..._misc_js__WEBPACK_IMPORTED_MODULE_0__.Symmetric.algorithm\n        }, cryptoKey, cipherText)).then((clear)=>new Uint8Array(clear));\n}\nfunction generateIv() {\n    return (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.randomBytes)(_misc_js__WEBPACK_IMPORTED_MODULE_0__.Symmetric.ivSize);\n} //# sourceMappingURL=symmetric.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdha3UvbWVzc2FnZS1lbmNyeXB0aW9uL2Rpc3QvY3J5cHRvL3N5bW1ldHJpYy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUF1QztBQUNhO0FBQzdDLGVBQWVHLFFBQVFDLEVBQUUsRUFBRUMsR0FBRyxFQUFFQyxTQUFTO0lBQzVDLE9BQU9MLG9EQUFTQSxHQUNYTSxTQUFTLENBQUMsT0FBT0YsS0FBS0wsK0NBQVNBLENBQUNRLFNBQVMsRUFBRSxPQUFPO1FBQUM7S0FBVSxFQUM3REMsSUFBSSxDQUFDLENBQUNDLFlBQWNULG9EQUFTQSxHQUFHRSxPQUFPLENBQUM7WUFBRUM7WUFBSSxHQUFHSiwrQ0FBU0EsQ0FBQ1EsU0FBUztRQUFDLEdBQUdFLFdBQVdKLFlBQ25GRyxJQUFJLENBQUMsQ0FBQ0UsU0FBVyxJQUFJQyxXQUFXRDtBQUN6QztBQUNPLGVBQWVFLFFBQVFULEVBQUUsRUFBRUMsR0FBRyxFQUFFUyxVQUFVO0lBQzdDLE9BQU9iLG9EQUFTQSxHQUNYTSxTQUFTLENBQUMsT0FBT0YsS0FBS0wsK0NBQVNBLENBQUNRLFNBQVMsRUFBRSxPQUFPO1FBQUM7S0FBVSxFQUM3REMsSUFBSSxDQUFDLENBQUNDLFlBQWNULG9EQUFTQSxHQUFHWSxPQUFPLENBQUM7WUFBRVQ7WUFBSSxHQUFHSiwrQ0FBU0EsQ0FBQ1EsU0FBUztRQUFDLEdBQUdFLFdBQVdJLGFBQ25GTCxJQUFJLENBQUMsQ0FBQ00sUUFBVSxJQUFJSCxXQUFXRztBQUN4QztBQUNPLFNBQVNDO0lBQ1osT0FBT2Qsc0RBQVdBLENBQUNGLCtDQUFTQSxDQUFDaUIsTUFBTTtBQUN2QyxFQUNBLHFDQUFxQyIsInNvdXJjZXMiOlsid2VicGFjazovL2ZsdXNoLW5vdGVzLy4vbm9kZV9tb2R1bGVzL0B3YWt1L21lc3NhZ2UtZW5jcnlwdGlvbi9kaXN0L2NyeXB0by9zeW1tZXRyaWMuanM/MzA2YSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBTeW1tZXRyaWMgfSBmcm9tIFwiLi4vbWlzYy5qc1wiO1xuaW1wb3J0IHsgZ2V0U3VidGxlLCByYW5kb21CeXRlcyB9IGZyb20gXCIuL3V0aWxzLmpzXCI7XG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZW5jcnlwdChpdiwga2V5LCBjbGVhclRleHQpIHtcbiAgICByZXR1cm4gZ2V0U3VidGxlKClcbiAgICAgICAgLmltcG9ydEtleShcInJhd1wiLCBrZXksIFN5bW1ldHJpYy5hbGdvcml0aG0sIGZhbHNlLCBbXCJlbmNyeXB0XCJdKVxuICAgICAgICAudGhlbigoY3J5cHRvS2V5KSA9PiBnZXRTdWJ0bGUoKS5lbmNyeXB0KHsgaXYsIC4uLlN5bW1ldHJpYy5hbGdvcml0aG0gfSwgY3J5cHRvS2V5LCBjbGVhclRleHQpKVxuICAgICAgICAudGhlbigoY2lwaGVyKSA9PiBuZXcgVWludDhBcnJheShjaXBoZXIpKTtcbn1cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBkZWNyeXB0KGl2LCBrZXksIGNpcGhlclRleHQpIHtcbiAgICByZXR1cm4gZ2V0U3VidGxlKClcbiAgICAgICAgLmltcG9ydEtleShcInJhd1wiLCBrZXksIFN5bW1ldHJpYy5hbGdvcml0aG0sIGZhbHNlLCBbXCJkZWNyeXB0XCJdKVxuICAgICAgICAudGhlbigoY3J5cHRvS2V5KSA9PiBnZXRTdWJ0bGUoKS5kZWNyeXB0KHsgaXYsIC4uLlN5bW1ldHJpYy5hbGdvcml0aG0gfSwgY3J5cHRvS2V5LCBjaXBoZXJUZXh0KSlcbiAgICAgICAgLnRoZW4oKGNsZWFyKSA9PiBuZXcgVWludDhBcnJheShjbGVhcikpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGdlbmVyYXRlSXYoKSB7XG4gICAgcmV0dXJuIHJhbmRvbUJ5dGVzKFN5bW1ldHJpYy5pdlNpemUpO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c3ltbWV0cmljLmpzLm1hcCJdLCJuYW1lcyI6WyJTeW1tZXRyaWMiLCJnZXRTdWJ0bGUiLCJyYW5kb21CeXRlcyIsImVuY3J5cHQiLCJpdiIsImtleSIsImNsZWFyVGV4dCIsImltcG9ydEtleSIsImFsZ29yaXRobSIsInRoZW4iLCJjcnlwdG9LZXkiLCJjaXBoZXIiLCJVaW50OEFycmF5IiwiZGVjcnlwdCIsImNpcGhlclRleHQiLCJjbGVhciIsImdlbmVyYXRlSXYiLCJpdlNpemUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/message-encryption/dist/crypto/symmetric.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/message-encryption/dist/crypto/utils.js":
/*!********************************************************************!*\
  !*** ./node_modules/@waku/message-encryption/dist/crypto/utils.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   generatePrivateKey: () => (/* binding */ generatePrivateKey),\n/* harmony export */   generateSymmetricKey: () => (/* binding */ generateSymmetricKey),\n/* harmony export */   getPublicKey: () => (/* binding */ getPublicKey),\n/* harmony export */   getSubtle: () => (/* binding */ getSubtle),\n/* harmony export */   keccak256: () => (/* binding */ keccak256),\n/* harmony export */   randomBytes: () => (/* binding */ randomBytes),\n/* harmony export */   sha256: () => (/* binding */ sha256),\n/* harmony export */   sign: () => (/* binding */ sign)\n/* harmony export */ });\n/* harmony import */ var crypto__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! crypto */ \"crypto\");\n/* harmony import */ var _noble_secp256k1__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @noble/secp256k1 */ \"(ssr)/./node_modules/@noble/secp256k1/lib/esm/index.js\");\n/* harmony import */ var _waku_utils_bytes__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @waku/utils/bytes */ \"(ssr)/./node_modules/@waku/message-encryption/node_modules/@waku/utils/dist/bytes/index.js\");\n/* harmony import */ var js_sha3__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! js-sha3 */ \"(ssr)/./node_modules/js-sha3/src/sha3.js\");\n/* harmony import */ var _misc_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../misc.js */ \"(ssr)/./node_modules/@waku/message-encryption/dist/misc.js\");\n\n\n\n\n\nconst crypto = {\n    node: crypto__WEBPACK_IMPORTED_MODULE_0__,\n    web: typeof self === \"object\" && \"crypto\" in self ? self.crypto : undefined\n};\nfunction getSubtle() {\n    if (crypto.web) {\n        return crypto.web.subtle;\n    } else if (crypto.node) {\n        return crypto.node.webcrypto.subtle;\n    } else {\n        throw new Error(\"The environment doesn't have Crypto Subtle API (if in the browser, be sure to use to be in a secure context, ie, https)\");\n    }\n}\nconst randomBytes = _noble_secp256k1__WEBPACK_IMPORTED_MODULE_1__.utils.randomBytes;\nconst sha256 = _noble_secp256k1__WEBPACK_IMPORTED_MODULE_1__.utils.sha256;\n/**\n * Generate a new private key to be used for asymmetric encryption.\n *\n * Use {@link getPublicKey} to get the corresponding Public Key.\n */ function generatePrivateKey() {\n    return randomBytes(_misc_js__WEBPACK_IMPORTED_MODULE_4__.Asymmetric.keySize);\n}\n/**\n * Generate a new symmetric key to be used for symmetric encryption.\n */ function generateSymmetricKey() {\n    return randomBytes(_misc_js__WEBPACK_IMPORTED_MODULE_4__.Symmetric.keySize);\n}\n/**\n * Return the public key for the given private key, to be used for asymmetric\n * encryption.\n */ const getPublicKey = _noble_secp256k1__WEBPACK_IMPORTED_MODULE_1__.getPublicKey;\n/**\n * ECDSA Sign a message with the given private key.\n *\n *  @param message The message to sign, usually a hash.\n *  @param privateKey The ECDSA private key to use to sign the message.\n *\n *  @returns The signature and the recovery id concatenated.\n */ async function sign(message, privateKey) {\n    const [signature, recoveryId] = await _noble_secp256k1__WEBPACK_IMPORTED_MODULE_1__.sign(message, privateKey, {\n        recovered: true,\n        der: false\n    });\n    return (0,_waku_utils_bytes__WEBPACK_IMPORTED_MODULE_2__.concat)([\n        signature,\n        new Uint8Array([\n            recoveryId\n        ])\n    ], signature.length + 1);\n}\nfunction keccak256(input) {\n    return new Uint8Array(js_sha3__WEBPACK_IMPORTED_MODULE_3__.keccak256.arrayBuffer(input));\n} //# sourceMappingURL=utils.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdha3UvbWVzc2FnZS1lbmNyeXB0aW9uL2Rpc3QvY3J5cHRvL3V0aWxzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBZ0M7QUFDUztBQUNFO0FBQ2hCO0FBQ3dCO0FBQ25ELE1BQU1NLFNBQVM7SUFDWEMsTUFBTVAsbUNBQVVBO0lBQ2hCUSxLQUFLLE9BQU9DLFNBQVMsWUFBWSxZQUFZQSxPQUFPQSxLQUFLSCxNQUFNLEdBQUdJO0FBQ3RFO0FBQ08sU0FBU0M7SUFDWixJQUFJTCxPQUFPRSxHQUFHLEVBQUU7UUFDWixPQUFPRixPQUFPRSxHQUFHLENBQUNJLE1BQU07SUFDNUIsT0FDSyxJQUFJTixPQUFPQyxJQUFJLEVBQUU7UUFDbEIsT0FBT0QsT0FBT0MsSUFBSSxDQUFDTSxTQUFTLENBQUNELE1BQU07SUFDdkMsT0FDSztRQUNELE1BQU0sSUFBSUUsTUFBTTtJQUNwQjtBQUNKO0FBQ08sTUFBTUMsY0FBY2QsbURBQVUsQ0FBQ2MsV0FBVyxDQUFDO0FBQzNDLE1BQU1FLFNBQVNoQixtREFBVSxDQUFDZ0IsTUFBTSxDQUFDO0FBQ3hDOzs7O0NBSUMsR0FDTSxTQUFTQztJQUNaLE9BQU9ILFlBQVlYLGdEQUFVQSxDQUFDZSxPQUFPO0FBQ3pDO0FBQ0E7O0NBRUMsR0FDTSxTQUFTQztJQUNaLE9BQU9MLFlBQVlWLCtDQUFTQSxDQUFDYyxPQUFPO0FBQ3hDO0FBQ0E7OztDQUdDLEdBQ00sTUFBTUUsZUFBZXBCLDBEQUFpQixDQUFDO0FBQzlDOzs7Ozs7O0NBT0MsR0FDTSxlQUFlcUIsS0FBS0MsT0FBTyxFQUFFQyxVQUFVO0lBQzFDLE1BQU0sQ0FBQ0MsV0FBV0MsV0FBVyxHQUFHLE1BQU16QixrREFBUyxDQUFDc0IsU0FBU0MsWUFBWTtRQUNqRUcsV0FBVztRQUNYQyxLQUFLO0lBQ1Q7SUFDQSxPQUFPMUIseURBQU1BLENBQUM7UUFBQ3VCO1FBQVcsSUFBSUksV0FBVztZQUFDSDtTQUFXO0tBQUUsRUFBRUQsVUFBVUssTUFBTSxHQUFHO0FBQ2hGO0FBQ08sU0FBU0MsVUFBVUMsS0FBSztJQUMzQixPQUFPLElBQUlILFdBQVcxQiw4Q0FBYyxDQUFDOEIsV0FBVyxDQUFDRDtBQUNyRCxFQUNBLGlDQUFpQyIsInNvdXJjZXMiOlsid2VicGFjazovL2ZsdXNoLW5vdGVzLy4vbm9kZV9tb2R1bGVzL0B3YWt1L21lc3NhZ2UtZW5jcnlwdGlvbi9kaXN0L2NyeXB0by91dGlscy5qcz84Y2Q4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBub2RlQ3J5cHRvIGZyb20gXCJjcnlwdG9cIjtcbmltcG9ydCAqIGFzIHNlY3AgZnJvbSBcIkBub2JsZS9zZWNwMjU2azFcIjtcbmltcG9ydCB7IGNvbmNhdCB9IGZyb20gXCJAd2FrdS91dGlscy9ieXRlc1wiO1xuaW1wb3J0IHNoYTMgZnJvbSBcImpzLXNoYTNcIjtcbmltcG9ydCB7IEFzeW1tZXRyaWMsIFN5bW1ldHJpYyB9IGZyb20gXCIuLi9taXNjLmpzXCI7XG5jb25zdCBjcnlwdG8gPSB7XG4gICAgbm9kZTogbm9kZUNyeXB0byxcbiAgICB3ZWI6IHR5cGVvZiBzZWxmID09PSBcIm9iamVjdFwiICYmIFwiY3J5cHRvXCIgaW4gc2VsZiA/IHNlbGYuY3J5cHRvIDogdW5kZWZpbmVkXG59O1xuZXhwb3J0IGZ1bmN0aW9uIGdldFN1YnRsZSgpIHtcbiAgICBpZiAoY3J5cHRvLndlYikge1xuICAgICAgICByZXR1cm4gY3J5cHRvLndlYi5zdWJ0bGU7XG4gICAgfVxuICAgIGVsc2UgaWYgKGNyeXB0by5ub2RlKSB7XG4gICAgICAgIHJldHVybiBjcnlwdG8ubm9kZS53ZWJjcnlwdG8uc3VidGxlO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiVGhlIGVudmlyb25tZW50IGRvZXNuJ3QgaGF2ZSBDcnlwdG8gU3VidGxlIEFQSSAoaWYgaW4gdGhlIGJyb3dzZXIsIGJlIHN1cmUgdG8gdXNlIHRvIGJlIGluIGEgc2VjdXJlIGNvbnRleHQsIGllLCBodHRwcylcIik7XG4gICAgfVxufVxuZXhwb3J0IGNvbnN0IHJhbmRvbUJ5dGVzID0gc2VjcC51dGlscy5yYW5kb21CeXRlcztcbmV4cG9ydCBjb25zdCBzaGEyNTYgPSBzZWNwLnV0aWxzLnNoYTI1Njtcbi8qKlxuICogR2VuZXJhdGUgYSBuZXcgcHJpdmF0ZSBrZXkgdG8gYmUgdXNlZCBmb3IgYXN5bW1ldHJpYyBlbmNyeXB0aW9uLlxuICpcbiAqIFVzZSB7QGxpbmsgZ2V0UHVibGljS2V5fSB0byBnZXQgdGhlIGNvcnJlc3BvbmRpbmcgUHVibGljIEtleS5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGdlbmVyYXRlUHJpdmF0ZUtleSgpIHtcbiAgICByZXR1cm4gcmFuZG9tQnl0ZXMoQXN5bW1ldHJpYy5rZXlTaXplKTtcbn1cbi8qKlxuICogR2VuZXJhdGUgYSBuZXcgc3ltbWV0cmljIGtleSB0byBiZSB1c2VkIGZvciBzeW1tZXRyaWMgZW5jcnlwdGlvbi5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGdlbmVyYXRlU3ltbWV0cmljS2V5KCkge1xuICAgIHJldHVybiByYW5kb21CeXRlcyhTeW1tZXRyaWMua2V5U2l6ZSk7XG59XG4vKipcbiAqIFJldHVybiB0aGUgcHVibGljIGtleSBmb3IgdGhlIGdpdmVuIHByaXZhdGUga2V5LCB0byBiZSB1c2VkIGZvciBhc3ltbWV0cmljXG4gKiBlbmNyeXB0aW9uLlxuICovXG5leHBvcnQgY29uc3QgZ2V0UHVibGljS2V5ID0gc2VjcC5nZXRQdWJsaWNLZXk7XG4vKipcbiAqIEVDRFNBIFNpZ24gYSBtZXNzYWdlIHdpdGggdGhlIGdpdmVuIHByaXZhdGUga2V5LlxuICpcbiAqICBAcGFyYW0gbWVzc2FnZSBUaGUgbWVzc2FnZSB0byBzaWduLCB1c3VhbGx5IGEgaGFzaC5cbiAqICBAcGFyYW0gcHJpdmF0ZUtleSBUaGUgRUNEU0EgcHJpdmF0ZSBrZXkgdG8gdXNlIHRvIHNpZ24gdGhlIG1lc3NhZ2UuXG4gKlxuICogIEByZXR1cm5zIFRoZSBzaWduYXR1cmUgYW5kIHRoZSByZWNvdmVyeSBpZCBjb25jYXRlbmF0ZWQuXG4gKi9cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBzaWduKG1lc3NhZ2UsIHByaXZhdGVLZXkpIHtcbiAgICBjb25zdCBbc2lnbmF0dXJlLCByZWNvdmVyeUlkXSA9IGF3YWl0IHNlY3Auc2lnbihtZXNzYWdlLCBwcml2YXRlS2V5LCB7XG4gICAgICAgIHJlY292ZXJlZDogdHJ1ZSxcbiAgICAgICAgZGVyOiBmYWxzZVxuICAgIH0pO1xuICAgIHJldHVybiBjb25jYXQoW3NpZ25hdHVyZSwgbmV3IFVpbnQ4QXJyYXkoW3JlY292ZXJ5SWRdKV0sIHNpZ25hdHVyZS5sZW5ndGggKyAxKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBrZWNjYWsyNTYoaW5wdXQpIHtcbiAgICByZXR1cm4gbmV3IFVpbnQ4QXJyYXkoc2hhMy5rZWNjYWsyNTYuYXJyYXlCdWZmZXIoaW5wdXQpKTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXV0aWxzLmpzLm1hcCJdLCJuYW1lcyI6WyJub2RlQ3J5cHRvIiwic2VjcCIsImNvbmNhdCIsInNoYTMiLCJBc3ltbWV0cmljIiwiU3ltbWV0cmljIiwiY3J5cHRvIiwibm9kZSIsIndlYiIsInNlbGYiLCJ1bmRlZmluZWQiLCJnZXRTdWJ0bGUiLCJzdWJ0bGUiLCJ3ZWJjcnlwdG8iLCJFcnJvciIsInJhbmRvbUJ5dGVzIiwidXRpbHMiLCJzaGEyNTYiLCJnZW5lcmF0ZVByaXZhdGVLZXkiLCJrZXlTaXplIiwiZ2VuZXJhdGVTeW1tZXRyaWNLZXkiLCJnZXRQdWJsaWNLZXkiLCJzaWduIiwibWVzc2FnZSIsInByaXZhdGVLZXkiLCJzaWduYXR1cmUiLCJyZWNvdmVyeUlkIiwicmVjb3ZlcmVkIiwiZGVyIiwiVWludDhBcnJheSIsImxlbmd0aCIsImtlY2NhazI1NiIsImlucHV0IiwiYXJyYXlCdWZmZXIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/message-encryption/dist/crypto/utils.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/message-encryption/dist/decoded_message.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@waku/message-encryption/dist/decoded_message.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DecodedMessage: () => (/* binding */ DecodedMessage)\n/* harmony export */ });\n/* harmony import */ var _waku_core_lib_message_version_0__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @waku/core/lib/message/version_0 */ \"(ssr)/./node_modules/@waku/core/dist/lib/message/version_0.js\");\n/* harmony import */ var uint8arrays_equals__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! uint8arrays/equals */ \"(ssr)/./node_modules/uint8arrays/dist/src/equals.js\");\n\n\nclass DecodedMessage extends _waku_core_lib_message_version_0__WEBPACK_IMPORTED_MODULE_0__.DecodedMessage {\n    constructor(pubsubTopic, proto, decodedPayload, signature, signaturePublicKey){\n        super(pubsubTopic, proto);\n        this.signature = signature;\n        this.signaturePublicKey = signaturePublicKey;\n        this._decodedPayload = decodedPayload;\n    }\n    get payload() {\n        return this._decodedPayload;\n    }\n    /**\n     * Verify the message's signature against the public key.\n     *\n     * @returns true if the signature matches the public key, false if not or if no signature is present.\n     */ verifySignature(publicKey) {\n        if (this.signaturePublicKey) {\n            return (0,uint8arrays_equals__WEBPACK_IMPORTED_MODULE_1__.equals)(this.signaturePublicKey, publicKey);\n        }\n        return false;\n    }\n} //# sourceMappingURL=decoded_message.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdha3UvbWVzc2FnZS1lbmNyeXB0aW9uL2Rpc3QvZGVjb2RlZF9tZXNzYWdlLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFzRjtBQUMxQztBQUNyQyxNQUFNQSx1QkFBdUJDLDRFQUFnQkE7SUFJaERFLFlBQVlDLFdBQVcsRUFBRUMsS0FBSyxFQUFFQyxjQUFjLEVBQUVDLFNBQVMsRUFBRUMsa0JBQWtCLENBQUU7UUFDM0UsS0FBSyxDQUFDSixhQUFhQztRQUNuQixJQUFJLENBQUNFLFNBQVMsR0FBR0E7UUFDakIsSUFBSSxDQUFDQyxrQkFBa0IsR0FBR0E7UUFDMUIsSUFBSSxDQUFDQyxlQUFlLEdBQUdIO0lBQzNCO0lBQ0EsSUFBSUksVUFBVTtRQUNWLE9BQU8sSUFBSSxDQUFDRCxlQUFlO0lBQy9CO0lBQ0E7Ozs7S0FJQyxHQUNERSxnQkFBZ0JDLFNBQVMsRUFBRTtRQUN2QixJQUFJLElBQUksQ0FBQ0osa0JBQWtCLEVBQUU7WUFDekIsT0FBT04sMERBQU1BLENBQUMsSUFBSSxDQUFDTSxrQkFBa0IsRUFBRUk7UUFDM0M7UUFDQSxPQUFPO0lBQ1g7QUFDSixFQUNBLDJDQUEyQyIsInNvdXJjZXMiOlsid2VicGFjazovL2ZsdXNoLW5vdGVzLy4vbm9kZV9tb2R1bGVzL0B3YWt1L21lc3NhZ2UtZW5jcnlwdGlvbi9kaXN0L2RlY29kZWRfbWVzc2FnZS5qcz9mZDczIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IERlY29kZWRNZXNzYWdlIGFzIERlY29kZWRNZXNzYWdlVjAgfSBmcm9tIFwiQHdha3UvY29yZS9saWIvbWVzc2FnZS92ZXJzaW9uXzBcIjtcbmltcG9ydCB7IGVxdWFscyB9IGZyb20gXCJ1aW50OGFycmF5cy9lcXVhbHNcIjtcbmV4cG9ydCBjbGFzcyBEZWNvZGVkTWVzc2FnZSBleHRlbmRzIERlY29kZWRNZXNzYWdlVjAge1xuICAgIHNpZ25hdHVyZTtcbiAgICBzaWduYXR1cmVQdWJsaWNLZXk7XG4gICAgX2RlY29kZWRQYXlsb2FkO1xuICAgIGNvbnN0cnVjdG9yKHB1YnN1YlRvcGljLCBwcm90bywgZGVjb2RlZFBheWxvYWQsIHNpZ25hdHVyZSwgc2lnbmF0dXJlUHVibGljS2V5KSB7XG4gICAgICAgIHN1cGVyKHB1YnN1YlRvcGljLCBwcm90byk7XG4gICAgICAgIHRoaXMuc2lnbmF0dXJlID0gc2lnbmF0dXJlO1xuICAgICAgICB0aGlzLnNpZ25hdHVyZVB1YmxpY0tleSA9IHNpZ25hdHVyZVB1YmxpY0tleTtcbiAgICAgICAgdGhpcy5fZGVjb2RlZFBheWxvYWQgPSBkZWNvZGVkUGF5bG9hZDtcbiAgICB9XG4gICAgZ2V0IHBheWxvYWQoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9kZWNvZGVkUGF5bG9hZDtcbiAgICB9XG4gICAgLyoqXG4gICAgICogVmVyaWZ5IHRoZSBtZXNzYWdlJ3Mgc2lnbmF0dXJlIGFnYWluc3QgdGhlIHB1YmxpYyBrZXkuXG4gICAgICpcbiAgICAgKiBAcmV0dXJucyB0cnVlIGlmIHRoZSBzaWduYXR1cmUgbWF0Y2hlcyB0aGUgcHVibGljIGtleSwgZmFsc2UgaWYgbm90IG9yIGlmIG5vIHNpZ25hdHVyZSBpcyBwcmVzZW50LlxuICAgICAqL1xuICAgIHZlcmlmeVNpZ25hdHVyZShwdWJsaWNLZXkpIHtcbiAgICAgICAgaWYgKHRoaXMuc2lnbmF0dXJlUHVibGljS2V5KSB7XG4gICAgICAgICAgICByZXR1cm4gZXF1YWxzKHRoaXMuc2lnbmF0dXJlUHVibGljS2V5LCBwdWJsaWNLZXkpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1kZWNvZGVkX21lc3NhZ2UuanMubWFwIl0sIm5hbWVzIjpbIkRlY29kZWRNZXNzYWdlIiwiRGVjb2RlZE1lc3NhZ2VWMCIsImVxdWFscyIsImNvbnN0cnVjdG9yIiwicHVic3ViVG9waWMiLCJwcm90byIsImRlY29kZWRQYXlsb2FkIiwic2lnbmF0dXJlIiwic2lnbmF0dXJlUHVibGljS2V5IiwiX2RlY29kZWRQYXlsb2FkIiwicGF5bG9hZCIsInZlcmlmeVNpZ25hdHVyZSIsInB1YmxpY0tleSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/message-encryption/dist/decoded_message.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/message-encryption/dist/encryption.js":
/*!******************************************************************!*\
  !*** ./node_modules/@waku/message-encryption/dist/encryption.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decryptAsymmetric: () => (/* binding */ decryptAsymmetric),\n/* harmony export */   decryptSymmetric: () => (/* binding */ decryptSymmetric),\n/* harmony export */   encryptAsymmetric: () => (/* binding */ encryptAsymmetric),\n/* harmony export */   encryptSymmetric: () => (/* binding */ encryptSymmetric),\n/* harmony export */   postCipher: () => (/* binding */ postCipher),\n/* harmony export */   preCipher: () => (/* binding */ preCipher)\n/* harmony export */ });\n/* harmony import */ var _noble_secp256k1__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @noble/secp256k1 */ \"(ssr)/./node_modules/@noble/secp256k1/lib/esm/index.js\");\n/* harmony import */ var _waku_utils_bytes__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @waku/utils/bytes */ \"(ssr)/./node_modules/@waku/message-encryption/node_modules/@waku/utils/dist/bytes/index.js\");\n/* harmony import */ var _crypto_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./crypto/index.js */ \"(ssr)/./node_modules/@waku/message-encryption/dist/crypto/index.js\");\n/* harmony import */ var _misc_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./misc.js */ \"(ssr)/./node_modules/@waku/message-encryption/dist/misc.js\");\n\n\n\n\nconst FlagsLength = 1;\nconst FlagMask = 3; // 0011\nconst IsSignedMask = 4; // 0100\nconst PaddingTarget = 256;\nconst SignatureLength = 65;\nfunction getSizeOfPayloadSizeField(message) {\n    const messageDataView = new DataView(message.buffer);\n    return messageDataView.getUint8(0) & FlagMask;\n}\nfunction getPayloadSize(message, sizeOfPayloadSizeField) {\n    let payloadSizeBytes = message.slice(1, 1 + sizeOfPayloadSizeField);\n    // int 32 == 4 bytes\n    if (sizeOfPayloadSizeField < 4) {\n        // If less than 4 bytes pad right (Little Endian).\n        payloadSizeBytes = (0,_waku_utils_bytes__WEBPACK_IMPORTED_MODULE_1__.concat)([\n            payloadSizeBytes,\n            new Uint8Array(4 - sizeOfPayloadSizeField)\n        ], 4);\n    }\n    const payloadSizeDataView = new DataView(payloadSizeBytes.buffer);\n    return payloadSizeDataView.getInt32(0, true);\n}\nfunction isMessageSigned(message) {\n    const messageDataView = new DataView(message.buffer);\n    return (messageDataView.getUint8(0) & IsSignedMask) == IsSignedMask;\n}\n/**\n * Proceed with Asymmetric encryption of the data as per [26/WAKU-PAYLOAD](https://rfc.vac.dev/spec/26/).\n * The data MUST be flags | payload-length | payload | [signature].\n * The returned result  can be set to `WakuMessage.payload`.\n *\n * @internal\n */ async function encryptAsymmetric(data, publicKey) {\n    return _crypto_index_js__WEBPACK_IMPORTED_MODULE_2__.ecies.encrypt((0,_waku_utils_bytes__WEBPACK_IMPORTED_MODULE_1__.hexToBytes)(publicKey), data);\n}\n/**\n * Proceed with Asymmetric decryption of the data as per [26/WAKU-PAYLOAD](https://rfc.vac.dev/spec/26/).\n * The returned data is expected to be `flags | payload-length | payload | [signature]`.\n *\n * @internal\n */ async function decryptAsymmetric(payload, privKey) {\n    return _crypto_index_js__WEBPACK_IMPORTED_MODULE_2__.ecies.decrypt(privKey, payload);\n}\n/**\n * Proceed with Symmetric encryption of the data as per [26/WAKU-PAYLOAD](https://rfc.vac.dev/spec/26/).\n *\n * @param data The data to encrypt, expected to be `flags | payload-length | payload | [signature]`.\n * @param key The key to use for encryption.\n * @returns The decrypted data, `cipherText | tag | iv` and can be set to `WakuMessage.payload`.\n *\n * @internal\n */ async function encryptSymmetric(data, key) {\n    const iv = _crypto_index_js__WEBPACK_IMPORTED_MODULE_2__.symmetric.generateIv();\n    // Returns `cipher | tag`\n    const cipher = await _crypto_index_js__WEBPACK_IMPORTED_MODULE_2__.symmetric.encrypt(iv, (0,_waku_utils_bytes__WEBPACK_IMPORTED_MODULE_1__.hexToBytes)(key), data);\n    return (0,_waku_utils_bytes__WEBPACK_IMPORTED_MODULE_1__.concat)([\n        cipher,\n        iv\n    ]);\n}\n/**\n * Proceed with Symmetric decryption of the data as per [26/WAKU-PAYLOAD](https://rfc.vac.dev/spec/26/).\n *\n * @param payload The cipher data, it is expected to be `cipherText | tag | iv`.\n * @param key The key to use for decryption.\n * @returns The decrypted data, expected to be `flags | payload-length | payload | [signature]`.\n *\n * @internal\n */ async function decryptSymmetric(payload, key) {\n    const ivStart = payload.length - _misc_js__WEBPACK_IMPORTED_MODULE_3__.Symmetric.ivSize;\n    const cipher = payload.slice(0, ivStart);\n    const iv = payload.slice(ivStart);\n    return _crypto_index_js__WEBPACK_IMPORTED_MODULE_2__.symmetric.decrypt(iv, (0,_waku_utils_bytes__WEBPACK_IMPORTED_MODULE_1__.hexToBytes)(key), cipher);\n}\n/**\n * Computes the flags & auxiliary-field as per [26/WAKU-PAYLOAD](https://rfc.vac.dev/spec/26/).\n */ function addPayloadSizeField(msg, payload) {\n    const fieldSize = computeSizeOfPayloadSizeField(payload);\n    let field = new Uint8Array(4);\n    const fieldDataView = new DataView(field.buffer);\n    fieldDataView.setUint32(0, payload.length, true);\n    field = field.slice(0, fieldSize);\n    msg = (0,_waku_utils_bytes__WEBPACK_IMPORTED_MODULE_1__.concat)([\n        msg,\n        field\n    ]);\n    msg[0] |= fieldSize;\n    return msg;\n}\n/**\n * Returns the size of the auxiliary-field which in turns contains the payload size\n */ function computeSizeOfPayloadSizeField(payload) {\n    let s = 1;\n    for(let i = payload.length; i >= 256; i /= 256){\n        s++;\n    }\n    return s;\n}\nfunction validateDataIntegrity(value, expectedSize) {\n    if (value.length !== expectedSize) {\n        return false;\n    }\n    return expectedSize <= 3 || value.findIndex((i)=>i !== 0) !== -1;\n}\nfunction getSignature(message) {\n    return message.slice(message.length - SignatureLength, message.length);\n}\nfunction getHash(message, isSigned) {\n    if (isSigned) {\n        return (0,_crypto_index_js__WEBPACK_IMPORTED_MODULE_2__.keccak256)(message.slice(0, message.length - SignatureLength));\n    }\n    return (0,_crypto_index_js__WEBPACK_IMPORTED_MODULE_2__.keccak256)(message);\n}\nfunction ecRecoverPubKey(messageHash, signature) {\n    const recoveryDataView = new DataView(signature.slice(64).buffer);\n    const recovery = recoveryDataView.getUint8(0);\n    const _signature = _noble_secp256k1__WEBPACK_IMPORTED_MODULE_0__.Signature.fromCompact(signature.slice(0, 64));\n    return _noble_secp256k1__WEBPACK_IMPORTED_MODULE_0__.recoverPublicKey(messageHash, _signature, recovery, false);\n}\n/**\n * Prepare the payload pre-encryption.\n *\n * @internal\n * @returns The encoded payload, ready for encryption using {@link encryptAsymmetric}\n * or {@link encryptSymmetric}.\n */ async function preCipher(messagePayload, sigPrivKey) {\n    let envelope = new Uint8Array([\n        0\n    ]); // No flags\n    envelope = addPayloadSizeField(envelope, messagePayload);\n    envelope = (0,_waku_utils_bytes__WEBPACK_IMPORTED_MODULE_1__.concat)([\n        envelope,\n        messagePayload\n    ]);\n    // Calculate padding:\n    let rawSize = FlagsLength + computeSizeOfPayloadSizeField(messagePayload) + messagePayload.length;\n    if (sigPrivKey) {\n        rawSize += SignatureLength;\n    }\n    const remainder = rawSize % PaddingTarget;\n    const paddingSize = PaddingTarget - remainder;\n    const pad = (0,_crypto_index_js__WEBPACK_IMPORTED_MODULE_2__.randomBytes)(paddingSize);\n    if (!validateDataIntegrity(pad, paddingSize)) {\n        throw new Error(\"failed to generate random padding of size \" + paddingSize);\n    }\n    envelope = (0,_waku_utils_bytes__WEBPACK_IMPORTED_MODULE_1__.concat)([\n        envelope,\n        pad\n    ]);\n    if (sigPrivKey) {\n        envelope[0] |= IsSignedMask;\n        const hash = (0,_crypto_index_js__WEBPACK_IMPORTED_MODULE_2__.keccak256)(envelope);\n        const bytesSignature = await (0,_crypto_index_js__WEBPACK_IMPORTED_MODULE_2__.sign)(hash, sigPrivKey);\n        envelope = (0,_waku_utils_bytes__WEBPACK_IMPORTED_MODULE_1__.concat)([\n            envelope,\n            bytesSignature\n        ]);\n    }\n    return envelope;\n}\n/**\n * Decode a decrypted payload.\n *\n * @internal\n */ function postCipher(message) {\n    const sizeOfPayloadSizeField = getSizeOfPayloadSizeField(message);\n    if (sizeOfPayloadSizeField === 0) return;\n    const payloadSize = getPayloadSize(message, sizeOfPayloadSizeField);\n    const payloadStart = 1 + sizeOfPayloadSizeField;\n    const payload = message.slice(payloadStart, payloadStart + payloadSize);\n    const isSigned = isMessageSigned(message);\n    let sig;\n    if (isSigned) {\n        const signature = getSignature(message);\n        const hash = getHash(message, isSigned);\n        const publicKey = ecRecoverPubKey(hash, signature);\n        sig = {\n            signature,\n            publicKey\n        };\n    }\n    return {\n        payload,\n        sig\n    };\n} //# sourceMappingURL=encryption.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/message-encryption/dist/encryption.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/message-encryption/dist/misc.js":
/*!************************************************************!*\
  !*** ./node_modules/@waku/message-encryption/dist/misc.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Asymmetric: () => (/* binding */ Asymmetric),\n/* harmony export */   OneMillion: () => (/* binding */ OneMillion),\n/* harmony export */   Symmetric: () => (/* binding */ Symmetric),\n/* harmony export */   Version: () => (/* binding */ Version)\n/* harmony export */ });\nconst Symmetric = {\n    keySize: 32,\n    ivSize: 12,\n    tagSize: 16,\n    algorithm: {\n        name: \"AES-GCM\",\n        length: 128\n    }\n};\nconst Asymmetric = {\n    keySize: 32\n};\nconst OneMillion = BigInt(1000000);\nconst Version = 1; //# sourceMappingURL=misc.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdha3UvbWVzc2FnZS1lbmNyeXB0aW9uL2Rpc3QvbWlzYy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQU8sTUFBTUEsWUFBWTtJQUNyQkMsU0FBUztJQUNUQyxRQUFRO0lBQ1JDLFNBQVM7SUFDVEMsV0FBVztRQUFFQyxNQUFNO1FBQVdDLFFBQVE7SUFBSTtBQUM5QyxFQUFFO0FBQ0ssTUFBTUMsYUFBYTtJQUN0Qk4sU0FBUztBQUNiLEVBQUU7QUFDSyxNQUFNTyxhQUFhQyxPQUFPLFNBQVc7QUFDckMsTUFBTUMsVUFBVSxFQUFFLENBQ3pCLGdDQUFnQyIsInNvdXJjZXMiOlsid2VicGFjazovL2ZsdXNoLW5vdGVzLy4vbm9kZV9tb2R1bGVzL0B3YWt1L21lc3NhZ2UtZW5jcnlwdGlvbi9kaXN0L21pc2MuanM/NDYwZCJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3QgU3ltbWV0cmljID0ge1xuICAgIGtleVNpemU6IDMyLFxuICAgIGl2U2l6ZTogMTIsXG4gICAgdGFnU2l6ZTogMTYsXG4gICAgYWxnb3JpdGhtOiB7IG5hbWU6IFwiQUVTLUdDTVwiLCBsZW5ndGg6IDEyOCB9XG59O1xuZXhwb3J0IGNvbnN0IEFzeW1tZXRyaWMgPSB7XG4gICAga2V5U2l6ZTogMzJcbn07XG5leHBvcnQgY29uc3QgT25lTWlsbGlvbiA9IEJpZ0ludCgxXzAwMF8wMDApO1xuZXhwb3J0IGNvbnN0IFZlcnNpb24gPSAxO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bWlzYy5qcy5tYXAiXSwibmFtZXMiOlsiU3ltbWV0cmljIiwia2V5U2l6ZSIsIml2U2l6ZSIsInRhZ1NpemUiLCJhbGdvcml0aG0iLCJuYW1lIiwibGVuZ3RoIiwiQXN5bW1ldHJpYyIsIk9uZU1pbGxpb24iLCJCaWdJbnQiLCJWZXJzaW9uIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/message-encryption/dist/misc.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/message-encryption/dist/symmetric.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@waku/message-encryption/dist/symmetric.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createDecoder: () => (/* binding */ createDecoder),\n/* harmony export */   createEncoder: () => (/* binding */ createEncoder),\n/* harmony export */   decryptSymmetric: () => (/* reexport safe */ _encryption_js__WEBPACK_IMPORTED_MODULE_6__.decryptSymmetric),\n/* harmony export */   encryptSymmetric: () => (/* reexport safe */ _encryption_js__WEBPACK_IMPORTED_MODULE_6__.encryptSymmetric),\n/* harmony export */   generateSymmetricKey: () => (/* reexport safe */ _crypto_utils_js__WEBPACK_IMPORTED_MODULE_4__.generateSymmetricKey),\n/* harmony export */   postCipher: () => (/* reexport safe */ _encryption_js__WEBPACK_IMPORTED_MODULE_6__.postCipher),\n/* harmony export */   preCipher: () => (/* reexport safe */ _encryption_js__WEBPACK_IMPORTED_MODULE_6__.preCipher)\n/* harmony export */ });\n/* harmony import */ var _waku_core_lib_message_version_0__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @waku/core/lib/message/version_0 */ \"(ssr)/./node_modules/@waku/core/dist/lib/message/version_0.js\");\n/* harmony import */ var _waku_interfaces__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @waku/interfaces */ \"(ssr)/./node_modules/@waku/interfaces/dist/index.js\");\n/* harmony import */ var _waku_proto__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @waku/proto */ \"(ssr)/./node_modules/@waku/proto/dist/index.js\");\n/* harmony import */ var _waku_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @waku/utils */ \"(ssr)/./node_modules/@waku/message-encryption/node_modules/@waku/utils/dist/index.js\");\n/* harmony import */ var _crypto_utils_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./crypto/utils.js */ \"(ssr)/./node_modules/@waku/message-encryption/dist/crypto/utils.js\");\n/* harmony import */ var _decoded_message_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./decoded_message.js */ \"(ssr)/./node_modules/@waku/message-encryption/dist/decoded_message.js\");\n/* harmony import */ var _encryption_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./encryption.js */ \"(ssr)/./node_modules/@waku/message-encryption/dist/encryption.js\");\n/* harmony import */ var _misc_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./misc.js */ \"(ssr)/./node_modules/@waku/message-encryption/dist/misc.js\");\n\n\n\n\n\n\n\n\n\nconst log = new _waku_utils__WEBPACK_IMPORTED_MODULE_3__.Logger(\"message-encryption:symmetric\");\nclass Encoder {\n    constructor(pubsubTopic, contentTopic, symKey, sigPrivKey, ephemeral = false, metaSetter){\n        this.pubsubTopic = pubsubTopic;\n        this.contentTopic = contentTopic;\n        this.symKey = symKey;\n        this.sigPrivKey = sigPrivKey;\n        this.ephemeral = ephemeral;\n        this.metaSetter = metaSetter;\n        if (!contentTopic || contentTopic === \"\") {\n            throw new Error(\"Content topic must be specified\");\n        }\n    }\n    async toWire(message) {\n        const protoMessage = await this.toProtoObj(message);\n        if (!protoMessage) return;\n        return _waku_proto__WEBPACK_IMPORTED_MODULE_2__.WakuMessage.encode(protoMessage);\n    }\n    async toProtoObj(message) {\n        const timestamp = message.timestamp ?? new Date();\n        const preparedPayload = await (0,_encryption_js__WEBPACK_IMPORTED_MODULE_6__.preCipher)(message.payload, this.sigPrivKey);\n        const payload = await (0,_encryption_js__WEBPACK_IMPORTED_MODULE_6__.encryptSymmetric)(preparedPayload, this.symKey);\n        const protoMessage = {\n            payload,\n            version: _misc_js__WEBPACK_IMPORTED_MODULE_7__.Version,\n            contentTopic: this.contentTopic,\n            timestamp: BigInt(timestamp.valueOf()) * _misc_js__WEBPACK_IMPORTED_MODULE_7__.OneMillion,\n            meta: undefined,\n            rateLimitProof: message.rateLimitProof,\n            ephemeral: this.ephemeral\n        };\n        if (this.metaSetter) {\n            const meta = this.metaSetter(protoMessage);\n            return {\n                ...protoMessage,\n                meta\n            };\n        }\n        return protoMessage;\n    }\n}\n/**\n * Creates an encoder that encrypts messages using symmetric encryption for the\n * given key, as defined in [26/WAKU2-PAYLOAD](https://rfc.vac.dev/spec/26/).\n *\n * An encoder is used to encode messages in the [`14/WAKU2-MESSAGE](https://rfc.vac.dev/spec/14/)\n * format to be sent over the Waku network. The resulting encoder can then be\n * pass to { @link @waku/interfaces!ISender.send } to automatically encrypt\n * and encode outgoing messages.\n *\n * The payload can optionally be signed with the given private key as defined\n * in [26/WAKU2-PAYLOAD](https://rfc.vac.dev/spec/26/).\n */ function createEncoder({ pubsubTopic = _waku_interfaces__WEBPACK_IMPORTED_MODULE_1__.DefaultPubsubTopic, pubsubTopicShardInfo, contentTopic, symKey, sigPrivKey, ephemeral = false, metaSetter }) {\n    return new Encoder((0,_waku_utils__WEBPACK_IMPORTED_MODULE_3__.determinePubsubTopic)(contentTopic, pubsubTopic ?? pubsubTopicShardInfo), contentTopic, symKey, sigPrivKey, ephemeral, metaSetter);\n}\nclass Decoder extends _waku_core_lib_message_version_0__WEBPACK_IMPORTED_MODULE_0__.Decoder {\n    constructor(pubsubTopic, contentTopic, symKey){\n        super(pubsubTopic, contentTopic);\n        this.symKey = symKey;\n    }\n    async fromProtoObj(pubsubTopic, protoMessage) {\n        const cipherPayload = protoMessage.payload;\n        if (protoMessage.version !== _misc_js__WEBPACK_IMPORTED_MODULE_7__.Version) {\n            log.error(\"Failed to decrypt due to incorrect version, expected:\", _misc_js__WEBPACK_IMPORTED_MODULE_7__.Version, \", actual:\", protoMessage.version);\n            return;\n        }\n        let payload;\n        try {\n            payload = await (0,_encryption_js__WEBPACK_IMPORTED_MODULE_6__.decryptSymmetric)(cipherPayload, this.symKey);\n        } catch (e) {\n            log.error(`Failed to decrypt message using asymmetric decryption for contentTopic: ${this.contentTopic}`, e);\n            return;\n        }\n        if (!payload) {\n            log.error(`Failed to decrypt payload for contentTopic ${this.contentTopic}`);\n            return;\n        }\n        const res = (0,_encryption_js__WEBPACK_IMPORTED_MODULE_6__.postCipher)(payload);\n        if (!res) {\n            log.error(`Failed to decode payload for contentTopic ${this.contentTopic}`);\n            return;\n        }\n        log.info(\"Message decrypted\", protoMessage);\n        return new _decoded_message_js__WEBPACK_IMPORTED_MODULE_5__.DecodedMessage(pubsubTopic, protoMessage, res.payload, res.sig?.signature, res.sig?.publicKey);\n    }\n}\n/**\n * Creates a decoder that decrypts messages using symmetric encryption, using\n * the given key as defined in [26/WAKU2-PAYLOAD](https://rfc.vac.dev/spec/26/).\n *\n * A decoder is used to decode messages from the [14/WAKU2-MESSAGE](https://rfc.vac.dev/spec/14/)\n * format when received from the Waku network. The resulting decoder can then be\n * pass to { @link @waku/interfaces!IReceiver.subscribe } to automatically decrypt and\n * decode incoming messages.\n *\n * @param contentTopic The resulting decoder will only decode messages with this content topic.\n * @param symKey The symmetric key used to decrypt the message.\n */ function createDecoder(contentTopic, symKey, pubsubTopicShardInfo = _waku_interfaces__WEBPACK_IMPORTED_MODULE_1__.DefaultPubsubTopic) {\n    return new Decoder((0,_waku_utils__WEBPACK_IMPORTED_MODULE_3__.determinePubsubTopic)(contentTopic, pubsubTopicShardInfo), contentTopic, symKey);\n} //# sourceMappingURL=symmetric.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/message-encryption/dist/symmetric.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/message-encryption/node_modules/@waku/utils/dist/bytes/index.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@waku/message-encryption/node_modules/@waku/utils/dist/bytes/index.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   bytesToHex: () => (/* binding */ bytesToHex),\n/* harmony export */   bytesToUtf8: () => (/* binding */ bytesToUtf8),\n/* harmony export */   concat: () => (/* binding */ concat),\n/* harmony export */   hexToBytes: () => (/* binding */ hexToBytes),\n/* harmony export */   utf8ToBytes: () => (/* binding */ utf8ToBytes)\n/* harmony export */ });\n/* harmony import */ var uint8arrays_from_string__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! uint8arrays/from-string */ \"(ssr)/./node_modules/uint8arrays/dist/src/from-string.node.js\");\n/* harmony import */ var uint8arrays_to_string__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! uint8arrays/to-string */ \"(ssr)/./node_modules/uint8arrays/dist/src/to-string.node.js\");\n\n\n/**\n * Convert input to a byte array.\n *\n * Handles both `0x` prefixed and non-prefixed strings.\n */ function hexToBytes(hex) {\n    if (typeof hex === \"string\") {\n        const _hex = hex.replace(/^0x/i, \"\");\n        return (0,uint8arrays_from_string__WEBPACK_IMPORTED_MODULE_0__.fromString)(_hex.toLowerCase(), \"base16\");\n    }\n    return hex;\n}\n/**\n * Convert byte array to hex string (no `0x` prefix).\n */ const bytesToHex = (bytes)=>(0,uint8arrays_to_string__WEBPACK_IMPORTED_MODULE_1__.toString)(bytes, \"base16\");\n/**\n * Decode byte array to utf-8 string.\n */ const bytesToUtf8 = (b)=>(0,uint8arrays_to_string__WEBPACK_IMPORTED_MODULE_1__.toString)(b, \"utf8\");\n/**\n * Encode utf-8 string to byte array.\n */ const utf8ToBytes = (s)=>(0,uint8arrays_from_string__WEBPACK_IMPORTED_MODULE_0__.fromString)(s, \"utf8\");\n/**\n * Concatenate using Uint8Arrays as `Buffer` has a different behavior with `DataView`\n */ function concat(byteArrays, totalLength) {\n    const len = totalLength ?? byteArrays.reduce((acc, curr)=>acc + curr.length, 0);\n    const res = new Uint8Array(len);\n    let offset = 0;\n    for (const bytes of byteArrays){\n        res.set(bytes, offset);\n        offset += bytes.length;\n    }\n    return res;\n} //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdha3UvbWVzc2FnZS1lbmNyeXB0aW9uL25vZGVfbW9kdWxlcy9Ad2FrdS91dGlscy9kaXN0L2J5dGVzL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBcUQ7QUFDSjtBQUNqRDs7OztDQUlDLEdBQ00sU0FBU0UsV0FBV0MsR0FBRztJQUMxQixJQUFJLE9BQU9BLFFBQVEsVUFBVTtRQUN6QixNQUFNQyxPQUFPRCxJQUFJRSxPQUFPLENBQUMsUUFBUTtRQUNqQyxPQUFPTCxtRUFBVUEsQ0FBQ0ksS0FBS0UsV0FBVyxJQUFJO0lBQzFDO0lBQ0EsT0FBT0g7QUFDWDtBQUNBOztDQUVDLEdBQ00sTUFBTUksYUFBYSxDQUFDQyxRQUFVUCwrREFBUUEsQ0FBQ08sT0FBTyxVQUFVO0FBQy9EOztDQUVDLEdBQ00sTUFBTUMsY0FBYyxDQUFDQyxJQUFNVCwrREFBUUEsQ0FBQ1MsR0FBRyxRQUFRO0FBQ3REOztDQUVDLEdBQ00sTUFBTUMsY0FBYyxDQUFDQyxJQUFNWixtRUFBVUEsQ0FBQ1ksR0FBRyxRQUFRO0FBQ3hEOztDQUVDLEdBQ00sU0FBU0MsT0FBT0MsVUFBVSxFQUFFQyxXQUFXO0lBQzFDLE1BQU1DLE1BQU1ELGVBQWVELFdBQVdHLE1BQU0sQ0FBQyxDQUFDQyxLQUFLQyxPQUFTRCxNQUFNQyxLQUFLQyxNQUFNLEVBQUU7SUFDL0UsTUFBTUMsTUFBTSxJQUFJQyxXQUFXTjtJQUMzQixJQUFJTyxTQUFTO0lBQ2IsS0FBSyxNQUFNZixTQUFTTSxXQUFZO1FBQzVCTyxJQUFJRyxHQUFHLENBQUNoQixPQUFPZTtRQUNmQSxVQUFVZixNQUFNWSxNQUFNO0lBQzFCO0lBQ0EsT0FBT0M7QUFDWCxFQUNBLGlDQUFpQyIsInNvdXJjZXMiOlsid2VicGFjazovL2ZsdXNoLW5vdGVzLy4vbm9kZV9tb2R1bGVzL0B3YWt1L21lc3NhZ2UtZW5jcnlwdGlvbi9ub2RlX21vZHVsZXMvQHdha3UvdXRpbHMvZGlzdC9ieXRlcy9pbmRleC5qcz81NWYyIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGZyb21TdHJpbmcgfSBmcm9tIFwidWludDhhcnJheXMvZnJvbS1zdHJpbmdcIjtcbmltcG9ydCB7IHRvU3RyaW5nIH0gZnJvbSBcInVpbnQ4YXJyYXlzL3RvLXN0cmluZ1wiO1xuLyoqXG4gKiBDb252ZXJ0IGlucHV0IHRvIGEgYnl0ZSBhcnJheS5cbiAqXG4gKiBIYW5kbGVzIGJvdGggYDB4YCBwcmVmaXhlZCBhbmQgbm9uLXByZWZpeGVkIHN0cmluZ3MuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBoZXhUb0J5dGVzKGhleCkge1xuICAgIGlmICh0eXBlb2YgaGV4ID09PSBcInN0cmluZ1wiKSB7XG4gICAgICAgIGNvbnN0IF9oZXggPSBoZXgucmVwbGFjZSgvXjB4L2ksIFwiXCIpO1xuICAgICAgICByZXR1cm4gZnJvbVN0cmluZyhfaGV4LnRvTG93ZXJDYXNlKCksIFwiYmFzZTE2XCIpO1xuICAgIH1cbiAgICByZXR1cm4gaGV4O1xufVxuLyoqXG4gKiBDb252ZXJ0IGJ5dGUgYXJyYXkgdG8gaGV4IHN0cmluZyAobm8gYDB4YCBwcmVmaXgpLlxuICovXG5leHBvcnQgY29uc3QgYnl0ZXNUb0hleCA9IChieXRlcykgPT4gdG9TdHJpbmcoYnl0ZXMsIFwiYmFzZTE2XCIpO1xuLyoqXG4gKiBEZWNvZGUgYnl0ZSBhcnJheSB0byB1dGYtOCBzdHJpbmcuXG4gKi9cbmV4cG9ydCBjb25zdCBieXRlc1RvVXRmOCA9IChiKSA9PiB0b1N0cmluZyhiLCBcInV0ZjhcIik7XG4vKipcbiAqIEVuY29kZSB1dGYtOCBzdHJpbmcgdG8gYnl0ZSBhcnJheS5cbiAqL1xuZXhwb3J0IGNvbnN0IHV0ZjhUb0J5dGVzID0gKHMpID0+IGZyb21TdHJpbmcocywgXCJ1dGY4XCIpO1xuLyoqXG4gKiBDb25jYXRlbmF0ZSB1c2luZyBVaW50OEFycmF5cyBhcyBgQnVmZmVyYCBoYXMgYSBkaWZmZXJlbnQgYmVoYXZpb3Igd2l0aCBgRGF0YVZpZXdgXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjb25jYXQoYnl0ZUFycmF5cywgdG90YWxMZW5ndGgpIHtcbiAgICBjb25zdCBsZW4gPSB0b3RhbExlbmd0aCA/PyBieXRlQXJyYXlzLnJlZHVjZSgoYWNjLCBjdXJyKSA9PiBhY2MgKyBjdXJyLmxlbmd0aCwgMCk7XG4gICAgY29uc3QgcmVzID0gbmV3IFVpbnQ4QXJyYXkobGVuKTtcbiAgICBsZXQgb2Zmc2V0ID0gMDtcbiAgICBmb3IgKGNvbnN0IGJ5dGVzIG9mIGJ5dGVBcnJheXMpIHtcbiAgICAgICAgcmVzLnNldChieXRlcywgb2Zmc2V0KTtcbiAgICAgICAgb2Zmc2V0ICs9IGJ5dGVzLmxlbmd0aDtcbiAgICB9XG4gICAgcmV0dXJuIHJlcztcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJuYW1lcyI6WyJmcm9tU3RyaW5nIiwidG9TdHJpbmciLCJoZXhUb0J5dGVzIiwiaGV4IiwiX2hleCIsInJlcGxhY2UiLCJ0b0xvd2VyQ2FzZSIsImJ5dGVzVG9IZXgiLCJieXRlcyIsImJ5dGVzVG9VdGY4IiwiYiIsInV0ZjhUb0J5dGVzIiwicyIsImNvbmNhdCIsImJ5dGVBcnJheXMiLCJ0b3RhbExlbmd0aCIsImxlbiIsInJlZHVjZSIsImFjYyIsImN1cnIiLCJsZW5ndGgiLCJyZXMiLCJVaW50OEFycmF5Iiwib2Zmc2V0Iiwic2V0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/message-encryption/node_modules/@waku/utils/dist/bytes/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/message-encryption/node_modules/@waku/utils/dist/common/group_by.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/@waku/message-encryption/node_modules/@waku/utils/dist/common/group_by.js ***!
  \************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   groupByContentTopic: () => (/* binding */ groupByContentTopic)\n/* harmony export */ });\nfunction groupByContentTopic(values) {\n    const groupedDecoders = new Map();\n    values.forEach((value)=>{\n        let decs = groupedDecoders.get(value.contentTopic);\n        if (!decs) {\n            groupedDecoders.set(value.contentTopic, []);\n            decs = groupedDecoders.get(value.contentTopic);\n        }\n        decs.push(value);\n    });\n    return groupedDecoders;\n} //# sourceMappingURL=group_by.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdha3UvbWVzc2FnZS1lbmNyeXB0aW9uL25vZGVfbW9kdWxlcy9Ad2FrdS91dGlscy9kaXN0L2NvbW1vbi9ncm91cF9ieS5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQU8sU0FBU0Esb0JBQW9CQyxNQUFNO0lBQ3RDLE1BQU1DLGtCQUFrQixJQUFJQztJQUM1QkYsT0FBT0csT0FBTyxDQUFDLENBQUNDO1FBQ1osSUFBSUMsT0FBT0osZ0JBQWdCSyxHQUFHLENBQUNGLE1BQU1HLFlBQVk7UUFDakQsSUFBSSxDQUFDRixNQUFNO1lBQ1BKLGdCQUFnQk8sR0FBRyxDQUFDSixNQUFNRyxZQUFZLEVBQUUsRUFBRTtZQUMxQ0YsT0FBT0osZ0JBQWdCSyxHQUFHLENBQUNGLE1BQU1HLFlBQVk7UUFDakQ7UUFDQUYsS0FBS0ksSUFBSSxDQUFDTDtJQUNkO0lBQ0EsT0FBT0g7QUFDWCxFQUNBLG9DQUFvQyIsInNvdXJjZXMiOlsid2VicGFjazovL2ZsdXNoLW5vdGVzLy4vbm9kZV9tb2R1bGVzL0B3YWt1L21lc3NhZ2UtZW5jcnlwdGlvbi9ub2RlX21vZHVsZXMvQHdha3UvdXRpbHMvZGlzdC9jb21tb24vZ3JvdXBfYnkuanM/OTMxMSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZnVuY3Rpb24gZ3JvdXBCeUNvbnRlbnRUb3BpYyh2YWx1ZXMpIHtcbiAgICBjb25zdCBncm91cGVkRGVjb2RlcnMgPSBuZXcgTWFwKCk7XG4gICAgdmFsdWVzLmZvckVhY2goKHZhbHVlKSA9PiB7XG4gICAgICAgIGxldCBkZWNzID0gZ3JvdXBlZERlY29kZXJzLmdldCh2YWx1ZS5jb250ZW50VG9waWMpO1xuICAgICAgICBpZiAoIWRlY3MpIHtcbiAgICAgICAgICAgIGdyb3VwZWREZWNvZGVycy5zZXQodmFsdWUuY29udGVudFRvcGljLCBbXSk7XG4gICAgICAgICAgICBkZWNzID0gZ3JvdXBlZERlY29kZXJzLmdldCh2YWx1ZS5jb250ZW50VG9waWMpO1xuICAgICAgICB9XG4gICAgICAgIGRlY3MucHVzaCh2YWx1ZSk7XG4gICAgfSk7XG4gICAgcmV0dXJuIGdyb3VwZWREZWNvZGVycztcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWdyb3VwX2J5LmpzLm1hcCJdLCJuYW1lcyI6WyJncm91cEJ5Q29udGVudFRvcGljIiwidmFsdWVzIiwiZ3JvdXBlZERlY29kZXJzIiwiTWFwIiwiZm9yRWFjaCIsInZhbHVlIiwiZGVjcyIsImdldCIsImNvbnRlbnRUb3BpYyIsInNldCIsInB1c2giXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/message-encryption/node_modules/@waku/utils/dist/common/group_by.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/message-encryption/node_modules/@waku/utils/dist/common/index.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@waku/message-encryption/node_modules/@waku/utils/dist/common/index.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   contentTopicToPubsubTopic: () => (/* reexport safe */ _sharding_js__WEBPACK_IMPORTED_MODULE_5__.contentTopicToPubsubTopic),\n/* harmony export */   contentTopicToShardIndex: () => (/* reexport safe */ _sharding_js__WEBPACK_IMPORTED_MODULE_5__.contentTopicToShardIndex),\n/* harmony export */   contentTopicsByPubsubTopic: () => (/* reexport safe */ _sharding_js__WEBPACK_IMPORTED_MODULE_5__.contentTopicsByPubsubTopic),\n/* harmony export */   decodeRelayShard: () => (/* reexport safe */ _relay_shard_codec_js__WEBPACK_IMPORTED_MODULE_7__.decodeRelayShard),\n/* harmony export */   determinePubsubTopic: () => (/* reexport safe */ _sharding_js__WEBPACK_IMPORTED_MODULE_5__.determinePubsubTopic),\n/* harmony export */   encodeRelayShard: () => (/* reexport safe */ _relay_shard_codec_js__WEBPACK_IMPORTED_MODULE_7__.encodeRelayShard),\n/* harmony export */   ensurePubsubTopicIsConfigured: () => (/* reexport safe */ _sharding_js__WEBPACK_IMPORTED_MODULE_5__.ensurePubsubTopicIsConfigured),\n/* harmony export */   ensureShardingConfigured: () => (/* reexport safe */ _sharding_js__WEBPACK_IMPORTED_MODULE_5__.ensureShardingConfigured),\n/* harmony export */   ensureValidContentTopic: () => (/* reexport safe */ _sharding_js__WEBPACK_IMPORTED_MODULE_5__.ensureValidContentTopic),\n/* harmony export */   getPseudoRandomSubset: () => (/* reexport safe */ _random_subset_js__WEBPACK_IMPORTED_MODULE_1__.getPseudoRandomSubset),\n/* harmony export */   getWsMultiaddrFromMultiaddrs: () => (/* binding */ getWsMultiaddrFromMultiaddrs),\n/* harmony export */   groupByContentTopic: () => (/* reexport safe */ _group_by_js__WEBPACK_IMPORTED_MODULE_2__.groupByContentTopic),\n/* harmony export */   isDefined: () => (/* reexport safe */ _is_defined_js__WEBPACK_IMPORTED_MODULE_0__.isDefined),\n/* harmony export */   isMessageSizeUnderCap: () => (/* reexport safe */ _is_size_valid_js__WEBPACK_IMPORTED_MODULE_4__.isMessageSizeUnderCap),\n/* harmony export */   isWireSizeUnderCap: () => (/* reexport safe */ _is_size_valid_js__WEBPACK_IMPORTED_MODULE_4__.isWireSizeUnderCap),\n/* harmony export */   pubsubTopicToSingleShardInfo: () => (/* reexport safe */ _sharding_js__WEBPACK_IMPORTED_MODULE_5__.pubsubTopicToSingleShardInfo),\n/* harmony export */   pushOrInitMapSet: () => (/* reexport safe */ _push_or_init_map_js__WEBPACK_IMPORTED_MODULE_6__.pushOrInitMapSet),\n/* harmony export */   removeItemFromArray: () => (/* binding */ removeItemFromArray),\n/* harmony export */   shardInfoToPubsubTopics: () => (/* reexport safe */ _sharding_js__WEBPACK_IMPORTED_MODULE_5__.shardInfoToPubsubTopics),\n/* harmony export */   singleShardInfoToPubsubTopic: () => (/* reexport safe */ _sharding_js__WEBPACK_IMPORTED_MODULE_5__.singleShardInfoToPubsubTopic),\n/* harmony export */   singleShardInfosToShardInfo: () => (/* reexport safe */ _sharding_js__WEBPACK_IMPORTED_MODULE_5__.singleShardInfosToShardInfo),\n/* harmony export */   toAsyncIterator: () => (/* reexport safe */ _to_async_iterator_js__WEBPACK_IMPORTED_MODULE_3__.toAsyncIterator)\n/* harmony export */ });\n/* harmony import */ var _is_defined_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./is_defined.js */ \"(ssr)/./node_modules/@waku/message-encryption/node_modules/@waku/utils/dist/common/is_defined.js\");\n/* harmony import */ var _random_subset_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./random_subset.js */ \"(ssr)/./node_modules/@waku/message-encryption/node_modules/@waku/utils/dist/common/random_subset.js\");\n/* harmony import */ var _group_by_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./group_by.js */ \"(ssr)/./node_modules/@waku/message-encryption/node_modules/@waku/utils/dist/common/group_by.js\");\n/* harmony import */ var _to_async_iterator_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./to_async_iterator.js */ \"(ssr)/./node_modules/@waku/message-encryption/node_modules/@waku/utils/dist/common/to_async_iterator.js\");\n/* harmony import */ var _is_size_valid_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./is_size_valid.js */ \"(ssr)/./node_modules/@waku/message-encryption/node_modules/@waku/utils/dist/common/is_size_valid.js\");\n/* harmony import */ var _sharding_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./sharding.js */ \"(ssr)/./node_modules/@waku/message-encryption/node_modules/@waku/utils/dist/common/sharding.js\");\n/* harmony import */ var _push_or_init_map_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./push_or_init_map.js */ \"(ssr)/./node_modules/@waku/message-encryption/node_modules/@waku/utils/dist/common/push_or_init_map.js\");\n/* harmony import */ var _relay_shard_codec_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./relay_shard_codec.js */ \"(ssr)/./node_modules/@waku/message-encryption/node_modules/@waku/utils/dist/common/relay_shard_codec.js\");\n\n\n\n\n\n\n\n\nfunction removeItemFromArray(arr, value) {\n    const index = arr.indexOf(value);\n    if (index > -1) {\n        arr.splice(index, 1);\n    }\n    return arr;\n}\nfunction getWsMultiaddrFromMultiaddrs(addresses) {\n    const wsMultiaddr = addresses.find((addr)=>addr.toString().includes(\"ws\") || addr.toString().includes(\"wss\"));\n    if (!wsMultiaddr) {\n        throw new Error(\"No ws multiaddr found in the given addresses\");\n    }\n    return wsMultiaddr;\n} //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdha3UvbWVzc2FnZS1lbmNyeXB0aW9uL25vZGVfbW9kdWxlcy9Ad2FrdS91dGlscy9kaXN0L2NvbW1vbi9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBZ0M7QUFDRztBQUNMO0FBQ1M7QUFDSjtBQUNMO0FBQ1E7QUFDQztBQUNoQyxTQUFTQSxvQkFBb0JDLEdBQUcsRUFBRUMsS0FBSztJQUMxQyxNQUFNQyxRQUFRRixJQUFJRyxPQUFPLENBQUNGO0lBQzFCLElBQUlDLFFBQVEsQ0FBQyxHQUFHO1FBQ1pGLElBQUlJLE1BQU0sQ0FBQ0YsT0FBTztJQUN0QjtJQUNBLE9BQU9GO0FBQ1g7QUFDTyxTQUFTSyw2QkFBNkJDLFNBQVM7SUFDbEQsTUFBTUMsY0FBY0QsVUFBVUUsSUFBSSxDQUFDLENBQUNDLE9BQVNBLEtBQUtDLFFBQVEsR0FBR0MsUUFBUSxDQUFDLFNBQVNGLEtBQUtDLFFBQVEsR0FBR0MsUUFBUSxDQUFDO0lBQ3hHLElBQUksQ0FBQ0osYUFBYTtRQUNkLE1BQU0sSUFBSUssTUFBTTtJQUNwQjtJQUNBLE9BQU9MO0FBQ1gsRUFDQSxpQ0FBaUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mbHVzaC1ub3Rlcy8uL25vZGVfbW9kdWxlcy9Ad2FrdS9tZXNzYWdlLWVuY3J5cHRpb24vbm9kZV9tb2R1bGVzL0B3YWt1L3V0aWxzL2Rpc3QvY29tbW9uL2luZGV4LmpzPzEyM2YiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0ICogZnJvbSBcIi4vaXNfZGVmaW5lZC5qc1wiO1xuZXhwb3J0ICogZnJvbSBcIi4vcmFuZG9tX3N1YnNldC5qc1wiO1xuZXhwb3J0ICogZnJvbSBcIi4vZ3JvdXBfYnkuanNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL3RvX2FzeW5jX2l0ZXJhdG9yLmpzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9pc19zaXplX3ZhbGlkLmpzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9zaGFyZGluZy5qc1wiO1xuZXhwb3J0ICogZnJvbSBcIi4vcHVzaF9vcl9pbml0X21hcC5qc1wiO1xuZXhwb3J0ICogZnJvbSBcIi4vcmVsYXlfc2hhcmRfY29kZWMuanNcIjtcbmV4cG9ydCBmdW5jdGlvbiByZW1vdmVJdGVtRnJvbUFycmF5KGFyciwgdmFsdWUpIHtcbiAgICBjb25zdCBpbmRleCA9IGFyci5pbmRleE9mKHZhbHVlKTtcbiAgICBpZiAoaW5kZXggPiAtMSkge1xuICAgICAgICBhcnIuc3BsaWNlKGluZGV4LCAxKTtcbiAgICB9XG4gICAgcmV0dXJuIGFycjtcbn1cbmV4cG9ydCBmdW5jdGlvbiBnZXRXc011bHRpYWRkckZyb21NdWx0aWFkZHJzKGFkZHJlc3Nlcykge1xuICAgIGNvbnN0IHdzTXVsdGlhZGRyID0gYWRkcmVzc2VzLmZpbmQoKGFkZHIpID0+IGFkZHIudG9TdHJpbmcoKS5pbmNsdWRlcyhcIndzXCIpIHx8IGFkZHIudG9TdHJpbmcoKS5pbmNsdWRlcyhcIndzc1wiKSk7XG4gICAgaWYgKCF3c011bHRpYWRkcikge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJObyB3cyBtdWx0aWFkZHIgZm91bmQgaW4gdGhlIGdpdmVuIGFkZHJlc3Nlc1wiKTtcbiAgICB9XG4gICAgcmV0dXJuIHdzTXVsdGlhZGRyO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbInJlbW92ZUl0ZW1Gcm9tQXJyYXkiLCJhcnIiLCJ2YWx1ZSIsImluZGV4IiwiaW5kZXhPZiIsInNwbGljZSIsImdldFdzTXVsdGlhZGRyRnJvbU11bHRpYWRkcnMiLCJhZGRyZXNzZXMiLCJ3c011bHRpYWRkciIsImZpbmQiLCJhZGRyIiwidG9TdHJpbmciLCJpbmNsdWRlcyIsIkVycm9yIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/message-encryption/node_modules/@waku/utils/dist/common/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/message-encryption/node_modules/@waku/utils/dist/common/is_defined.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/@waku/message-encryption/node_modules/@waku/utils/dist/common/is_defined.js ***!
  \**************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isDefined: () => (/* binding */ isDefined)\n/* harmony export */ });\nfunction isDefined(value) {\n    return Boolean(value);\n} //# sourceMappingURL=is_defined.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdha3UvbWVzc2FnZS1lbmNyeXB0aW9uL25vZGVfbW9kdWxlcy9Ad2FrdS91dGlscy9kaXN0L2NvbW1vbi9pc19kZWZpbmVkLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBTyxTQUFTQSxVQUFVQyxLQUFLO0lBQzNCLE9BQU9DLFFBQVFEO0FBQ25CLEVBQ0Esc0NBQXNDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZmx1c2gtbm90ZXMvLi9ub2RlX21vZHVsZXMvQHdha3UvbWVzc2FnZS1lbmNyeXB0aW9uL25vZGVfbW9kdWxlcy9Ad2FrdS91dGlscy9kaXN0L2NvbW1vbi9pc19kZWZpbmVkLmpzPzVhMWQiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGZ1bmN0aW9uIGlzRGVmaW5lZCh2YWx1ZSkge1xuICAgIHJldHVybiBCb29sZWFuKHZhbHVlKTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWlzX2RlZmluZWQuanMubWFwIl0sIm5hbWVzIjpbImlzRGVmaW5lZCIsInZhbHVlIiwiQm9vbGVhbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/message-encryption/node_modules/@waku/utils/dist/common/is_defined.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/message-encryption/node_modules/@waku/utils/dist/common/is_size_valid.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/@waku/message-encryption/node_modules/@waku/utils/dist/common/is_size_valid.js ***!
  \*****************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isMessageSizeUnderCap: () => (/* binding */ isMessageSizeUnderCap),\n/* harmony export */   isWireSizeUnderCap: () => (/* binding */ isWireSizeUnderCap)\n/* harmony export */ });\nconst MB = 1024 ** 2;\nconst SIZE_CAP_IN_MB = 1;\n/**\n * Return whether the size of the message is under the upper limit for the network.\n * This performs a protobuf encoding! If you have access to the fully encoded message,\n * use {@link isSizeUnderCapBuf} instead.\n * @param message\n * @param encoder\n */ async function isMessageSizeUnderCap(encoder, message) {\n    const buf = await encoder.toWire(message);\n    if (!buf) return false;\n    return isWireSizeUnderCap(buf);\n}\nconst isWireSizeUnderCap = (buf)=>buf.length / MB <= SIZE_CAP_IN_MB; //# sourceMappingURL=is_size_valid.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdha3UvbWVzc2FnZS1lbmNyeXB0aW9uL25vZGVfbW9kdWxlcy9Ad2FrdS91dGlscy9kaXN0L2NvbW1vbi9pc19zaXplX3ZhbGlkLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsTUFBTUEsS0FBSyxRQUFRO0FBQ25CLE1BQU1DLGlCQUFpQjtBQUN2Qjs7Ozs7O0NBTUMsR0FDTSxlQUFlQyxzQkFBc0JDLE9BQU8sRUFBRUMsT0FBTztJQUN4RCxNQUFNQyxNQUFNLE1BQU1GLFFBQVFHLE1BQU0sQ0FBQ0Y7SUFDakMsSUFBSSxDQUFDQyxLQUNELE9BQU87SUFDWCxPQUFPRSxtQkFBbUJGO0FBQzlCO0FBQ08sTUFBTUUscUJBQXFCLENBQUNGLE1BQVFBLElBQUlHLE1BQU0sR0FBR1IsTUFBTUMsZUFBZSxDQUM3RSx5Q0FBeUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mbHVzaC1ub3Rlcy8uL25vZGVfbW9kdWxlcy9Ad2FrdS9tZXNzYWdlLWVuY3J5cHRpb24vbm9kZV9tb2R1bGVzL0B3YWt1L3V0aWxzL2Rpc3QvY29tbW9uL2lzX3NpemVfdmFsaWQuanM/OGYxOSJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBNQiA9IDEwMjQgKiogMjtcbmNvbnN0IFNJWkVfQ0FQX0lOX01CID0gMTtcbi8qKlxuICogUmV0dXJuIHdoZXRoZXIgdGhlIHNpemUgb2YgdGhlIG1lc3NhZ2UgaXMgdW5kZXIgdGhlIHVwcGVyIGxpbWl0IGZvciB0aGUgbmV0d29yay5cbiAqIFRoaXMgcGVyZm9ybXMgYSBwcm90b2J1ZiBlbmNvZGluZyEgSWYgeW91IGhhdmUgYWNjZXNzIHRvIHRoZSBmdWxseSBlbmNvZGVkIG1lc3NhZ2UsXG4gKiB1c2Uge0BsaW5rIGlzU2l6ZVVuZGVyQ2FwQnVmfSBpbnN0ZWFkLlxuICogQHBhcmFtIG1lc3NhZ2VcbiAqIEBwYXJhbSBlbmNvZGVyXG4gKi9cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBpc01lc3NhZ2VTaXplVW5kZXJDYXAoZW5jb2RlciwgbWVzc2FnZSkge1xuICAgIGNvbnN0IGJ1ZiA9IGF3YWl0IGVuY29kZXIudG9XaXJlKG1lc3NhZ2UpO1xuICAgIGlmICghYnVmKVxuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgcmV0dXJuIGlzV2lyZVNpemVVbmRlckNhcChidWYpO1xufVxuZXhwb3J0IGNvbnN0IGlzV2lyZVNpemVVbmRlckNhcCA9IChidWYpID0+IGJ1Zi5sZW5ndGggLyBNQiA8PSBTSVpFX0NBUF9JTl9NQjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWlzX3NpemVfdmFsaWQuanMubWFwIl0sIm5hbWVzIjpbIk1CIiwiU0laRV9DQVBfSU5fTUIiLCJpc01lc3NhZ2VTaXplVW5kZXJDYXAiLCJlbmNvZGVyIiwibWVzc2FnZSIsImJ1ZiIsInRvV2lyZSIsImlzV2lyZVNpemVVbmRlckNhcCIsImxlbmd0aCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/message-encryption/node_modules/@waku/utils/dist/common/is_size_valid.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/message-encryption/node_modules/@waku/utils/dist/common/push_or_init_map.js":
/*!********************************************************************************************************!*\
  !*** ./node_modules/@waku/message-encryption/node_modules/@waku/utils/dist/common/push_or_init_map.js ***!
  \********************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   pushOrInitMapSet: () => (/* binding */ pushOrInitMapSet)\n/* harmony export */ });\nfunction pushOrInitMapSet(map, key, newValue) {\n    let arr = map.get(key);\n    if (typeof arr === \"undefined\") {\n        map.set(key, new Set());\n        arr = map.get(key);\n    }\n    arr.add(newValue);\n} //# sourceMappingURL=push_or_init_map.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdha3UvbWVzc2FnZS1lbmNyeXB0aW9uL25vZGVfbW9kdWxlcy9Ad2FrdS91dGlscy9kaXN0L2NvbW1vbi9wdXNoX29yX2luaXRfbWFwLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBTyxTQUFTQSxpQkFBaUJDLEdBQUcsRUFBRUMsR0FBRyxFQUFFQyxRQUFRO0lBQy9DLElBQUlDLE1BQU1ILElBQUlJLEdBQUcsQ0FBQ0g7SUFDbEIsSUFBSSxPQUFPRSxRQUFRLGFBQWE7UUFDNUJILElBQUlLLEdBQUcsQ0FBQ0osS0FBSyxJQUFJSztRQUNqQkgsTUFBTUgsSUFBSUksR0FBRyxDQUFDSDtJQUNsQjtJQUNBRSxJQUFJSSxHQUFHLENBQUNMO0FBQ1osRUFDQSw0Q0FBNEMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mbHVzaC1ub3Rlcy8uL25vZGVfbW9kdWxlcy9Ad2FrdS9tZXNzYWdlLWVuY3J5cHRpb24vbm9kZV9tb2R1bGVzL0B3YWt1L3V0aWxzL2Rpc3QvY29tbW9uL3B1c2hfb3JfaW5pdF9tYXAuanM/MzE4MSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZnVuY3Rpb24gcHVzaE9ySW5pdE1hcFNldChtYXAsIGtleSwgbmV3VmFsdWUpIHtcbiAgICBsZXQgYXJyID0gbWFwLmdldChrZXkpO1xuICAgIGlmICh0eXBlb2YgYXJyID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICAgIG1hcC5zZXQoa2V5LCBuZXcgU2V0KCkpO1xuICAgICAgICBhcnIgPSBtYXAuZ2V0KGtleSk7XG4gICAgfVxuICAgIGFyci5hZGQobmV3VmFsdWUpO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cHVzaF9vcl9pbml0X21hcC5qcy5tYXAiXSwibmFtZXMiOlsicHVzaE9ySW5pdE1hcFNldCIsIm1hcCIsImtleSIsIm5ld1ZhbHVlIiwiYXJyIiwiZ2V0Iiwic2V0IiwiU2V0IiwiYWRkIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/message-encryption/node_modules/@waku/utils/dist/common/push_or_init_map.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/message-encryption/node_modules/@waku/utils/dist/common/random_subset.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/@waku/message-encryption/node_modules/@waku/utils/dist/common/random_subset.js ***!
  \*****************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getPseudoRandomSubset: () => (/* binding */ getPseudoRandomSubset)\n/* harmony export */ });\n/**\n * Return pseudo random subset of the input.\n */ function getPseudoRandomSubset(values, wantedNumber) {\n    if (values.length <= wantedNumber || values.length <= 1) {\n        return values;\n    }\n    return shuffle(values).slice(0, wantedNumber);\n}\nfunction shuffle(arr) {\n    if (arr.length <= 1) {\n        return arr;\n    }\n    const randInt = ()=>{\n        return Math.floor(Math.random() * Math.floor(arr.length));\n    };\n    for(let i = 0; i < arr.length; i++){\n        const j = randInt();\n        const tmp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = tmp;\n    }\n    return arr;\n} //# sourceMappingURL=random_subset.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdha3UvbWVzc2FnZS1lbmNyeXB0aW9uL25vZGVfbW9kdWxlcy9Ad2FrdS91dGlscy9kaXN0L2NvbW1vbi9yYW5kb21fc3Vic2V0LmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTs7Q0FFQyxHQUNNLFNBQVNBLHNCQUFzQkMsTUFBTSxFQUFFQyxZQUFZO0lBQ3RELElBQUlELE9BQU9FLE1BQU0sSUFBSUQsZ0JBQWdCRCxPQUFPRSxNQUFNLElBQUksR0FBRztRQUNyRCxPQUFPRjtJQUNYO0lBQ0EsT0FBT0csUUFBUUgsUUFBUUksS0FBSyxDQUFDLEdBQUdIO0FBQ3BDO0FBQ0EsU0FBU0UsUUFBUUUsR0FBRztJQUNoQixJQUFJQSxJQUFJSCxNQUFNLElBQUksR0FBRztRQUNqQixPQUFPRztJQUNYO0lBQ0EsTUFBTUMsVUFBVTtRQUNaLE9BQU9DLEtBQUtDLEtBQUssQ0FBQ0QsS0FBS0UsTUFBTSxLQUFLRixLQUFLQyxLQUFLLENBQUNILElBQUlILE1BQU07SUFDM0Q7SUFDQSxJQUFLLElBQUlRLElBQUksR0FBR0EsSUFBSUwsSUFBSUgsTUFBTSxFQUFFUSxJQUFLO1FBQ2pDLE1BQU1DLElBQUlMO1FBQ1YsTUFBTU0sTUFBTVAsR0FBRyxDQUFDSyxFQUFFO1FBQ2xCTCxHQUFHLENBQUNLLEVBQUUsR0FBR0wsR0FBRyxDQUFDTSxFQUFFO1FBQ2ZOLEdBQUcsQ0FBQ00sRUFBRSxHQUFHQztJQUNiO0lBQ0EsT0FBT1A7QUFDWCxFQUNBLHlDQUF5QyIsInNvdXJjZXMiOlsid2VicGFjazovL2ZsdXNoLW5vdGVzLy4vbm9kZV9tb2R1bGVzL0B3YWt1L21lc3NhZ2UtZW5jcnlwdGlvbi9ub2RlX21vZHVsZXMvQHdha3UvdXRpbHMvZGlzdC9jb21tb24vcmFuZG9tX3N1YnNldC5qcz81NzQxIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogUmV0dXJuIHBzZXVkbyByYW5kb20gc3Vic2V0IG9mIHRoZSBpbnB1dC5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGdldFBzZXVkb1JhbmRvbVN1YnNldCh2YWx1ZXMsIHdhbnRlZE51bWJlcikge1xuICAgIGlmICh2YWx1ZXMubGVuZ3RoIDw9IHdhbnRlZE51bWJlciB8fCB2YWx1ZXMubGVuZ3RoIDw9IDEpIHtcbiAgICAgICAgcmV0dXJuIHZhbHVlcztcbiAgICB9XG4gICAgcmV0dXJuIHNodWZmbGUodmFsdWVzKS5zbGljZSgwLCB3YW50ZWROdW1iZXIpO1xufVxuZnVuY3Rpb24gc2h1ZmZsZShhcnIpIHtcbiAgICBpZiAoYXJyLmxlbmd0aCA8PSAxKSB7XG4gICAgICAgIHJldHVybiBhcnI7XG4gICAgfVxuICAgIGNvbnN0IHJhbmRJbnQgPSAoKSA9PiB7XG4gICAgICAgIHJldHVybiBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiBNYXRoLmZsb29yKGFyci5sZW5ndGgpKTtcbiAgICB9O1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgYXJyLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIGNvbnN0IGogPSByYW5kSW50KCk7XG4gICAgICAgIGNvbnN0IHRtcCA9IGFycltpXTtcbiAgICAgICAgYXJyW2ldID0gYXJyW2pdO1xuICAgICAgICBhcnJbal0gPSB0bXA7XG4gICAgfVxuICAgIHJldHVybiBhcnI7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1yYW5kb21fc3Vic2V0LmpzLm1hcCJdLCJuYW1lcyI6WyJnZXRQc2V1ZG9SYW5kb21TdWJzZXQiLCJ2YWx1ZXMiLCJ3YW50ZWROdW1iZXIiLCJsZW5ndGgiLCJzaHVmZmxlIiwic2xpY2UiLCJhcnIiLCJyYW5kSW50IiwiTWF0aCIsImZsb29yIiwicmFuZG9tIiwiaSIsImoiLCJ0bXAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/message-encryption/node_modules/@waku/utils/dist/common/random_subset.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/message-encryption/node_modules/@waku/utils/dist/common/relay_shard_codec.js":
/*!*********************************************************************************************************!*\
  !*** ./node_modules/@waku/message-encryption/node_modules/@waku/utils/dist/common/relay_shard_codec.js ***!
  \*********************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decodeRelayShard: () => (/* binding */ decodeRelayShard),\n/* harmony export */   encodeRelayShard: () => (/* binding */ encodeRelayShard)\n/* harmony export */ });\nconst decodeRelayShard = (bytes)=>{\n    // explicitly converting to Uint8Array to avoid Buffer\n    // https://github.com/libp2p/js-libp2p/issues/2146\n    bytes = new Uint8Array(bytes);\n    if (bytes.length < 3) throw new Error(\"Insufficient data\");\n    const view = new DataView(bytes.buffer);\n    const clusterId = view.getUint16(0);\n    const shards = [];\n    if (bytes.length === 130) {\n        // rsv format (Bit Vector)\n        for(let i = 0; i < 1024; i++){\n            const byteIndex = Math.floor(i / 8) + 2; // Adjusted for the 2-byte cluster field\n            const bitIndex = 7 - i % 8;\n            if (view.getUint8(byteIndex) & 1 << bitIndex) {\n                shards.push(i);\n            }\n        }\n    } else {\n        // rs format (Index List)\n        const numIndices = view.getUint8(2);\n        for(let i = 0, offset = 3; i < numIndices; i++, offset += 2){\n            if (offset + 1 >= bytes.length) throw new Error(\"Unexpected end of data\");\n            shards.push(view.getUint16(offset));\n        }\n    }\n    return {\n        clusterId,\n        shards\n    };\n};\nconst encodeRelayShard = (shardInfo)=>{\n    const { clusterId, shards } = shardInfo;\n    const totalLength = shards.length >= 64 ? 130 : 3 + 2 * shards.length;\n    const buffer = new ArrayBuffer(totalLength);\n    const view = new DataView(buffer);\n    view.setUint16(0, clusterId);\n    if (shards.length >= 64) {\n        // rsv format (Bit Vector)\n        for (const index of shards){\n            const byteIndex = Math.floor(index / 8) + 2; // Adjusted for the 2-byte cluster field\n            const bitIndex = 7 - index % 8;\n            view.setUint8(byteIndex, view.getUint8(byteIndex) | 1 << bitIndex);\n        }\n    } else {\n        // rs format (Index List)\n        view.setUint8(2, shards.length);\n        for(let i = 0, offset = 3; i < shards.length; i++, offset += 2){\n            view.setUint16(offset, shards[i]);\n        }\n    }\n    return new Uint8Array(buffer);\n}; //# sourceMappingURL=relay_shard_codec.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdha3UvbWVzc2FnZS1lbmNyeXB0aW9uL25vZGVfbW9kdWxlcy9Ad2FrdS91dGlscy9kaXN0L2NvbW1vbi9yZWxheV9zaGFyZF9jb2RlYy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFPLE1BQU1BLG1CQUFtQixDQUFDQztJQUM3QixzREFBc0Q7SUFDdEQsa0RBQWtEO0lBQ2xEQSxRQUFRLElBQUlDLFdBQVdEO0lBQ3ZCLElBQUlBLE1BQU1FLE1BQU0sR0FBRyxHQUNmLE1BQU0sSUFBSUMsTUFBTTtJQUNwQixNQUFNQyxPQUFPLElBQUlDLFNBQVNMLE1BQU1NLE1BQU07SUFDdEMsTUFBTUMsWUFBWUgsS0FBS0ksU0FBUyxDQUFDO0lBQ2pDLE1BQU1DLFNBQVMsRUFBRTtJQUNqQixJQUFJVCxNQUFNRSxNQUFNLEtBQUssS0FBSztRQUN0QiwwQkFBMEI7UUFDMUIsSUFBSyxJQUFJUSxJQUFJLEdBQUdBLElBQUksTUFBTUEsSUFBSztZQUMzQixNQUFNQyxZQUFZQyxLQUFLQyxLQUFLLENBQUNILElBQUksS0FBSyxHQUFHLHdDQUF3QztZQUNqRixNQUFNSSxXQUFXLElBQUtKLElBQUk7WUFDMUIsSUFBSU4sS0FBS1csUUFBUSxDQUFDSixhQUFjLEtBQUtHLFVBQVc7Z0JBQzVDTCxPQUFPTyxJQUFJLENBQUNOO1lBQ2hCO1FBQ0o7SUFDSixPQUNLO1FBQ0QseUJBQXlCO1FBQ3pCLE1BQU1PLGFBQWFiLEtBQUtXLFFBQVEsQ0FBQztRQUNqQyxJQUFLLElBQUlMLElBQUksR0FBR1EsU0FBUyxHQUFHUixJQUFJTyxZQUFZUCxLQUFLUSxVQUFVLEVBQUc7WUFDMUQsSUFBSUEsU0FBUyxLQUFLbEIsTUFBTUUsTUFBTSxFQUMxQixNQUFNLElBQUlDLE1BQU07WUFDcEJNLE9BQU9PLElBQUksQ0FBQ1osS0FBS0ksU0FBUyxDQUFDVTtRQUMvQjtJQUNKO0lBQ0EsT0FBTztRQUFFWDtRQUFXRTtJQUFPO0FBQy9CLEVBQUU7QUFDSyxNQUFNVSxtQkFBbUIsQ0FBQ0M7SUFDN0IsTUFBTSxFQUFFYixTQUFTLEVBQUVFLE1BQU0sRUFBRSxHQUFHVztJQUM5QixNQUFNQyxjQUFjWixPQUFPUCxNQUFNLElBQUksS0FBSyxNQUFNLElBQUksSUFBSU8sT0FBT1AsTUFBTTtJQUNyRSxNQUFNSSxTQUFTLElBQUlnQixZQUFZRDtJQUMvQixNQUFNakIsT0FBTyxJQUFJQyxTQUFTQztJQUMxQkYsS0FBS21CLFNBQVMsQ0FBQyxHQUFHaEI7SUFDbEIsSUFBSUUsT0FBT1AsTUFBTSxJQUFJLElBQUk7UUFDckIsMEJBQTBCO1FBQzFCLEtBQUssTUFBTXNCLFNBQVNmLE9BQVE7WUFDeEIsTUFBTUUsWUFBWUMsS0FBS0MsS0FBSyxDQUFDVyxRQUFRLEtBQUssR0FBRyx3Q0FBd0M7WUFDckYsTUFBTVYsV0FBVyxJQUFLVSxRQUFRO1lBQzlCcEIsS0FBS3FCLFFBQVEsQ0FBQ2QsV0FBV1AsS0FBS1csUUFBUSxDQUFDSixhQUFjLEtBQUtHO1FBQzlEO0lBQ0osT0FDSztRQUNELHlCQUF5QjtRQUN6QlYsS0FBS3FCLFFBQVEsQ0FBQyxHQUFHaEIsT0FBT1AsTUFBTTtRQUM5QixJQUFLLElBQUlRLElBQUksR0FBR1EsU0FBUyxHQUFHUixJQUFJRCxPQUFPUCxNQUFNLEVBQUVRLEtBQUtRLFVBQVUsRUFBRztZQUM3RGQsS0FBS21CLFNBQVMsQ0FBQ0wsUUFBUVQsTUFBTSxDQUFDQyxFQUFFO1FBQ3BDO0lBQ0o7SUFDQSxPQUFPLElBQUlULFdBQVdLO0FBQzFCLEVBQUUsQ0FDRiw2Q0FBNkMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mbHVzaC1ub3Rlcy8uL25vZGVfbW9kdWxlcy9Ad2FrdS9tZXNzYWdlLWVuY3J5cHRpb24vbm9kZV9tb2R1bGVzL0B3YWt1L3V0aWxzL2Rpc3QvY29tbW9uL3JlbGF5X3NoYXJkX2NvZGVjLmpzPzM3OWUiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNvbnN0IGRlY29kZVJlbGF5U2hhcmQgPSAoYnl0ZXMpID0+IHtcbiAgICAvLyBleHBsaWNpdGx5IGNvbnZlcnRpbmcgdG8gVWludDhBcnJheSB0byBhdm9pZCBCdWZmZXJcbiAgICAvLyBodHRwczovL2dpdGh1Yi5jb20vbGlicDJwL2pzLWxpYnAycC9pc3N1ZXMvMjE0NlxuICAgIGJ5dGVzID0gbmV3IFVpbnQ4QXJyYXkoYnl0ZXMpO1xuICAgIGlmIChieXRlcy5sZW5ndGggPCAzKVxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJJbnN1ZmZpY2llbnQgZGF0YVwiKTtcbiAgICBjb25zdCB2aWV3ID0gbmV3IERhdGFWaWV3KGJ5dGVzLmJ1ZmZlcik7XG4gICAgY29uc3QgY2x1c3RlcklkID0gdmlldy5nZXRVaW50MTYoMCk7XG4gICAgY29uc3Qgc2hhcmRzID0gW107XG4gICAgaWYgKGJ5dGVzLmxlbmd0aCA9PT0gMTMwKSB7XG4gICAgICAgIC8vIHJzdiBmb3JtYXQgKEJpdCBWZWN0b3IpXG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgMTAyNDsgaSsrKSB7XG4gICAgICAgICAgICBjb25zdCBieXRlSW5kZXggPSBNYXRoLmZsb29yKGkgLyA4KSArIDI7IC8vIEFkanVzdGVkIGZvciB0aGUgMi1ieXRlIGNsdXN0ZXIgZmllbGRcbiAgICAgICAgICAgIGNvbnN0IGJpdEluZGV4ID0gNyAtIChpICUgOCk7XG4gICAgICAgICAgICBpZiAodmlldy5nZXRVaW50OChieXRlSW5kZXgpICYgKDEgPDwgYml0SW5kZXgpKSB7XG4gICAgICAgICAgICAgICAgc2hhcmRzLnB1c2goaSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIC8vIHJzIGZvcm1hdCAoSW5kZXggTGlzdClcbiAgICAgICAgY29uc3QgbnVtSW5kaWNlcyA9IHZpZXcuZ2V0VWludDgoMik7XG4gICAgICAgIGZvciAobGV0IGkgPSAwLCBvZmZzZXQgPSAzOyBpIDwgbnVtSW5kaWNlczsgaSsrLCBvZmZzZXQgKz0gMikge1xuICAgICAgICAgICAgaWYgKG9mZnNldCArIDEgPj0gYnl0ZXMubGVuZ3RoKVxuICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIlVuZXhwZWN0ZWQgZW5kIG9mIGRhdGFcIik7XG4gICAgICAgICAgICBzaGFyZHMucHVzaCh2aWV3LmdldFVpbnQxNihvZmZzZXQpKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4geyBjbHVzdGVySWQsIHNoYXJkcyB9O1xufTtcbmV4cG9ydCBjb25zdCBlbmNvZGVSZWxheVNoYXJkID0gKHNoYXJkSW5mbykgPT4ge1xuICAgIGNvbnN0IHsgY2x1c3RlcklkLCBzaGFyZHMgfSA9IHNoYXJkSW5mbztcbiAgICBjb25zdCB0b3RhbExlbmd0aCA9IHNoYXJkcy5sZW5ndGggPj0gNjQgPyAxMzAgOiAzICsgMiAqIHNoYXJkcy5sZW5ndGg7XG4gICAgY29uc3QgYnVmZmVyID0gbmV3IEFycmF5QnVmZmVyKHRvdGFsTGVuZ3RoKTtcbiAgICBjb25zdCB2aWV3ID0gbmV3IERhdGFWaWV3KGJ1ZmZlcik7XG4gICAgdmlldy5zZXRVaW50MTYoMCwgY2x1c3RlcklkKTtcbiAgICBpZiAoc2hhcmRzLmxlbmd0aCA+PSA2NCkge1xuICAgICAgICAvLyByc3YgZm9ybWF0IChCaXQgVmVjdG9yKVxuICAgICAgICBmb3IgKGNvbnN0IGluZGV4IG9mIHNoYXJkcykge1xuICAgICAgICAgICAgY29uc3QgYnl0ZUluZGV4ID0gTWF0aC5mbG9vcihpbmRleCAvIDgpICsgMjsgLy8gQWRqdXN0ZWQgZm9yIHRoZSAyLWJ5dGUgY2x1c3RlciBmaWVsZFxuICAgICAgICAgICAgY29uc3QgYml0SW5kZXggPSA3IC0gKGluZGV4ICUgOCk7XG4gICAgICAgICAgICB2aWV3LnNldFVpbnQ4KGJ5dGVJbmRleCwgdmlldy5nZXRVaW50OChieXRlSW5kZXgpIHwgKDEgPDwgYml0SW5kZXgpKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgLy8gcnMgZm9ybWF0IChJbmRleCBMaXN0KVxuICAgICAgICB2aWV3LnNldFVpbnQ4KDIsIHNoYXJkcy5sZW5ndGgpO1xuICAgICAgICBmb3IgKGxldCBpID0gMCwgb2Zmc2V0ID0gMzsgaSA8IHNoYXJkcy5sZW5ndGg7IGkrKywgb2Zmc2V0ICs9IDIpIHtcbiAgICAgICAgICAgIHZpZXcuc2V0VWludDE2KG9mZnNldCwgc2hhcmRzW2ldKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gbmV3IFVpbnQ4QXJyYXkoYnVmZmVyKTtcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1yZWxheV9zaGFyZF9jb2RlYy5qcy5tYXAiXSwibmFtZXMiOlsiZGVjb2RlUmVsYXlTaGFyZCIsImJ5dGVzIiwiVWludDhBcnJheSIsImxlbmd0aCIsIkVycm9yIiwidmlldyIsIkRhdGFWaWV3IiwiYnVmZmVyIiwiY2x1c3RlcklkIiwiZ2V0VWludDE2Iiwic2hhcmRzIiwiaSIsImJ5dGVJbmRleCIsIk1hdGgiLCJmbG9vciIsImJpdEluZGV4IiwiZ2V0VWludDgiLCJwdXNoIiwibnVtSW5kaWNlcyIsIm9mZnNldCIsImVuY29kZVJlbGF5U2hhcmQiLCJzaGFyZEluZm8iLCJ0b3RhbExlbmd0aCIsIkFycmF5QnVmZmVyIiwic2V0VWludDE2IiwiaW5kZXgiLCJzZXRVaW50OCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/message-encryption/node_modules/@waku/utils/dist/common/relay_shard_codec.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/message-encryption/node_modules/@waku/utils/dist/common/sharding.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/@waku/message-encryption/node_modules/@waku/utils/dist/common/sharding.js ***!
  \************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   contentTopicToPubsubTopic: () => (/* binding */ contentTopicToPubsubTopic),\n/* harmony export */   contentTopicToShardIndex: () => (/* binding */ contentTopicToShardIndex),\n/* harmony export */   contentTopicsByPubsubTopic: () => (/* binding */ contentTopicsByPubsubTopic),\n/* harmony export */   determinePubsubTopic: () => (/* binding */ determinePubsubTopic),\n/* harmony export */   ensurePubsubTopicIsConfigured: () => (/* binding */ ensurePubsubTopicIsConfigured),\n/* harmony export */   ensureShardingConfigured: () => (/* binding */ ensureShardingConfigured),\n/* harmony export */   ensureValidContentTopic: () => (/* binding */ ensureValidContentTopic),\n/* harmony export */   pubsubTopicToSingleShardInfo: () => (/* binding */ pubsubTopicToSingleShardInfo),\n/* harmony export */   shardInfoToPubsubTopics: () => (/* binding */ shardInfoToPubsubTopics),\n/* harmony export */   singleShardInfoToPubsubTopic: () => (/* binding */ singleShardInfoToPubsubTopic),\n/* harmony export */   singleShardInfosToShardInfo: () => (/* binding */ singleShardInfosToShardInfo)\n/* harmony export */ });\n/* harmony import */ var _noble_hashes_sha256__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @noble/hashes/sha256 */ \"(ssr)/./node_modules/@noble/hashes/esm/sha256.js\");\n/* harmony import */ var _waku_interfaces__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @waku/interfaces */ \"(ssr)/./node_modules/@waku/interfaces/dist/index.js\");\n/* harmony import */ var _bytes_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../bytes/index.js */ \"(ssr)/./node_modules/@waku/message-encryption/node_modules/@waku/utils/dist/bytes/index.js\");\n\n\n\nconst singleShardInfoToPubsubTopic = (shardInfo)=>{\n    if (shardInfo.clusterId === undefined || shardInfo.shard === undefined) throw new Error(\"Invalid shard\");\n    return `/waku/2/rs/${shardInfo.clusterId}/${shardInfo.shard}`;\n};\nconst singleShardInfosToShardInfo = (singleShardInfos)=>{\n    if (singleShardInfos.length === 0) throw new Error(\"Invalid shard\");\n    const clusterIds = singleShardInfos.map((shardInfo)=>shardInfo.clusterId);\n    if (new Set(clusterIds).size !== 1) {\n        throw new Error(\"Passed shard infos have different clusterIds\");\n    }\n    const shards = singleShardInfos.map((shardInfo)=>shardInfo.shard).filter((shard)=>shard !== undefined);\n    return {\n        clusterId: singleShardInfos[0].clusterId,\n        shards\n    };\n};\nconst shardInfoToPubsubTopics = (shardInfo)=>{\n    if (\"contentTopics\" in shardInfo && shardInfo.contentTopics) {\n        // Autosharding: explicitly defined content topics\n        return Array.from(new Set(shardInfo.contentTopics.map((contentTopic)=>contentTopicToPubsubTopic(contentTopic, shardInfo.clusterId))));\n    } else if (\"shards\" in shardInfo) {\n        // Static sharding\n        if (shardInfo.shards === undefined) throw new Error(\"Invalid shard\");\n        return Array.from(new Set(shardInfo.shards.map((index)=>`/waku/2/rs/${shardInfo.clusterId ?? _waku_interfaces__WEBPACK_IMPORTED_MODULE_0__.DEFAULT_CLUSTER_ID}/${index}`)));\n    } else if (\"application\" in shardInfo && \"version\" in shardInfo) {\n        // Autosharding: single shard from application and version\n        return [\n            contentTopicToPubsubTopic(`/${shardInfo.application}/${shardInfo.version}/default/default`, shardInfo.clusterId)\n        ];\n    } else {\n        throw new Error(\"Missing required configuration in shard parameters\");\n    }\n};\nconst pubsubTopicToSingleShardInfo = (pubsubTopics)=>{\n    const parts = pubsubTopics.split(\"/\");\n    if (parts.length != 6 || parts[1] !== \"waku\" || parts[2] !== \"2\" || parts[3] !== \"rs\") throw new Error(\"Invalid pubsub topic\");\n    const clusterId = parseInt(parts[4]);\n    const shard = parseInt(parts[5]);\n    if (isNaN(clusterId) || isNaN(shard)) throw new Error(\"Invalid clusterId or shard\");\n    return {\n        clusterId,\n        shard\n    };\n};\n//TODO: move part of BaseProtocol instead of utils\n// return `ProtocolError.TOPIC_NOT_CONFIGURED` instead of throwing\nfunction ensurePubsubTopicIsConfigured(pubsubTopic, configuredTopics) {\n    if (!configuredTopics.includes(pubsubTopic)) {\n        throw new Error(`Pubsub topic ${pubsubTopic} has not been configured on this instance. Configured topics are: ${configuredTopics}. Please update your configuration by passing in the topic during Waku node instantiation.`);\n    }\n}\n/**\n * Given a string, will throw an error if it is not formatted as a valid content topic for autosharding based on https://rfc.vac.dev/spec/51/\n * @param contentTopic String to validate\n * @returns Object with each content topic field as an attribute\n */ function ensureValidContentTopic(contentTopic) {\n    const parts = contentTopic.split(\"/\");\n    if (parts.length < 5 || parts.length > 6) {\n        throw Error(\"Content topic format is invalid\");\n    }\n    // Validate generation field if present\n    let generation = 0;\n    if (parts.length == 6) {\n        generation = parseInt(parts[1]);\n        if (isNaN(generation)) {\n            throw new Error(\"Invalid generation field in content topic\");\n        }\n        if (generation > 0) {\n            throw new Error(\"Generation greater than 0 is not supported\");\n        }\n    }\n    // Validate remaining fields\n    const fields = parts.splice(-4);\n    // Validate application field\n    if (fields[0].length == 0) {\n        throw new Error(\"Application field cannot be empty\");\n    }\n    // Validate version field\n    if (fields[1].length == 0) {\n        throw new Error(\"Version field cannot be empty\");\n    }\n    // Validate topic name field\n    if (fields[2].length == 0) {\n        throw new Error(\"Topic name field cannot be empty\");\n    }\n    // Validate encoding field\n    if (fields[3].length == 0) {\n        throw new Error(\"Encoding field cannot be empty\");\n    }\n    return {\n        generation,\n        application: fields[0],\n        version: fields[1],\n        topicName: fields[2],\n        encoding: fields[3]\n    };\n}\n/**\n * Given a string, determines which autoshard index to use for its pubsub topic.\n * Based on the algorithm described in the RFC: https://rfc.vac.dev/spec/51//#algorithm\n */ function contentTopicToShardIndex(contentTopic, networkShards = 8) {\n    const { application, version } = ensureValidContentTopic(contentTopic);\n    const digest = (0,_noble_hashes_sha256__WEBPACK_IMPORTED_MODULE_2__.sha256)((0,_bytes_index_js__WEBPACK_IMPORTED_MODULE_1__.concat)([\n        (0,_bytes_index_js__WEBPACK_IMPORTED_MODULE_1__.utf8ToBytes)(application),\n        (0,_bytes_index_js__WEBPACK_IMPORTED_MODULE_1__.utf8ToBytes)(version)\n    ]));\n    const dataview = new DataView(digest.buffer.slice(-8));\n    return Number(dataview.getBigUint64(0, false) % BigInt(networkShards));\n}\nfunction contentTopicToPubsubTopic(contentTopic, clusterId = _waku_interfaces__WEBPACK_IMPORTED_MODULE_0__.DEFAULT_CLUSTER_ID, networkShards = 8) {\n    const shardIndex = contentTopicToShardIndex(contentTopic, networkShards);\n    return `/waku/2/rs/${clusterId}/${shardIndex}`;\n}\n/**\n * Given an array of content topics, groups them together by their Pubsub topic as derived using the algorithm for autosharding.\n * If any of the content topics are not properly formatted, the function will throw an error.\n */ function contentTopicsByPubsubTopic(contentTopics, clusterId = _waku_interfaces__WEBPACK_IMPORTED_MODULE_0__.DEFAULT_CLUSTER_ID, networkShards = 8) {\n    const groupedContentTopics = new Map();\n    for (const contentTopic of contentTopics){\n        const pubsubTopic = contentTopicToPubsubTopic(contentTopic, clusterId, networkShards);\n        let topics = groupedContentTopics.get(pubsubTopic);\n        if (!topics) {\n            groupedContentTopics.set(pubsubTopic, []);\n            topics = groupedContentTopics.get(pubsubTopic);\n        }\n        topics.push(contentTopic);\n    }\n    return groupedContentTopics;\n}\n/**\n * Used when creating encoders/decoders to determine which pubsub topic to use\n */ function determinePubsubTopic(contentTopic, pubsubTopicShardInfo = _waku_interfaces__WEBPACK_IMPORTED_MODULE_0__.DefaultPubsubTopic) {\n    if (typeof pubsubTopicShardInfo == \"string\") {\n        return pubsubTopicShardInfo;\n    } else {\n        return pubsubTopicShardInfo ? pubsubTopicShardInfo.shard ? singleShardInfoToPubsubTopic(pubsubTopicShardInfo) : contentTopicToPubsubTopic(contentTopic, pubsubTopicShardInfo.clusterId) : _waku_interfaces__WEBPACK_IMPORTED_MODULE_0__.DefaultPubsubTopic;\n    }\n}\n/**\n * Validates sharding configuration and sets defaults where possible.\n * @returns Validated sharding parameters, with any missing values set to defaults\n */ const ensureShardingConfigured = (shardInfo)=>{\n    const clusterId = shardInfo.clusterId ?? _waku_interfaces__WEBPACK_IMPORTED_MODULE_0__.DEFAULT_CLUSTER_ID;\n    const shards = \"shards\" in shardInfo ? shardInfo.shards : [];\n    const contentTopics = \"contentTopics\" in shardInfo ? shardInfo.contentTopics : [];\n    const [application, version] = \"application\" in shardInfo && \"version\" in shardInfo ? [\n        shardInfo.application,\n        shardInfo.version\n    ] : [\n        undefined,\n        undefined\n    ];\n    const isShardsConfigured = shards && shards.length > 0;\n    const isContentTopicsConfigured = contentTopics && contentTopics.length > 0;\n    const isApplicationVersionConfigured = application && version;\n    if (isShardsConfigured) {\n        return {\n            shardingParams: {\n                clusterId,\n                shards\n            },\n            shardInfo: {\n                clusterId,\n                shards\n            },\n            pubsubTopics: shardInfoToPubsubTopics({\n                clusterId,\n                shards\n            })\n        };\n    }\n    if (isContentTopicsConfigured) {\n        const pubsubTopics = Array.from(new Set(contentTopics.map((topic)=>contentTopicToPubsubTopic(topic, clusterId))));\n        const shards = Array.from(new Set(contentTopics.map((topic)=>contentTopicToShardIndex(topic))));\n        return {\n            shardingParams: {\n                clusterId,\n                contentTopics\n            },\n            shardInfo: {\n                clusterId,\n                shards\n            },\n            pubsubTopics\n        };\n    }\n    if (isApplicationVersionConfigured) {\n        const pubsubTopic = contentTopicToPubsubTopic(`/${application}/${version}/default/default`, clusterId);\n        return {\n            shardingParams: {\n                clusterId,\n                application,\n                version\n            },\n            shardInfo: {\n                clusterId,\n                shards: [\n                    pubsubTopicToSingleShardInfo(pubsubTopic).shard\n                ]\n            },\n            pubsubTopics: [\n                pubsubTopic\n            ]\n        };\n    }\n    throw new Error(\"Missing minimum required configuration options for static sharding or autosharding.\");\n}; //# sourceMappingURL=sharding.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/message-encryption/node_modules/@waku/utils/dist/common/sharding.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/message-encryption/node_modules/@waku/utils/dist/common/to_async_iterator.js":
/*!*********************************************************************************************************!*\
  !*** ./node_modules/@waku/message-encryption/node_modules/@waku/utils/dist/common/to_async_iterator.js ***!
  \*********************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   toAsyncIterator: () => (/* binding */ toAsyncIterator)\n/* harmony export */ });\nconst FRAME_RATE = 60;\n/**\n * Function that transforms IReceiver subscription to iterable stream of data.\n * @param receiver - object that allows to be subscribed to;\n * @param decoder - parameter to be passed to receiver for subscription;\n * @param options - options for receiver for subscription;\n * @param iteratorOptions - optional configuration for iterator;\n * @returns iterator and stop function to terminate it.\n */ async function toAsyncIterator(receiver, decoder, iteratorOptions) {\n    const iteratorDelay = iteratorOptions?.iteratorDelay ?? FRAME_RATE;\n    const messages = [];\n    let unsubscribe;\n    unsubscribe = await receiver.subscribe(decoder, (message)=>{\n        messages.push(message);\n    });\n    const isWithTimeout = Number.isInteger(iteratorOptions?.timeoutMs);\n    const timeoutMs = iteratorOptions?.timeoutMs ?? 0;\n    const startTime = Date.now();\n    async function* iterator() {\n        while(true){\n            if (isWithTimeout && Date.now() - startTime >= timeoutMs) {\n                return;\n            }\n            await wait(iteratorDelay);\n            const message = messages.shift();\n            if (!unsubscribe && messages.length === 0) {\n                return message;\n            }\n            if (!message && unsubscribe) {\n                continue;\n            }\n            yield message;\n        }\n    }\n    return {\n        iterator: iterator(),\n        async stop () {\n            if (unsubscribe) {\n                await unsubscribe();\n                unsubscribe = undefined;\n            }\n        }\n    };\n}\nfunction wait(ms) {\n    return new Promise((resolve)=>{\n        setTimeout(resolve, ms);\n    });\n} //# sourceMappingURL=to_async_iterator.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdha3UvbWVzc2FnZS1lbmNyeXB0aW9uL25vZGVfbW9kdWxlcy9Ad2FrdS91dGlscy9kaXN0L2NvbW1vbi90b19hc3luY19pdGVyYXRvci5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUEsTUFBTUEsYUFBYTtBQUNuQjs7Ozs7OztDQU9DLEdBQ00sZUFBZUMsZ0JBQWdCQyxRQUFRLEVBQUVDLE9BQU8sRUFBRUMsZUFBZTtJQUNwRSxNQUFNQyxnQkFBZ0JELGlCQUFpQkMsaUJBQWlCTDtJQUN4RCxNQUFNTSxXQUFXLEVBQUU7SUFDbkIsSUFBSUM7SUFDSkEsY0FBYyxNQUFNTCxTQUFTTSxTQUFTLENBQUNMLFNBQVMsQ0FBQ007UUFDN0NILFNBQVNJLElBQUksQ0FBQ0Q7SUFDbEI7SUFDQSxNQUFNRSxnQkFBZ0JDLE9BQU9DLFNBQVMsQ0FBQ1QsaUJBQWlCVTtJQUN4RCxNQUFNQSxZQUFZVixpQkFBaUJVLGFBQWE7SUFDaEQsTUFBTUMsWUFBWUMsS0FBS0MsR0FBRztJQUMxQixnQkFBZ0JDO1FBQ1osTUFBTyxLQUFNO1lBQ1QsSUFBSVAsaUJBQWlCSyxLQUFLQyxHQUFHLEtBQUtGLGFBQWFELFdBQVc7Z0JBQ3REO1lBQ0o7WUFDQSxNQUFNSyxLQUFLZDtZQUNYLE1BQU1JLFVBQVVILFNBQVNjLEtBQUs7WUFDOUIsSUFBSSxDQUFDYixlQUFlRCxTQUFTZSxNQUFNLEtBQUssR0FBRztnQkFDdkMsT0FBT1o7WUFDWDtZQUNBLElBQUksQ0FBQ0EsV0FBV0YsYUFBYTtnQkFDekI7WUFDSjtZQUNBLE1BQU1FO1FBQ1Y7SUFDSjtJQUNBLE9BQU87UUFDSFMsVUFBVUE7UUFDVixNQUFNSTtZQUNGLElBQUlmLGFBQWE7Z0JBQ2IsTUFBTUE7Z0JBQ05BLGNBQWNnQjtZQUNsQjtRQUNKO0lBQ0o7QUFDSjtBQUNBLFNBQVNKLEtBQUtLLEVBQUU7SUFDWixPQUFPLElBQUlDLFFBQVEsQ0FBQ0M7UUFDaEJDLFdBQVdELFNBQVNGO0lBQ3hCO0FBQ0osRUFDQSw2Q0FBNkMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mbHVzaC1ub3Rlcy8uL25vZGVfbW9kdWxlcy9Ad2FrdS9tZXNzYWdlLWVuY3J5cHRpb24vbm9kZV9tb2R1bGVzL0B3YWt1L3V0aWxzL2Rpc3QvY29tbW9uL3RvX2FzeW5jX2l0ZXJhdG9yLmpzP2E5OGQiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgRlJBTUVfUkFURSA9IDYwO1xuLyoqXG4gKiBGdW5jdGlvbiB0aGF0IHRyYW5zZm9ybXMgSVJlY2VpdmVyIHN1YnNjcmlwdGlvbiB0byBpdGVyYWJsZSBzdHJlYW0gb2YgZGF0YS5cbiAqIEBwYXJhbSByZWNlaXZlciAtIG9iamVjdCB0aGF0IGFsbG93cyB0byBiZSBzdWJzY3JpYmVkIHRvO1xuICogQHBhcmFtIGRlY29kZXIgLSBwYXJhbWV0ZXIgdG8gYmUgcGFzc2VkIHRvIHJlY2VpdmVyIGZvciBzdWJzY3JpcHRpb247XG4gKiBAcGFyYW0gb3B0aW9ucyAtIG9wdGlvbnMgZm9yIHJlY2VpdmVyIGZvciBzdWJzY3JpcHRpb247XG4gKiBAcGFyYW0gaXRlcmF0b3JPcHRpb25zIC0gb3B0aW9uYWwgY29uZmlndXJhdGlvbiBmb3IgaXRlcmF0b3I7XG4gKiBAcmV0dXJucyBpdGVyYXRvciBhbmQgc3RvcCBmdW5jdGlvbiB0byB0ZXJtaW5hdGUgaXQuXG4gKi9cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiB0b0FzeW5jSXRlcmF0b3IocmVjZWl2ZXIsIGRlY29kZXIsIGl0ZXJhdG9yT3B0aW9ucykge1xuICAgIGNvbnN0IGl0ZXJhdG9yRGVsYXkgPSBpdGVyYXRvck9wdGlvbnM/Lml0ZXJhdG9yRGVsYXkgPz8gRlJBTUVfUkFURTtcbiAgICBjb25zdCBtZXNzYWdlcyA9IFtdO1xuICAgIGxldCB1bnN1YnNjcmliZTtcbiAgICB1bnN1YnNjcmliZSA9IGF3YWl0IHJlY2VpdmVyLnN1YnNjcmliZShkZWNvZGVyLCAobWVzc2FnZSkgPT4ge1xuICAgICAgICBtZXNzYWdlcy5wdXNoKG1lc3NhZ2UpO1xuICAgIH0pO1xuICAgIGNvbnN0IGlzV2l0aFRpbWVvdXQgPSBOdW1iZXIuaXNJbnRlZ2VyKGl0ZXJhdG9yT3B0aW9ucz8udGltZW91dE1zKTtcbiAgICBjb25zdCB0aW1lb3V0TXMgPSBpdGVyYXRvck9wdGlvbnM/LnRpbWVvdXRNcyA/PyAwO1xuICAgIGNvbnN0IHN0YXJ0VGltZSA9IERhdGUubm93KCk7XG4gICAgYXN5bmMgZnVuY3Rpb24qIGl0ZXJhdG9yKCkge1xuICAgICAgICB3aGlsZSAodHJ1ZSkge1xuICAgICAgICAgICAgaWYgKGlzV2l0aFRpbWVvdXQgJiYgRGF0ZS5ub3coKSAtIHN0YXJ0VGltZSA+PSB0aW1lb3V0TXMpIHtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBhd2FpdCB3YWl0KGl0ZXJhdG9yRGVsYXkpO1xuICAgICAgICAgICAgY29uc3QgbWVzc2FnZSA9IG1lc3NhZ2VzLnNoaWZ0KCk7XG4gICAgICAgICAgICBpZiAoIXVuc3Vic2NyaWJlICYmIG1lc3NhZ2VzLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICAgICAgICAgIHJldHVybiBtZXNzYWdlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKCFtZXNzYWdlICYmIHVuc3Vic2NyaWJlKSB7XG4gICAgICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB5aWVsZCBtZXNzYWdlO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiB7XG4gICAgICAgIGl0ZXJhdG9yOiBpdGVyYXRvcigpLFxuICAgICAgICBhc3luYyBzdG9wKCkge1xuICAgICAgICAgICAgaWYgKHVuc3Vic2NyaWJlKSB7XG4gICAgICAgICAgICAgICAgYXdhaXQgdW5zdWJzY3JpYmUoKTtcbiAgICAgICAgICAgICAgICB1bnN1YnNjcmliZSA9IHVuZGVmaW5lZDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH07XG59XG5mdW5jdGlvbiB3YWl0KG1zKSB7XG4gICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlKSA9PiB7XG4gICAgICAgIHNldFRpbWVvdXQocmVzb2x2ZSwgbXMpO1xuICAgIH0pO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dG9fYXN5bmNfaXRlcmF0b3IuanMubWFwIl0sIm5hbWVzIjpbIkZSQU1FX1JBVEUiLCJ0b0FzeW5jSXRlcmF0b3IiLCJyZWNlaXZlciIsImRlY29kZXIiLCJpdGVyYXRvck9wdGlvbnMiLCJpdGVyYXRvckRlbGF5IiwibWVzc2FnZXMiLCJ1bnN1YnNjcmliZSIsInN1YnNjcmliZSIsIm1lc3NhZ2UiLCJwdXNoIiwiaXNXaXRoVGltZW91dCIsIk51bWJlciIsImlzSW50ZWdlciIsInRpbWVvdXRNcyIsInN0YXJ0VGltZSIsIkRhdGUiLCJub3ciLCJpdGVyYXRvciIsIndhaXQiLCJzaGlmdCIsImxlbmd0aCIsInN0b3AiLCJ1bmRlZmluZWQiLCJtcyIsIlByb21pc2UiLCJyZXNvbHZlIiwic2V0VGltZW91dCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/message-encryption/node_modules/@waku/utils/dist/common/to_async_iterator.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/message-encryption/node_modules/@waku/utils/dist/index.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@waku/message-encryption/node_modules/@waku/utils/dist/index.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Logger: () => (/* reexport safe */ _logger_index_js__WEBPACK_IMPORTED_MODULE_1__.Logger),\n/* harmony export */   contentTopicToPubsubTopic: () => (/* reexport safe */ _common_index_js__WEBPACK_IMPORTED_MODULE_0__.contentTopicToPubsubTopic),\n/* harmony export */   contentTopicToShardIndex: () => (/* reexport safe */ _common_index_js__WEBPACK_IMPORTED_MODULE_0__.contentTopicToShardIndex),\n/* harmony export */   contentTopicsByPubsubTopic: () => (/* reexport safe */ _common_index_js__WEBPACK_IMPORTED_MODULE_0__.contentTopicsByPubsubTopic),\n/* harmony export */   decodeRelayShard: () => (/* reexport safe */ _common_index_js__WEBPACK_IMPORTED_MODULE_0__.decodeRelayShard),\n/* harmony export */   determinePubsubTopic: () => (/* reexport safe */ _common_index_js__WEBPACK_IMPORTED_MODULE_0__.determinePubsubTopic),\n/* harmony export */   encodeRelayShard: () => (/* reexport safe */ _common_index_js__WEBPACK_IMPORTED_MODULE_0__.encodeRelayShard),\n/* harmony export */   ensurePubsubTopicIsConfigured: () => (/* reexport safe */ _common_index_js__WEBPACK_IMPORTED_MODULE_0__.ensurePubsubTopicIsConfigured),\n/* harmony export */   ensureShardingConfigured: () => (/* reexport safe */ _common_index_js__WEBPACK_IMPORTED_MODULE_0__.ensureShardingConfigured),\n/* harmony export */   ensureValidContentTopic: () => (/* reexport safe */ _common_index_js__WEBPACK_IMPORTED_MODULE_0__.ensureValidContentTopic),\n/* harmony export */   getPseudoRandomSubset: () => (/* reexport safe */ _common_index_js__WEBPACK_IMPORTED_MODULE_0__.getPseudoRandomSubset),\n/* harmony export */   getWsMultiaddrFromMultiaddrs: () => (/* reexport safe */ _common_index_js__WEBPACK_IMPORTED_MODULE_0__.getWsMultiaddrFromMultiaddrs),\n/* harmony export */   groupByContentTopic: () => (/* reexport safe */ _common_index_js__WEBPACK_IMPORTED_MODULE_0__.groupByContentTopic),\n/* harmony export */   isDefined: () => (/* reexport safe */ _common_index_js__WEBPACK_IMPORTED_MODULE_0__.isDefined),\n/* harmony export */   isMessageSizeUnderCap: () => (/* reexport safe */ _common_index_js__WEBPACK_IMPORTED_MODULE_0__.isMessageSizeUnderCap),\n/* harmony export */   isWireSizeUnderCap: () => (/* reexport safe */ _common_index_js__WEBPACK_IMPORTED_MODULE_0__.isWireSizeUnderCap),\n/* harmony export */   pubsubTopicToSingleShardInfo: () => (/* reexport safe */ _common_index_js__WEBPACK_IMPORTED_MODULE_0__.pubsubTopicToSingleShardInfo),\n/* harmony export */   pushOrInitMapSet: () => (/* reexport safe */ _common_index_js__WEBPACK_IMPORTED_MODULE_0__.pushOrInitMapSet),\n/* harmony export */   removeItemFromArray: () => (/* reexport safe */ _common_index_js__WEBPACK_IMPORTED_MODULE_0__.removeItemFromArray),\n/* harmony export */   shardInfoToPubsubTopics: () => (/* reexport safe */ _common_index_js__WEBPACK_IMPORTED_MODULE_0__.shardInfoToPubsubTopics),\n/* harmony export */   singleShardInfoToPubsubTopic: () => (/* reexport safe */ _common_index_js__WEBPACK_IMPORTED_MODULE_0__.singleShardInfoToPubsubTopic),\n/* harmony export */   singleShardInfosToShardInfo: () => (/* reexport safe */ _common_index_js__WEBPACK_IMPORTED_MODULE_0__.singleShardInfosToShardInfo),\n/* harmony export */   toAsyncIterator: () => (/* reexport safe */ _common_index_js__WEBPACK_IMPORTED_MODULE_0__.toAsyncIterator)\n/* harmony export */ });\n/* harmony import */ var _common_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./common/index.js */ \"(ssr)/./node_modules/@waku/message-encryption/node_modules/@waku/utils/dist/common/index.js\");\n/* harmony import */ var _logger_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./logger/index.js */ \"(ssr)/./node_modules/@waku/message-encryption/node_modules/@waku/utils/dist/logger/index.js\");\n\n //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdha3UvbWVzc2FnZS1lbmNyeXB0aW9uL25vZGVfbW9kdWxlcy9Ad2FrdS91dGlscy9kaXN0L2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBa0M7QUFDUyxDQUMzQyxpQ0FBaUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mbHVzaC1ub3Rlcy8uL25vZGVfbW9kdWxlcy9Ad2FrdS9tZXNzYWdlLWVuY3J5cHRpb24vbm9kZV9tb2R1bGVzL0B3YWt1L3V0aWxzL2Rpc3QvaW5kZXguanM/YWVhNSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgKiBmcm9tIFwiLi9jb21tb24vaW5kZXguanNcIjtcbmV4cG9ydCB7IExvZ2dlciB9IGZyb20gXCIuL2xvZ2dlci9pbmRleC5qc1wiO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbIkxvZ2dlciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/message-encryption/node_modules/@waku/utils/dist/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/message-encryption/node_modules/@waku/utils/dist/logger/index.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@waku/message-encryption/node_modules/@waku/utils/dist/logger/index.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Logger: () => (/* binding */ Logger)\n/* harmony export */ });\n/* harmony import */ var debug__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! debug */ \"(ssr)/./node_modules/debug/src/index.js\");\n\nconst APP_NAME = \"waku\";\nclass Logger {\n    static createDebugNamespace(level, prefix) {\n        return prefix ? `${APP_NAME}:${level}:${prefix}` : `${APP_NAME}:${level}`;\n    }\n    constructor(prefix){\n        this._info = debug__WEBPACK_IMPORTED_MODULE_0__(Logger.createDebugNamespace(\"info\", prefix));\n        this._warn = debug__WEBPACK_IMPORTED_MODULE_0__(Logger.createDebugNamespace(\"warn\", prefix));\n        this._error = debug__WEBPACK_IMPORTED_MODULE_0__(Logger.createDebugNamespace(\"error\", prefix));\n    }\n    get info() {\n        return this._info;\n    }\n    get warn() {\n        return this._warn;\n    }\n    get error() {\n        return this._error;\n    }\n    log(level, ...args) {\n        const logger = this[level];\n        logger(...args);\n    }\n} //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdha3UvbWVzc2FnZS1lbmNyeXB0aW9uL25vZGVfbW9kdWxlcy9Ad2FrdS91dGlscy9kaXN0L2xvZ2dlci9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUEwQjtBQUMxQixNQUFNQyxXQUFXO0FBQ1YsTUFBTUM7SUFJVCxPQUFPQyxxQkFBcUJDLEtBQUssRUFBRUMsTUFBTSxFQUFFO1FBQ3ZDLE9BQU9BLFNBQVMsQ0FBQyxFQUFFSixTQUFTLENBQUMsRUFBRUcsTUFBTSxDQUFDLEVBQUVDLE9BQU8sQ0FBQyxHQUFHLENBQUMsRUFBRUosU0FBUyxDQUFDLEVBQUVHLE1BQU0sQ0FBQztJQUM3RTtJQUNBRSxZQUFZRCxNQUFNLENBQUU7UUFDaEIsSUFBSSxDQUFDRSxLQUFLLEdBQUdQLGtDQUFLQSxDQUFDRSxPQUFPQyxvQkFBb0IsQ0FBQyxRQUFRRTtRQUN2RCxJQUFJLENBQUNHLEtBQUssR0FBR1Isa0NBQUtBLENBQUNFLE9BQU9DLG9CQUFvQixDQUFDLFFBQVFFO1FBQ3ZELElBQUksQ0FBQ0ksTUFBTSxHQUFHVCxrQ0FBS0EsQ0FBQ0UsT0FBT0Msb0JBQW9CLENBQUMsU0FBU0U7SUFDN0Q7SUFDQSxJQUFJSyxPQUFPO1FBQ1AsT0FBTyxJQUFJLENBQUNILEtBQUs7SUFDckI7SUFDQSxJQUFJSSxPQUFPO1FBQ1AsT0FBTyxJQUFJLENBQUNILEtBQUs7SUFDckI7SUFDQSxJQUFJSSxRQUFRO1FBQ1IsT0FBTyxJQUFJLENBQUNILE1BQU07SUFDdEI7SUFDQUksSUFBSVQsS0FBSyxFQUFFLEdBQUdVLElBQUksRUFBRTtRQUNoQixNQUFNQyxTQUFTLElBQUksQ0FBQ1gsTUFBTTtRQUMxQlcsVUFBVUQ7SUFDZDtBQUNKLEVBQ0EsaUNBQWlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZmx1c2gtbm90ZXMvLi9ub2RlX21vZHVsZXMvQHdha3UvbWVzc2FnZS1lbmNyeXB0aW9uL25vZGVfbW9kdWxlcy9Ad2FrdS91dGlscy9kaXN0L2xvZ2dlci9pbmRleC5qcz82YzhlIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBkZWJ1ZyBmcm9tIFwiZGVidWdcIjtcbmNvbnN0IEFQUF9OQU1FID0gXCJ3YWt1XCI7XG5leHBvcnQgY2xhc3MgTG9nZ2VyIHtcbiAgICBfaW5mbztcbiAgICBfd2FybjtcbiAgICBfZXJyb3I7XG4gICAgc3RhdGljIGNyZWF0ZURlYnVnTmFtZXNwYWNlKGxldmVsLCBwcmVmaXgpIHtcbiAgICAgICAgcmV0dXJuIHByZWZpeCA/IGAke0FQUF9OQU1FfToke2xldmVsfToke3ByZWZpeH1gIDogYCR7QVBQX05BTUV9OiR7bGV2ZWx9YDtcbiAgICB9XG4gICAgY29uc3RydWN0b3IocHJlZml4KSB7XG4gICAgICAgIHRoaXMuX2luZm8gPSBkZWJ1ZyhMb2dnZXIuY3JlYXRlRGVidWdOYW1lc3BhY2UoXCJpbmZvXCIsIHByZWZpeCkpO1xuICAgICAgICB0aGlzLl93YXJuID0gZGVidWcoTG9nZ2VyLmNyZWF0ZURlYnVnTmFtZXNwYWNlKFwid2FyblwiLCBwcmVmaXgpKTtcbiAgICAgICAgdGhpcy5fZXJyb3IgPSBkZWJ1ZyhMb2dnZXIuY3JlYXRlRGVidWdOYW1lc3BhY2UoXCJlcnJvclwiLCBwcmVmaXgpKTtcbiAgICB9XG4gICAgZ2V0IGluZm8oKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9pbmZvO1xuICAgIH1cbiAgICBnZXQgd2FybigpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX3dhcm47XG4gICAgfVxuICAgIGdldCBlcnJvcigpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2Vycm9yO1xuICAgIH1cbiAgICBsb2cobGV2ZWwsIC4uLmFyZ3MpIHtcbiAgICAgICAgY29uc3QgbG9nZ2VyID0gdGhpc1tsZXZlbF07XG4gICAgICAgIGxvZ2dlciguLi5hcmdzKTtcbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOlsiZGVidWciLCJBUFBfTkFNRSIsIkxvZ2dlciIsImNyZWF0ZURlYnVnTmFtZXNwYWNlIiwibGV2ZWwiLCJwcmVmaXgiLCJjb25zdHJ1Y3RvciIsIl9pbmZvIiwiX3dhcm4iLCJfZXJyb3IiLCJpbmZvIiwid2FybiIsImVycm9yIiwibG9nIiwiYXJncyIsImxvZ2dlciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/message-encryption/node_modules/@waku/utils/dist/logger/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/proto/dist/index.js":
/*!************************************************!*\
  !*** ./node_modules/@waku/proto/dist/index.js ***!
  \************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PushResponse: () => (/* reexport safe */ _lib_light_push_js__WEBPACK_IMPORTED_MODULE_4__.PushResponse),\n/* harmony export */   TopicOnlyMessage: () => (/* reexport safe */ _lib_topic_only_message_js__WEBPACK_IMPORTED_MODULE_2__.TopicOnlyMessage),\n/* harmony export */   WakuMessage: () => (/* reexport safe */ _lib_filter_js__WEBPACK_IMPORTED_MODULE_1__.WakuMessage),\n/* harmony export */   proto_filter: () => (/* reexport module object */ _lib_filter_js__WEBPACK_IMPORTED_MODULE_1__),\n/* harmony export */   proto_filter_v2: () => (/* reexport module object */ _lib_filter_v2_js__WEBPACK_IMPORTED_MODULE_3__),\n/* harmony export */   proto_lightpush: () => (/* reexport module object */ _lib_light_push_js__WEBPACK_IMPORTED_MODULE_4__),\n/* harmony export */   proto_message: () => (/* reexport module object */ _lib_message_js__WEBPACK_IMPORTED_MODULE_0__),\n/* harmony export */   proto_metadata: () => (/* reexport module object */ _lib_metadata_js__WEBPACK_IMPORTED_MODULE_7__),\n/* harmony export */   proto_peer_exchange: () => (/* reexport module object */ _lib_peer_exchange_js__WEBPACK_IMPORTED_MODULE_6__),\n/* harmony export */   proto_store: () => (/* reexport module object */ _lib_store_js__WEBPACK_IMPORTED_MODULE_5__),\n/* harmony export */   proto_topic_only_message: () => (/* reexport module object */ _lib_topic_only_message_js__WEBPACK_IMPORTED_MODULE_2__)\n/* harmony export */ });\n/* harmony import */ var _lib_message_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./lib/message.js */ \"(ssr)/./node_modules/@waku/proto/dist/lib/message.js\");\n/* harmony import */ var _lib_filter_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./lib/filter.js */ \"(ssr)/./node_modules/@waku/proto/dist/lib/filter.js\");\n/* harmony import */ var _lib_topic_only_message_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./lib/topic_only_message.js */ \"(ssr)/./node_modules/@waku/proto/dist/lib/topic_only_message.js\");\n/* harmony import */ var _lib_filter_v2_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./lib/filter_v2.js */ \"(ssr)/./node_modules/@waku/proto/dist/lib/filter_v2.js\");\n/* harmony import */ var _lib_light_push_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./lib/light_push.js */ \"(ssr)/./node_modules/@waku/proto/dist/lib/light_push.js\");\n/* harmony import */ var _lib_store_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./lib/store.js */ \"(ssr)/./node_modules/@waku/proto/dist/lib/store.js\");\n/* harmony import */ var _lib_peer_exchange_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./lib/peer_exchange.js */ \"(ssr)/./node_modules/@waku/proto/dist/lib/peer_exchange.js\");\n/* harmony import */ var _lib_metadata_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./lib/metadata.js */ \"(ssr)/./node_modules/@waku/proto/dist/lib/metadata.js\");\n\n\n\n\n\n\n\n\n\n\n //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdha3UvcHJvdG8vZGlzdC9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQWtEO0FBQ0o7QUFDMEI7QUFDVDtBQUNmO0FBQ007QUFDQztBQUNKO0FBQ0w7QUFDZ0I7QUFDVixDQUNwRCxpQ0FBaUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mbHVzaC1ub3Rlcy8uL25vZGVfbW9kdWxlcy9Ad2FrdS9wcm90by9kaXN0L2luZGV4LmpzPzk2Y2UiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0ICogYXMgcHJvdG9fbWVzc2FnZSBmcm9tIFwiLi9saWIvbWVzc2FnZS5qc1wiO1xuZXhwb3J0IHsgV2FrdU1lc3NhZ2UgfSBmcm9tIFwiLi9saWIvZmlsdGVyLmpzXCI7XG5leHBvcnQgKiBhcyBwcm90b190b3BpY19vbmx5X21lc3NhZ2UgZnJvbSBcIi4vbGliL3RvcGljX29ubHlfbWVzc2FnZS5qc1wiO1xuZXhwb3J0IHsgVG9waWNPbmx5TWVzc2FnZSB9IGZyb20gXCIuL2xpYi90b3BpY19vbmx5X21lc3NhZ2UuanNcIjtcbmV4cG9ydCAqIGFzIHByb3RvX2ZpbHRlciBmcm9tIFwiLi9saWIvZmlsdGVyLmpzXCI7XG5leHBvcnQgKiBhcyBwcm90b19maWx0ZXJfdjIgZnJvbSBcIi4vbGliL2ZpbHRlcl92Mi5qc1wiO1xuZXhwb3J0ICogYXMgcHJvdG9fbGlnaHRwdXNoIGZyb20gXCIuL2xpYi9saWdodF9wdXNoLmpzXCI7XG5leHBvcnQgeyBQdXNoUmVzcG9uc2UgfSBmcm9tIFwiLi9saWIvbGlnaHRfcHVzaC5qc1wiO1xuZXhwb3J0ICogYXMgcHJvdG9fc3RvcmUgZnJvbSBcIi4vbGliL3N0b3JlLmpzXCI7XG5leHBvcnQgKiBhcyBwcm90b19wZWVyX2V4Y2hhbmdlIGZyb20gXCIuL2xpYi9wZWVyX2V4Y2hhbmdlLmpzXCI7XG5leHBvcnQgKiBhcyBwcm90b19tZXRhZGF0YSBmcm9tICcuL2xpYi9tZXRhZGF0YS5qcyc7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOlsicHJvdG9fbWVzc2FnZSIsIldha3VNZXNzYWdlIiwicHJvdG9fdG9waWNfb25seV9tZXNzYWdlIiwiVG9waWNPbmx5TWVzc2FnZSIsInByb3RvX2ZpbHRlciIsInByb3RvX2ZpbHRlcl92MiIsInByb3RvX2xpZ2h0cHVzaCIsIlB1c2hSZXNwb25zZSIsInByb3RvX3N0b3JlIiwicHJvdG9fcGVlcl9leGNoYW5nZSIsInByb3RvX21ldGFkYXRhIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/proto/dist/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/proto/dist/lib/filter.js":
/*!*****************************************************!*\
  !*** ./node_modules/@waku/proto/dist/lib/filter.js ***!
  \*****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   FilterRequest: () => (/* binding */ FilterRequest),\n/* harmony export */   FilterRpc: () => (/* binding */ FilterRpc),\n/* harmony export */   MessagePush: () => (/* binding */ MessagePush),\n/* harmony export */   RateLimitProof: () => (/* binding */ RateLimitProof),\n/* harmony export */   WakuMessage: () => (/* binding */ WakuMessage)\n/* harmony export */ });\n/* harmony import */ var protons_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! protons-runtime */ \"(ssr)/./node_modules/protons-runtime/dist/src/index.js\");\n/* eslint-disable import/export */ /* eslint-disable complexity */ /* eslint-disable @typescript-eslint/no-namespace */ /* eslint-disable @typescript-eslint/no-unnecessary-boolean-literal-compare */ /* eslint-disable @typescript-eslint/no-empty-interface */ \nvar FilterRequest;\n(function(FilterRequest) {\n    let ContentFilter;\n    (function(ContentFilter) {\n        let _codec;\n        ContentFilter.codec = ()=>{\n            if (_codec == null) {\n                _codec = (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.message)((obj, w, opts = {})=>{\n                    if (opts.lengthDelimited !== false) {\n                        w.fork();\n                    }\n                    if (obj.contentTopic != null && obj.contentTopic !== \"\") {\n                        w.uint32(10);\n                        w.string(obj.contentTopic);\n                    }\n                    if (opts.lengthDelimited !== false) {\n                        w.ldelim();\n                    }\n                }, (reader, length)=>{\n                    const obj = {\n                        contentTopic: \"\"\n                    };\n                    const end = length == null ? reader.len : reader.pos + length;\n                    while(reader.pos < end){\n                        const tag = reader.uint32();\n                        switch(tag >>> 3){\n                            case 1:\n                                obj.contentTopic = reader.string();\n                                break;\n                            default:\n                                reader.skipType(tag & 7);\n                                break;\n                        }\n                    }\n                    return obj;\n                });\n            }\n            return _codec;\n        };\n        ContentFilter.encode = (obj)=>{\n            return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.encodeMessage)(obj, ContentFilter.codec());\n        };\n        ContentFilter.decode = (buf)=>{\n            return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.decodeMessage)(buf, ContentFilter.codec());\n        };\n    })(ContentFilter = FilterRequest.ContentFilter || (FilterRequest.ContentFilter = {}));\n    let _codec;\n    FilterRequest.codec = ()=>{\n        if (_codec == null) {\n            _codec = (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.message)((obj, w, opts = {})=>{\n                if (opts.lengthDelimited !== false) {\n                    w.fork();\n                }\n                if (obj.subscribe != null && obj.subscribe !== false) {\n                    w.uint32(8);\n                    w.bool(obj.subscribe);\n                }\n                if (obj.topic != null && obj.topic !== \"\") {\n                    w.uint32(18);\n                    w.string(obj.topic);\n                }\n                if (obj.contentFilters != null) {\n                    for (const value of obj.contentFilters){\n                        w.uint32(26);\n                        FilterRequest.ContentFilter.codec().encode(value, w);\n                    }\n                }\n                if (opts.lengthDelimited !== false) {\n                    w.ldelim();\n                }\n            }, (reader, length)=>{\n                const obj = {\n                    subscribe: false,\n                    topic: \"\",\n                    contentFilters: []\n                };\n                const end = length == null ? reader.len : reader.pos + length;\n                while(reader.pos < end){\n                    const tag = reader.uint32();\n                    switch(tag >>> 3){\n                        case 1:\n                            obj.subscribe = reader.bool();\n                            break;\n                        case 2:\n                            obj.topic = reader.string();\n                            break;\n                        case 3:\n                            obj.contentFilters.push(FilterRequest.ContentFilter.codec().decode(reader, reader.uint32()));\n                            break;\n                        default:\n                            reader.skipType(tag & 7);\n                            break;\n                    }\n                }\n                return obj;\n            });\n        }\n        return _codec;\n    };\n    FilterRequest.encode = (obj)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.encodeMessage)(obj, FilterRequest.codec());\n    };\n    FilterRequest.decode = (buf)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.decodeMessage)(buf, FilterRequest.codec());\n    };\n})(FilterRequest || (FilterRequest = {}));\nvar MessagePush;\n(function(MessagePush) {\n    let _codec;\n    MessagePush.codec = ()=>{\n        if (_codec == null) {\n            _codec = (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.message)((obj, w, opts = {})=>{\n                if (opts.lengthDelimited !== false) {\n                    w.fork();\n                }\n                if (obj.messages != null) {\n                    for (const value of obj.messages){\n                        w.uint32(10);\n                        WakuMessage.codec().encode(value, w);\n                    }\n                }\n                if (opts.lengthDelimited !== false) {\n                    w.ldelim();\n                }\n            }, (reader, length)=>{\n                const obj = {\n                    messages: []\n                };\n                const end = length == null ? reader.len : reader.pos + length;\n                while(reader.pos < end){\n                    const tag = reader.uint32();\n                    switch(tag >>> 3){\n                        case 1:\n                            obj.messages.push(WakuMessage.codec().decode(reader, reader.uint32()));\n                            break;\n                        default:\n                            reader.skipType(tag & 7);\n                            break;\n                    }\n                }\n                return obj;\n            });\n        }\n        return _codec;\n    };\n    MessagePush.encode = (obj)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.encodeMessage)(obj, MessagePush.codec());\n    };\n    MessagePush.decode = (buf)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.decodeMessage)(buf, MessagePush.codec());\n    };\n})(MessagePush || (MessagePush = {}));\nvar FilterRpc;\n(function(FilterRpc) {\n    let _codec;\n    FilterRpc.codec = ()=>{\n        if (_codec == null) {\n            _codec = (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.message)((obj, w, opts = {})=>{\n                if (opts.lengthDelimited !== false) {\n                    w.fork();\n                }\n                if (obj.requestId != null && obj.requestId !== \"\") {\n                    w.uint32(10);\n                    w.string(obj.requestId);\n                }\n                if (obj.request != null) {\n                    w.uint32(18);\n                    FilterRequest.codec().encode(obj.request, w);\n                }\n                if (obj.push != null) {\n                    w.uint32(26);\n                    MessagePush.codec().encode(obj.push, w);\n                }\n                if (opts.lengthDelimited !== false) {\n                    w.ldelim();\n                }\n            }, (reader, length)=>{\n                const obj = {\n                    requestId: \"\"\n                };\n                const end = length == null ? reader.len : reader.pos + length;\n                while(reader.pos < end){\n                    const tag = reader.uint32();\n                    switch(tag >>> 3){\n                        case 1:\n                            obj.requestId = reader.string();\n                            break;\n                        case 2:\n                            obj.request = FilterRequest.codec().decode(reader, reader.uint32());\n                            break;\n                        case 3:\n                            obj.push = MessagePush.codec().decode(reader, reader.uint32());\n                            break;\n                        default:\n                            reader.skipType(tag & 7);\n                            break;\n                    }\n                }\n                return obj;\n            });\n        }\n        return _codec;\n    };\n    FilterRpc.encode = (obj)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.encodeMessage)(obj, FilterRpc.codec());\n    };\n    FilterRpc.decode = (buf)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.decodeMessage)(buf, FilterRpc.codec());\n    };\n})(FilterRpc || (FilterRpc = {}));\nvar RateLimitProof;\n(function(RateLimitProof) {\n    let _codec;\n    RateLimitProof.codec = ()=>{\n        if (_codec == null) {\n            _codec = (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.message)((obj, w, opts = {})=>{\n                if (opts.lengthDelimited !== false) {\n                    w.fork();\n                }\n                if (obj.proof != null && obj.proof.byteLength > 0) {\n                    w.uint32(10);\n                    w.bytes(obj.proof);\n                }\n                if (obj.merkleRoot != null && obj.merkleRoot.byteLength > 0) {\n                    w.uint32(18);\n                    w.bytes(obj.merkleRoot);\n                }\n                if (obj.epoch != null && obj.epoch.byteLength > 0) {\n                    w.uint32(26);\n                    w.bytes(obj.epoch);\n                }\n                if (obj.shareX != null && obj.shareX.byteLength > 0) {\n                    w.uint32(34);\n                    w.bytes(obj.shareX);\n                }\n                if (obj.shareY != null && obj.shareY.byteLength > 0) {\n                    w.uint32(42);\n                    w.bytes(obj.shareY);\n                }\n                if (obj.nullifier != null && obj.nullifier.byteLength > 0) {\n                    w.uint32(50);\n                    w.bytes(obj.nullifier);\n                }\n                if (obj.rlnIdentifier != null && obj.rlnIdentifier.byteLength > 0) {\n                    w.uint32(58);\n                    w.bytes(obj.rlnIdentifier);\n                }\n                if (opts.lengthDelimited !== false) {\n                    w.ldelim();\n                }\n            }, (reader, length)=>{\n                const obj = {\n                    proof: new Uint8Array(0),\n                    merkleRoot: new Uint8Array(0),\n                    epoch: new Uint8Array(0),\n                    shareX: new Uint8Array(0),\n                    shareY: new Uint8Array(0),\n                    nullifier: new Uint8Array(0),\n                    rlnIdentifier: new Uint8Array(0)\n                };\n                const end = length == null ? reader.len : reader.pos + length;\n                while(reader.pos < end){\n                    const tag = reader.uint32();\n                    switch(tag >>> 3){\n                        case 1:\n                            obj.proof = reader.bytes();\n                            break;\n                        case 2:\n                            obj.merkleRoot = reader.bytes();\n                            break;\n                        case 3:\n                            obj.epoch = reader.bytes();\n                            break;\n                        case 4:\n                            obj.shareX = reader.bytes();\n                            break;\n                        case 5:\n                            obj.shareY = reader.bytes();\n                            break;\n                        case 6:\n                            obj.nullifier = reader.bytes();\n                            break;\n                        case 7:\n                            obj.rlnIdentifier = reader.bytes();\n                            break;\n                        default:\n                            reader.skipType(tag & 7);\n                            break;\n                    }\n                }\n                return obj;\n            });\n        }\n        return _codec;\n    };\n    RateLimitProof.encode = (obj)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.encodeMessage)(obj, RateLimitProof.codec());\n    };\n    RateLimitProof.decode = (buf)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.decodeMessage)(buf, RateLimitProof.codec());\n    };\n})(RateLimitProof || (RateLimitProof = {}));\nvar WakuMessage;\n(function(WakuMessage) {\n    let _codec;\n    WakuMessage.codec = ()=>{\n        if (_codec == null) {\n            _codec = (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.message)((obj, w, opts = {})=>{\n                if (opts.lengthDelimited !== false) {\n                    w.fork();\n                }\n                if (obj.payload != null && obj.payload.byteLength > 0) {\n                    w.uint32(10);\n                    w.bytes(obj.payload);\n                }\n                if (obj.contentTopic != null && obj.contentTopic !== \"\") {\n                    w.uint32(18);\n                    w.string(obj.contentTopic);\n                }\n                if (obj.version != null) {\n                    w.uint32(24);\n                    w.uint32(obj.version);\n                }\n                if (obj.timestamp != null) {\n                    w.uint32(80);\n                    w.sint64(obj.timestamp);\n                }\n                if (obj.meta != null) {\n                    w.uint32(90);\n                    w.bytes(obj.meta);\n                }\n                if (obj.rateLimitProof != null) {\n                    w.uint32(170);\n                    RateLimitProof.codec().encode(obj.rateLimitProof, w);\n                }\n                if (obj.ephemeral != null) {\n                    w.uint32(248);\n                    w.bool(obj.ephemeral);\n                }\n                if (opts.lengthDelimited !== false) {\n                    w.ldelim();\n                }\n            }, (reader, length)=>{\n                const obj = {\n                    payload: new Uint8Array(0),\n                    contentTopic: \"\"\n                };\n                const end = length == null ? reader.len : reader.pos + length;\n                while(reader.pos < end){\n                    const tag = reader.uint32();\n                    switch(tag >>> 3){\n                        case 1:\n                            obj.payload = reader.bytes();\n                            break;\n                        case 2:\n                            obj.contentTopic = reader.string();\n                            break;\n                        case 3:\n                            obj.version = reader.uint32();\n                            break;\n                        case 10:\n                            obj.timestamp = reader.sint64();\n                            break;\n                        case 11:\n                            obj.meta = reader.bytes();\n                            break;\n                        case 21:\n                            obj.rateLimitProof = RateLimitProof.codec().decode(reader, reader.uint32());\n                            break;\n                        case 31:\n                            obj.ephemeral = reader.bool();\n                            break;\n                        default:\n                            reader.skipType(tag & 7);\n                            break;\n                    }\n                }\n                return obj;\n            });\n        }\n        return _codec;\n    };\n    WakuMessage.encode = (obj)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.encodeMessage)(obj, WakuMessage.codec());\n    };\n    WakuMessage.decode = (buf)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.decodeMessage)(buf, WakuMessage.codec());\n    };\n})(WakuMessage || (WakuMessage = {})); //# sourceMappingURL=filter.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/proto/dist/lib/filter.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/proto/dist/lib/filter_v2.js":
/*!********************************************************!*\
  !*** ./node_modules/@waku/proto/dist/lib/filter_v2.js ***!
  \********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   FilterSubscribeRequest: () => (/* binding */ FilterSubscribeRequest),\n/* harmony export */   FilterSubscribeResponse: () => (/* binding */ FilterSubscribeResponse),\n/* harmony export */   MessagePush: () => (/* binding */ MessagePush),\n/* harmony export */   RateLimitProof: () => (/* binding */ RateLimitProof),\n/* harmony export */   WakuMessage: () => (/* binding */ WakuMessage)\n/* harmony export */ });\n/* harmony import */ var protons_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! protons-runtime */ \"(ssr)/./node_modules/protons-runtime/dist/src/index.js\");\n/* eslint-disable import/export */ /* eslint-disable complexity */ /* eslint-disable @typescript-eslint/no-namespace */ /* eslint-disable @typescript-eslint/no-unnecessary-boolean-literal-compare */ /* eslint-disable @typescript-eslint/no-empty-interface */ \nvar FilterSubscribeRequest;\n(function(FilterSubscribeRequest) {\n    let FilterSubscribeType;\n    (function(FilterSubscribeType) {\n        FilterSubscribeType[\"SUBSCRIBER_PING\"] = \"SUBSCRIBER_PING\";\n        FilterSubscribeType[\"SUBSCRIBE\"] = \"SUBSCRIBE\";\n        FilterSubscribeType[\"UNSUBSCRIBE\"] = \"UNSUBSCRIBE\";\n        FilterSubscribeType[\"UNSUBSCRIBE_ALL\"] = \"UNSUBSCRIBE_ALL\";\n    })(FilterSubscribeType = FilterSubscribeRequest.FilterSubscribeType || (FilterSubscribeRequest.FilterSubscribeType = {}));\n    let __FilterSubscribeTypeValues;\n    (function(__FilterSubscribeTypeValues) {\n        __FilterSubscribeTypeValues[__FilterSubscribeTypeValues[\"SUBSCRIBER_PING\"] = 0] = \"SUBSCRIBER_PING\";\n        __FilterSubscribeTypeValues[__FilterSubscribeTypeValues[\"SUBSCRIBE\"] = 1] = \"SUBSCRIBE\";\n        __FilterSubscribeTypeValues[__FilterSubscribeTypeValues[\"UNSUBSCRIBE\"] = 2] = \"UNSUBSCRIBE\";\n        __FilterSubscribeTypeValues[__FilterSubscribeTypeValues[\"UNSUBSCRIBE_ALL\"] = 3] = \"UNSUBSCRIBE_ALL\";\n    })(__FilterSubscribeTypeValues || (__FilterSubscribeTypeValues = {}));\n    (function(FilterSubscribeType) {\n        FilterSubscribeType.codec = ()=>{\n            return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.enumeration)(__FilterSubscribeTypeValues);\n        };\n    })(FilterSubscribeType = FilterSubscribeRequest.FilterSubscribeType || (FilterSubscribeRequest.FilterSubscribeType = {}));\n    let _codec;\n    FilterSubscribeRequest.codec = ()=>{\n        if (_codec == null) {\n            _codec = (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.message)((obj, w, opts = {})=>{\n                if (opts.lengthDelimited !== false) {\n                    w.fork();\n                }\n                if (obj.requestId != null && obj.requestId !== \"\") {\n                    w.uint32(10);\n                    w.string(obj.requestId);\n                }\n                if (obj.filterSubscribeType != null && __FilterSubscribeTypeValues[obj.filterSubscribeType] !== 0) {\n                    w.uint32(16);\n                    FilterSubscribeRequest.FilterSubscribeType.codec().encode(obj.filterSubscribeType, w);\n                }\n                if (obj.pubsubTopic != null) {\n                    w.uint32(82);\n                    w.string(obj.pubsubTopic);\n                }\n                if (obj.contentTopics != null) {\n                    for (const value of obj.contentTopics){\n                        w.uint32(90);\n                        w.string(value);\n                    }\n                }\n                if (opts.lengthDelimited !== false) {\n                    w.ldelim();\n                }\n            }, (reader, length)=>{\n                const obj = {\n                    requestId: \"\",\n                    filterSubscribeType: FilterSubscribeType.SUBSCRIBER_PING,\n                    contentTopics: []\n                };\n                const end = length == null ? reader.len : reader.pos + length;\n                while(reader.pos < end){\n                    const tag = reader.uint32();\n                    switch(tag >>> 3){\n                        case 1:\n                            obj.requestId = reader.string();\n                            break;\n                        case 2:\n                            obj.filterSubscribeType = FilterSubscribeRequest.FilterSubscribeType.codec().decode(reader);\n                            break;\n                        case 10:\n                            obj.pubsubTopic = reader.string();\n                            break;\n                        case 11:\n                            obj.contentTopics.push(reader.string());\n                            break;\n                        default:\n                            reader.skipType(tag & 7);\n                            break;\n                    }\n                }\n                return obj;\n            });\n        }\n        return _codec;\n    };\n    FilterSubscribeRequest.encode = (obj)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.encodeMessage)(obj, FilterSubscribeRequest.codec());\n    };\n    FilterSubscribeRequest.decode = (buf)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.decodeMessage)(buf, FilterSubscribeRequest.codec());\n    };\n})(FilterSubscribeRequest || (FilterSubscribeRequest = {}));\nvar FilterSubscribeResponse;\n(function(FilterSubscribeResponse) {\n    let _codec;\n    FilterSubscribeResponse.codec = ()=>{\n        if (_codec == null) {\n            _codec = (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.message)((obj, w, opts = {})=>{\n                if (opts.lengthDelimited !== false) {\n                    w.fork();\n                }\n                if (obj.requestId != null && obj.requestId !== \"\") {\n                    w.uint32(10);\n                    w.string(obj.requestId);\n                }\n                if (obj.statusCode != null && obj.statusCode !== 0) {\n                    w.uint32(80);\n                    w.uint32(obj.statusCode);\n                }\n                if (obj.statusDesc != null) {\n                    w.uint32(90);\n                    w.string(obj.statusDesc);\n                }\n                if (opts.lengthDelimited !== false) {\n                    w.ldelim();\n                }\n            }, (reader, length)=>{\n                const obj = {\n                    requestId: \"\",\n                    statusCode: 0\n                };\n                const end = length == null ? reader.len : reader.pos + length;\n                while(reader.pos < end){\n                    const tag = reader.uint32();\n                    switch(tag >>> 3){\n                        case 1:\n                            obj.requestId = reader.string();\n                            break;\n                        case 10:\n                            obj.statusCode = reader.uint32();\n                            break;\n                        case 11:\n                            obj.statusDesc = reader.string();\n                            break;\n                        default:\n                            reader.skipType(tag & 7);\n                            break;\n                    }\n                }\n                return obj;\n            });\n        }\n        return _codec;\n    };\n    FilterSubscribeResponse.encode = (obj)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.encodeMessage)(obj, FilterSubscribeResponse.codec());\n    };\n    FilterSubscribeResponse.decode = (buf)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.decodeMessage)(buf, FilterSubscribeResponse.codec());\n    };\n})(FilterSubscribeResponse || (FilterSubscribeResponse = {}));\nvar MessagePush;\n(function(MessagePush) {\n    let _codec;\n    MessagePush.codec = ()=>{\n        if (_codec == null) {\n            _codec = (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.message)((obj, w, opts = {})=>{\n                if (opts.lengthDelimited !== false) {\n                    w.fork();\n                }\n                if (obj.wakuMessage != null) {\n                    w.uint32(10);\n                    WakuMessage.codec().encode(obj.wakuMessage, w);\n                }\n                if (obj.pubsubTopic != null) {\n                    w.uint32(18);\n                    w.string(obj.pubsubTopic);\n                }\n                if (opts.lengthDelimited !== false) {\n                    w.ldelim();\n                }\n            }, (reader, length)=>{\n                const obj = {};\n                const end = length == null ? reader.len : reader.pos + length;\n                while(reader.pos < end){\n                    const tag = reader.uint32();\n                    switch(tag >>> 3){\n                        case 1:\n                            obj.wakuMessage = WakuMessage.codec().decode(reader, reader.uint32());\n                            break;\n                        case 2:\n                            obj.pubsubTopic = reader.string();\n                            break;\n                        default:\n                            reader.skipType(tag & 7);\n                            break;\n                    }\n                }\n                return obj;\n            });\n        }\n        return _codec;\n    };\n    MessagePush.encode = (obj)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.encodeMessage)(obj, MessagePush.codec());\n    };\n    MessagePush.decode = (buf)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.decodeMessage)(buf, MessagePush.codec());\n    };\n})(MessagePush || (MessagePush = {}));\nvar RateLimitProof;\n(function(RateLimitProof) {\n    let _codec;\n    RateLimitProof.codec = ()=>{\n        if (_codec == null) {\n            _codec = (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.message)((obj, w, opts = {})=>{\n                if (opts.lengthDelimited !== false) {\n                    w.fork();\n                }\n                if (obj.proof != null && obj.proof.byteLength > 0) {\n                    w.uint32(10);\n                    w.bytes(obj.proof);\n                }\n                if (obj.merkleRoot != null && obj.merkleRoot.byteLength > 0) {\n                    w.uint32(18);\n                    w.bytes(obj.merkleRoot);\n                }\n                if (obj.epoch != null && obj.epoch.byteLength > 0) {\n                    w.uint32(26);\n                    w.bytes(obj.epoch);\n                }\n                if (obj.shareX != null && obj.shareX.byteLength > 0) {\n                    w.uint32(34);\n                    w.bytes(obj.shareX);\n                }\n                if (obj.shareY != null && obj.shareY.byteLength > 0) {\n                    w.uint32(42);\n                    w.bytes(obj.shareY);\n                }\n                if (obj.nullifier != null && obj.nullifier.byteLength > 0) {\n                    w.uint32(50);\n                    w.bytes(obj.nullifier);\n                }\n                if (obj.rlnIdentifier != null && obj.rlnIdentifier.byteLength > 0) {\n                    w.uint32(58);\n                    w.bytes(obj.rlnIdentifier);\n                }\n                if (opts.lengthDelimited !== false) {\n                    w.ldelim();\n                }\n            }, (reader, length)=>{\n                const obj = {\n                    proof: new Uint8Array(0),\n                    merkleRoot: new Uint8Array(0),\n                    epoch: new Uint8Array(0),\n                    shareX: new Uint8Array(0),\n                    shareY: new Uint8Array(0),\n                    nullifier: new Uint8Array(0),\n                    rlnIdentifier: new Uint8Array(0)\n                };\n                const end = length == null ? reader.len : reader.pos + length;\n                while(reader.pos < end){\n                    const tag = reader.uint32();\n                    switch(tag >>> 3){\n                        case 1:\n                            obj.proof = reader.bytes();\n                            break;\n                        case 2:\n                            obj.merkleRoot = reader.bytes();\n                            break;\n                        case 3:\n                            obj.epoch = reader.bytes();\n                            break;\n                        case 4:\n                            obj.shareX = reader.bytes();\n                            break;\n                        case 5:\n                            obj.shareY = reader.bytes();\n                            break;\n                        case 6:\n                            obj.nullifier = reader.bytes();\n                            break;\n                        case 7:\n                            obj.rlnIdentifier = reader.bytes();\n                            break;\n                        default:\n                            reader.skipType(tag & 7);\n                            break;\n                    }\n                }\n                return obj;\n            });\n        }\n        return _codec;\n    };\n    RateLimitProof.encode = (obj)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.encodeMessage)(obj, RateLimitProof.codec());\n    };\n    RateLimitProof.decode = (buf)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.decodeMessage)(buf, RateLimitProof.codec());\n    };\n})(RateLimitProof || (RateLimitProof = {}));\nvar WakuMessage;\n(function(WakuMessage) {\n    let _codec;\n    WakuMessage.codec = ()=>{\n        if (_codec == null) {\n            _codec = (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.message)((obj, w, opts = {})=>{\n                if (opts.lengthDelimited !== false) {\n                    w.fork();\n                }\n                if (obj.payload != null && obj.payload.byteLength > 0) {\n                    w.uint32(10);\n                    w.bytes(obj.payload);\n                }\n                if (obj.contentTopic != null && obj.contentTopic !== \"\") {\n                    w.uint32(18);\n                    w.string(obj.contentTopic);\n                }\n                if (obj.version != null) {\n                    w.uint32(24);\n                    w.uint32(obj.version);\n                }\n                if (obj.timestamp != null) {\n                    w.uint32(80);\n                    w.sint64(obj.timestamp);\n                }\n                if (obj.meta != null) {\n                    w.uint32(90);\n                    w.bytes(obj.meta);\n                }\n                if (obj.rateLimitProof != null) {\n                    w.uint32(170);\n                    RateLimitProof.codec().encode(obj.rateLimitProof, w);\n                }\n                if (obj.ephemeral != null) {\n                    w.uint32(248);\n                    w.bool(obj.ephemeral);\n                }\n                if (opts.lengthDelimited !== false) {\n                    w.ldelim();\n                }\n            }, (reader, length)=>{\n                const obj = {\n                    payload: new Uint8Array(0),\n                    contentTopic: \"\"\n                };\n                const end = length == null ? reader.len : reader.pos + length;\n                while(reader.pos < end){\n                    const tag = reader.uint32();\n                    switch(tag >>> 3){\n                        case 1:\n                            obj.payload = reader.bytes();\n                            break;\n                        case 2:\n                            obj.contentTopic = reader.string();\n                            break;\n                        case 3:\n                            obj.version = reader.uint32();\n                            break;\n                        case 10:\n                            obj.timestamp = reader.sint64();\n                            break;\n                        case 11:\n                            obj.meta = reader.bytes();\n                            break;\n                        case 21:\n                            obj.rateLimitProof = RateLimitProof.codec().decode(reader, reader.uint32());\n                            break;\n                        case 31:\n                            obj.ephemeral = reader.bool();\n                            break;\n                        default:\n                            reader.skipType(tag & 7);\n                            break;\n                    }\n                }\n                return obj;\n            });\n        }\n        return _codec;\n    };\n    WakuMessage.encode = (obj)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.encodeMessage)(obj, WakuMessage.codec());\n    };\n    WakuMessage.decode = (buf)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.decodeMessage)(buf, WakuMessage.codec());\n    };\n})(WakuMessage || (WakuMessage = {})); //# sourceMappingURL=filter_v2.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/proto/dist/lib/filter_v2.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/proto/dist/lib/light_push.js":
/*!*********************************************************!*\
  !*** ./node_modules/@waku/proto/dist/lib/light_push.js ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PushRequest: () => (/* binding */ PushRequest),\n/* harmony export */   PushResponse: () => (/* binding */ PushResponse),\n/* harmony export */   PushRpc: () => (/* binding */ PushRpc),\n/* harmony export */   RateLimitProof: () => (/* binding */ RateLimitProof),\n/* harmony export */   WakuMessage: () => (/* binding */ WakuMessage)\n/* harmony export */ });\n/* harmony import */ var protons_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! protons-runtime */ \"(ssr)/./node_modules/protons-runtime/dist/src/index.js\");\n/* eslint-disable import/export */ /* eslint-disable complexity */ /* eslint-disable @typescript-eslint/no-namespace */ /* eslint-disable @typescript-eslint/no-unnecessary-boolean-literal-compare */ /* eslint-disable @typescript-eslint/no-empty-interface */ \nvar PushRequest;\n(function(PushRequest) {\n    let _codec;\n    PushRequest.codec = ()=>{\n        if (_codec == null) {\n            _codec = (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.message)((obj, w, opts = {})=>{\n                if (opts.lengthDelimited !== false) {\n                    w.fork();\n                }\n                if (obj.pubsubTopic != null && obj.pubsubTopic !== \"\") {\n                    w.uint32(10);\n                    w.string(obj.pubsubTopic);\n                }\n                if (obj.message != null) {\n                    w.uint32(18);\n                    WakuMessage.codec().encode(obj.message, w);\n                }\n                if (opts.lengthDelimited !== false) {\n                    w.ldelim();\n                }\n            }, (reader, length)=>{\n                const obj = {\n                    pubsubTopic: \"\"\n                };\n                const end = length == null ? reader.len : reader.pos + length;\n                while(reader.pos < end){\n                    const tag = reader.uint32();\n                    switch(tag >>> 3){\n                        case 1:\n                            obj.pubsubTopic = reader.string();\n                            break;\n                        case 2:\n                            obj.message = WakuMessage.codec().decode(reader, reader.uint32());\n                            break;\n                        default:\n                            reader.skipType(tag & 7);\n                            break;\n                    }\n                }\n                return obj;\n            });\n        }\n        return _codec;\n    };\n    PushRequest.encode = (obj)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.encodeMessage)(obj, PushRequest.codec());\n    };\n    PushRequest.decode = (buf)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.decodeMessage)(buf, PushRequest.codec());\n    };\n})(PushRequest || (PushRequest = {}));\nvar PushResponse;\n(function(PushResponse) {\n    let _codec;\n    PushResponse.codec = ()=>{\n        if (_codec == null) {\n            _codec = (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.message)((obj, w, opts = {})=>{\n                if (opts.lengthDelimited !== false) {\n                    w.fork();\n                }\n                if (obj.isSuccess != null && obj.isSuccess !== false) {\n                    w.uint32(8);\n                    w.bool(obj.isSuccess);\n                }\n                if (obj.info != null) {\n                    w.uint32(18);\n                    w.string(obj.info);\n                }\n                if (opts.lengthDelimited !== false) {\n                    w.ldelim();\n                }\n            }, (reader, length)=>{\n                const obj = {\n                    isSuccess: false\n                };\n                const end = length == null ? reader.len : reader.pos + length;\n                while(reader.pos < end){\n                    const tag = reader.uint32();\n                    switch(tag >>> 3){\n                        case 1:\n                            obj.isSuccess = reader.bool();\n                            break;\n                        case 2:\n                            obj.info = reader.string();\n                            break;\n                        default:\n                            reader.skipType(tag & 7);\n                            break;\n                    }\n                }\n                return obj;\n            });\n        }\n        return _codec;\n    };\n    PushResponse.encode = (obj)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.encodeMessage)(obj, PushResponse.codec());\n    };\n    PushResponse.decode = (buf)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.decodeMessage)(buf, PushResponse.codec());\n    };\n})(PushResponse || (PushResponse = {}));\nvar PushRpc;\n(function(PushRpc) {\n    let _codec;\n    PushRpc.codec = ()=>{\n        if (_codec == null) {\n            _codec = (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.message)((obj, w, opts = {})=>{\n                if (opts.lengthDelimited !== false) {\n                    w.fork();\n                }\n                if (obj.requestId != null && obj.requestId !== \"\") {\n                    w.uint32(10);\n                    w.string(obj.requestId);\n                }\n                if (obj.request != null) {\n                    w.uint32(18);\n                    PushRequest.codec().encode(obj.request, w);\n                }\n                if (obj.response != null) {\n                    w.uint32(26);\n                    PushResponse.codec().encode(obj.response, w);\n                }\n                if (opts.lengthDelimited !== false) {\n                    w.ldelim();\n                }\n            }, (reader, length)=>{\n                const obj = {\n                    requestId: \"\"\n                };\n                const end = length == null ? reader.len : reader.pos + length;\n                while(reader.pos < end){\n                    const tag = reader.uint32();\n                    switch(tag >>> 3){\n                        case 1:\n                            obj.requestId = reader.string();\n                            break;\n                        case 2:\n                            obj.request = PushRequest.codec().decode(reader, reader.uint32());\n                            break;\n                        case 3:\n                            obj.response = PushResponse.codec().decode(reader, reader.uint32());\n                            break;\n                        default:\n                            reader.skipType(tag & 7);\n                            break;\n                    }\n                }\n                return obj;\n            });\n        }\n        return _codec;\n    };\n    PushRpc.encode = (obj)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.encodeMessage)(obj, PushRpc.codec());\n    };\n    PushRpc.decode = (buf)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.decodeMessage)(buf, PushRpc.codec());\n    };\n})(PushRpc || (PushRpc = {}));\nvar RateLimitProof;\n(function(RateLimitProof) {\n    let _codec;\n    RateLimitProof.codec = ()=>{\n        if (_codec == null) {\n            _codec = (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.message)((obj, w, opts = {})=>{\n                if (opts.lengthDelimited !== false) {\n                    w.fork();\n                }\n                if (obj.proof != null && obj.proof.byteLength > 0) {\n                    w.uint32(10);\n                    w.bytes(obj.proof);\n                }\n                if (obj.merkleRoot != null && obj.merkleRoot.byteLength > 0) {\n                    w.uint32(18);\n                    w.bytes(obj.merkleRoot);\n                }\n                if (obj.epoch != null && obj.epoch.byteLength > 0) {\n                    w.uint32(26);\n                    w.bytes(obj.epoch);\n                }\n                if (obj.shareX != null && obj.shareX.byteLength > 0) {\n                    w.uint32(34);\n                    w.bytes(obj.shareX);\n                }\n                if (obj.shareY != null && obj.shareY.byteLength > 0) {\n                    w.uint32(42);\n                    w.bytes(obj.shareY);\n                }\n                if (obj.nullifier != null && obj.nullifier.byteLength > 0) {\n                    w.uint32(50);\n                    w.bytes(obj.nullifier);\n                }\n                if (obj.rlnIdentifier != null && obj.rlnIdentifier.byteLength > 0) {\n                    w.uint32(58);\n                    w.bytes(obj.rlnIdentifier);\n                }\n                if (opts.lengthDelimited !== false) {\n                    w.ldelim();\n                }\n            }, (reader, length)=>{\n                const obj = {\n                    proof: new Uint8Array(0),\n                    merkleRoot: new Uint8Array(0),\n                    epoch: new Uint8Array(0),\n                    shareX: new Uint8Array(0),\n                    shareY: new Uint8Array(0),\n                    nullifier: new Uint8Array(0),\n                    rlnIdentifier: new Uint8Array(0)\n                };\n                const end = length == null ? reader.len : reader.pos + length;\n                while(reader.pos < end){\n                    const tag = reader.uint32();\n                    switch(tag >>> 3){\n                        case 1:\n                            obj.proof = reader.bytes();\n                            break;\n                        case 2:\n                            obj.merkleRoot = reader.bytes();\n                            break;\n                        case 3:\n                            obj.epoch = reader.bytes();\n                            break;\n                        case 4:\n                            obj.shareX = reader.bytes();\n                            break;\n                        case 5:\n                            obj.shareY = reader.bytes();\n                            break;\n                        case 6:\n                            obj.nullifier = reader.bytes();\n                            break;\n                        case 7:\n                            obj.rlnIdentifier = reader.bytes();\n                            break;\n                        default:\n                            reader.skipType(tag & 7);\n                            break;\n                    }\n                }\n                return obj;\n            });\n        }\n        return _codec;\n    };\n    RateLimitProof.encode = (obj)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.encodeMessage)(obj, RateLimitProof.codec());\n    };\n    RateLimitProof.decode = (buf)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.decodeMessage)(buf, RateLimitProof.codec());\n    };\n})(RateLimitProof || (RateLimitProof = {}));\nvar WakuMessage;\n(function(WakuMessage) {\n    let _codec;\n    WakuMessage.codec = ()=>{\n        if (_codec == null) {\n            _codec = (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.message)((obj, w, opts = {})=>{\n                if (opts.lengthDelimited !== false) {\n                    w.fork();\n                }\n                if (obj.payload != null && obj.payload.byteLength > 0) {\n                    w.uint32(10);\n                    w.bytes(obj.payload);\n                }\n                if (obj.contentTopic != null && obj.contentTopic !== \"\") {\n                    w.uint32(18);\n                    w.string(obj.contentTopic);\n                }\n                if (obj.version != null) {\n                    w.uint32(24);\n                    w.uint32(obj.version);\n                }\n                if (obj.timestamp != null) {\n                    w.uint32(80);\n                    w.sint64(obj.timestamp);\n                }\n                if (obj.meta != null) {\n                    w.uint32(90);\n                    w.bytes(obj.meta);\n                }\n                if (obj.rateLimitProof != null) {\n                    w.uint32(170);\n                    RateLimitProof.codec().encode(obj.rateLimitProof, w);\n                }\n                if (obj.ephemeral != null) {\n                    w.uint32(248);\n                    w.bool(obj.ephemeral);\n                }\n                if (opts.lengthDelimited !== false) {\n                    w.ldelim();\n                }\n            }, (reader, length)=>{\n                const obj = {\n                    payload: new Uint8Array(0),\n                    contentTopic: \"\"\n                };\n                const end = length == null ? reader.len : reader.pos + length;\n                while(reader.pos < end){\n                    const tag = reader.uint32();\n                    switch(tag >>> 3){\n                        case 1:\n                            obj.payload = reader.bytes();\n                            break;\n                        case 2:\n                            obj.contentTopic = reader.string();\n                            break;\n                        case 3:\n                            obj.version = reader.uint32();\n                            break;\n                        case 10:\n                            obj.timestamp = reader.sint64();\n                            break;\n                        case 11:\n                            obj.meta = reader.bytes();\n                            break;\n                        case 21:\n                            obj.rateLimitProof = RateLimitProof.codec().decode(reader, reader.uint32());\n                            break;\n                        case 31:\n                            obj.ephemeral = reader.bool();\n                            break;\n                        default:\n                            reader.skipType(tag & 7);\n                            break;\n                    }\n                }\n                return obj;\n            });\n        }\n        return _codec;\n    };\n    WakuMessage.encode = (obj)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.encodeMessage)(obj, WakuMessage.codec());\n    };\n    WakuMessage.decode = (buf)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.decodeMessage)(buf, WakuMessage.codec());\n    };\n})(WakuMessage || (WakuMessage = {})); //# sourceMappingURL=light_push.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/proto/dist/lib/light_push.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/proto/dist/lib/message.js":
/*!******************************************************!*\
  !*** ./node_modules/@waku/proto/dist/lib/message.js ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RateLimitProof: () => (/* binding */ RateLimitProof),\n/* harmony export */   WakuMessage: () => (/* binding */ WakuMessage)\n/* harmony export */ });\n/* harmony import */ var protons_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! protons-runtime */ \"(ssr)/./node_modules/protons-runtime/dist/src/index.js\");\n/* eslint-disable import/export */ /* eslint-disable complexity */ /* eslint-disable @typescript-eslint/no-namespace */ /* eslint-disable @typescript-eslint/no-unnecessary-boolean-literal-compare */ /* eslint-disable @typescript-eslint/no-empty-interface */ \nvar RateLimitProof;\n(function(RateLimitProof) {\n    let _codec;\n    RateLimitProof.codec = ()=>{\n        if (_codec == null) {\n            _codec = (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.message)((obj, w, opts = {})=>{\n                if (opts.lengthDelimited !== false) {\n                    w.fork();\n                }\n                if (obj.proof != null && obj.proof.byteLength > 0) {\n                    w.uint32(10);\n                    w.bytes(obj.proof);\n                }\n                if (obj.merkleRoot != null && obj.merkleRoot.byteLength > 0) {\n                    w.uint32(18);\n                    w.bytes(obj.merkleRoot);\n                }\n                if (obj.epoch != null && obj.epoch.byteLength > 0) {\n                    w.uint32(26);\n                    w.bytes(obj.epoch);\n                }\n                if (obj.shareX != null && obj.shareX.byteLength > 0) {\n                    w.uint32(34);\n                    w.bytes(obj.shareX);\n                }\n                if (obj.shareY != null && obj.shareY.byteLength > 0) {\n                    w.uint32(42);\n                    w.bytes(obj.shareY);\n                }\n                if (obj.nullifier != null && obj.nullifier.byteLength > 0) {\n                    w.uint32(50);\n                    w.bytes(obj.nullifier);\n                }\n                if (obj.rlnIdentifier != null && obj.rlnIdentifier.byteLength > 0) {\n                    w.uint32(58);\n                    w.bytes(obj.rlnIdentifier);\n                }\n                if (opts.lengthDelimited !== false) {\n                    w.ldelim();\n                }\n            }, (reader, length)=>{\n                const obj = {\n                    proof: new Uint8Array(0),\n                    merkleRoot: new Uint8Array(0),\n                    epoch: new Uint8Array(0),\n                    shareX: new Uint8Array(0),\n                    shareY: new Uint8Array(0),\n                    nullifier: new Uint8Array(0),\n                    rlnIdentifier: new Uint8Array(0)\n                };\n                const end = length == null ? reader.len : reader.pos + length;\n                while(reader.pos < end){\n                    const tag = reader.uint32();\n                    switch(tag >>> 3){\n                        case 1:\n                            obj.proof = reader.bytes();\n                            break;\n                        case 2:\n                            obj.merkleRoot = reader.bytes();\n                            break;\n                        case 3:\n                            obj.epoch = reader.bytes();\n                            break;\n                        case 4:\n                            obj.shareX = reader.bytes();\n                            break;\n                        case 5:\n                            obj.shareY = reader.bytes();\n                            break;\n                        case 6:\n                            obj.nullifier = reader.bytes();\n                            break;\n                        case 7:\n                            obj.rlnIdentifier = reader.bytes();\n                            break;\n                        default:\n                            reader.skipType(tag & 7);\n                            break;\n                    }\n                }\n                return obj;\n            });\n        }\n        return _codec;\n    };\n    RateLimitProof.encode = (obj)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.encodeMessage)(obj, RateLimitProof.codec());\n    };\n    RateLimitProof.decode = (buf)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.decodeMessage)(buf, RateLimitProof.codec());\n    };\n})(RateLimitProof || (RateLimitProof = {}));\nvar WakuMessage;\n(function(WakuMessage) {\n    let _codec;\n    WakuMessage.codec = ()=>{\n        if (_codec == null) {\n            _codec = (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.message)((obj, w, opts = {})=>{\n                if (opts.lengthDelimited !== false) {\n                    w.fork();\n                }\n                if (obj.payload != null && obj.payload.byteLength > 0) {\n                    w.uint32(10);\n                    w.bytes(obj.payload);\n                }\n                if (obj.contentTopic != null && obj.contentTopic !== \"\") {\n                    w.uint32(18);\n                    w.string(obj.contentTopic);\n                }\n                if (obj.version != null) {\n                    w.uint32(24);\n                    w.uint32(obj.version);\n                }\n                if (obj.timestamp != null) {\n                    w.uint32(80);\n                    w.sint64(obj.timestamp);\n                }\n                if (obj.meta != null) {\n                    w.uint32(90);\n                    w.bytes(obj.meta);\n                }\n                if (obj.rateLimitProof != null) {\n                    w.uint32(170);\n                    RateLimitProof.codec().encode(obj.rateLimitProof, w);\n                }\n                if (obj.ephemeral != null) {\n                    w.uint32(248);\n                    w.bool(obj.ephemeral);\n                }\n                if (opts.lengthDelimited !== false) {\n                    w.ldelim();\n                }\n            }, (reader, length)=>{\n                const obj = {\n                    payload: new Uint8Array(0),\n                    contentTopic: \"\"\n                };\n                const end = length == null ? reader.len : reader.pos + length;\n                while(reader.pos < end){\n                    const tag = reader.uint32();\n                    switch(tag >>> 3){\n                        case 1:\n                            obj.payload = reader.bytes();\n                            break;\n                        case 2:\n                            obj.contentTopic = reader.string();\n                            break;\n                        case 3:\n                            obj.version = reader.uint32();\n                            break;\n                        case 10:\n                            obj.timestamp = reader.sint64();\n                            break;\n                        case 11:\n                            obj.meta = reader.bytes();\n                            break;\n                        case 21:\n                            obj.rateLimitProof = RateLimitProof.codec().decode(reader, reader.uint32());\n                            break;\n                        case 31:\n                            obj.ephemeral = reader.bool();\n                            break;\n                        default:\n                            reader.skipType(tag & 7);\n                            break;\n                    }\n                }\n                return obj;\n            });\n        }\n        return _codec;\n    };\n    WakuMessage.encode = (obj)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.encodeMessage)(obj, WakuMessage.codec());\n    };\n    WakuMessage.decode = (buf)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.decodeMessage)(buf, WakuMessage.codec());\n    };\n})(WakuMessage || (WakuMessage = {})); //# sourceMappingURL=message.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/proto/dist/lib/message.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/proto/dist/lib/metadata.js":
/*!*******************************************************!*\
  !*** ./node_modules/@waku/proto/dist/lib/metadata.js ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   WakuMetadataRequest: () => (/* binding */ WakuMetadataRequest),\n/* harmony export */   WakuMetadataResponse: () => (/* binding */ WakuMetadataResponse)\n/* harmony export */ });\n/* harmony import */ var protons_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! protons-runtime */ \"(ssr)/./node_modules/protons-runtime/dist/src/index.js\");\n/* eslint-disable import/export */ /* eslint-disable complexity */ /* eslint-disable @typescript-eslint/no-namespace */ /* eslint-disable @typescript-eslint/no-unnecessary-boolean-literal-compare */ /* eslint-disable @typescript-eslint/no-empty-interface */ \nvar WakuMetadataRequest;\n(function(WakuMetadataRequest) {\n    let _codec;\n    WakuMetadataRequest.codec = ()=>{\n        if (_codec == null) {\n            _codec = (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.message)((obj, w, opts = {})=>{\n                if (opts.lengthDelimited !== false) {\n                    w.fork();\n                }\n                if (obj.clusterId != null) {\n                    w.uint32(8);\n                    w.uint32(obj.clusterId);\n                }\n                if (obj.shards != null) {\n                    for (const value of obj.shards){\n                        w.uint32(16);\n                        w.uint32(value);\n                    }\n                }\n                if (opts.lengthDelimited !== false) {\n                    w.ldelim();\n                }\n            }, (reader, length)=>{\n                const obj = {\n                    shards: []\n                };\n                const end = length == null ? reader.len : reader.pos + length;\n                while(reader.pos < end){\n                    const tag = reader.uint32();\n                    switch(tag >>> 3){\n                        case 1:\n                            obj.clusterId = reader.uint32();\n                            break;\n                        case 2:\n                            obj.shards.push(reader.uint32());\n                            break;\n                        default:\n                            reader.skipType(tag & 7);\n                            break;\n                    }\n                }\n                return obj;\n            });\n        }\n        return _codec;\n    };\n    WakuMetadataRequest.encode = (obj)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.encodeMessage)(obj, WakuMetadataRequest.codec());\n    };\n    WakuMetadataRequest.decode = (buf)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.decodeMessage)(buf, WakuMetadataRequest.codec());\n    };\n})(WakuMetadataRequest || (WakuMetadataRequest = {}));\nvar WakuMetadataResponse;\n(function(WakuMetadataResponse) {\n    let _codec;\n    WakuMetadataResponse.codec = ()=>{\n        if (_codec == null) {\n            _codec = (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.message)((obj, w, opts = {})=>{\n                if (opts.lengthDelimited !== false) {\n                    w.fork();\n                }\n                if (obj.clusterId != null) {\n                    w.uint32(8);\n                    w.uint32(obj.clusterId);\n                }\n                if (obj.shards != null) {\n                    for (const value of obj.shards){\n                        w.uint32(16);\n                        w.uint32(value);\n                    }\n                }\n                if (opts.lengthDelimited !== false) {\n                    w.ldelim();\n                }\n            }, (reader, length)=>{\n                const obj = {\n                    shards: []\n                };\n                const end = length == null ? reader.len : reader.pos + length;\n                while(reader.pos < end){\n                    const tag = reader.uint32();\n                    switch(tag >>> 3){\n                        case 1:\n                            obj.clusterId = reader.uint32();\n                            break;\n                        case 2:\n                            obj.shards.push(reader.uint32());\n                            break;\n                        default:\n                            reader.skipType(tag & 7);\n                            break;\n                    }\n                }\n                return obj;\n            });\n        }\n        return _codec;\n    };\n    WakuMetadataResponse.encode = (obj)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.encodeMessage)(obj, WakuMetadataResponse.codec());\n    };\n    WakuMetadataResponse.decode = (buf)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.decodeMessage)(buf, WakuMetadataResponse.codec());\n    };\n})(WakuMetadataResponse || (WakuMetadataResponse = {})); //# sourceMappingURL=metadata.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/proto/dist/lib/metadata.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/proto/dist/lib/peer_exchange.js":
/*!************************************************************!*\
  !*** ./node_modules/@waku/proto/dist/lib/peer_exchange.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PeerExchangeQuery: () => (/* binding */ PeerExchangeQuery),\n/* harmony export */   PeerExchangeRPC: () => (/* binding */ PeerExchangeRPC),\n/* harmony export */   PeerExchangeResponse: () => (/* binding */ PeerExchangeResponse),\n/* harmony export */   PeerInfo: () => (/* binding */ PeerInfo)\n/* harmony export */ });\n/* harmony import */ var protons_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! protons-runtime */ \"(ssr)/./node_modules/protons-runtime/dist/src/index.js\");\n/* eslint-disable import/export */ /* eslint-disable complexity */ /* eslint-disable @typescript-eslint/no-namespace */ /* eslint-disable @typescript-eslint/no-unnecessary-boolean-literal-compare */ /* eslint-disable @typescript-eslint/no-empty-interface */ \nvar PeerInfo;\n(function(PeerInfo) {\n    let _codec;\n    PeerInfo.codec = ()=>{\n        if (_codec == null) {\n            _codec = (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.message)((obj, w, opts = {})=>{\n                if (opts.lengthDelimited !== false) {\n                    w.fork();\n                }\n                if (obj.enr != null) {\n                    w.uint32(10);\n                    w.bytes(obj.enr);\n                }\n                if (opts.lengthDelimited !== false) {\n                    w.ldelim();\n                }\n            }, (reader, length)=>{\n                const obj = {};\n                const end = length == null ? reader.len : reader.pos + length;\n                while(reader.pos < end){\n                    const tag = reader.uint32();\n                    switch(tag >>> 3){\n                        case 1:\n                            obj.enr = reader.bytes();\n                            break;\n                        default:\n                            reader.skipType(tag & 7);\n                            break;\n                    }\n                }\n                return obj;\n            });\n        }\n        return _codec;\n    };\n    PeerInfo.encode = (obj)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.encodeMessage)(obj, PeerInfo.codec());\n    };\n    PeerInfo.decode = (buf)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.decodeMessage)(buf, PeerInfo.codec());\n    };\n})(PeerInfo || (PeerInfo = {}));\nvar PeerExchangeQuery;\n(function(PeerExchangeQuery) {\n    let _codec;\n    PeerExchangeQuery.codec = ()=>{\n        if (_codec == null) {\n            _codec = (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.message)((obj, w, opts = {})=>{\n                if (opts.lengthDelimited !== false) {\n                    w.fork();\n                }\n                if (obj.numPeers != null) {\n                    w.uint32(8);\n                    w.uint64(obj.numPeers);\n                }\n                if (opts.lengthDelimited !== false) {\n                    w.ldelim();\n                }\n            }, (reader, length)=>{\n                const obj = {};\n                const end = length == null ? reader.len : reader.pos + length;\n                while(reader.pos < end){\n                    const tag = reader.uint32();\n                    switch(tag >>> 3){\n                        case 1:\n                            obj.numPeers = reader.uint64();\n                            break;\n                        default:\n                            reader.skipType(tag & 7);\n                            break;\n                    }\n                }\n                return obj;\n            });\n        }\n        return _codec;\n    };\n    PeerExchangeQuery.encode = (obj)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.encodeMessage)(obj, PeerExchangeQuery.codec());\n    };\n    PeerExchangeQuery.decode = (buf)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.decodeMessage)(buf, PeerExchangeQuery.codec());\n    };\n})(PeerExchangeQuery || (PeerExchangeQuery = {}));\nvar PeerExchangeResponse;\n(function(PeerExchangeResponse) {\n    let _codec;\n    PeerExchangeResponse.codec = ()=>{\n        if (_codec == null) {\n            _codec = (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.message)((obj, w, opts = {})=>{\n                if (opts.lengthDelimited !== false) {\n                    w.fork();\n                }\n                if (obj.peerInfos != null) {\n                    for (const value of obj.peerInfos){\n                        w.uint32(10);\n                        PeerInfo.codec().encode(value, w);\n                    }\n                }\n                if (opts.lengthDelimited !== false) {\n                    w.ldelim();\n                }\n            }, (reader, length)=>{\n                const obj = {\n                    peerInfos: []\n                };\n                const end = length == null ? reader.len : reader.pos + length;\n                while(reader.pos < end){\n                    const tag = reader.uint32();\n                    switch(tag >>> 3){\n                        case 1:\n                            obj.peerInfos.push(PeerInfo.codec().decode(reader, reader.uint32()));\n                            break;\n                        default:\n                            reader.skipType(tag & 7);\n                            break;\n                    }\n                }\n                return obj;\n            });\n        }\n        return _codec;\n    };\n    PeerExchangeResponse.encode = (obj)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.encodeMessage)(obj, PeerExchangeResponse.codec());\n    };\n    PeerExchangeResponse.decode = (buf)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.decodeMessage)(buf, PeerExchangeResponse.codec());\n    };\n})(PeerExchangeResponse || (PeerExchangeResponse = {}));\nvar PeerExchangeRPC;\n(function(PeerExchangeRPC) {\n    let _codec;\n    PeerExchangeRPC.codec = ()=>{\n        if (_codec == null) {\n            _codec = (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.message)((obj, w, opts = {})=>{\n                if (opts.lengthDelimited !== false) {\n                    w.fork();\n                }\n                if (obj.query != null) {\n                    w.uint32(10);\n                    PeerExchangeQuery.codec().encode(obj.query, w);\n                }\n                if (obj.response != null) {\n                    w.uint32(18);\n                    PeerExchangeResponse.codec().encode(obj.response, w);\n                }\n                if (opts.lengthDelimited !== false) {\n                    w.ldelim();\n                }\n            }, (reader, length)=>{\n                const obj = {};\n                const end = length == null ? reader.len : reader.pos + length;\n                while(reader.pos < end){\n                    const tag = reader.uint32();\n                    switch(tag >>> 3){\n                        case 1:\n                            obj.query = PeerExchangeQuery.codec().decode(reader, reader.uint32());\n                            break;\n                        case 2:\n                            obj.response = PeerExchangeResponse.codec().decode(reader, reader.uint32());\n                            break;\n                        default:\n                            reader.skipType(tag & 7);\n                            break;\n                    }\n                }\n                return obj;\n            });\n        }\n        return _codec;\n    };\n    PeerExchangeRPC.encode = (obj)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.encodeMessage)(obj, PeerExchangeRPC.codec());\n    };\n    PeerExchangeRPC.decode = (buf)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.decodeMessage)(buf, PeerExchangeRPC.codec());\n    };\n})(PeerExchangeRPC || (PeerExchangeRPC = {})); //# sourceMappingURL=peer_exchange.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/proto/dist/lib/peer_exchange.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/proto/dist/lib/store.js":
/*!****************************************************!*\
  !*** ./node_modules/@waku/proto/dist/lib/store.js ***!
  \****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ContentFilter: () => (/* binding */ ContentFilter),\n/* harmony export */   HistoryQuery: () => (/* binding */ HistoryQuery),\n/* harmony export */   HistoryResponse: () => (/* binding */ HistoryResponse),\n/* harmony export */   HistoryRpc: () => (/* binding */ HistoryRpc),\n/* harmony export */   Index: () => (/* binding */ Index),\n/* harmony export */   PagingInfo: () => (/* binding */ PagingInfo),\n/* harmony export */   RateLimitProof: () => (/* binding */ RateLimitProof),\n/* harmony export */   WakuMessage: () => (/* binding */ WakuMessage)\n/* harmony export */ });\n/* harmony import */ var protons_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! protons-runtime */ \"(ssr)/./node_modules/protons-runtime/dist/src/index.js\");\n/* eslint-disable import/export */ /* eslint-disable complexity */ /* eslint-disable @typescript-eslint/no-namespace */ /* eslint-disable @typescript-eslint/no-unnecessary-boolean-literal-compare */ /* eslint-disable @typescript-eslint/no-empty-interface */ \nvar Index;\n(function(Index) {\n    let _codec;\n    Index.codec = ()=>{\n        if (_codec == null) {\n            _codec = (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.message)((obj, w, opts = {})=>{\n                if (opts.lengthDelimited !== false) {\n                    w.fork();\n                }\n                if (obj.digest != null && obj.digest.byteLength > 0) {\n                    w.uint32(10);\n                    w.bytes(obj.digest);\n                }\n                if (obj.receiverTime != null && obj.receiverTime !== 0n) {\n                    w.uint32(16);\n                    w.sint64(obj.receiverTime);\n                }\n                if (obj.senderTime != null && obj.senderTime !== 0n) {\n                    w.uint32(24);\n                    w.sint64(obj.senderTime);\n                }\n                if (obj.pubsubTopic != null && obj.pubsubTopic !== \"\") {\n                    w.uint32(34);\n                    w.string(obj.pubsubTopic);\n                }\n                if (opts.lengthDelimited !== false) {\n                    w.ldelim();\n                }\n            }, (reader, length)=>{\n                const obj = {\n                    digest: new Uint8Array(0),\n                    receiverTime: 0n,\n                    senderTime: 0n,\n                    pubsubTopic: \"\"\n                };\n                const end = length == null ? reader.len : reader.pos + length;\n                while(reader.pos < end){\n                    const tag = reader.uint32();\n                    switch(tag >>> 3){\n                        case 1:\n                            obj.digest = reader.bytes();\n                            break;\n                        case 2:\n                            obj.receiverTime = reader.sint64();\n                            break;\n                        case 3:\n                            obj.senderTime = reader.sint64();\n                            break;\n                        case 4:\n                            obj.pubsubTopic = reader.string();\n                            break;\n                        default:\n                            reader.skipType(tag & 7);\n                            break;\n                    }\n                }\n                return obj;\n            });\n        }\n        return _codec;\n    };\n    Index.encode = (obj)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.encodeMessage)(obj, Index.codec());\n    };\n    Index.decode = (buf)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.decodeMessage)(buf, Index.codec());\n    };\n})(Index || (Index = {}));\nvar PagingInfo;\n(function(PagingInfo) {\n    let Direction;\n    (function(Direction) {\n        Direction[\"BACKWARD\"] = \"BACKWARD\";\n        Direction[\"FORWARD\"] = \"FORWARD\";\n    })(Direction = PagingInfo.Direction || (PagingInfo.Direction = {}));\n    let __DirectionValues;\n    (function(__DirectionValues) {\n        __DirectionValues[__DirectionValues[\"BACKWARD\"] = 0] = \"BACKWARD\";\n        __DirectionValues[__DirectionValues[\"FORWARD\"] = 1] = \"FORWARD\";\n    })(__DirectionValues || (__DirectionValues = {}));\n    (function(Direction) {\n        Direction.codec = ()=>{\n            return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.enumeration)(__DirectionValues);\n        };\n    })(Direction = PagingInfo.Direction || (PagingInfo.Direction = {}));\n    let _codec;\n    PagingInfo.codec = ()=>{\n        if (_codec == null) {\n            _codec = (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.message)((obj, w, opts = {})=>{\n                if (opts.lengthDelimited !== false) {\n                    w.fork();\n                }\n                if (obj.pageSize != null) {\n                    w.uint32(8);\n                    w.uint64(obj.pageSize);\n                }\n                if (obj.cursor != null) {\n                    w.uint32(18);\n                    Index.codec().encode(obj.cursor, w);\n                }\n                if (obj.direction != null) {\n                    w.uint32(24);\n                    PagingInfo.Direction.codec().encode(obj.direction, w);\n                }\n                if (opts.lengthDelimited !== false) {\n                    w.ldelim();\n                }\n            }, (reader, length)=>{\n                const obj = {};\n                const end = length == null ? reader.len : reader.pos + length;\n                while(reader.pos < end){\n                    const tag = reader.uint32();\n                    switch(tag >>> 3){\n                        case 1:\n                            obj.pageSize = reader.uint64();\n                            break;\n                        case 2:\n                            obj.cursor = Index.codec().decode(reader, reader.uint32());\n                            break;\n                        case 3:\n                            obj.direction = PagingInfo.Direction.codec().decode(reader);\n                            break;\n                        default:\n                            reader.skipType(tag & 7);\n                            break;\n                    }\n                }\n                return obj;\n            });\n        }\n        return _codec;\n    };\n    PagingInfo.encode = (obj)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.encodeMessage)(obj, PagingInfo.codec());\n    };\n    PagingInfo.decode = (buf)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.decodeMessage)(buf, PagingInfo.codec());\n    };\n})(PagingInfo || (PagingInfo = {}));\nvar ContentFilter;\n(function(ContentFilter) {\n    let _codec;\n    ContentFilter.codec = ()=>{\n        if (_codec == null) {\n            _codec = (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.message)((obj, w, opts = {})=>{\n                if (opts.lengthDelimited !== false) {\n                    w.fork();\n                }\n                if (obj.contentTopic != null && obj.contentTopic !== \"\") {\n                    w.uint32(10);\n                    w.string(obj.contentTopic);\n                }\n                if (opts.lengthDelimited !== false) {\n                    w.ldelim();\n                }\n            }, (reader, length)=>{\n                const obj = {\n                    contentTopic: \"\"\n                };\n                const end = length == null ? reader.len : reader.pos + length;\n                while(reader.pos < end){\n                    const tag = reader.uint32();\n                    switch(tag >>> 3){\n                        case 1:\n                            obj.contentTopic = reader.string();\n                            break;\n                        default:\n                            reader.skipType(tag & 7);\n                            break;\n                    }\n                }\n                return obj;\n            });\n        }\n        return _codec;\n    };\n    ContentFilter.encode = (obj)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.encodeMessage)(obj, ContentFilter.codec());\n    };\n    ContentFilter.decode = (buf)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.decodeMessage)(buf, ContentFilter.codec());\n    };\n})(ContentFilter || (ContentFilter = {}));\nvar HistoryQuery;\n(function(HistoryQuery) {\n    let _codec;\n    HistoryQuery.codec = ()=>{\n        if (_codec == null) {\n            _codec = (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.message)((obj, w, opts = {})=>{\n                if (opts.lengthDelimited !== false) {\n                    w.fork();\n                }\n                if (obj.pubsubTopic != null) {\n                    w.uint32(18);\n                    w.string(obj.pubsubTopic);\n                }\n                if (obj.contentFilters != null) {\n                    for (const value of obj.contentFilters){\n                        w.uint32(26);\n                        ContentFilter.codec().encode(value, w);\n                    }\n                }\n                if (obj.pagingInfo != null) {\n                    w.uint32(34);\n                    PagingInfo.codec().encode(obj.pagingInfo, w);\n                }\n                if (obj.startTime != null) {\n                    w.uint32(40);\n                    w.sint64(obj.startTime);\n                }\n                if (obj.endTime != null) {\n                    w.uint32(48);\n                    w.sint64(obj.endTime);\n                }\n                if (opts.lengthDelimited !== false) {\n                    w.ldelim();\n                }\n            }, (reader, length)=>{\n                const obj = {\n                    contentFilters: []\n                };\n                const end = length == null ? reader.len : reader.pos + length;\n                while(reader.pos < end){\n                    const tag = reader.uint32();\n                    switch(tag >>> 3){\n                        case 2:\n                            obj.pubsubTopic = reader.string();\n                            break;\n                        case 3:\n                            obj.contentFilters.push(ContentFilter.codec().decode(reader, reader.uint32()));\n                            break;\n                        case 4:\n                            obj.pagingInfo = PagingInfo.codec().decode(reader, reader.uint32());\n                            break;\n                        case 5:\n                            obj.startTime = reader.sint64();\n                            break;\n                        case 6:\n                            obj.endTime = reader.sint64();\n                            break;\n                        default:\n                            reader.skipType(tag & 7);\n                            break;\n                    }\n                }\n                return obj;\n            });\n        }\n        return _codec;\n    };\n    HistoryQuery.encode = (obj)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.encodeMessage)(obj, HistoryQuery.codec());\n    };\n    HistoryQuery.decode = (buf)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.decodeMessage)(buf, HistoryQuery.codec());\n    };\n})(HistoryQuery || (HistoryQuery = {}));\nvar HistoryResponse;\n(function(HistoryResponse) {\n    let HistoryError;\n    (function(HistoryError) {\n        HistoryError[\"NONE\"] = \"NONE\";\n        HistoryError[\"INVALID_CURSOR\"] = \"INVALID_CURSOR\";\n    })(HistoryError = HistoryResponse.HistoryError || (HistoryResponse.HistoryError = {}));\n    let __HistoryErrorValues;\n    (function(__HistoryErrorValues) {\n        __HistoryErrorValues[__HistoryErrorValues[\"NONE\"] = 0] = \"NONE\";\n        __HistoryErrorValues[__HistoryErrorValues[\"INVALID_CURSOR\"] = 1] = \"INVALID_CURSOR\";\n    })(__HistoryErrorValues || (__HistoryErrorValues = {}));\n    (function(HistoryError) {\n        HistoryError.codec = ()=>{\n            return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.enumeration)(__HistoryErrorValues);\n        };\n    })(HistoryError = HistoryResponse.HistoryError || (HistoryResponse.HistoryError = {}));\n    let _codec;\n    HistoryResponse.codec = ()=>{\n        if (_codec == null) {\n            _codec = (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.message)((obj, w, opts = {})=>{\n                if (opts.lengthDelimited !== false) {\n                    w.fork();\n                }\n                if (obj.messages != null) {\n                    for (const value of obj.messages){\n                        w.uint32(18);\n                        WakuMessage.codec().encode(value, w);\n                    }\n                }\n                if (obj.pagingInfo != null) {\n                    w.uint32(26);\n                    PagingInfo.codec().encode(obj.pagingInfo, w);\n                }\n                if (obj.error != null && __HistoryErrorValues[obj.error] !== 0) {\n                    w.uint32(32);\n                    HistoryResponse.HistoryError.codec().encode(obj.error, w);\n                }\n                if (opts.lengthDelimited !== false) {\n                    w.ldelim();\n                }\n            }, (reader, length)=>{\n                const obj = {\n                    messages: [],\n                    error: HistoryError.NONE\n                };\n                const end = length == null ? reader.len : reader.pos + length;\n                while(reader.pos < end){\n                    const tag = reader.uint32();\n                    switch(tag >>> 3){\n                        case 2:\n                            obj.messages.push(WakuMessage.codec().decode(reader, reader.uint32()));\n                            break;\n                        case 3:\n                            obj.pagingInfo = PagingInfo.codec().decode(reader, reader.uint32());\n                            break;\n                        case 4:\n                            obj.error = HistoryResponse.HistoryError.codec().decode(reader);\n                            break;\n                        default:\n                            reader.skipType(tag & 7);\n                            break;\n                    }\n                }\n                return obj;\n            });\n        }\n        return _codec;\n    };\n    HistoryResponse.encode = (obj)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.encodeMessage)(obj, HistoryResponse.codec());\n    };\n    HistoryResponse.decode = (buf)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.decodeMessage)(buf, HistoryResponse.codec());\n    };\n})(HistoryResponse || (HistoryResponse = {}));\nvar HistoryRpc;\n(function(HistoryRpc) {\n    let _codec;\n    HistoryRpc.codec = ()=>{\n        if (_codec == null) {\n            _codec = (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.message)((obj, w, opts = {})=>{\n                if (opts.lengthDelimited !== false) {\n                    w.fork();\n                }\n                if (obj.requestId != null && obj.requestId !== \"\") {\n                    w.uint32(10);\n                    w.string(obj.requestId);\n                }\n                if (obj.query != null) {\n                    w.uint32(18);\n                    HistoryQuery.codec().encode(obj.query, w);\n                }\n                if (obj.response != null) {\n                    w.uint32(26);\n                    HistoryResponse.codec().encode(obj.response, w);\n                }\n                if (opts.lengthDelimited !== false) {\n                    w.ldelim();\n                }\n            }, (reader, length)=>{\n                const obj = {\n                    requestId: \"\"\n                };\n                const end = length == null ? reader.len : reader.pos + length;\n                while(reader.pos < end){\n                    const tag = reader.uint32();\n                    switch(tag >>> 3){\n                        case 1:\n                            obj.requestId = reader.string();\n                            break;\n                        case 2:\n                            obj.query = HistoryQuery.codec().decode(reader, reader.uint32());\n                            break;\n                        case 3:\n                            obj.response = HistoryResponse.codec().decode(reader, reader.uint32());\n                            break;\n                        default:\n                            reader.skipType(tag & 7);\n                            break;\n                    }\n                }\n                return obj;\n            });\n        }\n        return _codec;\n    };\n    HistoryRpc.encode = (obj)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.encodeMessage)(obj, HistoryRpc.codec());\n    };\n    HistoryRpc.decode = (buf)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.decodeMessage)(buf, HistoryRpc.codec());\n    };\n})(HistoryRpc || (HistoryRpc = {}));\nvar RateLimitProof;\n(function(RateLimitProof) {\n    let _codec;\n    RateLimitProof.codec = ()=>{\n        if (_codec == null) {\n            _codec = (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.message)((obj, w, opts = {})=>{\n                if (opts.lengthDelimited !== false) {\n                    w.fork();\n                }\n                if (obj.proof != null && obj.proof.byteLength > 0) {\n                    w.uint32(10);\n                    w.bytes(obj.proof);\n                }\n                if (obj.merkleRoot != null && obj.merkleRoot.byteLength > 0) {\n                    w.uint32(18);\n                    w.bytes(obj.merkleRoot);\n                }\n                if (obj.epoch != null && obj.epoch.byteLength > 0) {\n                    w.uint32(26);\n                    w.bytes(obj.epoch);\n                }\n                if (obj.shareX != null && obj.shareX.byteLength > 0) {\n                    w.uint32(34);\n                    w.bytes(obj.shareX);\n                }\n                if (obj.shareY != null && obj.shareY.byteLength > 0) {\n                    w.uint32(42);\n                    w.bytes(obj.shareY);\n                }\n                if (obj.nullifier != null && obj.nullifier.byteLength > 0) {\n                    w.uint32(50);\n                    w.bytes(obj.nullifier);\n                }\n                if (obj.rlnIdentifier != null && obj.rlnIdentifier.byteLength > 0) {\n                    w.uint32(58);\n                    w.bytes(obj.rlnIdentifier);\n                }\n                if (opts.lengthDelimited !== false) {\n                    w.ldelim();\n                }\n            }, (reader, length)=>{\n                const obj = {\n                    proof: new Uint8Array(0),\n                    merkleRoot: new Uint8Array(0),\n                    epoch: new Uint8Array(0),\n                    shareX: new Uint8Array(0),\n                    shareY: new Uint8Array(0),\n                    nullifier: new Uint8Array(0),\n                    rlnIdentifier: new Uint8Array(0)\n                };\n                const end = length == null ? reader.len : reader.pos + length;\n                while(reader.pos < end){\n                    const tag = reader.uint32();\n                    switch(tag >>> 3){\n                        case 1:\n                            obj.proof = reader.bytes();\n                            break;\n                        case 2:\n                            obj.merkleRoot = reader.bytes();\n                            break;\n                        case 3:\n                            obj.epoch = reader.bytes();\n                            break;\n                        case 4:\n                            obj.shareX = reader.bytes();\n                            break;\n                        case 5:\n                            obj.shareY = reader.bytes();\n                            break;\n                        case 6:\n                            obj.nullifier = reader.bytes();\n                            break;\n                        case 7:\n                            obj.rlnIdentifier = reader.bytes();\n                            break;\n                        default:\n                            reader.skipType(tag & 7);\n                            break;\n                    }\n                }\n                return obj;\n            });\n        }\n        return _codec;\n    };\n    RateLimitProof.encode = (obj)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.encodeMessage)(obj, RateLimitProof.codec());\n    };\n    RateLimitProof.decode = (buf)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.decodeMessage)(buf, RateLimitProof.codec());\n    };\n})(RateLimitProof || (RateLimitProof = {}));\nvar WakuMessage;\n(function(WakuMessage) {\n    let _codec;\n    WakuMessage.codec = ()=>{\n        if (_codec == null) {\n            _codec = (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.message)((obj, w, opts = {})=>{\n                if (opts.lengthDelimited !== false) {\n                    w.fork();\n                }\n                if (obj.payload != null && obj.payload.byteLength > 0) {\n                    w.uint32(10);\n                    w.bytes(obj.payload);\n                }\n                if (obj.contentTopic != null && obj.contentTopic !== \"\") {\n                    w.uint32(18);\n                    w.string(obj.contentTopic);\n                }\n                if (obj.version != null) {\n                    w.uint32(24);\n                    w.uint32(obj.version);\n                }\n                if (obj.timestamp != null) {\n                    w.uint32(80);\n                    w.sint64(obj.timestamp);\n                }\n                if (obj.meta != null) {\n                    w.uint32(90);\n                    w.bytes(obj.meta);\n                }\n                if (obj.rateLimitProof != null) {\n                    w.uint32(170);\n                    RateLimitProof.codec().encode(obj.rateLimitProof, w);\n                }\n                if (obj.ephemeral != null) {\n                    w.uint32(248);\n                    w.bool(obj.ephemeral);\n                }\n                if (opts.lengthDelimited !== false) {\n                    w.ldelim();\n                }\n            }, (reader, length)=>{\n                const obj = {\n                    payload: new Uint8Array(0),\n                    contentTopic: \"\"\n                };\n                const end = length == null ? reader.len : reader.pos + length;\n                while(reader.pos < end){\n                    const tag = reader.uint32();\n                    switch(tag >>> 3){\n                        case 1:\n                            obj.payload = reader.bytes();\n                            break;\n                        case 2:\n                            obj.contentTopic = reader.string();\n                            break;\n                        case 3:\n                            obj.version = reader.uint32();\n                            break;\n                        case 10:\n                            obj.timestamp = reader.sint64();\n                            break;\n                        case 11:\n                            obj.meta = reader.bytes();\n                            break;\n                        case 21:\n                            obj.rateLimitProof = RateLimitProof.codec().decode(reader, reader.uint32());\n                            break;\n                        case 31:\n                            obj.ephemeral = reader.bool();\n                            break;\n                        default:\n                            reader.skipType(tag & 7);\n                            break;\n                    }\n                }\n                return obj;\n            });\n        }\n        return _codec;\n    };\n    WakuMessage.encode = (obj)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.encodeMessage)(obj, WakuMessage.codec());\n    };\n    WakuMessage.decode = (buf)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.decodeMessage)(buf, WakuMessage.codec());\n    };\n})(WakuMessage || (WakuMessage = {})); //# sourceMappingURL=store.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/proto/dist/lib/store.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/proto/dist/lib/topic_only_message.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@waku/proto/dist/lib/topic_only_message.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   TopicOnlyMessage: () => (/* binding */ TopicOnlyMessage)\n/* harmony export */ });\n/* harmony import */ var protons_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! protons-runtime */ \"(ssr)/./node_modules/protons-runtime/dist/src/index.js\");\n/* eslint-disable import/export */ /* eslint-disable complexity */ /* eslint-disable @typescript-eslint/no-namespace */ /* eslint-disable @typescript-eslint/no-unnecessary-boolean-literal-compare */ /* eslint-disable @typescript-eslint/no-empty-interface */ \nvar TopicOnlyMessage;\n(function(TopicOnlyMessage) {\n    let _codec;\n    TopicOnlyMessage.codec = ()=>{\n        if (_codec == null) {\n            _codec = (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.message)((obj, w, opts = {})=>{\n                if (opts.lengthDelimited !== false) {\n                    w.fork();\n                }\n                if (obj.contentTopic != null && obj.contentTopic !== \"\") {\n                    w.uint32(18);\n                    w.string(obj.contentTopic);\n                }\n                if (opts.lengthDelimited !== false) {\n                    w.ldelim();\n                }\n            }, (reader, length)=>{\n                const obj = {\n                    contentTopic: \"\"\n                };\n                const end = length == null ? reader.len : reader.pos + length;\n                while(reader.pos < end){\n                    const tag = reader.uint32();\n                    switch(tag >>> 3){\n                        case 2:\n                            obj.contentTopic = reader.string();\n                            break;\n                        default:\n                            reader.skipType(tag & 7);\n                            break;\n                    }\n                }\n                return obj;\n            });\n        }\n        return _codec;\n    };\n    TopicOnlyMessage.encode = (obj)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.encodeMessage)(obj, TopicOnlyMessage.codec());\n    };\n    TopicOnlyMessage.decode = (buf)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.decodeMessage)(buf, TopicOnlyMessage.codec());\n    };\n})(TopicOnlyMessage || (TopicOnlyMessage = {})); //# sourceMappingURL=topic_only_message.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdha3UvcHJvdG8vZGlzdC9saWIvdG9waWNfb25seV9tZXNzYWdlLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsZ0NBQWdDLEdBQ2hDLDZCQUE2QixHQUM3QixrREFBa0QsR0FDbEQsNEVBQTRFLEdBQzVFLHdEQUF3RCxHQUNnQjtBQUNqRSxJQUFJRyxpQkFBaUI7QUFDM0IsVUFBVUEsZ0JBQWdCO0lBQ3ZCLElBQUlDO0lBQ0pELGlCQUFpQkUsS0FBSyxHQUFHO1FBQ3JCLElBQUlELFVBQVUsTUFBTTtZQUNoQkEsU0FBU0Ysd0RBQU9BLENBQUMsQ0FBQ0ksS0FBS0MsR0FBR0MsT0FBTyxDQUFDLENBQUM7Z0JBQy9CLElBQUlBLEtBQUtDLGVBQWUsS0FBSyxPQUFPO29CQUNoQ0YsRUFBRUcsSUFBSTtnQkFDVjtnQkFDQSxJQUFLSixJQUFJSyxZQUFZLElBQUksUUFBUUwsSUFBSUssWUFBWSxLQUFLLElBQUs7b0JBQ3ZESixFQUFFSyxNQUFNLENBQUM7b0JBQ1RMLEVBQUVNLE1BQU0sQ0FBQ1AsSUFBSUssWUFBWTtnQkFDN0I7Z0JBQ0EsSUFBSUgsS0FBS0MsZUFBZSxLQUFLLE9BQU87b0JBQ2hDRixFQUFFTyxNQUFNO2dCQUNaO1lBQ0osR0FBRyxDQUFDQyxRQUFRQztnQkFDUixNQUFNVixNQUFNO29CQUNSSyxjQUFjO2dCQUNsQjtnQkFDQSxNQUFNTSxNQUFNRCxVQUFVLE9BQU9ELE9BQU9HLEdBQUcsR0FBR0gsT0FBT0ksR0FBRyxHQUFHSDtnQkFDdkQsTUFBT0QsT0FBT0ksR0FBRyxHQUFHRixJQUFLO29CQUNyQixNQUFNRyxNQUFNTCxPQUFPSCxNQUFNO29CQUN6QixPQUFRUSxRQUFRO3dCQUNaLEtBQUs7NEJBQ0RkLElBQUlLLFlBQVksR0FBR0ksT0FBT0YsTUFBTTs0QkFDaEM7d0JBQ0o7NEJBQ0lFLE9BQU9NLFFBQVEsQ0FBQ0QsTUFBTTs0QkFDdEI7b0JBQ1I7Z0JBQ0o7Z0JBQ0EsT0FBT2Q7WUFDWDtRQUNKO1FBQ0EsT0FBT0Y7SUFDWDtJQUNBRCxpQkFBaUJtQixNQUFNLEdBQUcsQ0FBQ2hCO1FBQ3ZCLE9BQU9OLDhEQUFhQSxDQUFDTSxLQUFLSCxpQkFBaUJFLEtBQUs7SUFDcEQ7SUFDQUYsaUJBQWlCb0IsTUFBTSxHQUFHLENBQUNDO1FBQ3ZCLE9BQU92Qiw4REFBYUEsQ0FBQ3VCLEtBQUtyQixpQkFBaUJFLEtBQUs7SUFDcEQ7QUFDSixHQUFHRixvQkFBcUJBLENBQUFBLG1CQUFtQixDQUFDLEtBQzVDLDhDQUE4QyIsInNvdXJjZXMiOlsid2VicGFjazovL2ZsdXNoLW5vdGVzLy4vbm9kZV9tb2R1bGVzL0B3YWt1L3Byb3RvL2Rpc3QvbGliL3RvcGljX29ubHlfbWVzc2FnZS5qcz9jM2JhIl0sInNvdXJjZXNDb250ZW50IjpbIi8qIGVzbGludC1kaXNhYmxlIGltcG9ydC9leHBvcnQgKi9cbi8qIGVzbGludC1kaXNhYmxlIGNvbXBsZXhpdHkgKi9cbi8qIGVzbGludC1kaXNhYmxlIEB0eXBlc2NyaXB0LWVzbGludC9uby1uYW1lc3BhY2UgKi9cbi8qIGVzbGludC1kaXNhYmxlIEB0eXBlc2NyaXB0LWVzbGludC9uby11bm5lY2Vzc2FyeS1ib29sZWFuLWxpdGVyYWwtY29tcGFyZSAqL1xuLyogZXNsaW50LWRpc2FibGUgQHR5cGVzY3JpcHQtZXNsaW50L25vLWVtcHR5LWludGVyZmFjZSAqL1xuaW1wb3J0IHsgZW5jb2RlTWVzc2FnZSwgZGVjb2RlTWVzc2FnZSwgbWVzc2FnZSB9IGZyb20gJ3Byb3RvbnMtcnVudGltZSc7XG5leHBvcnQgdmFyIFRvcGljT25seU1lc3NhZ2U7XG4oZnVuY3Rpb24gKFRvcGljT25seU1lc3NhZ2UpIHtcbiAgICBsZXQgX2NvZGVjO1xuICAgIFRvcGljT25seU1lc3NhZ2UuY29kZWMgPSAoKSA9PiB7XG4gICAgICAgIGlmIChfY29kZWMgPT0gbnVsbCkge1xuICAgICAgICAgICAgX2NvZGVjID0gbWVzc2FnZSgob2JqLCB3LCBvcHRzID0ge30pID0+IHtcbiAgICAgICAgICAgICAgICBpZiAob3B0cy5sZW5ndGhEZWxpbWl0ZWQgIT09IGZhbHNlKSB7XG4gICAgICAgICAgICAgICAgICAgIHcuZm9yaygpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpZiAoKG9iai5jb250ZW50VG9waWMgIT0gbnVsbCAmJiBvYmouY29udGVudFRvcGljICE9PSAnJykpIHtcbiAgICAgICAgICAgICAgICAgICAgdy51aW50MzIoMTgpO1xuICAgICAgICAgICAgICAgICAgICB3LnN0cmluZyhvYmouY29udGVudFRvcGljKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWYgKG9wdHMubGVuZ3RoRGVsaW1pdGVkICE9PSBmYWxzZSkge1xuICAgICAgICAgICAgICAgICAgICB3LmxkZWxpbSgpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0sIChyZWFkZXIsIGxlbmd0aCkgPT4ge1xuICAgICAgICAgICAgICAgIGNvbnN0IG9iaiA9IHtcbiAgICAgICAgICAgICAgICAgICAgY29udGVudFRvcGljOiAnJ1xuICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICAgICAgY29uc3QgZW5kID0gbGVuZ3RoID09IG51bGwgPyByZWFkZXIubGVuIDogcmVhZGVyLnBvcyArIGxlbmd0aDtcbiAgICAgICAgICAgICAgICB3aGlsZSAocmVhZGVyLnBvcyA8IGVuZCkge1xuICAgICAgICAgICAgICAgICAgICBjb25zdCB0YWcgPSByZWFkZXIudWludDMyKCk7XG4gICAgICAgICAgICAgICAgICAgIHN3aXRjaCAodGFnID4+PiAzKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjYXNlIDI6XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgb2JqLmNvbnRlbnRUb3BpYyA9IHJlYWRlci5zdHJpbmcoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVhZGVyLnNraXBUeXBlKHRhZyAmIDcpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHJldHVybiBvYmo7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gX2NvZGVjO1xuICAgIH07XG4gICAgVG9waWNPbmx5TWVzc2FnZS5lbmNvZGUgPSAob2JqKSA9PiB7XG4gICAgICAgIHJldHVybiBlbmNvZGVNZXNzYWdlKG9iaiwgVG9waWNPbmx5TWVzc2FnZS5jb2RlYygpKTtcbiAgICB9O1xuICAgIFRvcGljT25seU1lc3NhZ2UuZGVjb2RlID0gKGJ1ZikgPT4ge1xuICAgICAgICByZXR1cm4gZGVjb2RlTWVzc2FnZShidWYsIFRvcGljT25seU1lc3NhZ2UuY29kZWMoKSk7XG4gICAgfTtcbn0pKFRvcGljT25seU1lc3NhZ2UgfHwgKFRvcGljT25seU1lc3NhZ2UgPSB7fSkpO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dG9waWNfb25seV9tZXNzYWdlLmpzLm1hcCJdLCJuYW1lcyI6WyJlbmNvZGVNZXNzYWdlIiwiZGVjb2RlTWVzc2FnZSIsIm1lc3NhZ2UiLCJUb3BpY09ubHlNZXNzYWdlIiwiX2NvZGVjIiwiY29kZWMiLCJvYmoiLCJ3Iiwib3B0cyIsImxlbmd0aERlbGltaXRlZCIsImZvcmsiLCJjb250ZW50VG9waWMiLCJ1aW50MzIiLCJzdHJpbmciLCJsZGVsaW0iLCJyZWFkZXIiLCJsZW5ndGgiLCJlbmQiLCJsZW4iLCJwb3MiLCJ0YWciLCJza2lwVHlwZSIsImVuY29kZSIsImRlY29kZSIsImJ1ZiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/proto/dist/lib/topic_only_message.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/relay/dist/constants.js":
/*!****************************************************!*\
  !*** ./node_modules/@waku/relay/dist/constants.js ***!
  \****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RelayCodecs: () => (/* binding */ RelayCodecs),\n/* harmony export */   RelayFanoutTTL: () => (/* binding */ RelayFanoutTTL),\n/* harmony export */   RelayGossipFactor: () => (/* binding */ RelayGossipFactor),\n/* harmony export */   RelayHeartbeatInitialDelay: () => (/* binding */ RelayHeartbeatInitialDelay),\n/* harmony export */   RelayHeartbeatInterval: () => (/* binding */ RelayHeartbeatInterval),\n/* harmony export */   RelayMaxIHaveLength: () => (/* binding */ RelayMaxIHaveLength),\n/* harmony export */   RelayOpportunisticGraftPeers: () => (/* binding */ RelayOpportunisticGraftPeers),\n/* harmony export */   RelayOpportunisticGraftTicks: () => (/* binding */ RelayOpportunisticGraftTicks),\n/* harmony export */   RelayPruneBackoff: () => (/* binding */ RelayPruneBackoff),\n/* harmony export */   RelayPrunePeers: () => (/* binding */ RelayPrunePeers),\n/* harmony export */   minute: () => (/* binding */ minute),\n/* harmony export */   second: () => (/* binding */ second)\n/* harmony export */ });\nconst second = 1000;\nconst minute = 60 * second;\n/**\n * RelayCodec is the libp2p identifier for the waku relay protocol\n */ const RelayCodecs = [\n    \"/vac/waku/relay/2.0.0\"\n];\n/**\n * RelayGossipFactor affects how many peers we will emit gossip to at each heartbeat.\n * We will send gossip to RelayGossipFactor * (total number of non-mesh peers), or\n * RelayDlazy, whichever is greater.\n */ const RelayGossipFactor = 0.25;\n/**\n * GossipsubHeartbeatInitialDelay is the short delay before the heartbeat timer begins\n * after the router is initialized.\n */ const RelayHeartbeatInitialDelay = 100;\n/**\n * RelayHeartbeatInterval controls the time between heartbeats.\n */ const RelayHeartbeatInterval = second;\n/**\n * RelayPrunePeers controls the number of peers to include in prune Peer eXchange.\n * When we prune a peer that's eligible for PX (has a good score, etc), we will try to\n * send them signed peer records for up to RelayPrunePeers other peers that we\n * know of.\n */ const RelayPrunePeers = 16;\n/**\n * RelayPruneBackoff controls the backoff time for pruned peers. This is how long\n * a peer must wait before attempting to graft into our mesh again after being pruned.\n * When pruning a peer, we send them our value of RelayPruneBackoff so they know\n * the minimum time to wait. Peers running older versions may not send a backoff time,\n * so if we receive a prune message without one, we will wait at least RelayPruneBackoff\n * before attempting to re-graft.\n */ const RelayPruneBackoff = minute;\n/**\n * RelayFanoutTTL controls how long we keep track of the fanout state. If it's been\n * RelayFanoutTTL since we've published to a topic that we're not subscribed to,\n * we'll delete the fanout map for that topic.\n */ const RelayFanoutTTL = minute;\n/**\n * RelayOpportunisticGraftTicks is the number of heartbeat ticks for attempting to improve the mesh\n * with opportunistic grafting. Every RelayOpportunisticGraftTicks we will attempt to select some\n * high-scoring mesh peers to replace lower-scoring ones, if the median score of our mesh peers falls\n * below a threshold\n */ const RelayOpportunisticGraftTicks = 60;\n/**\n * RelayOpportunisticGraftPeers is the number of peers to opportunistically graft.\n */ const RelayOpportunisticGraftPeers = 2;\n/**\n * RelayMaxIHaveLength is the maximum number of messages to include in an IHAVE message.\n * Also controls the maximum number of IHAVE ids we will accept and request with IWANT from a\n * peer within a heartbeat, to protect from IHAVE floods. You should adjust this value from the\n * default if your system is pushing more than 5000 messages in GossipsubHistoryGossip heartbeats;\n * with the defaults this is 1666 messages/s.\n */ const RelayMaxIHaveLength = 5000; //# sourceMappingURL=constants.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdha3UvcmVsYXkvZGlzdC9jb25zdGFudHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7O0FBQU8sTUFBTUEsU0FBUyxLQUFLO0FBQ3BCLE1BQU1DLFNBQVMsS0FBS0QsT0FBTztBQUNsQzs7Q0FFQyxHQUNNLE1BQU1FLGNBQWM7SUFBQztDQUF3QixDQUFDO0FBQ3JEOzs7O0NBSUMsR0FDTSxNQUFNQyxvQkFBb0IsS0FBSztBQUN0Qzs7O0NBR0MsR0FDTSxNQUFNQyw2QkFBNkIsSUFBSTtBQUM5Qzs7Q0FFQyxHQUNNLE1BQU1DLHlCQUF5QkwsT0FBTztBQUM3Qzs7Ozs7Q0FLQyxHQUNNLE1BQU1NLGtCQUFrQixHQUFHO0FBQ2xDOzs7Ozs7O0NBT0MsR0FDTSxNQUFNQyxvQkFBb0JOLE9BQU87QUFDeEM7Ozs7Q0FJQyxHQUNNLE1BQU1PLGlCQUFpQlAsT0FBTztBQUNyQzs7Ozs7Q0FLQyxHQUNNLE1BQU1RLCtCQUErQixHQUFHO0FBQy9DOztDQUVDLEdBQ00sTUFBTUMsK0JBQStCLEVBQUU7QUFDOUM7Ozs7OztDQU1DLEdBQ00sTUFBTUMsc0JBQXNCLEtBQUssQ0FDeEMscUNBQXFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZmx1c2gtbm90ZXMvLi9ub2RlX21vZHVsZXMvQHdha3UvcmVsYXkvZGlzdC9jb25zdGFudHMuanM/ZjJkNiJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3Qgc2Vjb25kID0gMTAwMDtcbmV4cG9ydCBjb25zdCBtaW51dGUgPSA2MCAqIHNlY29uZDtcbi8qKlxuICogUmVsYXlDb2RlYyBpcyB0aGUgbGlicDJwIGlkZW50aWZpZXIgZm9yIHRoZSB3YWt1IHJlbGF5IHByb3RvY29sXG4gKi9cbmV4cG9ydCBjb25zdCBSZWxheUNvZGVjcyA9IFtcIi92YWMvd2FrdS9yZWxheS8yLjAuMFwiXTtcbi8qKlxuICogUmVsYXlHb3NzaXBGYWN0b3IgYWZmZWN0cyBob3cgbWFueSBwZWVycyB3ZSB3aWxsIGVtaXQgZ29zc2lwIHRvIGF0IGVhY2ggaGVhcnRiZWF0LlxuICogV2Ugd2lsbCBzZW5kIGdvc3NpcCB0byBSZWxheUdvc3NpcEZhY3RvciAqICh0b3RhbCBudW1iZXIgb2Ygbm9uLW1lc2ggcGVlcnMpLCBvclxuICogUmVsYXlEbGF6eSwgd2hpY2hldmVyIGlzIGdyZWF0ZXIuXG4gKi9cbmV4cG9ydCBjb25zdCBSZWxheUdvc3NpcEZhY3RvciA9IDAuMjU7XG4vKipcbiAqIEdvc3NpcHN1YkhlYXJ0YmVhdEluaXRpYWxEZWxheSBpcyB0aGUgc2hvcnQgZGVsYXkgYmVmb3JlIHRoZSBoZWFydGJlYXQgdGltZXIgYmVnaW5zXG4gKiBhZnRlciB0aGUgcm91dGVyIGlzIGluaXRpYWxpemVkLlxuICovXG5leHBvcnQgY29uc3QgUmVsYXlIZWFydGJlYXRJbml0aWFsRGVsYXkgPSAxMDA7XG4vKipcbiAqIFJlbGF5SGVhcnRiZWF0SW50ZXJ2YWwgY29udHJvbHMgdGhlIHRpbWUgYmV0d2VlbiBoZWFydGJlYXRzLlxuICovXG5leHBvcnQgY29uc3QgUmVsYXlIZWFydGJlYXRJbnRlcnZhbCA9IHNlY29uZDtcbi8qKlxuICogUmVsYXlQcnVuZVBlZXJzIGNvbnRyb2xzIHRoZSBudW1iZXIgb2YgcGVlcnMgdG8gaW5jbHVkZSBpbiBwcnVuZSBQZWVyIGVYY2hhbmdlLlxuICogV2hlbiB3ZSBwcnVuZSBhIHBlZXIgdGhhdCdzIGVsaWdpYmxlIGZvciBQWCAoaGFzIGEgZ29vZCBzY29yZSwgZXRjKSwgd2Ugd2lsbCB0cnkgdG9cbiAqIHNlbmQgdGhlbSBzaWduZWQgcGVlciByZWNvcmRzIGZvciB1cCB0byBSZWxheVBydW5lUGVlcnMgb3RoZXIgcGVlcnMgdGhhdCB3ZVxuICoga25vdyBvZi5cbiAqL1xuZXhwb3J0IGNvbnN0IFJlbGF5UHJ1bmVQZWVycyA9IDE2O1xuLyoqXG4gKiBSZWxheVBydW5lQmFja29mZiBjb250cm9scyB0aGUgYmFja29mZiB0aW1lIGZvciBwcnVuZWQgcGVlcnMuIFRoaXMgaXMgaG93IGxvbmdcbiAqIGEgcGVlciBtdXN0IHdhaXQgYmVmb3JlIGF0dGVtcHRpbmcgdG8gZ3JhZnQgaW50byBvdXIgbWVzaCBhZ2FpbiBhZnRlciBiZWluZyBwcnVuZWQuXG4gKiBXaGVuIHBydW5pbmcgYSBwZWVyLCB3ZSBzZW5kIHRoZW0gb3VyIHZhbHVlIG9mIFJlbGF5UHJ1bmVCYWNrb2ZmIHNvIHRoZXkga25vd1xuICogdGhlIG1pbmltdW0gdGltZSB0byB3YWl0LiBQZWVycyBydW5uaW5nIG9sZGVyIHZlcnNpb25zIG1heSBub3Qgc2VuZCBhIGJhY2tvZmYgdGltZSxcbiAqIHNvIGlmIHdlIHJlY2VpdmUgYSBwcnVuZSBtZXNzYWdlIHdpdGhvdXQgb25lLCB3ZSB3aWxsIHdhaXQgYXQgbGVhc3QgUmVsYXlQcnVuZUJhY2tvZmZcbiAqIGJlZm9yZSBhdHRlbXB0aW5nIHRvIHJlLWdyYWZ0LlxuICovXG5leHBvcnQgY29uc3QgUmVsYXlQcnVuZUJhY2tvZmYgPSBtaW51dGU7XG4vKipcbiAqIFJlbGF5RmFub3V0VFRMIGNvbnRyb2xzIGhvdyBsb25nIHdlIGtlZXAgdHJhY2sgb2YgdGhlIGZhbm91dCBzdGF0ZS4gSWYgaXQncyBiZWVuXG4gKiBSZWxheUZhbm91dFRUTCBzaW5jZSB3ZSd2ZSBwdWJsaXNoZWQgdG8gYSB0b3BpYyB0aGF0IHdlJ3JlIG5vdCBzdWJzY3JpYmVkIHRvLFxuICogd2UnbGwgZGVsZXRlIHRoZSBmYW5vdXQgbWFwIGZvciB0aGF0IHRvcGljLlxuICovXG5leHBvcnQgY29uc3QgUmVsYXlGYW5vdXRUVEwgPSBtaW51dGU7XG4vKipcbiAqIFJlbGF5T3Bwb3J0dW5pc3RpY0dyYWZ0VGlja3MgaXMgdGhlIG51bWJlciBvZiBoZWFydGJlYXQgdGlja3MgZm9yIGF0dGVtcHRpbmcgdG8gaW1wcm92ZSB0aGUgbWVzaFxuICogd2l0aCBvcHBvcnR1bmlzdGljIGdyYWZ0aW5nLiBFdmVyeSBSZWxheU9wcG9ydHVuaXN0aWNHcmFmdFRpY2tzIHdlIHdpbGwgYXR0ZW1wdCB0byBzZWxlY3Qgc29tZVxuICogaGlnaC1zY29yaW5nIG1lc2ggcGVlcnMgdG8gcmVwbGFjZSBsb3dlci1zY29yaW5nIG9uZXMsIGlmIHRoZSBtZWRpYW4gc2NvcmUgb2Ygb3VyIG1lc2ggcGVlcnMgZmFsbHNcbiAqIGJlbG93IGEgdGhyZXNob2xkXG4gKi9cbmV4cG9ydCBjb25zdCBSZWxheU9wcG9ydHVuaXN0aWNHcmFmdFRpY2tzID0gNjA7XG4vKipcbiAqIFJlbGF5T3Bwb3J0dW5pc3RpY0dyYWZ0UGVlcnMgaXMgdGhlIG51bWJlciBvZiBwZWVycyB0byBvcHBvcnR1bmlzdGljYWxseSBncmFmdC5cbiAqL1xuZXhwb3J0IGNvbnN0IFJlbGF5T3Bwb3J0dW5pc3RpY0dyYWZ0UGVlcnMgPSAyO1xuLyoqXG4gKiBSZWxheU1heElIYXZlTGVuZ3RoIGlzIHRoZSBtYXhpbXVtIG51bWJlciBvZiBtZXNzYWdlcyB0byBpbmNsdWRlIGluIGFuIElIQVZFIG1lc3NhZ2UuXG4gKiBBbHNvIGNvbnRyb2xzIHRoZSBtYXhpbXVtIG51bWJlciBvZiBJSEFWRSBpZHMgd2Ugd2lsbCBhY2NlcHQgYW5kIHJlcXVlc3Qgd2l0aCBJV0FOVCBmcm9tIGFcbiAqIHBlZXIgd2l0aGluIGEgaGVhcnRiZWF0LCB0byBwcm90ZWN0IGZyb20gSUhBVkUgZmxvb2RzLiBZb3Ugc2hvdWxkIGFkanVzdCB0aGlzIHZhbHVlIGZyb20gdGhlXG4gKiBkZWZhdWx0IGlmIHlvdXIgc3lzdGVtIGlzIHB1c2hpbmcgbW9yZSB0aGFuIDUwMDAgbWVzc2FnZXMgaW4gR29zc2lwc3ViSGlzdG9yeUdvc3NpcCBoZWFydGJlYXRzO1xuICogd2l0aCB0aGUgZGVmYXVsdHMgdGhpcyBpcyAxNjY2IG1lc3NhZ2VzL3MuXG4gKi9cbmV4cG9ydCBjb25zdCBSZWxheU1heElIYXZlTGVuZ3RoID0gNTAwMDtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNvbnN0YW50cy5qcy5tYXAiXSwibmFtZXMiOlsic2Vjb25kIiwibWludXRlIiwiUmVsYXlDb2RlY3MiLCJSZWxheUdvc3NpcEZhY3RvciIsIlJlbGF5SGVhcnRiZWF0SW5pdGlhbERlbGF5IiwiUmVsYXlIZWFydGJlYXRJbnRlcnZhbCIsIlJlbGF5UHJ1bmVQZWVycyIsIlJlbGF5UHJ1bmVCYWNrb2ZmIiwiUmVsYXlGYW5vdXRUVEwiLCJSZWxheU9wcG9ydHVuaXN0aWNHcmFmdFRpY2tzIiwiUmVsYXlPcHBvcnR1bmlzdGljR3JhZnRQZWVycyIsIlJlbGF5TWF4SUhhdmVMZW5ndGgiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/relay/dist/constants.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/relay/dist/index.js":
/*!************************************************!*\
  !*** ./node_modules/@waku/relay/dist/index.js ***!
  \************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   wakuGossipSub: () => (/* binding */ wakuGossipSub),\n/* harmony export */   wakuRelay: () => (/* binding */ wakuRelay)\n/* harmony export */ });\n/* harmony import */ var _chainsafe_libp2p_gossipsub__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @chainsafe/libp2p-gossipsub */ \"(ssr)/./node_modules/@chainsafe/libp2p-gossipsub/dist/src/index.js\");\n/* harmony import */ var _chainsafe_libp2p_gossipsub_types__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @chainsafe/libp2p-gossipsub/types */ \"(ssr)/./node_modules/@chainsafe/libp2p-gossipsub/dist/src/types.js\");\n/* harmony import */ var _noble_hashes_sha256__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @noble/hashes/sha256 */ \"(ssr)/./node_modules/@noble/hashes/esm/sha256.js\");\n/* harmony import */ var _waku_interfaces__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @waku/interfaces */ \"(ssr)/./node_modules/@waku/relay/node_modules/@waku/interfaces/dist/index.js\");\n/* harmony import */ var _waku_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @waku/utils */ \"(ssr)/./node_modules/@waku/utils/dist/index.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./constants.js */ \"(ssr)/./node_modules/@waku/relay/dist/constants.js\");\n/* harmony import */ var _message_validator_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./message_validator.js */ \"(ssr)/./node_modules/@waku/relay/dist/message_validator.js\");\n/* harmony import */ var _topic_only_message_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./topic_only_message.js */ \"(ssr)/./node_modules/@waku/relay/dist/topic_only_message.js\");\n\n\n\n\n\n\n\n\n\n\nconst log = new _waku_utils__WEBPACK_IMPORTED_MODULE_1__.Logger(\"relay\");\n/**\n * Implements the [Waku v2 Relay protocol](https://rfc.vac.dev/spec/11/).\n * Throws if libp2p.pubsub does not support Waku Relay\n */ class Relay {\n    static{\n        this.multicodec = _constants_js__WEBPACK_IMPORTED_MODULE_2__.RelayCodecs[0];\n    }\n    constructor(libp2p, pubsubTopics){\n        if (!this.isRelayPubsub(libp2p.services.pubsub)) {\n            throw Error(`Failed to initialize Relay. libp2p.pubsub does not support ${Relay.multicodec}`);\n        }\n        this.gossipSub = libp2p.services.pubsub;\n        this.pubsubTopics = new Set(pubsubTopics);\n        if (this.gossipSub.isStarted()) {\n            this.subscribeToAllTopics();\n        }\n        this.observers = new Map();\n        // Default PubsubTopic decoder\n        // TODO: User might want to decide what decoder should be used (e.g. for RLN)\n        this.defaultDecoder = new _topic_only_message_js__WEBPACK_IMPORTED_MODULE_4__.TopicOnlyDecoder();\n    }\n    /**\n     * Mounts the gossipsub protocol onto the libp2p node\n     * and subscribes to all the topics.\n     *\n     * @override\n     * @returns {void}\n     */ async start() {\n        if (this.gossipSub.isStarted()) {\n            throw Error(\"GossipSub already started.\");\n        }\n        await this.gossipSub.start();\n        this.subscribeToAllTopics();\n    }\n    /**\n     * Send Waku message.\n     */ async send(encoder, message) {\n        const successes = [];\n        const { pubsubTopic } = encoder;\n        if (!this.pubsubTopics.has(pubsubTopic)) {\n            log.error(\"Failed to send waku relay: topic not configured\");\n            return {\n                successes,\n                failures: [\n                    {\n                        error: _waku_interfaces__WEBPACK_IMPORTED_MODULE_0__.ProtocolError.TOPIC_NOT_CONFIGURED\n                    }\n                ]\n            };\n        }\n        const msg = await encoder.toWire(message);\n        if (!msg) {\n            log.error(\"Failed to encode message, aborting publish\");\n            return {\n                successes,\n                failures: [\n                    {\n                        error: _waku_interfaces__WEBPACK_IMPORTED_MODULE_0__.ProtocolError.ENCODE_FAILED\n                    }\n                ]\n            };\n        }\n        if (!(0,_waku_utils__WEBPACK_IMPORTED_MODULE_1__.isWireSizeUnderCap)(msg)) {\n            log.error(\"Failed to send waku relay: message is bigger that 1MB\");\n            return {\n                successes,\n                failures: [\n                    {\n                        error: _waku_interfaces__WEBPACK_IMPORTED_MODULE_0__.ProtocolError.SIZE_TOO_BIG\n                    }\n                ]\n            };\n        }\n        const { recipients } = await this.gossipSub.publish(pubsubTopic, msg);\n        return {\n            successes: recipients\n        };\n    }\n    subscribe(decoders, callback) {\n        const observers = [];\n        for (const decoder of Array.isArray(decoders) ? decoders : [\n            decoders\n        ]){\n            const { pubsubTopic } = decoder;\n            const ctObs = this.observers.get(pubsubTopic) ?? new Map();\n            const observer = {\n                pubsubTopic,\n                decoder,\n                callback\n            };\n            (0,_waku_utils__WEBPACK_IMPORTED_MODULE_1__.pushOrInitMapSet)(ctObs, decoder.contentTopic, observer);\n            this.observers.set(pubsubTopic, ctObs);\n            observers.push([\n                pubsubTopic,\n                observer\n            ]);\n        }\n        return ()=>{\n            this.removeObservers(observers);\n        };\n    }\n    removeObservers(observers) {\n        for (const [pubsubTopic, observer] of observers){\n            const ctObs = this.observers.get(pubsubTopic);\n            if (!ctObs) continue;\n            const contentTopic = observer.decoder.contentTopic;\n            const _obs = ctObs.get(contentTopic);\n            if (!_obs) continue;\n            _obs.delete(observer);\n            ctObs.set(contentTopic, _obs);\n            this.observers.set(pubsubTopic, ctObs);\n        }\n    }\n    toSubscriptionIterator(decoders) {\n        return (0,_waku_utils__WEBPACK_IMPORTED_MODULE_1__.toAsyncIterator)(this, decoders);\n    }\n    getActiveSubscriptions() {\n        const map = new Map();\n        for (const pubsubTopic of this.pubsubTopics){\n            map.set(pubsubTopic, Array.from(this.observers.keys()));\n        }\n        return map;\n    }\n    getMeshPeers(topic = _waku_interfaces__WEBPACK_IMPORTED_MODULE_0__.DefaultPubsubTopic) {\n        return this.gossipSub.getMeshPeers(topic);\n    }\n    subscribeToAllTopics() {\n        for (const pubsubTopic of this.pubsubTopics){\n            this.gossipSubSubscribe(pubsubTopic);\n        }\n    }\n    async processIncomingMessage(pubsubTopic, bytes) {\n        const topicOnlyMsg = await this.defaultDecoder.fromWireToProtoObj(bytes);\n        if (!topicOnlyMsg || !topicOnlyMsg.contentTopic) {\n            log.warn(\"Message does not have a content topic, skipping\");\n            return;\n        }\n        // Retrieve the map of content topics for the given pubsubTopic\n        const contentTopicMap = this.observers.get(pubsubTopic);\n        if (!contentTopicMap) {\n            return;\n        }\n        // Retrieve the set of observers for the given contentTopic\n        const observers = contentTopicMap.get(topicOnlyMsg.contentTopic);\n        if (!observers) {\n            return;\n        }\n        await Promise.all(Array.from(observers).map(({ decoder, callback })=>{\n            return (async ()=>{\n                try {\n                    const protoMsg = await decoder.fromWireToProtoObj(bytes);\n                    if (!protoMsg) {\n                        log.error(\"Internal error: message previously decoded failed on 2nd pass.\");\n                        return;\n                    }\n                    const msg = await decoder.fromProtoObj(pubsubTopic, protoMsg);\n                    if (msg) {\n                        await callback(msg);\n                    } else {\n                        log.error(\"Failed to decode messages on\", topicOnlyMsg.contentTopic);\n                    }\n                } catch (error) {\n                    log.error(\"Error while decoding message:\", error);\n                }\n            })();\n        }));\n    }\n    /**\n     * Subscribe to a pubsub topic and start emitting Waku messages to observers.\n     *\n     * @override\n     */ gossipSubSubscribe(pubsubTopic) {\n        this.gossipSub.addEventListener(\"gossipsub:message\", (event)=>{\n            if (event.detail.msg.topic !== pubsubTopic) return;\n            this.processIncomingMessage(event.detail.msg.topic, event.detail.msg.data).catch((e)=>log.error(\"Failed to process incoming message\", e));\n        });\n        this.gossipSub.topicValidators.set(pubsubTopic, _message_validator_js__WEBPACK_IMPORTED_MODULE_3__.messageValidator);\n        this.gossipSub.subscribe(pubsubTopic);\n    }\n    isRelayPubsub(pubsub) {\n        return pubsub?.multicodecs?.includes(Relay.multicodec) ?? false;\n    }\n}\nfunction wakuRelay(pubsubTopics) {\n    return (libp2p)=>new Relay(libp2p, pubsubTopics);\n}\nfunction wakuGossipSub(init = {}) {\n    return (components)=>{\n        init = {\n            ...init,\n            msgIdFn: ({ data })=>(0,_noble_hashes_sha256__WEBPACK_IMPORTED_MODULE_5__.sha256)(data),\n            // Ensure that no signature is included nor expected in the messages.\n            globalSignaturePolicy: _chainsafe_libp2p_gossipsub_types__WEBPACK_IMPORTED_MODULE_6__.SignaturePolicy.StrictNoSign,\n            fallbackToFloodsub: false\n        };\n        const pubsub = new _chainsafe_libp2p_gossipsub__WEBPACK_IMPORTED_MODULE_7__.GossipSub(components, init);\n        pubsub.multicodecs = _constants_js__WEBPACK_IMPORTED_MODULE_2__.RelayCodecs;\n        return pubsub;\n    };\n} //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/relay/dist/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/relay/dist/message_validator.js":
/*!************************************************************!*\
  !*** ./node_modules/@waku/relay/dist/message_validator.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   messageValidator: () => (/* binding */ messageValidator)\n/* harmony export */ });\n/* harmony import */ var _libp2p_interface__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @libp2p/interface */ \"(ssr)/./node_modules/@libp2p/interface/dist/src/pubsub/index.js\");\n/* harmony import */ var _waku_proto__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @waku/proto */ \"(ssr)/./node_modules/@waku/relay/node_modules/@waku/proto/dist/index.js\");\n/* harmony import */ var _waku_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @waku/utils */ \"(ssr)/./node_modules/@waku/utils/dist/index.js\");\n\n\n\nconst log = new _waku_utils__WEBPACK_IMPORTED_MODULE_1__.Logger(\"relay\");\nfunction messageValidator(peer, message) {\n    const startTime = performance.now();\n    log.info(`validating message from ${peer} received on ${message.topic}`);\n    let result = _libp2p_interface__WEBPACK_IMPORTED_MODULE_2__.TopicValidatorResult.Accept;\n    try {\n        const protoMessage = _waku_proto__WEBPACK_IMPORTED_MODULE_0__.proto_message.WakuMessage.decode(message.data);\n        if (!protoMessage.contentTopic || !protoMessage.contentTopic.length || !protoMessage.payload || !protoMessage.payload.length) {\n            result = _libp2p_interface__WEBPACK_IMPORTED_MODULE_2__.TopicValidatorResult.Reject;\n        }\n    } catch (e) {\n        result = _libp2p_interface__WEBPACK_IMPORTED_MODULE_2__.TopicValidatorResult.Reject;\n    }\n    const endTime = performance.now();\n    const timeTakenMs = endTime - startTime;\n    if (timeTakenMs > 100) {\n        log.warn(`message validation took ${timeTakenMs}ms for peer ${peer} on topic ${message.topic}. This should be less than 100ms.`);\n    } else {\n        log.info(`message validation took ${timeTakenMs}ms for peer ${peer} on topic ${message.topic}`);\n    }\n    return result;\n} //# sourceMappingURL=message_validator.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdha3UvcmVsYXkvZGlzdC9tZXNzYWdlX3ZhbGlkYXRvci5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQXlEO0FBQ0o7QUFDaEI7QUFDckMsTUFBTUksTUFBTSxJQUFJRCwrQ0FBTUEsQ0FBQztBQUNoQixTQUFTRSxpQkFBaUJDLElBQUksRUFBRUMsT0FBTztJQUMxQyxNQUFNQyxZQUFZQyxZQUFZQyxHQUFHO0lBQ2pDTixJQUFJTyxJQUFJLENBQUMsQ0FBQyx3QkFBd0IsRUFBRUwsS0FBSyxhQUFhLEVBQUVDLFFBQVFLLEtBQUssQ0FBQyxDQUFDO0lBQ3ZFLElBQUlDLFNBQVNiLG1FQUFvQkEsQ0FBQ2MsTUFBTTtJQUN4QyxJQUFJO1FBQ0EsTUFBTUMsZUFBZWIsa0VBQWlCLENBQUNlLE1BQU0sQ0FBQ1YsUUFBUVcsSUFBSTtRQUMxRCxJQUFJLENBQUNILGFBQWFJLFlBQVksSUFDMUIsQ0FBQ0osYUFBYUksWUFBWSxDQUFDQyxNQUFNLElBQ2pDLENBQUNMLGFBQWFNLE9BQU8sSUFDckIsQ0FBQ04sYUFBYU0sT0FBTyxDQUFDRCxNQUFNLEVBQUU7WUFDOUJQLFNBQVNiLG1FQUFvQkEsQ0FBQ3NCLE1BQU07UUFDeEM7SUFDSixFQUNBLE9BQU9DLEdBQUc7UUFDTlYsU0FBU2IsbUVBQW9CQSxDQUFDc0IsTUFBTTtJQUN4QztJQUNBLE1BQU1FLFVBQVVmLFlBQVlDLEdBQUc7SUFDL0IsTUFBTWUsY0FBY0QsVUFBVWhCO0lBQzlCLElBQUlpQixjQUFjLEtBQUs7UUFDbkJyQixJQUFJc0IsSUFBSSxDQUFDLENBQUMsd0JBQXdCLEVBQUVELFlBQVksWUFBWSxFQUFFbkIsS0FBSyxVQUFVLEVBQUVDLFFBQVFLLEtBQUssQ0FBQyxpQ0FBaUMsQ0FBQztJQUNuSSxPQUNLO1FBQ0RSLElBQUlPLElBQUksQ0FBQyxDQUFDLHdCQUF3QixFQUFFYyxZQUFZLFlBQVksRUFBRW5CLEtBQUssVUFBVSxFQUFFQyxRQUFRSyxLQUFLLENBQUMsQ0FBQztJQUNsRztJQUNBLE9BQU9DO0FBQ1gsRUFDQSw2Q0FBNkMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mbHVzaC1ub3Rlcy8uL25vZGVfbW9kdWxlcy9Ad2FrdS9yZWxheS9kaXN0L21lc3NhZ2VfdmFsaWRhdG9yLmpzP2YyNDEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgVG9waWNWYWxpZGF0b3JSZXN1bHQgfSBmcm9tIFwiQGxpYnAycC9pbnRlcmZhY2VcIjtcbmltcG9ydCB7IHByb3RvX21lc3NhZ2UgYXMgcHJvdG8gfSBmcm9tIFwiQHdha3UvcHJvdG9cIjtcbmltcG9ydCB7IExvZ2dlciB9IGZyb20gXCJAd2FrdS91dGlsc1wiO1xuY29uc3QgbG9nID0gbmV3IExvZ2dlcihcInJlbGF5XCIpO1xuZXhwb3J0IGZ1bmN0aW9uIG1lc3NhZ2VWYWxpZGF0b3IocGVlciwgbWVzc2FnZSkge1xuICAgIGNvbnN0IHN0YXJ0VGltZSA9IHBlcmZvcm1hbmNlLm5vdygpO1xuICAgIGxvZy5pbmZvKGB2YWxpZGF0aW5nIG1lc3NhZ2UgZnJvbSAke3BlZXJ9IHJlY2VpdmVkIG9uICR7bWVzc2FnZS50b3BpY31gKTtcbiAgICBsZXQgcmVzdWx0ID0gVG9waWNWYWxpZGF0b3JSZXN1bHQuQWNjZXB0O1xuICAgIHRyeSB7XG4gICAgICAgIGNvbnN0IHByb3RvTWVzc2FnZSA9IHByb3RvLldha3VNZXNzYWdlLmRlY29kZShtZXNzYWdlLmRhdGEpO1xuICAgICAgICBpZiAoIXByb3RvTWVzc2FnZS5jb250ZW50VG9waWMgfHxcbiAgICAgICAgICAgICFwcm90b01lc3NhZ2UuY29udGVudFRvcGljLmxlbmd0aCB8fFxuICAgICAgICAgICAgIXByb3RvTWVzc2FnZS5wYXlsb2FkIHx8XG4gICAgICAgICAgICAhcHJvdG9NZXNzYWdlLnBheWxvYWQubGVuZ3RoKSB7XG4gICAgICAgICAgICByZXN1bHQgPSBUb3BpY1ZhbGlkYXRvclJlc3VsdC5SZWplY3Q7XG4gICAgICAgIH1cbiAgICB9XG4gICAgY2F0Y2ggKGUpIHtcbiAgICAgICAgcmVzdWx0ID0gVG9waWNWYWxpZGF0b3JSZXN1bHQuUmVqZWN0O1xuICAgIH1cbiAgICBjb25zdCBlbmRUaW1lID0gcGVyZm9ybWFuY2Uubm93KCk7XG4gICAgY29uc3QgdGltZVRha2VuTXMgPSBlbmRUaW1lIC0gc3RhcnRUaW1lO1xuICAgIGlmICh0aW1lVGFrZW5NcyA+IDEwMCkge1xuICAgICAgICBsb2cud2FybihgbWVzc2FnZSB2YWxpZGF0aW9uIHRvb2sgJHt0aW1lVGFrZW5Nc31tcyBmb3IgcGVlciAke3BlZXJ9IG9uIHRvcGljICR7bWVzc2FnZS50b3BpY30uIFRoaXMgc2hvdWxkIGJlIGxlc3MgdGhhbiAxMDBtcy5gKTtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIGxvZy5pbmZvKGBtZXNzYWdlIHZhbGlkYXRpb24gdG9vayAke3RpbWVUYWtlbk1zfW1zIGZvciBwZWVyICR7cGVlcn0gb24gdG9waWMgJHttZXNzYWdlLnRvcGljfWApO1xuICAgIH1cbiAgICByZXR1cm4gcmVzdWx0O1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bWVzc2FnZV92YWxpZGF0b3IuanMubWFwIl0sIm5hbWVzIjpbIlRvcGljVmFsaWRhdG9yUmVzdWx0IiwicHJvdG9fbWVzc2FnZSIsInByb3RvIiwiTG9nZ2VyIiwibG9nIiwibWVzc2FnZVZhbGlkYXRvciIsInBlZXIiLCJtZXNzYWdlIiwic3RhcnRUaW1lIiwicGVyZm9ybWFuY2UiLCJub3ciLCJpbmZvIiwidG9waWMiLCJyZXN1bHQiLCJBY2NlcHQiLCJwcm90b01lc3NhZ2UiLCJXYWt1TWVzc2FnZSIsImRlY29kZSIsImRhdGEiLCJjb250ZW50VG9waWMiLCJsZW5ndGgiLCJwYXlsb2FkIiwiUmVqZWN0IiwiZSIsImVuZFRpbWUiLCJ0aW1lVGFrZW5NcyIsIndhcm4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/relay/dist/message_validator.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/relay/dist/topic_only_message.js":
/*!*************************************************************!*\
  !*** ./node_modules/@waku/relay/dist/topic_only_message.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   TopicOnlyDecoder: () => (/* binding */ TopicOnlyDecoder),\n/* harmony export */   TopicOnlyMessage: () => (/* binding */ TopicOnlyMessage)\n/* harmony export */ });\n/* harmony import */ var _waku_interfaces__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @waku/interfaces */ \"(ssr)/./node_modules/@waku/relay/node_modules/@waku/interfaces/dist/index.js\");\n/* harmony import */ var _waku_proto__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @waku/proto */ \"(ssr)/./node_modules/@waku/relay/node_modules/@waku/proto/dist/index.js\");\n\n\nclass TopicOnlyMessage {\n    constructor(pubsubTopic, proto){\n        this.payload = new Uint8Array();\n        this.pubsubTopic = pubsubTopic;\n        this.proto = proto;\n    }\n    get contentTopic() {\n        return this.proto.contentTopic;\n    }\n}\nclass TopicOnlyDecoder {\n    fromWireToProtoObj(bytes) {\n        const protoMessage = _waku_proto__WEBPACK_IMPORTED_MODULE_1__.TopicOnlyMessage.decode(bytes);\n        return Promise.resolve({\n            contentTopic: protoMessage.contentTopic,\n            payload: new Uint8Array(),\n            rateLimitProof: undefined,\n            timestamp: undefined,\n            meta: undefined,\n            version: undefined,\n            ephemeral: undefined\n        });\n    }\n    async fromProtoObj(pubsubTopic, proto) {\n        return new TopicOnlyMessage(pubsubTopic, proto);\n    }\n    constructor(){\n        this.pubsubTopic = _waku_interfaces__WEBPACK_IMPORTED_MODULE_0__.DefaultPubsubTopic;\n        this.contentTopic = \"\";\n    }\n} //# sourceMappingURL=topic_only_message.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdha3UvcmVsYXkvZGlzdC90b3BpY19vbmx5X21lc3NhZ2UuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFzRDtBQUNrQjtBQUNqRSxNQUFNQztJQVFURSxZQUFZQyxXQUFXLEVBQUVDLEtBQUssQ0FBRTthQUxoQ0MsVUFBVSxJQUFJQztRQU1WLElBQUksQ0FBQ0gsV0FBVyxHQUFHQTtRQUNuQixJQUFJLENBQUNDLEtBQUssR0FBR0E7SUFDakI7SUFDQSxJQUFJRyxlQUFlO1FBQ2YsT0FBTyxJQUFJLENBQUNILEtBQUssQ0FBQ0csWUFBWTtJQUNsQztBQUNKO0FBQ08sTUFBTUM7SUFHVEMsbUJBQW1CQyxLQUFLLEVBQUU7UUFDdEIsTUFBTUMsZUFBZVYseURBQXFCQSxDQUFDVyxNQUFNLENBQUNGO1FBQ2xELE9BQU9HLFFBQVFDLE9BQU8sQ0FBQztZQUNuQlAsY0FBY0ksYUFBYUosWUFBWTtZQUN2Q0YsU0FBUyxJQUFJQztZQUNiUyxnQkFBZ0JDO1lBQ2hCQyxXQUFXRDtZQUNYRSxNQUFNRjtZQUNORyxTQUFTSDtZQUNUSSxXQUFXSjtRQUNmO0lBQ0o7SUFDQSxNQUFNSyxhQUFhbEIsV0FBVyxFQUFFQyxLQUFLLEVBQUU7UUFDbkMsT0FBTyxJQUFJSixpQkFBaUJHLGFBQWFDO0lBQzdDOzthQWhCQUQsY0FBY0osZ0VBQWtCQTthQUNoQ1EsZUFBZTs7QUFnQm5CLEVBQ0EsOENBQThDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZmx1c2gtbm90ZXMvLi9ub2RlX21vZHVsZXMvQHdha3UvcmVsYXkvZGlzdC90b3BpY19vbmx5X21lc3NhZ2UuanM/ZjExMyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBEZWZhdWx0UHVic3ViVG9waWMgfSBmcm9tIFwiQHdha3UvaW50ZXJmYWNlc1wiO1xuaW1wb3J0IHsgVG9waWNPbmx5TWVzc2FnZSBhcyBQcm90b1RvcGljT25seU1lc3NhZ2UgfSBmcm9tIFwiQHdha3UvcHJvdG9cIjtcbmV4cG9ydCBjbGFzcyBUb3BpY09ubHlNZXNzYWdlIHtcbiAgICBwdWJzdWJUb3BpYztcbiAgICBwcm90bztcbiAgICBwYXlsb2FkID0gbmV3IFVpbnQ4QXJyYXkoKTtcbiAgICByYXRlTGltaXRQcm9vZjtcbiAgICB0aW1lc3RhbXA7XG4gICAgbWV0YTtcbiAgICBlcGhlbWVyYWw7XG4gICAgY29uc3RydWN0b3IocHVic3ViVG9waWMsIHByb3RvKSB7XG4gICAgICAgIHRoaXMucHVic3ViVG9waWMgPSBwdWJzdWJUb3BpYztcbiAgICAgICAgdGhpcy5wcm90byA9IHByb3RvO1xuICAgIH1cbiAgICBnZXQgY29udGVudFRvcGljKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5wcm90by5jb250ZW50VG9waWM7XG4gICAgfVxufVxuZXhwb3J0IGNsYXNzIFRvcGljT25seURlY29kZXIge1xuICAgIHB1YnN1YlRvcGljID0gRGVmYXVsdFB1YnN1YlRvcGljO1xuICAgIGNvbnRlbnRUb3BpYyA9IFwiXCI7XG4gICAgZnJvbVdpcmVUb1Byb3RvT2JqKGJ5dGVzKSB7XG4gICAgICAgIGNvbnN0IHByb3RvTWVzc2FnZSA9IFByb3RvVG9waWNPbmx5TWVzc2FnZS5kZWNvZGUoYnl0ZXMpO1xuICAgICAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKHtcbiAgICAgICAgICAgIGNvbnRlbnRUb3BpYzogcHJvdG9NZXNzYWdlLmNvbnRlbnRUb3BpYyxcbiAgICAgICAgICAgIHBheWxvYWQ6IG5ldyBVaW50OEFycmF5KCksXG4gICAgICAgICAgICByYXRlTGltaXRQcm9vZjogdW5kZWZpbmVkLFxuICAgICAgICAgICAgdGltZXN0YW1wOiB1bmRlZmluZWQsXG4gICAgICAgICAgICBtZXRhOiB1bmRlZmluZWQsXG4gICAgICAgICAgICB2ZXJzaW9uOiB1bmRlZmluZWQsXG4gICAgICAgICAgICBlcGhlbWVyYWw6IHVuZGVmaW5lZFxuICAgICAgICB9KTtcbiAgICB9XG4gICAgYXN5bmMgZnJvbVByb3RvT2JqKHB1YnN1YlRvcGljLCBwcm90bykge1xuICAgICAgICByZXR1cm4gbmV3IFRvcGljT25seU1lc3NhZ2UocHVic3ViVG9waWMsIHByb3RvKTtcbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD10b3BpY19vbmx5X21lc3NhZ2UuanMubWFwIl0sIm5hbWVzIjpbIkRlZmF1bHRQdWJzdWJUb3BpYyIsIlRvcGljT25seU1lc3NhZ2UiLCJQcm90b1RvcGljT25seU1lc3NhZ2UiLCJjb25zdHJ1Y3RvciIsInB1YnN1YlRvcGljIiwicHJvdG8iLCJwYXlsb2FkIiwiVWludDhBcnJheSIsImNvbnRlbnRUb3BpYyIsIlRvcGljT25seURlY29kZXIiLCJmcm9tV2lyZVRvUHJvdG9PYmoiLCJieXRlcyIsInByb3RvTWVzc2FnZSIsImRlY29kZSIsIlByb21pc2UiLCJyZXNvbHZlIiwicmF0ZUxpbWl0UHJvb2YiLCJ1bmRlZmluZWQiLCJ0aW1lc3RhbXAiLCJtZXRhIiwidmVyc2lvbiIsImVwaGVtZXJhbCIsImZyb21Qcm90b09iaiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/relay/dist/topic_only_message.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/relay/node_modules/@waku/interfaces/dist/connection_manager.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@waku/relay/node_modules/@waku/interfaces/dist/connection_manager.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   EConnectionStateEvents: () => (/* binding */ EConnectionStateEvents),\n/* harmony export */   EPeersByDiscoveryEvents: () => (/* binding */ EPeersByDiscoveryEvents),\n/* harmony export */   Tags: () => (/* binding */ Tags)\n/* harmony export */ });\nvar Tags;\n(function(Tags) {\n    Tags[\"BOOTSTRAP\"] = \"bootstrap\";\n    Tags[\"PEER_EXCHANGE\"] = \"peer-exchange\";\n    Tags[\"LOCAL\"] = \"local-peer-cache\";\n})(Tags || (Tags = {}));\nvar EPeersByDiscoveryEvents;\n(function(EPeersByDiscoveryEvents) {\n    EPeersByDiscoveryEvents[\"PEER_DISCOVERY_BOOTSTRAP\"] = \"peer:discovery:bootstrap\";\n    EPeersByDiscoveryEvents[\"PEER_DISCOVERY_PEER_EXCHANGE\"] = \"peer:discovery:peer-exchange\";\n    EPeersByDiscoveryEvents[\"PEER_CONNECT_BOOTSTRAP\"] = \"peer:connected:bootstrap\";\n    EPeersByDiscoveryEvents[\"PEER_CONNECT_PEER_EXCHANGE\"] = \"peer:connected:peer-exchange\";\n})(EPeersByDiscoveryEvents || (EPeersByDiscoveryEvents = {}));\nvar EConnectionStateEvents;\n(function(EConnectionStateEvents) {\n    EConnectionStateEvents[\"CONNECTION_STATUS\"] = \"waku:connection\";\n})(EConnectionStateEvents || (EConnectionStateEvents = {})); //# sourceMappingURL=connection_manager.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdha3UvcmVsYXkvbm9kZV9tb2R1bGVzL0B3YWt1L2ludGVyZmFjZXMvZGlzdC9jb25uZWN0aW9uX21hbmFnZXIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQU8sSUFBSUEsS0FBSztBQUNmLFVBQVVBLElBQUk7SUFDWEEsSUFBSSxDQUFDLFlBQVksR0FBRztJQUNwQkEsSUFBSSxDQUFDLGdCQUFnQixHQUFHO0lBQ3hCQSxJQUFJLENBQUMsUUFBUSxHQUFHO0FBQ3BCLEdBQUdBLFFBQVNBLENBQUFBLE9BQU8sQ0FBQztBQUNiLElBQUlDLHdCQUF3QjtBQUNsQyxVQUFVQSx1QkFBdUI7SUFDOUJBLHVCQUF1QixDQUFDLDJCQUEyQixHQUFHO0lBQ3REQSx1QkFBdUIsQ0FBQywrQkFBK0IsR0FBRztJQUMxREEsdUJBQXVCLENBQUMseUJBQXlCLEdBQUc7SUFDcERBLHVCQUF1QixDQUFDLDZCQUE2QixHQUFHO0FBQzVELEdBQUdBLDJCQUE0QkEsQ0FBQUEsMEJBQTBCLENBQUM7QUFDbkQsSUFBSUMsdUJBQXVCO0FBQ2pDLFVBQVVBLHNCQUFzQjtJQUM3QkEsc0JBQXNCLENBQUMsb0JBQW9CLEdBQUc7QUFDbEQsR0FBR0EsMEJBQTJCQSxDQUFBQSx5QkFBeUIsQ0FBQyxLQUN4RCw4Q0FBOEMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mbHVzaC1ub3Rlcy8uL25vZGVfbW9kdWxlcy9Ad2FrdS9yZWxheS9ub2RlX21vZHVsZXMvQHdha3UvaW50ZXJmYWNlcy9kaXN0L2Nvbm5lY3Rpb25fbWFuYWdlci5qcz9hYjBkIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCB2YXIgVGFncztcbihmdW5jdGlvbiAoVGFncykge1xuICAgIFRhZ3NbXCJCT09UU1RSQVBcIl0gPSBcImJvb3RzdHJhcFwiO1xuICAgIFRhZ3NbXCJQRUVSX0VYQ0hBTkdFXCJdID0gXCJwZWVyLWV4Y2hhbmdlXCI7XG4gICAgVGFnc1tcIkxPQ0FMXCJdID0gXCJsb2NhbC1wZWVyLWNhY2hlXCI7XG59KShUYWdzIHx8IChUYWdzID0ge30pKTtcbmV4cG9ydCB2YXIgRVBlZXJzQnlEaXNjb3ZlcnlFdmVudHM7XG4oZnVuY3Rpb24gKEVQZWVyc0J5RGlzY292ZXJ5RXZlbnRzKSB7XG4gICAgRVBlZXJzQnlEaXNjb3ZlcnlFdmVudHNbXCJQRUVSX0RJU0NPVkVSWV9CT09UU1RSQVBcIl0gPSBcInBlZXI6ZGlzY292ZXJ5OmJvb3RzdHJhcFwiO1xuICAgIEVQZWVyc0J5RGlzY292ZXJ5RXZlbnRzW1wiUEVFUl9ESVNDT1ZFUllfUEVFUl9FWENIQU5HRVwiXSA9IFwicGVlcjpkaXNjb3Zlcnk6cGVlci1leGNoYW5nZVwiO1xuICAgIEVQZWVyc0J5RGlzY292ZXJ5RXZlbnRzW1wiUEVFUl9DT05ORUNUX0JPT1RTVFJBUFwiXSA9IFwicGVlcjpjb25uZWN0ZWQ6Ym9vdHN0cmFwXCI7XG4gICAgRVBlZXJzQnlEaXNjb3ZlcnlFdmVudHNbXCJQRUVSX0NPTk5FQ1RfUEVFUl9FWENIQU5HRVwiXSA9IFwicGVlcjpjb25uZWN0ZWQ6cGVlci1leGNoYW5nZVwiO1xufSkoRVBlZXJzQnlEaXNjb3ZlcnlFdmVudHMgfHwgKEVQZWVyc0J5RGlzY292ZXJ5RXZlbnRzID0ge30pKTtcbmV4cG9ydCB2YXIgRUNvbm5lY3Rpb25TdGF0ZUV2ZW50cztcbihmdW5jdGlvbiAoRUNvbm5lY3Rpb25TdGF0ZUV2ZW50cykge1xuICAgIEVDb25uZWN0aW9uU3RhdGVFdmVudHNbXCJDT05ORUNUSU9OX1NUQVRVU1wiXSA9IFwid2FrdTpjb25uZWN0aW9uXCI7XG59KShFQ29ubmVjdGlvblN0YXRlRXZlbnRzIHx8IChFQ29ubmVjdGlvblN0YXRlRXZlbnRzID0ge30pKTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNvbm5lY3Rpb25fbWFuYWdlci5qcy5tYXAiXSwibmFtZXMiOlsiVGFncyIsIkVQZWVyc0J5RGlzY292ZXJ5RXZlbnRzIiwiRUNvbm5lY3Rpb25TdGF0ZUV2ZW50cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/relay/node_modules/@waku/interfaces/dist/connection_manager.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/relay/node_modules/@waku/interfaces/dist/constants.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@waku/relay/node_modules/@waku/interfaces/dist/constants.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DEFAULT_CLUSTER_ID: () => (/* binding */ DEFAULT_CLUSTER_ID),\n/* harmony export */   DefaultPubsubTopic: () => (/* binding */ DefaultPubsubTopic)\n/* harmony export */ });\n/**\n * DefaultPubsubTopic is the default gossipsub topic to use for Waku.\n */ const DefaultPubsubTopic = \"/waku/2/default-waku/proto\";\n/**\n * The default cluster ID for The Waku Network\n */ const DEFAULT_CLUSTER_ID = 1; //# sourceMappingURL=constants.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdha3UvcmVsYXkvbm9kZV9tb2R1bGVzL0B3YWt1L2ludGVyZmFjZXMvZGlzdC9jb25zdGFudHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTs7Q0FFQyxHQUNNLE1BQU1BLHFCQUFxQiw2QkFBNkI7QUFDL0Q7O0NBRUMsR0FDTSxNQUFNQyxxQkFBcUIsRUFBRSxDQUNwQyxxQ0FBcUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mbHVzaC1ub3Rlcy8uL25vZGVfbW9kdWxlcy9Ad2FrdS9yZWxheS9ub2RlX21vZHVsZXMvQHdha3UvaW50ZXJmYWNlcy9kaXN0L2NvbnN0YW50cy5qcz9mZGZjIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogRGVmYXVsdFB1YnN1YlRvcGljIGlzIHRoZSBkZWZhdWx0IGdvc3NpcHN1YiB0b3BpYyB0byB1c2UgZm9yIFdha3UuXG4gKi9cbmV4cG9ydCBjb25zdCBEZWZhdWx0UHVic3ViVG9waWMgPSBcIi93YWt1LzIvZGVmYXVsdC13YWt1L3Byb3RvXCI7XG4vKipcbiAqIFRoZSBkZWZhdWx0IGNsdXN0ZXIgSUQgZm9yIFRoZSBXYWt1IE5ldHdvcmtcbiAqL1xuZXhwb3J0IGNvbnN0IERFRkFVTFRfQ0xVU1RFUl9JRCA9IDE7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jb25zdGFudHMuanMubWFwIl0sIm5hbWVzIjpbIkRlZmF1bHRQdWJzdWJUb3BpYyIsIkRFRkFVTFRfQ0xVU1RFUl9JRCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/relay/node_modules/@waku/interfaces/dist/constants.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/relay/node_modules/@waku/interfaces/dist/dns_discovery.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@waku/relay/node_modules/@waku/interfaces/dist/dns_discovery.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n //# sourceMappingURL=dns_discovery.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdha3UvcmVsYXkvbm9kZV9tb2R1bGVzL0B3YWt1L2ludGVyZmFjZXMvZGlzdC9kbnNfZGlzY292ZXJ5LmpzIiwibWFwcGluZ3MiOiI7QUFBVSxDQUNWLHlDQUF5QyIsInNvdXJjZXMiOlsid2VicGFjazovL2ZsdXNoLW5vdGVzLy4vbm9kZV9tb2R1bGVzL0B3YWt1L3JlbGF5L25vZGVfbW9kdWxlcy9Ad2FrdS9pbnRlcmZhY2VzL2Rpc3QvZG5zX2Rpc2NvdmVyeS5qcz9kMmM4Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCB7fTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRuc19kaXNjb3ZlcnkuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/relay/node_modules/@waku/interfaces/dist/dns_discovery.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/relay/node_modules/@waku/interfaces/dist/enr.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@waku/relay/node_modules/@waku/interfaces/dist/enr.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n //# sourceMappingURL=enr.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdha3UvcmVsYXkvbm9kZV9tb2R1bGVzL0B3YWt1L2ludGVyZmFjZXMvZGlzdC9lbnIuanMiLCJtYXBwaW5ncyI6IjtBQUFVLENBQ1YsK0JBQStCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZmx1c2gtbm90ZXMvLi9ub2RlX21vZHVsZXMvQHdha3UvcmVsYXkvbm9kZV9tb2R1bGVzL0B3YWt1L2ludGVyZmFjZXMvZGlzdC9lbnIuanM/ODNiZCJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQge307XG4vLyMgc291cmNlTWFwcGluZ1VSTD1lbnIuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/relay/node_modules/@waku/interfaces/dist/enr.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/relay/node_modules/@waku/interfaces/dist/filter.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@waku/relay/node_modules/@waku/interfaces/dist/filter.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n //# sourceMappingURL=filter.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdha3UvcmVsYXkvbm9kZV9tb2R1bGVzL0B3YWt1L2ludGVyZmFjZXMvZGlzdC9maWx0ZXIuanMiLCJtYXBwaW5ncyI6IjtBQUFVLENBQ1Ysa0NBQWtDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZmx1c2gtbm90ZXMvLi9ub2RlX21vZHVsZXMvQHdha3UvcmVsYXkvbm9kZV9tb2R1bGVzL0B3YWt1L2ludGVyZmFjZXMvZGlzdC9maWx0ZXIuanM/Mjc1NiJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQge307XG4vLyMgc291cmNlTWFwcGluZ1VSTD1maWx0ZXIuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/relay/node_modules/@waku/interfaces/dist/filter.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/relay/node_modules/@waku/interfaces/dist/index.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@waku/relay/node_modules/@waku/interfaces/dist/index.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DEFAULT_CLUSTER_ID: () => (/* reexport safe */ _constants_js__WEBPACK_IMPORTED_MODULE_17__.DEFAULT_CLUSTER_ID),\n/* harmony export */   DefaultPubsubTopic: () => (/* reexport safe */ _constants_js__WEBPACK_IMPORTED_MODULE_17__.DefaultPubsubTopic),\n/* harmony export */   EConnectionStateEvents: () => (/* reexport safe */ _connection_manager_js__WEBPACK_IMPORTED_MODULE_9__.EConnectionStateEvents),\n/* harmony export */   EPeersByDiscoveryEvents: () => (/* reexport safe */ _connection_manager_js__WEBPACK_IMPORTED_MODULE_9__.EPeersByDiscoveryEvents),\n/* harmony export */   PageDirection: () => (/* reexport safe */ _store_js__WEBPACK_IMPORTED_MODULE_7__.PageDirection),\n/* harmony export */   ProtocolError: () => (/* reexport safe */ _protocols_js__WEBPACK_IMPORTED_MODULE_5__.ProtocolError),\n/* harmony export */   Protocols: () => (/* reexport safe */ _protocols_js__WEBPACK_IMPORTED_MODULE_5__.Protocols),\n/* harmony export */   Tags: () => (/* reexport safe */ _connection_manager_js__WEBPACK_IMPORTED_MODULE_9__.Tags)\n/* harmony export */ });\n/* harmony import */ var _enr_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./enr.js */ \"(ssr)/./node_modules/@waku/relay/node_modules/@waku/interfaces/dist/enr.js\");\n/* harmony import */ var _filter_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./filter.js */ \"(ssr)/./node_modules/@waku/relay/node_modules/@waku/interfaces/dist/filter.js\");\n/* harmony import */ var _light_push_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./light_push.js */ \"(ssr)/./node_modules/@waku/relay/node_modules/@waku/interfaces/dist/light_push.js\");\n/* harmony import */ var _message_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./message.js */ \"(ssr)/./node_modules/@waku/relay/node_modules/@waku/interfaces/dist/message.js\");\n/* harmony import */ var _peer_exchange_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./peer_exchange.js */ \"(ssr)/./node_modules/@waku/relay/node_modules/@waku/interfaces/dist/peer_exchange.js\");\n/* harmony import */ var _protocols_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./protocols.js */ \"(ssr)/./node_modules/@waku/relay/node_modules/@waku/interfaces/dist/protocols.js\");\n/* harmony import */ var _relay_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./relay.js */ \"(ssr)/./node_modules/@waku/relay/node_modules/@waku/interfaces/dist/relay.js\");\n/* harmony import */ var _store_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./store.js */ \"(ssr)/./node_modules/@waku/relay/node_modules/@waku/interfaces/dist/store.js\");\n/* harmony import */ var _waku_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./waku.js */ \"(ssr)/./node_modules/@waku/relay/node_modules/@waku/interfaces/dist/waku.js\");\n/* harmony import */ var _connection_manager_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./connection_manager.js */ \"(ssr)/./node_modules/@waku/relay/node_modules/@waku/interfaces/dist/connection_manager.js\");\n/* harmony import */ var _sender_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./sender.js */ \"(ssr)/./node_modules/@waku/relay/node_modules/@waku/interfaces/dist/sender.js\");\n/* harmony import */ var _receiver_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./receiver.js */ \"(ssr)/./node_modules/@waku/relay/node_modules/@waku/interfaces/dist/receiver.js\");\n/* harmony import */ var _misc_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./misc.js */ \"(ssr)/./node_modules/@waku/relay/node_modules/@waku/interfaces/dist/misc.js\");\n/* harmony import */ var _libp2p_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./libp2p.js */ \"(ssr)/./node_modules/@waku/relay/node_modules/@waku/interfaces/dist/libp2p.js\");\n/* harmony import */ var _keep_alive_manager_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./keep_alive_manager.js */ \"(ssr)/./node_modules/@waku/relay/node_modules/@waku/interfaces/dist/keep_alive_manager.js\");\n/* harmony import */ var _dns_discovery_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./dns_discovery.js */ \"(ssr)/./node_modules/@waku/relay/node_modules/@waku/interfaces/dist/dns_discovery.js\");\n/* harmony import */ var _metadata_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./metadata.js */ \"(ssr)/./node_modules/@waku/relay/node_modules/@waku/interfaces/dist/metadata.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./constants.js */ \"(ssr)/./node_modules/@waku/relay/node_modules/@waku/interfaces/dist/constants.js\");\n/* harmony import */ var _local_storage_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./local_storage.js */ \"(ssr)/./node_modules/@waku/relay/node_modules/@waku/interfaces/dist/local_storage.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdha3UvcmVsYXkvbm9kZV9tb2R1bGVzL0B3YWt1L2ludGVyZmFjZXMvZGlzdC9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBeUI7QUFDRztBQUNJO0FBQ0g7QUFDTTtBQUNKO0FBQ0o7QUFDQTtBQUNEO0FBQ2M7QUFDWjtBQUNFO0FBQ0o7QUFDRTtBQUNZO0FBQ0w7QUFDTDtBQUNDO0FBQ0ksQ0FDbkMsaUNBQWlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZmx1c2gtbm90ZXMvLi9ub2RlX21vZHVsZXMvQHdha3UvcmVsYXkvbm9kZV9tb2R1bGVzL0B3YWt1L2ludGVyZmFjZXMvZGlzdC9pbmRleC5qcz8wYTMxIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCAqIGZyb20gXCIuL2Vuci5qc1wiO1xuZXhwb3J0ICogZnJvbSBcIi4vZmlsdGVyLmpzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9saWdodF9wdXNoLmpzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9tZXNzYWdlLmpzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9wZWVyX2V4Y2hhbmdlLmpzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9wcm90b2NvbHMuanNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL3JlbGF5LmpzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9zdG9yZS5qc1wiO1xuZXhwb3J0ICogZnJvbSBcIi4vd2FrdS5qc1wiO1xuZXhwb3J0ICogZnJvbSBcIi4vY29ubmVjdGlvbl9tYW5hZ2VyLmpzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9zZW5kZXIuanNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL3JlY2VpdmVyLmpzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9taXNjLmpzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9saWJwMnAuanNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL2tlZXBfYWxpdmVfbWFuYWdlci5qc1wiO1xuZXhwb3J0ICogZnJvbSBcIi4vZG5zX2Rpc2NvdmVyeS5qc1wiO1xuZXhwb3J0ICogZnJvbSBcIi4vbWV0YWRhdGEuanNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL2NvbnN0YW50cy5qc1wiO1xuZXhwb3J0ICogZnJvbSBcIi4vbG9jYWxfc3RvcmFnZS5qc1wiO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/relay/node_modules/@waku/interfaces/dist/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/relay/node_modules/@waku/interfaces/dist/keep_alive_manager.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@waku/relay/node_modules/@waku/interfaces/dist/keep_alive_manager.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n //# sourceMappingURL=keep_alive_manager.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdha3UvcmVsYXkvbm9kZV9tb2R1bGVzL0B3YWt1L2ludGVyZmFjZXMvZGlzdC9rZWVwX2FsaXZlX21hbmFnZXIuanMiLCJtYXBwaW5ncyI6IjtBQUFVLENBQ1YsOENBQThDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZmx1c2gtbm90ZXMvLi9ub2RlX21vZHVsZXMvQHdha3UvcmVsYXkvbm9kZV9tb2R1bGVzL0B3YWt1L2ludGVyZmFjZXMvZGlzdC9rZWVwX2FsaXZlX21hbmFnZXIuanM/ODE1MCJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQge307XG4vLyMgc291cmNlTWFwcGluZ1VSTD1rZWVwX2FsaXZlX21hbmFnZXIuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/relay/node_modules/@waku/interfaces/dist/keep_alive_manager.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/relay/node_modules/@waku/interfaces/dist/libp2p.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@waku/relay/node_modules/@waku/interfaces/dist/libp2p.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n //# sourceMappingURL=libp2p.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdha3UvcmVsYXkvbm9kZV9tb2R1bGVzL0B3YWt1L2ludGVyZmFjZXMvZGlzdC9saWJwMnAuanMiLCJtYXBwaW5ncyI6IjtBQUFVLENBQ1Ysa0NBQWtDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZmx1c2gtbm90ZXMvLi9ub2RlX21vZHVsZXMvQHdha3UvcmVsYXkvbm9kZV9tb2R1bGVzL0B3YWt1L2ludGVyZmFjZXMvZGlzdC9saWJwMnAuanM/NzY5NCJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQge307XG4vLyMgc291cmNlTWFwcGluZ1VSTD1saWJwMnAuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/relay/node_modules/@waku/interfaces/dist/libp2p.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/relay/node_modules/@waku/interfaces/dist/light_push.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@waku/relay/node_modules/@waku/interfaces/dist/light_push.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n //# sourceMappingURL=light_push.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdha3UvcmVsYXkvbm9kZV9tb2R1bGVzL0B3YWt1L2ludGVyZmFjZXMvZGlzdC9saWdodF9wdXNoLmpzIiwibWFwcGluZ3MiOiI7QUFBVSxDQUNWLHNDQUFzQyIsInNvdXJjZXMiOlsid2VicGFjazovL2ZsdXNoLW5vdGVzLy4vbm9kZV9tb2R1bGVzL0B3YWt1L3JlbGF5L25vZGVfbW9kdWxlcy9Ad2FrdS9pbnRlcmZhY2VzL2Rpc3QvbGlnaHRfcHVzaC5qcz82MGM3Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCB7fTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWxpZ2h0X3B1c2guanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/relay/node_modules/@waku/interfaces/dist/light_push.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/relay/node_modules/@waku/interfaces/dist/local_storage.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@waku/relay/node_modules/@waku/interfaces/dist/local_storage.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n //# sourceMappingURL=local_storage.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdha3UvcmVsYXkvbm9kZV9tb2R1bGVzL0B3YWt1L2ludGVyZmFjZXMvZGlzdC9sb2NhbF9zdG9yYWdlLmpzIiwibWFwcGluZ3MiOiI7QUFBVSxDQUNWLHlDQUF5QyIsInNvdXJjZXMiOlsid2VicGFjazovL2ZsdXNoLW5vdGVzLy4vbm9kZV9tb2R1bGVzL0B3YWt1L3JlbGF5L25vZGVfbW9kdWxlcy9Ad2FrdS9pbnRlcmZhY2VzL2Rpc3QvbG9jYWxfc3RvcmFnZS5qcz9hNDJkIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCB7fTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWxvY2FsX3N0b3JhZ2UuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/relay/node_modules/@waku/interfaces/dist/local_storage.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/relay/node_modules/@waku/interfaces/dist/message.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@waku/relay/node_modules/@waku/interfaces/dist/message.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n //# sourceMappingURL=message.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdha3UvcmVsYXkvbm9kZV9tb2R1bGVzL0B3YWt1L2ludGVyZmFjZXMvZGlzdC9tZXNzYWdlLmpzIiwibWFwcGluZ3MiOiI7QUFBVSxDQUNWLG1DQUFtQyIsInNvdXJjZXMiOlsid2VicGFjazovL2ZsdXNoLW5vdGVzLy4vbm9kZV9tb2R1bGVzL0B3YWt1L3JlbGF5L25vZGVfbW9kdWxlcy9Ad2FrdS9pbnRlcmZhY2VzL2Rpc3QvbWVzc2FnZS5qcz82YWNjIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCB7fTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPW1lc3NhZ2UuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/relay/node_modules/@waku/interfaces/dist/message.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/relay/node_modules/@waku/interfaces/dist/metadata.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@waku/relay/node_modules/@waku/interfaces/dist/metadata.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n //# sourceMappingURL=metadata.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdha3UvcmVsYXkvbm9kZV9tb2R1bGVzL0B3YWt1L2ludGVyZmFjZXMvZGlzdC9tZXRhZGF0YS5qcyIsIm1hcHBpbmdzIjoiO0FBQVUsQ0FDVixvQ0FBb0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mbHVzaC1ub3Rlcy8uL25vZGVfbW9kdWxlcy9Ad2FrdS9yZWxheS9ub2RlX21vZHVsZXMvQHdha3UvaW50ZXJmYWNlcy9kaXN0L21ldGFkYXRhLmpzPzdiYzkiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHt9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bWV0YWRhdGEuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/relay/node_modules/@waku/interfaces/dist/metadata.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/relay/node_modules/@waku/interfaces/dist/misc.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@waku/relay/node_modules/@waku/interfaces/dist/misc.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n //# sourceMappingURL=misc.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdha3UvcmVsYXkvbm9kZV9tb2R1bGVzL0B3YWt1L2ludGVyZmFjZXMvZGlzdC9taXNjLmpzIiwibWFwcGluZ3MiOiI7QUFBVSxDQUNWLGdDQUFnQyIsInNvdXJjZXMiOlsid2VicGFjazovL2ZsdXNoLW5vdGVzLy4vbm9kZV9tb2R1bGVzL0B3YWt1L3JlbGF5L25vZGVfbW9kdWxlcy9Ad2FrdS9pbnRlcmZhY2VzL2Rpc3QvbWlzYy5qcz81YTQ3Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCB7fTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPW1pc2MuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/relay/node_modules/@waku/interfaces/dist/misc.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/relay/node_modules/@waku/interfaces/dist/peer_exchange.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@waku/relay/node_modules/@waku/interfaces/dist/peer_exchange.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n //# sourceMappingURL=peer_exchange.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdha3UvcmVsYXkvbm9kZV9tb2R1bGVzL0B3YWt1L2ludGVyZmFjZXMvZGlzdC9wZWVyX2V4Y2hhbmdlLmpzIiwibWFwcGluZ3MiOiI7QUFBVSxDQUNWLHlDQUF5QyIsInNvdXJjZXMiOlsid2VicGFjazovL2ZsdXNoLW5vdGVzLy4vbm9kZV9tb2R1bGVzL0B3YWt1L3JlbGF5L25vZGVfbW9kdWxlcy9Ad2FrdS9pbnRlcmZhY2VzL2Rpc3QvcGVlcl9leGNoYW5nZS5qcz8wOGVhIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCB7fTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXBlZXJfZXhjaGFuZ2UuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/relay/node_modules/@waku/interfaces/dist/peer_exchange.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/relay/node_modules/@waku/interfaces/dist/protocols.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@waku/relay/node_modules/@waku/interfaces/dist/protocols.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ProtocolError: () => (/* binding */ ProtocolError),\n/* harmony export */   Protocols: () => (/* binding */ Protocols)\n/* harmony export */ });\nvar Protocols;\n(function(Protocols) {\n    Protocols[\"Relay\"] = \"relay\";\n    Protocols[\"Store\"] = \"store\";\n    Protocols[\"LightPush\"] = \"lightpush\";\n    Protocols[\"Filter\"] = \"filter\";\n})(Protocols || (Protocols = {}));\nvar ProtocolError;\n(function(ProtocolError) {\n    /** Could not determine the origin of the fault. Best to check connectivity and try again */ ProtocolError[\"GENERIC_FAIL\"] = \"Generic error\";\n    /**\n     * Failure to protobuf encode the message. This is not recoverable and needs\n     * further investigation.\n     */ ProtocolError[\"ENCODE_FAILED\"] = \"Failed to encode\";\n    /**\n     * Failure to protobuf decode the message. May be due to a remote peer issue,\n     * ensuring that messages are sent via several peer enable mitigation of this error.\n     */ ProtocolError[\"DECODE_FAILED\"] = \"Failed to decode\";\n    /**\n     * The message payload is empty, making the message invalid. Ensure that a non-empty\n     * payload is set on the outgoing message.\n     */ ProtocolError[\"EMPTY_PAYLOAD\"] = \"Payload is empty\";\n    /**\n     * The message size is above the maximum message size allowed on the Waku Network.\n     * Compressing the message or using an alternative strategy for large messages is recommended.\n     */ ProtocolError[\"SIZE_TOO_BIG\"] = \"Size is too big\";\n    /**\n     * The PubsubTopic passed to the send function is not configured on the Waku node.\n     * Please ensure that the PubsubTopic is used when initializing the Waku node.\n     */ ProtocolError[\"TOPIC_NOT_CONFIGURED\"] = \"Topic not configured\";\n    /**\n     * Failure to find a peer with suitable protocols. This may due to a connection issue.\n     * Mitigation can be: retrying after a given time period, display connectivity issue\n     * to user or listening for `peer:connected:bootstrap` or `peer:connected:peer-exchange`\n     * on the connection manager before retrying.\n     */ ProtocolError[\"NO_PEER_AVAILABLE\"] = \"No peer available\";\n    /**\n     * The remote peer did not behave as expected. Mitigation for `NO_PEER_AVAILABLE`\n     * or `DECODE_FAILED` can be used.\n     */ ProtocolError[\"REMOTE_PEER_FAULT\"] = \"Remote peer fault\";\n    /**\n     * The remote peer rejected the message. Information provided by the remote peer\n     * is logged. Review message validity, or mitigation for `NO_PEER_AVAILABLE`\n     * or `DECODE_FAILED` can be used.\n     */ ProtocolError[\"REMOTE_PEER_REJECTED\"] = \"Remote peer rejected\";\n    /**\n     * The protocol request timed out without a response. This may be due to a connection issue.\n     * Mitigation can be: retrying after a given time period\n     */ ProtocolError[\"REQUEST_TIMEOUT\"] = \"Request timeout\";\n})(ProtocolError || (ProtocolError = {})); //# sourceMappingURL=protocols.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdha3UvcmVsYXkvbm9kZV9tb2R1bGVzL0B3YWt1L2ludGVyZmFjZXMvZGlzdC9wcm90b2NvbHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBTyxJQUFJQSxVQUFVO0FBQ3BCLFVBQVVBLFNBQVM7SUFDaEJBLFNBQVMsQ0FBQyxRQUFRLEdBQUc7SUFDckJBLFNBQVMsQ0FBQyxRQUFRLEdBQUc7SUFDckJBLFNBQVMsQ0FBQyxZQUFZLEdBQUc7SUFDekJBLFNBQVMsQ0FBQyxTQUFTLEdBQUc7QUFDMUIsR0FBR0EsYUFBY0EsQ0FBQUEsWUFBWSxDQUFDO0FBQ3ZCLElBQUlDLGNBQWM7QUFDeEIsVUFBVUEsYUFBYTtJQUNwQiwwRkFBMEYsR0FDMUZBLGFBQWEsQ0FBQyxlQUFlLEdBQUc7SUFDaEM7OztLQUdDLEdBQ0RBLGFBQWEsQ0FBQyxnQkFBZ0IsR0FBRztJQUNqQzs7O0tBR0MsR0FDREEsYUFBYSxDQUFDLGdCQUFnQixHQUFHO0lBQ2pDOzs7S0FHQyxHQUNEQSxhQUFhLENBQUMsZ0JBQWdCLEdBQUc7SUFDakM7OztLQUdDLEdBQ0RBLGFBQWEsQ0FBQyxlQUFlLEdBQUc7SUFDaEM7OztLQUdDLEdBQ0RBLGFBQWEsQ0FBQyx1QkFBdUIsR0FBRztJQUN4Qzs7Ozs7S0FLQyxHQUNEQSxhQUFhLENBQUMsb0JBQW9CLEdBQUc7SUFDckM7OztLQUdDLEdBQ0RBLGFBQWEsQ0FBQyxvQkFBb0IsR0FBRztJQUNyQzs7OztLQUlDLEdBQ0RBLGFBQWEsQ0FBQyx1QkFBdUIsR0FBRztJQUN4Qzs7O0tBR0MsR0FDREEsYUFBYSxDQUFDLGtCQUFrQixHQUFHO0FBQ3ZDLEdBQUdBLGlCQUFrQkEsQ0FBQUEsZ0JBQWdCLENBQUMsS0FDdEMscUNBQXFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZmx1c2gtbm90ZXMvLi9ub2RlX21vZHVsZXMvQHdha3UvcmVsYXkvbm9kZV9tb2R1bGVzL0B3YWt1L2ludGVyZmFjZXMvZGlzdC9wcm90b2NvbHMuanM/YzViZiJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgdmFyIFByb3RvY29scztcbihmdW5jdGlvbiAoUHJvdG9jb2xzKSB7XG4gICAgUHJvdG9jb2xzW1wiUmVsYXlcIl0gPSBcInJlbGF5XCI7XG4gICAgUHJvdG9jb2xzW1wiU3RvcmVcIl0gPSBcInN0b3JlXCI7XG4gICAgUHJvdG9jb2xzW1wiTGlnaHRQdXNoXCJdID0gXCJsaWdodHB1c2hcIjtcbiAgICBQcm90b2NvbHNbXCJGaWx0ZXJcIl0gPSBcImZpbHRlclwiO1xufSkoUHJvdG9jb2xzIHx8IChQcm90b2NvbHMgPSB7fSkpO1xuZXhwb3J0IHZhciBQcm90b2NvbEVycm9yO1xuKGZ1bmN0aW9uIChQcm90b2NvbEVycm9yKSB7XG4gICAgLyoqIENvdWxkIG5vdCBkZXRlcm1pbmUgdGhlIG9yaWdpbiBvZiB0aGUgZmF1bHQuIEJlc3QgdG8gY2hlY2sgY29ubmVjdGl2aXR5IGFuZCB0cnkgYWdhaW4gKi9cbiAgICBQcm90b2NvbEVycm9yW1wiR0VORVJJQ19GQUlMXCJdID0gXCJHZW5lcmljIGVycm9yXCI7XG4gICAgLyoqXG4gICAgICogRmFpbHVyZSB0byBwcm90b2J1ZiBlbmNvZGUgdGhlIG1lc3NhZ2UuIFRoaXMgaXMgbm90IHJlY292ZXJhYmxlIGFuZCBuZWVkc1xuICAgICAqIGZ1cnRoZXIgaW52ZXN0aWdhdGlvbi5cbiAgICAgKi9cbiAgICBQcm90b2NvbEVycm9yW1wiRU5DT0RFX0ZBSUxFRFwiXSA9IFwiRmFpbGVkIHRvIGVuY29kZVwiO1xuICAgIC8qKlxuICAgICAqIEZhaWx1cmUgdG8gcHJvdG9idWYgZGVjb2RlIHRoZSBtZXNzYWdlLiBNYXkgYmUgZHVlIHRvIGEgcmVtb3RlIHBlZXIgaXNzdWUsXG4gICAgICogZW5zdXJpbmcgdGhhdCBtZXNzYWdlcyBhcmUgc2VudCB2aWEgc2V2ZXJhbCBwZWVyIGVuYWJsZSBtaXRpZ2F0aW9uIG9mIHRoaXMgZXJyb3IuXG4gICAgICovXG4gICAgUHJvdG9jb2xFcnJvcltcIkRFQ09ERV9GQUlMRURcIl0gPSBcIkZhaWxlZCB0byBkZWNvZGVcIjtcbiAgICAvKipcbiAgICAgKiBUaGUgbWVzc2FnZSBwYXlsb2FkIGlzIGVtcHR5LCBtYWtpbmcgdGhlIG1lc3NhZ2UgaW52YWxpZC4gRW5zdXJlIHRoYXQgYSBub24tZW1wdHlcbiAgICAgKiBwYXlsb2FkIGlzIHNldCBvbiB0aGUgb3V0Z29pbmcgbWVzc2FnZS5cbiAgICAgKi9cbiAgICBQcm90b2NvbEVycm9yW1wiRU1QVFlfUEFZTE9BRFwiXSA9IFwiUGF5bG9hZCBpcyBlbXB0eVwiO1xuICAgIC8qKlxuICAgICAqIFRoZSBtZXNzYWdlIHNpemUgaXMgYWJvdmUgdGhlIG1heGltdW0gbWVzc2FnZSBzaXplIGFsbG93ZWQgb24gdGhlIFdha3UgTmV0d29yay5cbiAgICAgKiBDb21wcmVzc2luZyB0aGUgbWVzc2FnZSBvciB1c2luZyBhbiBhbHRlcm5hdGl2ZSBzdHJhdGVneSBmb3IgbGFyZ2UgbWVzc2FnZXMgaXMgcmVjb21tZW5kZWQuXG4gICAgICovXG4gICAgUHJvdG9jb2xFcnJvcltcIlNJWkVfVE9PX0JJR1wiXSA9IFwiU2l6ZSBpcyB0b28gYmlnXCI7XG4gICAgLyoqXG4gICAgICogVGhlIFB1YnN1YlRvcGljIHBhc3NlZCB0byB0aGUgc2VuZCBmdW5jdGlvbiBpcyBub3QgY29uZmlndXJlZCBvbiB0aGUgV2FrdSBub2RlLlxuICAgICAqIFBsZWFzZSBlbnN1cmUgdGhhdCB0aGUgUHVic3ViVG9waWMgaXMgdXNlZCB3aGVuIGluaXRpYWxpemluZyB0aGUgV2FrdSBub2RlLlxuICAgICAqL1xuICAgIFByb3RvY29sRXJyb3JbXCJUT1BJQ19OT1RfQ09ORklHVVJFRFwiXSA9IFwiVG9waWMgbm90IGNvbmZpZ3VyZWRcIjtcbiAgICAvKipcbiAgICAgKiBGYWlsdXJlIHRvIGZpbmQgYSBwZWVyIHdpdGggc3VpdGFibGUgcHJvdG9jb2xzLiBUaGlzIG1heSBkdWUgdG8gYSBjb25uZWN0aW9uIGlzc3VlLlxuICAgICAqIE1pdGlnYXRpb24gY2FuIGJlOiByZXRyeWluZyBhZnRlciBhIGdpdmVuIHRpbWUgcGVyaW9kLCBkaXNwbGF5IGNvbm5lY3Rpdml0eSBpc3N1ZVxuICAgICAqIHRvIHVzZXIgb3IgbGlzdGVuaW5nIGZvciBgcGVlcjpjb25uZWN0ZWQ6Ym9vdHN0cmFwYCBvciBgcGVlcjpjb25uZWN0ZWQ6cGVlci1leGNoYW5nZWBcbiAgICAgKiBvbiB0aGUgY29ubmVjdGlvbiBtYW5hZ2VyIGJlZm9yZSByZXRyeWluZy5cbiAgICAgKi9cbiAgICBQcm90b2NvbEVycm9yW1wiTk9fUEVFUl9BVkFJTEFCTEVcIl0gPSBcIk5vIHBlZXIgYXZhaWxhYmxlXCI7XG4gICAgLyoqXG4gICAgICogVGhlIHJlbW90ZSBwZWVyIGRpZCBub3QgYmVoYXZlIGFzIGV4cGVjdGVkLiBNaXRpZ2F0aW9uIGZvciBgTk9fUEVFUl9BVkFJTEFCTEVgXG4gICAgICogb3IgYERFQ09ERV9GQUlMRURgIGNhbiBiZSB1c2VkLlxuICAgICAqL1xuICAgIFByb3RvY29sRXJyb3JbXCJSRU1PVEVfUEVFUl9GQVVMVFwiXSA9IFwiUmVtb3RlIHBlZXIgZmF1bHRcIjtcbiAgICAvKipcbiAgICAgKiBUaGUgcmVtb3RlIHBlZXIgcmVqZWN0ZWQgdGhlIG1lc3NhZ2UuIEluZm9ybWF0aW9uIHByb3ZpZGVkIGJ5IHRoZSByZW1vdGUgcGVlclxuICAgICAqIGlzIGxvZ2dlZC4gUmV2aWV3IG1lc3NhZ2UgdmFsaWRpdHksIG9yIG1pdGlnYXRpb24gZm9yIGBOT19QRUVSX0FWQUlMQUJMRWBcbiAgICAgKiBvciBgREVDT0RFX0ZBSUxFRGAgY2FuIGJlIHVzZWQuXG4gICAgICovXG4gICAgUHJvdG9jb2xFcnJvcltcIlJFTU9URV9QRUVSX1JFSkVDVEVEXCJdID0gXCJSZW1vdGUgcGVlciByZWplY3RlZFwiO1xuICAgIC8qKlxuICAgICAqIFRoZSBwcm90b2NvbCByZXF1ZXN0IHRpbWVkIG91dCB3aXRob3V0IGEgcmVzcG9uc2UuIFRoaXMgbWF5IGJlIGR1ZSB0byBhIGNvbm5lY3Rpb24gaXNzdWUuXG4gICAgICogTWl0aWdhdGlvbiBjYW4gYmU6IHJldHJ5aW5nIGFmdGVyIGEgZ2l2ZW4gdGltZSBwZXJpb2RcbiAgICAgKi9cbiAgICBQcm90b2NvbEVycm9yW1wiUkVRVUVTVF9USU1FT1VUXCJdID0gXCJSZXF1ZXN0IHRpbWVvdXRcIjtcbn0pKFByb3RvY29sRXJyb3IgfHwgKFByb3RvY29sRXJyb3IgPSB7fSkpO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cHJvdG9jb2xzLmpzLm1hcCJdLCJuYW1lcyI6WyJQcm90b2NvbHMiLCJQcm90b2NvbEVycm9yIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/relay/node_modules/@waku/interfaces/dist/protocols.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/relay/node_modules/@waku/interfaces/dist/receiver.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@waku/relay/node_modules/@waku/interfaces/dist/receiver.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n //# sourceMappingURL=receiver.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdha3UvcmVsYXkvbm9kZV9tb2R1bGVzL0B3YWt1L2ludGVyZmFjZXMvZGlzdC9yZWNlaXZlci5qcyIsIm1hcHBpbmdzIjoiO0FBQVUsQ0FDVixvQ0FBb0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mbHVzaC1ub3Rlcy8uL25vZGVfbW9kdWxlcy9Ad2FrdS9yZWxheS9ub2RlX21vZHVsZXMvQHdha3UvaW50ZXJmYWNlcy9kaXN0L3JlY2VpdmVyLmpzPzY2ODAiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHt9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cmVjZWl2ZXIuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/relay/node_modules/@waku/interfaces/dist/receiver.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/relay/node_modules/@waku/interfaces/dist/relay.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@waku/relay/node_modules/@waku/interfaces/dist/relay.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n //# sourceMappingURL=relay.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdha3UvcmVsYXkvbm9kZV9tb2R1bGVzL0B3YWt1L2ludGVyZmFjZXMvZGlzdC9yZWxheS5qcyIsIm1hcHBpbmdzIjoiO0FBQVUsQ0FDVixpQ0FBaUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mbHVzaC1ub3Rlcy8uL25vZGVfbW9kdWxlcy9Ad2FrdS9yZWxheS9ub2RlX21vZHVsZXMvQHdha3UvaW50ZXJmYWNlcy9kaXN0L3JlbGF5LmpzPzA3ZDMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHt9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cmVsYXkuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/relay/node_modules/@waku/interfaces/dist/relay.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/relay/node_modules/@waku/interfaces/dist/sender.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@waku/relay/node_modules/@waku/interfaces/dist/sender.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n //# sourceMappingURL=sender.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdha3UvcmVsYXkvbm9kZV9tb2R1bGVzL0B3YWt1L2ludGVyZmFjZXMvZGlzdC9zZW5kZXIuanMiLCJtYXBwaW5ncyI6IjtBQUFVLENBQ1Ysa0NBQWtDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZmx1c2gtbm90ZXMvLi9ub2RlX21vZHVsZXMvQHdha3UvcmVsYXkvbm9kZV9tb2R1bGVzL0B3YWt1L2ludGVyZmFjZXMvZGlzdC9zZW5kZXIuanM/MTZkOCJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQge307XG4vLyMgc291cmNlTWFwcGluZ1VSTD1zZW5kZXIuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/relay/node_modules/@waku/interfaces/dist/sender.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/relay/node_modules/@waku/interfaces/dist/store.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@waku/relay/node_modules/@waku/interfaces/dist/store.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PageDirection: () => (/* binding */ PageDirection)\n/* harmony export */ });\nvar PageDirection;\n(function(PageDirection) {\n    PageDirection[\"BACKWARD\"] = \"backward\";\n    PageDirection[\"FORWARD\"] = \"forward\";\n})(PageDirection || (PageDirection = {})); //# sourceMappingURL=store.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdha3UvcmVsYXkvbm9kZV9tb2R1bGVzL0B3YWt1L2ludGVyZmFjZXMvZGlzdC9zdG9yZS5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQU8sSUFBSUEsY0FBYztBQUN4QixVQUFVQSxhQUFhO0lBQ3BCQSxhQUFhLENBQUMsV0FBVyxHQUFHO0lBQzVCQSxhQUFhLENBQUMsVUFBVSxHQUFHO0FBQy9CLEdBQUdBLGlCQUFrQkEsQ0FBQUEsZ0JBQWdCLENBQUMsS0FDdEMsaUNBQWlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZmx1c2gtbm90ZXMvLi9ub2RlX21vZHVsZXMvQHdha3UvcmVsYXkvbm9kZV9tb2R1bGVzL0B3YWt1L2ludGVyZmFjZXMvZGlzdC9zdG9yZS5qcz8zNjNmIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCB2YXIgUGFnZURpcmVjdGlvbjtcbihmdW5jdGlvbiAoUGFnZURpcmVjdGlvbikge1xuICAgIFBhZ2VEaXJlY3Rpb25bXCJCQUNLV0FSRFwiXSA9IFwiYmFja3dhcmRcIjtcbiAgICBQYWdlRGlyZWN0aW9uW1wiRk9SV0FSRFwiXSA9IFwiZm9yd2FyZFwiO1xufSkoUGFnZURpcmVjdGlvbiB8fCAoUGFnZURpcmVjdGlvbiA9IHt9KSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1zdG9yZS5qcy5tYXAiXSwibmFtZXMiOlsiUGFnZURpcmVjdGlvbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/relay/node_modules/@waku/interfaces/dist/store.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/relay/node_modules/@waku/interfaces/dist/waku.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@waku/relay/node_modules/@waku/interfaces/dist/waku.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n //# sourceMappingURL=waku.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdha3UvcmVsYXkvbm9kZV9tb2R1bGVzL0B3YWt1L2ludGVyZmFjZXMvZGlzdC93YWt1LmpzIiwibWFwcGluZ3MiOiI7QUFBVSxDQUNWLGdDQUFnQyIsInNvdXJjZXMiOlsid2VicGFjazovL2ZsdXNoLW5vdGVzLy4vbm9kZV9tb2R1bGVzL0B3YWt1L3JlbGF5L25vZGVfbW9kdWxlcy9Ad2FrdS9pbnRlcmZhY2VzL2Rpc3Qvd2FrdS5qcz8wMDg4Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCB7fTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXdha3UuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/relay/node_modules/@waku/interfaces/dist/waku.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/relay/node_modules/@waku/proto/dist/generated/filter.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@waku/relay/node_modules/@waku/proto/dist/generated/filter.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   FilterRequest: () => (/* binding */ FilterRequest),\n/* harmony export */   FilterRpc: () => (/* binding */ FilterRpc),\n/* harmony export */   MessagePush: () => (/* binding */ MessagePush),\n/* harmony export */   RateLimitProof: () => (/* binding */ RateLimitProof),\n/* harmony export */   WakuMessage: () => (/* binding */ WakuMessage)\n/* harmony export */ });\n/* harmony import */ var protons_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! protons-runtime */ \"(ssr)/./node_modules/protons-runtime/dist/src/index.js\");\n/* harmony import */ var uint8arrays_alloc__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! uint8arrays/alloc */ \"(ssr)/./node_modules/uint8arrays/dist/src/alloc.node.js\");\n/* eslint-disable import/export */ /* eslint-disable complexity */ /* eslint-disable @typescript-eslint/no-namespace */ /* eslint-disable @typescript-eslint/no-unnecessary-boolean-literal-compare */ /* eslint-disable @typescript-eslint/no-empty-interface */ \n\nvar FilterRequest;\n(function(FilterRequest) {\n    let ContentFilter;\n    (function(ContentFilter) {\n        let _codec;\n        ContentFilter.codec = ()=>{\n            if (_codec == null) {\n                _codec = (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.message)((obj, w, opts = {})=>{\n                    if (opts.lengthDelimited !== false) {\n                        w.fork();\n                    }\n                    if (obj.contentTopic != null && obj.contentTopic !== \"\") {\n                        w.uint32(10);\n                        w.string(obj.contentTopic);\n                    }\n                    if (opts.lengthDelimited !== false) {\n                        w.ldelim();\n                    }\n                }, (reader, length, opts = {})=>{\n                    const obj = {\n                        contentTopic: \"\"\n                    };\n                    const end = length == null ? reader.len : reader.pos + length;\n                    while(reader.pos < end){\n                        const tag = reader.uint32();\n                        switch(tag >>> 3){\n                            case 1:\n                                {\n                                    obj.contentTopic = reader.string();\n                                    break;\n                                }\n                            default:\n                                {\n                                    reader.skipType(tag & 7);\n                                    break;\n                                }\n                        }\n                    }\n                    return obj;\n                });\n            }\n            return _codec;\n        };\n        ContentFilter.encode = (obj)=>{\n            return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.encodeMessage)(obj, ContentFilter.codec());\n        };\n        ContentFilter.decode = (buf, opts)=>{\n            return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.decodeMessage)(buf, ContentFilter.codec(), opts);\n        };\n    })(ContentFilter = FilterRequest.ContentFilter || (FilterRequest.ContentFilter = {}));\n    let _codec;\n    FilterRequest.codec = ()=>{\n        if (_codec == null) {\n            _codec = (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.message)((obj, w, opts = {})=>{\n                if (opts.lengthDelimited !== false) {\n                    w.fork();\n                }\n                if (obj.subscribe != null && obj.subscribe !== false) {\n                    w.uint32(8);\n                    w.bool(obj.subscribe);\n                }\n                if (obj.topic != null && obj.topic !== \"\") {\n                    w.uint32(18);\n                    w.string(obj.topic);\n                }\n                if (obj.contentFilters != null) {\n                    for (const value of obj.contentFilters){\n                        w.uint32(26);\n                        FilterRequest.ContentFilter.codec().encode(value, w);\n                    }\n                }\n                if (opts.lengthDelimited !== false) {\n                    w.ldelim();\n                }\n            }, (reader, length, opts = {})=>{\n                const obj = {\n                    subscribe: false,\n                    topic: \"\",\n                    contentFilters: []\n                };\n                const end = length == null ? reader.len : reader.pos + length;\n                while(reader.pos < end){\n                    const tag = reader.uint32();\n                    switch(tag >>> 3){\n                        case 1:\n                            {\n                                obj.subscribe = reader.bool();\n                                break;\n                            }\n                        case 2:\n                            {\n                                obj.topic = reader.string();\n                                break;\n                            }\n                        case 3:\n                            {\n                                if (opts.limits?.contentFilters != null && obj.contentFilters.length === opts.limits.contentFilters) {\n                                    throw new protons_runtime__WEBPACK_IMPORTED_MODULE_0__.CodeError('decode error - map field \"contentFilters\" had too many elements', \"ERR_MAX_LENGTH\");\n                                }\n                                obj.contentFilters.push(FilterRequest.ContentFilter.codec().decode(reader, reader.uint32(), {\n                                    limits: opts.limits?.contentFilters$\n                                }));\n                                break;\n                            }\n                        default:\n                            {\n                                reader.skipType(tag & 7);\n                                break;\n                            }\n                    }\n                }\n                return obj;\n            });\n        }\n        return _codec;\n    };\n    FilterRequest.encode = (obj)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.encodeMessage)(obj, FilterRequest.codec());\n    };\n    FilterRequest.decode = (buf, opts)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.decodeMessage)(buf, FilterRequest.codec(), opts);\n    };\n})(FilterRequest || (FilterRequest = {}));\nvar MessagePush;\n(function(MessagePush) {\n    let _codec;\n    MessagePush.codec = ()=>{\n        if (_codec == null) {\n            _codec = (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.message)((obj, w, opts = {})=>{\n                if (opts.lengthDelimited !== false) {\n                    w.fork();\n                }\n                if (obj.messages != null) {\n                    for (const value of obj.messages){\n                        w.uint32(10);\n                        WakuMessage.codec().encode(value, w);\n                    }\n                }\n                if (opts.lengthDelimited !== false) {\n                    w.ldelim();\n                }\n            }, (reader, length, opts = {})=>{\n                const obj = {\n                    messages: []\n                };\n                const end = length == null ? reader.len : reader.pos + length;\n                while(reader.pos < end){\n                    const tag = reader.uint32();\n                    switch(tag >>> 3){\n                        case 1:\n                            {\n                                if (opts.limits?.messages != null && obj.messages.length === opts.limits.messages) {\n                                    throw new protons_runtime__WEBPACK_IMPORTED_MODULE_0__.CodeError('decode error - map field \"messages\" had too many elements', \"ERR_MAX_LENGTH\");\n                                }\n                                obj.messages.push(WakuMessage.codec().decode(reader, reader.uint32(), {\n                                    limits: opts.limits?.messages$\n                                }));\n                                break;\n                            }\n                        default:\n                            {\n                                reader.skipType(tag & 7);\n                                break;\n                            }\n                    }\n                }\n                return obj;\n            });\n        }\n        return _codec;\n    };\n    MessagePush.encode = (obj)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.encodeMessage)(obj, MessagePush.codec());\n    };\n    MessagePush.decode = (buf, opts)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.decodeMessage)(buf, MessagePush.codec(), opts);\n    };\n})(MessagePush || (MessagePush = {}));\nvar FilterRpc;\n(function(FilterRpc) {\n    let _codec;\n    FilterRpc.codec = ()=>{\n        if (_codec == null) {\n            _codec = (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.message)((obj, w, opts = {})=>{\n                if (opts.lengthDelimited !== false) {\n                    w.fork();\n                }\n                if (obj.requestId != null && obj.requestId !== \"\") {\n                    w.uint32(10);\n                    w.string(obj.requestId);\n                }\n                if (obj.request != null) {\n                    w.uint32(18);\n                    FilterRequest.codec().encode(obj.request, w);\n                }\n                if (obj.push != null) {\n                    w.uint32(26);\n                    MessagePush.codec().encode(obj.push, w);\n                }\n                if (opts.lengthDelimited !== false) {\n                    w.ldelim();\n                }\n            }, (reader, length, opts = {})=>{\n                const obj = {\n                    requestId: \"\"\n                };\n                const end = length == null ? reader.len : reader.pos + length;\n                while(reader.pos < end){\n                    const tag = reader.uint32();\n                    switch(tag >>> 3){\n                        case 1:\n                            {\n                                obj.requestId = reader.string();\n                                break;\n                            }\n                        case 2:\n                            {\n                                obj.request = FilterRequest.codec().decode(reader, reader.uint32(), {\n                                    limits: opts.limits?.request\n                                });\n                                break;\n                            }\n                        case 3:\n                            {\n                                obj.push = MessagePush.codec().decode(reader, reader.uint32(), {\n                                    limits: opts.limits?.push\n                                });\n                                break;\n                            }\n                        default:\n                            {\n                                reader.skipType(tag & 7);\n                                break;\n                            }\n                    }\n                }\n                return obj;\n            });\n        }\n        return _codec;\n    };\n    FilterRpc.encode = (obj)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.encodeMessage)(obj, FilterRpc.codec());\n    };\n    FilterRpc.decode = (buf, opts)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.decodeMessage)(buf, FilterRpc.codec(), opts);\n    };\n})(FilterRpc || (FilterRpc = {}));\nvar RateLimitProof;\n(function(RateLimitProof) {\n    let _codec;\n    RateLimitProof.codec = ()=>{\n        if (_codec == null) {\n            _codec = (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.message)((obj, w, opts = {})=>{\n                if (opts.lengthDelimited !== false) {\n                    w.fork();\n                }\n                if (obj.proof != null && obj.proof.byteLength > 0) {\n                    w.uint32(10);\n                    w.bytes(obj.proof);\n                }\n                if (obj.merkleRoot != null && obj.merkleRoot.byteLength > 0) {\n                    w.uint32(18);\n                    w.bytes(obj.merkleRoot);\n                }\n                if (obj.epoch != null && obj.epoch.byteLength > 0) {\n                    w.uint32(26);\n                    w.bytes(obj.epoch);\n                }\n                if (obj.shareX != null && obj.shareX.byteLength > 0) {\n                    w.uint32(34);\n                    w.bytes(obj.shareX);\n                }\n                if (obj.shareY != null && obj.shareY.byteLength > 0) {\n                    w.uint32(42);\n                    w.bytes(obj.shareY);\n                }\n                if (obj.nullifier != null && obj.nullifier.byteLength > 0) {\n                    w.uint32(50);\n                    w.bytes(obj.nullifier);\n                }\n                if (obj.rlnIdentifier != null && obj.rlnIdentifier.byteLength > 0) {\n                    w.uint32(58);\n                    w.bytes(obj.rlnIdentifier);\n                }\n                if (opts.lengthDelimited !== false) {\n                    w.ldelim();\n                }\n            }, (reader, length, opts = {})=>{\n                const obj = {\n                    proof: (0,uint8arrays_alloc__WEBPACK_IMPORTED_MODULE_1__.alloc)(0),\n                    merkleRoot: (0,uint8arrays_alloc__WEBPACK_IMPORTED_MODULE_1__.alloc)(0),\n                    epoch: (0,uint8arrays_alloc__WEBPACK_IMPORTED_MODULE_1__.alloc)(0),\n                    shareX: (0,uint8arrays_alloc__WEBPACK_IMPORTED_MODULE_1__.alloc)(0),\n                    shareY: (0,uint8arrays_alloc__WEBPACK_IMPORTED_MODULE_1__.alloc)(0),\n                    nullifier: (0,uint8arrays_alloc__WEBPACK_IMPORTED_MODULE_1__.alloc)(0),\n                    rlnIdentifier: (0,uint8arrays_alloc__WEBPACK_IMPORTED_MODULE_1__.alloc)(0)\n                };\n                const end = length == null ? reader.len : reader.pos + length;\n                while(reader.pos < end){\n                    const tag = reader.uint32();\n                    switch(tag >>> 3){\n                        case 1:\n                            {\n                                obj.proof = reader.bytes();\n                                break;\n                            }\n                        case 2:\n                            {\n                                obj.merkleRoot = reader.bytes();\n                                break;\n                            }\n                        case 3:\n                            {\n                                obj.epoch = reader.bytes();\n                                break;\n                            }\n                        case 4:\n                            {\n                                obj.shareX = reader.bytes();\n                                break;\n                            }\n                        case 5:\n                            {\n                                obj.shareY = reader.bytes();\n                                break;\n                            }\n                        case 6:\n                            {\n                                obj.nullifier = reader.bytes();\n                                break;\n                            }\n                        case 7:\n                            {\n                                obj.rlnIdentifier = reader.bytes();\n                                break;\n                            }\n                        default:\n                            {\n                                reader.skipType(tag & 7);\n                                break;\n                            }\n                    }\n                }\n                return obj;\n            });\n        }\n        return _codec;\n    };\n    RateLimitProof.encode = (obj)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.encodeMessage)(obj, RateLimitProof.codec());\n    };\n    RateLimitProof.decode = (buf, opts)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.decodeMessage)(buf, RateLimitProof.codec(), opts);\n    };\n})(RateLimitProof || (RateLimitProof = {}));\nvar WakuMessage;\n(function(WakuMessage) {\n    let _codec;\n    WakuMessage.codec = ()=>{\n        if (_codec == null) {\n            _codec = (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.message)((obj, w, opts = {})=>{\n                if (opts.lengthDelimited !== false) {\n                    w.fork();\n                }\n                if (obj.payload != null && obj.payload.byteLength > 0) {\n                    w.uint32(10);\n                    w.bytes(obj.payload);\n                }\n                if (obj.contentTopic != null && obj.contentTopic !== \"\") {\n                    w.uint32(18);\n                    w.string(obj.contentTopic);\n                }\n                if (obj.version != null) {\n                    w.uint32(24);\n                    w.uint32(obj.version);\n                }\n                if (obj.timestamp != null) {\n                    w.uint32(80);\n                    w.sint64(obj.timestamp);\n                }\n                if (obj.meta != null) {\n                    w.uint32(90);\n                    w.bytes(obj.meta);\n                }\n                if (obj.rateLimitProof != null) {\n                    w.uint32(170);\n                    RateLimitProof.codec().encode(obj.rateLimitProof, w);\n                }\n                if (obj.ephemeral != null) {\n                    w.uint32(248);\n                    w.bool(obj.ephemeral);\n                }\n                if (opts.lengthDelimited !== false) {\n                    w.ldelim();\n                }\n            }, (reader, length, opts = {})=>{\n                const obj = {\n                    payload: (0,uint8arrays_alloc__WEBPACK_IMPORTED_MODULE_1__.alloc)(0),\n                    contentTopic: \"\"\n                };\n                const end = length == null ? reader.len : reader.pos + length;\n                while(reader.pos < end){\n                    const tag = reader.uint32();\n                    switch(tag >>> 3){\n                        case 1:\n                            {\n                                obj.payload = reader.bytes();\n                                break;\n                            }\n                        case 2:\n                            {\n                                obj.contentTopic = reader.string();\n                                break;\n                            }\n                        case 3:\n                            {\n                                obj.version = reader.uint32();\n                                break;\n                            }\n                        case 10:\n                            {\n                                obj.timestamp = reader.sint64();\n                                break;\n                            }\n                        case 11:\n                            {\n                                obj.meta = reader.bytes();\n                                break;\n                            }\n                        case 21:\n                            {\n                                obj.rateLimitProof = RateLimitProof.codec().decode(reader, reader.uint32(), {\n                                    limits: opts.limits?.rateLimitProof\n                                });\n                                break;\n                            }\n                        case 31:\n                            {\n                                obj.ephemeral = reader.bool();\n                                break;\n                            }\n                        default:\n                            {\n                                reader.skipType(tag & 7);\n                                break;\n                            }\n                    }\n                }\n                return obj;\n            });\n        }\n        return _codec;\n    };\n    WakuMessage.encode = (obj)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.encodeMessage)(obj, WakuMessage.codec());\n    };\n    WakuMessage.decode = (buf, opts)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.decodeMessage)(buf, WakuMessage.codec(), opts);\n    };\n})(WakuMessage || (WakuMessage = {})); //# sourceMappingURL=filter.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/relay/node_modules/@waku/proto/dist/generated/filter.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/relay/node_modules/@waku/proto/dist/generated/filter_v2.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@waku/relay/node_modules/@waku/proto/dist/generated/filter_v2.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   FilterSubscribeRequest: () => (/* binding */ FilterSubscribeRequest),\n/* harmony export */   FilterSubscribeResponse: () => (/* binding */ FilterSubscribeResponse),\n/* harmony export */   MessagePush: () => (/* binding */ MessagePush),\n/* harmony export */   RateLimitProof: () => (/* binding */ RateLimitProof),\n/* harmony export */   WakuMessage: () => (/* binding */ WakuMessage)\n/* harmony export */ });\n/* harmony import */ var protons_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! protons-runtime */ \"(ssr)/./node_modules/protons-runtime/dist/src/index.js\");\n/* harmony import */ var uint8arrays_alloc__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! uint8arrays/alloc */ \"(ssr)/./node_modules/uint8arrays/dist/src/alloc.node.js\");\n/* eslint-disable import/export */ /* eslint-disable complexity */ /* eslint-disable @typescript-eslint/no-namespace */ /* eslint-disable @typescript-eslint/no-unnecessary-boolean-literal-compare */ /* eslint-disable @typescript-eslint/no-empty-interface */ \n\nvar FilterSubscribeRequest;\n(function(FilterSubscribeRequest) {\n    let FilterSubscribeType;\n    (function(FilterSubscribeType) {\n        FilterSubscribeType[\"SUBSCRIBER_PING\"] = \"SUBSCRIBER_PING\";\n        FilterSubscribeType[\"SUBSCRIBE\"] = \"SUBSCRIBE\";\n        FilterSubscribeType[\"UNSUBSCRIBE\"] = \"UNSUBSCRIBE\";\n        FilterSubscribeType[\"UNSUBSCRIBE_ALL\"] = \"UNSUBSCRIBE_ALL\";\n    })(FilterSubscribeType = FilterSubscribeRequest.FilterSubscribeType || (FilterSubscribeRequest.FilterSubscribeType = {}));\n    let __FilterSubscribeTypeValues;\n    (function(__FilterSubscribeTypeValues) {\n        __FilterSubscribeTypeValues[__FilterSubscribeTypeValues[\"SUBSCRIBER_PING\"] = 0] = \"SUBSCRIBER_PING\";\n        __FilterSubscribeTypeValues[__FilterSubscribeTypeValues[\"SUBSCRIBE\"] = 1] = \"SUBSCRIBE\";\n        __FilterSubscribeTypeValues[__FilterSubscribeTypeValues[\"UNSUBSCRIBE\"] = 2] = \"UNSUBSCRIBE\";\n        __FilterSubscribeTypeValues[__FilterSubscribeTypeValues[\"UNSUBSCRIBE_ALL\"] = 3] = \"UNSUBSCRIBE_ALL\";\n    })(__FilterSubscribeTypeValues || (__FilterSubscribeTypeValues = {}));\n    (function(FilterSubscribeType) {\n        FilterSubscribeType.codec = ()=>{\n            return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.enumeration)(__FilterSubscribeTypeValues);\n        };\n    })(FilterSubscribeType = FilterSubscribeRequest.FilterSubscribeType || (FilterSubscribeRequest.FilterSubscribeType = {}));\n    let _codec;\n    FilterSubscribeRequest.codec = ()=>{\n        if (_codec == null) {\n            _codec = (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.message)((obj, w, opts = {})=>{\n                if (opts.lengthDelimited !== false) {\n                    w.fork();\n                }\n                if (obj.requestId != null && obj.requestId !== \"\") {\n                    w.uint32(10);\n                    w.string(obj.requestId);\n                }\n                if (obj.filterSubscribeType != null && __FilterSubscribeTypeValues[obj.filterSubscribeType] !== 0) {\n                    w.uint32(16);\n                    FilterSubscribeRequest.FilterSubscribeType.codec().encode(obj.filterSubscribeType, w);\n                }\n                if (obj.pubsubTopic != null) {\n                    w.uint32(82);\n                    w.string(obj.pubsubTopic);\n                }\n                if (obj.contentTopics != null) {\n                    for (const value of obj.contentTopics){\n                        w.uint32(90);\n                        w.string(value);\n                    }\n                }\n                if (opts.lengthDelimited !== false) {\n                    w.ldelim();\n                }\n            }, (reader, length, opts = {})=>{\n                const obj = {\n                    requestId: \"\",\n                    filterSubscribeType: FilterSubscribeType.SUBSCRIBER_PING,\n                    contentTopics: []\n                };\n                const end = length == null ? reader.len : reader.pos + length;\n                while(reader.pos < end){\n                    const tag = reader.uint32();\n                    switch(tag >>> 3){\n                        case 1:\n                            {\n                                obj.requestId = reader.string();\n                                break;\n                            }\n                        case 2:\n                            {\n                                obj.filterSubscribeType = FilterSubscribeRequest.FilterSubscribeType.codec().decode(reader);\n                                break;\n                            }\n                        case 10:\n                            {\n                                obj.pubsubTopic = reader.string();\n                                break;\n                            }\n                        case 11:\n                            {\n                                if (opts.limits?.contentTopics != null && obj.contentTopics.length === opts.limits.contentTopics) {\n                                    throw new protons_runtime__WEBPACK_IMPORTED_MODULE_0__.CodeError('decode error - map field \"contentTopics\" had too many elements', \"ERR_MAX_LENGTH\");\n                                }\n                                obj.contentTopics.push(reader.string());\n                                break;\n                            }\n                        default:\n                            {\n                                reader.skipType(tag & 7);\n                                break;\n                            }\n                    }\n                }\n                return obj;\n            });\n        }\n        return _codec;\n    };\n    FilterSubscribeRequest.encode = (obj)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.encodeMessage)(obj, FilterSubscribeRequest.codec());\n    };\n    FilterSubscribeRequest.decode = (buf, opts)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.decodeMessage)(buf, FilterSubscribeRequest.codec(), opts);\n    };\n})(FilterSubscribeRequest || (FilterSubscribeRequest = {}));\nvar FilterSubscribeResponse;\n(function(FilterSubscribeResponse) {\n    let _codec;\n    FilterSubscribeResponse.codec = ()=>{\n        if (_codec == null) {\n            _codec = (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.message)((obj, w, opts = {})=>{\n                if (opts.lengthDelimited !== false) {\n                    w.fork();\n                }\n                if (obj.requestId != null && obj.requestId !== \"\") {\n                    w.uint32(10);\n                    w.string(obj.requestId);\n                }\n                if (obj.statusCode != null && obj.statusCode !== 0) {\n                    w.uint32(80);\n                    w.uint32(obj.statusCode);\n                }\n                if (obj.statusDesc != null) {\n                    w.uint32(90);\n                    w.string(obj.statusDesc);\n                }\n                if (opts.lengthDelimited !== false) {\n                    w.ldelim();\n                }\n            }, (reader, length, opts = {})=>{\n                const obj = {\n                    requestId: \"\",\n                    statusCode: 0\n                };\n                const end = length == null ? reader.len : reader.pos + length;\n                while(reader.pos < end){\n                    const tag = reader.uint32();\n                    switch(tag >>> 3){\n                        case 1:\n                            {\n                                obj.requestId = reader.string();\n                                break;\n                            }\n                        case 10:\n                            {\n                                obj.statusCode = reader.uint32();\n                                break;\n                            }\n                        case 11:\n                            {\n                                obj.statusDesc = reader.string();\n                                break;\n                            }\n                        default:\n                            {\n                                reader.skipType(tag & 7);\n                                break;\n                            }\n                    }\n                }\n                return obj;\n            });\n        }\n        return _codec;\n    };\n    FilterSubscribeResponse.encode = (obj)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.encodeMessage)(obj, FilterSubscribeResponse.codec());\n    };\n    FilterSubscribeResponse.decode = (buf, opts)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.decodeMessage)(buf, FilterSubscribeResponse.codec(), opts);\n    };\n})(FilterSubscribeResponse || (FilterSubscribeResponse = {}));\nvar MessagePush;\n(function(MessagePush) {\n    let _codec;\n    MessagePush.codec = ()=>{\n        if (_codec == null) {\n            _codec = (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.message)((obj, w, opts = {})=>{\n                if (opts.lengthDelimited !== false) {\n                    w.fork();\n                }\n                if (obj.wakuMessage != null) {\n                    w.uint32(10);\n                    WakuMessage.codec().encode(obj.wakuMessage, w);\n                }\n                if (obj.pubsubTopic != null) {\n                    w.uint32(18);\n                    w.string(obj.pubsubTopic);\n                }\n                if (opts.lengthDelimited !== false) {\n                    w.ldelim();\n                }\n            }, (reader, length, opts = {})=>{\n                const obj = {};\n                const end = length == null ? reader.len : reader.pos + length;\n                while(reader.pos < end){\n                    const tag = reader.uint32();\n                    switch(tag >>> 3){\n                        case 1:\n                            {\n                                obj.wakuMessage = WakuMessage.codec().decode(reader, reader.uint32(), {\n                                    limits: opts.limits?.wakuMessage\n                                });\n                                break;\n                            }\n                        case 2:\n                            {\n                                obj.pubsubTopic = reader.string();\n                                break;\n                            }\n                        default:\n                            {\n                                reader.skipType(tag & 7);\n                                break;\n                            }\n                    }\n                }\n                return obj;\n            });\n        }\n        return _codec;\n    };\n    MessagePush.encode = (obj)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.encodeMessage)(obj, MessagePush.codec());\n    };\n    MessagePush.decode = (buf, opts)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.decodeMessage)(buf, MessagePush.codec(), opts);\n    };\n})(MessagePush || (MessagePush = {}));\nvar RateLimitProof;\n(function(RateLimitProof) {\n    let _codec;\n    RateLimitProof.codec = ()=>{\n        if (_codec == null) {\n            _codec = (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.message)((obj, w, opts = {})=>{\n                if (opts.lengthDelimited !== false) {\n                    w.fork();\n                }\n                if (obj.proof != null && obj.proof.byteLength > 0) {\n                    w.uint32(10);\n                    w.bytes(obj.proof);\n                }\n                if (obj.merkleRoot != null && obj.merkleRoot.byteLength > 0) {\n                    w.uint32(18);\n                    w.bytes(obj.merkleRoot);\n                }\n                if (obj.epoch != null && obj.epoch.byteLength > 0) {\n                    w.uint32(26);\n                    w.bytes(obj.epoch);\n                }\n                if (obj.shareX != null && obj.shareX.byteLength > 0) {\n                    w.uint32(34);\n                    w.bytes(obj.shareX);\n                }\n                if (obj.shareY != null && obj.shareY.byteLength > 0) {\n                    w.uint32(42);\n                    w.bytes(obj.shareY);\n                }\n                if (obj.nullifier != null && obj.nullifier.byteLength > 0) {\n                    w.uint32(50);\n                    w.bytes(obj.nullifier);\n                }\n                if (obj.rlnIdentifier != null && obj.rlnIdentifier.byteLength > 0) {\n                    w.uint32(58);\n                    w.bytes(obj.rlnIdentifier);\n                }\n                if (opts.lengthDelimited !== false) {\n                    w.ldelim();\n                }\n            }, (reader, length, opts = {})=>{\n                const obj = {\n                    proof: (0,uint8arrays_alloc__WEBPACK_IMPORTED_MODULE_1__.alloc)(0),\n                    merkleRoot: (0,uint8arrays_alloc__WEBPACK_IMPORTED_MODULE_1__.alloc)(0),\n                    epoch: (0,uint8arrays_alloc__WEBPACK_IMPORTED_MODULE_1__.alloc)(0),\n                    shareX: (0,uint8arrays_alloc__WEBPACK_IMPORTED_MODULE_1__.alloc)(0),\n                    shareY: (0,uint8arrays_alloc__WEBPACK_IMPORTED_MODULE_1__.alloc)(0),\n                    nullifier: (0,uint8arrays_alloc__WEBPACK_IMPORTED_MODULE_1__.alloc)(0),\n                    rlnIdentifier: (0,uint8arrays_alloc__WEBPACK_IMPORTED_MODULE_1__.alloc)(0)\n                };\n                const end = length == null ? reader.len : reader.pos + length;\n                while(reader.pos < end){\n                    const tag = reader.uint32();\n                    switch(tag >>> 3){\n                        case 1:\n                            {\n                                obj.proof = reader.bytes();\n                                break;\n                            }\n                        case 2:\n                            {\n                                obj.merkleRoot = reader.bytes();\n                                break;\n                            }\n                        case 3:\n                            {\n                                obj.epoch = reader.bytes();\n                                break;\n                            }\n                        case 4:\n                            {\n                                obj.shareX = reader.bytes();\n                                break;\n                            }\n                        case 5:\n                            {\n                                obj.shareY = reader.bytes();\n                                break;\n                            }\n                        case 6:\n                            {\n                                obj.nullifier = reader.bytes();\n                                break;\n                            }\n                        case 7:\n                            {\n                                obj.rlnIdentifier = reader.bytes();\n                                break;\n                            }\n                        default:\n                            {\n                                reader.skipType(tag & 7);\n                                break;\n                            }\n                    }\n                }\n                return obj;\n            });\n        }\n        return _codec;\n    };\n    RateLimitProof.encode = (obj)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.encodeMessage)(obj, RateLimitProof.codec());\n    };\n    RateLimitProof.decode = (buf, opts)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.decodeMessage)(buf, RateLimitProof.codec(), opts);\n    };\n})(RateLimitProof || (RateLimitProof = {}));\nvar WakuMessage;\n(function(WakuMessage) {\n    let _codec;\n    WakuMessage.codec = ()=>{\n        if (_codec == null) {\n            _codec = (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.message)((obj, w, opts = {})=>{\n                if (opts.lengthDelimited !== false) {\n                    w.fork();\n                }\n                if (obj.payload != null && obj.payload.byteLength > 0) {\n                    w.uint32(10);\n                    w.bytes(obj.payload);\n                }\n                if (obj.contentTopic != null && obj.contentTopic !== \"\") {\n                    w.uint32(18);\n                    w.string(obj.contentTopic);\n                }\n                if (obj.version != null) {\n                    w.uint32(24);\n                    w.uint32(obj.version);\n                }\n                if (obj.timestamp != null) {\n                    w.uint32(80);\n                    w.sint64(obj.timestamp);\n                }\n                if (obj.meta != null) {\n                    w.uint32(90);\n                    w.bytes(obj.meta);\n                }\n                if (obj.rateLimitProof != null) {\n                    w.uint32(170);\n                    RateLimitProof.codec().encode(obj.rateLimitProof, w);\n                }\n                if (obj.ephemeral != null) {\n                    w.uint32(248);\n                    w.bool(obj.ephemeral);\n                }\n                if (opts.lengthDelimited !== false) {\n                    w.ldelim();\n                }\n            }, (reader, length, opts = {})=>{\n                const obj = {\n                    payload: (0,uint8arrays_alloc__WEBPACK_IMPORTED_MODULE_1__.alloc)(0),\n                    contentTopic: \"\"\n                };\n                const end = length == null ? reader.len : reader.pos + length;\n                while(reader.pos < end){\n                    const tag = reader.uint32();\n                    switch(tag >>> 3){\n                        case 1:\n                            {\n                                obj.payload = reader.bytes();\n                                break;\n                            }\n                        case 2:\n                            {\n                                obj.contentTopic = reader.string();\n                                break;\n                            }\n                        case 3:\n                            {\n                                obj.version = reader.uint32();\n                                break;\n                            }\n                        case 10:\n                            {\n                                obj.timestamp = reader.sint64();\n                                break;\n                            }\n                        case 11:\n                            {\n                                obj.meta = reader.bytes();\n                                break;\n                            }\n                        case 21:\n                            {\n                                obj.rateLimitProof = RateLimitProof.codec().decode(reader, reader.uint32(), {\n                                    limits: opts.limits?.rateLimitProof\n                                });\n                                break;\n                            }\n                        case 31:\n                            {\n                                obj.ephemeral = reader.bool();\n                                break;\n                            }\n                        default:\n                            {\n                                reader.skipType(tag & 7);\n                                break;\n                            }\n                    }\n                }\n                return obj;\n            });\n        }\n        return _codec;\n    };\n    WakuMessage.encode = (obj)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.encodeMessage)(obj, WakuMessage.codec());\n    };\n    WakuMessage.decode = (buf, opts)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.decodeMessage)(buf, WakuMessage.codec(), opts);\n    };\n})(WakuMessage || (WakuMessage = {})); //# sourceMappingURL=filter_v2.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/relay/node_modules/@waku/proto/dist/generated/filter_v2.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/relay/node_modules/@waku/proto/dist/generated/light_push.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@waku/relay/node_modules/@waku/proto/dist/generated/light_push.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PushRequest: () => (/* binding */ PushRequest),\n/* harmony export */   PushResponse: () => (/* binding */ PushResponse),\n/* harmony export */   PushRpc: () => (/* binding */ PushRpc),\n/* harmony export */   RateLimitProof: () => (/* binding */ RateLimitProof),\n/* harmony export */   WakuMessage: () => (/* binding */ WakuMessage)\n/* harmony export */ });\n/* harmony import */ var protons_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! protons-runtime */ \"(ssr)/./node_modules/protons-runtime/dist/src/index.js\");\n/* harmony import */ var uint8arrays_alloc__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! uint8arrays/alloc */ \"(ssr)/./node_modules/uint8arrays/dist/src/alloc.node.js\");\n/* eslint-disable import/export */ /* eslint-disable complexity */ /* eslint-disable @typescript-eslint/no-namespace */ /* eslint-disable @typescript-eslint/no-unnecessary-boolean-literal-compare */ /* eslint-disable @typescript-eslint/no-empty-interface */ \n\nvar PushRequest;\n(function(PushRequest) {\n    let _codec;\n    PushRequest.codec = ()=>{\n        if (_codec == null) {\n            _codec = (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.message)((obj, w, opts = {})=>{\n                if (opts.lengthDelimited !== false) {\n                    w.fork();\n                }\n                if (obj.pubsubTopic != null && obj.pubsubTopic !== \"\") {\n                    w.uint32(10);\n                    w.string(obj.pubsubTopic);\n                }\n                if (obj.message != null) {\n                    w.uint32(18);\n                    WakuMessage.codec().encode(obj.message, w);\n                }\n                if (opts.lengthDelimited !== false) {\n                    w.ldelim();\n                }\n            }, (reader, length, opts = {})=>{\n                const obj = {\n                    pubsubTopic: \"\"\n                };\n                const end = length == null ? reader.len : reader.pos + length;\n                while(reader.pos < end){\n                    const tag = reader.uint32();\n                    switch(tag >>> 3){\n                        case 1:\n                            {\n                                obj.pubsubTopic = reader.string();\n                                break;\n                            }\n                        case 2:\n                            {\n                                obj.message = WakuMessage.codec().decode(reader, reader.uint32(), {\n                                    limits: opts.limits?.message\n                                });\n                                break;\n                            }\n                        default:\n                            {\n                                reader.skipType(tag & 7);\n                                break;\n                            }\n                    }\n                }\n                return obj;\n            });\n        }\n        return _codec;\n    };\n    PushRequest.encode = (obj)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.encodeMessage)(obj, PushRequest.codec());\n    };\n    PushRequest.decode = (buf, opts)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.decodeMessage)(buf, PushRequest.codec(), opts);\n    };\n})(PushRequest || (PushRequest = {}));\nvar PushResponse;\n(function(PushResponse) {\n    let _codec;\n    PushResponse.codec = ()=>{\n        if (_codec == null) {\n            _codec = (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.message)((obj, w, opts = {})=>{\n                if (opts.lengthDelimited !== false) {\n                    w.fork();\n                }\n                if (obj.isSuccess != null && obj.isSuccess !== false) {\n                    w.uint32(8);\n                    w.bool(obj.isSuccess);\n                }\n                if (obj.info != null) {\n                    w.uint32(18);\n                    w.string(obj.info);\n                }\n                if (opts.lengthDelimited !== false) {\n                    w.ldelim();\n                }\n            }, (reader, length, opts = {})=>{\n                const obj = {\n                    isSuccess: false\n                };\n                const end = length == null ? reader.len : reader.pos + length;\n                while(reader.pos < end){\n                    const tag = reader.uint32();\n                    switch(tag >>> 3){\n                        case 1:\n                            {\n                                obj.isSuccess = reader.bool();\n                                break;\n                            }\n                        case 2:\n                            {\n                                obj.info = reader.string();\n                                break;\n                            }\n                        default:\n                            {\n                                reader.skipType(tag & 7);\n                                break;\n                            }\n                    }\n                }\n                return obj;\n            });\n        }\n        return _codec;\n    };\n    PushResponse.encode = (obj)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.encodeMessage)(obj, PushResponse.codec());\n    };\n    PushResponse.decode = (buf, opts)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.decodeMessage)(buf, PushResponse.codec(), opts);\n    };\n})(PushResponse || (PushResponse = {}));\nvar PushRpc;\n(function(PushRpc) {\n    let _codec;\n    PushRpc.codec = ()=>{\n        if (_codec == null) {\n            _codec = (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.message)((obj, w, opts = {})=>{\n                if (opts.lengthDelimited !== false) {\n                    w.fork();\n                }\n                if (obj.requestId != null && obj.requestId !== \"\") {\n                    w.uint32(10);\n                    w.string(obj.requestId);\n                }\n                if (obj.request != null) {\n                    w.uint32(18);\n                    PushRequest.codec().encode(obj.request, w);\n                }\n                if (obj.response != null) {\n                    w.uint32(26);\n                    PushResponse.codec().encode(obj.response, w);\n                }\n                if (opts.lengthDelimited !== false) {\n                    w.ldelim();\n                }\n            }, (reader, length, opts = {})=>{\n                const obj = {\n                    requestId: \"\"\n                };\n                const end = length == null ? reader.len : reader.pos + length;\n                while(reader.pos < end){\n                    const tag = reader.uint32();\n                    switch(tag >>> 3){\n                        case 1:\n                            {\n                                obj.requestId = reader.string();\n                                break;\n                            }\n                        case 2:\n                            {\n                                obj.request = PushRequest.codec().decode(reader, reader.uint32(), {\n                                    limits: opts.limits?.request\n                                });\n                                break;\n                            }\n                        case 3:\n                            {\n                                obj.response = PushResponse.codec().decode(reader, reader.uint32(), {\n                                    limits: opts.limits?.response\n                                });\n                                break;\n                            }\n                        default:\n                            {\n                                reader.skipType(tag & 7);\n                                break;\n                            }\n                    }\n                }\n                return obj;\n            });\n        }\n        return _codec;\n    };\n    PushRpc.encode = (obj)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.encodeMessage)(obj, PushRpc.codec());\n    };\n    PushRpc.decode = (buf, opts)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.decodeMessage)(buf, PushRpc.codec(), opts);\n    };\n})(PushRpc || (PushRpc = {}));\nvar RateLimitProof;\n(function(RateLimitProof) {\n    let _codec;\n    RateLimitProof.codec = ()=>{\n        if (_codec == null) {\n            _codec = (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.message)((obj, w, opts = {})=>{\n                if (opts.lengthDelimited !== false) {\n                    w.fork();\n                }\n                if (obj.proof != null && obj.proof.byteLength > 0) {\n                    w.uint32(10);\n                    w.bytes(obj.proof);\n                }\n                if (obj.merkleRoot != null && obj.merkleRoot.byteLength > 0) {\n                    w.uint32(18);\n                    w.bytes(obj.merkleRoot);\n                }\n                if (obj.epoch != null && obj.epoch.byteLength > 0) {\n                    w.uint32(26);\n                    w.bytes(obj.epoch);\n                }\n                if (obj.shareX != null && obj.shareX.byteLength > 0) {\n                    w.uint32(34);\n                    w.bytes(obj.shareX);\n                }\n                if (obj.shareY != null && obj.shareY.byteLength > 0) {\n                    w.uint32(42);\n                    w.bytes(obj.shareY);\n                }\n                if (obj.nullifier != null && obj.nullifier.byteLength > 0) {\n                    w.uint32(50);\n                    w.bytes(obj.nullifier);\n                }\n                if (obj.rlnIdentifier != null && obj.rlnIdentifier.byteLength > 0) {\n                    w.uint32(58);\n                    w.bytes(obj.rlnIdentifier);\n                }\n                if (opts.lengthDelimited !== false) {\n                    w.ldelim();\n                }\n            }, (reader, length, opts = {})=>{\n                const obj = {\n                    proof: (0,uint8arrays_alloc__WEBPACK_IMPORTED_MODULE_1__.alloc)(0),\n                    merkleRoot: (0,uint8arrays_alloc__WEBPACK_IMPORTED_MODULE_1__.alloc)(0),\n                    epoch: (0,uint8arrays_alloc__WEBPACK_IMPORTED_MODULE_1__.alloc)(0),\n                    shareX: (0,uint8arrays_alloc__WEBPACK_IMPORTED_MODULE_1__.alloc)(0),\n                    shareY: (0,uint8arrays_alloc__WEBPACK_IMPORTED_MODULE_1__.alloc)(0),\n                    nullifier: (0,uint8arrays_alloc__WEBPACK_IMPORTED_MODULE_1__.alloc)(0),\n                    rlnIdentifier: (0,uint8arrays_alloc__WEBPACK_IMPORTED_MODULE_1__.alloc)(0)\n                };\n                const end = length == null ? reader.len : reader.pos + length;\n                while(reader.pos < end){\n                    const tag = reader.uint32();\n                    switch(tag >>> 3){\n                        case 1:\n                            {\n                                obj.proof = reader.bytes();\n                                break;\n                            }\n                        case 2:\n                            {\n                                obj.merkleRoot = reader.bytes();\n                                break;\n                            }\n                        case 3:\n                            {\n                                obj.epoch = reader.bytes();\n                                break;\n                            }\n                        case 4:\n                            {\n                                obj.shareX = reader.bytes();\n                                break;\n                            }\n                        case 5:\n                            {\n                                obj.shareY = reader.bytes();\n                                break;\n                            }\n                        case 6:\n                            {\n                                obj.nullifier = reader.bytes();\n                                break;\n                            }\n                        case 7:\n                            {\n                                obj.rlnIdentifier = reader.bytes();\n                                break;\n                            }\n                        default:\n                            {\n                                reader.skipType(tag & 7);\n                                break;\n                            }\n                    }\n                }\n                return obj;\n            });\n        }\n        return _codec;\n    };\n    RateLimitProof.encode = (obj)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.encodeMessage)(obj, RateLimitProof.codec());\n    };\n    RateLimitProof.decode = (buf, opts)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.decodeMessage)(buf, RateLimitProof.codec(), opts);\n    };\n})(RateLimitProof || (RateLimitProof = {}));\nvar WakuMessage;\n(function(WakuMessage) {\n    let _codec;\n    WakuMessage.codec = ()=>{\n        if (_codec == null) {\n            _codec = (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.message)((obj, w, opts = {})=>{\n                if (opts.lengthDelimited !== false) {\n                    w.fork();\n                }\n                if (obj.payload != null && obj.payload.byteLength > 0) {\n                    w.uint32(10);\n                    w.bytes(obj.payload);\n                }\n                if (obj.contentTopic != null && obj.contentTopic !== \"\") {\n                    w.uint32(18);\n                    w.string(obj.contentTopic);\n                }\n                if (obj.version != null) {\n                    w.uint32(24);\n                    w.uint32(obj.version);\n                }\n                if (obj.timestamp != null) {\n                    w.uint32(80);\n                    w.sint64(obj.timestamp);\n                }\n                if (obj.meta != null) {\n                    w.uint32(90);\n                    w.bytes(obj.meta);\n                }\n                if (obj.rateLimitProof != null) {\n                    w.uint32(170);\n                    RateLimitProof.codec().encode(obj.rateLimitProof, w);\n                }\n                if (obj.ephemeral != null) {\n                    w.uint32(248);\n                    w.bool(obj.ephemeral);\n                }\n                if (opts.lengthDelimited !== false) {\n                    w.ldelim();\n                }\n            }, (reader, length, opts = {})=>{\n                const obj = {\n                    payload: (0,uint8arrays_alloc__WEBPACK_IMPORTED_MODULE_1__.alloc)(0),\n                    contentTopic: \"\"\n                };\n                const end = length == null ? reader.len : reader.pos + length;\n                while(reader.pos < end){\n                    const tag = reader.uint32();\n                    switch(tag >>> 3){\n                        case 1:\n                            {\n                                obj.payload = reader.bytes();\n                                break;\n                            }\n                        case 2:\n                            {\n                                obj.contentTopic = reader.string();\n                                break;\n                            }\n                        case 3:\n                            {\n                                obj.version = reader.uint32();\n                                break;\n                            }\n                        case 10:\n                            {\n                                obj.timestamp = reader.sint64();\n                                break;\n                            }\n                        case 11:\n                            {\n                                obj.meta = reader.bytes();\n                                break;\n                            }\n                        case 21:\n                            {\n                                obj.rateLimitProof = RateLimitProof.codec().decode(reader, reader.uint32(), {\n                                    limits: opts.limits?.rateLimitProof\n                                });\n                                break;\n                            }\n                        case 31:\n                            {\n                                obj.ephemeral = reader.bool();\n                                break;\n                            }\n                        default:\n                            {\n                                reader.skipType(tag & 7);\n                                break;\n                            }\n                    }\n                }\n                return obj;\n            });\n        }\n        return _codec;\n    };\n    WakuMessage.encode = (obj)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.encodeMessage)(obj, WakuMessage.codec());\n    };\n    WakuMessage.decode = (buf, opts)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.decodeMessage)(buf, WakuMessage.codec(), opts);\n    };\n})(WakuMessage || (WakuMessage = {})); //# sourceMappingURL=light_push.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/relay/node_modules/@waku/proto/dist/generated/light_push.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/relay/node_modules/@waku/proto/dist/generated/message.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@waku/relay/node_modules/@waku/proto/dist/generated/message.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RateLimitProof: () => (/* binding */ RateLimitProof),\n/* harmony export */   WakuMessage: () => (/* binding */ WakuMessage)\n/* harmony export */ });\n/* harmony import */ var protons_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! protons-runtime */ \"(ssr)/./node_modules/protons-runtime/dist/src/index.js\");\n/* harmony import */ var uint8arrays_alloc__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! uint8arrays/alloc */ \"(ssr)/./node_modules/uint8arrays/dist/src/alloc.node.js\");\n/* eslint-disable import/export */ /* eslint-disable complexity */ /* eslint-disable @typescript-eslint/no-namespace */ /* eslint-disable @typescript-eslint/no-unnecessary-boolean-literal-compare */ /* eslint-disable @typescript-eslint/no-empty-interface */ \n\nvar RateLimitProof;\n(function(RateLimitProof) {\n    let _codec;\n    RateLimitProof.codec = ()=>{\n        if (_codec == null) {\n            _codec = (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.message)((obj, w, opts = {})=>{\n                if (opts.lengthDelimited !== false) {\n                    w.fork();\n                }\n                if (obj.proof != null && obj.proof.byteLength > 0) {\n                    w.uint32(10);\n                    w.bytes(obj.proof);\n                }\n                if (obj.merkleRoot != null && obj.merkleRoot.byteLength > 0) {\n                    w.uint32(18);\n                    w.bytes(obj.merkleRoot);\n                }\n                if (obj.epoch != null && obj.epoch.byteLength > 0) {\n                    w.uint32(26);\n                    w.bytes(obj.epoch);\n                }\n                if (obj.shareX != null && obj.shareX.byteLength > 0) {\n                    w.uint32(34);\n                    w.bytes(obj.shareX);\n                }\n                if (obj.shareY != null && obj.shareY.byteLength > 0) {\n                    w.uint32(42);\n                    w.bytes(obj.shareY);\n                }\n                if (obj.nullifier != null && obj.nullifier.byteLength > 0) {\n                    w.uint32(50);\n                    w.bytes(obj.nullifier);\n                }\n                if (obj.rlnIdentifier != null && obj.rlnIdentifier.byteLength > 0) {\n                    w.uint32(58);\n                    w.bytes(obj.rlnIdentifier);\n                }\n                if (opts.lengthDelimited !== false) {\n                    w.ldelim();\n                }\n            }, (reader, length, opts = {})=>{\n                const obj = {\n                    proof: (0,uint8arrays_alloc__WEBPACK_IMPORTED_MODULE_1__.alloc)(0),\n                    merkleRoot: (0,uint8arrays_alloc__WEBPACK_IMPORTED_MODULE_1__.alloc)(0),\n                    epoch: (0,uint8arrays_alloc__WEBPACK_IMPORTED_MODULE_1__.alloc)(0),\n                    shareX: (0,uint8arrays_alloc__WEBPACK_IMPORTED_MODULE_1__.alloc)(0),\n                    shareY: (0,uint8arrays_alloc__WEBPACK_IMPORTED_MODULE_1__.alloc)(0),\n                    nullifier: (0,uint8arrays_alloc__WEBPACK_IMPORTED_MODULE_1__.alloc)(0),\n                    rlnIdentifier: (0,uint8arrays_alloc__WEBPACK_IMPORTED_MODULE_1__.alloc)(0)\n                };\n                const end = length == null ? reader.len : reader.pos + length;\n                while(reader.pos < end){\n                    const tag = reader.uint32();\n                    switch(tag >>> 3){\n                        case 1:\n                            {\n                                obj.proof = reader.bytes();\n                                break;\n                            }\n                        case 2:\n                            {\n                                obj.merkleRoot = reader.bytes();\n                                break;\n                            }\n                        case 3:\n                            {\n                                obj.epoch = reader.bytes();\n                                break;\n                            }\n                        case 4:\n                            {\n                                obj.shareX = reader.bytes();\n                                break;\n                            }\n                        case 5:\n                            {\n                                obj.shareY = reader.bytes();\n                                break;\n                            }\n                        case 6:\n                            {\n                                obj.nullifier = reader.bytes();\n                                break;\n                            }\n                        case 7:\n                            {\n                                obj.rlnIdentifier = reader.bytes();\n                                break;\n                            }\n                        default:\n                            {\n                                reader.skipType(tag & 7);\n                                break;\n                            }\n                    }\n                }\n                return obj;\n            });\n        }\n        return _codec;\n    };\n    RateLimitProof.encode = (obj)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.encodeMessage)(obj, RateLimitProof.codec());\n    };\n    RateLimitProof.decode = (buf, opts)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.decodeMessage)(buf, RateLimitProof.codec(), opts);\n    };\n})(RateLimitProof || (RateLimitProof = {}));\nvar WakuMessage;\n(function(WakuMessage) {\n    let _codec;\n    WakuMessage.codec = ()=>{\n        if (_codec == null) {\n            _codec = (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.message)((obj, w, opts = {})=>{\n                if (opts.lengthDelimited !== false) {\n                    w.fork();\n                }\n                if (obj.payload != null && obj.payload.byteLength > 0) {\n                    w.uint32(10);\n                    w.bytes(obj.payload);\n                }\n                if (obj.contentTopic != null && obj.contentTopic !== \"\") {\n                    w.uint32(18);\n                    w.string(obj.contentTopic);\n                }\n                if (obj.version != null) {\n                    w.uint32(24);\n                    w.uint32(obj.version);\n                }\n                if (obj.timestamp != null) {\n                    w.uint32(80);\n                    w.sint64(obj.timestamp);\n                }\n                if (obj.meta != null) {\n                    w.uint32(90);\n                    w.bytes(obj.meta);\n                }\n                if (obj.rateLimitProof != null) {\n                    w.uint32(170);\n                    RateLimitProof.codec().encode(obj.rateLimitProof, w);\n                }\n                if (obj.ephemeral != null) {\n                    w.uint32(248);\n                    w.bool(obj.ephemeral);\n                }\n                if (opts.lengthDelimited !== false) {\n                    w.ldelim();\n                }\n            }, (reader, length, opts = {})=>{\n                const obj = {\n                    payload: (0,uint8arrays_alloc__WEBPACK_IMPORTED_MODULE_1__.alloc)(0),\n                    contentTopic: \"\"\n                };\n                const end = length == null ? reader.len : reader.pos + length;\n                while(reader.pos < end){\n                    const tag = reader.uint32();\n                    switch(tag >>> 3){\n                        case 1:\n                            {\n                                obj.payload = reader.bytes();\n                                break;\n                            }\n                        case 2:\n                            {\n                                obj.contentTopic = reader.string();\n                                break;\n                            }\n                        case 3:\n                            {\n                                obj.version = reader.uint32();\n                                break;\n                            }\n                        case 10:\n                            {\n                                obj.timestamp = reader.sint64();\n                                break;\n                            }\n                        case 11:\n                            {\n                                obj.meta = reader.bytes();\n                                break;\n                            }\n                        case 21:\n                            {\n                                obj.rateLimitProof = RateLimitProof.codec().decode(reader, reader.uint32(), {\n                                    limits: opts.limits?.rateLimitProof\n                                });\n                                break;\n                            }\n                        case 31:\n                            {\n                                obj.ephemeral = reader.bool();\n                                break;\n                            }\n                        default:\n                            {\n                                reader.skipType(tag & 7);\n                                break;\n                            }\n                    }\n                }\n                return obj;\n            });\n        }\n        return _codec;\n    };\n    WakuMessage.encode = (obj)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.encodeMessage)(obj, WakuMessage.codec());\n    };\n    WakuMessage.decode = (buf, opts)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.decodeMessage)(buf, WakuMessage.codec(), opts);\n    };\n})(WakuMessage || (WakuMessage = {})); //# sourceMappingURL=message.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/relay/node_modules/@waku/proto/dist/generated/message.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/relay/node_modules/@waku/proto/dist/generated/metadata.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@waku/relay/node_modules/@waku/proto/dist/generated/metadata.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   WakuMetadataRequest: () => (/* binding */ WakuMetadataRequest),\n/* harmony export */   WakuMetadataResponse: () => (/* binding */ WakuMetadataResponse)\n/* harmony export */ });\n/* harmony import */ var protons_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! protons-runtime */ \"(ssr)/./node_modules/protons-runtime/dist/src/index.js\");\n/* eslint-disable import/export */ /* eslint-disable complexity */ /* eslint-disable @typescript-eslint/no-namespace */ /* eslint-disable @typescript-eslint/no-unnecessary-boolean-literal-compare */ /* eslint-disable @typescript-eslint/no-empty-interface */ \nvar WakuMetadataRequest;\n(function(WakuMetadataRequest) {\n    let _codec;\n    WakuMetadataRequest.codec = ()=>{\n        if (_codec == null) {\n            _codec = (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.message)((obj, w, opts = {})=>{\n                if (opts.lengthDelimited !== false) {\n                    w.fork();\n                }\n                if (obj.clusterId != null) {\n                    w.uint32(8);\n                    w.uint32(obj.clusterId);\n                }\n                if (obj.shards != null) {\n                    for (const value of obj.shards){\n                        w.uint32(16);\n                        w.uint32(value);\n                    }\n                }\n                if (opts.lengthDelimited !== false) {\n                    w.ldelim();\n                }\n            }, (reader, length, opts = {})=>{\n                const obj = {\n                    shards: []\n                };\n                const end = length == null ? reader.len : reader.pos + length;\n                while(reader.pos < end){\n                    const tag = reader.uint32();\n                    switch(tag >>> 3){\n                        case 1:\n                            {\n                                obj.clusterId = reader.uint32();\n                                break;\n                            }\n                        case 2:\n                            {\n                                if (opts.limits?.shards != null && obj.shards.length === opts.limits.shards) {\n                                    throw new protons_runtime__WEBPACK_IMPORTED_MODULE_0__.CodeError('decode error - map field \"shards\" had too many elements', \"ERR_MAX_LENGTH\");\n                                }\n                                obj.shards.push(reader.uint32());\n                                break;\n                            }\n                        default:\n                            {\n                                reader.skipType(tag & 7);\n                                break;\n                            }\n                    }\n                }\n                return obj;\n            });\n        }\n        return _codec;\n    };\n    WakuMetadataRequest.encode = (obj)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.encodeMessage)(obj, WakuMetadataRequest.codec());\n    };\n    WakuMetadataRequest.decode = (buf, opts)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.decodeMessage)(buf, WakuMetadataRequest.codec(), opts);\n    };\n})(WakuMetadataRequest || (WakuMetadataRequest = {}));\nvar WakuMetadataResponse;\n(function(WakuMetadataResponse) {\n    let _codec;\n    WakuMetadataResponse.codec = ()=>{\n        if (_codec == null) {\n            _codec = (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.message)((obj, w, opts = {})=>{\n                if (opts.lengthDelimited !== false) {\n                    w.fork();\n                }\n                if (obj.clusterId != null) {\n                    w.uint32(8);\n                    w.uint32(obj.clusterId);\n                }\n                if (obj.shards != null) {\n                    for (const value of obj.shards){\n                        w.uint32(16);\n                        w.uint32(value);\n                    }\n                }\n                if (opts.lengthDelimited !== false) {\n                    w.ldelim();\n                }\n            }, (reader, length, opts = {})=>{\n                const obj = {\n                    shards: []\n                };\n                const end = length == null ? reader.len : reader.pos + length;\n                while(reader.pos < end){\n                    const tag = reader.uint32();\n                    switch(tag >>> 3){\n                        case 1:\n                            {\n                                obj.clusterId = reader.uint32();\n                                break;\n                            }\n                        case 2:\n                            {\n                                if (opts.limits?.shards != null && obj.shards.length === opts.limits.shards) {\n                                    throw new protons_runtime__WEBPACK_IMPORTED_MODULE_0__.CodeError('decode error - map field \"shards\" had too many elements', \"ERR_MAX_LENGTH\");\n                                }\n                                obj.shards.push(reader.uint32());\n                                break;\n                            }\n                        default:\n                            {\n                                reader.skipType(tag & 7);\n                                break;\n                            }\n                    }\n                }\n                return obj;\n            });\n        }\n        return _codec;\n    };\n    WakuMetadataResponse.encode = (obj)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.encodeMessage)(obj, WakuMetadataResponse.codec());\n    };\n    WakuMetadataResponse.decode = (buf, opts)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.decodeMessage)(buf, WakuMetadataResponse.codec(), opts);\n    };\n})(WakuMetadataResponse || (WakuMetadataResponse = {})); //# sourceMappingURL=metadata.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/relay/node_modules/@waku/proto/dist/generated/metadata.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/relay/node_modules/@waku/proto/dist/generated/peer_exchange.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@waku/relay/node_modules/@waku/proto/dist/generated/peer_exchange.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PeerExchangeQuery: () => (/* binding */ PeerExchangeQuery),\n/* harmony export */   PeerExchangeRPC: () => (/* binding */ PeerExchangeRPC),\n/* harmony export */   PeerExchangeResponse: () => (/* binding */ PeerExchangeResponse),\n/* harmony export */   PeerInfo: () => (/* binding */ PeerInfo)\n/* harmony export */ });\n/* harmony import */ var protons_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! protons-runtime */ \"(ssr)/./node_modules/protons-runtime/dist/src/index.js\");\n/* eslint-disable import/export */ /* eslint-disable complexity */ /* eslint-disable @typescript-eslint/no-namespace */ /* eslint-disable @typescript-eslint/no-unnecessary-boolean-literal-compare */ /* eslint-disable @typescript-eslint/no-empty-interface */ \nvar PeerInfo;\n(function(PeerInfo) {\n    let _codec;\n    PeerInfo.codec = ()=>{\n        if (_codec == null) {\n            _codec = (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.message)((obj, w, opts = {})=>{\n                if (opts.lengthDelimited !== false) {\n                    w.fork();\n                }\n                if (obj.enr != null) {\n                    w.uint32(10);\n                    w.bytes(obj.enr);\n                }\n                if (opts.lengthDelimited !== false) {\n                    w.ldelim();\n                }\n            }, (reader, length, opts = {})=>{\n                const obj = {};\n                const end = length == null ? reader.len : reader.pos + length;\n                while(reader.pos < end){\n                    const tag = reader.uint32();\n                    switch(tag >>> 3){\n                        case 1:\n                            {\n                                obj.enr = reader.bytes();\n                                break;\n                            }\n                        default:\n                            {\n                                reader.skipType(tag & 7);\n                                break;\n                            }\n                    }\n                }\n                return obj;\n            });\n        }\n        return _codec;\n    };\n    PeerInfo.encode = (obj)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.encodeMessage)(obj, PeerInfo.codec());\n    };\n    PeerInfo.decode = (buf, opts)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.decodeMessage)(buf, PeerInfo.codec(), opts);\n    };\n})(PeerInfo || (PeerInfo = {}));\nvar PeerExchangeQuery;\n(function(PeerExchangeQuery) {\n    let _codec;\n    PeerExchangeQuery.codec = ()=>{\n        if (_codec == null) {\n            _codec = (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.message)((obj, w, opts = {})=>{\n                if (opts.lengthDelimited !== false) {\n                    w.fork();\n                }\n                if (obj.numPeers != null) {\n                    w.uint32(8);\n                    w.uint64(obj.numPeers);\n                }\n                if (opts.lengthDelimited !== false) {\n                    w.ldelim();\n                }\n            }, (reader, length, opts = {})=>{\n                const obj = {};\n                const end = length == null ? reader.len : reader.pos + length;\n                while(reader.pos < end){\n                    const tag = reader.uint32();\n                    switch(tag >>> 3){\n                        case 1:\n                            {\n                                obj.numPeers = reader.uint64();\n                                break;\n                            }\n                        default:\n                            {\n                                reader.skipType(tag & 7);\n                                break;\n                            }\n                    }\n                }\n                return obj;\n            });\n        }\n        return _codec;\n    };\n    PeerExchangeQuery.encode = (obj)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.encodeMessage)(obj, PeerExchangeQuery.codec());\n    };\n    PeerExchangeQuery.decode = (buf, opts)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.decodeMessage)(buf, PeerExchangeQuery.codec(), opts);\n    };\n})(PeerExchangeQuery || (PeerExchangeQuery = {}));\nvar PeerExchangeResponse;\n(function(PeerExchangeResponse) {\n    let _codec;\n    PeerExchangeResponse.codec = ()=>{\n        if (_codec == null) {\n            _codec = (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.message)((obj, w, opts = {})=>{\n                if (opts.lengthDelimited !== false) {\n                    w.fork();\n                }\n                if (obj.peerInfos != null) {\n                    for (const value of obj.peerInfos){\n                        w.uint32(10);\n                        PeerInfo.codec().encode(value, w);\n                    }\n                }\n                if (opts.lengthDelimited !== false) {\n                    w.ldelim();\n                }\n            }, (reader, length, opts = {})=>{\n                const obj = {\n                    peerInfos: []\n                };\n                const end = length == null ? reader.len : reader.pos + length;\n                while(reader.pos < end){\n                    const tag = reader.uint32();\n                    switch(tag >>> 3){\n                        case 1:\n                            {\n                                if (opts.limits?.peerInfos != null && obj.peerInfos.length === opts.limits.peerInfos) {\n                                    throw new protons_runtime__WEBPACK_IMPORTED_MODULE_0__.CodeError('decode error - map field \"peerInfos\" had too many elements', \"ERR_MAX_LENGTH\");\n                                }\n                                obj.peerInfos.push(PeerInfo.codec().decode(reader, reader.uint32(), {\n                                    limits: opts.limits?.peerInfos$\n                                }));\n                                break;\n                            }\n                        default:\n                            {\n                                reader.skipType(tag & 7);\n                                break;\n                            }\n                    }\n                }\n                return obj;\n            });\n        }\n        return _codec;\n    };\n    PeerExchangeResponse.encode = (obj)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.encodeMessage)(obj, PeerExchangeResponse.codec());\n    };\n    PeerExchangeResponse.decode = (buf, opts)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.decodeMessage)(buf, PeerExchangeResponse.codec(), opts);\n    };\n})(PeerExchangeResponse || (PeerExchangeResponse = {}));\nvar PeerExchangeRPC;\n(function(PeerExchangeRPC) {\n    let _codec;\n    PeerExchangeRPC.codec = ()=>{\n        if (_codec == null) {\n            _codec = (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.message)((obj, w, opts = {})=>{\n                if (opts.lengthDelimited !== false) {\n                    w.fork();\n                }\n                if (obj.query != null) {\n                    w.uint32(10);\n                    PeerExchangeQuery.codec().encode(obj.query, w);\n                }\n                if (obj.response != null) {\n                    w.uint32(18);\n                    PeerExchangeResponse.codec().encode(obj.response, w);\n                }\n                if (opts.lengthDelimited !== false) {\n                    w.ldelim();\n                }\n            }, (reader, length, opts = {})=>{\n                const obj = {};\n                const end = length == null ? reader.len : reader.pos + length;\n                while(reader.pos < end){\n                    const tag = reader.uint32();\n                    switch(tag >>> 3){\n                        case 1:\n                            {\n                                obj.query = PeerExchangeQuery.codec().decode(reader, reader.uint32(), {\n                                    limits: opts.limits?.query\n                                });\n                                break;\n                            }\n                        case 2:\n                            {\n                                obj.response = PeerExchangeResponse.codec().decode(reader, reader.uint32(), {\n                                    limits: opts.limits?.response\n                                });\n                                break;\n                            }\n                        default:\n                            {\n                                reader.skipType(tag & 7);\n                                break;\n                            }\n                    }\n                }\n                return obj;\n            });\n        }\n        return _codec;\n    };\n    PeerExchangeRPC.encode = (obj)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.encodeMessage)(obj, PeerExchangeRPC.codec());\n    };\n    PeerExchangeRPC.decode = (buf, opts)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.decodeMessage)(buf, PeerExchangeRPC.codec(), opts);\n    };\n})(PeerExchangeRPC || (PeerExchangeRPC = {})); //# sourceMappingURL=peer_exchange.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/relay/node_modules/@waku/proto/dist/generated/peer_exchange.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/relay/node_modules/@waku/proto/dist/generated/store.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@waku/relay/node_modules/@waku/proto/dist/generated/store.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ContentFilter: () => (/* binding */ ContentFilter),\n/* harmony export */   HistoryQuery: () => (/* binding */ HistoryQuery),\n/* harmony export */   HistoryResponse: () => (/* binding */ HistoryResponse),\n/* harmony export */   HistoryRpc: () => (/* binding */ HistoryRpc),\n/* harmony export */   Index: () => (/* binding */ Index),\n/* harmony export */   PagingInfo: () => (/* binding */ PagingInfo),\n/* harmony export */   RateLimitProof: () => (/* binding */ RateLimitProof),\n/* harmony export */   WakuMessage: () => (/* binding */ WakuMessage)\n/* harmony export */ });\n/* harmony import */ var protons_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! protons-runtime */ \"(ssr)/./node_modules/protons-runtime/dist/src/index.js\");\n/* harmony import */ var uint8arrays_alloc__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! uint8arrays/alloc */ \"(ssr)/./node_modules/uint8arrays/dist/src/alloc.node.js\");\n/* eslint-disable import/export */ /* eslint-disable complexity */ /* eslint-disable @typescript-eslint/no-namespace */ /* eslint-disable @typescript-eslint/no-unnecessary-boolean-literal-compare */ /* eslint-disable @typescript-eslint/no-empty-interface */ \n\nvar Index;\n(function(Index) {\n    let _codec;\n    Index.codec = ()=>{\n        if (_codec == null) {\n            _codec = (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.message)((obj, w, opts = {})=>{\n                if (opts.lengthDelimited !== false) {\n                    w.fork();\n                }\n                if (obj.digest != null && obj.digest.byteLength > 0) {\n                    w.uint32(10);\n                    w.bytes(obj.digest);\n                }\n                if (obj.receiverTime != null && obj.receiverTime !== 0n) {\n                    w.uint32(16);\n                    w.sint64(obj.receiverTime);\n                }\n                if (obj.senderTime != null && obj.senderTime !== 0n) {\n                    w.uint32(24);\n                    w.sint64(obj.senderTime);\n                }\n                if (obj.pubsubTopic != null && obj.pubsubTopic !== \"\") {\n                    w.uint32(34);\n                    w.string(obj.pubsubTopic);\n                }\n                if (opts.lengthDelimited !== false) {\n                    w.ldelim();\n                }\n            }, (reader, length, opts = {})=>{\n                const obj = {\n                    digest: (0,uint8arrays_alloc__WEBPACK_IMPORTED_MODULE_1__.alloc)(0),\n                    receiverTime: 0n,\n                    senderTime: 0n,\n                    pubsubTopic: \"\"\n                };\n                const end = length == null ? reader.len : reader.pos + length;\n                while(reader.pos < end){\n                    const tag = reader.uint32();\n                    switch(tag >>> 3){\n                        case 1:\n                            {\n                                obj.digest = reader.bytes();\n                                break;\n                            }\n                        case 2:\n                            {\n                                obj.receiverTime = reader.sint64();\n                                break;\n                            }\n                        case 3:\n                            {\n                                obj.senderTime = reader.sint64();\n                                break;\n                            }\n                        case 4:\n                            {\n                                obj.pubsubTopic = reader.string();\n                                break;\n                            }\n                        default:\n                            {\n                                reader.skipType(tag & 7);\n                                break;\n                            }\n                    }\n                }\n                return obj;\n            });\n        }\n        return _codec;\n    };\n    Index.encode = (obj)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.encodeMessage)(obj, Index.codec());\n    };\n    Index.decode = (buf, opts)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.decodeMessage)(buf, Index.codec(), opts);\n    };\n})(Index || (Index = {}));\nvar PagingInfo;\n(function(PagingInfo) {\n    let Direction;\n    (function(Direction) {\n        Direction[\"BACKWARD\"] = \"BACKWARD\";\n        Direction[\"FORWARD\"] = \"FORWARD\";\n    })(Direction = PagingInfo.Direction || (PagingInfo.Direction = {}));\n    let __DirectionValues;\n    (function(__DirectionValues) {\n        __DirectionValues[__DirectionValues[\"BACKWARD\"] = 0] = \"BACKWARD\";\n        __DirectionValues[__DirectionValues[\"FORWARD\"] = 1] = \"FORWARD\";\n    })(__DirectionValues || (__DirectionValues = {}));\n    (function(Direction) {\n        Direction.codec = ()=>{\n            return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.enumeration)(__DirectionValues);\n        };\n    })(Direction = PagingInfo.Direction || (PagingInfo.Direction = {}));\n    let _codec;\n    PagingInfo.codec = ()=>{\n        if (_codec == null) {\n            _codec = (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.message)((obj, w, opts = {})=>{\n                if (opts.lengthDelimited !== false) {\n                    w.fork();\n                }\n                if (obj.pageSize != null) {\n                    w.uint32(8);\n                    w.uint64(obj.pageSize);\n                }\n                if (obj.cursor != null) {\n                    w.uint32(18);\n                    Index.codec().encode(obj.cursor, w);\n                }\n                if (obj.direction != null) {\n                    w.uint32(24);\n                    PagingInfo.Direction.codec().encode(obj.direction, w);\n                }\n                if (opts.lengthDelimited !== false) {\n                    w.ldelim();\n                }\n            }, (reader, length, opts = {})=>{\n                const obj = {};\n                const end = length == null ? reader.len : reader.pos + length;\n                while(reader.pos < end){\n                    const tag = reader.uint32();\n                    switch(tag >>> 3){\n                        case 1:\n                            {\n                                obj.pageSize = reader.uint64();\n                                break;\n                            }\n                        case 2:\n                            {\n                                obj.cursor = Index.codec().decode(reader, reader.uint32(), {\n                                    limits: opts.limits?.cursor\n                                });\n                                break;\n                            }\n                        case 3:\n                            {\n                                obj.direction = PagingInfo.Direction.codec().decode(reader);\n                                break;\n                            }\n                        default:\n                            {\n                                reader.skipType(tag & 7);\n                                break;\n                            }\n                    }\n                }\n                return obj;\n            });\n        }\n        return _codec;\n    };\n    PagingInfo.encode = (obj)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.encodeMessage)(obj, PagingInfo.codec());\n    };\n    PagingInfo.decode = (buf, opts)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.decodeMessage)(buf, PagingInfo.codec(), opts);\n    };\n})(PagingInfo || (PagingInfo = {}));\nvar ContentFilter;\n(function(ContentFilter) {\n    let _codec;\n    ContentFilter.codec = ()=>{\n        if (_codec == null) {\n            _codec = (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.message)((obj, w, opts = {})=>{\n                if (opts.lengthDelimited !== false) {\n                    w.fork();\n                }\n                if (obj.contentTopic != null && obj.contentTopic !== \"\") {\n                    w.uint32(10);\n                    w.string(obj.contentTopic);\n                }\n                if (opts.lengthDelimited !== false) {\n                    w.ldelim();\n                }\n            }, (reader, length, opts = {})=>{\n                const obj = {\n                    contentTopic: \"\"\n                };\n                const end = length == null ? reader.len : reader.pos + length;\n                while(reader.pos < end){\n                    const tag = reader.uint32();\n                    switch(tag >>> 3){\n                        case 1:\n                            {\n                                obj.contentTopic = reader.string();\n                                break;\n                            }\n                        default:\n                            {\n                                reader.skipType(tag & 7);\n                                break;\n                            }\n                    }\n                }\n                return obj;\n            });\n        }\n        return _codec;\n    };\n    ContentFilter.encode = (obj)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.encodeMessage)(obj, ContentFilter.codec());\n    };\n    ContentFilter.decode = (buf, opts)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.decodeMessage)(buf, ContentFilter.codec(), opts);\n    };\n})(ContentFilter || (ContentFilter = {}));\nvar HistoryQuery;\n(function(HistoryQuery) {\n    let _codec;\n    HistoryQuery.codec = ()=>{\n        if (_codec == null) {\n            _codec = (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.message)((obj, w, opts = {})=>{\n                if (opts.lengthDelimited !== false) {\n                    w.fork();\n                }\n                if (obj.pubsubTopic != null) {\n                    w.uint32(18);\n                    w.string(obj.pubsubTopic);\n                }\n                if (obj.contentFilters != null) {\n                    for (const value of obj.contentFilters){\n                        w.uint32(26);\n                        ContentFilter.codec().encode(value, w);\n                    }\n                }\n                if (obj.pagingInfo != null) {\n                    w.uint32(34);\n                    PagingInfo.codec().encode(obj.pagingInfo, w);\n                }\n                if (obj.startTime != null) {\n                    w.uint32(40);\n                    w.sint64(obj.startTime);\n                }\n                if (obj.endTime != null) {\n                    w.uint32(48);\n                    w.sint64(obj.endTime);\n                }\n                if (opts.lengthDelimited !== false) {\n                    w.ldelim();\n                }\n            }, (reader, length, opts = {})=>{\n                const obj = {\n                    contentFilters: []\n                };\n                const end = length == null ? reader.len : reader.pos + length;\n                while(reader.pos < end){\n                    const tag = reader.uint32();\n                    switch(tag >>> 3){\n                        case 2:\n                            {\n                                obj.pubsubTopic = reader.string();\n                                break;\n                            }\n                        case 3:\n                            {\n                                if (opts.limits?.contentFilters != null && obj.contentFilters.length === opts.limits.contentFilters) {\n                                    throw new protons_runtime__WEBPACK_IMPORTED_MODULE_0__.CodeError('decode error - map field \"contentFilters\" had too many elements', \"ERR_MAX_LENGTH\");\n                                }\n                                obj.contentFilters.push(ContentFilter.codec().decode(reader, reader.uint32(), {\n                                    limits: opts.limits?.contentFilters$\n                                }));\n                                break;\n                            }\n                        case 4:\n                            {\n                                obj.pagingInfo = PagingInfo.codec().decode(reader, reader.uint32(), {\n                                    limits: opts.limits?.pagingInfo\n                                });\n                                break;\n                            }\n                        case 5:\n                            {\n                                obj.startTime = reader.sint64();\n                                break;\n                            }\n                        case 6:\n                            {\n                                obj.endTime = reader.sint64();\n                                break;\n                            }\n                        default:\n                            {\n                                reader.skipType(tag & 7);\n                                break;\n                            }\n                    }\n                }\n                return obj;\n            });\n        }\n        return _codec;\n    };\n    HistoryQuery.encode = (obj)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.encodeMessage)(obj, HistoryQuery.codec());\n    };\n    HistoryQuery.decode = (buf, opts)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.decodeMessage)(buf, HistoryQuery.codec(), opts);\n    };\n})(HistoryQuery || (HistoryQuery = {}));\nvar HistoryResponse;\n(function(HistoryResponse) {\n    let HistoryError;\n    (function(HistoryError) {\n        HistoryError[\"NONE\"] = \"NONE\";\n        HistoryError[\"INVALID_CURSOR\"] = \"INVALID_CURSOR\";\n        HistoryError[\"TOO_MANY_RESULTS\"] = \"TOO_MANY_RESULTS\";\n        HistoryError[\"SERVICE_UNAVAILABLE\"] = \"SERVICE_UNAVAILABLE\";\n    })(HistoryError = HistoryResponse.HistoryError || (HistoryResponse.HistoryError = {}));\n    let __HistoryErrorValues;\n    (function(__HistoryErrorValues) {\n        __HistoryErrorValues[__HistoryErrorValues[\"NONE\"] = 0] = \"NONE\";\n        __HistoryErrorValues[__HistoryErrorValues[\"INVALID_CURSOR\"] = 1] = \"INVALID_CURSOR\";\n        __HistoryErrorValues[__HistoryErrorValues[\"TOO_MANY_RESULTS\"] = 429] = \"TOO_MANY_RESULTS\";\n        __HistoryErrorValues[__HistoryErrorValues[\"SERVICE_UNAVAILABLE\"] = 503] = \"SERVICE_UNAVAILABLE\";\n    })(__HistoryErrorValues || (__HistoryErrorValues = {}));\n    (function(HistoryError) {\n        HistoryError.codec = ()=>{\n            return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.enumeration)(__HistoryErrorValues);\n        };\n    })(HistoryError = HistoryResponse.HistoryError || (HistoryResponse.HistoryError = {}));\n    let _codec;\n    HistoryResponse.codec = ()=>{\n        if (_codec == null) {\n            _codec = (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.message)((obj, w, opts = {})=>{\n                if (opts.lengthDelimited !== false) {\n                    w.fork();\n                }\n                if (obj.messages != null) {\n                    for (const value of obj.messages){\n                        w.uint32(18);\n                        WakuMessage.codec().encode(value, w);\n                    }\n                }\n                if (obj.pagingInfo != null) {\n                    w.uint32(26);\n                    PagingInfo.codec().encode(obj.pagingInfo, w);\n                }\n                if (obj.error != null && __HistoryErrorValues[obj.error] !== 0) {\n                    w.uint32(32);\n                    HistoryResponse.HistoryError.codec().encode(obj.error, w);\n                }\n                if (opts.lengthDelimited !== false) {\n                    w.ldelim();\n                }\n            }, (reader, length, opts = {})=>{\n                const obj = {\n                    messages: [],\n                    error: HistoryError.NONE\n                };\n                const end = length == null ? reader.len : reader.pos + length;\n                while(reader.pos < end){\n                    const tag = reader.uint32();\n                    switch(tag >>> 3){\n                        case 2:\n                            {\n                                if (opts.limits?.messages != null && obj.messages.length === opts.limits.messages) {\n                                    throw new protons_runtime__WEBPACK_IMPORTED_MODULE_0__.CodeError('decode error - map field \"messages\" had too many elements', \"ERR_MAX_LENGTH\");\n                                }\n                                obj.messages.push(WakuMessage.codec().decode(reader, reader.uint32(), {\n                                    limits: opts.limits?.messages$\n                                }));\n                                break;\n                            }\n                        case 3:\n                            {\n                                obj.pagingInfo = PagingInfo.codec().decode(reader, reader.uint32(), {\n                                    limits: opts.limits?.pagingInfo\n                                });\n                                break;\n                            }\n                        case 4:\n                            {\n                                obj.error = HistoryResponse.HistoryError.codec().decode(reader);\n                                break;\n                            }\n                        default:\n                            {\n                                reader.skipType(tag & 7);\n                                break;\n                            }\n                    }\n                }\n                return obj;\n            });\n        }\n        return _codec;\n    };\n    HistoryResponse.encode = (obj)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.encodeMessage)(obj, HistoryResponse.codec());\n    };\n    HistoryResponse.decode = (buf, opts)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.decodeMessage)(buf, HistoryResponse.codec(), opts);\n    };\n})(HistoryResponse || (HistoryResponse = {}));\nvar HistoryRpc;\n(function(HistoryRpc) {\n    let _codec;\n    HistoryRpc.codec = ()=>{\n        if (_codec == null) {\n            _codec = (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.message)((obj, w, opts = {})=>{\n                if (opts.lengthDelimited !== false) {\n                    w.fork();\n                }\n                if (obj.requestId != null && obj.requestId !== \"\") {\n                    w.uint32(10);\n                    w.string(obj.requestId);\n                }\n                if (obj.query != null) {\n                    w.uint32(18);\n                    HistoryQuery.codec().encode(obj.query, w);\n                }\n                if (obj.response != null) {\n                    w.uint32(26);\n                    HistoryResponse.codec().encode(obj.response, w);\n                }\n                if (opts.lengthDelimited !== false) {\n                    w.ldelim();\n                }\n            }, (reader, length, opts = {})=>{\n                const obj = {\n                    requestId: \"\"\n                };\n                const end = length == null ? reader.len : reader.pos + length;\n                while(reader.pos < end){\n                    const tag = reader.uint32();\n                    switch(tag >>> 3){\n                        case 1:\n                            {\n                                obj.requestId = reader.string();\n                                break;\n                            }\n                        case 2:\n                            {\n                                obj.query = HistoryQuery.codec().decode(reader, reader.uint32(), {\n                                    limits: opts.limits?.query\n                                });\n                                break;\n                            }\n                        case 3:\n                            {\n                                obj.response = HistoryResponse.codec().decode(reader, reader.uint32(), {\n                                    limits: opts.limits?.response\n                                });\n                                break;\n                            }\n                        default:\n                            {\n                                reader.skipType(tag & 7);\n                                break;\n                            }\n                    }\n                }\n                return obj;\n            });\n        }\n        return _codec;\n    };\n    HistoryRpc.encode = (obj)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.encodeMessage)(obj, HistoryRpc.codec());\n    };\n    HistoryRpc.decode = (buf, opts)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.decodeMessage)(buf, HistoryRpc.codec(), opts);\n    };\n})(HistoryRpc || (HistoryRpc = {}));\nvar RateLimitProof;\n(function(RateLimitProof) {\n    let _codec;\n    RateLimitProof.codec = ()=>{\n        if (_codec == null) {\n            _codec = (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.message)((obj, w, opts = {})=>{\n                if (opts.lengthDelimited !== false) {\n                    w.fork();\n                }\n                if (obj.proof != null && obj.proof.byteLength > 0) {\n                    w.uint32(10);\n                    w.bytes(obj.proof);\n                }\n                if (obj.merkleRoot != null && obj.merkleRoot.byteLength > 0) {\n                    w.uint32(18);\n                    w.bytes(obj.merkleRoot);\n                }\n                if (obj.epoch != null && obj.epoch.byteLength > 0) {\n                    w.uint32(26);\n                    w.bytes(obj.epoch);\n                }\n                if (obj.shareX != null && obj.shareX.byteLength > 0) {\n                    w.uint32(34);\n                    w.bytes(obj.shareX);\n                }\n                if (obj.shareY != null && obj.shareY.byteLength > 0) {\n                    w.uint32(42);\n                    w.bytes(obj.shareY);\n                }\n                if (obj.nullifier != null && obj.nullifier.byteLength > 0) {\n                    w.uint32(50);\n                    w.bytes(obj.nullifier);\n                }\n                if (obj.rlnIdentifier != null && obj.rlnIdentifier.byteLength > 0) {\n                    w.uint32(58);\n                    w.bytes(obj.rlnIdentifier);\n                }\n                if (opts.lengthDelimited !== false) {\n                    w.ldelim();\n                }\n            }, (reader, length, opts = {})=>{\n                const obj = {\n                    proof: (0,uint8arrays_alloc__WEBPACK_IMPORTED_MODULE_1__.alloc)(0),\n                    merkleRoot: (0,uint8arrays_alloc__WEBPACK_IMPORTED_MODULE_1__.alloc)(0),\n                    epoch: (0,uint8arrays_alloc__WEBPACK_IMPORTED_MODULE_1__.alloc)(0),\n                    shareX: (0,uint8arrays_alloc__WEBPACK_IMPORTED_MODULE_1__.alloc)(0),\n                    shareY: (0,uint8arrays_alloc__WEBPACK_IMPORTED_MODULE_1__.alloc)(0),\n                    nullifier: (0,uint8arrays_alloc__WEBPACK_IMPORTED_MODULE_1__.alloc)(0),\n                    rlnIdentifier: (0,uint8arrays_alloc__WEBPACK_IMPORTED_MODULE_1__.alloc)(0)\n                };\n                const end = length == null ? reader.len : reader.pos + length;\n                while(reader.pos < end){\n                    const tag = reader.uint32();\n                    switch(tag >>> 3){\n                        case 1:\n                            {\n                                obj.proof = reader.bytes();\n                                break;\n                            }\n                        case 2:\n                            {\n                                obj.merkleRoot = reader.bytes();\n                                break;\n                            }\n                        case 3:\n                            {\n                                obj.epoch = reader.bytes();\n                                break;\n                            }\n                        case 4:\n                            {\n                                obj.shareX = reader.bytes();\n                                break;\n                            }\n                        case 5:\n                            {\n                                obj.shareY = reader.bytes();\n                                break;\n                            }\n                        case 6:\n                            {\n                                obj.nullifier = reader.bytes();\n                                break;\n                            }\n                        case 7:\n                            {\n                                obj.rlnIdentifier = reader.bytes();\n                                break;\n                            }\n                        default:\n                            {\n                                reader.skipType(tag & 7);\n                                break;\n                            }\n                    }\n                }\n                return obj;\n            });\n        }\n        return _codec;\n    };\n    RateLimitProof.encode = (obj)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.encodeMessage)(obj, RateLimitProof.codec());\n    };\n    RateLimitProof.decode = (buf, opts)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.decodeMessage)(buf, RateLimitProof.codec(), opts);\n    };\n})(RateLimitProof || (RateLimitProof = {}));\nvar WakuMessage;\n(function(WakuMessage) {\n    let _codec;\n    WakuMessage.codec = ()=>{\n        if (_codec == null) {\n            _codec = (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.message)((obj, w, opts = {})=>{\n                if (opts.lengthDelimited !== false) {\n                    w.fork();\n                }\n                if (obj.payload != null && obj.payload.byteLength > 0) {\n                    w.uint32(10);\n                    w.bytes(obj.payload);\n                }\n                if (obj.contentTopic != null && obj.contentTopic !== \"\") {\n                    w.uint32(18);\n                    w.string(obj.contentTopic);\n                }\n                if (obj.version != null) {\n                    w.uint32(24);\n                    w.uint32(obj.version);\n                }\n                if (obj.timestamp != null) {\n                    w.uint32(80);\n                    w.sint64(obj.timestamp);\n                }\n                if (obj.meta != null) {\n                    w.uint32(90);\n                    w.bytes(obj.meta);\n                }\n                if (obj.rateLimitProof != null) {\n                    w.uint32(170);\n                    RateLimitProof.codec().encode(obj.rateLimitProof, w);\n                }\n                if (obj.ephemeral != null) {\n                    w.uint32(248);\n                    w.bool(obj.ephemeral);\n                }\n                if (opts.lengthDelimited !== false) {\n                    w.ldelim();\n                }\n            }, (reader, length, opts = {})=>{\n                const obj = {\n                    payload: (0,uint8arrays_alloc__WEBPACK_IMPORTED_MODULE_1__.alloc)(0),\n                    contentTopic: \"\"\n                };\n                const end = length == null ? reader.len : reader.pos + length;\n                while(reader.pos < end){\n                    const tag = reader.uint32();\n                    switch(tag >>> 3){\n                        case 1:\n                            {\n                                obj.payload = reader.bytes();\n                                break;\n                            }\n                        case 2:\n                            {\n                                obj.contentTopic = reader.string();\n                                break;\n                            }\n                        case 3:\n                            {\n                                obj.version = reader.uint32();\n                                break;\n                            }\n                        case 10:\n                            {\n                                obj.timestamp = reader.sint64();\n                                break;\n                            }\n                        case 11:\n                            {\n                                obj.meta = reader.bytes();\n                                break;\n                            }\n                        case 21:\n                            {\n                                obj.rateLimitProof = RateLimitProof.codec().decode(reader, reader.uint32(), {\n                                    limits: opts.limits?.rateLimitProof\n                                });\n                                break;\n                            }\n                        case 31:\n                            {\n                                obj.ephemeral = reader.bool();\n                                break;\n                            }\n                        default:\n                            {\n                                reader.skipType(tag & 7);\n                                break;\n                            }\n                    }\n                }\n                return obj;\n            });\n        }\n        return _codec;\n    };\n    WakuMessage.encode = (obj)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.encodeMessage)(obj, WakuMessage.codec());\n    };\n    WakuMessage.decode = (buf, opts)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.decodeMessage)(buf, WakuMessage.codec(), opts);\n    };\n})(WakuMessage || (WakuMessage = {})); //# sourceMappingURL=store.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/relay/node_modules/@waku/proto/dist/generated/store.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/relay/node_modules/@waku/proto/dist/generated/topic_only_message.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/@waku/relay/node_modules/@waku/proto/dist/generated/topic_only_message.js ***!
  \************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   TopicOnlyMessage: () => (/* binding */ TopicOnlyMessage)\n/* harmony export */ });\n/* harmony import */ var protons_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! protons-runtime */ \"(ssr)/./node_modules/protons-runtime/dist/src/index.js\");\n/* eslint-disable import/export */ /* eslint-disable complexity */ /* eslint-disable @typescript-eslint/no-namespace */ /* eslint-disable @typescript-eslint/no-unnecessary-boolean-literal-compare */ /* eslint-disable @typescript-eslint/no-empty-interface */ \nvar TopicOnlyMessage;\n(function(TopicOnlyMessage) {\n    let _codec;\n    TopicOnlyMessage.codec = ()=>{\n        if (_codec == null) {\n            _codec = (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.message)((obj, w, opts = {})=>{\n                if (opts.lengthDelimited !== false) {\n                    w.fork();\n                }\n                if (obj.contentTopic != null && obj.contentTopic !== \"\") {\n                    w.uint32(18);\n                    w.string(obj.contentTopic);\n                }\n                if (opts.lengthDelimited !== false) {\n                    w.ldelim();\n                }\n            }, (reader, length, opts = {})=>{\n                const obj = {\n                    contentTopic: \"\"\n                };\n                const end = length == null ? reader.len : reader.pos + length;\n                while(reader.pos < end){\n                    const tag = reader.uint32();\n                    switch(tag >>> 3){\n                        case 2:\n                            {\n                                obj.contentTopic = reader.string();\n                                break;\n                            }\n                        default:\n                            {\n                                reader.skipType(tag & 7);\n                                break;\n                            }\n                    }\n                }\n                return obj;\n            });\n        }\n        return _codec;\n    };\n    TopicOnlyMessage.encode = (obj)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.encodeMessage)(obj, TopicOnlyMessage.codec());\n    };\n    TopicOnlyMessage.decode = (buf, opts)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.decodeMessage)(buf, TopicOnlyMessage.codec(), opts);\n    };\n})(TopicOnlyMessage || (TopicOnlyMessage = {})); //# sourceMappingURL=topic_only_message.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdha3UvcmVsYXkvbm9kZV9tb2R1bGVzL0B3YWt1L3Byb3RvL2Rpc3QvZ2VuZXJhdGVkL3RvcGljX29ubHlfbWVzc2FnZS5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBLGdDQUFnQyxHQUNoQyw2QkFBNkIsR0FDN0Isa0RBQWtELEdBQ2xELDRFQUE0RSxHQUM1RSx3REFBd0QsR0FDZ0I7QUFDakUsSUFBSUcsaUJBQWlCO0FBQzNCLFVBQVVBLGdCQUFnQjtJQUN2QixJQUFJQztJQUNKRCxpQkFBaUJFLEtBQUssR0FBRztRQUNyQixJQUFJRCxVQUFVLE1BQU07WUFDaEJBLFNBQVNGLHdEQUFPQSxDQUFDLENBQUNJLEtBQUtDLEdBQUdDLE9BQU8sQ0FBQyxDQUFDO2dCQUMvQixJQUFJQSxLQUFLQyxlQUFlLEtBQUssT0FBTztvQkFDaENGLEVBQUVHLElBQUk7Z0JBQ1Y7Z0JBQ0EsSUFBS0osSUFBSUssWUFBWSxJQUFJLFFBQVFMLElBQUlLLFlBQVksS0FBSyxJQUFLO29CQUN2REosRUFBRUssTUFBTSxDQUFDO29CQUNUTCxFQUFFTSxNQUFNLENBQUNQLElBQUlLLFlBQVk7Z0JBQzdCO2dCQUNBLElBQUlILEtBQUtDLGVBQWUsS0FBSyxPQUFPO29CQUNoQ0YsRUFBRU8sTUFBTTtnQkFDWjtZQUNKLEdBQUcsQ0FBQ0MsUUFBUUMsUUFBUVIsT0FBTyxDQUFDLENBQUM7Z0JBQ3pCLE1BQU1GLE1BQU07b0JBQ1JLLGNBQWM7Z0JBQ2xCO2dCQUNBLE1BQU1NLE1BQU1ELFVBQVUsT0FBT0QsT0FBT0csR0FBRyxHQUFHSCxPQUFPSSxHQUFHLEdBQUdIO2dCQUN2RCxNQUFPRCxPQUFPSSxHQUFHLEdBQUdGLElBQUs7b0JBQ3JCLE1BQU1HLE1BQU1MLE9BQU9ILE1BQU07b0JBQ3pCLE9BQVFRLFFBQVE7d0JBQ1osS0FBSzs0QkFBRztnQ0FDSmQsSUFBSUssWUFBWSxHQUFHSSxPQUFPRixNQUFNO2dDQUNoQzs0QkFDSjt3QkFDQTs0QkFBUztnQ0FDTEUsT0FBT00sUUFBUSxDQUFDRCxNQUFNO2dDQUN0Qjs0QkFDSjtvQkFDSjtnQkFDSjtnQkFDQSxPQUFPZDtZQUNYO1FBQ0o7UUFDQSxPQUFPRjtJQUNYO0lBQ0FELGlCQUFpQm1CLE1BQU0sR0FBRyxDQUFDaEI7UUFDdkIsT0FBT0wsOERBQWFBLENBQUNLLEtBQUtILGlCQUFpQkUsS0FBSztJQUNwRDtJQUNBRixpQkFBaUJvQixNQUFNLEdBQUcsQ0FBQ0MsS0FBS2hCO1FBQzVCLE9BQU9SLDhEQUFhQSxDQUFDd0IsS0FBS3JCLGlCQUFpQkUsS0FBSyxJQUFJRztJQUN4RDtBQUNKLEdBQUdMLG9CQUFxQkEsQ0FBQUEsbUJBQW1CLENBQUMsS0FDNUMsOENBQThDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZmx1c2gtbm90ZXMvLi9ub2RlX21vZHVsZXMvQHdha3UvcmVsYXkvbm9kZV9tb2R1bGVzL0B3YWt1L3Byb3RvL2Rpc3QvZ2VuZXJhdGVkL3RvcGljX29ubHlfbWVzc2FnZS5qcz85ODg3Il0sInNvdXJjZXNDb250ZW50IjpbIi8qIGVzbGludC1kaXNhYmxlIGltcG9ydC9leHBvcnQgKi9cbi8qIGVzbGludC1kaXNhYmxlIGNvbXBsZXhpdHkgKi9cbi8qIGVzbGludC1kaXNhYmxlIEB0eXBlc2NyaXB0LWVzbGludC9uby1uYW1lc3BhY2UgKi9cbi8qIGVzbGludC1kaXNhYmxlIEB0eXBlc2NyaXB0LWVzbGludC9uby11bm5lY2Vzc2FyeS1ib29sZWFuLWxpdGVyYWwtY29tcGFyZSAqL1xuLyogZXNsaW50LWRpc2FibGUgQHR5cGVzY3JpcHQtZXNsaW50L25vLWVtcHR5LWludGVyZmFjZSAqL1xuaW1wb3J0IHsgZGVjb2RlTWVzc2FnZSwgZW5jb2RlTWVzc2FnZSwgbWVzc2FnZSB9IGZyb20gJ3Byb3RvbnMtcnVudGltZSc7XG5leHBvcnQgdmFyIFRvcGljT25seU1lc3NhZ2U7XG4oZnVuY3Rpb24gKFRvcGljT25seU1lc3NhZ2UpIHtcbiAgICBsZXQgX2NvZGVjO1xuICAgIFRvcGljT25seU1lc3NhZ2UuY29kZWMgPSAoKSA9PiB7XG4gICAgICAgIGlmIChfY29kZWMgPT0gbnVsbCkge1xuICAgICAgICAgICAgX2NvZGVjID0gbWVzc2FnZSgob2JqLCB3LCBvcHRzID0ge30pID0+IHtcbiAgICAgICAgICAgICAgICBpZiAob3B0cy5sZW5ndGhEZWxpbWl0ZWQgIT09IGZhbHNlKSB7XG4gICAgICAgICAgICAgICAgICAgIHcuZm9yaygpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpZiAoKG9iai5jb250ZW50VG9waWMgIT0gbnVsbCAmJiBvYmouY29udGVudFRvcGljICE9PSAnJykpIHtcbiAgICAgICAgICAgICAgICAgICAgdy51aW50MzIoMTgpO1xuICAgICAgICAgICAgICAgICAgICB3LnN0cmluZyhvYmouY29udGVudFRvcGljKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWYgKG9wdHMubGVuZ3RoRGVsaW1pdGVkICE9PSBmYWxzZSkge1xuICAgICAgICAgICAgICAgICAgICB3LmxkZWxpbSgpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0sIChyZWFkZXIsIGxlbmd0aCwgb3B0cyA9IHt9KSA9PiB7XG4gICAgICAgICAgICAgICAgY29uc3Qgb2JqID0ge1xuICAgICAgICAgICAgICAgICAgICBjb250ZW50VG9waWM6ICcnXG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICBjb25zdCBlbmQgPSBsZW5ndGggPT0gbnVsbCA/IHJlYWRlci5sZW4gOiByZWFkZXIucG9zICsgbGVuZ3RoO1xuICAgICAgICAgICAgICAgIHdoaWxlIChyZWFkZXIucG9zIDwgZW5kKSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IHRhZyA9IHJlYWRlci51aW50MzIoKTtcbiAgICAgICAgICAgICAgICAgICAgc3dpdGNoICh0YWcgPj4+IDMpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgMjoge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9iai5jb250ZW50VG9waWMgPSByZWFkZXIuc3RyaW5nKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICBkZWZhdWx0OiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVhZGVyLnNraXBUeXBlKHRhZyAmIDcpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHJldHVybiBvYmo7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gX2NvZGVjO1xuICAgIH07XG4gICAgVG9waWNPbmx5TWVzc2FnZS5lbmNvZGUgPSAob2JqKSA9PiB7XG4gICAgICAgIHJldHVybiBlbmNvZGVNZXNzYWdlKG9iaiwgVG9waWNPbmx5TWVzc2FnZS5jb2RlYygpKTtcbiAgICB9O1xuICAgIFRvcGljT25seU1lc3NhZ2UuZGVjb2RlID0gKGJ1Ziwgb3B0cykgPT4ge1xuICAgICAgICByZXR1cm4gZGVjb2RlTWVzc2FnZShidWYsIFRvcGljT25seU1lc3NhZ2UuY29kZWMoKSwgb3B0cyk7XG4gICAgfTtcbn0pKFRvcGljT25seU1lc3NhZ2UgfHwgKFRvcGljT25seU1lc3NhZ2UgPSB7fSkpO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dG9waWNfb25seV9tZXNzYWdlLmpzLm1hcCJdLCJuYW1lcyI6WyJkZWNvZGVNZXNzYWdlIiwiZW5jb2RlTWVzc2FnZSIsIm1lc3NhZ2UiLCJUb3BpY09ubHlNZXNzYWdlIiwiX2NvZGVjIiwiY29kZWMiLCJvYmoiLCJ3Iiwib3B0cyIsImxlbmd0aERlbGltaXRlZCIsImZvcmsiLCJjb250ZW50VG9waWMiLCJ1aW50MzIiLCJzdHJpbmciLCJsZGVsaW0iLCJyZWFkZXIiLCJsZW5ndGgiLCJlbmQiLCJsZW4iLCJwb3MiLCJ0YWciLCJza2lwVHlwZSIsImVuY29kZSIsImRlY29kZSIsImJ1ZiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/relay/node_modules/@waku/proto/dist/generated/topic_only_message.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/relay/node_modules/@waku/proto/dist/index.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@waku/relay/node_modules/@waku/proto/dist/index.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PushResponse: () => (/* reexport safe */ _generated_light_push_js__WEBPACK_IMPORTED_MODULE_4__.PushResponse),\n/* harmony export */   TopicOnlyMessage: () => (/* reexport safe */ _generated_topic_only_message_js__WEBPACK_IMPORTED_MODULE_2__.TopicOnlyMessage),\n/* harmony export */   WakuMessage: () => (/* reexport safe */ _generated_filter_js__WEBPACK_IMPORTED_MODULE_1__.WakuMessage),\n/* harmony export */   proto_filter: () => (/* reexport module object */ _generated_filter_js__WEBPACK_IMPORTED_MODULE_1__),\n/* harmony export */   proto_filter_v2: () => (/* reexport module object */ _generated_filter_v2_js__WEBPACK_IMPORTED_MODULE_3__),\n/* harmony export */   proto_lightpush: () => (/* reexport module object */ _generated_light_push_js__WEBPACK_IMPORTED_MODULE_4__),\n/* harmony export */   proto_message: () => (/* reexport module object */ _generated_message_js__WEBPACK_IMPORTED_MODULE_0__),\n/* harmony export */   proto_metadata: () => (/* reexport module object */ _generated_metadata_js__WEBPACK_IMPORTED_MODULE_7__),\n/* harmony export */   proto_peer_exchange: () => (/* reexport module object */ _generated_peer_exchange_js__WEBPACK_IMPORTED_MODULE_6__),\n/* harmony export */   proto_store: () => (/* reexport module object */ _generated_store_js__WEBPACK_IMPORTED_MODULE_5__),\n/* harmony export */   proto_topic_only_message: () => (/* reexport module object */ _generated_topic_only_message_js__WEBPACK_IMPORTED_MODULE_2__)\n/* harmony export */ });\n/* harmony import */ var _generated_message_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./generated/message.js */ \"(ssr)/./node_modules/@waku/relay/node_modules/@waku/proto/dist/generated/message.js\");\n/* harmony import */ var _generated_filter_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./generated/filter.js */ \"(ssr)/./node_modules/@waku/relay/node_modules/@waku/proto/dist/generated/filter.js\");\n/* harmony import */ var _generated_topic_only_message_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./generated/topic_only_message.js */ \"(ssr)/./node_modules/@waku/relay/node_modules/@waku/proto/dist/generated/topic_only_message.js\");\n/* harmony import */ var _generated_filter_v2_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./generated/filter_v2.js */ \"(ssr)/./node_modules/@waku/relay/node_modules/@waku/proto/dist/generated/filter_v2.js\");\n/* harmony import */ var _generated_light_push_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./generated/light_push.js */ \"(ssr)/./node_modules/@waku/relay/node_modules/@waku/proto/dist/generated/light_push.js\");\n/* harmony import */ var _generated_store_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./generated/store.js */ \"(ssr)/./node_modules/@waku/relay/node_modules/@waku/proto/dist/generated/store.js\");\n/* harmony import */ var _generated_peer_exchange_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./generated/peer_exchange.js */ \"(ssr)/./node_modules/@waku/relay/node_modules/@waku/proto/dist/generated/peer_exchange.js\");\n/* harmony import */ var _generated_metadata_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./generated/metadata.js */ \"(ssr)/./node_modules/@waku/relay/node_modules/@waku/proto/dist/generated/metadata.js\");\n\n\n\n\n\n\n\n\n\n\n //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdha3UvcmVsYXkvbm9kZV9tb2R1bGVzL0B3YWt1L3Byb3RvL2Rpc3QvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUF3RDtBQUNKO0FBQzBCO0FBQ1Q7QUFDZjtBQUNNO0FBQ0M7QUFDSjtBQUNMO0FBQ2dCO0FBQ1YsQ0FDMUQsaUNBQWlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZmx1c2gtbm90ZXMvLi9ub2RlX21vZHVsZXMvQHdha3UvcmVsYXkvbm9kZV9tb2R1bGVzL0B3YWt1L3Byb3RvL2Rpc3QvaW5kZXguanM/OGE2OSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgKiBhcyBwcm90b19tZXNzYWdlIGZyb20gXCIuL2dlbmVyYXRlZC9tZXNzYWdlLmpzXCI7XG5leHBvcnQgeyBXYWt1TWVzc2FnZSB9IGZyb20gXCIuL2dlbmVyYXRlZC9maWx0ZXIuanNcIjtcbmV4cG9ydCAqIGFzIHByb3RvX3RvcGljX29ubHlfbWVzc2FnZSBmcm9tIFwiLi9nZW5lcmF0ZWQvdG9waWNfb25seV9tZXNzYWdlLmpzXCI7XG5leHBvcnQgeyBUb3BpY09ubHlNZXNzYWdlIH0gZnJvbSBcIi4vZ2VuZXJhdGVkL3RvcGljX29ubHlfbWVzc2FnZS5qc1wiO1xuZXhwb3J0ICogYXMgcHJvdG9fZmlsdGVyIGZyb20gXCIuL2dlbmVyYXRlZC9maWx0ZXIuanNcIjtcbmV4cG9ydCAqIGFzIHByb3RvX2ZpbHRlcl92MiBmcm9tIFwiLi9nZW5lcmF0ZWQvZmlsdGVyX3YyLmpzXCI7XG5leHBvcnQgKiBhcyBwcm90b19saWdodHB1c2ggZnJvbSBcIi4vZ2VuZXJhdGVkL2xpZ2h0X3B1c2guanNcIjtcbmV4cG9ydCB7IFB1c2hSZXNwb25zZSB9IGZyb20gXCIuL2dlbmVyYXRlZC9saWdodF9wdXNoLmpzXCI7XG5leHBvcnQgKiBhcyBwcm90b19zdG9yZSBmcm9tIFwiLi9nZW5lcmF0ZWQvc3RvcmUuanNcIjtcbmV4cG9ydCAqIGFzIHByb3RvX3BlZXJfZXhjaGFuZ2UgZnJvbSBcIi4vZ2VuZXJhdGVkL3BlZXJfZXhjaGFuZ2UuanNcIjtcbmV4cG9ydCAqIGFzIHByb3RvX21ldGFkYXRhIGZyb20gJy4vZ2VuZXJhdGVkL21ldGFkYXRhLmpzJztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJuYW1lcyI6WyJwcm90b19tZXNzYWdlIiwiV2FrdU1lc3NhZ2UiLCJwcm90b190b3BpY19vbmx5X21lc3NhZ2UiLCJUb3BpY09ubHlNZXNzYWdlIiwicHJvdG9fZmlsdGVyIiwicHJvdG9fZmlsdGVyX3YyIiwicHJvdG9fbGlnaHRwdXNoIiwiUHVzaFJlc3BvbnNlIiwicHJvdG9fc3RvcmUiLCJwcm90b19wZWVyX2V4Y2hhbmdlIiwicHJvdG9fbWV0YWRhdGEiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/relay/node_modules/@waku/proto/dist/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/sdk/dist/index.js":
/*!**********************************************!*\
  !*** ./node_modules/@waku/sdk/dist/index.js ***!
  \**********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DEFAULT_CLUSTER_ID: () => (/* reexport safe */ _waku_interfaces__WEBPACK_IMPORTED_MODULE_10__.DEFAULT_CLUSTER_ID),\n/* harmony export */   DecodedMessage: () => (/* reexport safe */ _waku_core_lib_message_version_0__WEBPACK_IMPORTED_MODULE_1__.DecodedMessage),\n/* harmony export */   Decoder: () => (/* reexport safe */ _waku_core_lib_message_version_0__WEBPACK_IMPORTED_MODULE_1__.Decoder),\n/* harmony export */   DefaultPingKeepAliveValueSecs: () => (/* reexport safe */ _waku_js__WEBPACK_IMPORTED_MODULE_5__.DefaultPingKeepAliveValueSecs),\n/* harmony export */   DefaultPubsubTopic: () => (/* reexport safe */ _waku_interfaces__WEBPACK_IMPORTED_MODULE_10__.DefaultPubsubTopic),\n/* harmony export */   DefaultRelayKeepAliveValueSecs: () => (/* reexport safe */ _waku_js__WEBPACK_IMPORTED_MODULE_5__.DefaultRelayKeepAliveValueSecs),\n/* harmony export */   DefaultUserAgent: () => (/* reexport safe */ _waku_js__WEBPACK_IMPORTED_MODULE_5__.DefaultUserAgent),\n/* harmony export */   EConnectionStateEvents: () => (/* reexport safe */ _waku_interfaces__WEBPACK_IMPORTED_MODULE_10__.EConnectionStateEvents),\n/* harmony export */   EPeersByDiscoveryEvents: () => (/* reexport safe */ _waku_interfaces__WEBPACK_IMPORTED_MODULE_10__.EPeersByDiscoveryEvents),\n/* harmony export */   Encoder: () => (/* reexport safe */ _waku_core_lib_message_version_0__WEBPACK_IMPORTED_MODULE_1__.Encoder),\n/* harmony export */   PageDirection: () => (/* reexport safe */ _waku_interfaces__WEBPACK_IMPORTED_MODULE_10__.PageDirection),\n/* harmony export */   ProtocolError: () => (/* reexport safe */ _waku_interfaces__WEBPACK_IMPORTED_MODULE_10__.ProtocolError),\n/* harmony export */   Protocols: () => (/* reexport safe */ _waku_interfaces__WEBPACK_IMPORTED_MODULE_10__.Protocols),\n/* harmony export */   Tags: () => (/* reexport safe */ _waku_interfaces__WEBPACK_IMPORTED_MODULE_10__.Tags),\n/* harmony export */   WakuNode: () => (/* reexport safe */ _waku_js__WEBPACK_IMPORTED_MODULE_5__.WakuNode),\n/* harmony export */   bytesToUtf8: () => (/* reexport safe */ _waku_utils_bytes__WEBPACK_IMPORTED_MODULE_2__.bytesToUtf8),\n/* harmony export */   createDecoder: () => (/* reexport safe */ _waku_core__WEBPACK_IMPORTED_MODULE_0__.createDecoder),\n/* harmony export */   createEncoder: () => (/* reexport safe */ _waku_core__WEBPACK_IMPORTED_MODULE_0__.createEncoder),\n/* harmony export */   createLightNode: () => (/* reexport safe */ _light_node_index_js__WEBPACK_IMPORTED_MODULE_6__.createLightNode),\n/* harmony export */   createNode: () => (/* reexport safe */ _light_node_index_js__WEBPACK_IMPORTED_MODULE_6__.createNode),\n/* harmony export */   defaultLibp2p: () => (/* reexport safe */ _utils_libp2p_js__WEBPACK_IMPORTED_MODULE_3__.defaultLibp2p),\n/* harmony export */   relay: () => (/* reexport module object */ _waku_relay__WEBPACK_IMPORTED_MODULE_11__),\n/* harmony export */   streamContentTopic: () => (/* reexport safe */ _utils_content_topic_js__WEBPACK_IMPORTED_MODULE_4__.streamContentTopic),\n/* harmony export */   subscribeToContentTopic: () => (/* reexport safe */ _utils_content_topic_js__WEBPACK_IMPORTED_MODULE_4__.subscribeToContentTopic),\n/* harmony export */   utf8ToBytes: () => (/* reexport safe */ _waku_utils_bytes__WEBPACK_IMPORTED_MODULE_2__.utf8ToBytes),\n/* harmony export */   utils: () => (/* reexport module object */ _waku_utils__WEBPACK_IMPORTED_MODULE_9__),\n/* harmony export */   waitForRemotePeer: () => (/* reexport safe */ _waku_core__WEBPACK_IMPORTED_MODULE_0__.waitForRemotePeer),\n/* harmony export */   waku: () => (/* reexport module object */ _waku_core__WEBPACK_IMPORTED_MODULE_0__),\n/* harmony export */   wakuLightPush: () => (/* reexport safe */ _protocols_light_push_js__WEBPACK_IMPORTED_MODULE_7__.wakuLightPush),\n/* harmony export */   wakuStore: () => (/* reexport safe */ _protocols_store_js__WEBPACK_IMPORTED_MODULE_8__.wakuStore)\n/* harmony export */ });\n/* harmony import */ var _waku_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @waku/core */ \"(ssr)/./node_modules/@waku/sdk/node_modules/@waku/core/dist/index.js\");\n/* harmony import */ var _waku_core_lib_message_version_0__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @waku/core/lib/message/version_0 */ \"(ssr)/./node_modules/@waku/sdk/node_modules/@waku/core/dist/lib/message/version_0.js\");\n/* harmony import */ var _waku_utils_bytes__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @waku/utils/bytes */ \"(ssr)/./node_modules/@waku/utils/dist/bytes/index.js\");\n/* harmony import */ var _utils_libp2p_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./utils/libp2p.js */ \"(ssr)/./node_modules/@waku/sdk/dist/utils/libp2p.js\");\n/* harmony import */ var _utils_content_topic_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./utils/content_topic.js */ \"(ssr)/./node_modules/@waku/sdk/dist/utils/content_topic.js\");\n/* harmony import */ var _waku_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./waku.js */ \"(ssr)/./node_modules/@waku/sdk/dist/waku.js\");\n/* harmony import */ var _light_node_index_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./light-node/index.js */ \"(ssr)/./node_modules/@waku/sdk/dist/light-node/index.js\");\n/* harmony import */ var _protocols_light_push_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./protocols/light_push.js */ \"(ssr)/./node_modules/@waku/sdk/dist/protocols/light_push.js\");\n/* harmony import */ var _protocols_store_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./protocols/store.js */ \"(ssr)/./node_modules/@waku/sdk/dist/protocols/store.js\");\n/* harmony import */ var _waku_utils__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @waku/utils */ \"(ssr)/./node_modules/@waku/utils/dist/index.js\");\n/* harmony import */ var _waku_interfaces__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @waku/interfaces */ \"(ssr)/./node_modules/@waku/sdk/node_modules/@waku/interfaces/dist/index.js\");\n/* harmony import */ var _waku_relay__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @waku/relay */ \"(ssr)/./node_modules/@waku/relay/dist/index.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdha3Uvc2RrL2Rpc3QvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQTZFO0FBQ087QUFDdkI7QUFDWDtBQUNUO0FBQ2Y7QUFDMEM7QUFDVjtBQUNUO0FBQ2Q7QUFDRTtBQUNKO0FBQ0ksQ0FDckMsaUNBQWlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZmx1c2gtbm90ZXMvLi9ub2RlX21vZHVsZXMvQHdha3Uvc2RrL2Rpc3QvaW5kZXguanM/NGMzMCJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgeyB3YWl0Rm9yUmVtb3RlUGVlciwgY3JlYXRlRW5jb2RlciwgY3JlYXRlRGVjb2RlciB9IGZyb20gXCJAd2FrdS9jb3JlXCI7XG5leHBvcnQgeyBEZWNvZGVkTWVzc2FnZSwgRGVjb2RlciwgRW5jb2RlciB9IGZyb20gXCJAd2FrdS9jb3JlL2xpYi9tZXNzYWdlL3ZlcnNpb25fMFwiO1xuZXhwb3J0IHsgdXRmOFRvQnl0ZXMsIGJ5dGVzVG9VdGY4IH0gZnJvbSBcIkB3YWt1L3V0aWxzL2J5dGVzXCI7XG5leHBvcnQgeyBkZWZhdWx0TGlicDJwIH0gZnJvbSBcIi4vdXRpbHMvbGlicDJwLmpzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi91dGlscy9jb250ZW50X3RvcGljLmpzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi93YWt1LmpzXCI7XG5leHBvcnQgeyBjcmVhdGVMaWdodE5vZGUsIGNyZWF0ZU5vZGUgfSBmcm9tIFwiLi9saWdodC1ub2RlL2luZGV4LmpzXCI7XG5leHBvcnQgeyB3YWt1TGlnaHRQdXNoIH0gZnJvbSBcIi4vcHJvdG9jb2xzL2xpZ2h0X3B1c2guanNcIjtcbmV4cG9ydCB7IHdha3VTdG9yZSB9IGZyb20gXCIuL3Byb3RvY29scy9zdG9yZS5qc1wiO1xuZXhwb3J0ICogYXMgd2FrdSBmcm9tIFwiQHdha3UvY29yZVwiO1xuZXhwb3J0ICogYXMgdXRpbHMgZnJvbSBcIkB3YWt1L3V0aWxzXCI7XG5leHBvcnQgKiBmcm9tIFwiQHdha3UvaW50ZXJmYWNlc1wiO1xuZXhwb3J0ICogYXMgcmVsYXkgZnJvbSBcIkB3YWt1L3JlbGF5XCI7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOlsid2FpdEZvclJlbW90ZVBlZXIiLCJjcmVhdGVFbmNvZGVyIiwiY3JlYXRlRGVjb2RlciIsIkRlY29kZWRNZXNzYWdlIiwiRGVjb2RlciIsIkVuY29kZXIiLCJ1dGY4VG9CeXRlcyIsImJ5dGVzVG9VdGY4IiwiZGVmYXVsdExpYnAycCIsImNyZWF0ZUxpZ2h0Tm9kZSIsImNyZWF0ZU5vZGUiLCJ3YWt1TGlnaHRQdXNoIiwid2FrdVN0b3JlIiwid2FrdSIsInV0aWxzIiwicmVsYXkiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/sdk/dist/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/sdk/dist/light-node/index.js":
/*!*********************************************************!*\
  !*** ./node_modules/@waku/sdk/dist/light-node/index.js ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createLightNode: () => (/* binding */ createLightNode),\n/* harmony export */   createNode: () => (/* binding */ createNode)\n/* harmony export */ });\n/* harmony import */ var _waku_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @waku/core */ \"(ssr)/./node_modules/@waku/sdk/node_modules/@waku/core/dist/index.js\");\n/* harmony import */ var _protocols_light_push_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../protocols/light_push.js */ \"(ssr)/./node_modules/@waku/sdk/dist/protocols/light_push.js\");\n/* harmony import */ var _protocols_store_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../protocols/store.js */ \"(ssr)/./node_modules/@waku/sdk/dist/protocols/store.js\");\n/* harmony import */ var _utils_libp2p_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/libp2p.js */ \"(ssr)/./node_modules/@waku/sdk/dist/utils/libp2p.js\");\n/* harmony import */ var _waku_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../waku.js */ \"(ssr)/./node_modules/@waku/sdk/dist/waku.js\");\n\n\n\n\n\n/**\n * Create a Waku node configured to use autosharding or static sharding.\n */ async function createNode(options = {\n    pubsubTopics: []\n}) {\n    if (!options.shardInfo) {\n        throw new Error(\"Shard info must be set\");\n    }\n    const libp2p = await (0,_utils_libp2p_js__WEBPACK_IMPORTED_MODULE_3__.createLibp2pAndUpdateOptions)(options);\n    const store = (0,_protocols_store_js__WEBPACK_IMPORTED_MODULE_2__.wakuStore)(options);\n    const lightPush = (0,_protocols_light_push_js__WEBPACK_IMPORTED_MODULE_1__.wakuLightPush)(options);\n    const filter = (0,_waku_core__WEBPACK_IMPORTED_MODULE_0__.wakuFilter)(options);\n    return new _waku_js__WEBPACK_IMPORTED_MODULE_4__.WakuNode(options, libp2p, store, lightPush, filter);\n}\n/**\n * Create a Waku node that uses Waku Light Push, Filter and Store to send and\n * receive messages, enabling low resource consumption.\n * Uses Waku Filter V2 by default.\n */ async function createLightNode(options = {}) {\n    const libp2p = await (0,_utils_libp2p_js__WEBPACK_IMPORTED_MODULE_3__.createLibp2pAndUpdateOptions)(options);\n    const store = (0,_protocols_store_js__WEBPACK_IMPORTED_MODULE_2__.wakuStore)(options);\n    const lightPush = (0,_protocols_light_push_js__WEBPACK_IMPORTED_MODULE_1__.wakuLightPush)(options);\n    const filter = (0,_waku_core__WEBPACK_IMPORTED_MODULE_0__.wakuFilter)(options);\n    return new _waku_js__WEBPACK_IMPORTED_MODULE_4__.WakuNode(options, libp2p, store, lightPush, filter);\n} //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdha3Uvc2RrL2Rpc3QvbGlnaHQtbm9kZS9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQXdDO0FBQ21CO0FBQ1Q7QUFDZ0I7QUFDNUI7QUFDdEM7O0NBRUMsR0FDTSxlQUFlSyxXQUFXQyxVQUFVO0lBQUVDLGNBQWMsRUFBRTtBQUFDLENBQUM7SUFDM0QsSUFBSSxDQUFDRCxRQUFRRSxTQUFTLEVBQUU7UUFDcEIsTUFBTSxJQUFJQyxNQUFNO0lBQ3BCO0lBQ0EsTUFBTUMsU0FBUyxNQUFNUCw4RUFBNEJBLENBQUNHO0lBQ2xELE1BQU1LLFFBQVFULDhEQUFTQSxDQUFDSTtJQUN4QixNQUFNTSxZQUFZWCx1RUFBYUEsQ0FBQ0s7SUFDaEMsTUFBTU8sU0FBU2Isc0RBQVVBLENBQUNNO0lBQzFCLE9BQU8sSUFBSUYsOENBQVFBLENBQUNFLFNBQVNJLFFBQVFDLE9BQU9DLFdBQVdDO0FBQzNEO0FBQ0E7Ozs7Q0FJQyxHQUNNLGVBQWVDLGdCQUFnQlIsVUFBVSxDQUFDLENBQUM7SUFDOUMsTUFBTUksU0FBUyxNQUFNUCw4RUFBNEJBLENBQUNHO0lBQ2xELE1BQU1LLFFBQVFULDhEQUFTQSxDQUFDSTtJQUN4QixNQUFNTSxZQUFZWCx1RUFBYUEsQ0FBQ0s7SUFDaEMsTUFBTU8sU0FBU2Isc0RBQVVBLENBQUNNO0lBQzFCLE9BQU8sSUFBSUYsOENBQVFBLENBQUNFLFNBQVNJLFFBQVFDLE9BQU9DLFdBQVdDO0FBQzNELEVBQ0EsaUNBQWlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZmx1c2gtbm90ZXMvLi9ub2RlX21vZHVsZXMvQHdha3Uvc2RrL2Rpc3QvbGlnaHQtbm9kZS9pbmRleC5qcz9lMzJlIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHdha3VGaWx0ZXIgfSBmcm9tIFwiQHdha3UvY29yZVwiO1xuaW1wb3J0IHsgd2FrdUxpZ2h0UHVzaCB9IGZyb20gXCIuLi9wcm90b2NvbHMvbGlnaHRfcHVzaC5qc1wiO1xuaW1wb3J0IHsgd2FrdVN0b3JlIH0gZnJvbSBcIi4uL3Byb3RvY29scy9zdG9yZS5qc1wiO1xuaW1wb3J0IHsgY3JlYXRlTGlicDJwQW5kVXBkYXRlT3B0aW9ucyB9IGZyb20gXCIuLi91dGlscy9saWJwMnAuanNcIjtcbmltcG9ydCB7IFdha3VOb2RlIH0gZnJvbSBcIi4uL3dha3UuanNcIjtcbi8qKlxuICogQ3JlYXRlIGEgV2FrdSBub2RlIGNvbmZpZ3VyZWQgdG8gdXNlIGF1dG9zaGFyZGluZyBvciBzdGF0aWMgc2hhcmRpbmcuXG4gKi9cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBjcmVhdGVOb2RlKG9wdGlvbnMgPSB7IHB1YnN1YlRvcGljczogW10gfSkge1xuICAgIGlmICghb3B0aW9ucy5zaGFyZEluZm8pIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiU2hhcmQgaW5mbyBtdXN0IGJlIHNldFwiKTtcbiAgICB9XG4gICAgY29uc3QgbGlicDJwID0gYXdhaXQgY3JlYXRlTGlicDJwQW5kVXBkYXRlT3B0aW9ucyhvcHRpb25zKTtcbiAgICBjb25zdCBzdG9yZSA9IHdha3VTdG9yZShvcHRpb25zKTtcbiAgICBjb25zdCBsaWdodFB1c2ggPSB3YWt1TGlnaHRQdXNoKG9wdGlvbnMpO1xuICAgIGNvbnN0IGZpbHRlciA9IHdha3VGaWx0ZXIob3B0aW9ucyk7XG4gICAgcmV0dXJuIG5ldyBXYWt1Tm9kZShvcHRpb25zLCBsaWJwMnAsIHN0b3JlLCBsaWdodFB1c2gsIGZpbHRlcik7XG59XG4vKipcbiAqIENyZWF0ZSBhIFdha3Ugbm9kZSB0aGF0IHVzZXMgV2FrdSBMaWdodCBQdXNoLCBGaWx0ZXIgYW5kIFN0b3JlIHRvIHNlbmQgYW5kXG4gKiByZWNlaXZlIG1lc3NhZ2VzLCBlbmFibGluZyBsb3cgcmVzb3VyY2UgY29uc3VtcHRpb24uXG4gKiBVc2VzIFdha3UgRmlsdGVyIFYyIGJ5IGRlZmF1bHQuXG4gKi9cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBjcmVhdGVMaWdodE5vZGUob3B0aW9ucyA9IHt9KSB7XG4gICAgY29uc3QgbGlicDJwID0gYXdhaXQgY3JlYXRlTGlicDJwQW5kVXBkYXRlT3B0aW9ucyhvcHRpb25zKTtcbiAgICBjb25zdCBzdG9yZSA9IHdha3VTdG9yZShvcHRpb25zKTtcbiAgICBjb25zdCBsaWdodFB1c2ggPSB3YWt1TGlnaHRQdXNoKG9wdGlvbnMpO1xuICAgIGNvbnN0IGZpbHRlciA9IHdha3VGaWx0ZXIob3B0aW9ucyk7XG4gICAgcmV0dXJuIG5ldyBXYWt1Tm9kZShvcHRpb25zLCBsaWJwMnAsIHN0b3JlLCBsaWdodFB1c2gsIGZpbHRlcik7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOlsid2FrdUZpbHRlciIsIndha3VMaWdodFB1c2giLCJ3YWt1U3RvcmUiLCJjcmVhdGVMaWJwMnBBbmRVcGRhdGVPcHRpb25zIiwiV2FrdU5vZGUiLCJjcmVhdGVOb2RlIiwib3B0aW9ucyIsInB1YnN1YlRvcGljcyIsInNoYXJkSW5mbyIsIkVycm9yIiwibGlicDJwIiwic3RvcmUiLCJsaWdodFB1c2giLCJmaWx0ZXIiLCJjcmVhdGVMaWdodE5vZGUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/sdk/dist/light-node/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/sdk/dist/protocols/base_protocol.js":
/*!****************************************************************!*\
  !*** ./node_modules/@waku/sdk/dist/protocols/base_protocol.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BaseProtocolSDK: () => (/* binding */ BaseProtocolSDK)\n/* harmony export */ });\nconst DEFAULT_NUM_PEERS_TO_USE = 3;\nclass BaseProtocolSDK {\n    constructor(options){\n        this.numPeers = options?.numPeersToUse ?? DEFAULT_NUM_PEERS_TO_USE;\n    }\n} //# sourceMappingURL=base_protocol.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdha3Uvc2RrL2Rpc3QvcHJvdG9jb2xzL2Jhc2VfcHJvdG9jb2wuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE1BQU1BLDJCQUEyQjtBQUMxQixNQUFNQztJQUVUQyxZQUFZQyxPQUFPLENBQUU7UUFDakIsSUFBSSxDQUFDQyxRQUFRLEdBQUdELFNBQVNFLGlCQUFpQkw7SUFDOUM7QUFDSixFQUNBLHlDQUF5QyIsInNvdXJjZXMiOlsid2VicGFjazovL2ZsdXNoLW5vdGVzLy4vbm9kZV9tb2R1bGVzL0B3YWt1L3Nkay9kaXN0L3Byb3RvY29scy9iYXNlX3Byb3RvY29sLmpzPzJmMzEiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgREVGQVVMVF9OVU1fUEVFUlNfVE9fVVNFID0gMztcbmV4cG9ydCBjbGFzcyBCYXNlUHJvdG9jb2xTREsge1xuICAgIG51bVBlZXJzO1xuICAgIGNvbnN0cnVjdG9yKG9wdGlvbnMpIHtcbiAgICAgICAgdGhpcy5udW1QZWVycyA9IG9wdGlvbnM/Lm51bVBlZXJzVG9Vc2UgPz8gREVGQVVMVF9OVU1fUEVFUlNfVE9fVVNFO1xuICAgIH1cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWJhc2VfcHJvdG9jb2wuanMubWFwIl0sIm5hbWVzIjpbIkRFRkFVTFRfTlVNX1BFRVJTX1RPX1VTRSIsIkJhc2VQcm90b2NvbFNESyIsImNvbnN0cnVjdG9yIiwib3B0aW9ucyIsIm51bVBlZXJzIiwibnVtUGVlcnNUb1VzZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/sdk/dist/protocols/base_protocol.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/sdk/dist/protocols/light_push.js":
/*!*************************************************************!*\
  !*** ./node_modules/@waku/sdk/dist/protocols/light_push.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   LightPushSDK: () => (/* binding */ LightPushSDK),\n/* harmony export */   wakuLightPush: () => (/* binding */ wakuLightPush)\n/* harmony export */ });\n/* harmony import */ var _waku_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @waku/core */ \"(ssr)/./node_modules/@waku/sdk/node_modules/@waku/core/dist/index.js\");\n/* harmony import */ var _waku_interfaces__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @waku/interfaces */ \"(ssr)/./node_modules/@waku/sdk/node_modules/@waku/interfaces/dist/index.js\");\n/* harmony import */ var _waku_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @waku/utils */ \"(ssr)/./node_modules/@waku/utils/dist/index.js\");\n/* harmony import */ var _base_protocol_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./base_protocol.js */ \"(ssr)/./node_modules/@waku/sdk/dist/protocols/base_protocol.js\");\n\n\n\n\nconst DEFAULT_NUM_PEERS = 3;\nconst log = new _waku_utils__WEBPACK_IMPORTED_MODULE_2__.Logger(\"sdk:light-push\");\nclass LightPushSDK extends _base_protocol_js__WEBPACK_IMPORTED_MODULE_3__.BaseProtocolSDK {\n    constructor(libp2p, options){\n        super({\n            numPeersToUse: options?.numPeersToUse ?? DEFAULT_NUM_PEERS\n        });\n        this.protocol = new _waku_core__WEBPACK_IMPORTED_MODULE_0__.LightPushCore(libp2p, options);\n    }\n    async send(encoder, message) {\n        const successes = [];\n        const failures = [];\n        const { pubsubTopic } = encoder;\n        try {\n            (0,_waku_utils__WEBPACK_IMPORTED_MODULE_2__.ensurePubsubTopicIsConfigured)(pubsubTopic, this.protocol.pubsubTopics);\n        } catch (error) {\n            log.error(\"Failed to send waku light push: pubsub topic not configured\");\n            return {\n                failures: [\n                    {\n                        error: _waku_interfaces__WEBPACK_IMPORTED_MODULE_1__.ProtocolError.TOPIC_NOT_CONFIGURED\n                    }\n                ],\n                successes: []\n            };\n        }\n        const peers = await this.protocol.getPeers();\n        if (!peers.length) {\n            return {\n                successes,\n                failures: [\n                    {\n                        error: _waku_interfaces__WEBPACK_IMPORTED_MODULE_1__.ProtocolError.NO_PEER_AVAILABLE\n                    }\n                ]\n            };\n        }\n        const sendPromises = peers.map((peer)=>this.protocol.send(encoder, message, peer));\n        const results = await Promise.allSettled(sendPromises);\n        for (const result of results){\n            if (result.status === \"fulfilled\") {\n                const { failure, success } = result.value;\n                if (success) {\n                    successes.push(success);\n                }\n                if (failure) {\n                    failures.push(failure);\n                }\n            } else {\n                log.error(\"Failed to send message to peer\", result.reason);\n                failures.push({\n                    error: _waku_interfaces__WEBPACK_IMPORTED_MODULE_1__.ProtocolError.GENERIC_FAIL\n                });\n            // TODO: handle renewing faulty peers with new peers (https://github.com/waku-org/js-waku/issues/1463)\n            }\n        }\n        return {\n            successes,\n            failures\n        };\n    }\n}\nfunction wakuLightPush(init = {}) {\n    return (libp2p)=>new LightPushSDK(libp2p, init);\n} //# sourceMappingURL=light_push.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdha3Uvc2RrL2Rpc3QvcHJvdG9jb2xzL2xpZ2h0X3B1c2guanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQTJDO0FBQ007QUFDbUI7QUFDZjtBQUNyRCxNQUFNSyxvQkFBb0I7QUFDMUIsTUFBTUMsTUFBTSxJQUFJSCwrQ0FBTUEsQ0FBQztBQUNoQixNQUFNSSxxQkFBcUJILDhEQUFlQTtJQUU3Q0ksWUFBWUMsTUFBTSxFQUFFQyxPQUFPLENBQUU7UUFDekIsS0FBSyxDQUFDO1lBQUVDLGVBQWVELFNBQVNDLGlCQUFpQk47UUFBa0I7UUFDbkUsSUFBSSxDQUFDTyxRQUFRLEdBQUcsSUFBSVoscURBQWFBLENBQUNTLFFBQVFDO0lBQzlDO0lBQ0EsTUFBTUcsS0FBS0MsT0FBTyxFQUFFQyxPQUFPLEVBQUU7UUFDekIsTUFBTUMsWUFBWSxFQUFFO1FBQ3BCLE1BQU1DLFdBQVcsRUFBRTtRQUNuQixNQUFNLEVBQUVDLFdBQVcsRUFBRSxHQUFHSjtRQUN4QixJQUFJO1lBQ0FaLDBFQUE2QkEsQ0FBQ2dCLGFBQWEsSUFBSSxDQUFDTixRQUFRLENBQUNPLFlBQVk7UUFDekUsRUFDQSxPQUFPQyxPQUFPO1lBQ1ZkLElBQUljLEtBQUssQ0FBQztZQUNWLE9BQU87Z0JBQ0hILFVBQVU7b0JBQ047d0JBQ0lHLE9BQU9uQiwyREFBYUEsQ0FBQ29CLG9CQUFvQjtvQkFDN0M7aUJBQ0g7Z0JBQ0RMLFdBQVcsRUFBRTtZQUNqQjtRQUNKO1FBQ0EsTUFBTU0sUUFBUSxNQUFNLElBQUksQ0FBQ1YsUUFBUSxDQUFDVyxRQUFRO1FBQzFDLElBQUksQ0FBQ0QsTUFBTUUsTUFBTSxFQUFFO1lBQ2YsT0FBTztnQkFDSFI7Z0JBQ0FDLFVBQVU7b0JBQUM7d0JBQUVHLE9BQU9uQiwyREFBYUEsQ0FBQ3dCLGlCQUFpQjtvQkFBQztpQkFBRTtZQUMxRDtRQUNKO1FBQ0EsTUFBTUMsZUFBZUosTUFBTUssR0FBRyxDQUFDLENBQUNDLE9BQVMsSUFBSSxDQUFDaEIsUUFBUSxDQUFDQyxJQUFJLENBQUNDLFNBQVNDLFNBQVNhO1FBQzlFLE1BQU1DLFVBQVUsTUFBTUMsUUFBUUMsVUFBVSxDQUFDTDtRQUN6QyxLQUFLLE1BQU1NLFVBQVVILFFBQVM7WUFDMUIsSUFBSUcsT0FBT0MsTUFBTSxLQUFLLGFBQWE7Z0JBQy9CLE1BQU0sRUFBRUMsT0FBTyxFQUFFQyxPQUFPLEVBQUUsR0FBR0gsT0FBT0ksS0FBSztnQkFDekMsSUFBSUQsU0FBUztvQkFDVG5CLFVBQVVxQixJQUFJLENBQUNGO2dCQUNuQjtnQkFDQSxJQUFJRCxTQUFTO29CQUNUakIsU0FBU29CLElBQUksQ0FBQ0g7Z0JBQ2xCO1lBQ0osT0FDSztnQkFDRDVCLElBQUljLEtBQUssQ0FBQyxrQ0FBa0NZLE9BQU9NLE1BQU07Z0JBQ3pEckIsU0FBU29CLElBQUksQ0FBQztvQkFBRWpCLE9BQU9uQiwyREFBYUEsQ0FBQ3NDLFlBQVk7Z0JBQUM7WUFDbEQsc0dBQXNHO1lBQzFHO1FBQ0o7UUFDQSxPQUFPO1lBQ0h2QjtZQUNBQztRQUNKO0lBQ0o7QUFDSjtBQUNPLFNBQVN1QixjQUFjQyxPQUFPLENBQUMsQ0FBQztJQUNuQyxPQUFPLENBQUNoQyxTQUFXLElBQUlGLGFBQWFFLFFBQVFnQztBQUNoRCxFQUNBLHNDQUFzQyIsInNvdXJjZXMiOlsid2VicGFjazovL2ZsdXNoLW5vdGVzLy4vbm9kZV9tb2R1bGVzL0B3YWt1L3Nkay9kaXN0L3Byb3RvY29scy9saWdodF9wdXNoLmpzPzE0YWYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTGlnaHRQdXNoQ29yZSB9IGZyb20gXCJAd2FrdS9jb3JlXCI7XG5pbXBvcnQgeyBQcm90b2NvbEVycm9yIH0gZnJvbSBcIkB3YWt1L2ludGVyZmFjZXNcIjtcbmltcG9ydCB7IGVuc3VyZVB1YnN1YlRvcGljSXNDb25maWd1cmVkLCBMb2dnZXIgfSBmcm9tIFwiQHdha3UvdXRpbHNcIjtcbmltcG9ydCB7IEJhc2VQcm90b2NvbFNESyB9IGZyb20gXCIuL2Jhc2VfcHJvdG9jb2wuanNcIjtcbmNvbnN0IERFRkFVTFRfTlVNX1BFRVJTID0gMztcbmNvbnN0IGxvZyA9IG5ldyBMb2dnZXIoXCJzZGs6bGlnaHQtcHVzaFwiKTtcbmV4cG9ydCBjbGFzcyBMaWdodFB1c2hTREsgZXh0ZW5kcyBCYXNlUHJvdG9jb2xTREsge1xuICAgIHByb3RvY29sO1xuICAgIGNvbnN0cnVjdG9yKGxpYnAycCwgb3B0aW9ucykge1xuICAgICAgICBzdXBlcih7IG51bVBlZXJzVG9Vc2U6IG9wdGlvbnM/Lm51bVBlZXJzVG9Vc2UgPz8gREVGQVVMVF9OVU1fUEVFUlMgfSk7XG4gICAgICAgIHRoaXMucHJvdG9jb2wgPSBuZXcgTGlnaHRQdXNoQ29yZShsaWJwMnAsIG9wdGlvbnMpO1xuICAgIH1cbiAgICBhc3luYyBzZW5kKGVuY29kZXIsIG1lc3NhZ2UpIHtcbiAgICAgICAgY29uc3Qgc3VjY2Vzc2VzID0gW107XG4gICAgICAgIGNvbnN0IGZhaWx1cmVzID0gW107XG4gICAgICAgIGNvbnN0IHsgcHVic3ViVG9waWMgfSA9IGVuY29kZXI7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICBlbnN1cmVQdWJzdWJUb3BpY0lzQ29uZmlndXJlZChwdWJzdWJUb3BpYywgdGhpcy5wcm90b2NvbC5wdWJzdWJUb3BpY3MpO1xuICAgICAgICB9XG4gICAgICAgIGNhdGNoIChlcnJvcikge1xuICAgICAgICAgICAgbG9nLmVycm9yKFwiRmFpbGVkIHRvIHNlbmQgd2FrdSBsaWdodCBwdXNoOiBwdWJzdWIgdG9waWMgbm90IGNvbmZpZ3VyZWRcIik7XG4gICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgIGZhaWx1cmVzOiBbXG4gICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGVycm9yOiBQcm90b2NvbEVycm9yLlRPUElDX05PVF9DT05GSUdVUkVEXG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBdLFxuICAgICAgICAgICAgICAgIHN1Y2Nlc3NlczogW11cbiAgICAgICAgICAgIH07XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgcGVlcnMgPSBhd2FpdCB0aGlzLnByb3RvY29sLmdldFBlZXJzKCk7XG4gICAgICAgIGlmICghcGVlcnMubGVuZ3RoKSB7XG4gICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgIHN1Y2Nlc3NlcyxcbiAgICAgICAgICAgICAgICBmYWlsdXJlczogW3sgZXJyb3I6IFByb3RvY29sRXJyb3IuTk9fUEVFUl9BVkFJTEFCTEUgfV1cbiAgICAgICAgICAgIH07XG4gICAgICAgIH1cbiAgICAgICAgY29uc3Qgc2VuZFByb21pc2VzID0gcGVlcnMubWFwKChwZWVyKSA9PiB0aGlzLnByb3RvY29sLnNlbmQoZW5jb2RlciwgbWVzc2FnZSwgcGVlcikpO1xuICAgICAgICBjb25zdCByZXN1bHRzID0gYXdhaXQgUHJvbWlzZS5hbGxTZXR0bGVkKHNlbmRQcm9taXNlcyk7XG4gICAgICAgIGZvciAoY29uc3QgcmVzdWx0IG9mIHJlc3VsdHMpIHtcbiAgICAgICAgICAgIGlmIChyZXN1bHQuc3RhdHVzID09PSBcImZ1bGZpbGxlZFwiKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgeyBmYWlsdXJlLCBzdWNjZXNzIH0gPSByZXN1bHQudmFsdWU7XG4gICAgICAgICAgICAgICAgaWYgKHN1Y2Nlc3MpIHtcbiAgICAgICAgICAgICAgICAgICAgc3VjY2Vzc2VzLnB1c2goc3VjY2Vzcyk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlmIChmYWlsdXJlKSB7XG4gICAgICAgICAgICAgICAgICAgIGZhaWx1cmVzLnB1c2goZmFpbHVyZSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgbG9nLmVycm9yKFwiRmFpbGVkIHRvIHNlbmQgbWVzc2FnZSB0byBwZWVyXCIsIHJlc3VsdC5yZWFzb24pO1xuICAgICAgICAgICAgICAgIGZhaWx1cmVzLnB1c2goeyBlcnJvcjogUHJvdG9jb2xFcnJvci5HRU5FUklDX0ZBSUwgfSk7XG4gICAgICAgICAgICAgICAgLy8gVE9ETzogaGFuZGxlIHJlbmV3aW5nIGZhdWx0eSBwZWVycyB3aXRoIG5ldyBwZWVycyAoaHR0cHM6Ly9naXRodWIuY29tL3dha3Utb3JnL2pzLXdha3UvaXNzdWVzLzE0NjMpXG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIHN1Y2Nlc3NlcyxcbiAgICAgICAgICAgIGZhaWx1cmVzXG4gICAgICAgIH07XG4gICAgfVxufVxuZXhwb3J0IGZ1bmN0aW9uIHdha3VMaWdodFB1c2goaW5pdCA9IHt9KSB7XG4gICAgcmV0dXJuIChsaWJwMnApID0+IG5ldyBMaWdodFB1c2hTREsobGlicDJwLCBpbml0KTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWxpZ2h0X3B1c2guanMubWFwIl0sIm5hbWVzIjpbIkxpZ2h0UHVzaENvcmUiLCJQcm90b2NvbEVycm9yIiwiZW5zdXJlUHVic3ViVG9waWNJc0NvbmZpZ3VyZWQiLCJMb2dnZXIiLCJCYXNlUHJvdG9jb2xTREsiLCJERUZBVUxUX05VTV9QRUVSUyIsImxvZyIsIkxpZ2h0UHVzaFNESyIsImNvbnN0cnVjdG9yIiwibGlicDJwIiwib3B0aW9ucyIsIm51bVBlZXJzVG9Vc2UiLCJwcm90b2NvbCIsInNlbmQiLCJlbmNvZGVyIiwibWVzc2FnZSIsInN1Y2Nlc3NlcyIsImZhaWx1cmVzIiwicHVic3ViVG9waWMiLCJwdWJzdWJUb3BpY3MiLCJlcnJvciIsIlRPUElDX05PVF9DT05GSUdVUkVEIiwicGVlcnMiLCJnZXRQZWVycyIsImxlbmd0aCIsIk5PX1BFRVJfQVZBSUxBQkxFIiwic2VuZFByb21pc2VzIiwibWFwIiwicGVlciIsInJlc3VsdHMiLCJQcm9taXNlIiwiYWxsU2V0dGxlZCIsInJlc3VsdCIsInN0YXR1cyIsImZhaWx1cmUiLCJzdWNjZXNzIiwidmFsdWUiLCJwdXNoIiwicmVhc29uIiwiR0VORVJJQ19GQUlMIiwid2FrdUxpZ2h0UHVzaCIsImluaXQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/sdk/dist/protocols/light_push.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/sdk/dist/protocols/store.js":
/*!********************************************************!*\
  !*** ./node_modules/@waku/sdk/dist/protocols/store.js ***!
  \********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DefaultPageSize: () => (/* binding */ DefaultPageSize),\n/* harmony export */   StoreSDK: () => (/* binding */ StoreSDK),\n/* harmony export */   wakuStore: () => (/* binding */ wakuStore)\n/* harmony export */ });\n/* harmony import */ var _noble_hashes_sha256__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @noble/hashes/sha256 */ \"(ssr)/./node_modules/@noble/hashes/esm/sha256.js\");\n/* harmony import */ var _waku_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @waku/core */ \"(ssr)/./node_modules/@waku/sdk/node_modules/@waku/core/dist/index.js\");\n/* harmony import */ var _waku_interfaces__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @waku/interfaces */ \"(ssr)/./node_modules/@waku/sdk/node_modules/@waku/interfaces/dist/index.js\");\n/* harmony import */ var _waku_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @waku/utils */ \"(ssr)/./node_modules/@waku/utils/dist/index.js\");\n/* harmony import */ var _waku_utils_bytes__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @waku/utils/bytes */ \"(ssr)/./node_modules/@waku/utils/dist/bytes/index.js\");\n/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../index.js */ \"(ssr)/./node_modules/@waku/sdk/dist/index.js\");\n/* harmony import */ var _base_protocol_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./base_protocol.js */ \"(ssr)/./node_modules/@waku/sdk/dist/protocols/base_protocol.js\");\n\n\n\n\n\n\n\nconst DefaultPageSize = 10;\nconst DEFAULT_NUM_PEERS = 1;\nconst log = new _waku_utils__WEBPACK_IMPORTED_MODULE_2__.Logger(\"waku:store:protocol\");\nclass StoreSDK extends _base_protocol_js__WEBPACK_IMPORTED_MODULE_5__.BaseProtocolSDK {\n    constructor(libp2p, options){\n        // TODO: options.numPeersToUse is disregarded: https://github.com/waku-org/js-waku/issues/1685\n        super({\n            numPeersToUse: DEFAULT_NUM_PEERS\n        });\n        this.protocol = new _waku_core__WEBPACK_IMPORTED_MODULE_0__.StoreCore(libp2p, options);\n    }\n    /**\n     * Do a query to a Waku Store to retrieve historical/missed messages.\n     *\n     * This is a generator, useful if you want most control on how messages\n     * are processed.\n     *\n     * The order of the messages returned by the remote Waku node SHOULD BE\n     * as follows:\n     * - within a page, messages SHOULD be ordered from oldest to most recent\n     * - pages direction depends on { @link QueryOptions.pageDirection }\n     * @throws If not able to reach a Waku Store peer to query,\n     * or if an error is encountered when processing the reply,\n     * or if two decoders with the same content topic are passed.\n     *\n     * This API only supports querying a single pubsub topic at a time.\n     * If multiple decoders are provided, they must all have the same pubsub topic.\n     * @throws If multiple decoders with different pubsub topics are provided.\n     * @throws If no decoders are provided.\n     * @throws If no decoders are found for the provided pubsub topic.\n     */ async *queryGenerator(decoders, options) {\n        const { pubsubTopic, contentTopics, decodersAsMap } = this.validateDecodersAndPubsubTopic(decoders, options);\n        const queryOpts = this.constructOptions(pubsubTopic, contentTopics, options);\n        const peer = (await this.protocol.getPeers({\n            numPeers: this.numPeers,\n            maxBootstrapPeers: 1\n        }))[0];\n        if (!peer) throw new Error(\"No peers available to query\");\n        const responseGenerator = this.protocol.queryPerPage(queryOpts, decodersAsMap, peer);\n        for await (const messages of responseGenerator){\n            yield messages;\n        }\n    }\n    /**\n     * Do a query to a Waku Store to retrieve historical/missed messages.\n     *\n     * The callback function takes a `WakuMessage` in input,\n     * messages are processed in order:\n     * - oldest to latest if `options.pageDirection` == { @link PageDirection.FORWARD }\n     * - latest to oldest if `options.pageDirection` == { @link PageDirection.BACKWARD }\n     *\n     * The ordering may affect performance.\n     * The ordering depends on the behavior of the remote store node.\n     * If strong ordering is needed, you may need to handle this at application level\n     * and set your own timestamps too (the WakuMessage timestamps are not certified).\n     *\n     * @throws If not able to reach a Waku Store peer to query,\n     * or if an error is encountered when processing the reply,\n     * or if two decoders with the same content topic are passed.\n     */ async queryWithOrderedCallback(decoders, callback, options) {\n        for await (const promises of this.queryGenerator(decoders, options)){\n            if (await this.processMessages(promises, callback, options)) break;\n        }\n    }\n    /**\n     * Do a query to a Waku Store to retrieve historical/missed messages.\n     * The callback function takes a `Promise<WakuMessage>` in input,\n     * useful if messages need to be decrypted and performance matters.\n     *\n     * The order of the messages passed to the callback is as follows:\n     * - within a page, messages are expected to be ordered from oldest to most recent\n     * - pages direction depends on { @link QueryOptions.pageDirection }\n     *\n     * Do note that the resolution of the `Promise<WakuMessage | undefined` may\n     * break the order as it may rely on the browser decryption API, which in turn,\n     * may have a different speed depending on the type of decryption.\n     *\n     * @throws If not able to reach a Waku Store peer to query,\n     * or if an error is encountered when processing the reply,\n     * or if two decoders with the same content topic are passed.\n     */ async queryWithPromiseCallback(decoders, callback, options) {\n        let abort = false;\n        for await (const page of this.queryGenerator(decoders, options)){\n            const _promises = page.map(async (msgPromise)=>{\n                if (abort) return;\n                abort = Boolean(await callback(msgPromise));\n            });\n            await Promise.all(_promises);\n            if (abort) break;\n        }\n    }\n    createCursor(message) {\n        if (!message || !message.timestamp || !message.payload || !message.contentTopic) {\n            throw new Error(\"Message is missing required fields\");\n        }\n        const contentTopicBytes = (0,_index_js__WEBPACK_IMPORTED_MODULE_4__.utf8ToBytes)(message.contentTopic);\n        const digest = (0,_noble_hashes_sha256__WEBPACK_IMPORTED_MODULE_6__.sha256)((0,_waku_utils_bytes__WEBPACK_IMPORTED_MODULE_3__.concat)([\n            contentTopicBytes,\n            message.payload\n        ]));\n        const messageTime = BigInt(message.timestamp.getTime()) * BigInt(1000000);\n        return {\n            digest,\n            pubsubTopic: message.pubsubTopic,\n            senderTime: messageTime,\n            receiverTime: messageTime\n        };\n    }\n    validateDecodersAndPubsubTopic(decoders, options) {\n        if (decoders.length === 0) {\n            throw new Error(\"No decoders provided\");\n        }\n        // convert array to set to remove duplicates\n        const uniquePubsubTopicsInQuery = Array.from(new Set(decoders.map((decoder)=>decoder.pubsubTopic)));\n        // If multiple pubsub topics are provided, throw an error\n        if (uniquePubsubTopicsInQuery.length > 1) {\n            throw new Error(\"API does not support querying multiple pubsub topics at once\");\n        }\n        // we can be certain that there is only one pubsub topic in the query\n        const pubsubTopicForQuery = uniquePubsubTopicsInQuery[0];\n        (0,_waku_utils__WEBPACK_IMPORTED_MODULE_2__.ensurePubsubTopicIsConfigured)(pubsubTopicForQuery, this.protocol.pubsubTopics);\n        // check that the pubsubTopic from the Cursor and Decoder match\n        if (options?.cursor?.pubsubTopic && options.cursor.pubsubTopic !== pubsubTopicForQuery) {\n            throw new Error(`Cursor pubsub topic (${options?.cursor?.pubsubTopic}) does not match decoder pubsub topic (${pubsubTopicForQuery})`);\n        }\n        const decodersAsMap = new Map();\n        decoders.forEach((dec)=>{\n            if (decodersAsMap.has(dec.contentTopic)) {\n                throw new Error(\"API does not support different decoder per content topic\");\n            }\n            decodersAsMap.set(dec.contentTopic, dec);\n        });\n        const contentTopics = decoders.filter((decoder)=>decoder.pubsubTopic === pubsubTopicForQuery).map((dec)=>dec.contentTopic);\n        if (contentTopics.length === 0) {\n            throw new Error(\"No decoders found for topic \" + pubsubTopicForQuery);\n        }\n        return {\n            pubsubTopic: pubsubTopicForQuery,\n            contentTopics,\n            decodersAsMap\n        };\n    }\n    constructOptions(pubsubTopic, contentTopics, options = {}) {\n        let startTime, endTime;\n        if (options?.timeFilter) {\n            startTime = options.timeFilter.startTime;\n            endTime = options.timeFilter.endTime;\n        }\n        if (!startTime) {\n            log.warn(\"No start time provided\");\n        }\n        if (!endTime) {\n            log.warn(\"No end time provided\");\n        }\n        const queryOpts = Object.assign({\n            pubsubTopic: pubsubTopic,\n            pageDirection: _waku_interfaces__WEBPACK_IMPORTED_MODULE_1__.PageDirection.BACKWARD,\n            pageSize: DefaultPageSize\n        }, options, {\n            contentTopics,\n            startTime,\n            endTime\n        });\n        return queryOpts;\n    }\n    /**\n     * Processes messages based on the provided callback and options.\n     * @private\n     */ async processMessages(messages, callback, options) {\n        let abort = false;\n        const messagesOrUndef = await Promise.all(messages);\n        let processedMessages = messagesOrUndef.filter(_waku_utils__WEBPACK_IMPORTED_MODULE_2__.isDefined);\n        if (this.shouldReverseOrder(options)) {\n            processedMessages = processedMessages.reverse();\n        }\n        await Promise.all(processedMessages.map(async (msg)=>{\n            if (msg && !abort) {\n                abort = Boolean(await callback(msg));\n            }\n        }));\n        return abort;\n    }\n    /**\n     * Determines whether to reverse the order of messages based on the provided options.\n     *\n     * Messages in pages are ordered from oldest (first) to most recent (last).\n     * https://github.com/vacp2p/rfc/issues/533\n     *\n     * @private\n     */ shouldReverseOrder(options) {\n        return typeof options?.pageDirection === \"undefined\" || options?.pageDirection === _waku_interfaces__WEBPACK_IMPORTED_MODULE_1__.PageDirection.BACKWARD;\n    }\n}\nfunction wakuStore(init = {}) {\n    return (libp2p)=>new StoreSDK(libp2p, init);\n} //# sourceMappingURL=store.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/sdk/dist/protocols/store.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/sdk/dist/utils/content_topic.js":
/*!************************************************************!*\
  !*** ./node_modules/@waku/sdk/dist/utils/content_topic.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   streamContentTopic: () => (/* binding */ streamContentTopic),\n/* harmony export */   subscribeToContentTopic: () => (/* binding */ subscribeToContentTopic)\n/* harmony export */ });\n/* harmony import */ var _waku_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @waku/core */ \"(ssr)/./node_modules/@waku/sdk/node_modules/@waku/core/dist/index.js\");\n/* harmony import */ var _waku_interfaces__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @waku/interfaces */ \"(ssr)/./node_modules/@waku/sdk/node_modules/@waku/interfaces/dist/index.js\");\n/* harmony import */ var _waku_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @waku/utils */ \"(ssr)/./node_modules/@waku/utils/dist/index.js\");\n/* harmony import */ var _light_node_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../light-node/index.js */ \"(ssr)/./node_modules/@waku/sdk/dist/light-node/index.js\");\n\n\n\n\n// Given a Waku node, peer Multiaddr, and content topic, creates a decoder and\n// subscription for that content topic.\nasync function prepareSubscription(waku, contentTopic, peer) {\n    // Validate that the Waku node matches assumptions\n    if (!waku.filter) {\n        throw new Error(\"Filter protocol missing from Waku node\");\n    }\n    const { shardInfo } = waku.libp2p.components.metadata;\n    if (!shardInfo) {\n        throw new Error(\"Shard info missing from Waku node.\");\n    }\n    // Validate content topic and ensure node is configured for its corresponding pubsub topic\n    const pubsubTopics = (0,_waku_utils__WEBPACK_IMPORTED_MODULE_2__.shardInfoToPubsubTopics)(shardInfo);\n    const pubsubTopic = (0,_waku_utils__WEBPACK_IMPORTED_MODULE_2__.contentTopicToPubsubTopic)(contentTopic);\n    if (!pubsubTopics.includes(pubsubTopic)) throw new Error(\"Content topic does not match any pubsub topic in shard info.\");\n    await waku.dial(peer);\n    await (0,_waku_core__WEBPACK_IMPORTED_MODULE_0__.waitForRemotePeer)(waku, [\n        _waku_interfaces__WEBPACK_IMPORTED_MODULE_1__.Protocols.Filter\n    ]);\n    // Create decoder and subscription\n    let decoder = (0,_waku_core__WEBPACK_IMPORTED_MODULE_0__.createDecoder)(contentTopic, pubsubTopic);\n    if (decoder) decoder = decoder ?? decoder;\n    const subscription = await waku.filter.createSubscription(pubsubTopic);\n    return {\n        decoder,\n        subscription\n    };\n}\n/**\n * Creates a subscription and streams all new messages for a content topic.\n * Will create a light node configured for the content topic with default settings if a node is not provided in `opts`.\n * Assumes node is using autosharding.\n * @param contentTopic\n * @param opts\n */ async function streamContentTopic(contentTopic, opts) {\n    opts.waku = opts.waku ?? await (0,_light_node_index_js__WEBPACK_IMPORTED_MODULE_3__.createLightNode)({\n        shardInfo: {\n            contentTopics: [\n                contentTopic\n            ]\n        }\n    });\n    const { decoder, subscription } = await prepareSubscription(opts.waku, contentTopic, opts.peer);\n    // Create a ReadableStream that receives any messages for the content topic\n    const messageStream = new ReadableStream({\n        async start (controller) {\n            await subscription.subscribe(decoder, (message)=>{\n                controller.enqueue(message);\n            });\n        },\n        cancel () {\n            return subscription.unsubscribe([\n                contentTopic\n            ]);\n        }\n    });\n    return [\n        messageStream,\n        opts.waku\n    ];\n}\n/**\n * Subscribes to new messages for a content topic via callback function.\n * Will create a light node configured for the content topic with default settings if a node is not provided in `opts`.\n * Assumes node is using autosharding.\n * @param contentTopic\n * @param callback Called every time a new message is received on the content topic\n * @param opts\n */ async function subscribeToContentTopic(contentTopic, callback, opts) {\n    opts.waku = opts.waku ?? await (0,_light_node_index_js__WEBPACK_IMPORTED_MODULE_3__.createLightNode)({\n        shardInfo: {\n            contentTopics: [\n                contentTopic\n            ]\n        }\n    });\n    const { decoder, subscription } = await prepareSubscription(opts.waku, contentTopic, opts.peer);\n    await subscription.subscribe(decoder, callback);\n    return {\n        subscription,\n        waku: opts.waku\n    };\n} //# sourceMappingURL=content_topic.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdha3Uvc2RrL2Rpc3QvdXRpbHMvY29udGVudF90b3BpYy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBOEQ7QUFDakI7QUFDb0M7QUFDeEI7QUFDekQsOEVBQThFO0FBQzlFLHVDQUF1QztBQUN2QyxlQUFlTSxvQkFBb0JDLElBQUksRUFBRUMsWUFBWSxFQUFFQyxJQUFJO0lBQ3ZELGtEQUFrRDtJQUNsRCxJQUFJLENBQUNGLEtBQUtHLE1BQU0sRUFBRTtRQUNkLE1BQU0sSUFBSUMsTUFBTTtJQUNwQjtJQUNBLE1BQU0sRUFBRUMsU0FBUyxFQUFFLEdBQUdMLEtBQUtNLE1BQU0sQ0FBQ0MsVUFBVSxDQUFDQyxRQUFRO0lBQ3JELElBQUksQ0FBQ0gsV0FBVztRQUNaLE1BQU0sSUFBSUQsTUFBTTtJQUNwQjtJQUNBLDBGQUEwRjtJQUMxRixNQUFNSyxlQUFlWixvRUFBdUJBLENBQUNRO0lBQzdDLE1BQU1LLGNBQWNkLHNFQUF5QkEsQ0FBQ0s7SUFDOUMsSUFBSSxDQUFDUSxhQUFhRSxRQUFRLENBQUNELGNBQ3ZCLE1BQU0sSUFBSU4sTUFBTTtJQUNwQixNQUFNSixLQUFLWSxJQUFJLENBQUNWO0lBQ2hCLE1BQU1SLDZEQUFpQkEsQ0FBQ00sTUFBTTtRQUFDTCx1REFBU0EsQ0FBQ2tCLE1BQU07S0FBQztJQUNoRCxrQ0FBa0M7SUFDbEMsSUFBSUMsVUFBVXJCLHlEQUFhQSxDQUFDUSxjQUFjUztJQUMxQyxJQUFJSSxTQUNBQSxVQUFVQSxXQUFXQTtJQUN6QixNQUFNQyxlQUFlLE1BQU1mLEtBQUtHLE1BQU0sQ0FBQ2Esa0JBQWtCLENBQUNOO0lBQzFELE9BQU87UUFBRUk7UUFBU0M7SUFBYTtBQUNuQztBQUNBOzs7Ozs7Q0FNQyxHQUNNLGVBQWVFLG1CQUFtQmhCLFlBQVksRUFBRWlCLElBQUk7SUFDdkRBLEtBQUtsQixJQUFJLEdBQ0xrQixLQUFLbEIsSUFBSSxJQUNKLE1BQU1GLHFFQUFlQSxDQUFDO1FBQ25CTyxXQUFXO1lBQUVjLGVBQWU7Z0JBQUNsQjthQUFhO1FBQUM7SUFDL0M7SUFDUixNQUFNLEVBQUVhLE9BQU8sRUFBRUMsWUFBWSxFQUFFLEdBQUcsTUFBTWhCLG9CQUFvQm1CLEtBQUtsQixJQUFJLEVBQUVDLGNBQWNpQixLQUFLaEIsSUFBSTtJQUM5RiwyRUFBMkU7SUFDM0UsTUFBTWtCLGdCQUFnQixJQUFJQyxlQUFlO1FBQ3JDLE1BQU1DLE9BQU1DLFVBQVU7WUFDbEIsTUFBTVIsYUFBYVMsU0FBUyxDQUFDVixTQUFTLENBQUNXO2dCQUNuQ0YsV0FBV0csT0FBTyxDQUFDRDtZQUN2QjtRQUNKO1FBQ0FFO1lBQ0ksT0FBT1osYUFBYWEsV0FBVyxDQUFDO2dCQUFDM0I7YUFBYTtRQUNsRDtJQUNKO0lBQ0EsT0FBTztRQUFDbUI7UUFBZUYsS0FBS2xCLElBQUk7S0FBQztBQUNyQztBQUNBOzs7Ozs7O0NBT0MsR0FDTSxlQUFlNkIsd0JBQXdCNUIsWUFBWSxFQUFFNkIsUUFBUSxFQUFFWixJQUFJO0lBQ3RFQSxLQUFLbEIsSUFBSSxHQUNMa0IsS0FBS2xCLElBQUksSUFDSixNQUFNRixxRUFBZUEsQ0FBQztRQUNuQk8sV0FBVztZQUFFYyxlQUFlO2dCQUFDbEI7YUFBYTtRQUFDO0lBQy9DO0lBQ1IsTUFBTSxFQUFFYSxPQUFPLEVBQUVDLFlBQVksRUFBRSxHQUFHLE1BQU1oQixvQkFBb0JtQixLQUFLbEIsSUFBSSxFQUFFQyxjQUFjaUIsS0FBS2hCLElBQUk7SUFDOUYsTUFBTWEsYUFBYVMsU0FBUyxDQUFDVixTQUFTZ0I7SUFDdEMsT0FBTztRQUFFZjtRQUFjZixNQUFNa0IsS0FBS2xCLElBQUk7SUFBQztBQUMzQyxFQUNBLHlDQUF5QyIsInNvdXJjZXMiOlsid2VicGFjazovL2ZsdXNoLW5vdGVzLy4vbm9kZV9tb2R1bGVzL0B3YWt1L3Nkay9kaXN0L3V0aWxzL2NvbnRlbnRfdG9waWMuanM/NDU3OSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjcmVhdGVEZWNvZGVyLCB3YWl0Rm9yUmVtb3RlUGVlciB9IGZyb20gXCJAd2FrdS9jb3JlXCI7XG5pbXBvcnQgeyBQcm90b2NvbHMgfSBmcm9tIFwiQHdha3UvaW50ZXJmYWNlc1wiO1xuaW1wb3J0IHsgY29udGVudFRvcGljVG9QdWJzdWJUb3BpYywgc2hhcmRJbmZvVG9QdWJzdWJUb3BpY3MgfSBmcm9tIFwiQHdha3UvdXRpbHNcIjtcbmltcG9ydCB7IGNyZWF0ZUxpZ2h0Tm9kZSB9IGZyb20gXCIuLi9saWdodC1ub2RlL2luZGV4LmpzXCI7XG4vLyBHaXZlbiBhIFdha3Ugbm9kZSwgcGVlciBNdWx0aWFkZHIsIGFuZCBjb250ZW50IHRvcGljLCBjcmVhdGVzIGEgZGVjb2RlciBhbmRcbi8vIHN1YnNjcmlwdGlvbiBmb3IgdGhhdCBjb250ZW50IHRvcGljLlxuYXN5bmMgZnVuY3Rpb24gcHJlcGFyZVN1YnNjcmlwdGlvbih3YWt1LCBjb250ZW50VG9waWMsIHBlZXIpIHtcbiAgICAvLyBWYWxpZGF0ZSB0aGF0IHRoZSBXYWt1IG5vZGUgbWF0Y2hlcyBhc3N1bXB0aW9uc1xuICAgIGlmICghd2FrdS5maWx0ZXIpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiRmlsdGVyIHByb3RvY29sIG1pc3NpbmcgZnJvbSBXYWt1IG5vZGVcIik7XG4gICAgfVxuICAgIGNvbnN0IHsgc2hhcmRJbmZvIH0gPSB3YWt1LmxpYnAycC5jb21wb25lbnRzLm1ldGFkYXRhO1xuICAgIGlmICghc2hhcmRJbmZvKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIlNoYXJkIGluZm8gbWlzc2luZyBmcm9tIFdha3Ugbm9kZS5cIik7XG4gICAgfVxuICAgIC8vIFZhbGlkYXRlIGNvbnRlbnQgdG9waWMgYW5kIGVuc3VyZSBub2RlIGlzIGNvbmZpZ3VyZWQgZm9yIGl0cyBjb3JyZXNwb25kaW5nIHB1YnN1YiB0b3BpY1xuICAgIGNvbnN0IHB1YnN1YlRvcGljcyA9IHNoYXJkSW5mb1RvUHVic3ViVG9waWNzKHNoYXJkSW5mbyk7XG4gICAgY29uc3QgcHVic3ViVG9waWMgPSBjb250ZW50VG9waWNUb1B1YnN1YlRvcGljKGNvbnRlbnRUb3BpYyk7XG4gICAgaWYgKCFwdWJzdWJUb3BpY3MuaW5jbHVkZXMocHVic3ViVG9waWMpKVxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJDb250ZW50IHRvcGljIGRvZXMgbm90IG1hdGNoIGFueSBwdWJzdWIgdG9waWMgaW4gc2hhcmQgaW5mby5cIik7XG4gICAgYXdhaXQgd2FrdS5kaWFsKHBlZXIpO1xuICAgIGF3YWl0IHdhaXRGb3JSZW1vdGVQZWVyKHdha3UsIFtQcm90b2NvbHMuRmlsdGVyXSk7XG4gICAgLy8gQ3JlYXRlIGRlY29kZXIgYW5kIHN1YnNjcmlwdGlvblxuICAgIGxldCBkZWNvZGVyID0gY3JlYXRlRGVjb2Rlcihjb250ZW50VG9waWMsIHB1YnN1YlRvcGljKTtcbiAgICBpZiAoZGVjb2RlcilcbiAgICAgICAgZGVjb2RlciA9IGRlY29kZXIgPz8gZGVjb2RlcjtcbiAgICBjb25zdCBzdWJzY3JpcHRpb24gPSBhd2FpdCB3YWt1LmZpbHRlci5jcmVhdGVTdWJzY3JpcHRpb24ocHVic3ViVG9waWMpO1xuICAgIHJldHVybiB7IGRlY29kZXIsIHN1YnNjcmlwdGlvbiB9O1xufVxuLyoqXG4gKiBDcmVhdGVzIGEgc3Vic2NyaXB0aW9uIGFuZCBzdHJlYW1zIGFsbCBuZXcgbWVzc2FnZXMgZm9yIGEgY29udGVudCB0b3BpYy5cbiAqIFdpbGwgY3JlYXRlIGEgbGlnaHQgbm9kZSBjb25maWd1cmVkIGZvciB0aGUgY29udGVudCB0b3BpYyB3aXRoIGRlZmF1bHQgc2V0dGluZ3MgaWYgYSBub2RlIGlzIG5vdCBwcm92aWRlZCBpbiBgb3B0c2AuXG4gKiBBc3N1bWVzIG5vZGUgaXMgdXNpbmcgYXV0b3NoYXJkaW5nLlxuICogQHBhcmFtIGNvbnRlbnRUb3BpY1xuICogQHBhcmFtIG9wdHNcbiAqL1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIHN0cmVhbUNvbnRlbnRUb3BpYyhjb250ZW50VG9waWMsIG9wdHMpIHtcbiAgICBvcHRzLndha3UgPVxuICAgICAgICBvcHRzLndha3UgPz9cbiAgICAgICAgICAgIChhd2FpdCBjcmVhdGVMaWdodE5vZGUoe1xuICAgICAgICAgICAgICAgIHNoYXJkSW5mbzogeyBjb250ZW50VG9waWNzOiBbY29udGVudFRvcGljXSB9XG4gICAgICAgICAgICB9KSk7XG4gICAgY29uc3QgeyBkZWNvZGVyLCBzdWJzY3JpcHRpb24gfSA9IGF3YWl0IHByZXBhcmVTdWJzY3JpcHRpb24ob3B0cy53YWt1LCBjb250ZW50VG9waWMsIG9wdHMucGVlcik7XG4gICAgLy8gQ3JlYXRlIGEgUmVhZGFibGVTdHJlYW0gdGhhdCByZWNlaXZlcyBhbnkgbWVzc2FnZXMgZm9yIHRoZSBjb250ZW50IHRvcGljXG4gICAgY29uc3QgbWVzc2FnZVN0cmVhbSA9IG5ldyBSZWFkYWJsZVN0cmVhbSh7XG4gICAgICAgIGFzeW5jIHN0YXJ0KGNvbnRyb2xsZXIpIHtcbiAgICAgICAgICAgIGF3YWl0IHN1YnNjcmlwdGlvbi5zdWJzY3JpYmUoZGVjb2RlciwgKG1lc3NhZ2UpID0+IHtcbiAgICAgICAgICAgICAgICBjb250cm9sbGVyLmVucXVldWUobWVzc2FnZSk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSxcbiAgICAgICAgY2FuY2VsKCkge1xuICAgICAgICAgICAgcmV0dXJuIHN1YnNjcmlwdGlvbi51bnN1YnNjcmliZShbY29udGVudFRvcGljXSk7XG4gICAgICAgIH1cbiAgICB9KTtcbiAgICByZXR1cm4gW21lc3NhZ2VTdHJlYW0sIG9wdHMud2FrdV07XG59XG4vKipcbiAqIFN1YnNjcmliZXMgdG8gbmV3IG1lc3NhZ2VzIGZvciBhIGNvbnRlbnQgdG9waWMgdmlhIGNhbGxiYWNrIGZ1bmN0aW9uLlxuICogV2lsbCBjcmVhdGUgYSBsaWdodCBub2RlIGNvbmZpZ3VyZWQgZm9yIHRoZSBjb250ZW50IHRvcGljIHdpdGggZGVmYXVsdCBzZXR0aW5ncyBpZiBhIG5vZGUgaXMgbm90IHByb3ZpZGVkIGluIGBvcHRzYC5cbiAqIEFzc3VtZXMgbm9kZSBpcyB1c2luZyBhdXRvc2hhcmRpbmcuXG4gKiBAcGFyYW0gY29udGVudFRvcGljXG4gKiBAcGFyYW0gY2FsbGJhY2sgQ2FsbGVkIGV2ZXJ5IHRpbWUgYSBuZXcgbWVzc2FnZSBpcyByZWNlaXZlZCBvbiB0aGUgY29udGVudCB0b3BpY1xuICogQHBhcmFtIG9wdHNcbiAqL1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIHN1YnNjcmliZVRvQ29udGVudFRvcGljKGNvbnRlbnRUb3BpYywgY2FsbGJhY2ssIG9wdHMpIHtcbiAgICBvcHRzLndha3UgPVxuICAgICAgICBvcHRzLndha3UgPz9cbiAgICAgICAgICAgIChhd2FpdCBjcmVhdGVMaWdodE5vZGUoe1xuICAgICAgICAgICAgICAgIHNoYXJkSW5mbzogeyBjb250ZW50VG9waWNzOiBbY29udGVudFRvcGljXSB9XG4gICAgICAgICAgICB9KSk7XG4gICAgY29uc3QgeyBkZWNvZGVyLCBzdWJzY3JpcHRpb24gfSA9IGF3YWl0IHByZXBhcmVTdWJzY3JpcHRpb24ob3B0cy53YWt1LCBjb250ZW50VG9waWMsIG9wdHMucGVlcik7XG4gICAgYXdhaXQgc3Vic2NyaXB0aW9uLnN1YnNjcmliZShkZWNvZGVyLCBjYWxsYmFjayk7XG4gICAgcmV0dXJuIHsgc3Vic2NyaXB0aW9uLCB3YWt1OiBvcHRzLndha3UgfTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNvbnRlbnRfdG9waWMuanMubWFwIl0sIm5hbWVzIjpbImNyZWF0ZURlY29kZXIiLCJ3YWl0Rm9yUmVtb3RlUGVlciIsIlByb3RvY29scyIsImNvbnRlbnRUb3BpY1RvUHVic3ViVG9waWMiLCJzaGFyZEluZm9Ub1B1YnN1YlRvcGljcyIsImNyZWF0ZUxpZ2h0Tm9kZSIsInByZXBhcmVTdWJzY3JpcHRpb24iLCJ3YWt1IiwiY29udGVudFRvcGljIiwicGVlciIsImZpbHRlciIsIkVycm9yIiwic2hhcmRJbmZvIiwibGlicDJwIiwiY29tcG9uZW50cyIsIm1ldGFkYXRhIiwicHVic3ViVG9waWNzIiwicHVic3ViVG9waWMiLCJpbmNsdWRlcyIsImRpYWwiLCJGaWx0ZXIiLCJkZWNvZGVyIiwic3Vic2NyaXB0aW9uIiwiY3JlYXRlU3Vic2NyaXB0aW9uIiwic3RyZWFtQ29udGVudFRvcGljIiwib3B0cyIsImNvbnRlbnRUb3BpY3MiLCJtZXNzYWdlU3RyZWFtIiwiUmVhZGFibGVTdHJlYW0iLCJzdGFydCIsImNvbnRyb2xsZXIiLCJzdWJzY3JpYmUiLCJtZXNzYWdlIiwiZW5xdWV1ZSIsImNhbmNlbCIsInVuc3Vic2NyaWJlIiwic3Vic2NyaWJlVG9Db250ZW50VG9waWMiLCJjYWxsYmFjayJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/sdk/dist/utils/content_topic.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/sdk/dist/utils/discovery.js":
/*!********************************************************!*\
  !*** ./node_modules/@waku/sdk/dist/utils/discovery.js ***!
  \********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   defaultPeerDiscoveries: () => (/* binding */ defaultPeerDiscoveries)\n/* harmony export */ });\n/* harmony import */ var _waku_discovery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @waku/discovery */ \"(ssr)/./node_modules/@waku/discovery/dist/index.js\");\n\nconst DEFAULT_NODE_REQUIREMENTS = {\n    lightPush: 1,\n    filter: 1,\n    store: 1\n};\nfunction defaultPeerDiscoveries(pubsubTopics) {\n    const discoveries = [\n        (0,_waku_discovery__WEBPACK_IMPORTED_MODULE_0__.wakuDnsDiscovery)([\n            _waku_discovery__WEBPACK_IMPORTED_MODULE_0__.enrTree[\"SANDBOX\"]\n        ], DEFAULT_NODE_REQUIREMENTS),\n        (0,_waku_discovery__WEBPACK_IMPORTED_MODULE_0__.wakuLocalPeerCacheDiscovery)(),\n        (0,_waku_discovery__WEBPACK_IMPORTED_MODULE_0__.wakuPeerExchangeDiscovery)(pubsubTopics)\n    ];\n    return discoveries;\n} //# sourceMappingURL=discovery.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdha3Uvc2RrL2Rpc3QvdXRpbHMvZGlzY292ZXJ5LmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQW9IO0FBQ3BILE1BQU1JLDRCQUE0QjtJQUM5QkMsV0FBVztJQUNYQyxRQUFRO0lBQ1JDLE9BQU87QUFDWDtBQUNPLFNBQVNDLHVCQUF1QkMsWUFBWTtJQUMvQyxNQUFNQyxjQUFjO1FBQ2hCVCxpRUFBZ0JBLENBQUM7WUFBQ0Qsb0RBQU8sQ0FBQyxVQUFVO1NBQUMsRUFBRUk7UUFDdkNGLDRFQUEyQkE7UUFDM0JDLDBFQUF5QkEsQ0FBQ007S0FDN0I7SUFDRCxPQUFPQztBQUNYLEVBQ0EscUNBQXFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZmx1c2gtbm90ZXMvLi9ub2RlX21vZHVsZXMvQHdha3Uvc2RrL2Rpc3QvdXRpbHMvZGlzY292ZXJ5LmpzPzg5NDgiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZW5yVHJlZSwgd2FrdURuc0Rpc2NvdmVyeSwgd2FrdUxvY2FsUGVlckNhY2hlRGlzY292ZXJ5LCB3YWt1UGVlckV4Y2hhbmdlRGlzY292ZXJ5IH0gZnJvbSBcIkB3YWt1L2Rpc2NvdmVyeVwiO1xuY29uc3QgREVGQVVMVF9OT0RFX1JFUVVJUkVNRU5UUyA9IHtcbiAgICBsaWdodFB1c2g6IDEsXG4gICAgZmlsdGVyOiAxLFxuICAgIHN0b3JlOiAxXG59O1xuZXhwb3J0IGZ1bmN0aW9uIGRlZmF1bHRQZWVyRGlzY292ZXJpZXMocHVic3ViVG9waWNzKSB7XG4gICAgY29uc3QgZGlzY292ZXJpZXMgPSBbXG4gICAgICAgIHdha3VEbnNEaXNjb3ZlcnkoW2VuclRyZWVbXCJTQU5EQk9YXCJdXSwgREVGQVVMVF9OT0RFX1JFUVVJUkVNRU5UUyksXG4gICAgICAgIHdha3VMb2NhbFBlZXJDYWNoZURpc2NvdmVyeSgpLFxuICAgICAgICB3YWt1UGVlckV4Y2hhbmdlRGlzY292ZXJ5KHB1YnN1YlRvcGljcylcbiAgICBdO1xuICAgIHJldHVybiBkaXNjb3Zlcmllcztcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRpc2NvdmVyeS5qcy5tYXAiXSwibmFtZXMiOlsiZW5yVHJlZSIsIndha3VEbnNEaXNjb3ZlcnkiLCJ3YWt1TG9jYWxQZWVyQ2FjaGVEaXNjb3ZlcnkiLCJ3YWt1UGVlckV4Y2hhbmdlRGlzY292ZXJ5IiwiREVGQVVMVF9OT0RFX1JFUVVJUkVNRU5UUyIsImxpZ2h0UHVzaCIsImZpbHRlciIsInN0b3JlIiwiZGVmYXVsdFBlZXJEaXNjb3ZlcmllcyIsInB1YnN1YlRvcGljcyIsImRpc2NvdmVyaWVzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/sdk/dist/utils/discovery.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/sdk/dist/utils/libp2p.js":
/*!*****************************************************!*\
  !*** ./node_modules/@waku/sdk/dist/utils/libp2p.js ***!
  \*****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createLibp2pAndUpdateOptions: () => (/* binding */ createLibp2pAndUpdateOptions),\n/* harmony export */   defaultLibp2p: () => (/* binding */ defaultLibp2p)\n/* harmony export */ });\n/* harmony import */ var _chainsafe_libp2p_noise__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @chainsafe/libp2p-noise */ \"(ssr)/./node_modules/@chainsafe/libp2p-noise/dist/src/index.js\");\n/* harmony import */ var _libp2p_bootstrap__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @libp2p/bootstrap */ \"(ssr)/./node_modules/@libp2p/bootstrap/dist/src/index.js\");\n/* harmony import */ var _libp2p_identify__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @libp2p/identify */ \"(ssr)/./node_modules/@libp2p/identify/dist/src/index.js\");\n/* harmony import */ var _libp2p_mplex__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @libp2p/mplex */ \"(ssr)/./node_modules/@libp2p/mplex/dist/src/index.js\");\n/* harmony import */ var _libp2p_ping__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @libp2p/ping */ \"(ssr)/./node_modules/@libp2p/ping/dist/src/index.js\");\n/* harmony import */ var _libp2p_websockets__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @libp2p/websockets */ \"(ssr)/./node_modules/@libp2p/websockets/dist/src/index.js\");\n/* harmony import */ var _libp2p_websockets_filters__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @libp2p/websockets/filters */ \"(ssr)/./node_modules/@libp2p/websockets/dist/src/filters.js\");\n/* harmony import */ var _waku_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @waku/core */ \"(ssr)/./node_modules/@waku/sdk/node_modules/@waku/core/dist/index.js\");\n/* harmony import */ var _waku_interfaces__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @waku/interfaces */ \"(ssr)/./node_modules/@waku/sdk/node_modules/@waku/interfaces/dist/index.js\");\n/* harmony import */ var _waku_relay__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @waku/relay */ \"(ssr)/./node_modules/@waku/relay/dist/index.js\");\n/* harmony import */ var _waku_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @waku/utils */ \"(ssr)/./node_modules/@waku/utils/dist/index.js\");\n/* harmony import */ var libp2p__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! libp2p */ \"(ssr)/./node_modules/libp2p/dist/src/index.js\");\n/* harmony import */ var _waku_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../waku.js */ \"(ssr)/./node_modules/@waku/sdk/dist/waku.js\");\n/* harmony import */ var _discovery_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./discovery.js */ \"(ssr)/./node_modules/@waku/sdk/dist/utils/discovery.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nasync function defaultLibp2p(shardInfo, wakuGossipSub, options, userAgent) {\n    if (!options?.hideWebSocketInfo && \"development\" !== \"test\") {\n        /* eslint-disable no-console */ console.info(\"%cIgnore WebSocket connection failures\", \"background: gray; color: white; font-size: x-large\");\n        console.info(\"%cWaku tries to discover peers and some of them are expected to fail\", \"background: gray; color: white; font-size: x-large\");\n    /* eslint-enable no-console */ }\n    const pubsubService = wakuGossipSub ? {\n        pubsub: wakuGossipSub\n    } : {};\n    const metadataService = shardInfo ? {\n        metadata: (0,_waku_core__WEBPACK_IMPORTED_MODULE_1__.wakuMetadata)(shardInfo)\n    } : {};\n    return (0,libp2p__WEBPACK_IMPORTED_MODULE_7__.createLibp2p)({\n        connectionManager: {\n            minConnections: 1\n        },\n        transports: [\n            (0,_libp2p_websockets__WEBPACK_IMPORTED_MODULE_8__.webSockets)({\n                filter: _libp2p_websockets_filters__WEBPACK_IMPORTED_MODULE_9__.all\n            })\n        ],\n        streamMuxers: [\n            (0,_libp2p_mplex__WEBPACK_IMPORTED_MODULE_10__.mplex)()\n        ],\n        connectionEncryption: [\n            (0,_chainsafe_libp2p_noise__WEBPACK_IMPORTED_MODULE_0__.noise)()\n        ],\n        ...options,\n        services: {\n            identify: (0,_libp2p_identify__WEBPACK_IMPORTED_MODULE_11__.identify)({\n                agentVersion: userAgent ?? _waku_js__WEBPACK_IMPORTED_MODULE_5__.DefaultUserAgent\n            }),\n            ping: (0,_libp2p_ping__WEBPACK_IMPORTED_MODULE_12__.ping)(),\n            ...metadataService,\n            ...pubsubService,\n            ...options?.services\n        }\n    }); // TODO: make libp2p include it;\n}\nasync function createLibp2pAndUpdateOptions(options) {\n    const shardInfo = options.shardInfo ? (0,_waku_utils__WEBPACK_IMPORTED_MODULE_4__.ensureShardingConfigured)(options.shardInfo) : undefined;\n    options.pubsubTopics = shardInfo?.pubsubTopics ?? options.pubsubTopics ?? [\n        _waku_interfaces__WEBPACK_IMPORTED_MODULE_2__.DefaultPubsubTopic\n    ];\n    const libp2pOptions = options?.libp2p ?? {};\n    const peerDiscovery = libp2pOptions.peerDiscovery ?? [];\n    if (options?.defaultBootstrap) {\n        peerDiscovery.push(...(0,_discovery_js__WEBPACK_IMPORTED_MODULE_6__.defaultPeerDiscoveries)(options.pubsubTopics));\n    }\n    if (options?.bootstrapPeers) {\n        peerDiscovery.push((0,_libp2p_bootstrap__WEBPACK_IMPORTED_MODULE_13__.bootstrap)({\n            list: options.bootstrapPeers\n        }));\n    }\n    libp2pOptions.peerDiscovery = peerDiscovery;\n    const libp2p = await defaultLibp2p(shardInfo?.shardInfo, (0,_waku_relay__WEBPACK_IMPORTED_MODULE_3__.wakuGossipSub)(options), libp2pOptions, options?.userAgent);\n    return libp2p;\n} //# sourceMappingURL=libp2p.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdha3Uvc2RrL2Rpc3QvdXRpbHMvbGlicDJwLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBZ0Q7QUFDRjtBQUNGO0FBQ047QUFDRjtBQUNZO0FBQ2M7QUFDcEI7QUFDWTtBQUNWO0FBQ1c7QUFDakI7QUFDUTtBQUNVO0FBQ2pELGVBQWVlLGNBQWNDLFNBQVMsRUFBRU4sYUFBYSxFQUFFTyxPQUFPLEVBQUVDLFNBQVM7SUFDNUUsSUFBSSxDQUFDRCxTQUFTRSxxQkFBcUJDLGFBQXNCRSxLQUFLLFFBQVE7UUFDbEUsNkJBQTZCLEdBQzdCQyxRQUFRQyxJQUFJLENBQUMsMENBQTBDO1FBQ3ZERCxRQUFRQyxJQUFJLENBQUMsd0VBQXdFO0lBQ3JGLDRCQUE0QixHQUNoQztJQUNBLE1BQU1DLGdCQUFnQmYsZ0JBQ2hCO1FBQUVnQixRQUFRaEI7SUFBYyxJQUN4QixDQUFDO0lBQ1AsTUFBTWlCLGtCQUFrQlgsWUFDbEI7UUFBRVksVUFBVXBCLHdEQUFZQSxDQUFDUTtJQUFXLElBQ3BDLENBQUM7SUFDUCxPQUFPSixvREFBWUEsQ0FBQztRQUNoQmlCLG1CQUFtQjtZQUNmQyxnQkFBZ0I7UUFDcEI7UUFDQUMsWUFBWTtZQUFDMUIsOERBQVVBLENBQUM7Z0JBQUUyQixRQUFRekIsMkRBQVNBO1lBQUM7U0FBRztRQUMvQzBCLGNBQWM7WUFBQzlCLHFEQUFLQTtTQUFHO1FBQ3ZCK0Isc0JBQXNCO1lBQUNsQyw4REFBS0E7U0FBRztRQUMvQixHQUFHaUIsT0FBTztRQUNWa0IsVUFBVTtZQUNOakMsVUFBVUEsMkRBQVFBLENBQUM7Z0JBQ2ZrQyxjQUFjbEIsYUFBYUwsc0RBQWdCQTtZQUMvQztZQUNBVCxNQUFNQSxtREFBSUE7WUFDVixHQUFHdUIsZUFBZTtZQUNsQixHQUFHRixhQUFhO1lBQ2hCLEdBQUdSLFNBQVNrQixRQUFRO1FBQ3hCO0lBQ0osSUFBSSxnQ0FBZ0M7QUFDeEM7QUFDTyxlQUFlRSw2QkFBNkJwQixPQUFPO0lBQ3RELE1BQU1ELFlBQVlDLFFBQVFELFNBQVMsR0FDN0JMLHFFQUF3QkEsQ0FBQ00sUUFBUUQsU0FBUyxJQUMxQ3NCO0lBQ05yQixRQUFRc0IsWUFBWSxHQUFHdkIsV0FBV3VCLGdCQUM5QnRCLFFBQVFzQixZQUFZLElBQUk7UUFBQzlCLGdFQUFrQkE7S0FBQztJQUNoRCxNQUFNK0IsZ0JBQWdCdkIsU0FBU3dCLFVBQVUsQ0FBQztJQUMxQyxNQUFNQyxnQkFBZ0JGLGNBQWNFLGFBQWEsSUFBSSxFQUFFO0lBQ3ZELElBQUl6QixTQUFTMEIsa0JBQWtCO1FBQzNCRCxjQUFjRSxJQUFJLElBQUk5QixxRUFBc0JBLENBQUNHLFFBQVFzQixZQUFZO0lBQ3JFO0lBQ0EsSUFBSXRCLFNBQVM0QixnQkFBZ0I7UUFDekJILGNBQWNFLElBQUksQ0FBQzNDLDZEQUFTQSxDQUFDO1lBQUU2QyxNQUFNN0IsUUFBUTRCLGNBQWM7UUFBQztJQUNoRTtJQUNBTCxjQUFjRSxhQUFhLEdBQUdBO0lBQzlCLE1BQU1ELFNBQVMsTUFBTTFCLGNBQWNDLFdBQVdBLFdBQVdOLDBEQUFhQSxDQUFDTyxVQUFVdUIsZUFBZXZCLFNBQVNDO0lBQ3pHLE9BQU91QjtBQUNYLEVBQ0Esa0NBQWtDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZmx1c2gtbm90ZXMvLi9ub2RlX21vZHVsZXMvQHdha3Uvc2RrL2Rpc3QvdXRpbHMvbGlicDJwLmpzPzY1YjQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgbm9pc2UgfSBmcm9tIFwiQGNoYWluc2FmZS9saWJwMnAtbm9pc2VcIjtcbmltcG9ydCB7IGJvb3RzdHJhcCB9IGZyb20gXCJAbGlicDJwL2Jvb3RzdHJhcFwiO1xuaW1wb3J0IHsgaWRlbnRpZnkgfSBmcm9tIFwiQGxpYnAycC9pZGVudGlmeVwiO1xuaW1wb3J0IHsgbXBsZXggfSBmcm9tIFwiQGxpYnAycC9tcGxleFwiO1xuaW1wb3J0IHsgcGluZyB9IGZyb20gXCJAbGlicDJwL3BpbmdcIjtcbmltcG9ydCB7IHdlYlNvY2tldHMgfSBmcm9tIFwiQGxpYnAycC93ZWJzb2NrZXRzXCI7XG5pbXBvcnQgeyBhbGwgYXMgZmlsdGVyQWxsIH0gZnJvbSBcIkBsaWJwMnAvd2Vic29ja2V0cy9maWx0ZXJzXCI7XG5pbXBvcnQgeyB3YWt1TWV0YWRhdGEgfSBmcm9tIFwiQHdha3UvY29yZVwiO1xuaW1wb3J0IHsgRGVmYXVsdFB1YnN1YlRvcGljIH0gZnJvbSBcIkB3YWt1L2ludGVyZmFjZXNcIjtcbmltcG9ydCB7IHdha3VHb3NzaXBTdWIgfSBmcm9tIFwiQHdha3UvcmVsYXlcIjtcbmltcG9ydCB7IGVuc3VyZVNoYXJkaW5nQ29uZmlndXJlZCB9IGZyb20gXCJAd2FrdS91dGlsc1wiO1xuaW1wb3J0IHsgY3JlYXRlTGlicDJwIH0gZnJvbSBcImxpYnAycFwiO1xuaW1wb3J0IHsgRGVmYXVsdFVzZXJBZ2VudCB9IGZyb20gXCIuLi93YWt1LmpzXCI7XG5pbXBvcnQgeyBkZWZhdWx0UGVlckRpc2NvdmVyaWVzIH0gZnJvbSBcIi4vZGlzY292ZXJ5LmpzXCI7XG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZGVmYXVsdExpYnAycChzaGFyZEluZm8sIHdha3VHb3NzaXBTdWIsIG9wdGlvbnMsIHVzZXJBZ2VudCkge1xuICAgIGlmICghb3B0aW9ucz8uaGlkZVdlYlNvY2tldEluZm8gJiYgcHJvY2Vzcz8uZW52Py5OT0RFX0VOViAhPT0gXCJ0ZXN0XCIpIHtcbiAgICAgICAgLyogZXNsaW50LWRpc2FibGUgbm8tY29uc29sZSAqL1xuICAgICAgICBjb25zb2xlLmluZm8oXCIlY0lnbm9yZSBXZWJTb2NrZXQgY29ubmVjdGlvbiBmYWlsdXJlc1wiLCBcImJhY2tncm91bmQ6IGdyYXk7IGNvbG9yOiB3aGl0ZTsgZm9udC1zaXplOiB4LWxhcmdlXCIpO1xuICAgICAgICBjb25zb2xlLmluZm8oXCIlY1dha3UgdHJpZXMgdG8gZGlzY292ZXIgcGVlcnMgYW5kIHNvbWUgb2YgdGhlbSBhcmUgZXhwZWN0ZWQgdG8gZmFpbFwiLCBcImJhY2tncm91bmQ6IGdyYXk7IGNvbG9yOiB3aGl0ZTsgZm9udC1zaXplOiB4LWxhcmdlXCIpO1xuICAgICAgICAvKiBlc2xpbnQtZW5hYmxlIG5vLWNvbnNvbGUgKi9cbiAgICB9XG4gICAgY29uc3QgcHVic3ViU2VydmljZSA9IHdha3VHb3NzaXBTdWJcbiAgICAgICAgPyB7IHB1YnN1Yjogd2FrdUdvc3NpcFN1YiB9XG4gICAgICAgIDoge307XG4gICAgY29uc3QgbWV0YWRhdGFTZXJ2aWNlID0gc2hhcmRJbmZvXG4gICAgICAgID8geyBtZXRhZGF0YTogd2FrdU1ldGFkYXRhKHNoYXJkSW5mbykgfVxuICAgICAgICA6IHt9O1xuICAgIHJldHVybiBjcmVhdGVMaWJwMnAoe1xuICAgICAgICBjb25uZWN0aW9uTWFuYWdlcjoge1xuICAgICAgICAgICAgbWluQ29ubmVjdGlvbnM6IDFcbiAgICAgICAgfSxcbiAgICAgICAgdHJhbnNwb3J0czogW3dlYlNvY2tldHMoeyBmaWx0ZXI6IGZpbHRlckFsbCB9KV0sXG4gICAgICAgIHN0cmVhbU11eGVyczogW21wbGV4KCldLFxuICAgICAgICBjb25uZWN0aW9uRW5jcnlwdGlvbjogW25vaXNlKCldLFxuICAgICAgICAuLi5vcHRpb25zLFxuICAgICAgICBzZXJ2aWNlczoge1xuICAgICAgICAgICAgaWRlbnRpZnk6IGlkZW50aWZ5KHtcbiAgICAgICAgICAgICAgICBhZ2VudFZlcnNpb246IHVzZXJBZ2VudCA/PyBEZWZhdWx0VXNlckFnZW50XG4gICAgICAgICAgICB9KSxcbiAgICAgICAgICAgIHBpbmc6IHBpbmcoKSxcbiAgICAgICAgICAgIC4uLm1ldGFkYXRhU2VydmljZSxcbiAgICAgICAgICAgIC4uLnB1YnN1YlNlcnZpY2UsXG4gICAgICAgICAgICAuLi5vcHRpb25zPy5zZXJ2aWNlc1xuICAgICAgICB9XG4gICAgfSk7IC8vIFRPRE86IG1ha2UgbGlicDJwIGluY2x1ZGUgaXQ7XG59XG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gY3JlYXRlTGlicDJwQW5kVXBkYXRlT3B0aW9ucyhvcHRpb25zKSB7XG4gICAgY29uc3Qgc2hhcmRJbmZvID0gb3B0aW9ucy5zaGFyZEluZm9cbiAgICAgICAgPyBlbnN1cmVTaGFyZGluZ0NvbmZpZ3VyZWQob3B0aW9ucy5zaGFyZEluZm8pXG4gICAgICAgIDogdW5kZWZpbmVkO1xuICAgIG9wdGlvbnMucHVic3ViVG9waWNzID0gc2hhcmRJbmZvPy5wdWJzdWJUb3BpY3MgPz9cbiAgICAgICAgb3B0aW9ucy5wdWJzdWJUb3BpY3MgPz8gW0RlZmF1bHRQdWJzdWJUb3BpY107XG4gICAgY29uc3QgbGlicDJwT3B0aW9ucyA9IG9wdGlvbnM/LmxpYnAycCA/PyB7fTtcbiAgICBjb25zdCBwZWVyRGlzY292ZXJ5ID0gbGlicDJwT3B0aW9ucy5wZWVyRGlzY292ZXJ5ID8/IFtdO1xuICAgIGlmIChvcHRpb25zPy5kZWZhdWx0Qm9vdHN0cmFwKSB7XG4gICAgICAgIHBlZXJEaXNjb3ZlcnkucHVzaCguLi5kZWZhdWx0UGVlckRpc2NvdmVyaWVzKG9wdGlvbnMucHVic3ViVG9waWNzKSk7XG4gICAgfVxuICAgIGlmIChvcHRpb25zPy5ib290c3RyYXBQZWVycykge1xuICAgICAgICBwZWVyRGlzY292ZXJ5LnB1c2goYm9vdHN0cmFwKHsgbGlzdDogb3B0aW9ucy5ib290c3RyYXBQZWVycyB9KSk7XG4gICAgfVxuICAgIGxpYnAycE9wdGlvbnMucGVlckRpc2NvdmVyeSA9IHBlZXJEaXNjb3Zlcnk7XG4gICAgY29uc3QgbGlicDJwID0gYXdhaXQgZGVmYXVsdExpYnAycChzaGFyZEluZm8/LnNoYXJkSW5mbywgd2FrdUdvc3NpcFN1YihvcHRpb25zKSwgbGlicDJwT3B0aW9ucywgb3B0aW9ucz8udXNlckFnZW50KTtcbiAgICByZXR1cm4gbGlicDJwO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bGlicDJwLmpzLm1hcCJdLCJuYW1lcyI6WyJub2lzZSIsImJvb3RzdHJhcCIsImlkZW50aWZ5IiwibXBsZXgiLCJwaW5nIiwid2ViU29ja2V0cyIsImFsbCIsImZpbHRlckFsbCIsIndha3VNZXRhZGF0YSIsIkRlZmF1bHRQdWJzdWJUb3BpYyIsIndha3VHb3NzaXBTdWIiLCJlbnN1cmVTaGFyZGluZ0NvbmZpZ3VyZWQiLCJjcmVhdGVMaWJwMnAiLCJEZWZhdWx0VXNlckFnZW50IiwiZGVmYXVsdFBlZXJEaXNjb3ZlcmllcyIsImRlZmF1bHRMaWJwMnAiLCJzaGFyZEluZm8iLCJvcHRpb25zIiwidXNlckFnZW50IiwiaGlkZVdlYlNvY2tldEluZm8iLCJwcm9jZXNzIiwiZW52IiwiTk9ERV9FTlYiLCJjb25zb2xlIiwiaW5mbyIsInB1YnN1YlNlcnZpY2UiLCJwdWJzdWIiLCJtZXRhZGF0YVNlcnZpY2UiLCJtZXRhZGF0YSIsImNvbm5lY3Rpb25NYW5hZ2VyIiwibWluQ29ubmVjdGlvbnMiLCJ0cmFuc3BvcnRzIiwiZmlsdGVyIiwic3RyZWFtTXV4ZXJzIiwiY29ubmVjdGlvbkVuY3J5cHRpb24iLCJzZXJ2aWNlcyIsImFnZW50VmVyc2lvbiIsImNyZWF0ZUxpYnAycEFuZFVwZGF0ZU9wdGlvbnMiLCJ1bmRlZmluZWQiLCJwdWJzdWJUb3BpY3MiLCJsaWJwMnBPcHRpb25zIiwibGlicDJwIiwicGVlckRpc2NvdmVyeSIsImRlZmF1bHRCb290c3RyYXAiLCJwdXNoIiwiYm9vdHN0cmFwUGVlcnMiLCJsaXN0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/sdk/dist/utils/libp2p.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/sdk/dist/waku.js":
/*!*********************************************!*\
  !*** ./node_modules/@waku/sdk/dist/waku.js ***!
  \*********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DefaultPingKeepAliveValueSecs: () => (/* binding */ DefaultPingKeepAliveValueSecs),\n/* harmony export */   DefaultRelayKeepAliveValueSecs: () => (/* binding */ DefaultRelayKeepAliveValueSecs),\n/* harmony export */   DefaultUserAgent: () => (/* binding */ DefaultUserAgent),\n/* harmony export */   WakuNode: () => (/* binding */ WakuNode)\n/* harmony export */ });\n/* harmony import */ var _libp2p_interface__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @libp2p/interface */ \"(ssr)/./node_modules/@libp2p/interface/dist/src/peer-id/index.js\");\n/* harmony import */ var _multiformats_multiaddr__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @multiformats/multiaddr */ \"(ssr)/./node_modules/@multiformats/multiaddr/dist/src/index.js\");\n/* harmony import */ var _waku_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @waku/core */ \"(ssr)/./node_modules/@waku/sdk/node_modules/@waku/core/dist/index.js\");\n/* harmony import */ var _waku_interfaces__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @waku/interfaces */ \"(ssr)/./node_modules/@waku/sdk/node_modules/@waku/interfaces/dist/index.js\");\n/* harmony import */ var _waku_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @waku/utils */ \"(ssr)/./node_modules/@waku/utils/dist/index.js\");\n/* harmony import */ var _utils_content_topic_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./utils/content_topic.js */ \"(ssr)/./node_modules/@waku/sdk/dist/utils/content_topic.js\");\n\n\n\n\n\n\nconst DefaultPingKeepAliveValueSecs = 5 * 60;\nconst DefaultRelayKeepAliveValueSecs = 5 * 60;\nconst DefaultUserAgent = \"js-waku\";\nconst log = new _waku_utils__WEBPACK_IMPORTED_MODULE_3__.Logger(\"waku\");\nclass WakuNode {\n    constructor(options, libp2p, store, lightPush, filter, relay){\n        if (options.pubsubTopics.length == 0) {\n            throw new Error(\"At least one pubsub topic must be provided\");\n        }\n        this.pubsubTopics = options.pubsubTopics;\n        this.libp2p = libp2p;\n        if (store) {\n            this.store = store(libp2p);\n        }\n        if (filter) {\n            this.filter = filter(libp2p);\n        }\n        if (lightPush) {\n            this.lightPush = lightPush(libp2p);\n        }\n        if (relay) {\n            this.relay = relay(libp2p);\n        }\n        const pingKeepAlive = options.pingKeepAlive || DefaultPingKeepAliveValueSecs;\n        const relayKeepAlive = this.relay ? options.relayKeepAlive || DefaultRelayKeepAliveValueSecs : 0;\n        const peerId = this.libp2p.peerId.toString();\n        this.connectionManager = _waku_core__WEBPACK_IMPORTED_MODULE_1__.ConnectionManager.create(peerId, libp2p, {\n            pingKeepAlive,\n            relayKeepAlive\n        }, this.pubsubTopics, this.relay);\n        log.info(\"Waku node created\", peerId, `relay: ${!!this.relay}, store: ${!!this.store}, light push: ${!!this.lightPush}, filter: ${!!this.filter}`);\n    }\n    /**\n     * Dials to the provided peer.\n     *\n     * @param peer The peer to dial\n     * @param protocols Waku protocols we expect from the peer; Defaults to mounted protocols\n     */ async dial(peer, protocols) {\n        const _protocols = protocols ?? [];\n        const peerId = mapToPeerIdOrMultiaddr(peer);\n        if (typeof protocols === \"undefined\") {\n            this.relay && _protocols.push(_waku_interfaces__WEBPACK_IMPORTED_MODULE_2__.Protocols.Relay);\n            this.store && _protocols.push(_waku_interfaces__WEBPACK_IMPORTED_MODULE_2__.Protocols.Store);\n            this.filter && _protocols.push(_waku_interfaces__WEBPACK_IMPORTED_MODULE_2__.Protocols.Filter);\n            this.lightPush && _protocols.push(_waku_interfaces__WEBPACK_IMPORTED_MODULE_2__.Protocols.LightPush);\n        }\n        const codecs = [];\n        if (_protocols.includes(_waku_interfaces__WEBPACK_IMPORTED_MODULE_2__.Protocols.Relay)) {\n            if (this.relay) {\n                this.relay.gossipSub.multicodecs.forEach((codec)=>codecs.push(codec));\n            } else {\n                log.error(\"Relay codec not included in dial codec: protocol not mounted locally\");\n            }\n        }\n        if (_protocols.includes(_waku_interfaces__WEBPACK_IMPORTED_MODULE_2__.Protocols.Store)) {\n            if (this.store) {\n                codecs.push(this.store.protocol.multicodec);\n            } else {\n                log.error(\"Store codec not included in dial codec: protocol not mounted locally\");\n            }\n        }\n        if (_protocols.includes(_waku_interfaces__WEBPACK_IMPORTED_MODULE_2__.Protocols.LightPush)) {\n            if (this.lightPush) {\n                codecs.push(this.lightPush.protocol.multicodec);\n            } else {\n                log.error(\"Light Push codec not included in dial codec: protocol not mounted locally\");\n            }\n        }\n        if (_protocols.includes(_waku_interfaces__WEBPACK_IMPORTED_MODULE_2__.Protocols.Filter)) {\n            if (this.filter) {\n                codecs.push(this.filter.multicodec);\n            } else {\n                log.error(\"Filter codec not included in dial codec: protocol not mounted locally\");\n            }\n        }\n        log.info(`Dialing to ${peerId.toString()} with protocols ${_protocols}`);\n        return this.libp2p.dialProtocol(peerId, codecs);\n    }\n    async start() {\n        await this.libp2p.start();\n    }\n    async stop() {\n        this.connectionManager.stop();\n        await this.libp2p.stop();\n    }\n    async subscribeToContentTopic(contentTopic, peer, callback) {\n        return (await (0,_utils_content_topic_js__WEBPACK_IMPORTED_MODULE_4__.subscribeToContentTopic)(contentTopic, callback, {\n            waku: this,\n            peer\n        })).subscription;\n    }\n    isStarted() {\n        return this.libp2p.status == \"started\";\n    }\n    isConnected() {\n        return this.connectionManager.isConnected();\n    }\n    /**\n     * Return the local multiaddr with peer id on which libp2p is listening.\n     *\n     * @throws if libp2p is not listening on localhost.\n     */ getLocalMultiaddrWithID() {\n        const localMultiaddr = this.libp2p.getMultiaddrs().find((addr)=>addr.toString().match(/127\\.0\\.0\\.1/));\n        if (!localMultiaddr || localMultiaddr.toString() === \"\") {\n            throw \"Not listening on localhost\";\n        }\n        return localMultiaddr + \"/p2p/\" + this.libp2p.peerId.toString();\n    }\n}\nfunction mapToPeerIdOrMultiaddr(peerId) {\n    return (0,_libp2p_interface__WEBPACK_IMPORTED_MODULE_5__.isPeerId)(peerId) ? peerId : (0,_multiformats_multiaddr__WEBPACK_IMPORTED_MODULE_0__.multiaddr)(peerId);\n} //# sourceMappingURL=waku.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/sdk/dist/waku.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/sdk/node_modules/@waku/core/dist/index.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@waku/sdk/node_modules/@waku/core/dist/index.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ConnectionManager: () => (/* reexport safe */ _lib_connection_manager_js__WEBPACK_IMPORTED_MODULE_6__.ConnectionManager),\n/* harmony export */   FilterCodecs: () => (/* reexport safe */ _lib_filter_index_js__WEBPACK_IMPORTED_MODULE_2__.FilterCodecs),\n/* harmony export */   KeepAliveManager: () => (/* reexport safe */ _lib_keep_alive_manager_js__WEBPACK_IMPORTED_MODULE_7__.KeepAliveManager),\n/* harmony export */   LightPushCodec: () => (/* reexport safe */ _lib_light_push_index_js__WEBPACK_IMPORTED_MODULE_3__.LightPushCodec),\n/* harmony export */   LightPushCore: () => (/* reexport safe */ _lib_light_push_index_js__WEBPACK_IMPORTED_MODULE_3__.LightPushCore),\n/* harmony export */   MetadataCodec: () => (/* reexport safe */ _lib_metadata_index_js__WEBPACK_IMPORTED_MODULE_9__.MetadataCodec),\n/* harmony export */   PageDirection: () => (/* reexport safe */ _lib_store_index_js__WEBPACK_IMPORTED_MODULE_4__.PageDirection),\n/* harmony export */   StoreCore: () => (/* reexport safe */ _lib_store_index_js__WEBPACK_IMPORTED_MODULE_4__.StoreCore),\n/* harmony export */   StreamManager: () => (/* reexport safe */ _lib_stream_manager_js__WEBPACK_IMPORTED_MODULE_8__.StreamManager),\n/* harmony export */   createDecoder: () => (/* reexport safe */ _lib_message_version_0_js__WEBPACK_IMPORTED_MODULE_0__.createDecoder),\n/* harmony export */   createEncoder: () => (/* reexport safe */ _lib_message_version_0_js__WEBPACK_IMPORTED_MODULE_0__.createEncoder),\n/* harmony export */   message: () => (/* reexport module object */ _lib_message_index_js__WEBPACK_IMPORTED_MODULE_1__),\n/* harmony export */   waitForRemotePeer: () => (/* reexport safe */ _lib_wait_for_remote_peer_js__WEBPACK_IMPORTED_MODULE_5__.waitForRemotePeer),\n/* harmony export */   wakuFilter: () => (/* reexport safe */ _lib_filter_index_js__WEBPACK_IMPORTED_MODULE_2__.wakuFilter),\n/* harmony export */   wakuMetadata: () => (/* reexport safe */ _lib_metadata_index_js__WEBPACK_IMPORTED_MODULE_9__.wakuMetadata),\n/* harmony export */   waku_filter: () => (/* reexport module object */ _lib_filter_index_js__WEBPACK_IMPORTED_MODULE_2__),\n/* harmony export */   waku_light_push: () => (/* reexport module object */ _lib_light_push_index_js__WEBPACK_IMPORTED_MODULE_3__),\n/* harmony export */   waku_store: () => (/* reexport module object */ _lib_store_index_js__WEBPACK_IMPORTED_MODULE_4__)\n/* harmony export */ });\n/* harmony import */ var _lib_message_version_0_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./lib/message/version_0.js */ \"(ssr)/./node_modules/@waku/sdk/node_modules/@waku/core/dist/lib/message/version_0.js\");\n/* harmony import */ var _lib_message_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./lib/message/index.js */ \"(ssr)/./node_modules/@waku/sdk/node_modules/@waku/core/dist/lib/message/index.js\");\n/* harmony import */ var _lib_filter_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./lib/filter/index.js */ \"(ssr)/./node_modules/@waku/sdk/node_modules/@waku/core/dist/lib/filter/index.js\");\n/* harmony import */ var _lib_light_push_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./lib/light_push/index.js */ \"(ssr)/./node_modules/@waku/sdk/node_modules/@waku/core/dist/lib/light_push/index.js\");\n/* harmony import */ var _lib_store_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./lib/store/index.js */ \"(ssr)/./node_modules/@waku/sdk/node_modules/@waku/core/dist/lib/store/index.js\");\n/* harmony import */ var _lib_wait_for_remote_peer_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./lib/wait_for_remote_peer.js */ \"(ssr)/./node_modules/@waku/sdk/node_modules/@waku/core/dist/lib/wait_for_remote_peer.js\");\n/* harmony import */ var _lib_connection_manager_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./lib/connection_manager.js */ \"(ssr)/./node_modules/@waku/sdk/node_modules/@waku/core/dist/lib/connection_manager.js\");\n/* harmony import */ var _lib_keep_alive_manager_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./lib/keep_alive_manager.js */ \"(ssr)/./node_modules/@waku/sdk/node_modules/@waku/core/dist/lib/keep_alive_manager.js\");\n/* harmony import */ var _lib_stream_manager_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./lib/stream_manager.js */ \"(ssr)/./node_modules/@waku/sdk/node_modules/@waku/core/dist/lib/stream_manager.js\");\n/* harmony import */ var _lib_metadata_index_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./lib/metadata/index.js */ \"(ssr)/./node_modules/@waku/sdk/node_modules/@waku/core/dist/lib/metadata/index.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdha3Uvc2RrL25vZGVfbW9kdWxlcy9Ad2FrdS9jb3JlL2Rpc3QvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUEwRTtBQUN4QjtBQUNHO0FBQ1k7QUFDSjtBQUNhO0FBQ3ZCO0FBQ0Y7QUFDSTtBQUNhO0FBQ0Y7QUFDRDtBQUNQO0FBQ2MsQ0FDdEUsaUNBQWlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZmx1c2gtbm90ZXMvLi9ub2RlX21vZHVsZXMvQHdha3Uvc2RrL25vZGVfbW9kdWxlcy9Ad2FrdS9jb3JlL2Rpc3QvaW5kZXguanM/OGU5YiJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgeyBjcmVhdGVFbmNvZGVyLCBjcmVhdGVEZWNvZGVyIH0gZnJvbSBcIi4vbGliL21lc3NhZ2UvdmVyc2lvbl8wLmpzXCI7XG5leHBvcnQgKiBhcyBtZXNzYWdlIGZyb20gXCIuL2xpYi9tZXNzYWdlL2luZGV4LmpzXCI7XG5leHBvcnQgKiBhcyB3YWt1X2ZpbHRlciBmcm9tIFwiLi9saWIvZmlsdGVyL2luZGV4LmpzXCI7XG5leHBvcnQgeyB3YWt1RmlsdGVyLCBGaWx0ZXJDb2RlY3MgfSBmcm9tIFwiLi9saWIvZmlsdGVyL2luZGV4LmpzXCI7XG5leHBvcnQgKiBhcyB3YWt1X2xpZ2h0X3B1c2ggZnJvbSBcIi4vbGliL2xpZ2h0X3B1c2gvaW5kZXguanNcIjtcbmV4cG9ydCB7IExpZ2h0UHVzaENvZGVjLCBMaWdodFB1c2hDb3JlIH0gZnJvbSBcIi4vbGliL2xpZ2h0X3B1c2gvaW5kZXguanNcIjtcbmV4cG9ydCAqIGFzIHdha3Vfc3RvcmUgZnJvbSBcIi4vbGliL3N0b3JlL2luZGV4LmpzXCI7XG5leHBvcnQgeyBTdG9yZUNvcmUgfSBmcm9tIFwiLi9saWIvc3RvcmUvaW5kZXguanNcIjtcbmV4cG9ydCB7IFBhZ2VEaXJlY3Rpb24gfSBmcm9tIFwiLi9saWIvc3RvcmUvaW5kZXguanNcIjtcbmV4cG9ydCB7IHdhaXRGb3JSZW1vdGVQZWVyIH0gZnJvbSBcIi4vbGliL3dhaXRfZm9yX3JlbW90ZV9wZWVyLmpzXCI7XG5leHBvcnQgeyBDb25uZWN0aW9uTWFuYWdlciB9IGZyb20gXCIuL2xpYi9jb25uZWN0aW9uX21hbmFnZXIuanNcIjtcbmV4cG9ydCB7IEtlZXBBbGl2ZU1hbmFnZXIgfSBmcm9tIFwiLi9saWIva2VlcF9hbGl2ZV9tYW5hZ2VyLmpzXCI7XG5leHBvcnQgeyBTdHJlYW1NYW5hZ2VyIH0gZnJvbSBcIi4vbGliL3N0cmVhbV9tYW5hZ2VyLmpzXCI7XG5leHBvcnQgeyBNZXRhZGF0YUNvZGVjLCB3YWt1TWV0YWRhdGEgfSBmcm9tIFwiLi9saWIvbWV0YWRhdGEvaW5kZXguanNcIjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJuYW1lcyI6WyJjcmVhdGVFbmNvZGVyIiwiY3JlYXRlRGVjb2RlciIsIm1lc3NhZ2UiLCJ3YWt1X2ZpbHRlciIsIndha3VGaWx0ZXIiLCJGaWx0ZXJDb2RlY3MiLCJ3YWt1X2xpZ2h0X3B1c2giLCJMaWdodFB1c2hDb2RlYyIsIkxpZ2h0UHVzaENvcmUiLCJ3YWt1X3N0b3JlIiwiU3RvcmVDb3JlIiwiUGFnZURpcmVjdGlvbiIsIndhaXRGb3JSZW1vdGVQZWVyIiwiQ29ubmVjdGlvbk1hbmFnZXIiLCJLZWVwQWxpdmVNYW5hZ2VyIiwiU3RyZWFtTWFuYWdlciIsIk1ldGFkYXRhQ29kZWMiLCJ3YWt1TWV0YWRhdGEiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/sdk/node_modules/@waku/core/dist/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/sdk/node_modules/@waku/core/dist/lib/base_protocol.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@waku/sdk/node_modules/@waku/core/dist/lib/base_protocol.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BaseProtocol: () => (/* binding */ BaseProtocol)\n/* harmony export */ });\n/* harmony import */ var _waku_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @waku/utils */ \"(ssr)/./node_modules/@waku/utils/dist/index.js\");\n/* harmony import */ var _waku_utils_libp2p__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @waku/utils/libp2p */ \"(ssr)/./node_modules/@waku/utils/dist/libp2p/index.js\");\n/* harmony import */ var _filterPeers_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./filterPeers.js */ \"(ssr)/./node_modules/@waku/sdk/node_modules/@waku/core/dist/lib/filterPeers.js\");\n/* harmony import */ var _stream_manager_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./stream_manager.js */ \"(ssr)/./node_modules/@waku/sdk/node_modules/@waku/core/dist/lib/stream_manager.js\");\n\n\n\n\n/**\n * A class with predefined helpers, to be used as a base to implement Waku\n * Protocols.\n */ class BaseProtocol {\n    constructor(multicodec, components, log, pubsubTopics, options){\n        this.multicodec = multicodec;\n        this.components = components;\n        this.log = log;\n        this.pubsubTopics = pubsubTopics;\n        this.options = options;\n        this.addLibp2pEventListener = components.events.addEventListener.bind(components.events);\n        this.removeLibp2pEventListener = components.events.removeEventListener.bind(components.events);\n        this.streamManager = new _stream_manager_js__WEBPACK_IMPORTED_MODULE_3__.StreamManager(multicodec, components.connectionManager.getConnections.bind(components.connectionManager), this.addLibp2pEventListener);\n    }\n    async getStream(peer) {\n        return this.streamManager.getStream(peer);\n    }\n    get peerStore() {\n        return this.components.peerStore;\n    }\n    /**\n     * Returns known peers from the address book (`libp2p.peerStore`) that support\n     * the class protocol. Waku may or may not be currently connected to these\n     * peers.\n     */ async allPeers() {\n        return (0,_waku_utils_libp2p__WEBPACK_IMPORTED_MODULE_1__.getPeersForProtocol)(this.peerStore, [\n            this.multicodec\n        ]);\n    }\n    async connectedPeers() {\n        const peers = await this.allPeers();\n        return peers.filter((peer)=>{\n            return this.components.connectionManager.getConnections(peer.id).length > 0;\n        });\n    }\n    /**\n     * Retrieves a list of connected peers that support the protocol. The list is sorted by latency.\n     *\n     * @param numPeers - The total number of peers to retrieve. If 0, all peers are returned.\n     * @param maxBootstrapPeers - The maximum number of bootstrap peers to retrieve.\n  \n    * @returns A list of peers that support the protocol sorted by latency.\n    */ async getPeers({ numPeers, maxBootstrapPeers } = {\n        maxBootstrapPeers: 1,\n        numPeers: 0\n    }) {\n        // Retrieve all connected peers that support the protocol & shard (if configured)\n        const connectedPeersForProtocolAndShard = await (0,_waku_utils_libp2p__WEBPACK_IMPORTED_MODULE_1__.getConnectedPeersForProtocolAndShard)(this.components.connectionManager.getConnections(), this.peerStore, [\n            this.multicodec\n        ], this.options?.shardInfo ? (0,_waku_utils__WEBPACK_IMPORTED_MODULE_0__.ensureShardingConfigured)(this.options.shardInfo).shardInfo : undefined);\n        // Filter the peers based on discovery & number of peers requested\n        const filteredPeers = (0,_filterPeers_js__WEBPACK_IMPORTED_MODULE_2__.filterPeersByDiscovery)(connectedPeersForProtocolAndShard, numPeers, maxBootstrapPeers);\n        // Sort the peers by latency\n        const sortedFilteredPeers = await (0,_waku_utils_libp2p__WEBPACK_IMPORTED_MODULE_1__.sortPeersByLatency)(this.peerStore, filteredPeers);\n        if (sortedFilteredPeers.length === 0) {\n            this.log.warn(\"No peers found. Ensure you have a connection to the network.\");\n        }\n        if (sortedFilteredPeers.length < numPeers) {\n            this.log.warn(`Only ${sortedFilteredPeers.length} peers found. Requested ${numPeers}.`);\n        }\n        return sortedFilteredPeers;\n    }\n} //# sourceMappingURL=base_protocol.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/sdk/node_modules/@waku/core/dist/lib/base_protocol.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/sdk/node_modules/@waku/core/dist/lib/connection_manager.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@waku/sdk/node_modules/@waku/core/dist/lib/connection_manager.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ConnectionManager: () => (/* binding */ ConnectionManager),\n/* harmony export */   DEFAULT_MAX_BOOTSTRAP_PEERS_ALLOWED: () => (/* binding */ DEFAULT_MAX_BOOTSTRAP_PEERS_ALLOWED),\n/* harmony export */   DEFAULT_MAX_DIAL_ATTEMPTS_FOR_PEER: () => (/* binding */ DEFAULT_MAX_DIAL_ATTEMPTS_FOR_PEER),\n/* harmony export */   DEFAULT_MAX_PARALLEL_DIALS: () => (/* binding */ DEFAULT_MAX_PARALLEL_DIALS)\n/* harmony export */ });\n/* harmony import */ var _libp2p_interface__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @libp2p/interface */ \"(ssr)/./node_modules/@libp2p/interface/dist/src/event-target.js\");\n/* harmony import */ var _waku_interfaces__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @waku/interfaces */ \"(ssr)/./node_modules/@waku/sdk/node_modules/@waku/interfaces/dist/index.js\");\n/* harmony import */ var _waku_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @waku/utils */ \"(ssr)/./node_modules/@waku/utils/dist/index.js\");\n/* harmony import */ var _keep_alive_manager_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./keep_alive_manager.js */ \"(ssr)/./node_modules/@waku/sdk/node_modules/@waku/core/dist/lib/keep_alive_manager.js\");\n\n\n\n\n\n\nconst log = new _waku_utils__WEBPACK_IMPORTED_MODULE_1__.Logger(\"connection-manager\");\nconst DEFAULT_MAX_BOOTSTRAP_PEERS_ALLOWED = 1;\nconst DEFAULT_MAX_DIAL_ATTEMPTS_FOR_PEER = 3;\nconst DEFAULT_MAX_PARALLEL_DIALS = 3;\nclass ConnectionManager extends _libp2p_interface__WEBPACK_IMPORTED_MODULE_3__.TypedEventEmitter {\n    static{\n        this.instances = new Map();\n    }\n    isConnected() {\n        return this.online;\n    }\n    toggleOnline() {\n        if (!this.online) {\n            this.online = true;\n            this.dispatchEvent(new _libp2p_interface__WEBPACK_IMPORTED_MODULE_3__.CustomEvent(_waku_interfaces__WEBPACK_IMPORTED_MODULE_0__.EConnectionStateEvents.CONNECTION_STATUS, {\n                detail: this.online\n            }));\n        }\n    }\n    toggleOffline() {\n        if (this.online && this.libp2p.getConnections().length == 0) {\n            this.online = false;\n            this.dispatchEvent(new _libp2p_interface__WEBPACK_IMPORTED_MODULE_3__.CustomEvent(_waku_interfaces__WEBPACK_IMPORTED_MODULE_0__.EConnectionStateEvents.CONNECTION_STATUS, {\n                detail: this.online\n            }));\n        }\n    }\n    static create(peerId, libp2p, keepAliveOptions, pubsubTopics, relay, options) {\n        let instance = ConnectionManager.instances.get(peerId);\n        if (!instance) {\n            instance = new ConnectionManager(libp2p, keepAliveOptions, pubsubTopics, relay, options);\n            ConnectionManager.instances.set(peerId, instance);\n        }\n        return instance;\n    }\n    async getPeersByDiscovery() {\n        const peersDiscovered = await this.libp2p.peerStore.all();\n        const peersConnected = this.libp2p.getConnections().map((conn)=>conn.remotePeer);\n        const peersDiscoveredByBootstrap = [];\n        const peersDiscoveredByPeerExchange = [];\n        const peersDiscoveredByLocal = [];\n        const peersConnectedByBootstrap = [];\n        const peersConnectedByPeerExchange = [];\n        const peersConnectedByLocal = [];\n        for (const peer of peersDiscovered){\n            const tags = await this.getTagNamesForPeer(peer.id);\n            if (tags.includes(_waku_interfaces__WEBPACK_IMPORTED_MODULE_0__.Tags.BOOTSTRAP)) {\n                peersDiscoveredByBootstrap.push(peer);\n            } else if (tags.includes(_waku_interfaces__WEBPACK_IMPORTED_MODULE_0__.Tags.PEER_EXCHANGE)) {\n                peersDiscoveredByPeerExchange.push(peer);\n            } else if (tags.includes(_waku_interfaces__WEBPACK_IMPORTED_MODULE_0__.Tags.LOCAL)) {\n                peersDiscoveredByLocal.push(peer);\n            }\n        }\n        for (const peerId of peersConnected){\n            const peer = await this.libp2p.peerStore.get(peerId);\n            const tags = await this.getTagNamesForPeer(peerId);\n            if (tags.includes(_waku_interfaces__WEBPACK_IMPORTED_MODULE_0__.Tags.BOOTSTRAP)) {\n                peersConnectedByBootstrap.push(peer);\n            } else if (tags.includes(_waku_interfaces__WEBPACK_IMPORTED_MODULE_0__.Tags.PEER_EXCHANGE)) {\n                peersConnectedByPeerExchange.push(peer);\n            } else if (tags.includes(_waku_interfaces__WEBPACK_IMPORTED_MODULE_0__.Tags.LOCAL)) {\n                peersConnectedByLocal.push(peer);\n            }\n        }\n        return {\n            DISCOVERED: {\n                [_waku_interfaces__WEBPACK_IMPORTED_MODULE_0__.Tags.BOOTSTRAP]: peersDiscoveredByBootstrap,\n                [_waku_interfaces__WEBPACK_IMPORTED_MODULE_0__.Tags.PEER_EXCHANGE]: peersDiscoveredByPeerExchange,\n                [_waku_interfaces__WEBPACK_IMPORTED_MODULE_0__.Tags.LOCAL]: peersDiscoveredByLocal\n            },\n            CONNECTED: {\n                [_waku_interfaces__WEBPACK_IMPORTED_MODULE_0__.Tags.BOOTSTRAP]: peersConnectedByBootstrap,\n                [_waku_interfaces__WEBPACK_IMPORTED_MODULE_0__.Tags.PEER_EXCHANGE]: peersConnectedByPeerExchange,\n                [_waku_interfaces__WEBPACK_IMPORTED_MODULE_0__.Tags.LOCAL]: peersConnectedByLocal\n            }\n        };\n    }\n    constructor(libp2p, keepAliveOptions, configuredPubsubTopics, relay, options){\n        super();\n        this.dialAttemptsForPeer = new Map();\n        this.dialErrorsForPeer = new Map();\n        this.currentActiveParallelDialCount = 0;\n        this.pendingPeerDialQueue = [];\n        this.online = false;\n        this.onEventHandlers = {\n            \"peer:discovery\": (evt)=>{\n                void (async ()=>{\n                    const { id: peerId } = evt.detail;\n                    await this.dispatchDiscoveryEvent(peerId);\n                    try {\n                        await this.attemptDial(peerId);\n                    } catch (error) {\n                        log.error(`Error dialing peer ${peerId.toString()} : ${error}`);\n                    }\n                })();\n            },\n            \"peer:connect\": (evt)=>{\n                void (async ()=>{\n                    log.info(`Connected to peer ${evt.detail.toString()}`);\n                    const peerId = evt.detail;\n                    this.keepAliveManager.start(peerId, this.libp2p.services.ping, this.libp2p.peerStore);\n                    const isBootstrap = (await this.getTagNamesForPeer(peerId)).includes(_waku_interfaces__WEBPACK_IMPORTED_MODULE_0__.Tags.BOOTSTRAP);\n                    if (isBootstrap) {\n                        const bootstrapConnections = this.libp2p.getConnections().filter((conn)=>conn.tags.includes(_waku_interfaces__WEBPACK_IMPORTED_MODULE_0__.Tags.BOOTSTRAP));\n                        // If we have too many bootstrap connections, drop one\n                        if (bootstrapConnections.length > this.options.maxBootstrapPeersAllowed) {\n                            await this.dropConnection(peerId);\n                        } else {\n                            this.dispatchEvent(new _libp2p_interface__WEBPACK_IMPORTED_MODULE_3__.CustomEvent(_waku_interfaces__WEBPACK_IMPORTED_MODULE_0__.EPeersByDiscoveryEvents.PEER_CONNECT_BOOTSTRAP, {\n                                detail: peerId\n                            }));\n                        }\n                    } else {\n                        this.dispatchEvent(new _libp2p_interface__WEBPACK_IMPORTED_MODULE_3__.CustomEvent(_waku_interfaces__WEBPACK_IMPORTED_MODULE_0__.EPeersByDiscoveryEvents.PEER_CONNECT_PEER_EXCHANGE, {\n                            detail: peerId\n                        }));\n                    }\n                    this.toggleOnline();\n                })();\n            },\n            \"peer:disconnect\": (evt)=>{\n                void (async ()=>{\n                    this.keepAliveManager.stop(evt.detail);\n                    this.toggleOffline();\n                })();\n            }\n        };\n        this.configuredPubsubTopics = configuredPubsubTopics;\n        this.libp2p = libp2p;\n        this.configuredPubsubTopics = configuredPubsubTopics;\n        this.options = {\n            maxDialAttemptsForPeer: DEFAULT_MAX_DIAL_ATTEMPTS_FOR_PEER,\n            maxBootstrapPeersAllowed: DEFAULT_MAX_BOOTSTRAP_PEERS_ALLOWED,\n            maxParallelDials: DEFAULT_MAX_PARALLEL_DIALS,\n            ...options\n        };\n        this.keepAliveManager = new _keep_alive_manager_js__WEBPACK_IMPORTED_MODULE_2__.KeepAliveManager(keepAliveOptions, relay);\n        this.run().then(()=>log.info(`Connection Manager is now running`)).catch((error)=>log.error(`Unexpected error while running service`, error));\n        // libp2p emits `peer:discovery` events during its initialization\n        // which means that before the ConnectionManager is initialized, some peers may have been discovered\n        // we will dial the peers in peerStore ONCE before we start to listen to the `peer:discovery` events within the ConnectionManager\n        this.dialPeerStorePeers().catch((error)=>log.error(`Unexpected error while dialing peer store peers`, error));\n    }\n    async dialPeerStorePeers() {\n        const peerInfos = await this.libp2p.peerStore.all();\n        const dialPromises = [];\n        for (const peerInfo of peerInfos){\n            if (this.libp2p.getConnections().find((c)=>c.remotePeer === peerInfo.id)) continue;\n            dialPromises.push(this.attemptDial(peerInfo.id));\n        }\n        try {\n            await Promise.all(dialPromises);\n        } catch (error) {\n            log.error(`Unexpected error while dialing peer store peers`, error);\n        }\n    }\n    async run() {\n        // start event listeners\n        this.startPeerDiscoveryListener();\n        this.startPeerConnectionListener();\n        this.startPeerDisconnectionListener();\n    }\n    stop() {\n        this.keepAliveManager.stopAll();\n        this.libp2p.removeEventListener(\"peer:connect\", this.onEventHandlers[\"peer:connect\"]);\n        this.libp2p.removeEventListener(\"peer:disconnect\", this.onEventHandlers[\"peer:disconnect\"]);\n        this.libp2p.removeEventListener(\"peer:discovery\", this.onEventHandlers[\"peer:discovery\"]);\n    }\n    async dialPeer(peerId) {\n        this.currentActiveParallelDialCount += 1;\n        let dialAttempt = 0;\n        while(dialAttempt < this.options.maxDialAttemptsForPeer){\n            try {\n                log.info(`Dialing peer ${peerId.toString()} on attempt ${dialAttempt + 1}`);\n                await this.libp2p.dial(peerId);\n                const tags = await this.getTagNamesForPeer(peerId);\n                // add tag to connection describing discovery mechanism\n                // don't add duplicate tags\n                this.libp2p.getConnections(peerId).forEach((conn)=>{\n                    conn.tags = Array.from(new Set([\n                        ...conn.tags,\n                        ...tags\n                    ]));\n                });\n                // instead of deleting the peer from the peer store, we set the dial attempt to -1\n                // this helps us keep track of peers that have been dialed before\n                this.dialAttemptsForPeer.set(peerId.toString(), -1);\n                break;\n            } catch (error) {\n                if (error instanceof AggregateError) {\n                    // Handle AggregateError\n                    log.error(`Error dialing peer ${peerId.toString()} - ${error.errors}`);\n                } else {\n                    // Handle generic error\n                    log.error(`Error dialing peer ${peerId.toString()} - ${error.message}`);\n                }\n                this.dialErrorsForPeer.set(peerId.toString(), error);\n                dialAttempt++;\n                this.dialAttemptsForPeer.set(peerId.toString(), dialAttempt);\n            }\n        }\n        // Always decrease the active dial count and process the dial queue\n        this.currentActiveParallelDialCount--;\n        this.processDialQueue();\n        // If max dial attempts reached and dialing failed, delete the peer\n        if (dialAttempt === this.options.maxDialAttemptsForPeer) {\n            try {\n                const error = this.dialErrorsForPeer.get(peerId.toString());\n                if (error) {\n                    let errorMessage;\n                    if (error instanceof AggregateError) {\n                        if (!error.errors) {\n                            log.warn(`No errors array found for AggregateError`);\n                        } else if (error.errors.length === 0) {\n                            log.warn(`Errors array is empty for AggregateError`);\n                        } else {\n                            errorMessage = JSON.stringify(error.errors[0]);\n                        }\n                    } else {\n                        errorMessage = error.message;\n                    }\n                    log.info(`Deleting undialable peer ${peerId.toString()} from peer store. Reason: ${errorMessage}`);\n                }\n                this.dialErrorsForPeer.delete(peerId.toString());\n                await this.libp2p.peerStore.delete(peerId);\n            } catch (error) {\n                throw new Error(`Error deleting undialable peer ${peerId.toString()} from peer store - ${error}`);\n            }\n        }\n    }\n    async dropConnection(peerId) {\n        try {\n            this.keepAliveManager.stop(peerId);\n            await this.libp2p.hangUp(peerId);\n            log.info(`Dropped connection with peer ${peerId.toString()}`);\n        } catch (error) {\n            log.error(`Error dropping connection with peer ${peerId.toString()} - ${error}`);\n        }\n    }\n    processDialQueue() {\n        if (this.pendingPeerDialQueue.length > 0 && this.currentActiveParallelDialCount < this.options.maxParallelDials) {\n            const peerId = this.pendingPeerDialQueue.shift();\n            if (!peerId) return;\n            this.attemptDial(peerId).catch((error)=>{\n                log.error(error);\n            });\n        }\n    }\n    startPeerDiscoveryListener() {\n        this.libp2p.addEventListener(\"peer:discovery\", this.onEventHandlers[\"peer:discovery\"]);\n    }\n    startPeerConnectionListener() {\n        this.libp2p.addEventListener(\"peer:connect\", this.onEventHandlers[\"peer:connect\"]);\n    }\n    startPeerDisconnectionListener() {\n        // TODO: ensure that these following issues are updated and confirmed\n        /**\n         * NOTE: Event is not being emitted on closing nor losing a connection.\n         * @see https://github.com/libp2p/js-libp2p/issues/939\n         * @see https://github.com/status-im/js-waku/issues/252\n         *\n         * >This event will be triggered anytime we are disconnected from another peer,\n         * >regardless of the circumstances of that disconnection.\n         * >If we happen to have multiple connections to a peer,\n         * >this event will **only** be triggered when the last connection is closed.\n         * @see https://github.com/libp2p/js-libp2p/blob/bad9e8c0ff58d60a78314077720c82ae331cc55b/doc/API.md?plain=1#L2100\n         */ this.libp2p.addEventListener(\"peer:disconnect\", this.onEventHandlers[\"peer:disconnect\"]);\n    }\n    async attemptDial(peerId) {\n        if (!await this.shouldDialPeer(peerId)) return;\n        if (this.currentActiveParallelDialCount >= this.options.maxParallelDials) {\n            this.pendingPeerDialQueue.push(peerId);\n            return;\n        }\n        this.dialPeer(peerId).catch((err)=>{\n            log.error(`Error dialing peer ${peerId.toString()} : ${err}`);\n        });\n    }\n    /**\n     * Checks if the peer should be dialed based on the following conditions:\n     * 1. If the peer is already connected, don't dial\n     * 2. If the peer is not part of any of the configured pubsub topics, don't dial\n     * 3. If the peer is not dialable based on bootstrap status, don't dial\n     * 4. If the peer is already has an active dial attempt, or has been dialed before, don't dial it\n     * @returns true if the peer should be dialed, false otherwise\n     */ async shouldDialPeer(peerId) {\n        // if we're already connected to the peer, don't dial\n        const isConnected = this.libp2p.getConnections(peerId).length > 0;\n        if (isConnected) {\n            log.warn(`Already connected to peer ${peerId.toString()}. Not dialing.`);\n            return false;\n        }\n        // if the peer is not part of any of the configured pubsub topics, don't dial\n        if (!await this.isPeerTopicConfigured(peerId)) {\n            const shardInfo = await this.getPeerShardInfo(peerId, this.libp2p.peerStore);\n            log.warn(`Discovered peer ${peerId.toString()} with ShardInfo ${shardInfo} is not part of any of the configured pubsub topics (${this.configuredPubsubTopics}).\n            Not dialing.`);\n            return false;\n        }\n        // if the peer is not dialable based on bootstrap status, don't dial\n        if (!await this.isPeerDialableBasedOnBootstrapStatus(peerId)) {\n            log.warn(`Peer ${peerId.toString()} is not dialable based on bootstrap status. Not dialing.`);\n            return false;\n        }\n        // If the peer is already already has an active dial attempt, or has been dialed before, don't dial it\n        if (this.dialAttemptsForPeer.has(peerId.toString())) {\n            log.warn(`Peer ${peerId.toString()} has already been attempted dial before, or already has a dial attempt in progress, skipping dial`);\n            return false;\n        }\n        return true;\n    }\n    /**\n     * Checks if the peer is dialable based on the following conditions:\n     * 1. If the peer is a bootstrap peer, it is only dialable if the number of current bootstrap connections is less than the max allowed.\n     * 2. If the peer is not a bootstrap peer\n     */ async isPeerDialableBasedOnBootstrapStatus(peerId) {\n        const tagNames = await this.getTagNamesForPeer(peerId);\n        const isBootstrap = tagNames.some((tagName)=>tagName === _waku_interfaces__WEBPACK_IMPORTED_MODULE_0__.Tags.BOOTSTRAP);\n        if (isBootstrap) {\n            const currentBootstrapConnections = this.libp2p.getConnections().filter((conn)=>{\n                return conn.tags.find((name)=>name === _waku_interfaces__WEBPACK_IMPORTED_MODULE_0__.Tags.BOOTSTRAP);\n            }).length;\n            if (currentBootstrapConnections < this.options.maxBootstrapPeersAllowed) return true;\n        } else {\n            return true;\n        }\n        return false;\n    }\n    async dispatchDiscoveryEvent(peerId) {\n        const isBootstrap = (await this.getTagNamesForPeer(peerId)).includes(_waku_interfaces__WEBPACK_IMPORTED_MODULE_0__.Tags.BOOTSTRAP);\n        this.dispatchEvent(new _libp2p_interface__WEBPACK_IMPORTED_MODULE_3__.CustomEvent(isBootstrap ? _waku_interfaces__WEBPACK_IMPORTED_MODULE_0__.EPeersByDiscoveryEvents.PEER_DISCOVERY_BOOTSTRAP : _waku_interfaces__WEBPACK_IMPORTED_MODULE_0__.EPeersByDiscoveryEvents.PEER_DISCOVERY_PEER_EXCHANGE, {\n            detail: peerId\n        }));\n    }\n    /**\n     * Fetches the tag names for a given peer\n     */ async getTagNamesForPeer(peerId) {\n        try {\n            const peer = await this.libp2p.peerStore.get(peerId);\n            return Array.from(peer.tags.keys());\n        } catch (error) {\n            log.error(`Failed to get peer ${peerId}, error: ${error}`);\n            return [];\n        }\n    }\n    async isPeerTopicConfigured(peerId) {\n        const shardInfo = await this.getPeerShardInfo(peerId, this.libp2p.peerStore);\n        // If there's no shard information, simply return true\n        if (!shardInfo) return true;\n        const pubsubTopics = (0,_waku_utils__WEBPACK_IMPORTED_MODULE_1__.shardInfoToPubsubTopics)(shardInfo);\n        const isTopicConfigured = pubsubTopics.some((topic)=>this.configuredPubsubTopics.includes(topic));\n        return isTopicConfigured;\n    }\n    async getPeerShardInfo(peerId, peerStore) {\n        const peer = await peerStore.get(peerId);\n        const shardInfoBytes = peer.metadata.get(\"shardInfo\");\n        if (!shardInfoBytes) return undefined;\n        return (0,_waku_utils__WEBPACK_IMPORTED_MODULE_1__.decodeRelayShard)(shardInfoBytes);\n    }\n} //# sourceMappingURL=connection_manager.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/sdk/node_modules/@waku/core/dist/lib/connection_manager.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/sdk/node_modules/@waku/core/dist/lib/filter/filter_rpc.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@waku/sdk/node_modules/@waku/core/dist/lib/filter/filter_rpc.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   FilterPushRpc: () => (/* binding */ FilterPushRpc),\n/* harmony export */   FilterSubscribeResponse: () => (/* binding */ FilterSubscribeResponse),\n/* harmony export */   FilterSubscribeRpc: () => (/* binding */ FilterSubscribeRpc)\n/* harmony export */ });\n/* harmony import */ var _waku_proto__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @waku/proto */ \"(ssr)/./node_modules/@waku/sdk/node_modules/@waku/proto/dist/index.js\");\n/* harmony import */ var uuid__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! uuid */ \"(ssr)/./node_modules/uuid/dist/esm-node/v4.js\");\n\n\n/**\n * FilterPushRPC represents a message conforming to the Waku FilterPush protocol.\n * Protocol documentation: https://rfc.vac.dev/spec/12/\n */ class FilterPushRpc {\n    constructor(proto){\n        this.proto = proto;\n    }\n    static decode(bytes) {\n        const res = _waku_proto__WEBPACK_IMPORTED_MODULE_0__.proto_filter_v2.MessagePush.decode(bytes);\n        return new FilterPushRpc(res);\n    }\n    encode() {\n        return _waku_proto__WEBPACK_IMPORTED_MODULE_0__.proto_filter_v2.MessagePush.encode(this.proto);\n    }\n    get wakuMessage() {\n        return this.proto.wakuMessage;\n    }\n    /**\n     * Get the pubsub topic from the FilterPushRpc object.\n     * @returns string\n     */ get pubsubTopic() {\n        return this.proto.pubsubTopic;\n    }\n}\nclass FilterSubscribeRpc {\n    constructor(proto){\n        this.proto = proto;\n    }\n    static createSubscribeRequest(pubsubTopic, contentTopics) {\n        return new FilterSubscribeRpc({\n            requestId: (0,uuid__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(),\n            filterSubscribeType: _waku_proto__WEBPACK_IMPORTED_MODULE_0__.proto_filter_v2.FilterSubscribeRequest.FilterSubscribeType.SUBSCRIBE,\n            pubsubTopic,\n            contentTopics\n        });\n    }\n    static createUnsubscribeRequest(pubsubTopic, contentTopics) {\n        return new FilterSubscribeRpc({\n            requestId: (0,uuid__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(),\n            filterSubscribeType: _waku_proto__WEBPACK_IMPORTED_MODULE_0__.proto_filter_v2.FilterSubscribeRequest.FilterSubscribeType.UNSUBSCRIBE,\n            pubsubTopic,\n            contentTopics\n        });\n    }\n    static createUnsubscribeAllRequest(pubsubTopic) {\n        return new FilterSubscribeRpc({\n            requestId: (0,uuid__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(),\n            filterSubscribeType: _waku_proto__WEBPACK_IMPORTED_MODULE_0__.proto_filter_v2.FilterSubscribeRequest.FilterSubscribeType.UNSUBSCRIBE_ALL,\n            pubsubTopic,\n            contentTopics: []\n        });\n    }\n    static createSubscriberPingRequest() {\n        return new FilterSubscribeRpc({\n            requestId: (0,uuid__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(),\n            filterSubscribeType: _waku_proto__WEBPACK_IMPORTED_MODULE_0__.proto_filter_v2.FilterSubscribeRequest.FilterSubscribeType.SUBSCRIBER_PING,\n            pubsubTopic: \"\",\n            contentTopics: []\n        });\n    }\n    static decode(bytes) {\n        const res = _waku_proto__WEBPACK_IMPORTED_MODULE_0__.proto_filter_v2.FilterSubscribeRequest.decode(bytes);\n        return new FilterSubscribeRpc(res);\n    }\n    encode() {\n        return _waku_proto__WEBPACK_IMPORTED_MODULE_0__.proto_filter_v2.FilterSubscribeRequest.encode(this.proto);\n    }\n    get filterSubscribeType() {\n        return this.proto.filterSubscribeType;\n    }\n    get requestId() {\n        return this.proto.requestId;\n    }\n    get pubsubTopic() {\n        return this.proto.pubsubTopic;\n    }\n    get contentTopics() {\n        return this.proto.contentTopics;\n    }\n}\nclass FilterSubscribeResponse {\n    constructor(proto){\n        this.proto = proto;\n    }\n    static decode(bytes) {\n        const res = _waku_proto__WEBPACK_IMPORTED_MODULE_0__.proto_filter_v2.FilterSubscribeResponse.decode(bytes);\n        return new FilterSubscribeResponse(res);\n    }\n    encode() {\n        return _waku_proto__WEBPACK_IMPORTED_MODULE_0__.proto_filter_v2.FilterSubscribeResponse.encode(this.proto);\n    }\n    get statusCode() {\n        return this.proto.statusCode;\n    }\n    get statusDesc() {\n        return this.proto.statusDesc;\n    }\n    get requestId() {\n        return this.proto.requestId;\n    }\n} //# sourceMappingURL=filter_rpc.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdha3Uvc2RrL25vZGVfbW9kdWxlcy9Ad2FrdS9jb3JlL2Rpc3QvbGliL2ZpbHRlci9maWx0ZXJfcnBjLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQXVEO0FBQ3JCO0FBQ2xDOzs7Q0FHQyxHQUNNLE1BQU1JO0lBRVRDLFlBQVlKLEtBQUssQ0FBRTtRQUNmLElBQUksQ0FBQ0EsS0FBSyxHQUFHQTtJQUNqQjtJQUNBLE9BQU9LLE9BQU9DLEtBQUssRUFBRTtRQUNqQixNQUFNQyxNQUFNUCxvRUFBaUIsQ0FBQ0ssTUFBTSxDQUFDQztRQUNyQyxPQUFPLElBQUlILGNBQWNJO0lBQzdCO0lBQ0FFLFNBQVM7UUFDTCxPQUFPVCxvRUFBaUIsQ0FBQ1MsTUFBTSxDQUFDLElBQUksQ0FBQ1QsS0FBSztJQUM5QztJQUNBLElBQUlVLGNBQWM7UUFDZCxPQUFPLElBQUksQ0FBQ1YsS0FBSyxDQUFDVSxXQUFXO0lBQ2pDO0lBQ0E7OztLQUdDLEdBQ0QsSUFBSUMsY0FBYztRQUNkLE9BQU8sSUFBSSxDQUFDWCxLQUFLLENBQUNXLFdBQVc7SUFDakM7QUFDSjtBQUNPLE1BQU1DO0lBRVRSLFlBQVlKLEtBQUssQ0FBRTtRQUNmLElBQUksQ0FBQ0EsS0FBSyxHQUFHQTtJQUNqQjtJQUNBLE9BQU9hLHVCQUF1QkYsV0FBVyxFQUFFRyxhQUFhLEVBQUU7UUFDdEQsT0FBTyxJQUFJRixtQkFBbUI7WUFDMUJHLFdBQVdiLGdEQUFJQTtZQUNmYyxxQkFBcUJoQiwrRUFBNEIsQ0FBQ2tCLG1CQUFtQixDQUFDQyxTQUFTO1lBQy9FUjtZQUNBRztRQUNKO0lBQ0o7SUFDQSxPQUFPTSx5QkFBeUJULFdBQVcsRUFBRUcsYUFBYSxFQUFFO1FBQ3hELE9BQU8sSUFBSUYsbUJBQW1CO1lBQzFCRyxXQUFXYixnREFBSUE7WUFDZmMscUJBQXFCaEIsK0VBQTRCLENBQUNrQixtQkFBbUIsQ0FBQ0csV0FBVztZQUNqRlY7WUFDQUc7UUFDSjtJQUNKO0lBQ0EsT0FBT1EsNEJBQTRCWCxXQUFXLEVBQUU7UUFDNUMsT0FBTyxJQUFJQyxtQkFBbUI7WUFDMUJHLFdBQVdiLGdEQUFJQTtZQUNmYyxxQkFBcUJoQiwrRUFBNEIsQ0FBQ2tCLG1CQUFtQixDQUFDSyxlQUFlO1lBQ3JGWjtZQUNBRyxlQUFlLEVBQUU7UUFDckI7SUFDSjtJQUNBLE9BQU9VLDhCQUE4QjtRQUNqQyxPQUFPLElBQUlaLG1CQUFtQjtZQUMxQkcsV0FBV2IsZ0RBQUlBO1lBQ2ZjLHFCQUFxQmhCLCtFQUE0QixDQUFDa0IsbUJBQW1CLENBQUNPLGVBQWU7WUFDckZkLGFBQWE7WUFDYkcsZUFBZSxFQUFFO1FBQ3JCO0lBQ0o7SUFDQSxPQUFPVCxPQUFPQyxLQUFLLEVBQUU7UUFDakIsTUFBTUMsTUFBTVAsK0VBQTRCLENBQUNLLE1BQU0sQ0FBQ0M7UUFDaEQsT0FBTyxJQUFJTSxtQkFBbUJMO0lBQ2xDO0lBQ0FFLFNBQVM7UUFDTCxPQUFPVCwrRUFBNEIsQ0FBQ1MsTUFBTSxDQUFDLElBQUksQ0FBQ1QsS0FBSztJQUN6RDtJQUNBLElBQUlnQixzQkFBc0I7UUFDdEIsT0FBTyxJQUFJLENBQUNoQixLQUFLLENBQUNnQixtQkFBbUI7SUFDekM7SUFDQSxJQUFJRCxZQUFZO1FBQ1osT0FBTyxJQUFJLENBQUNmLEtBQUssQ0FBQ2UsU0FBUztJQUMvQjtJQUNBLElBQUlKLGNBQWM7UUFDZCxPQUFPLElBQUksQ0FBQ1gsS0FBSyxDQUFDVyxXQUFXO0lBQ2pDO0lBQ0EsSUFBSUcsZ0JBQWdCO1FBQ2hCLE9BQU8sSUFBSSxDQUFDZCxLQUFLLENBQUNjLGFBQWE7SUFDbkM7QUFDSjtBQUNPLE1BQU1ZO0lBRVR0QixZQUFZSixLQUFLLENBQUU7UUFDZixJQUFJLENBQUNBLEtBQUssR0FBR0E7SUFDakI7SUFDQSxPQUFPSyxPQUFPQyxLQUFLLEVBQUU7UUFDakIsTUFBTUMsTUFBTVAsZ0ZBQTZCLENBQUNLLE1BQU0sQ0FBQ0M7UUFDakQsT0FBTyxJQUFJb0Isd0JBQXdCbkI7SUFDdkM7SUFDQUUsU0FBUztRQUNMLE9BQU9ULGdGQUE2QixDQUFDUyxNQUFNLENBQUMsSUFBSSxDQUFDVCxLQUFLO0lBQzFEO0lBQ0EsSUFBSTJCLGFBQWE7UUFDYixPQUFPLElBQUksQ0FBQzNCLEtBQUssQ0FBQzJCLFVBQVU7SUFDaEM7SUFDQSxJQUFJQyxhQUFhO1FBQ2IsT0FBTyxJQUFJLENBQUM1QixLQUFLLENBQUM0QixVQUFVO0lBQ2hDO0lBQ0EsSUFBSWIsWUFBWTtRQUNaLE9BQU8sSUFBSSxDQUFDZixLQUFLLENBQUNlLFNBQVM7SUFDL0I7QUFDSixFQUNBLHNDQUFzQyIsInNvdXJjZXMiOlsid2VicGFjazovL2ZsdXNoLW5vdGVzLy4vbm9kZV9tb2R1bGVzL0B3YWt1L3Nkay9ub2RlX21vZHVsZXMvQHdha3UvY29yZS9kaXN0L2xpYi9maWx0ZXIvZmlsdGVyX3JwYy5qcz8xYTZkIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHByb3RvX2ZpbHRlcl92MiBhcyBwcm90byB9IGZyb20gXCJAd2FrdS9wcm90b1wiO1xuaW1wb3J0IHsgdjQgYXMgdXVpZCB9IGZyb20gXCJ1dWlkXCI7XG4vKipcbiAqIEZpbHRlclB1c2hSUEMgcmVwcmVzZW50cyBhIG1lc3NhZ2UgY29uZm9ybWluZyB0byB0aGUgV2FrdSBGaWx0ZXJQdXNoIHByb3RvY29sLlxuICogUHJvdG9jb2wgZG9jdW1lbnRhdGlvbjogaHR0cHM6Ly9yZmMudmFjLmRldi9zcGVjLzEyL1xuICovXG5leHBvcnQgY2xhc3MgRmlsdGVyUHVzaFJwYyB7XG4gICAgcHJvdG87XG4gICAgY29uc3RydWN0b3IocHJvdG8pIHtcbiAgICAgICAgdGhpcy5wcm90byA9IHByb3RvO1xuICAgIH1cbiAgICBzdGF0aWMgZGVjb2RlKGJ5dGVzKSB7XG4gICAgICAgIGNvbnN0IHJlcyA9IHByb3RvLk1lc3NhZ2VQdXNoLmRlY29kZShieXRlcyk7XG4gICAgICAgIHJldHVybiBuZXcgRmlsdGVyUHVzaFJwYyhyZXMpO1xuICAgIH1cbiAgICBlbmNvZGUoKSB7XG4gICAgICAgIHJldHVybiBwcm90by5NZXNzYWdlUHVzaC5lbmNvZGUodGhpcy5wcm90byk7XG4gICAgfVxuICAgIGdldCB3YWt1TWVzc2FnZSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucHJvdG8ud2FrdU1lc3NhZ2U7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEdldCB0aGUgcHVic3ViIHRvcGljIGZyb20gdGhlIEZpbHRlclB1c2hScGMgb2JqZWN0LlxuICAgICAqIEByZXR1cm5zIHN0cmluZ1xuICAgICAqL1xuICAgIGdldCBwdWJzdWJUb3BpYygpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucHJvdG8ucHVic3ViVG9waWM7XG4gICAgfVxufVxuZXhwb3J0IGNsYXNzIEZpbHRlclN1YnNjcmliZVJwYyB7XG4gICAgcHJvdG87XG4gICAgY29uc3RydWN0b3IocHJvdG8pIHtcbiAgICAgICAgdGhpcy5wcm90byA9IHByb3RvO1xuICAgIH1cbiAgICBzdGF0aWMgY3JlYXRlU3Vic2NyaWJlUmVxdWVzdChwdWJzdWJUb3BpYywgY29udGVudFRvcGljcykge1xuICAgICAgICByZXR1cm4gbmV3IEZpbHRlclN1YnNjcmliZVJwYyh7XG4gICAgICAgICAgICByZXF1ZXN0SWQ6IHV1aWQoKSxcbiAgICAgICAgICAgIGZpbHRlclN1YnNjcmliZVR5cGU6IHByb3RvLkZpbHRlclN1YnNjcmliZVJlcXVlc3QuRmlsdGVyU3Vic2NyaWJlVHlwZS5TVUJTQ1JJQkUsXG4gICAgICAgICAgICBwdWJzdWJUb3BpYyxcbiAgICAgICAgICAgIGNvbnRlbnRUb3BpY3NcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIHN0YXRpYyBjcmVhdGVVbnN1YnNjcmliZVJlcXVlc3QocHVic3ViVG9waWMsIGNvbnRlbnRUb3BpY3MpIHtcbiAgICAgICAgcmV0dXJuIG5ldyBGaWx0ZXJTdWJzY3JpYmVScGMoe1xuICAgICAgICAgICAgcmVxdWVzdElkOiB1dWlkKCksXG4gICAgICAgICAgICBmaWx0ZXJTdWJzY3JpYmVUeXBlOiBwcm90by5GaWx0ZXJTdWJzY3JpYmVSZXF1ZXN0LkZpbHRlclN1YnNjcmliZVR5cGUuVU5TVUJTQ1JJQkUsXG4gICAgICAgICAgICBwdWJzdWJUb3BpYyxcbiAgICAgICAgICAgIGNvbnRlbnRUb3BpY3NcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIHN0YXRpYyBjcmVhdGVVbnN1YnNjcmliZUFsbFJlcXVlc3QocHVic3ViVG9waWMpIHtcbiAgICAgICAgcmV0dXJuIG5ldyBGaWx0ZXJTdWJzY3JpYmVScGMoe1xuICAgICAgICAgICAgcmVxdWVzdElkOiB1dWlkKCksXG4gICAgICAgICAgICBmaWx0ZXJTdWJzY3JpYmVUeXBlOiBwcm90by5GaWx0ZXJTdWJzY3JpYmVSZXF1ZXN0LkZpbHRlclN1YnNjcmliZVR5cGUuVU5TVUJTQ1JJQkVfQUxMLFxuICAgICAgICAgICAgcHVic3ViVG9waWMsXG4gICAgICAgICAgICBjb250ZW50VG9waWNzOiBbXVxuICAgICAgICB9KTtcbiAgICB9XG4gICAgc3RhdGljIGNyZWF0ZVN1YnNjcmliZXJQaW5nUmVxdWVzdCgpIHtcbiAgICAgICAgcmV0dXJuIG5ldyBGaWx0ZXJTdWJzY3JpYmVScGMoe1xuICAgICAgICAgICAgcmVxdWVzdElkOiB1dWlkKCksXG4gICAgICAgICAgICBmaWx0ZXJTdWJzY3JpYmVUeXBlOiBwcm90by5GaWx0ZXJTdWJzY3JpYmVSZXF1ZXN0LkZpbHRlclN1YnNjcmliZVR5cGUuU1VCU0NSSUJFUl9QSU5HLFxuICAgICAgICAgICAgcHVic3ViVG9waWM6IFwiXCIsXG4gICAgICAgICAgICBjb250ZW50VG9waWNzOiBbXVxuICAgICAgICB9KTtcbiAgICB9XG4gICAgc3RhdGljIGRlY29kZShieXRlcykge1xuICAgICAgICBjb25zdCByZXMgPSBwcm90by5GaWx0ZXJTdWJzY3JpYmVSZXF1ZXN0LmRlY29kZShieXRlcyk7XG4gICAgICAgIHJldHVybiBuZXcgRmlsdGVyU3Vic2NyaWJlUnBjKHJlcyk7XG4gICAgfVxuICAgIGVuY29kZSgpIHtcbiAgICAgICAgcmV0dXJuIHByb3RvLkZpbHRlclN1YnNjcmliZVJlcXVlc3QuZW5jb2RlKHRoaXMucHJvdG8pO1xuICAgIH1cbiAgICBnZXQgZmlsdGVyU3Vic2NyaWJlVHlwZSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucHJvdG8uZmlsdGVyU3Vic2NyaWJlVHlwZTtcbiAgICB9XG4gICAgZ2V0IHJlcXVlc3RJZCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucHJvdG8ucmVxdWVzdElkO1xuICAgIH1cbiAgICBnZXQgcHVic3ViVG9waWMoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnByb3RvLnB1YnN1YlRvcGljO1xuICAgIH1cbiAgICBnZXQgY29udGVudFRvcGljcygpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucHJvdG8uY29udGVudFRvcGljcztcbiAgICB9XG59XG5leHBvcnQgY2xhc3MgRmlsdGVyU3Vic2NyaWJlUmVzcG9uc2Uge1xuICAgIHByb3RvO1xuICAgIGNvbnN0cnVjdG9yKHByb3RvKSB7XG4gICAgICAgIHRoaXMucHJvdG8gPSBwcm90bztcbiAgICB9XG4gICAgc3RhdGljIGRlY29kZShieXRlcykge1xuICAgICAgICBjb25zdCByZXMgPSBwcm90by5GaWx0ZXJTdWJzY3JpYmVSZXNwb25zZS5kZWNvZGUoYnl0ZXMpO1xuICAgICAgICByZXR1cm4gbmV3IEZpbHRlclN1YnNjcmliZVJlc3BvbnNlKHJlcyk7XG4gICAgfVxuICAgIGVuY29kZSgpIHtcbiAgICAgICAgcmV0dXJuIHByb3RvLkZpbHRlclN1YnNjcmliZVJlc3BvbnNlLmVuY29kZSh0aGlzLnByb3RvKTtcbiAgICB9XG4gICAgZ2V0IHN0YXR1c0NvZGUoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnByb3RvLnN0YXR1c0NvZGU7XG4gICAgfVxuICAgIGdldCBzdGF0dXNEZXNjKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5wcm90by5zdGF0dXNEZXNjO1xuICAgIH1cbiAgICBnZXQgcmVxdWVzdElkKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5wcm90by5yZXF1ZXN0SWQ7XG4gICAgfVxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZmlsdGVyX3JwYy5qcy5tYXAiXSwibmFtZXMiOlsicHJvdG9fZmlsdGVyX3YyIiwicHJvdG8iLCJ2NCIsInV1aWQiLCJGaWx0ZXJQdXNoUnBjIiwiY29uc3RydWN0b3IiLCJkZWNvZGUiLCJieXRlcyIsInJlcyIsIk1lc3NhZ2VQdXNoIiwiZW5jb2RlIiwid2FrdU1lc3NhZ2UiLCJwdWJzdWJUb3BpYyIsIkZpbHRlclN1YnNjcmliZVJwYyIsImNyZWF0ZVN1YnNjcmliZVJlcXVlc3QiLCJjb250ZW50VG9waWNzIiwicmVxdWVzdElkIiwiZmlsdGVyU3Vic2NyaWJlVHlwZSIsIkZpbHRlclN1YnNjcmliZVJlcXVlc3QiLCJGaWx0ZXJTdWJzY3JpYmVUeXBlIiwiU1VCU0NSSUJFIiwiY3JlYXRlVW5zdWJzY3JpYmVSZXF1ZXN0IiwiVU5TVUJTQ1JJQkUiLCJjcmVhdGVVbnN1YnNjcmliZUFsbFJlcXVlc3QiLCJVTlNVQlNDUklCRV9BTEwiLCJjcmVhdGVTdWJzY3JpYmVyUGluZ1JlcXVlc3QiLCJTVUJTQ1JJQkVSX1BJTkciLCJGaWx0ZXJTdWJzY3JpYmVSZXNwb25zZSIsInN0YXR1c0NvZGUiLCJzdGF0dXNEZXNjIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/sdk/node_modules/@waku/core/dist/lib/filter/filter_rpc.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/sdk/node_modules/@waku/core/dist/lib/filter/index.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@waku/sdk/node_modules/@waku/core/dist/lib/filter/index.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   FilterCodecs: () => (/* binding */ FilterCodecs),\n/* harmony export */   wakuFilter: () => (/* binding */ wakuFilter)\n/* harmony export */ });\n/* harmony import */ var _waku_interfaces__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @waku/interfaces */ \"(ssr)/./node_modules/@waku/sdk/node_modules/@waku/interfaces/dist/index.js\");\n/* harmony import */ var _waku_message_hash__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @waku/message-hash */ \"(ssr)/./node_modules/@waku/sdk/node_modules/@waku/message-hash/dist/index.js\");\n/* harmony import */ var _waku_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @waku/utils */ \"(ssr)/./node_modules/@waku/utils/dist/index.js\");\n/* harmony import */ var it_all__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! it-all */ \"(ssr)/./node_modules/it-all/dist/src/index.js\");\n/* harmony import */ var it_length_prefixed__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! it-length-prefixed */ \"(ssr)/./node_modules/it-length-prefixed/dist/src/index.js\");\n/* harmony import */ var it_pipe__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! it-pipe */ \"(ssr)/./node_modules/it-pipe/dist/src/index.js\");\n/* harmony import */ var _base_protocol_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../base_protocol.js */ \"(ssr)/./node_modules/@waku/sdk/node_modules/@waku/core/dist/lib/base_protocol.js\");\n/* harmony import */ var _filter_rpc_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./filter_rpc.js */ \"(ssr)/./node_modules/@waku/sdk/node_modules/@waku/core/dist/lib/filter/filter_rpc.js\");\n\n\n\n\n\n\n\n\n\nconst log = new _waku_utils__WEBPACK_IMPORTED_MODULE_2__.Logger(\"filter:v2\");\nconst FilterCodecs = {\n    SUBSCRIBE: \"/vac/waku/filter-subscribe/2.0.0-beta1\",\n    PUSH: \"/vac/waku/filter-push/2.0.0-beta1\"\n};\n/**\n * A subscription object refers to a subscription to a given pubsub topic.\n */ class Subscription {\n    constructor(pubsubTopic, remotePeers, newStream){\n        this.receivedMessagesHashStr = [];\n        this.peers = remotePeers;\n        this.pubsubTopic = pubsubTopic;\n        this.newStream = newStream;\n        this.subscriptionCallbacks = new Map();\n    }\n    async subscribe(decoders, callback) {\n        const decodersArray = Array.isArray(decoders) ? decoders : [\n            decoders\n        ];\n        // check that all decoders are configured for the same pubsub topic as this subscription\n        decodersArray.forEach((decoder)=>{\n            if (decoder.pubsubTopic !== this.pubsubTopic) {\n                throw new Error(`Pubsub topic not configured: decoder is configured for pubsub topic ${decoder.pubsubTopic} but this subscription is for pubsub topic ${this.pubsubTopic}. Please create a new Subscription for the different pubsub topic.`);\n            }\n        });\n        const decodersGroupedByCT = (0,_waku_utils__WEBPACK_IMPORTED_MODULE_2__.groupByContentTopic)(decodersArray);\n        const contentTopics = Array.from(decodersGroupedByCT.keys());\n        const promises = this.peers.map(async (peer)=>{\n            const stream = await this.newStream(peer);\n            const request = _filter_rpc_js__WEBPACK_IMPORTED_MODULE_7__.FilterSubscribeRpc.createSubscribeRequest(this.pubsubTopic, contentTopics);\n            try {\n                const res = await (0,it_pipe__WEBPACK_IMPORTED_MODULE_5__.pipe)([\n                    request.encode()\n                ], it_length_prefixed__WEBPACK_IMPORTED_MODULE_4__.encode, stream, it_length_prefixed__WEBPACK_IMPORTED_MODULE_4__.decode, async (source)=>await (0,it_all__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(source));\n                if (!res || !res.length) {\n                    throw Error(`No response received for request ${request.requestId}: ${res}`);\n                }\n                const { statusCode, requestId, statusDesc } = _filter_rpc_js__WEBPACK_IMPORTED_MODULE_7__.FilterSubscribeResponse.decode(res[0].slice());\n                if (statusCode < 200 || statusCode >= 300) {\n                    throw new Error(`Filter subscribe request ${requestId} failed with status code ${statusCode}: ${statusDesc}`);\n                }\n                log.info(\"Subscribed to peer \", peer.id.toString(), \"for content topics\", contentTopics);\n            } catch (e) {\n                throw new Error(\"Error subscribing to peer: \" + peer.id.toString() + \" for content topics: \" + contentTopics + \": \" + e);\n            }\n        });\n        const results = await Promise.allSettled(promises);\n        this.handleErrors(results, \"subscribe\");\n        // Save the callback functions by content topics so they\n        // can easily be removed (reciprocally replaced) if `unsubscribe` (reciprocally `subscribe`)\n        // is called for those content topics\n        decodersGroupedByCT.forEach((decoders, contentTopic)=>{\n            // Cast the type because a given `subscriptionCallbacks` map may hold\n            // Decoder that decode to different implementations of `IDecodedMessage`\n            const subscriptionCallback = {\n                decoders,\n                callback\n            };\n            // The callback and decoder may override previous values, this is on\n            // purpose as the user may call `subscribe` to refresh the subscription\n            this.subscriptionCallbacks.set(contentTopic, subscriptionCallback);\n        });\n    }\n    async unsubscribe(contentTopics) {\n        const promises = this.peers.map(async (peer)=>{\n            const stream = await this.newStream(peer);\n            const unsubscribeRequest = _filter_rpc_js__WEBPACK_IMPORTED_MODULE_7__.FilterSubscribeRpc.createUnsubscribeRequest(this.pubsubTopic, contentTopics);\n            try {\n                await (0,it_pipe__WEBPACK_IMPORTED_MODULE_5__.pipe)([\n                    unsubscribeRequest.encode()\n                ], it_length_prefixed__WEBPACK_IMPORTED_MODULE_4__.encode, stream.sink);\n            } catch (error) {\n                throw new Error(\"Error unsubscribing: \" + error);\n            }\n            contentTopics.forEach((contentTopic)=>{\n                this.subscriptionCallbacks.delete(contentTopic);\n            });\n        });\n        const results = await Promise.allSettled(promises);\n        this.handleErrors(results, \"unsubscribe\");\n    }\n    async ping() {\n        const promises = this.peers.map(async (peer)=>{\n            const stream = await this.newStream(peer);\n            const request = _filter_rpc_js__WEBPACK_IMPORTED_MODULE_7__.FilterSubscribeRpc.createSubscriberPingRequest();\n            try {\n                const res = await (0,it_pipe__WEBPACK_IMPORTED_MODULE_5__.pipe)([\n                    request.encode()\n                ], it_length_prefixed__WEBPACK_IMPORTED_MODULE_4__.encode, stream, it_length_prefixed__WEBPACK_IMPORTED_MODULE_4__.decode, async (source)=>await (0,it_all__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(source));\n                if (!res || !res.length) {\n                    throw Error(`No response received for request ${request.requestId}: ${res}`);\n                }\n                const { statusCode, requestId, statusDesc } = _filter_rpc_js__WEBPACK_IMPORTED_MODULE_7__.FilterSubscribeResponse.decode(res[0].slice());\n                if (statusCode < 200 || statusCode >= 300) {\n                    throw new Error(`Filter ping request ${requestId} failed with status code ${statusCode}: ${statusDesc}`);\n                }\n                log.info(`Ping successful for peer ${peer.id.toString()}`);\n            } catch (error) {\n                log.error(\"Error pinging: \", error);\n                throw error; // Rethrow the actual error instead of wrapping it\n            }\n        });\n        const results = await Promise.allSettled(promises);\n        this.handleErrors(results, \"ping\");\n    }\n    async unsubscribeAll() {\n        const promises = this.peers.map(async (peer)=>{\n            const stream = await this.newStream(peer);\n            const request = _filter_rpc_js__WEBPACK_IMPORTED_MODULE_7__.FilterSubscribeRpc.createUnsubscribeAllRequest(this.pubsubTopic);\n            try {\n                const res = await (0,it_pipe__WEBPACK_IMPORTED_MODULE_5__.pipe)([\n                    request.encode()\n                ], it_length_prefixed__WEBPACK_IMPORTED_MODULE_4__.encode, stream, it_length_prefixed__WEBPACK_IMPORTED_MODULE_4__.decode, async (source)=>await (0,it_all__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(source));\n                if (!res || !res.length) {\n                    throw Error(`No response received for request ${request.requestId}: ${res}`);\n                }\n                const { statusCode, requestId, statusDesc } = _filter_rpc_js__WEBPACK_IMPORTED_MODULE_7__.FilterSubscribeResponse.decode(res[0].slice());\n                if (statusCode < 200 || statusCode >= 300) {\n                    throw new Error(`Filter unsubscribe all request ${requestId} failed with status code ${statusCode}: ${statusDesc}`);\n                }\n                this.subscriptionCallbacks.clear();\n                log.info(`Unsubscribed from all content topics for pubsub topic ${this.pubsubTopic}`);\n            } catch (error) {\n                throw new Error(\"Error unsubscribing from all content topics: \" + error);\n            }\n        });\n        const results = await Promise.allSettled(promises);\n        this.handleErrors(results, \"unsubscribeAll\");\n    }\n    async processMessage(message) {\n        const hashedMessageStr = (0,_waku_message_hash__WEBPACK_IMPORTED_MODULE_1__.messageHashStr)(this.pubsubTopic, message);\n        if (this.receivedMessagesHashStr.includes(hashedMessageStr)) {\n            log.info(\"Message already received, skipping\");\n            return;\n        }\n        this.receivedMessagesHashStr.push(hashedMessageStr);\n        const { contentTopic } = message;\n        const subscriptionCallback = this.subscriptionCallbacks.get(contentTopic);\n        if (!subscriptionCallback) {\n            log.error(\"No subscription callback available for \", contentTopic);\n            return;\n        }\n        log.info(\"Processing message with content topic \", contentTopic, \" on pubsub topic \", this.pubsubTopic);\n        await pushMessage(subscriptionCallback, this.pubsubTopic, message);\n    }\n    // Filter out only the rejected promises and extract & handle their reasons\n    handleErrors(results, type) {\n        const errors = results.filter((result)=>result.status === \"rejected\").map((rejectedResult)=>rejectedResult.reason);\n        if (errors.length === this.peers.length) {\n            const errorCounts = new Map();\n            // TODO: streamline error logging with https://github.com/orgs/waku-org/projects/2/views/1?pane=issue&itemId=42849952\n            errors.forEach((error)=>{\n                const message = error instanceof Error ? error.message : String(error);\n                errorCounts.set(message, (errorCounts.get(message) || 0) + 1);\n            });\n            const uniqueErrorMessages = Array.from(errorCounts, ([message, count])=>`${message} (occurred ${count} times)`).join(\", \");\n            throw new Error(`Error ${type} all peers: ${uniqueErrorMessages}`);\n        } else if (errors.length > 0) {\n            // TODO: handle renewing faulty peers with new peers (https://github.com/waku-org/js-waku/issues/1463)\n            log.warn(`Some ${type} failed. These will be refreshed with new peers`, errors);\n        } else {\n            log.info(`${type} successful for all peers`);\n        }\n    }\n}\nconst DEFAULT_NUM_PEERS = 3;\nclass Filter extends _base_protocol_js__WEBPACK_IMPORTED_MODULE_6__.BaseProtocol {\n    getActiveSubscription(pubsubTopic) {\n        return this.activeSubscriptions.get(pubsubTopic);\n    }\n    setActiveSubscription(pubsubTopic, subscription) {\n        this.activeSubscriptions.set(pubsubTopic, subscription);\n        return subscription;\n    }\n    constructor(libp2p, options){\n        super(FilterCodecs.SUBSCRIBE, libp2p.components, log, options.pubsubTopics, options);\n        this.activeSubscriptions = new Map();\n        this.numPeersToUse = options?.numPeersToUse ?? DEFAULT_NUM_PEERS;\n        libp2p.handle(FilterCodecs.PUSH, this.onRequest.bind(this)).catch((e)=>{\n            log.error(\"Failed to register \", FilterCodecs.PUSH, e);\n        });\n        this.activeSubscriptions = new Map();\n    }\n    /**\n     * Creates a new subscription to the given pubsub topic.\n     * The subscription is made to multiple peers for decentralization.\n     * @param pubsubTopicShardInfo The pubsub topic to subscribe to.\n     * @returns The subscription object.\n     */ async createSubscription(pubsubTopicShardInfo = _waku_interfaces__WEBPACK_IMPORTED_MODULE_0__.DefaultPubsubTopic) {\n        const pubsubTopic = typeof pubsubTopicShardInfo == \"string\" ? pubsubTopicShardInfo : (0,_waku_utils__WEBPACK_IMPORTED_MODULE_2__.singleShardInfoToPubsubTopic)(pubsubTopicShardInfo);\n        (0,_waku_utils__WEBPACK_IMPORTED_MODULE_2__.ensurePubsubTopicIsConfigured)(pubsubTopic, this.pubsubTopics);\n        const peers = await this.getPeers({\n            maxBootstrapPeers: 1,\n            numPeers: this.numPeersToUse\n        });\n        if (peers.length === 0) {\n            throw new Error(\"No peer found to initiate subscription.\");\n        }\n        log.info(`Creating filter subscription with ${peers.length} peers: `, peers.map((peer)=>peer.id.toString()));\n        const subscription = this.getActiveSubscription(pubsubTopic) ?? this.setActiveSubscription(pubsubTopic, new Subscription(pubsubTopic, peers, this.getStream.bind(this)));\n        return subscription;\n    }\n    toSubscriptionIterator(decoders) {\n        return (0,_waku_utils__WEBPACK_IMPORTED_MODULE_2__.toAsyncIterator)(this, decoders);\n    }\n    /**\n     * This method is used to satisfy the `IReceiver` interface.\n     *\n     * @hidden\n     *\n     * @param decoders The decoders to use for the subscription.\n     * @param callback The callback function to use for the subscription.\n     * @param opts Optional protocol options for the subscription.\n     *\n     * @returns A Promise that resolves to a function that unsubscribes from the subscription.\n     *\n     * @remarks\n     * This method should not be used directly.\n     * Instead, use `createSubscription` to create a new subscription.\n     */ async subscribe(decoders, callback) {\n        const pubsubTopics = this.getPubsubTopics(decoders);\n        if (pubsubTopics.length === 0) {\n            throw Error(\"Failed to subscribe: no pubsubTopic found on decoders provided.\");\n        }\n        if (pubsubTopics.length > 1) {\n            throw Error(\"Failed to subscribe: all decoders should have the same pubsub topic. Use createSubscription to be more agile.\");\n        }\n        const subscription = await this.createSubscription(pubsubTopics[0]);\n        await subscription.subscribe(decoders, callback);\n        const contentTopics = Array.from((0,_waku_utils__WEBPACK_IMPORTED_MODULE_2__.groupByContentTopic)(Array.isArray(decoders) ? decoders : [\n            decoders\n        ]).keys());\n        return async ()=>{\n            await subscription.unsubscribe(contentTopics);\n        };\n    }\n    onRequest(streamData) {\n        const { connection, stream } = streamData;\n        const { remotePeer } = connection;\n        log.info(`Received message from ${remotePeer.toString()}`);\n        try {\n            (0,it_pipe__WEBPACK_IMPORTED_MODULE_5__.pipe)(stream, it_length_prefixed__WEBPACK_IMPORTED_MODULE_4__.decode, async (source)=>{\n                for await (const bytes of source){\n                    const response = _filter_rpc_js__WEBPACK_IMPORTED_MODULE_7__.FilterPushRpc.decode(bytes.slice());\n                    const { pubsubTopic, wakuMessage } = response;\n                    if (!wakuMessage) {\n                        log.error(\"Received empty message\");\n                        return;\n                    }\n                    if (!pubsubTopic) {\n                        log.error(\"Pubsub topic missing from push message\");\n                        return;\n                    }\n                    const subscription = this.getActiveSubscription(pubsubTopic);\n                    if (!subscription) {\n                        log.error(`No subscription locally registered for topic ${pubsubTopic}`);\n                        return;\n                    }\n                    await subscription.processMessage(wakuMessage);\n                }\n            }).then(()=>{\n                log.info(\"Receiving pipe closed.\");\n            }, (e)=>{\n                log.error(\"Error with receiving pipe\", e);\n            });\n        } catch (e) {\n            log.error(\"Error decoding message\", e);\n        }\n    }\n    getPubsubTopics(decoders) {\n        if (!Array.isArray(decoders)) {\n            return [\n                decoders.pubsubTopic\n            ];\n        }\n        if (decoders.length === 0) {\n            return [];\n        }\n        const pubsubTopics = new Set(decoders.map((d)=>d.pubsubTopic));\n        return [\n            ...pubsubTopics\n        ];\n    }\n}\nfunction wakuFilter(init = {\n    pubsubTopics: []\n}) {\n    return (libp2p)=>new Filter(libp2p, init);\n}\nasync function pushMessage(subscriptionCallback, pubsubTopic, message) {\n    const { decoders, callback } = subscriptionCallback;\n    const { contentTopic } = message;\n    if (!contentTopic) {\n        log.warn(\"Message has no content topic, skipping\");\n        return;\n    }\n    try {\n        const decodePromises = decoders.map((dec)=>dec.fromProtoObj(pubsubTopic, message).then((decoded)=>decoded || Promise.reject(\"Decoding failed\")));\n        const decodedMessage = await Promise.any(decodePromises);\n        await callback(decodedMessage);\n    } catch (e) {\n        log.error(\"Error decoding message\", e);\n    }\n} //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/sdk/node_modules/@waku/core/dist/lib/filter/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/sdk/node_modules/@waku/core/dist/lib/filterPeers.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@waku/sdk/node_modules/@waku/core/dist/lib/filterPeers.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   filterPeersByDiscovery: () => (/* binding */ filterPeersByDiscovery)\n/* harmony export */ });\n/* harmony import */ var _waku_interfaces__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @waku/interfaces */ \"(ssr)/./node_modules/@waku/sdk/node_modules/@waku/interfaces/dist/index.js\");\n\n/**\n * Retrieves a list of peers based on the specified criteria:\n * 1. If numPeers is 0, return all peers\n * 2. Bootstrap peers are prioritized\n * 3. Non-bootstrap peers are randomly selected to fill up to numPeers\n *\n * @param peers - The list of peers to filter from.\n * @param numPeers - The total number of peers to retrieve. If 0, all peers are returned, irrespective of `maxBootstrapPeers`.\n * @param maxBootstrapPeers - The maximum number of bootstrap peers to retrieve.\n * @returns An array of peers based on the specified criteria.\n */ function filterPeersByDiscovery(peers, numPeers, maxBootstrapPeers) {\n    // Collect the bootstrap peers up to the specified maximum\n    let bootstrapPeers = peers.filter((peer)=>peer.tags.has(_waku_interfaces__WEBPACK_IMPORTED_MODULE_0__.Tags.BOOTSTRAP)).slice(0, maxBootstrapPeers);\n    // If numPeers is less than the number of bootstrap peers, adjust the bootstrapPeers array\n    if (numPeers > 0 && numPeers < bootstrapPeers.length) {\n        bootstrapPeers = bootstrapPeers.slice(0, numPeers);\n    }\n    // Collect non-bootstrap peers\n    const nonBootstrapPeers = peers.filter((peer)=>!peer.tags.has(_waku_interfaces__WEBPACK_IMPORTED_MODULE_0__.Tags.BOOTSTRAP));\n    // If numPeers is 0, return all peers\n    if (numPeers === 0) {\n        return [\n            ...bootstrapPeers,\n            ...nonBootstrapPeers\n        ];\n    }\n    // Initialize the list of selected peers with the bootstrap peers\n    const selectedPeers = [\n        ...bootstrapPeers\n    ];\n    // Fill up to numPeers with remaining random peers if needed\n    while(selectedPeers.length < numPeers && nonBootstrapPeers.length > 0){\n        const randomIndex = Math.floor(Math.random() * nonBootstrapPeers.length);\n        const randomPeer = nonBootstrapPeers.splice(randomIndex, 1)[0];\n        selectedPeers.push(randomPeer);\n    }\n    return selectedPeers;\n} //# sourceMappingURL=filterPeers.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdha3Uvc2RrL25vZGVfbW9kdWxlcy9Ad2FrdS9jb3JlL2Rpc3QvbGliL2ZpbHRlclBlZXJzLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQXdDO0FBQ3hDOzs7Ozs7Ozs7O0NBVUMsR0FDTSxTQUFTQyx1QkFBdUJDLEtBQUssRUFBRUMsUUFBUSxFQUFFQyxpQkFBaUI7SUFDckUsMERBQTBEO0lBQzFELElBQUlDLGlCQUFpQkgsTUFDaEJJLE1BQU0sQ0FBQyxDQUFDQyxPQUFTQSxLQUFLQyxJQUFJLENBQUNDLEdBQUcsQ0FBQ1Qsa0RBQUlBLENBQUNVLFNBQVMsR0FDN0NDLEtBQUssQ0FBQyxHQUFHUDtJQUNkLDBGQUEwRjtJQUMxRixJQUFJRCxXQUFXLEtBQUtBLFdBQVdFLGVBQWVPLE1BQU0sRUFBRTtRQUNsRFAsaUJBQWlCQSxlQUFlTSxLQUFLLENBQUMsR0FBR1I7SUFDN0M7SUFDQSw4QkFBOEI7SUFDOUIsTUFBTVUsb0JBQW9CWCxNQUFNSSxNQUFNLENBQUMsQ0FBQ0MsT0FBUyxDQUFDQSxLQUFLQyxJQUFJLENBQUNDLEdBQUcsQ0FBQ1Qsa0RBQUlBLENBQUNVLFNBQVM7SUFDOUUscUNBQXFDO0lBQ3JDLElBQUlQLGFBQWEsR0FBRztRQUNoQixPQUFPO2VBQUlFO2VBQW1CUTtTQUFrQjtJQUNwRDtJQUNBLGlFQUFpRTtJQUNqRSxNQUFNQyxnQkFBZ0I7V0FBSVQ7S0FBZTtJQUN6Qyw0REFBNEQ7SUFDNUQsTUFBT1MsY0FBY0YsTUFBTSxHQUFHVCxZQUFZVSxrQkFBa0JELE1BQU0sR0FBRyxFQUFHO1FBQ3BFLE1BQU1HLGNBQWNDLEtBQUtDLEtBQUssQ0FBQ0QsS0FBS0UsTUFBTSxLQUFLTCxrQkFBa0JELE1BQU07UUFDdkUsTUFBTU8sYUFBYU4sa0JBQWtCTyxNQUFNLENBQUNMLGFBQWEsRUFBRSxDQUFDLEVBQUU7UUFDOURELGNBQWNPLElBQUksQ0FBQ0Y7SUFDdkI7SUFDQSxPQUFPTDtBQUNYLEVBQ0EsdUNBQXVDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZmx1c2gtbm90ZXMvLi9ub2RlX21vZHVsZXMvQHdha3Uvc2RrL25vZGVfbW9kdWxlcy9Ad2FrdS9jb3JlL2Rpc3QvbGliL2ZpbHRlclBlZXJzLmpzP2Y1MzYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgVGFncyB9IGZyb20gXCJAd2FrdS9pbnRlcmZhY2VzXCI7XG4vKipcbiAqIFJldHJpZXZlcyBhIGxpc3Qgb2YgcGVlcnMgYmFzZWQgb24gdGhlIHNwZWNpZmllZCBjcml0ZXJpYTpcbiAqIDEuIElmIG51bVBlZXJzIGlzIDAsIHJldHVybiBhbGwgcGVlcnNcbiAqIDIuIEJvb3RzdHJhcCBwZWVycyBhcmUgcHJpb3JpdGl6ZWRcbiAqIDMuIE5vbi1ib290c3RyYXAgcGVlcnMgYXJlIHJhbmRvbWx5IHNlbGVjdGVkIHRvIGZpbGwgdXAgdG8gbnVtUGVlcnNcbiAqXG4gKiBAcGFyYW0gcGVlcnMgLSBUaGUgbGlzdCBvZiBwZWVycyB0byBmaWx0ZXIgZnJvbS5cbiAqIEBwYXJhbSBudW1QZWVycyAtIFRoZSB0b3RhbCBudW1iZXIgb2YgcGVlcnMgdG8gcmV0cmlldmUuIElmIDAsIGFsbCBwZWVycyBhcmUgcmV0dXJuZWQsIGlycmVzcGVjdGl2ZSBvZiBgbWF4Qm9vdHN0cmFwUGVlcnNgLlxuICogQHBhcmFtIG1heEJvb3RzdHJhcFBlZXJzIC0gVGhlIG1heGltdW0gbnVtYmVyIG9mIGJvb3RzdHJhcCBwZWVycyB0byByZXRyaWV2ZS5cbiAqIEByZXR1cm5zIEFuIGFycmF5IG9mIHBlZXJzIGJhc2VkIG9uIHRoZSBzcGVjaWZpZWQgY3JpdGVyaWEuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBmaWx0ZXJQZWVyc0J5RGlzY292ZXJ5KHBlZXJzLCBudW1QZWVycywgbWF4Qm9vdHN0cmFwUGVlcnMpIHtcbiAgICAvLyBDb2xsZWN0IHRoZSBib290c3RyYXAgcGVlcnMgdXAgdG8gdGhlIHNwZWNpZmllZCBtYXhpbXVtXG4gICAgbGV0IGJvb3RzdHJhcFBlZXJzID0gcGVlcnNcbiAgICAgICAgLmZpbHRlcigocGVlcikgPT4gcGVlci50YWdzLmhhcyhUYWdzLkJPT1RTVFJBUCkpXG4gICAgICAgIC5zbGljZSgwLCBtYXhCb290c3RyYXBQZWVycyk7XG4gICAgLy8gSWYgbnVtUGVlcnMgaXMgbGVzcyB0aGFuIHRoZSBudW1iZXIgb2YgYm9vdHN0cmFwIHBlZXJzLCBhZGp1c3QgdGhlIGJvb3RzdHJhcFBlZXJzIGFycmF5XG4gICAgaWYgKG51bVBlZXJzID4gMCAmJiBudW1QZWVycyA8IGJvb3RzdHJhcFBlZXJzLmxlbmd0aCkge1xuICAgICAgICBib290c3RyYXBQZWVycyA9IGJvb3RzdHJhcFBlZXJzLnNsaWNlKDAsIG51bVBlZXJzKTtcbiAgICB9XG4gICAgLy8gQ29sbGVjdCBub24tYm9vdHN0cmFwIHBlZXJzXG4gICAgY29uc3Qgbm9uQm9vdHN0cmFwUGVlcnMgPSBwZWVycy5maWx0ZXIoKHBlZXIpID0+ICFwZWVyLnRhZ3MuaGFzKFRhZ3MuQk9PVFNUUkFQKSk7XG4gICAgLy8gSWYgbnVtUGVlcnMgaXMgMCwgcmV0dXJuIGFsbCBwZWVyc1xuICAgIGlmIChudW1QZWVycyA9PT0gMCkge1xuICAgICAgICByZXR1cm4gWy4uLmJvb3RzdHJhcFBlZXJzLCAuLi5ub25Cb290c3RyYXBQZWVyc107XG4gICAgfVxuICAgIC8vIEluaXRpYWxpemUgdGhlIGxpc3Qgb2Ygc2VsZWN0ZWQgcGVlcnMgd2l0aCB0aGUgYm9vdHN0cmFwIHBlZXJzXG4gICAgY29uc3Qgc2VsZWN0ZWRQZWVycyA9IFsuLi5ib290c3RyYXBQZWVyc107XG4gICAgLy8gRmlsbCB1cCB0byBudW1QZWVycyB3aXRoIHJlbWFpbmluZyByYW5kb20gcGVlcnMgaWYgbmVlZGVkXG4gICAgd2hpbGUgKHNlbGVjdGVkUGVlcnMubGVuZ3RoIDwgbnVtUGVlcnMgJiYgbm9uQm9vdHN0cmFwUGVlcnMubGVuZ3RoID4gMCkge1xuICAgICAgICBjb25zdCByYW5kb21JbmRleCA9IE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIG5vbkJvb3RzdHJhcFBlZXJzLmxlbmd0aCk7XG4gICAgICAgIGNvbnN0IHJhbmRvbVBlZXIgPSBub25Cb290c3RyYXBQZWVycy5zcGxpY2UocmFuZG9tSW5kZXgsIDEpWzBdO1xuICAgICAgICBzZWxlY3RlZFBlZXJzLnB1c2gocmFuZG9tUGVlcik7XG4gICAgfVxuICAgIHJldHVybiBzZWxlY3RlZFBlZXJzO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZmlsdGVyUGVlcnMuanMubWFwIl0sIm5hbWVzIjpbIlRhZ3MiLCJmaWx0ZXJQZWVyc0J5RGlzY292ZXJ5IiwicGVlcnMiLCJudW1QZWVycyIsIm1heEJvb3RzdHJhcFBlZXJzIiwiYm9vdHN0cmFwUGVlcnMiLCJmaWx0ZXIiLCJwZWVyIiwidGFncyIsImhhcyIsIkJPT1RTVFJBUCIsInNsaWNlIiwibGVuZ3RoIiwibm9uQm9vdHN0cmFwUGVlcnMiLCJzZWxlY3RlZFBlZXJzIiwicmFuZG9tSW5kZXgiLCJNYXRoIiwiZmxvb3IiLCJyYW5kb20iLCJyYW5kb21QZWVyIiwic3BsaWNlIiwicHVzaCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/sdk/node_modules/@waku/core/dist/lib/filterPeers.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/sdk/node_modules/@waku/core/dist/lib/keep_alive_manager.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@waku/sdk/node_modules/@waku/core/dist/lib/keep_alive_manager.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   KeepAliveManager: () => (/* binding */ KeepAliveManager),\n/* harmony export */   RelayPingContentTopic: () => (/* binding */ RelayPingContentTopic)\n/* harmony export */ });\n/* harmony import */ var _waku_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @waku/utils */ \"(ssr)/./node_modules/@waku/utils/dist/index.js\");\n/* harmony import */ var _waku_utils_bytes__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @waku/utils/bytes */ \"(ssr)/./node_modules/@waku/utils/dist/bytes/index.js\");\n/* harmony import */ var _message_version_0_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./message/version_0.js */ \"(ssr)/./node_modules/@waku/sdk/node_modules/@waku/core/dist/lib/message/version_0.js\");\n\n\n\nconst RelayPingContentTopic = \"/relay-ping/1/ping/null\";\nconst log = new _waku_utils__WEBPACK_IMPORTED_MODULE_0__.Logger(\"keep-alive\");\nclass KeepAliveManager {\n    constructor(options, relay){\n        this.pingKeepAliveTimers = new Map();\n        this.relayKeepAliveTimers = new Map();\n        this.options = options;\n        this.relay = relay;\n    }\n    start(peerId, libp2pPing, peerStore) {\n        // Just in case a timer already exists for this peer\n        this.stop(peerId);\n        const { pingKeepAlive: pingPeriodSecs, relayKeepAlive: relayPeriodSecs } = this.options;\n        const peerIdStr = peerId.toString();\n        // Ping the peer every pingPeriodSecs seconds\n        // if pingPeriodSecs is 0, don't ping the peer\n        if (pingPeriodSecs !== 0) {\n            const interval = setInterval(()=>{\n                void (async ()=>{\n                    let ping;\n                    try {\n                        // ping the peer for keep alive\n                        // also update the peer store with the latency\n                        try {\n                            ping = await libp2pPing.ping(peerId);\n                            log.info(`Ping succeeded (${peerIdStr})`, ping);\n                        } catch (error) {\n                            log.error(`Ping failed for peer (${peerIdStr}).\n                Next ping will be attempted in ${pingPeriodSecs} seconds.\n              `);\n                            return;\n                        }\n                        try {\n                            await peerStore.patch(peerId, {\n                                metadata: {\n                                    ping: (0,_waku_utils_bytes__WEBPACK_IMPORTED_MODULE_1__.utf8ToBytes)(ping.toString())\n                                }\n                            });\n                        } catch (e) {\n                            log.error(\"Failed to update ping\", e);\n                        }\n                    } catch (e) {\n                        log.error(`Ping failed (${peerIdStr})`, e);\n                    }\n                })();\n            }, pingPeriodSecs * 1000);\n            this.pingKeepAliveTimers.set(peerIdStr, interval);\n        }\n        const relay = this.relay;\n        if (relay && relayPeriodSecs !== 0) {\n            const intervals = this.scheduleRelayPings(relay, relayPeriodSecs, peerId.toString());\n            this.relayKeepAliveTimers.set(peerId, intervals);\n        }\n    }\n    stop(peerId) {\n        const peerIdStr = peerId.toString();\n        if (this.pingKeepAliveTimers.has(peerIdStr)) {\n            clearInterval(this.pingKeepAliveTimers.get(peerIdStr));\n            this.pingKeepAliveTimers.delete(peerIdStr);\n        }\n        if (this.relayKeepAliveTimers.has(peerId)) {\n            this.relayKeepAliveTimers.get(peerId)?.map(clearInterval);\n            this.relayKeepAliveTimers.delete(peerId);\n        }\n    }\n    stopAll() {\n        for (const timer of [\n            ...Object.values(this.pingKeepAliveTimers),\n            ...Object.values(this.relayKeepAliveTimers)\n        ]){\n            clearInterval(timer);\n        }\n        this.pingKeepAliveTimers.clear();\n        this.relayKeepAliveTimers.clear();\n    }\n    connectionsExist() {\n        return this.pingKeepAliveTimers.size > 0 || this.relayKeepAliveTimers.size > 0;\n    }\n    scheduleRelayPings(relay, relayPeriodSecs, peerIdStr) {\n        // send a ping message to each PubsubTopic the peer is part of\n        const intervals = [];\n        for (const topic of relay.pubsubTopics){\n            const meshPeers = relay.getMeshPeers(topic);\n            if (!meshPeers.includes(peerIdStr)) continue;\n            const encoder = (0,_message_version_0_js__WEBPACK_IMPORTED_MODULE_2__.createEncoder)({\n                pubsubTopicShardInfo: (0,_waku_utils__WEBPACK_IMPORTED_MODULE_0__.pubsubTopicToSingleShardInfo)(topic),\n                contentTopic: RelayPingContentTopic,\n                ephemeral: true\n            });\n            const interval = setInterval(()=>{\n                log.info(\"Sending Waku Relay ping message\");\n                relay.send(encoder, {\n                    payload: new Uint8Array([\n                        1\n                    ])\n                }).catch((e)=>log.error(\"Failed to send relay ping\", e));\n            }, relayPeriodSecs * 1000);\n            intervals.push(interval);\n        }\n        return intervals;\n    }\n} //# sourceMappingURL=keep_alive_manager.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/sdk/node_modules/@waku/core/dist/lib/keep_alive_manager.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/sdk/node_modules/@waku/core/dist/lib/light_push/index.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@waku/sdk/node_modules/@waku/core/dist/lib/light_push/index.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   LightPushCodec: () => (/* binding */ LightPushCodec),\n/* harmony export */   LightPushCore: () => (/* binding */ LightPushCore),\n/* harmony export */   PushResponse: () => (/* reexport safe */ _waku_proto__WEBPACK_IMPORTED_MODULE_1__.PushResponse)\n/* harmony export */ });\n/* harmony import */ var _waku_interfaces__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @waku/interfaces */ \"(ssr)/./node_modules/@waku/sdk/node_modules/@waku/interfaces/dist/index.js\");\n/* harmony import */ var _waku_proto__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @waku/proto */ \"(ssr)/./node_modules/@waku/sdk/node_modules/@waku/proto/dist/index.js\");\n/* harmony import */ var _waku_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @waku/utils */ \"(ssr)/./node_modules/@waku/utils/dist/index.js\");\n/* harmony import */ var it_all__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! it-all */ \"(ssr)/./node_modules/it-all/dist/src/index.js\");\n/* harmony import */ var it_length_prefixed__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! it-length-prefixed */ \"(ssr)/./node_modules/it-length-prefixed/dist/src/index.js\");\n/* harmony import */ var it_pipe__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! it-pipe */ \"(ssr)/./node_modules/it-pipe/dist/src/index.js\");\n/* harmony import */ var uint8arraylist__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! uint8arraylist */ \"(ssr)/./node_modules/uint8arraylist/dist/src/index.js\");\n/* harmony import */ var _base_protocol_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../base_protocol.js */ \"(ssr)/./node_modules/@waku/sdk/node_modules/@waku/core/dist/lib/base_protocol.js\");\n/* harmony import */ var _push_rpc_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./push_rpc.js */ \"(ssr)/./node_modules/@waku/sdk/node_modules/@waku/core/dist/lib/light_push/push_rpc.js\");\n\n\n\n\n\n\n\n\n\n\nconst log = new _waku_utils__WEBPACK_IMPORTED_MODULE_2__.Logger(\"light-push\");\nconst LightPushCodec = \"/vac/waku/lightpush/2.0.0-beta1\";\n\n/**\n * Implements the [Waku v2 Light Push protocol](https://rfc.vac.dev/spec/19/).\n */ class LightPushCore extends _base_protocol_js__WEBPACK_IMPORTED_MODULE_7__.BaseProtocol {\n    constructor(libp2p, options){\n        super(LightPushCodec, libp2p.components, log, options.pubsubTopics, options);\n    }\n    async preparePushMessage(encoder, message) {\n        try {\n            if (!message.payload || message.payload.length === 0) {\n                log.error(\"Failed to send waku light push: payload is empty\");\n                return {\n                    query: null,\n                    error: _waku_interfaces__WEBPACK_IMPORTED_MODULE_0__.ProtocolError.EMPTY_PAYLOAD\n                };\n            }\n            if (!await (0,_waku_utils__WEBPACK_IMPORTED_MODULE_2__.isMessageSizeUnderCap)(encoder, message)) {\n                log.error(\"Failed to send waku light push: message is bigger than 1MB\");\n                return {\n                    query: null,\n                    error: _waku_interfaces__WEBPACK_IMPORTED_MODULE_0__.ProtocolError.SIZE_TOO_BIG\n                };\n            }\n            const protoMessage = await encoder.toProtoObj(message);\n            if (!protoMessage) {\n                log.error(\"Failed to encode to protoMessage, aborting push\");\n                return {\n                    query: null,\n                    error: _waku_interfaces__WEBPACK_IMPORTED_MODULE_0__.ProtocolError.ENCODE_FAILED\n                };\n            }\n            const query = _push_rpc_js__WEBPACK_IMPORTED_MODULE_8__.PushRpc.createRequest(protoMessage, encoder.pubsubTopic);\n            return {\n                query,\n                error: null\n            };\n        } catch (error) {\n            log.error(\"Failed to prepare push message\", error);\n            return {\n                query: null,\n                error: _waku_interfaces__WEBPACK_IMPORTED_MODULE_0__.ProtocolError.GENERIC_FAIL\n            };\n        }\n    }\n    async send(encoder, message, peer) {\n        const { query, error: preparationError } = await this.preparePushMessage(encoder, message);\n        if (preparationError || !query) {\n            return {\n                success: null,\n                failure: {\n                    error: preparationError,\n                    peerId: peer.id\n                }\n            };\n        }\n        let stream;\n        try {\n            stream = await this.getStream(peer);\n        } catch (err) {\n            log.error(`Failed to get a stream for remote peer${peer.id.toString()}`, err);\n            return {\n                success: null,\n                failure: {\n                    error: _waku_interfaces__WEBPACK_IMPORTED_MODULE_0__.ProtocolError.REMOTE_PEER_FAULT,\n                    peerId: peer.id\n                }\n            };\n        }\n        let res;\n        try {\n            res = await (0,it_pipe__WEBPACK_IMPORTED_MODULE_5__.pipe)([\n                query.encode()\n            ], it_length_prefixed__WEBPACK_IMPORTED_MODULE_4__.encode, stream, it_length_prefixed__WEBPACK_IMPORTED_MODULE_4__.decode, async (source)=>await (0,it_all__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(source));\n        } catch (err) {\n            log.error(\"Failed to send waku light push request\", err);\n            return {\n                success: null,\n                failure: {\n                    error: _waku_interfaces__WEBPACK_IMPORTED_MODULE_0__.ProtocolError.GENERIC_FAIL,\n                    peerId: peer.id\n                }\n            };\n        }\n        const bytes = new uint8arraylist__WEBPACK_IMPORTED_MODULE_6__.Uint8ArrayList();\n        res.forEach((chunk)=>{\n            bytes.append(chunk);\n        });\n        let response;\n        try {\n            response = _push_rpc_js__WEBPACK_IMPORTED_MODULE_8__.PushRpc.decode(bytes).response;\n        } catch (err) {\n            log.error(\"Failed to decode push reply\", err);\n            return {\n                success: null,\n                failure: {\n                    error: _waku_interfaces__WEBPACK_IMPORTED_MODULE_0__.ProtocolError.DECODE_FAILED,\n                    peerId: peer.id\n                }\n            };\n        }\n        if (!response) {\n            log.error(\"Remote peer fault: No response in PushRPC\");\n            return {\n                success: null,\n                failure: {\n                    error: _waku_interfaces__WEBPACK_IMPORTED_MODULE_0__.ProtocolError.REMOTE_PEER_FAULT,\n                    peerId: peer.id\n                }\n            };\n        }\n        if (!response.isSuccess) {\n            log.error(\"Remote peer rejected the message: \", response.info);\n            return {\n                success: null,\n                failure: {\n                    error: _waku_interfaces__WEBPACK_IMPORTED_MODULE_0__.ProtocolError.REMOTE_PEER_REJECTED,\n                    peerId: peer.id\n                }\n            };\n        }\n        return {\n            success: peer.id,\n            failure: null\n        };\n    }\n} //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/sdk/node_modules/@waku/core/dist/lib/light_push/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/sdk/node_modules/@waku/core/dist/lib/light_push/push_rpc.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@waku/sdk/node_modules/@waku/core/dist/lib/light_push/push_rpc.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PushRpc: () => (/* binding */ PushRpc)\n/* harmony export */ });\n/* harmony import */ var _waku_proto__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @waku/proto */ \"(ssr)/./node_modules/@waku/sdk/node_modules/@waku/proto/dist/index.js\");\n/* harmony import */ var uuid__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! uuid */ \"(ssr)/./node_modules/uuid/dist/esm-node/v4.js\");\n\n\nclass PushRpc {\n    constructor(proto){\n        this.proto = proto;\n    }\n    static createRequest(message, pubsubTopic) {\n        return new PushRpc({\n            requestId: (0,uuid__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(),\n            request: {\n                message: message,\n                pubsubTopic: pubsubTopic\n            },\n            response: undefined\n        });\n    }\n    static decode(bytes) {\n        const res = _waku_proto__WEBPACK_IMPORTED_MODULE_0__.proto_lightpush.PushRpc.decode(bytes);\n        return new PushRpc(res);\n    }\n    encode() {\n        return _waku_proto__WEBPACK_IMPORTED_MODULE_0__.proto_lightpush.PushRpc.encode(this.proto);\n    }\n    get query() {\n        return this.proto.request;\n    }\n    get response() {\n        return this.proto.response;\n    }\n} //# sourceMappingURL=push_rpc.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdha3Uvc2RrL25vZGVfbW9kdWxlcy9Ad2FrdS9jb3JlL2Rpc3QvbGliL2xpZ2h0X3B1c2gvcHVzaF9ycGMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQXVEO0FBQ3JCO0FBQzNCLE1BQU1JO0lBRVRDLFlBQVlKLEtBQUssQ0FBRTtRQUNmLElBQUksQ0FBQ0EsS0FBSyxHQUFHQTtJQUNqQjtJQUNBLE9BQU9LLGNBQWNDLE9BQU8sRUFBRUMsV0FBVyxFQUFFO1FBQ3ZDLE9BQU8sSUFBSUosUUFBUTtZQUNmSyxXQUFXTixnREFBSUE7WUFDZk8sU0FBUztnQkFDTEgsU0FBU0E7Z0JBQ1RDLGFBQWFBO1lBQ2pCO1lBQ0FHLFVBQVVDO1FBQ2Q7SUFDSjtJQUNBLE9BQU9DLE9BQU9DLEtBQUssRUFBRTtRQUNqQixNQUFNQyxNQUFNZCxnRUFBYSxDQUFDWSxNQUFNLENBQUNDO1FBQ2pDLE9BQU8sSUFBSVYsUUFBUVc7SUFDdkI7SUFDQUMsU0FBUztRQUNMLE9BQU9mLGdFQUFhLENBQUNlLE1BQU0sQ0FBQyxJQUFJLENBQUNmLEtBQUs7SUFDMUM7SUFDQSxJQUFJZ0IsUUFBUTtRQUNSLE9BQU8sSUFBSSxDQUFDaEIsS0FBSyxDQUFDUyxPQUFPO0lBQzdCO0lBQ0EsSUFBSUMsV0FBVztRQUNYLE9BQU8sSUFBSSxDQUFDVixLQUFLLENBQUNVLFFBQVE7SUFDOUI7QUFDSixFQUNBLG9DQUFvQyIsInNvdXJjZXMiOlsid2VicGFjazovL2ZsdXNoLW5vdGVzLy4vbm9kZV9tb2R1bGVzL0B3YWt1L3Nkay9ub2RlX21vZHVsZXMvQHdha3UvY29yZS9kaXN0L2xpYi9saWdodF9wdXNoL3B1c2hfcnBjLmpzP2Y1ZWMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgcHJvdG9fbGlnaHRwdXNoIGFzIHByb3RvIH0gZnJvbSBcIkB3YWt1L3Byb3RvXCI7XG5pbXBvcnQgeyB2NCBhcyB1dWlkIH0gZnJvbSBcInV1aWRcIjtcbmV4cG9ydCBjbGFzcyBQdXNoUnBjIHtcbiAgICBwcm90bztcbiAgICBjb25zdHJ1Y3Rvcihwcm90bykge1xuICAgICAgICB0aGlzLnByb3RvID0gcHJvdG87XG4gICAgfVxuICAgIHN0YXRpYyBjcmVhdGVSZXF1ZXN0KG1lc3NhZ2UsIHB1YnN1YlRvcGljKSB7XG4gICAgICAgIHJldHVybiBuZXcgUHVzaFJwYyh7XG4gICAgICAgICAgICByZXF1ZXN0SWQ6IHV1aWQoKSxcbiAgICAgICAgICAgIHJlcXVlc3Q6IHtcbiAgICAgICAgICAgICAgICBtZXNzYWdlOiBtZXNzYWdlLFxuICAgICAgICAgICAgICAgIHB1YnN1YlRvcGljOiBwdWJzdWJUb3BpY1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHJlc3BvbnNlOiB1bmRlZmluZWRcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIHN0YXRpYyBkZWNvZGUoYnl0ZXMpIHtcbiAgICAgICAgY29uc3QgcmVzID0gcHJvdG8uUHVzaFJwYy5kZWNvZGUoYnl0ZXMpO1xuICAgICAgICByZXR1cm4gbmV3IFB1c2hScGMocmVzKTtcbiAgICB9XG4gICAgZW5jb2RlKCkge1xuICAgICAgICByZXR1cm4gcHJvdG8uUHVzaFJwYy5lbmNvZGUodGhpcy5wcm90byk7XG4gICAgfVxuICAgIGdldCBxdWVyeSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucHJvdG8ucmVxdWVzdDtcbiAgICB9XG4gICAgZ2V0IHJlc3BvbnNlKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5wcm90by5yZXNwb25zZTtcbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1wdXNoX3JwYy5qcy5tYXAiXSwibmFtZXMiOlsicHJvdG9fbGlnaHRwdXNoIiwicHJvdG8iLCJ2NCIsInV1aWQiLCJQdXNoUnBjIiwiY29uc3RydWN0b3IiLCJjcmVhdGVSZXF1ZXN0IiwibWVzc2FnZSIsInB1YnN1YlRvcGljIiwicmVxdWVzdElkIiwicmVxdWVzdCIsInJlc3BvbnNlIiwidW5kZWZpbmVkIiwiZGVjb2RlIiwiYnl0ZXMiLCJyZXMiLCJlbmNvZGUiLCJxdWVyeSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/sdk/node_modules/@waku/core/dist/lib/light_push/push_rpc.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/sdk/node_modules/@waku/core/dist/lib/message/index.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@waku/sdk/node_modules/@waku/core/dist/lib/message/index.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   version_0: () => (/* reexport module object */ _version_0_js__WEBPACK_IMPORTED_MODULE_0__)\n/* harmony export */ });\n/* harmony import */ var _version_0_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./version_0.js */ \"(ssr)/./node_modules/@waku/sdk/node_modules/@waku/core/dist/lib/message/version_0.js\");\n //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdha3Uvc2RrL25vZGVfbW9kdWxlcy9Ad2FrdS9jb3JlL2Rpc3QvbGliL21lc3NhZ2UvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBNEMsQ0FDNUMsaUNBQWlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZmx1c2gtbm90ZXMvLi9ub2RlX21vZHVsZXMvQHdha3Uvc2RrL25vZGVfbW9kdWxlcy9Ad2FrdS9jb3JlL2Rpc3QvbGliL21lc3NhZ2UvaW5kZXguanM/YzhlNiJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgKiBhcyB2ZXJzaW9uXzAgZnJvbSBcIi4vdmVyc2lvbl8wLmpzXCI7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOlsidmVyc2lvbl8wIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/sdk/node_modules/@waku/core/dist/lib/message/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/sdk/node_modules/@waku/core/dist/lib/message/version_0.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@waku/sdk/node_modules/@waku/core/dist/lib/message/version_0.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DecodedMessage: () => (/* binding */ DecodedMessage),\n/* harmony export */   Decoder: () => (/* binding */ Decoder),\n/* harmony export */   Encoder: () => (/* binding */ Encoder),\n/* harmony export */   Version: () => (/* binding */ Version),\n/* harmony export */   createDecoder: () => (/* binding */ createDecoder),\n/* harmony export */   createEncoder: () => (/* binding */ createEncoder),\n/* harmony export */   proto: () => (/* reexport safe */ _waku_proto__WEBPACK_IMPORTED_MODULE_0__.proto_message)\n/* harmony export */ });\n/* harmony import */ var _waku_proto__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @waku/proto */ \"(ssr)/./node_modules/@waku/sdk/node_modules/@waku/proto/dist/index.js\");\n/* harmony import */ var _waku_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @waku/utils */ \"(ssr)/./node_modules/@waku/utils/dist/index.js\");\n\n\nconst log = new _waku_utils__WEBPACK_IMPORTED_MODULE_1__.Logger(\"message:version-0\");\nconst OneMillion = BigInt(1000000);\nconst Version = 0;\n\nclass DecodedMessage {\n    constructor(pubsubTopic, proto){\n        this.pubsubTopic = pubsubTopic;\n        this.proto = proto;\n    }\n    get ephemeral() {\n        return Boolean(this.proto.ephemeral);\n    }\n    get payload() {\n        return this.proto.payload;\n    }\n    get contentTopic() {\n        return this.proto.contentTopic;\n    }\n    get _rawTimestamp() {\n        return this.proto.timestamp;\n    }\n    get timestamp() {\n        // In the case we receive a value that is bigger than JS's max number,\n        // we catch the error and return undefined.\n        try {\n            if (this.proto.timestamp) {\n                // nanoseconds 10^-9 to milliseconds 10^-3\n                const timestamp = this.proto.timestamp / OneMillion;\n                return new Date(Number(timestamp));\n            }\n            return;\n        } catch (e) {\n            return;\n        }\n    }\n    get meta() {\n        return this.proto.meta;\n    }\n    get version() {\n        // https://rfc.vac.dev/spec/14/\n        // > If omitted, the value SHOULD be interpreted as version 0.\n        return this.proto.version ?? 0;\n    }\n    get rateLimitProof() {\n        return this.proto.rateLimitProof;\n    }\n}\nclass Encoder {\n    constructor(contentTopic, ephemeral = false, pubsubTopic, metaSetter){\n        this.contentTopic = contentTopic;\n        this.ephemeral = ephemeral;\n        this.pubsubTopic = pubsubTopic;\n        this.metaSetter = metaSetter;\n        if (!contentTopic || contentTopic === \"\") {\n            throw new Error(\"Content topic must be specified\");\n        }\n    }\n    async toWire(message) {\n        return _waku_proto__WEBPACK_IMPORTED_MODULE_0__.proto_message.WakuMessage.encode(await this.toProtoObj(message));\n    }\n    async toProtoObj(message) {\n        const timestamp = message.timestamp ?? new Date();\n        const protoMessage = {\n            payload: message.payload,\n            version: Version,\n            contentTopic: this.contentTopic,\n            timestamp: BigInt(timestamp.valueOf()) * OneMillion,\n            meta: undefined,\n            rateLimitProof: message.rateLimitProof,\n            ephemeral: this.ephemeral\n        };\n        if (this.metaSetter) {\n            const meta = this.metaSetter(protoMessage);\n            return {\n                ...protoMessage,\n                meta\n            };\n        }\n        return protoMessage;\n    }\n}\n/**\n * Creates an encoder that encode messages without Waku level encryption or signature.\n *\n * An encoder is used to encode messages in the [14/WAKU2-MESSAGE](https://rfc.vac.dev/spec/14/)\n * format to be sent over the Waku network. The resulting encoder can then be\n * pass to { @link @waku/interfaces!ISender.send } to automatically encode outgoing\n * messages.\n */ function createEncoder({ pubsubTopic, pubsubTopicShardInfo, contentTopic, ephemeral, metaSetter }) {\n    return new Encoder(contentTopic, ephemeral, (0,_waku_utils__WEBPACK_IMPORTED_MODULE_1__.determinePubsubTopic)(contentTopic, pubsubTopic ?? pubsubTopicShardInfo), metaSetter);\n}\nclass Decoder {\n    constructor(pubsubTopic, contentTopic){\n        this.pubsubTopic = pubsubTopic;\n        this.contentTopic = contentTopic;\n        if (!contentTopic || contentTopic === \"\") {\n            throw new Error(\"Content topic must be specified\");\n        }\n    }\n    fromWireToProtoObj(bytes) {\n        const protoMessage = _waku_proto__WEBPACK_IMPORTED_MODULE_0__.proto_message.WakuMessage.decode(bytes);\n        return Promise.resolve({\n            payload: protoMessage.payload,\n            contentTopic: protoMessage.contentTopic,\n            version: protoMessage.version ?? undefined,\n            timestamp: protoMessage.timestamp ?? undefined,\n            meta: protoMessage.meta ?? undefined,\n            rateLimitProof: protoMessage.rateLimitProof ?? undefined,\n            ephemeral: protoMessage.ephemeral ?? false\n        });\n    }\n    async fromProtoObj(pubsubTopic, proto) {\n        // https://rfc.vac.dev/spec/14/\n        // > If omitted, the value SHOULD be interpreted as version 0.\n        if (proto.version ?? 0 !== Version) {\n            log.error(\"Failed to decode due to incorrect version, expected:\", Version, \", actual:\", proto.version);\n            return Promise.resolve(undefined);\n        }\n        return new DecodedMessage(pubsubTopic, proto);\n    }\n}\n/**\n * Creates a decoder that decode messages without Waku level encryption.\n *\n * A decoder is used to decode messages from the [14/WAKU2-MESSAGE](https://rfc.vac.dev/spec/14/)\n * format when received from the Waku network. The resulting decoder can then be\n * pass to { @link @waku/interfaces!IReceiver.subscribe } to automatically decode incoming\n * messages.\n *\n * @param contentTopic The resulting decoder will only decode messages with this content topic.\n */ function createDecoder(contentTopic, pubsubTopicShardInfo) {\n    return new Decoder((0,_waku_utils__WEBPACK_IMPORTED_MODULE_1__.determinePubsubTopic)(contentTopic, pubsubTopicShardInfo), contentTopic);\n} //# sourceMappingURL=version_0.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/sdk/node_modules/@waku/core/dist/lib/message/version_0.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/sdk/node_modules/@waku/core/dist/lib/metadata/index.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@waku/sdk/node_modules/@waku/core/dist/lib/metadata/index.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MetadataCodec: () => (/* binding */ MetadataCodec),\n/* harmony export */   wakuMetadata: () => (/* binding */ wakuMetadata)\n/* harmony export */ });\n/* harmony import */ var _waku_interfaces__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @waku/interfaces */ \"(ssr)/./node_modules/@waku/sdk/node_modules/@waku/interfaces/dist/index.js\");\n/* harmony import */ var _waku_proto__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @waku/proto */ \"(ssr)/./node_modules/@waku/sdk/node_modules/@waku/proto/dist/index.js\");\n/* harmony import */ var _waku_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @waku/utils */ \"(ssr)/./node_modules/@waku/utils/dist/index.js\");\n/* harmony import */ var it_all__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! it-all */ \"(ssr)/./node_modules/it-all/dist/src/index.js\");\n/* harmony import */ var it_length_prefixed__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! it-length-prefixed */ \"(ssr)/./node_modules/it-length-prefixed/dist/src/index.js\");\n/* harmony import */ var it_pipe__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! it-pipe */ \"(ssr)/./node_modules/it-pipe/dist/src/index.js\");\n/* harmony import */ var uint8arraylist__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! uint8arraylist */ \"(ssr)/./node_modules/uint8arraylist/dist/src/index.js\");\n/* harmony import */ var _base_protocol_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../base_protocol.js */ \"(ssr)/./node_modules/@waku/sdk/node_modules/@waku/core/dist/lib/base_protocol.js\");\n\n\n\n\n\n\n\n\nconst log = new _waku_utils__WEBPACK_IMPORTED_MODULE_2__.Logger(\"metadata\");\nconst MetadataCodec = \"/vac/waku/metadata/1.0.0\";\nclass Metadata extends _base_protocol_js__WEBPACK_IMPORTED_MODULE_7__.BaseProtocol {\n    constructor(shardInfo, libp2p){\n        super(MetadataCodec, libp2p.components, log, (0,_waku_utils__WEBPACK_IMPORTED_MODULE_2__.shardInfoToPubsubTopics)(shardInfo));\n        this.handshakesConfirmed = new Map();\n        this.shardInfo = shardInfo;\n        this.libp2pComponents = libp2p;\n        void libp2p.registrar.handle(MetadataCodec, (streamData)=>{\n            void this.onRequest(streamData);\n        });\n    }\n    /**\n     * Handle an incoming metadata request\n     */ async onRequest(streamData) {\n        try {\n            const { stream, connection } = streamData;\n            const encodedShardInfo = _waku_proto__WEBPACK_IMPORTED_MODULE_1__.proto_metadata.WakuMetadataResponse.encode(this.shardInfo);\n            const encodedResponse = await (0,it_pipe__WEBPACK_IMPORTED_MODULE_5__.pipe)([\n                encodedShardInfo\n            ], it_length_prefixed__WEBPACK_IMPORTED_MODULE_4__.encode, stream, it_length_prefixed__WEBPACK_IMPORTED_MODULE_4__.decode, async (source)=>await (0,it_all__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(source));\n            const { error, shardInfo } = this.decodeMetadataResponse(encodedResponse);\n            if (error) {\n                return;\n            }\n            await this.savePeerShardInfo(connection.remotePeer, shardInfo);\n        } catch (error) {\n            log.error(\"Error handling metadata request\", error);\n        }\n    }\n    /**\n     * Make a metadata query to a peer\n     */ async query(peerId) {\n        const request = _waku_proto__WEBPACK_IMPORTED_MODULE_1__.proto_metadata.WakuMetadataRequest.encode(this.shardInfo);\n        const peer = await this.peerStore.get(peerId);\n        if (!peer) {\n            return {\n                shardInfo: null,\n                error: _waku_interfaces__WEBPACK_IMPORTED_MODULE_0__.ProtocolError.NO_PEER_AVAILABLE\n            };\n        }\n        const stream = await this.getStream(peer);\n        const encodedResponse = await (0,it_pipe__WEBPACK_IMPORTED_MODULE_5__.pipe)([\n            request\n        ], it_length_prefixed__WEBPACK_IMPORTED_MODULE_4__.encode, stream, it_length_prefixed__WEBPACK_IMPORTED_MODULE_4__.decode, async (source)=>await (0,it_all__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(source));\n        const { error, shardInfo } = this.decodeMetadataResponse(encodedResponse);\n        if (error) {\n            return {\n                shardInfo: null,\n                error\n            };\n        }\n        await this.savePeerShardInfo(peerId, shardInfo);\n        return {\n            shardInfo,\n            error: null\n        };\n    }\n    async confirmOrAttemptHandshake(peerId) {\n        const shardInfo = this.handshakesConfirmed.get(peerId.toString());\n        if (shardInfo) {\n            return {\n                shardInfo,\n                error: null\n            };\n        }\n        return await this.query(peerId);\n    }\n    decodeMetadataResponse(encodedResponse) {\n        const bytes = new uint8arraylist__WEBPACK_IMPORTED_MODULE_6__.Uint8ArrayList();\n        encodedResponse.forEach((chunk)=>{\n            bytes.append(chunk);\n        });\n        const response = _waku_proto__WEBPACK_IMPORTED_MODULE_1__.proto_metadata.WakuMetadataResponse.decode(bytes);\n        if (!response) {\n            log.error(\"Error decoding metadata response\");\n            return {\n                shardInfo: null,\n                error: _waku_interfaces__WEBPACK_IMPORTED_MODULE_0__.ProtocolError.DECODE_FAILED\n            };\n        }\n        return {\n            shardInfo: response,\n            error: null\n        };\n    }\n    async savePeerShardInfo(peerId, shardInfo) {\n        // add or update the shardInfo to peer store\n        await this.libp2pComponents.peerStore.merge(peerId, {\n            metadata: {\n                shardInfo: (0,_waku_utils__WEBPACK_IMPORTED_MODULE_2__.encodeRelayShard)(shardInfo)\n            }\n        });\n        this.handshakesConfirmed.set(peerId.toString(), shardInfo);\n    }\n}\nfunction wakuMetadata(shardInfo) {\n    return (components)=>new Metadata(shardInfo, components);\n} //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/sdk/node_modules/@waku/core/dist/lib/metadata/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/sdk/node_modules/@waku/core/dist/lib/store/history_rpc.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@waku/sdk/node_modules/@waku/core/dist/lib/store/history_rpc.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   HistoryRpc: () => (/* binding */ HistoryRpc),\n/* harmony export */   PageDirection: () => (/* binding */ PageDirection)\n/* harmony export */ });\n/* harmony import */ var _waku_proto__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @waku/proto */ \"(ssr)/./node_modules/@waku/sdk/node_modules/@waku/proto/dist/index.js\");\n/* harmony import */ var uuid__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! uuid */ \"(ssr)/./node_modules/uuid/dist/esm-node/v4.js\");\n\n\nconst OneMillion = BigInt(1000000);\nvar PageDirection;\n(function(PageDirection) {\n    PageDirection[\"BACKWARD\"] = \"backward\";\n    PageDirection[\"FORWARD\"] = \"forward\";\n})(PageDirection || (PageDirection = {}));\nclass HistoryRpc {\n    constructor(proto){\n        this.proto = proto;\n    }\n    get query() {\n        return this.proto.query;\n    }\n    get response() {\n        return this.proto.response;\n    }\n    /**\n     * Create History Query.\n     */ static createQuery(params) {\n        const contentFilters = params.contentTopics.map((contentTopic)=>{\n            return {\n                contentTopic\n            };\n        });\n        const direction = directionToProto(params.pageDirection);\n        const pagingInfo = {\n            pageSize: BigInt(params.pageSize),\n            cursor: params.cursor,\n            direction\n        };\n        let startTime, endTime;\n        if (params.startTime) {\n            // milliseconds 10^-3 to nanoseconds 10^-9\n            startTime = BigInt(params.startTime.valueOf()) * OneMillion;\n        }\n        if (params.endTime) {\n            // milliseconds 10^-3 to nanoseconds 10^-9\n            endTime = BigInt(params.endTime.valueOf()) * OneMillion;\n        }\n        return new HistoryRpc({\n            requestId: (0,uuid__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(),\n            query: {\n                pubsubTopic: params.pubsubTopic,\n                contentFilters,\n                pagingInfo,\n                startTime,\n                endTime\n            },\n            response: undefined\n        });\n    }\n    decode(bytes) {\n        const res = _waku_proto__WEBPACK_IMPORTED_MODULE_0__.proto_store.HistoryRpc.decode(bytes);\n        return new HistoryRpc(res);\n    }\n    encode() {\n        return _waku_proto__WEBPACK_IMPORTED_MODULE_0__.proto_store.HistoryRpc.encode(this.proto);\n    }\n}\nfunction directionToProto(pageDirection) {\n    switch(pageDirection){\n        case PageDirection.BACKWARD:\n            return _waku_proto__WEBPACK_IMPORTED_MODULE_0__.proto_store.PagingInfo.Direction.BACKWARD;\n        case PageDirection.FORWARD:\n            return _waku_proto__WEBPACK_IMPORTED_MODULE_0__.proto_store.PagingInfo.Direction.FORWARD;\n        default:\n            return _waku_proto__WEBPACK_IMPORTED_MODULE_0__.proto_store.PagingInfo.Direction.BACKWARD;\n    }\n} //# sourceMappingURL=history_rpc.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdha3Uvc2RrL25vZGVfbW9kdWxlcy9Ad2FrdS9jb3JlL2Rpc3QvbGliL3N0b3JlL2hpc3RvcnlfcnBjLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBbUQ7QUFDakI7QUFDbEMsTUFBTUksYUFBYUMsT0FBTztBQUNuQixJQUFJQyxjQUFjO0FBQ3hCLFVBQVVBLGFBQWE7SUFDcEJBLGFBQWEsQ0FBQyxXQUFXLEdBQUc7SUFDNUJBLGFBQWEsQ0FBQyxVQUFVLEdBQUc7QUFDL0IsR0FBR0EsaUJBQWtCQSxDQUFBQSxnQkFBZ0IsQ0FBQztBQUMvQixNQUFNQztJQUVUQyxZQUFZUCxLQUFLLENBQUU7UUFDZixJQUFJLENBQUNBLEtBQUssR0FBR0E7SUFDakI7SUFDQSxJQUFJUSxRQUFRO1FBQ1IsT0FBTyxJQUFJLENBQUNSLEtBQUssQ0FBQ1EsS0FBSztJQUMzQjtJQUNBLElBQUlDLFdBQVc7UUFDWCxPQUFPLElBQUksQ0FBQ1QsS0FBSyxDQUFDUyxRQUFRO0lBQzlCO0lBQ0E7O0tBRUMsR0FDRCxPQUFPQyxZQUFZQyxNQUFNLEVBQUU7UUFDdkIsTUFBTUMsaUJBQWlCRCxPQUFPRSxhQUFhLENBQUNDLEdBQUcsQ0FBQyxDQUFDQztZQUM3QyxPQUFPO2dCQUFFQTtZQUFhO1FBQzFCO1FBQ0EsTUFBTUMsWUFBWUMsaUJBQWlCTixPQUFPTyxhQUFhO1FBQ3ZELE1BQU1DLGFBQWE7WUFDZkMsVUFBVWhCLE9BQU9PLE9BQU9TLFFBQVE7WUFDaENDLFFBQVFWLE9BQU9VLE1BQU07WUFDckJMO1FBQ0o7UUFDQSxJQUFJTSxXQUFXQztRQUNmLElBQUlaLE9BQU9XLFNBQVMsRUFBRTtZQUNsQiwwQ0FBMEM7WUFDMUNBLFlBQVlsQixPQUFPTyxPQUFPVyxTQUFTLENBQUNFLE9BQU8sTUFBTXJCO1FBQ3JEO1FBQ0EsSUFBSVEsT0FBT1ksT0FBTyxFQUFFO1lBQ2hCLDBDQUEwQztZQUMxQ0EsVUFBVW5CLE9BQU9PLE9BQU9ZLE9BQU8sQ0FBQ0MsT0FBTyxNQUFNckI7UUFDakQ7UUFDQSxPQUFPLElBQUlHLFdBQVc7WUFDbEJtQixXQUFXdkIsZ0RBQUlBO1lBQ2ZNLE9BQU87Z0JBQ0hrQixhQUFhZixPQUFPZSxXQUFXO2dCQUMvQmQ7Z0JBQ0FPO2dCQUNBRztnQkFDQUM7WUFDSjtZQUNBZCxVQUFVa0I7UUFDZDtJQUNKO0lBQ0FDLE9BQU9DLEtBQUssRUFBRTtRQUNWLE1BQU1DLE1BQU05QiwrREFBZ0IsQ0FBQzRCLE1BQU0sQ0FBQ0M7UUFDcEMsT0FBTyxJQUFJdkIsV0FBV3dCO0lBQzFCO0lBQ0FDLFNBQVM7UUFDTCxPQUFPL0IsK0RBQWdCLENBQUMrQixNQUFNLENBQUMsSUFBSSxDQUFDL0IsS0FBSztJQUM3QztBQUNKO0FBQ0EsU0FBU2lCLGlCQUFpQkMsYUFBYTtJQUNuQyxPQUFRQTtRQUNKLEtBQUtiLGNBQWMyQixRQUFRO1lBQ3ZCLE9BQU9oQywrREFBZ0IsQ0FBQ2tDLFNBQVMsQ0FBQ0YsUUFBUTtRQUM5QyxLQUFLM0IsY0FBYzhCLE9BQU87WUFDdEIsT0FBT25DLCtEQUFnQixDQUFDa0MsU0FBUyxDQUFDQyxPQUFPO1FBQzdDO1lBQ0ksT0FBT25DLCtEQUFnQixDQUFDa0MsU0FBUyxDQUFDRixRQUFRO0lBQ2xEO0FBQ0osRUFDQSx1Q0FBdUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mbHVzaC1ub3Rlcy8uL25vZGVfbW9kdWxlcy9Ad2FrdS9zZGsvbm9kZV9tb2R1bGVzL0B3YWt1L2NvcmUvZGlzdC9saWIvc3RvcmUvaGlzdG9yeV9ycGMuanM/N2FiOCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBwcm90b19zdG9yZSBhcyBwcm90byB9IGZyb20gXCJAd2FrdS9wcm90b1wiO1xuaW1wb3J0IHsgdjQgYXMgdXVpZCB9IGZyb20gXCJ1dWlkXCI7XG5jb25zdCBPbmVNaWxsaW9uID0gQmlnSW50KDFfMDAwXzAwMCk7XG5leHBvcnQgdmFyIFBhZ2VEaXJlY3Rpb247XG4oZnVuY3Rpb24gKFBhZ2VEaXJlY3Rpb24pIHtcbiAgICBQYWdlRGlyZWN0aW9uW1wiQkFDS1dBUkRcIl0gPSBcImJhY2t3YXJkXCI7XG4gICAgUGFnZURpcmVjdGlvbltcIkZPUldBUkRcIl0gPSBcImZvcndhcmRcIjtcbn0pKFBhZ2VEaXJlY3Rpb24gfHwgKFBhZ2VEaXJlY3Rpb24gPSB7fSkpO1xuZXhwb3J0IGNsYXNzIEhpc3RvcnlScGMge1xuICAgIHByb3RvO1xuICAgIGNvbnN0cnVjdG9yKHByb3RvKSB7XG4gICAgICAgIHRoaXMucHJvdG8gPSBwcm90bztcbiAgICB9XG4gICAgZ2V0IHF1ZXJ5KCkge1xuICAgICAgICByZXR1cm4gdGhpcy5wcm90by5xdWVyeTtcbiAgICB9XG4gICAgZ2V0IHJlc3BvbnNlKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5wcm90by5yZXNwb25zZTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQ3JlYXRlIEhpc3RvcnkgUXVlcnkuXG4gICAgICovXG4gICAgc3RhdGljIGNyZWF0ZVF1ZXJ5KHBhcmFtcykge1xuICAgICAgICBjb25zdCBjb250ZW50RmlsdGVycyA9IHBhcmFtcy5jb250ZW50VG9waWNzLm1hcCgoY29udGVudFRvcGljKSA9PiB7XG4gICAgICAgICAgICByZXR1cm4geyBjb250ZW50VG9waWMgfTtcbiAgICAgICAgfSk7XG4gICAgICAgIGNvbnN0IGRpcmVjdGlvbiA9IGRpcmVjdGlvblRvUHJvdG8ocGFyYW1zLnBhZ2VEaXJlY3Rpb24pO1xuICAgICAgICBjb25zdCBwYWdpbmdJbmZvID0ge1xuICAgICAgICAgICAgcGFnZVNpemU6IEJpZ0ludChwYXJhbXMucGFnZVNpemUpLFxuICAgICAgICAgICAgY3Vyc29yOiBwYXJhbXMuY3Vyc29yLFxuICAgICAgICAgICAgZGlyZWN0aW9uXG4gICAgICAgIH07XG4gICAgICAgIGxldCBzdGFydFRpbWUsIGVuZFRpbWU7XG4gICAgICAgIGlmIChwYXJhbXMuc3RhcnRUaW1lKSB7XG4gICAgICAgICAgICAvLyBtaWxsaXNlY29uZHMgMTBeLTMgdG8gbmFub3NlY29uZHMgMTBeLTlcbiAgICAgICAgICAgIHN0YXJ0VGltZSA9IEJpZ0ludChwYXJhbXMuc3RhcnRUaW1lLnZhbHVlT2YoKSkgKiBPbmVNaWxsaW9uO1xuICAgICAgICB9XG4gICAgICAgIGlmIChwYXJhbXMuZW5kVGltZSkge1xuICAgICAgICAgICAgLy8gbWlsbGlzZWNvbmRzIDEwXi0zIHRvIG5hbm9zZWNvbmRzIDEwXi05XG4gICAgICAgICAgICBlbmRUaW1lID0gQmlnSW50KHBhcmFtcy5lbmRUaW1lLnZhbHVlT2YoKSkgKiBPbmVNaWxsaW9uO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBuZXcgSGlzdG9yeVJwYyh7XG4gICAgICAgICAgICByZXF1ZXN0SWQ6IHV1aWQoKSxcbiAgICAgICAgICAgIHF1ZXJ5OiB7XG4gICAgICAgICAgICAgICAgcHVic3ViVG9waWM6IHBhcmFtcy5wdWJzdWJUb3BpYyxcbiAgICAgICAgICAgICAgICBjb250ZW50RmlsdGVycyxcbiAgICAgICAgICAgICAgICBwYWdpbmdJbmZvLFxuICAgICAgICAgICAgICAgIHN0YXJ0VGltZSxcbiAgICAgICAgICAgICAgICBlbmRUaW1lXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgcmVzcG9uc2U6IHVuZGVmaW5lZFxuICAgICAgICB9KTtcbiAgICB9XG4gICAgZGVjb2RlKGJ5dGVzKSB7XG4gICAgICAgIGNvbnN0IHJlcyA9IHByb3RvLkhpc3RvcnlScGMuZGVjb2RlKGJ5dGVzKTtcbiAgICAgICAgcmV0dXJuIG5ldyBIaXN0b3J5UnBjKHJlcyk7XG4gICAgfVxuICAgIGVuY29kZSgpIHtcbiAgICAgICAgcmV0dXJuIHByb3RvLkhpc3RvcnlScGMuZW5jb2RlKHRoaXMucHJvdG8pO1xuICAgIH1cbn1cbmZ1bmN0aW9uIGRpcmVjdGlvblRvUHJvdG8ocGFnZURpcmVjdGlvbikge1xuICAgIHN3aXRjaCAocGFnZURpcmVjdGlvbikge1xuICAgICAgICBjYXNlIFBhZ2VEaXJlY3Rpb24uQkFDS1dBUkQ6XG4gICAgICAgICAgICByZXR1cm4gcHJvdG8uUGFnaW5nSW5mby5EaXJlY3Rpb24uQkFDS1dBUkQ7XG4gICAgICAgIGNhc2UgUGFnZURpcmVjdGlvbi5GT1JXQVJEOlxuICAgICAgICAgICAgcmV0dXJuIHByb3RvLlBhZ2luZ0luZm8uRGlyZWN0aW9uLkZPUldBUkQ7XG4gICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICByZXR1cm4gcHJvdG8uUGFnaW5nSW5mby5EaXJlY3Rpb24uQkFDS1dBUkQ7XG4gICAgfVxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aGlzdG9yeV9ycGMuanMubWFwIl0sIm5hbWVzIjpbInByb3RvX3N0b3JlIiwicHJvdG8iLCJ2NCIsInV1aWQiLCJPbmVNaWxsaW9uIiwiQmlnSW50IiwiUGFnZURpcmVjdGlvbiIsIkhpc3RvcnlScGMiLCJjb25zdHJ1Y3RvciIsInF1ZXJ5IiwicmVzcG9uc2UiLCJjcmVhdGVRdWVyeSIsInBhcmFtcyIsImNvbnRlbnRGaWx0ZXJzIiwiY29udGVudFRvcGljcyIsIm1hcCIsImNvbnRlbnRUb3BpYyIsImRpcmVjdGlvbiIsImRpcmVjdGlvblRvUHJvdG8iLCJwYWdlRGlyZWN0aW9uIiwicGFnaW5nSW5mbyIsInBhZ2VTaXplIiwiY3Vyc29yIiwic3RhcnRUaW1lIiwiZW5kVGltZSIsInZhbHVlT2YiLCJyZXF1ZXN0SWQiLCJwdWJzdWJUb3BpYyIsInVuZGVmaW5lZCIsImRlY29kZSIsImJ5dGVzIiwicmVzIiwiZW5jb2RlIiwiQkFDS1dBUkQiLCJQYWdpbmdJbmZvIiwiRGlyZWN0aW9uIiwiRk9SV0FSRCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/sdk/node_modules/@waku/core/dist/lib/store/history_rpc.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/sdk/node_modules/@waku/core/dist/lib/store/index.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@waku/sdk/node_modules/@waku/core/dist/lib/store/index.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PageDirection: () => (/* reexport safe */ _history_rpc_js__WEBPACK_IMPORTED_MODULE_8__.PageDirection),\n/* harmony export */   StoreCodec: () => (/* binding */ StoreCodec),\n/* harmony export */   StoreCore: () => (/* binding */ StoreCore)\n/* harmony export */ });\n/* harmony import */ var _waku_proto__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @waku/proto */ \"(ssr)/./node_modules/@waku/sdk/node_modules/@waku/proto/dist/index.js\");\n/* harmony import */ var _waku_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @waku/utils */ \"(ssr)/./node_modules/@waku/utils/dist/index.js\");\n/* harmony import */ var it_all__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! it-all */ \"(ssr)/./node_modules/it-all/dist/src/index.js\");\n/* harmony import */ var it_length_prefixed__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! it-length-prefixed */ \"(ssr)/./node_modules/it-length-prefixed/dist/src/index.js\");\n/* harmony import */ var it_pipe__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! it-pipe */ \"(ssr)/./node_modules/it-pipe/dist/src/index.js\");\n/* harmony import */ var uint8arraylist__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! uint8arraylist */ \"(ssr)/./node_modules/uint8arraylist/dist/src/index.js\");\n/* harmony import */ var _base_protocol_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../base_protocol.js */ \"(ssr)/./node_modules/@waku/sdk/node_modules/@waku/core/dist/lib/base_protocol.js\");\n/* harmony import */ var _to_proto_message_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../to_proto_message.js */ \"(ssr)/./node_modules/@waku/sdk/node_modules/@waku/core/dist/lib/to_proto_message.js\");\n/* harmony import */ var _history_rpc_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./history_rpc.js */ \"(ssr)/./node_modules/@waku/sdk/node_modules/@waku/core/dist/lib/store/history_rpc.js\");\n\n\n\n\n\n\n\n\n\nvar HistoryError = _waku_proto__WEBPACK_IMPORTED_MODULE_0__.proto_store.HistoryResponse.HistoryError;\nconst log = new _waku_utils__WEBPACK_IMPORTED_MODULE_1__.Logger(\"store\");\nconst StoreCodec = \"/vac/waku/store/2.0.0-beta4\";\n\n/**\n * Implements the [Waku v2 Store protocol](https://rfc.vac.dev/spec/13/).\n *\n * The Waku Store protocol can be used to retrieved historical messages.\n */ class StoreCore extends _base_protocol_js__WEBPACK_IMPORTED_MODULE_6__.BaseProtocol {\n    constructor(libp2p, options){\n        super(StoreCodec, libp2p.components, log, options.pubsubTopics, options);\n    }\n    async *queryPerPage(queryOpts, decoders, peer) {\n        if (queryOpts.contentTopics.toString() !== Array.from(decoders.keys()).toString()) {\n            throw new Error(\"Internal error, the decoders should match the query's content topics\");\n        }\n        let currentCursor = queryOpts.cursor;\n        while(true){\n            queryOpts.cursor = currentCursor;\n            const historyRpcQuery = _history_rpc_js__WEBPACK_IMPORTED_MODULE_8__.HistoryRpc.createQuery(queryOpts);\n            const stream = await this.getStream(peer);\n            const res = await (0,it_pipe__WEBPACK_IMPORTED_MODULE_4__.pipe)([\n                historyRpcQuery.encode()\n            ], it_length_prefixed__WEBPACK_IMPORTED_MODULE_3__.encode, stream, it_length_prefixed__WEBPACK_IMPORTED_MODULE_3__.decode, async (source)=>await (0,it_all__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(source));\n            const bytes = new uint8arraylist__WEBPACK_IMPORTED_MODULE_5__.Uint8ArrayList();\n            res.forEach((chunk)=>{\n                bytes.append(chunk);\n            });\n            const reply = historyRpcQuery.decode(bytes);\n            if (!reply.response) {\n                log.warn(\"Stopping pagination due to store `response` field missing\");\n                break;\n            }\n            const response = reply.response;\n            if (response.error && response.error !== HistoryError.NONE) {\n                throw \"History response contains an Error: \" + response.error;\n            }\n            if (!response.messages || !response.messages.length) {\n                log.warn(\"Stopping pagination due to store `response.messages` field missing or empty\");\n                break;\n            }\n            log.error(`${response.messages.length} messages retrieved from store`);\n            yield response.messages.map((protoMsg)=>{\n                const contentTopic = protoMsg.contentTopic;\n                if (typeof contentTopic !== \"undefined\") {\n                    const decoder = decoders.get(contentTopic);\n                    if (decoder) {\n                        return decoder.fromProtoObj(queryOpts.pubsubTopic, (0,_to_proto_message_js__WEBPACK_IMPORTED_MODULE_7__.toProtoMessage)(protoMsg));\n                    }\n                }\n                return Promise.resolve(undefined);\n            });\n            const nextCursor = response.pagingInfo?.cursor;\n            if (typeof nextCursor === \"undefined\") {\n                // If the server does not return cursor then there is an issue,\n                // Need to abort, or we end up in an infinite loop\n                log.warn(\"Stopping pagination due to `response.pagingInfo.cursor` missing from store response\");\n                break;\n            }\n            currentCursor = nextCursor;\n            const responsePageSize = response.pagingInfo?.pageSize;\n            const queryPageSize = historyRpcQuery.query?.pagingInfo?.pageSize;\n            if (// Response page size smaller than query, meaning this is the last page\n            responsePageSize && queryPageSize && responsePageSize < queryPageSize) {\n                break;\n            }\n        }\n    }\n} //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/sdk/node_modules/@waku/core/dist/lib/store/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/sdk/node_modules/@waku/core/dist/lib/stream_manager.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@waku/sdk/node_modules/@waku/core/dist/lib/stream_manager.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   StreamManager: () => (/* binding */ StreamManager)\n/* harmony export */ });\n/* harmony import */ var _waku_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @waku/utils */ \"(ssr)/./node_modules/@waku/utils/dist/index.js\");\n/* harmony import */ var _waku_utils_libp2p__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @waku/utils/libp2p */ \"(ssr)/./node_modules/@waku/utils/dist/libp2p/index.js\");\n\n\nclass StreamManager {\n    constructor(multicodec, getConnections, addEventListener){\n        this.handlePeerUpdateStreamPool = (evt)=>{\n            const peer = evt.detail.peer;\n            if (peer.protocols.includes(this.multicodec)) {\n                this.log.info(`Preemptively opening a stream to ${peer.id.toString()}`);\n                this.prepareNewStream(peer);\n            }\n        };\n        this.multicodec = multicodec;\n        this.getConnections = getConnections;\n        this.addEventListener = addEventListener;\n        this.log = new _waku_utils__WEBPACK_IMPORTED_MODULE_0__.Logger(`stream-manager:${multicodec}`);\n        this.addEventListener(\"peer:update\", this.handlePeerUpdateStreamPool.bind(this));\n        this.getStream = this.getStream.bind(this);\n        this.streamPool = new Map();\n    }\n    async getStream(peer) {\n        const peerIdStr = peer.id.toString();\n        const streamPromise = this.streamPool.get(peerIdStr);\n        if (!streamPromise) {\n            return this.newStream(peer); // fallback by creating a new stream on the spot\n        }\n        // We have the stream, let's remove it from the map\n        this.streamPool.delete(peerIdStr);\n        this.prepareNewStream(peer);\n        const stream = await streamPromise;\n        if (!stream || stream.status === \"closed\") {\n            return this.newStream(peer); // fallback by creating a new stream on the spot\n        }\n        return stream;\n    }\n    async newStream(peer) {\n        const connections = this.getConnections(peer.id);\n        const connection = (0,_waku_utils_libp2p__WEBPACK_IMPORTED_MODULE_1__.selectConnection)(connections);\n        if (!connection) {\n            throw new Error(\"Failed to get a connection to the peer\");\n        }\n        return connection.newStream(this.multicodec);\n    }\n    prepareNewStream(peer) {\n        const streamPromise = this.newStream(peer).catch(()=>{\n            // No error thrown as this call is not triggered by the user\n            this.log.error(`Failed to prepare a new stream for ${peer.id.toString()}`);\n        });\n        this.streamPool.set(peer.id.toString(), streamPromise);\n    }\n} //# sourceMappingURL=stream_manager.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdha3Uvc2RrL25vZGVfbW9kdWxlcy9Ad2FrdS9jb3JlL2Rpc3QvbGliL3N0cmVhbV9tYW5hZ2VyLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFxQztBQUNpQjtBQUMvQyxNQUFNRTtJQU1UQyxZQUFZQyxVQUFVLEVBQUVDLGNBQWMsRUFBRUMsZ0JBQWdCLENBQUU7YUF1QzFEQyw2QkFBNkIsQ0FBQ0M7WUFDMUIsTUFBTUMsT0FBT0QsSUFBSUUsTUFBTSxDQUFDRCxJQUFJO1lBQzVCLElBQUlBLEtBQUtFLFNBQVMsQ0FBQ0MsUUFBUSxDQUFDLElBQUksQ0FBQ1IsVUFBVSxHQUFHO2dCQUMxQyxJQUFJLENBQUNTLEdBQUcsQ0FBQ0MsSUFBSSxDQUFDLENBQUMsaUNBQWlDLEVBQUVMLEtBQUtNLEVBQUUsQ0FBQ0MsUUFBUSxHQUFHLENBQUM7Z0JBQ3RFLElBQUksQ0FBQ0MsZ0JBQWdCLENBQUNSO1lBQzFCO1FBQ0o7UUE1Q0ksSUFBSSxDQUFDTCxVQUFVLEdBQUdBO1FBQ2xCLElBQUksQ0FBQ0MsY0FBYyxHQUFHQTtRQUN0QixJQUFJLENBQUNDLGdCQUFnQixHQUFHQTtRQUN4QixJQUFJLENBQUNPLEdBQUcsR0FBRyxJQUFJYiwrQ0FBTUEsQ0FBQyxDQUFDLGVBQWUsRUFBRUksV0FBVyxDQUFDO1FBQ3BELElBQUksQ0FBQ0UsZ0JBQWdCLENBQUMsZUFBZSxJQUFJLENBQUNDLDBCQUEwQixDQUFDVyxJQUFJLENBQUMsSUFBSTtRQUM5RSxJQUFJLENBQUNDLFNBQVMsR0FBRyxJQUFJLENBQUNBLFNBQVMsQ0FBQ0QsSUFBSSxDQUFDLElBQUk7UUFDekMsSUFBSSxDQUFDRSxVQUFVLEdBQUcsSUFBSUM7SUFDMUI7SUFDQSxNQUFNRixVQUFVVixJQUFJLEVBQUU7UUFDbEIsTUFBTWEsWUFBWWIsS0FBS00sRUFBRSxDQUFDQyxRQUFRO1FBQ2xDLE1BQU1PLGdCQUFnQixJQUFJLENBQUNILFVBQVUsQ0FBQ0ksR0FBRyxDQUFDRjtRQUMxQyxJQUFJLENBQUNDLGVBQWU7WUFDaEIsT0FBTyxJQUFJLENBQUNFLFNBQVMsQ0FBQ2hCLE9BQU8sZ0RBQWdEO1FBQ2pGO1FBQ0EsbURBQW1EO1FBQ25ELElBQUksQ0FBQ1csVUFBVSxDQUFDTSxNQUFNLENBQUNKO1FBQ3ZCLElBQUksQ0FBQ0wsZ0JBQWdCLENBQUNSO1FBQ3RCLE1BQU1rQixTQUFTLE1BQU1KO1FBQ3JCLElBQUksQ0FBQ0ksVUFBVUEsT0FBT0MsTUFBTSxLQUFLLFVBQVU7WUFDdkMsT0FBTyxJQUFJLENBQUNILFNBQVMsQ0FBQ2hCLE9BQU8sZ0RBQWdEO1FBQ2pGO1FBQ0EsT0FBT2tCO0lBQ1g7SUFDQSxNQUFNRixVQUFVaEIsSUFBSSxFQUFFO1FBQ2xCLE1BQU1vQixjQUFjLElBQUksQ0FBQ3hCLGNBQWMsQ0FBQ0ksS0FBS00sRUFBRTtRQUMvQyxNQUFNZSxhQUFhN0Isb0VBQWdCQSxDQUFDNEI7UUFDcEMsSUFBSSxDQUFDQyxZQUFZO1lBQ2IsTUFBTSxJQUFJQyxNQUFNO1FBQ3BCO1FBQ0EsT0FBT0QsV0FBV0wsU0FBUyxDQUFDLElBQUksQ0FBQ3JCLFVBQVU7SUFDL0M7SUFDQWEsaUJBQWlCUixJQUFJLEVBQUU7UUFDbkIsTUFBTWMsZ0JBQWdCLElBQUksQ0FBQ0UsU0FBUyxDQUFDaEIsTUFBTXVCLEtBQUssQ0FBQztZQUM3Qyw0REFBNEQ7WUFDNUQsSUFBSSxDQUFDbkIsR0FBRyxDQUFDb0IsS0FBSyxDQUFDLENBQUMsbUNBQW1DLEVBQUV4QixLQUFLTSxFQUFFLENBQUNDLFFBQVEsR0FBRyxDQUFDO1FBQzdFO1FBQ0EsSUFBSSxDQUFDSSxVQUFVLENBQUNjLEdBQUcsQ0FBQ3pCLEtBQUtNLEVBQUUsQ0FBQ0MsUUFBUSxJQUFJTztJQUM1QztBQVFKLEVBQ0EsMENBQTBDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZmx1c2gtbm90ZXMvLi9ub2RlX21vZHVsZXMvQHdha3Uvc2RrL25vZGVfbW9kdWxlcy9Ad2FrdS9jb3JlL2Rpc3QvbGliL3N0cmVhbV9tYW5hZ2VyLmpzPzRiZjgiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTG9nZ2VyIH0gZnJvbSBcIkB3YWt1L3V0aWxzXCI7XG5pbXBvcnQgeyBzZWxlY3RDb25uZWN0aW9uIH0gZnJvbSBcIkB3YWt1L3V0aWxzL2xpYnAycFwiO1xuZXhwb3J0IGNsYXNzIFN0cmVhbU1hbmFnZXIge1xuICAgIG11bHRpY29kZWM7XG4gICAgZ2V0Q29ubmVjdGlvbnM7XG4gICAgYWRkRXZlbnRMaXN0ZW5lcjtcbiAgICBzdHJlYW1Qb29sO1xuICAgIGxvZztcbiAgICBjb25zdHJ1Y3RvcihtdWx0aWNvZGVjLCBnZXRDb25uZWN0aW9ucywgYWRkRXZlbnRMaXN0ZW5lcikge1xuICAgICAgICB0aGlzLm11bHRpY29kZWMgPSBtdWx0aWNvZGVjO1xuICAgICAgICB0aGlzLmdldENvbm5lY3Rpb25zID0gZ2V0Q29ubmVjdGlvbnM7XG4gICAgICAgIHRoaXMuYWRkRXZlbnRMaXN0ZW5lciA9IGFkZEV2ZW50TGlzdGVuZXI7XG4gICAgICAgIHRoaXMubG9nID0gbmV3IExvZ2dlcihgc3RyZWFtLW1hbmFnZXI6JHttdWx0aWNvZGVjfWApO1xuICAgICAgICB0aGlzLmFkZEV2ZW50TGlzdGVuZXIoXCJwZWVyOnVwZGF0ZVwiLCB0aGlzLmhhbmRsZVBlZXJVcGRhdGVTdHJlYW1Qb29sLmJpbmQodGhpcykpO1xuICAgICAgICB0aGlzLmdldFN0cmVhbSA9IHRoaXMuZ2V0U3RyZWFtLmJpbmQodGhpcyk7XG4gICAgICAgIHRoaXMuc3RyZWFtUG9vbCA9IG5ldyBNYXAoKTtcbiAgICB9XG4gICAgYXN5bmMgZ2V0U3RyZWFtKHBlZXIpIHtcbiAgICAgICAgY29uc3QgcGVlcklkU3RyID0gcGVlci5pZC50b1N0cmluZygpO1xuICAgICAgICBjb25zdCBzdHJlYW1Qcm9taXNlID0gdGhpcy5zdHJlYW1Qb29sLmdldChwZWVySWRTdHIpO1xuICAgICAgICBpZiAoIXN0cmVhbVByb21pc2UpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLm5ld1N0cmVhbShwZWVyKTsgLy8gZmFsbGJhY2sgYnkgY3JlYXRpbmcgYSBuZXcgc3RyZWFtIG9uIHRoZSBzcG90XG4gICAgICAgIH1cbiAgICAgICAgLy8gV2UgaGF2ZSB0aGUgc3RyZWFtLCBsZXQncyByZW1vdmUgaXQgZnJvbSB0aGUgbWFwXG4gICAgICAgIHRoaXMuc3RyZWFtUG9vbC5kZWxldGUocGVlcklkU3RyKTtcbiAgICAgICAgdGhpcy5wcmVwYXJlTmV3U3RyZWFtKHBlZXIpO1xuICAgICAgICBjb25zdCBzdHJlYW0gPSBhd2FpdCBzdHJlYW1Qcm9taXNlO1xuICAgICAgICBpZiAoIXN0cmVhbSB8fCBzdHJlYW0uc3RhdHVzID09PSBcImNsb3NlZFwiKSB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5uZXdTdHJlYW0ocGVlcik7IC8vIGZhbGxiYWNrIGJ5IGNyZWF0aW5nIGEgbmV3IHN0cmVhbSBvbiB0aGUgc3BvdFxuICAgICAgICB9XG4gICAgICAgIHJldHVybiBzdHJlYW07XG4gICAgfVxuICAgIGFzeW5jIG5ld1N0cmVhbShwZWVyKSB7XG4gICAgICAgIGNvbnN0IGNvbm5lY3Rpb25zID0gdGhpcy5nZXRDb25uZWN0aW9ucyhwZWVyLmlkKTtcbiAgICAgICAgY29uc3QgY29ubmVjdGlvbiA9IHNlbGVjdENvbm5lY3Rpb24oY29ubmVjdGlvbnMpO1xuICAgICAgICBpZiAoIWNvbm5lY3Rpb24pIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIkZhaWxlZCB0byBnZXQgYSBjb25uZWN0aW9uIHRvIHRoZSBwZWVyXCIpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBjb25uZWN0aW9uLm5ld1N0cmVhbSh0aGlzLm11bHRpY29kZWMpO1xuICAgIH1cbiAgICBwcmVwYXJlTmV3U3RyZWFtKHBlZXIpIHtcbiAgICAgICAgY29uc3Qgc3RyZWFtUHJvbWlzZSA9IHRoaXMubmV3U3RyZWFtKHBlZXIpLmNhdGNoKCgpID0+IHtcbiAgICAgICAgICAgIC8vIE5vIGVycm9yIHRocm93biBhcyB0aGlzIGNhbGwgaXMgbm90IHRyaWdnZXJlZCBieSB0aGUgdXNlclxuICAgICAgICAgICAgdGhpcy5sb2cuZXJyb3IoYEZhaWxlZCB0byBwcmVwYXJlIGEgbmV3IHN0cmVhbSBmb3IgJHtwZWVyLmlkLnRvU3RyaW5nKCl9YCk7XG4gICAgICAgIH0pO1xuICAgICAgICB0aGlzLnN0cmVhbVBvb2wuc2V0KHBlZXIuaWQudG9TdHJpbmcoKSwgc3RyZWFtUHJvbWlzZSk7XG4gICAgfVxuICAgIGhhbmRsZVBlZXJVcGRhdGVTdHJlYW1Qb29sID0gKGV2dCkgPT4ge1xuICAgICAgICBjb25zdCBwZWVyID0gZXZ0LmRldGFpbC5wZWVyO1xuICAgICAgICBpZiAocGVlci5wcm90b2NvbHMuaW5jbHVkZXModGhpcy5tdWx0aWNvZGVjKSkge1xuICAgICAgICAgICAgdGhpcy5sb2cuaW5mbyhgUHJlZW1wdGl2ZWx5IG9wZW5pbmcgYSBzdHJlYW0gdG8gJHtwZWVyLmlkLnRvU3RyaW5nKCl9YCk7XG4gICAgICAgICAgICB0aGlzLnByZXBhcmVOZXdTdHJlYW0ocGVlcik7XG4gICAgICAgIH1cbiAgICB9O1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c3RyZWFtX21hbmFnZXIuanMubWFwIl0sIm5hbWVzIjpbIkxvZ2dlciIsInNlbGVjdENvbm5lY3Rpb24iLCJTdHJlYW1NYW5hZ2VyIiwiY29uc3RydWN0b3IiLCJtdWx0aWNvZGVjIiwiZ2V0Q29ubmVjdGlvbnMiLCJhZGRFdmVudExpc3RlbmVyIiwiaGFuZGxlUGVlclVwZGF0ZVN0cmVhbVBvb2wiLCJldnQiLCJwZWVyIiwiZGV0YWlsIiwicHJvdG9jb2xzIiwiaW5jbHVkZXMiLCJsb2ciLCJpbmZvIiwiaWQiLCJ0b1N0cmluZyIsInByZXBhcmVOZXdTdHJlYW0iLCJiaW5kIiwiZ2V0U3RyZWFtIiwic3RyZWFtUG9vbCIsIk1hcCIsInBlZXJJZFN0ciIsInN0cmVhbVByb21pc2UiLCJnZXQiLCJuZXdTdHJlYW0iLCJkZWxldGUiLCJzdHJlYW0iLCJzdGF0dXMiLCJjb25uZWN0aW9ucyIsImNvbm5lY3Rpb24iLCJFcnJvciIsImNhdGNoIiwiZXJyb3IiLCJzZXQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/sdk/node_modules/@waku/core/dist/lib/stream_manager.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/sdk/node_modules/@waku/core/dist/lib/to_proto_message.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@waku/sdk/node_modules/@waku/core/dist/lib/to_proto_message.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   toProtoMessage: () => (/* binding */ toProtoMessage)\n/* harmony export */ });\nconst EmptyMessage = {\n    payload: new Uint8Array(),\n    contentTopic: \"\",\n    version: undefined,\n    timestamp: undefined,\n    meta: undefined,\n    rateLimitProof: undefined,\n    ephemeral: undefined\n};\nfunction toProtoMessage(wire) {\n    return {\n        ...EmptyMessage,\n        ...wire\n    };\n} //# sourceMappingURL=to_proto_message.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdha3Uvc2RrL25vZGVfbW9kdWxlcy9Ad2FrdS9jb3JlL2Rpc3QvbGliL3RvX3Byb3RvX21lc3NhZ2UuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE1BQU1BLGVBQWU7SUFDakJDLFNBQVMsSUFBSUM7SUFDYkMsY0FBYztJQUNkQyxTQUFTQztJQUNUQyxXQUFXRDtJQUNYRSxNQUFNRjtJQUNORyxnQkFBZ0JIO0lBQ2hCSSxXQUFXSjtBQUNmO0FBQ08sU0FBU0ssZUFBZUMsSUFBSTtJQUMvQixPQUFPO1FBQUUsR0FBR1gsWUFBWTtRQUFFLEdBQUdXLElBQUk7SUFBQztBQUN0QyxFQUNBLDRDQUE0QyIsInNvdXJjZXMiOlsid2VicGFjazovL2ZsdXNoLW5vdGVzLy4vbm9kZV9tb2R1bGVzL0B3YWt1L3Nkay9ub2RlX21vZHVsZXMvQHdha3UvY29yZS9kaXN0L2xpYi90b19wcm90b19tZXNzYWdlLmpzPzU5MTMiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgRW1wdHlNZXNzYWdlID0ge1xuICAgIHBheWxvYWQ6IG5ldyBVaW50OEFycmF5KCksXG4gICAgY29udGVudFRvcGljOiBcIlwiLFxuICAgIHZlcnNpb246IHVuZGVmaW5lZCxcbiAgICB0aW1lc3RhbXA6IHVuZGVmaW5lZCxcbiAgICBtZXRhOiB1bmRlZmluZWQsXG4gICAgcmF0ZUxpbWl0UHJvb2Y6IHVuZGVmaW5lZCxcbiAgICBlcGhlbWVyYWw6IHVuZGVmaW5lZFxufTtcbmV4cG9ydCBmdW5jdGlvbiB0b1Byb3RvTWVzc2FnZSh3aXJlKSB7XG4gICAgcmV0dXJuIHsgLi4uRW1wdHlNZXNzYWdlLCAuLi53aXJlIH07XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD10b19wcm90b19tZXNzYWdlLmpzLm1hcCJdLCJuYW1lcyI6WyJFbXB0eU1lc3NhZ2UiLCJwYXlsb2FkIiwiVWludDhBcnJheSIsImNvbnRlbnRUb3BpYyIsInZlcnNpb24iLCJ1bmRlZmluZWQiLCJ0aW1lc3RhbXAiLCJtZXRhIiwicmF0ZUxpbWl0UHJvb2YiLCJlcGhlbWVyYWwiLCJ0b1Byb3RvTWVzc2FnZSIsIndpcmUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/sdk/node_modules/@waku/core/dist/lib/to_proto_message.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/sdk/node_modules/@waku/core/dist/lib/wait_for_remote_peer.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@waku/sdk/node_modules/@waku/core/dist/lib/wait_for_remote_peer.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   waitForRemotePeer: () => (/* binding */ waitForRemotePeer)\n/* harmony export */ });\n/* harmony import */ var _waku_interfaces__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @waku/interfaces */ \"(ssr)/./node_modules/@waku/sdk/node_modules/@waku/interfaces/dist/index.js\");\n/* harmony import */ var _waku_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @waku/utils */ \"(ssr)/./node_modules/@waku/utils/dist/index.js\");\n/* harmony import */ var p_event__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! p-event */ \"(ssr)/./node_modules/p-event/index.js\");\n\n\n\nconst log = new _waku_utils__WEBPACK_IMPORTED_MODULE_1__.Logger(\"wait-for-remote-peer\");\n//TODO: move this function within the Waku class: https://github.com/waku-org/js-waku/issues/1761\n/**\n * Wait for a remote peer to be ready given the passed protocols.\n * Must be used after attempting to connect to nodes, using\n * {@link @waku/sdk!WakuNode.dial} or a bootstrap method with\n * {@link @waku/sdk!createLightNode}.\n *\n * If the passed protocols is a GossipSub protocol, then it resolves only once\n * a peer is in a mesh, to help ensure that other peers will send and receive\n * message to us.\n *\n * @param waku The Waku Node\n * @param protocols The protocols that need to be enabled by remote peers.\n * @param timeoutMs A timeout value in milliseconds..\n *\n * @returns A promise that **resolves** if all desired protocols are fulfilled by\n * remote nodes, **rejects** if the timeoutMs is reached.\n * @throws If passing a protocol that is not mounted\n * @default Wait for remote peers with protocols enabled locally and no time out is applied.\n */ async function waitForRemotePeer(waku, protocols, timeoutMs) {\n    protocols = protocols ?? getEnabledProtocols(waku);\n    if (!waku.isStarted()) return Promise.reject(\"Waku node is not started\");\n    const promises = [];\n    if (protocols.includes(_waku_interfaces__WEBPACK_IMPORTED_MODULE_0__.Protocols.Relay)) {\n        if (!waku.relay) throw new Error(\"Cannot wait for Relay peer: protocol not mounted\");\n        promises.push(waitForGossipSubPeerInMesh(waku.relay));\n    }\n    if (protocols.includes(_waku_interfaces__WEBPACK_IMPORTED_MODULE_0__.Protocols.Store)) {\n        if (!waku.store) throw new Error(\"Cannot wait for Store peer: protocol not mounted\");\n        promises.push(waitForConnectedPeer(waku.store.protocol, waku.libp2p.services.metadata));\n    }\n    if (protocols.includes(_waku_interfaces__WEBPACK_IMPORTED_MODULE_0__.Protocols.LightPush)) {\n        if (!waku.lightPush) throw new Error(\"Cannot wait for LightPush peer: protocol not mounted\");\n        promises.push(waitForConnectedPeer(waku.lightPush.protocol, waku.libp2p.services.metadata));\n    }\n    if (protocols.includes(_waku_interfaces__WEBPACK_IMPORTED_MODULE_0__.Protocols.Filter)) {\n        if (!waku.filter) throw new Error(\"Cannot wait for Filter peer: protocol not mounted\");\n        promises.push(waitForConnectedPeer(waku.filter, waku.libp2p.services.metadata));\n    }\n    if (timeoutMs) {\n        await rejectOnTimeout(Promise.all(promises), timeoutMs, \"Timed out waiting for a remote peer.\");\n    } else {\n        await Promise.all(promises);\n    }\n}\n//TODO: move this function within protocol SDK class: https://github.com/waku-org/js-waku/issues/1761\n/**\n * Wait for a peer with the given protocol to be connected.\n * If sharding is enabled on the node, it will also wait for the peer to be confirmed by the metadata service.\n */ async function waitForConnectedPeer(protocol, metadataService) {\n    const codec = protocol.multicodec;\n    const peers = await protocol.connectedPeers();\n    if (peers.length) {\n        if (!metadataService) {\n            log.info(`${codec} peer found: `, peers[0].id.toString());\n            return;\n        }\n        // once a peer is connected, we need to confirm the metadata handshake with at least one of those peers if sharding is enabled\n        try {\n            await Promise.any(peers.map((peer)=>metadataService.confirmOrAttemptHandshake(peer.id)));\n            return;\n        } catch (e) {\n            if (e.code === \"ERR_CONNECTION_BEING_CLOSED\") log.error(`Connection with the peer was closed and possibly because it's on a different shard. Error: ${e}`);\n            log.error(`Error waiting for handshake confirmation: ${e}`);\n        }\n    }\n    log.info(`Waiting for ${codec} peer`);\n    // else we'll just wait for the next peer to connect\n    await new Promise((resolve)=>{\n        const cb = (evt)=>{\n            if (evt.detail?.protocols?.includes(codec)) {\n                if (metadataService) {\n                    metadataService.confirmOrAttemptHandshake(evt.detail.peerId).then(()=>{\n                        protocol.removeLibp2pEventListener(\"peer:identify\", cb);\n                        resolve();\n                    }).catch((e)=>{\n                        if (e.code === \"ERR_CONNECTION_BEING_CLOSED\") log.error(`Connection with the peer was closed and possibly because it's on a different shard. Error: ${e}`);\n                        log.error(`Error waiting for handshake confirmation: ${e}`);\n                    });\n                } else {\n                    protocol.removeLibp2pEventListener(\"peer:identify\", cb);\n                    resolve();\n                }\n            }\n        };\n        protocol.addLibp2pEventListener(\"peer:identify\", cb);\n    });\n}\n/**\n * Wait for at least one peer with the given protocol to be connected and in the gossipsub\n * mesh for all pubsubTopics.\n */ async function waitForGossipSubPeerInMesh(waku) {\n    let peers = waku.getMeshPeers();\n    const pubsubTopics = waku.pubsubTopics;\n    for (const topic of pubsubTopics){\n        while(peers.length == 0){\n            await (0,p_event__WEBPACK_IMPORTED_MODULE_2__.pEvent)(waku.gossipSub, \"gossipsub:heartbeat\");\n            peers = waku.getMeshPeers(topic);\n        }\n    }\n}\nconst awaitTimeout = (ms, rejectReason)=>new Promise((_resolve, reject)=>setTimeout(()=>reject(rejectReason), ms));\nasync function rejectOnTimeout(promise, timeoutMs, rejectReason) {\n    await Promise.race([\n        promise,\n        awaitTimeout(timeoutMs, rejectReason)\n    ]);\n}\nfunction getEnabledProtocols(waku) {\n    const protocols = [];\n    if (waku.relay) {\n        protocols.push(_waku_interfaces__WEBPACK_IMPORTED_MODULE_0__.Protocols.Relay);\n    }\n    if (waku.filter) {\n        protocols.push(_waku_interfaces__WEBPACK_IMPORTED_MODULE_0__.Protocols.Filter);\n    }\n    if (waku.store) {\n        protocols.push(_waku_interfaces__WEBPACK_IMPORTED_MODULE_0__.Protocols.Store);\n    }\n    if (waku.lightPush) {\n        protocols.push(_waku_interfaces__WEBPACK_IMPORTED_MODULE_0__.Protocols.LightPush);\n    }\n    return protocols;\n} //# sourceMappingURL=wait_for_remote_peer.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/sdk/node_modules/@waku/core/dist/lib/wait_for_remote_peer.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/sdk/node_modules/@waku/interfaces/dist/connection_manager.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@waku/sdk/node_modules/@waku/interfaces/dist/connection_manager.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   EConnectionStateEvents: () => (/* binding */ EConnectionStateEvents),\n/* harmony export */   EPeersByDiscoveryEvents: () => (/* binding */ EPeersByDiscoveryEvents),\n/* harmony export */   Tags: () => (/* binding */ Tags)\n/* harmony export */ });\nvar Tags;\n(function(Tags) {\n    Tags[\"BOOTSTRAP\"] = \"bootstrap\";\n    Tags[\"PEER_EXCHANGE\"] = \"peer-exchange\";\n    Tags[\"LOCAL\"] = \"local-peer-cache\";\n})(Tags || (Tags = {}));\nvar EPeersByDiscoveryEvents;\n(function(EPeersByDiscoveryEvents) {\n    EPeersByDiscoveryEvents[\"PEER_DISCOVERY_BOOTSTRAP\"] = \"peer:discovery:bootstrap\";\n    EPeersByDiscoveryEvents[\"PEER_DISCOVERY_PEER_EXCHANGE\"] = \"peer:discovery:peer-exchange\";\n    EPeersByDiscoveryEvents[\"PEER_CONNECT_BOOTSTRAP\"] = \"peer:connected:bootstrap\";\n    EPeersByDiscoveryEvents[\"PEER_CONNECT_PEER_EXCHANGE\"] = \"peer:connected:peer-exchange\";\n})(EPeersByDiscoveryEvents || (EPeersByDiscoveryEvents = {}));\nvar EConnectionStateEvents;\n(function(EConnectionStateEvents) {\n    EConnectionStateEvents[\"CONNECTION_STATUS\"] = \"waku:connection\";\n})(EConnectionStateEvents || (EConnectionStateEvents = {})); //# sourceMappingURL=connection_manager.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdha3Uvc2RrL25vZGVfbW9kdWxlcy9Ad2FrdS9pbnRlcmZhY2VzL2Rpc3QvY29ubmVjdGlvbl9tYW5hZ2VyLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFPLElBQUlBLEtBQUs7QUFDZixVQUFVQSxJQUFJO0lBQ1hBLElBQUksQ0FBQyxZQUFZLEdBQUc7SUFDcEJBLElBQUksQ0FBQyxnQkFBZ0IsR0FBRztJQUN4QkEsSUFBSSxDQUFDLFFBQVEsR0FBRztBQUNwQixHQUFHQSxRQUFTQSxDQUFBQSxPQUFPLENBQUM7QUFDYixJQUFJQyx3QkFBd0I7QUFDbEMsVUFBVUEsdUJBQXVCO0lBQzlCQSx1QkFBdUIsQ0FBQywyQkFBMkIsR0FBRztJQUN0REEsdUJBQXVCLENBQUMsK0JBQStCLEdBQUc7SUFDMURBLHVCQUF1QixDQUFDLHlCQUF5QixHQUFHO0lBQ3BEQSx1QkFBdUIsQ0FBQyw2QkFBNkIsR0FBRztBQUM1RCxHQUFHQSwyQkFBNEJBLENBQUFBLDBCQUEwQixDQUFDO0FBQ25ELElBQUlDLHVCQUF1QjtBQUNqQyxVQUFVQSxzQkFBc0I7SUFDN0JBLHNCQUFzQixDQUFDLG9CQUFvQixHQUFHO0FBQ2xELEdBQUdBLDBCQUEyQkEsQ0FBQUEseUJBQXlCLENBQUMsS0FDeEQsOENBQThDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZmx1c2gtbm90ZXMvLi9ub2RlX21vZHVsZXMvQHdha3Uvc2RrL25vZGVfbW9kdWxlcy9Ad2FrdS9pbnRlcmZhY2VzL2Rpc3QvY29ubmVjdGlvbl9tYW5hZ2VyLmpzP2VmNjQiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHZhciBUYWdzO1xuKGZ1bmN0aW9uIChUYWdzKSB7XG4gICAgVGFnc1tcIkJPT1RTVFJBUFwiXSA9IFwiYm9vdHN0cmFwXCI7XG4gICAgVGFnc1tcIlBFRVJfRVhDSEFOR0VcIl0gPSBcInBlZXItZXhjaGFuZ2VcIjtcbiAgICBUYWdzW1wiTE9DQUxcIl0gPSBcImxvY2FsLXBlZXItY2FjaGVcIjtcbn0pKFRhZ3MgfHwgKFRhZ3MgPSB7fSkpO1xuZXhwb3J0IHZhciBFUGVlcnNCeURpc2NvdmVyeUV2ZW50cztcbihmdW5jdGlvbiAoRVBlZXJzQnlEaXNjb3ZlcnlFdmVudHMpIHtcbiAgICBFUGVlcnNCeURpc2NvdmVyeUV2ZW50c1tcIlBFRVJfRElTQ09WRVJZX0JPT1RTVFJBUFwiXSA9IFwicGVlcjpkaXNjb3Zlcnk6Ym9vdHN0cmFwXCI7XG4gICAgRVBlZXJzQnlEaXNjb3ZlcnlFdmVudHNbXCJQRUVSX0RJU0NPVkVSWV9QRUVSX0VYQ0hBTkdFXCJdID0gXCJwZWVyOmRpc2NvdmVyeTpwZWVyLWV4Y2hhbmdlXCI7XG4gICAgRVBlZXJzQnlEaXNjb3ZlcnlFdmVudHNbXCJQRUVSX0NPTk5FQ1RfQk9PVFNUUkFQXCJdID0gXCJwZWVyOmNvbm5lY3RlZDpib290c3RyYXBcIjtcbiAgICBFUGVlcnNCeURpc2NvdmVyeUV2ZW50c1tcIlBFRVJfQ09OTkVDVF9QRUVSX0VYQ0hBTkdFXCJdID0gXCJwZWVyOmNvbm5lY3RlZDpwZWVyLWV4Y2hhbmdlXCI7XG59KShFUGVlcnNCeURpc2NvdmVyeUV2ZW50cyB8fCAoRVBlZXJzQnlEaXNjb3ZlcnlFdmVudHMgPSB7fSkpO1xuZXhwb3J0IHZhciBFQ29ubmVjdGlvblN0YXRlRXZlbnRzO1xuKGZ1bmN0aW9uIChFQ29ubmVjdGlvblN0YXRlRXZlbnRzKSB7XG4gICAgRUNvbm5lY3Rpb25TdGF0ZUV2ZW50c1tcIkNPTk5FQ1RJT05fU1RBVFVTXCJdID0gXCJ3YWt1OmNvbm5lY3Rpb25cIjtcbn0pKEVDb25uZWN0aW9uU3RhdGVFdmVudHMgfHwgKEVDb25uZWN0aW9uU3RhdGVFdmVudHMgPSB7fSkpO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y29ubmVjdGlvbl9tYW5hZ2VyLmpzLm1hcCJdLCJuYW1lcyI6WyJUYWdzIiwiRVBlZXJzQnlEaXNjb3ZlcnlFdmVudHMiLCJFQ29ubmVjdGlvblN0YXRlRXZlbnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/sdk/node_modules/@waku/interfaces/dist/connection_manager.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/sdk/node_modules/@waku/interfaces/dist/constants.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@waku/sdk/node_modules/@waku/interfaces/dist/constants.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DEFAULT_CLUSTER_ID: () => (/* binding */ DEFAULT_CLUSTER_ID),\n/* harmony export */   DefaultPubsubTopic: () => (/* binding */ DefaultPubsubTopic)\n/* harmony export */ });\n/**\n * DefaultPubsubTopic is the default gossipsub topic to use for Waku.\n */ const DefaultPubsubTopic = \"/waku/2/default-waku/proto\";\n/**\n * The default cluster ID for The Waku Network\n */ const DEFAULT_CLUSTER_ID = 1; //# sourceMappingURL=constants.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdha3Uvc2RrL25vZGVfbW9kdWxlcy9Ad2FrdS9pbnRlcmZhY2VzL2Rpc3QvY29uc3RhbnRzLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7O0NBRUMsR0FDTSxNQUFNQSxxQkFBcUIsNkJBQTZCO0FBQy9EOztDQUVDLEdBQ00sTUFBTUMscUJBQXFCLEVBQUUsQ0FDcEMscUNBQXFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZmx1c2gtbm90ZXMvLi9ub2RlX21vZHVsZXMvQHdha3Uvc2RrL25vZGVfbW9kdWxlcy9Ad2FrdS9pbnRlcmZhY2VzL2Rpc3QvY29uc3RhbnRzLmpzPzUwNDQiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBEZWZhdWx0UHVic3ViVG9waWMgaXMgdGhlIGRlZmF1bHQgZ29zc2lwc3ViIHRvcGljIHRvIHVzZSBmb3IgV2FrdS5cbiAqL1xuZXhwb3J0IGNvbnN0IERlZmF1bHRQdWJzdWJUb3BpYyA9IFwiL3dha3UvMi9kZWZhdWx0LXdha3UvcHJvdG9cIjtcbi8qKlxuICogVGhlIGRlZmF1bHQgY2x1c3RlciBJRCBmb3IgVGhlIFdha3UgTmV0d29ya1xuICovXG5leHBvcnQgY29uc3QgREVGQVVMVF9DTFVTVEVSX0lEID0gMTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNvbnN0YW50cy5qcy5tYXAiXSwibmFtZXMiOlsiRGVmYXVsdFB1YnN1YlRvcGljIiwiREVGQVVMVF9DTFVTVEVSX0lEIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/sdk/node_modules/@waku/interfaces/dist/constants.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/sdk/node_modules/@waku/interfaces/dist/dns_discovery.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@waku/sdk/node_modules/@waku/interfaces/dist/dns_discovery.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n //# sourceMappingURL=dns_discovery.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdha3Uvc2RrL25vZGVfbW9kdWxlcy9Ad2FrdS9pbnRlcmZhY2VzL2Rpc3QvZG5zX2Rpc2NvdmVyeS5qcyIsIm1hcHBpbmdzIjoiO0FBQVUsQ0FDVix5Q0FBeUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mbHVzaC1ub3Rlcy8uL25vZGVfbW9kdWxlcy9Ad2FrdS9zZGsvbm9kZV9tb2R1bGVzL0B3YWt1L2ludGVyZmFjZXMvZGlzdC9kbnNfZGlzY292ZXJ5LmpzP2IyYmEiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHt9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZG5zX2Rpc2NvdmVyeS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/sdk/node_modules/@waku/interfaces/dist/dns_discovery.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/sdk/node_modules/@waku/interfaces/dist/enr.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@waku/sdk/node_modules/@waku/interfaces/dist/enr.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n //# sourceMappingURL=enr.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdha3Uvc2RrL25vZGVfbW9kdWxlcy9Ad2FrdS9pbnRlcmZhY2VzL2Rpc3QvZW5yLmpzIiwibWFwcGluZ3MiOiI7QUFBVSxDQUNWLCtCQUErQiIsInNvdXJjZXMiOlsid2VicGFjazovL2ZsdXNoLW5vdGVzLy4vbm9kZV9tb2R1bGVzL0B3YWt1L3Nkay9ub2RlX21vZHVsZXMvQHdha3UvaW50ZXJmYWNlcy9kaXN0L2Vuci5qcz81OWMyIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCB7fTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWVuci5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/sdk/node_modules/@waku/interfaces/dist/enr.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/sdk/node_modules/@waku/interfaces/dist/filter.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@waku/sdk/node_modules/@waku/interfaces/dist/filter.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n //# sourceMappingURL=filter.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdha3Uvc2RrL25vZGVfbW9kdWxlcy9Ad2FrdS9pbnRlcmZhY2VzL2Rpc3QvZmlsdGVyLmpzIiwibWFwcGluZ3MiOiI7QUFBVSxDQUNWLGtDQUFrQyIsInNvdXJjZXMiOlsid2VicGFjazovL2ZsdXNoLW5vdGVzLy4vbm9kZV9tb2R1bGVzL0B3YWt1L3Nkay9ub2RlX21vZHVsZXMvQHdha3UvaW50ZXJmYWNlcy9kaXN0L2ZpbHRlci5qcz9jYWE2Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCB7fTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWZpbHRlci5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/sdk/node_modules/@waku/interfaces/dist/filter.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/sdk/node_modules/@waku/interfaces/dist/index.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@waku/sdk/node_modules/@waku/interfaces/dist/index.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DEFAULT_CLUSTER_ID: () => (/* reexport safe */ _constants_js__WEBPACK_IMPORTED_MODULE_17__.DEFAULT_CLUSTER_ID),\n/* harmony export */   DefaultPubsubTopic: () => (/* reexport safe */ _constants_js__WEBPACK_IMPORTED_MODULE_17__.DefaultPubsubTopic),\n/* harmony export */   EConnectionStateEvents: () => (/* reexport safe */ _connection_manager_js__WEBPACK_IMPORTED_MODULE_9__.EConnectionStateEvents),\n/* harmony export */   EPeersByDiscoveryEvents: () => (/* reexport safe */ _connection_manager_js__WEBPACK_IMPORTED_MODULE_9__.EPeersByDiscoveryEvents),\n/* harmony export */   PageDirection: () => (/* reexport safe */ _store_js__WEBPACK_IMPORTED_MODULE_7__.PageDirection),\n/* harmony export */   ProtocolError: () => (/* reexport safe */ _protocols_js__WEBPACK_IMPORTED_MODULE_5__.ProtocolError),\n/* harmony export */   Protocols: () => (/* reexport safe */ _protocols_js__WEBPACK_IMPORTED_MODULE_5__.Protocols),\n/* harmony export */   Tags: () => (/* reexport safe */ _connection_manager_js__WEBPACK_IMPORTED_MODULE_9__.Tags)\n/* harmony export */ });\n/* harmony import */ var _enr_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./enr.js */ \"(ssr)/./node_modules/@waku/sdk/node_modules/@waku/interfaces/dist/enr.js\");\n/* harmony import */ var _filter_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./filter.js */ \"(ssr)/./node_modules/@waku/sdk/node_modules/@waku/interfaces/dist/filter.js\");\n/* harmony import */ var _light_push_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./light_push.js */ \"(ssr)/./node_modules/@waku/sdk/node_modules/@waku/interfaces/dist/light_push.js\");\n/* harmony import */ var _message_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./message.js */ \"(ssr)/./node_modules/@waku/sdk/node_modules/@waku/interfaces/dist/message.js\");\n/* harmony import */ var _peer_exchange_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./peer_exchange.js */ \"(ssr)/./node_modules/@waku/sdk/node_modules/@waku/interfaces/dist/peer_exchange.js\");\n/* harmony import */ var _protocols_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./protocols.js */ \"(ssr)/./node_modules/@waku/sdk/node_modules/@waku/interfaces/dist/protocols.js\");\n/* harmony import */ var _relay_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./relay.js */ \"(ssr)/./node_modules/@waku/sdk/node_modules/@waku/interfaces/dist/relay.js\");\n/* harmony import */ var _store_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./store.js */ \"(ssr)/./node_modules/@waku/sdk/node_modules/@waku/interfaces/dist/store.js\");\n/* harmony import */ var _waku_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./waku.js */ \"(ssr)/./node_modules/@waku/sdk/node_modules/@waku/interfaces/dist/waku.js\");\n/* harmony import */ var _connection_manager_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./connection_manager.js */ \"(ssr)/./node_modules/@waku/sdk/node_modules/@waku/interfaces/dist/connection_manager.js\");\n/* harmony import */ var _sender_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./sender.js */ \"(ssr)/./node_modules/@waku/sdk/node_modules/@waku/interfaces/dist/sender.js\");\n/* harmony import */ var _receiver_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./receiver.js */ \"(ssr)/./node_modules/@waku/sdk/node_modules/@waku/interfaces/dist/receiver.js\");\n/* harmony import */ var _misc_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./misc.js */ \"(ssr)/./node_modules/@waku/sdk/node_modules/@waku/interfaces/dist/misc.js\");\n/* harmony import */ var _libp2p_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./libp2p.js */ \"(ssr)/./node_modules/@waku/sdk/node_modules/@waku/interfaces/dist/libp2p.js\");\n/* harmony import */ var _keep_alive_manager_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./keep_alive_manager.js */ \"(ssr)/./node_modules/@waku/sdk/node_modules/@waku/interfaces/dist/keep_alive_manager.js\");\n/* harmony import */ var _dns_discovery_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./dns_discovery.js */ \"(ssr)/./node_modules/@waku/sdk/node_modules/@waku/interfaces/dist/dns_discovery.js\");\n/* harmony import */ var _metadata_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./metadata.js */ \"(ssr)/./node_modules/@waku/sdk/node_modules/@waku/interfaces/dist/metadata.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./constants.js */ \"(ssr)/./node_modules/@waku/sdk/node_modules/@waku/interfaces/dist/constants.js\");\n/* harmony import */ var _local_storage_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./local_storage.js */ \"(ssr)/./node_modules/@waku/sdk/node_modules/@waku/interfaces/dist/local_storage.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdha3Uvc2RrL25vZGVfbW9kdWxlcy9Ad2FrdS9pbnRlcmZhY2VzL2Rpc3QvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQXlCO0FBQ0c7QUFDSTtBQUNIO0FBQ007QUFDSjtBQUNKO0FBQ0E7QUFDRDtBQUNjO0FBQ1o7QUFDRTtBQUNKO0FBQ0U7QUFDWTtBQUNMO0FBQ0w7QUFDQztBQUNJLENBQ25DLGlDQUFpQyIsInNvdXJjZXMiOlsid2VicGFjazovL2ZsdXNoLW5vdGVzLy4vbm9kZV9tb2R1bGVzL0B3YWt1L3Nkay9ub2RlX21vZHVsZXMvQHdha3UvaW50ZXJmYWNlcy9kaXN0L2luZGV4LmpzPzU5YjAiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0ICogZnJvbSBcIi4vZW5yLmpzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9maWx0ZXIuanNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL2xpZ2h0X3B1c2guanNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL21lc3NhZ2UuanNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL3BlZXJfZXhjaGFuZ2UuanNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL3Byb3RvY29scy5qc1wiO1xuZXhwb3J0ICogZnJvbSBcIi4vcmVsYXkuanNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL3N0b3JlLmpzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi93YWt1LmpzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9jb25uZWN0aW9uX21hbmFnZXIuanNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL3NlbmRlci5qc1wiO1xuZXhwb3J0ICogZnJvbSBcIi4vcmVjZWl2ZXIuanNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL21pc2MuanNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL2xpYnAycC5qc1wiO1xuZXhwb3J0ICogZnJvbSBcIi4va2VlcF9hbGl2ZV9tYW5hZ2VyLmpzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9kbnNfZGlzY292ZXJ5LmpzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9tZXRhZGF0YS5qc1wiO1xuZXhwb3J0ICogZnJvbSBcIi4vY29uc3RhbnRzLmpzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9sb2NhbF9zdG9yYWdlLmpzXCI7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/sdk/node_modules/@waku/interfaces/dist/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/sdk/node_modules/@waku/interfaces/dist/keep_alive_manager.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@waku/sdk/node_modules/@waku/interfaces/dist/keep_alive_manager.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n //# sourceMappingURL=keep_alive_manager.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdha3Uvc2RrL25vZGVfbW9kdWxlcy9Ad2FrdS9pbnRlcmZhY2VzL2Rpc3Qva2VlcF9hbGl2ZV9tYW5hZ2VyLmpzIiwibWFwcGluZ3MiOiI7QUFBVSxDQUNWLDhDQUE4QyIsInNvdXJjZXMiOlsid2VicGFjazovL2ZsdXNoLW5vdGVzLy4vbm9kZV9tb2R1bGVzL0B3YWt1L3Nkay9ub2RlX21vZHVsZXMvQHdha3UvaW50ZXJmYWNlcy9kaXN0L2tlZXBfYWxpdmVfbWFuYWdlci5qcz9hMGJkIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCB7fTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWtlZXBfYWxpdmVfbWFuYWdlci5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/sdk/node_modules/@waku/interfaces/dist/keep_alive_manager.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/sdk/node_modules/@waku/interfaces/dist/libp2p.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@waku/sdk/node_modules/@waku/interfaces/dist/libp2p.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n //# sourceMappingURL=libp2p.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdha3Uvc2RrL25vZGVfbW9kdWxlcy9Ad2FrdS9pbnRlcmZhY2VzL2Rpc3QvbGlicDJwLmpzIiwibWFwcGluZ3MiOiI7QUFBVSxDQUNWLGtDQUFrQyIsInNvdXJjZXMiOlsid2VicGFjazovL2ZsdXNoLW5vdGVzLy4vbm9kZV9tb2R1bGVzL0B3YWt1L3Nkay9ub2RlX21vZHVsZXMvQHdha3UvaW50ZXJmYWNlcy9kaXN0L2xpYnAycC5qcz85MDFiIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCB7fTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWxpYnAycC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/sdk/node_modules/@waku/interfaces/dist/libp2p.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/sdk/node_modules/@waku/interfaces/dist/light_push.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@waku/sdk/node_modules/@waku/interfaces/dist/light_push.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n //# sourceMappingURL=light_push.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdha3Uvc2RrL25vZGVfbW9kdWxlcy9Ad2FrdS9pbnRlcmZhY2VzL2Rpc3QvbGlnaHRfcHVzaC5qcyIsIm1hcHBpbmdzIjoiO0FBQVUsQ0FDVixzQ0FBc0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mbHVzaC1ub3Rlcy8uL25vZGVfbW9kdWxlcy9Ad2FrdS9zZGsvbm9kZV9tb2R1bGVzL0B3YWt1L2ludGVyZmFjZXMvZGlzdC9saWdodF9wdXNoLmpzP2UwMTIiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHt9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bGlnaHRfcHVzaC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/sdk/node_modules/@waku/interfaces/dist/light_push.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/sdk/node_modules/@waku/interfaces/dist/local_storage.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@waku/sdk/node_modules/@waku/interfaces/dist/local_storage.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n //# sourceMappingURL=local_storage.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdha3Uvc2RrL25vZGVfbW9kdWxlcy9Ad2FrdS9pbnRlcmZhY2VzL2Rpc3QvbG9jYWxfc3RvcmFnZS5qcyIsIm1hcHBpbmdzIjoiO0FBQVUsQ0FDVix5Q0FBeUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mbHVzaC1ub3Rlcy8uL25vZGVfbW9kdWxlcy9Ad2FrdS9zZGsvbm9kZV9tb2R1bGVzL0B3YWt1L2ludGVyZmFjZXMvZGlzdC9sb2NhbF9zdG9yYWdlLmpzPzE2NmUiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHt9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bG9jYWxfc3RvcmFnZS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/sdk/node_modules/@waku/interfaces/dist/local_storage.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/sdk/node_modules/@waku/interfaces/dist/message.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@waku/sdk/node_modules/@waku/interfaces/dist/message.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n //# sourceMappingURL=message.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdha3Uvc2RrL25vZGVfbW9kdWxlcy9Ad2FrdS9pbnRlcmZhY2VzL2Rpc3QvbWVzc2FnZS5qcyIsIm1hcHBpbmdzIjoiO0FBQVUsQ0FDVixtQ0FBbUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mbHVzaC1ub3Rlcy8uL25vZGVfbW9kdWxlcy9Ad2FrdS9zZGsvbm9kZV9tb2R1bGVzL0B3YWt1L2ludGVyZmFjZXMvZGlzdC9tZXNzYWdlLmpzPzgzNzgiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHt9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bWVzc2FnZS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/sdk/node_modules/@waku/interfaces/dist/message.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/sdk/node_modules/@waku/interfaces/dist/metadata.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@waku/sdk/node_modules/@waku/interfaces/dist/metadata.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n //# sourceMappingURL=metadata.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdha3Uvc2RrL25vZGVfbW9kdWxlcy9Ad2FrdS9pbnRlcmZhY2VzL2Rpc3QvbWV0YWRhdGEuanMiLCJtYXBwaW5ncyI6IjtBQUFVLENBQ1Ysb0NBQW9DIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZmx1c2gtbm90ZXMvLi9ub2RlX21vZHVsZXMvQHdha3Uvc2RrL25vZGVfbW9kdWxlcy9Ad2FrdS9pbnRlcmZhY2VzL2Rpc3QvbWV0YWRhdGEuanM/NGU1MSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQge307XG4vLyMgc291cmNlTWFwcGluZ1VSTD1tZXRhZGF0YS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/sdk/node_modules/@waku/interfaces/dist/metadata.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/sdk/node_modules/@waku/interfaces/dist/misc.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@waku/sdk/node_modules/@waku/interfaces/dist/misc.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n //# sourceMappingURL=misc.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdha3Uvc2RrL25vZGVfbW9kdWxlcy9Ad2FrdS9pbnRlcmZhY2VzL2Rpc3QvbWlzYy5qcyIsIm1hcHBpbmdzIjoiO0FBQVUsQ0FDVixnQ0FBZ0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mbHVzaC1ub3Rlcy8uL25vZGVfbW9kdWxlcy9Ad2FrdS9zZGsvbm9kZV9tb2R1bGVzL0B3YWt1L2ludGVyZmFjZXMvZGlzdC9taXNjLmpzPzYwOTkiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHt9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bWlzYy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/sdk/node_modules/@waku/interfaces/dist/misc.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/sdk/node_modules/@waku/interfaces/dist/peer_exchange.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@waku/sdk/node_modules/@waku/interfaces/dist/peer_exchange.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n //# sourceMappingURL=peer_exchange.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdha3Uvc2RrL25vZGVfbW9kdWxlcy9Ad2FrdS9pbnRlcmZhY2VzL2Rpc3QvcGVlcl9leGNoYW5nZS5qcyIsIm1hcHBpbmdzIjoiO0FBQVUsQ0FDVix5Q0FBeUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mbHVzaC1ub3Rlcy8uL25vZGVfbW9kdWxlcy9Ad2FrdS9zZGsvbm9kZV9tb2R1bGVzL0B3YWt1L2ludGVyZmFjZXMvZGlzdC9wZWVyX2V4Y2hhbmdlLmpzPzMwYmMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHt9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cGVlcl9leGNoYW5nZS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/sdk/node_modules/@waku/interfaces/dist/peer_exchange.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/sdk/node_modules/@waku/interfaces/dist/protocols.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@waku/sdk/node_modules/@waku/interfaces/dist/protocols.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ProtocolError: () => (/* binding */ ProtocolError),\n/* harmony export */   Protocols: () => (/* binding */ Protocols)\n/* harmony export */ });\nvar Protocols;\n(function(Protocols) {\n    Protocols[\"Relay\"] = \"relay\";\n    Protocols[\"Store\"] = \"store\";\n    Protocols[\"LightPush\"] = \"lightpush\";\n    Protocols[\"Filter\"] = \"filter\";\n})(Protocols || (Protocols = {}));\nvar ProtocolError;\n(function(ProtocolError) {\n    /** Could not determine the origin of the fault. Best to check connectivity and try again */ ProtocolError[\"GENERIC_FAIL\"] = \"Generic error\";\n    /**\n     * Failure to protobuf encode the message. This is not recoverable and needs\n     * further investigation.\n     */ ProtocolError[\"ENCODE_FAILED\"] = \"Failed to encode\";\n    /**\n     * Failure to protobuf decode the message. May be due to a remote peer issue,\n     * ensuring that messages are sent via several peer enable mitigation of this error.\n     */ ProtocolError[\"DECODE_FAILED\"] = \"Failed to decode\";\n    /**\n     * The message payload is empty, making the message invalid. Ensure that a non-empty\n     * payload is set on the outgoing message.\n     */ ProtocolError[\"EMPTY_PAYLOAD\"] = \"Payload is empty\";\n    /**\n     * The message size is above the maximum message size allowed on the Waku Network.\n     * Compressing the message or using an alternative strategy for large messages is recommended.\n     */ ProtocolError[\"SIZE_TOO_BIG\"] = \"Size is too big\";\n    /**\n     * The PubsubTopic passed to the send function is not configured on the Waku node.\n     * Please ensure that the PubsubTopic is used when initializing the Waku node.\n     */ ProtocolError[\"TOPIC_NOT_CONFIGURED\"] = \"Topic not configured\";\n    /**\n     * Failure to find a peer with suitable protocols. This may due to a connection issue.\n     * Mitigation can be: retrying after a given time period, display connectivity issue\n     * to user or listening for `peer:connected:bootstrap` or `peer:connected:peer-exchange`\n     * on the connection manager before retrying.\n     */ ProtocolError[\"NO_PEER_AVAILABLE\"] = \"No peer available\";\n    /**\n     * The remote peer did not behave as expected. Mitigation for `NO_PEER_AVAILABLE`\n     * or `DECODE_FAILED` can be used.\n     */ ProtocolError[\"REMOTE_PEER_FAULT\"] = \"Remote peer fault\";\n    /**\n     * The remote peer rejected the message. Information provided by the remote peer\n     * is logged. Review message validity, or mitigation for `NO_PEER_AVAILABLE`\n     * or `DECODE_FAILED` can be used.\n     */ ProtocolError[\"REMOTE_PEER_REJECTED\"] = \"Remote peer rejected\";\n    /**\n     * The protocol request timed out without a response. This may be due to a connection issue.\n     * Mitigation can be: retrying after a given time period\n     */ ProtocolError[\"REQUEST_TIMEOUT\"] = \"Request timeout\";\n})(ProtocolError || (ProtocolError = {})); //# sourceMappingURL=protocols.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdha3Uvc2RrL25vZGVfbW9kdWxlcy9Ad2FrdS9pbnRlcmZhY2VzL2Rpc3QvcHJvdG9jb2xzLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQU8sSUFBSUEsVUFBVTtBQUNwQixVQUFVQSxTQUFTO0lBQ2hCQSxTQUFTLENBQUMsUUFBUSxHQUFHO0lBQ3JCQSxTQUFTLENBQUMsUUFBUSxHQUFHO0lBQ3JCQSxTQUFTLENBQUMsWUFBWSxHQUFHO0lBQ3pCQSxTQUFTLENBQUMsU0FBUyxHQUFHO0FBQzFCLEdBQUdBLGFBQWNBLENBQUFBLFlBQVksQ0FBQztBQUN2QixJQUFJQyxjQUFjO0FBQ3hCLFVBQVVBLGFBQWE7SUFDcEIsMEZBQTBGLEdBQzFGQSxhQUFhLENBQUMsZUFBZSxHQUFHO0lBQ2hDOzs7S0FHQyxHQUNEQSxhQUFhLENBQUMsZ0JBQWdCLEdBQUc7SUFDakM7OztLQUdDLEdBQ0RBLGFBQWEsQ0FBQyxnQkFBZ0IsR0FBRztJQUNqQzs7O0tBR0MsR0FDREEsYUFBYSxDQUFDLGdCQUFnQixHQUFHO0lBQ2pDOzs7S0FHQyxHQUNEQSxhQUFhLENBQUMsZUFBZSxHQUFHO0lBQ2hDOzs7S0FHQyxHQUNEQSxhQUFhLENBQUMsdUJBQXVCLEdBQUc7SUFDeEM7Ozs7O0tBS0MsR0FDREEsYUFBYSxDQUFDLG9CQUFvQixHQUFHO0lBQ3JDOzs7S0FHQyxHQUNEQSxhQUFhLENBQUMsb0JBQW9CLEdBQUc7SUFDckM7Ozs7S0FJQyxHQUNEQSxhQUFhLENBQUMsdUJBQXVCLEdBQUc7SUFDeEM7OztLQUdDLEdBQ0RBLGFBQWEsQ0FBQyxrQkFBa0IsR0FBRztBQUN2QyxHQUFHQSxpQkFBa0JBLENBQUFBLGdCQUFnQixDQUFDLEtBQ3RDLHFDQUFxQyIsInNvdXJjZXMiOlsid2VicGFjazovL2ZsdXNoLW5vdGVzLy4vbm9kZV9tb2R1bGVzL0B3YWt1L3Nkay9ub2RlX21vZHVsZXMvQHdha3UvaW50ZXJmYWNlcy9kaXN0L3Byb3RvY29scy5qcz8yZTI0Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCB2YXIgUHJvdG9jb2xzO1xuKGZ1bmN0aW9uIChQcm90b2NvbHMpIHtcbiAgICBQcm90b2NvbHNbXCJSZWxheVwiXSA9IFwicmVsYXlcIjtcbiAgICBQcm90b2NvbHNbXCJTdG9yZVwiXSA9IFwic3RvcmVcIjtcbiAgICBQcm90b2NvbHNbXCJMaWdodFB1c2hcIl0gPSBcImxpZ2h0cHVzaFwiO1xuICAgIFByb3RvY29sc1tcIkZpbHRlclwiXSA9IFwiZmlsdGVyXCI7XG59KShQcm90b2NvbHMgfHwgKFByb3RvY29scyA9IHt9KSk7XG5leHBvcnQgdmFyIFByb3RvY29sRXJyb3I7XG4oZnVuY3Rpb24gKFByb3RvY29sRXJyb3IpIHtcbiAgICAvKiogQ291bGQgbm90IGRldGVybWluZSB0aGUgb3JpZ2luIG9mIHRoZSBmYXVsdC4gQmVzdCB0byBjaGVjayBjb25uZWN0aXZpdHkgYW5kIHRyeSBhZ2FpbiAqL1xuICAgIFByb3RvY29sRXJyb3JbXCJHRU5FUklDX0ZBSUxcIl0gPSBcIkdlbmVyaWMgZXJyb3JcIjtcbiAgICAvKipcbiAgICAgKiBGYWlsdXJlIHRvIHByb3RvYnVmIGVuY29kZSB0aGUgbWVzc2FnZS4gVGhpcyBpcyBub3QgcmVjb3ZlcmFibGUgYW5kIG5lZWRzXG4gICAgICogZnVydGhlciBpbnZlc3RpZ2F0aW9uLlxuICAgICAqL1xuICAgIFByb3RvY29sRXJyb3JbXCJFTkNPREVfRkFJTEVEXCJdID0gXCJGYWlsZWQgdG8gZW5jb2RlXCI7XG4gICAgLyoqXG4gICAgICogRmFpbHVyZSB0byBwcm90b2J1ZiBkZWNvZGUgdGhlIG1lc3NhZ2UuIE1heSBiZSBkdWUgdG8gYSByZW1vdGUgcGVlciBpc3N1ZSxcbiAgICAgKiBlbnN1cmluZyB0aGF0IG1lc3NhZ2VzIGFyZSBzZW50IHZpYSBzZXZlcmFsIHBlZXIgZW5hYmxlIG1pdGlnYXRpb24gb2YgdGhpcyBlcnJvci5cbiAgICAgKi9cbiAgICBQcm90b2NvbEVycm9yW1wiREVDT0RFX0ZBSUxFRFwiXSA9IFwiRmFpbGVkIHRvIGRlY29kZVwiO1xuICAgIC8qKlxuICAgICAqIFRoZSBtZXNzYWdlIHBheWxvYWQgaXMgZW1wdHksIG1ha2luZyB0aGUgbWVzc2FnZSBpbnZhbGlkLiBFbnN1cmUgdGhhdCBhIG5vbi1lbXB0eVxuICAgICAqIHBheWxvYWQgaXMgc2V0IG9uIHRoZSBvdXRnb2luZyBtZXNzYWdlLlxuICAgICAqL1xuICAgIFByb3RvY29sRXJyb3JbXCJFTVBUWV9QQVlMT0FEXCJdID0gXCJQYXlsb2FkIGlzIGVtcHR5XCI7XG4gICAgLyoqXG4gICAgICogVGhlIG1lc3NhZ2Ugc2l6ZSBpcyBhYm92ZSB0aGUgbWF4aW11bSBtZXNzYWdlIHNpemUgYWxsb3dlZCBvbiB0aGUgV2FrdSBOZXR3b3JrLlxuICAgICAqIENvbXByZXNzaW5nIHRoZSBtZXNzYWdlIG9yIHVzaW5nIGFuIGFsdGVybmF0aXZlIHN0cmF0ZWd5IGZvciBsYXJnZSBtZXNzYWdlcyBpcyByZWNvbW1lbmRlZC5cbiAgICAgKi9cbiAgICBQcm90b2NvbEVycm9yW1wiU0laRV9UT09fQklHXCJdID0gXCJTaXplIGlzIHRvbyBiaWdcIjtcbiAgICAvKipcbiAgICAgKiBUaGUgUHVic3ViVG9waWMgcGFzc2VkIHRvIHRoZSBzZW5kIGZ1bmN0aW9uIGlzIG5vdCBjb25maWd1cmVkIG9uIHRoZSBXYWt1IG5vZGUuXG4gICAgICogUGxlYXNlIGVuc3VyZSB0aGF0IHRoZSBQdWJzdWJUb3BpYyBpcyB1c2VkIHdoZW4gaW5pdGlhbGl6aW5nIHRoZSBXYWt1IG5vZGUuXG4gICAgICovXG4gICAgUHJvdG9jb2xFcnJvcltcIlRPUElDX05PVF9DT05GSUdVUkVEXCJdID0gXCJUb3BpYyBub3QgY29uZmlndXJlZFwiO1xuICAgIC8qKlxuICAgICAqIEZhaWx1cmUgdG8gZmluZCBhIHBlZXIgd2l0aCBzdWl0YWJsZSBwcm90b2NvbHMuIFRoaXMgbWF5IGR1ZSB0byBhIGNvbm5lY3Rpb24gaXNzdWUuXG4gICAgICogTWl0aWdhdGlvbiBjYW4gYmU6IHJldHJ5aW5nIGFmdGVyIGEgZ2l2ZW4gdGltZSBwZXJpb2QsIGRpc3BsYXkgY29ubmVjdGl2aXR5IGlzc3VlXG4gICAgICogdG8gdXNlciBvciBsaXN0ZW5pbmcgZm9yIGBwZWVyOmNvbm5lY3RlZDpib290c3RyYXBgIG9yIGBwZWVyOmNvbm5lY3RlZDpwZWVyLWV4Y2hhbmdlYFxuICAgICAqIG9uIHRoZSBjb25uZWN0aW9uIG1hbmFnZXIgYmVmb3JlIHJldHJ5aW5nLlxuICAgICAqL1xuICAgIFByb3RvY29sRXJyb3JbXCJOT19QRUVSX0FWQUlMQUJMRVwiXSA9IFwiTm8gcGVlciBhdmFpbGFibGVcIjtcbiAgICAvKipcbiAgICAgKiBUaGUgcmVtb3RlIHBlZXIgZGlkIG5vdCBiZWhhdmUgYXMgZXhwZWN0ZWQuIE1pdGlnYXRpb24gZm9yIGBOT19QRUVSX0FWQUlMQUJMRWBcbiAgICAgKiBvciBgREVDT0RFX0ZBSUxFRGAgY2FuIGJlIHVzZWQuXG4gICAgICovXG4gICAgUHJvdG9jb2xFcnJvcltcIlJFTU9URV9QRUVSX0ZBVUxUXCJdID0gXCJSZW1vdGUgcGVlciBmYXVsdFwiO1xuICAgIC8qKlxuICAgICAqIFRoZSByZW1vdGUgcGVlciByZWplY3RlZCB0aGUgbWVzc2FnZS4gSW5mb3JtYXRpb24gcHJvdmlkZWQgYnkgdGhlIHJlbW90ZSBwZWVyXG4gICAgICogaXMgbG9nZ2VkLiBSZXZpZXcgbWVzc2FnZSB2YWxpZGl0eSwgb3IgbWl0aWdhdGlvbiBmb3IgYE5PX1BFRVJfQVZBSUxBQkxFYFxuICAgICAqIG9yIGBERUNPREVfRkFJTEVEYCBjYW4gYmUgdXNlZC5cbiAgICAgKi9cbiAgICBQcm90b2NvbEVycm9yW1wiUkVNT1RFX1BFRVJfUkVKRUNURURcIl0gPSBcIlJlbW90ZSBwZWVyIHJlamVjdGVkXCI7XG4gICAgLyoqXG4gICAgICogVGhlIHByb3RvY29sIHJlcXVlc3QgdGltZWQgb3V0IHdpdGhvdXQgYSByZXNwb25zZS4gVGhpcyBtYXkgYmUgZHVlIHRvIGEgY29ubmVjdGlvbiBpc3N1ZS5cbiAgICAgKiBNaXRpZ2F0aW9uIGNhbiBiZTogcmV0cnlpbmcgYWZ0ZXIgYSBnaXZlbiB0aW1lIHBlcmlvZFxuICAgICAqL1xuICAgIFByb3RvY29sRXJyb3JbXCJSRVFVRVNUX1RJTUVPVVRcIl0gPSBcIlJlcXVlc3QgdGltZW91dFwiO1xufSkoUHJvdG9jb2xFcnJvciB8fCAoUHJvdG9jb2xFcnJvciA9IHt9KSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1wcm90b2NvbHMuanMubWFwIl0sIm5hbWVzIjpbIlByb3RvY29scyIsIlByb3RvY29sRXJyb3IiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/sdk/node_modules/@waku/interfaces/dist/protocols.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/sdk/node_modules/@waku/interfaces/dist/receiver.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@waku/sdk/node_modules/@waku/interfaces/dist/receiver.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n //# sourceMappingURL=receiver.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdha3Uvc2RrL25vZGVfbW9kdWxlcy9Ad2FrdS9pbnRlcmZhY2VzL2Rpc3QvcmVjZWl2ZXIuanMiLCJtYXBwaW5ncyI6IjtBQUFVLENBQ1Ysb0NBQW9DIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZmx1c2gtbm90ZXMvLi9ub2RlX21vZHVsZXMvQHdha3Uvc2RrL25vZGVfbW9kdWxlcy9Ad2FrdS9pbnRlcmZhY2VzL2Rpc3QvcmVjZWl2ZXIuanM/OTg1MiJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQge307XG4vLyMgc291cmNlTWFwcGluZ1VSTD1yZWNlaXZlci5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/sdk/node_modules/@waku/interfaces/dist/receiver.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/sdk/node_modules/@waku/interfaces/dist/relay.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@waku/sdk/node_modules/@waku/interfaces/dist/relay.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n //# sourceMappingURL=relay.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdha3Uvc2RrL25vZGVfbW9kdWxlcy9Ad2FrdS9pbnRlcmZhY2VzL2Rpc3QvcmVsYXkuanMiLCJtYXBwaW5ncyI6IjtBQUFVLENBQ1YsaUNBQWlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZmx1c2gtbm90ZXMvLi9ub2RlX21vZHVsZXMvQHdha3Uvc2RrL25vZGVfbW9kdWxlcy9Ad2FrdS9pbnRlcmZhY2VzL2Rpc3QvcmVsYXkuanM/MjlhNyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQge307XG4vLyMgc291cmNlTWFwcGluZ1VSTD1yZWxheS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/sdk/node_modules/@waku/interfaces/dist/relay.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/sdk/node_modules/@waku/interfaces/dist/sender.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@waku/sdk/node_modules/@waku/interfaces/dist/sender.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n //# sourceMappingURL=sender.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdha3Uvc2RrL25vZGVfbW9kdWxlcy9Ad2FrdS9pbnRlcmZhY2VzL2Rpc3Qvc2VuZGVyLmpzIiwibWFwcGluZ3MiOiI7QUFBVSxDQUNWLGtDQUFrQyIsInNvdXJjZXMiOlsid2VicGFjazovL2ZsdXNoLW5vdGVzLy4vbm9kZV9tb2R1bGVzL0B3YWt1L3Nkay9ub2RlX21vZHVsZXMvQHdha3UvaW50ZXJmYWNlcy9kaXN0L3NlbmRlci5qcz9kOWE3Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCB7fTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXNlbmRlci5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/sdk/node_modules/@waku/interfaces/dist/sender.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/sdk/node_modules/@waku/interfaces/dist/store.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@waku/sdk/node_modules/@waku/interfaces/dist/store.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PageDirection: () => (/* binding */ PageDirection)\n/* harmony export */ });\nvar PageDirection;\n(function(PageDirection) {\n    PageDirection[\"BACKWARD\"] = \"backward\";\n    PageDirection[\"FORWARD\"] = \"forward\";\n})(PageDirection || (PageDirection = {})); //# sourceMappingURL=store.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdha3Uvc2RrL25vZGVfbW9kdWxlcy9Ad2FrdS9pbnRlcmZhY2VzL2Rpc3Qvc3RvcmUuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFPLElBQUlBLGNBQWM7QUFDeEIsVUFBVUEsYUFBYTtJQUNwQkEsYUFBYSxDQUFDLFdBQVcsR0FBRztJQUM1QkEsYUFBYSxDQUFDLFVBQVUsR0FBRztBQUMvQixHQUFHQSxpQkFBa0JBLENBQUFBLGdCQUFnQixDQUFDLEtBQ3RDLGlDQUFpQyIsInNvdXJjZXMiOlsid2VicGFjazovL2ZsdXNoLW5vdGVzLy4vbm9kZV9tb2R1bGVzL0B3YWt1L3Nkay9ub2RlX21vZHVsZXMvQHdha3UvaW50ZXJmYWNlcy9kaXN0L3N0b3JlLmpzP2I0ZTYiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHZhciBQYWdlRGlyZWN0aW9uO1xuKGZ1bmN0aW9uIChQYWdlRGlyZWN0aW9uKSB7XG4gICAgUGFnZURpcmVjdGlvbltcIkJBQ0tXQVJEXCJdID0gXCJiYWNrd2FyZFwiO1xuICAgIFBhZ2VEaXJlY3Rpb25bXCJGT1JXQVJEXCJdID0gXCJmb3J3YXJkXCI7XG59KShQYWdlRGlyZWN0aW9uIHx8IChQYWdlRGlyZWN0aW9uID0ge30pKTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXN0b3JlLmpzLm1hcCJdLCJuYW1lcyI6WyJQYWdlRGlyZWN0aW9uIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/sdk/node_modules/@waku/interfaces/dist/store.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/sdk/node_modules/@waku/interfaces/dist/waku.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@waku/sdk/node_modules/@waku/interfaces/dist/waku.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n //# sourceMappingURL=waku.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdha3Uvc2RrL25vZGVfbW9kdWxlcy9Ad2FrdS9pbnRlcmZhY2VzL2Rpc3Qvd2FrdS5qcyIsIm1hcHBpbmdzIjoiO0FBQVUsQ0FDVixnQ0FBZ0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mbHVzaC1ub3Rlcy8uL25vZGVfbW9kdWxlcy9Ad2FrdS9zZGsvbm9kZV9tb2R1bGVzL0B3YWt1L2ludGVyZmFjZXMvZGlzdC93YWt1LmpzPzQ2MTMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHt9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9d2FrdS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/sdk/node_modules/@waku/interfaces/dist/waku.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/sdk/node_modules/@waku/message-hash/dist/index.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@waku/sdk/node_modules/@waku/message-hash/dist/index.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   messageHash: () => (/* binding */ messageHash),\n/* harmony export */   messageHashStr: () => (/* binding */ messageHashStr)\n/* harmony export */ });\n/* harmony import */ var _noble_hashes_sha256__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @noble/hashes/sha256 */ \"(ssr)/./node_modules/@noble/hashes/esm/sha256.js\");\n/* harmony import */ var _waku_utils_bytes__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @waku/utils/bytes */ \"(ssr)/./node_modules/@waku/utils/dist/bytes/index.js\");\n\n\n/**\n * Deterministic Message Hashing as defined in\n * [14/WAKU2-MESSAGE](https://rfc.vac.dev/spec/14/#deterministic-message-hashing)\n */ function messageHash(pubsubTopic, message) {\n    const pubsubTopicBytes = (0,_waku_utils_bytes__WEBPACK_IMPORTED_MODULE_0__.utf8ToBytes)(pubsubTopic);\n    const contentTopicBytes = (0,_waku_utils_bytes__WEBPACK_IMPORTED_MODULE_0__.utf8ToBytes)(message.contentTopic);\n    let bytes;\n    if (message.meta) {\n        bytes = (0,_waku_utils_bytes__WEBPACK_IMPORTED_MODULE_0__.concat)([\n            pubsubTopicBytes,\n            message.payload,\n            contentTopicBytes,\n            message.meta\n        ]);\n    } else {\n        bytes = (0,_waku_utils_bytes__WEBPACK_IMPORTED_MODULE_0__.concat)([\n            pubsubTopicBytes,\n            message.payload,\n            contentTopicBytes\n        ]);\n    }\n    return (0,_noble_hashes_sha256__WEBPACK_IMPORTED_MODULE_1__.sha256)(bytes);\n}\nfunction messageHashStr(pubsubTopic, message) {\n    const hash = messageHash(pubsubTopic, message);\n    const hashStr = (0,_waku_utils_bytes__WEBPACK_IMPORTED_MODULE_0__.bytesToUtf8)(hash);\n    return hashStr;\n} //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdha3Uvc2RrL25vZGVfbW9kdWxlcy9Ad2FrdS9tZXNzYWdlLWhhc2gvZGlzdC9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQThDO0FBQ3VCO0FBQ3JFOzs7Q0FHQyxHQUNNLFNBQVNJLFlBQVlDLFdBQVcsRUFBRUMsT0FBTztJQUM1QyxNQUFNQyxtQkFBbUJKLDhEQUFXQSxDQUFDRTtJQUNyQyxNQUFNRyxvQkFBb0JMLDhEQUFXQSxDQUFDRyxRQUFRRyxZQUFZO0lBQzFELElBQUlDO0lBQ0osSUFBSUosUUFBUUssSUFBSSxFQUFFO1FBQ2RELFFBQVFSLHlEQUFNQSxDQUFDO1lBQ1hLO1lBQ0FELFFBQVFNLE9BQU87WUFDZko7WUFDQUYsUUFBUUssSUFBSTtTQUNmO0lBQ0wsT0FDSztRQUNERCxRQUFRUix5REFBTUEsQ0FBQztZQUFDSztZQUFrQkQsUUFBUU0sT0FBTztZQUFFSjtTQUFrQjtJQUN6RTtJQUNBLE9BQU9SLDREQUFNQSxDQUFDVTtBQUNsQjtBQUNPLFNBQVNHLGVBQWVSLFdBQVcsRUFBRUMsT0FBTztJQUMvQyxNQUFNUSxPQUFPVixZQUFZQyxhQUFhQztJQUN0QyxNQUFNUyxVQUFVZCw4REFBV0EsQ0FBQ2E7SUFDNUIsT0FBT0M7QUFDWCxFQUNBLGlDQUFpQyIsInNvdXJjZXMiOlsid2VicGFjazovL2ZsdXNoLW5vdGVzLy4vbm9kZV9tb2R1bGVzL0B3YWt1L3Nkay9ub2RlX21vZHVsZXMvQHdha3UvbWVzc2FnZS1oYXNoL2Rpc3QvaW5kZXguanM/NzI0ZSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBzaGEyNTYgfSBmcm9tIFwiQG5vYmxlL2hhc2hlcy9zaGEyNTZcIjtcbmltcG9ydCB7IGJ5dGVzVG9VdGY4LCBjb25jYXQsIHV0ZjhUb0J5dGVzIH0gZnJvbSBcIkB3YWt1L3V0aWxzL2J5dGVzXCI7XG4vKipcbiAqIERldGVybWluaXN0aWMgTWVzc2FnZSBIYXNoaW5nIGFzIGRlZmluZWQgaW5cbiAqIFsxNC9XQUtVMi1NRVNTQUdFXShodHRwczovL3JmYy52YWMuZGV2L3NwZWMvMTQvI2RldGVybWluaXN0aWMtbWVzc2FnZS1oYXNoaW5nKVxuICovXG5leHBvcnQgZnVuY3Rpb24gbWVzc2FnZUhhc2gocHVic3ViVG9waWMsIG1lc3NhZ2UpIHtcbiAgICBjb25zdCBwdWJzdWJUb3BpY0J5dGVzID0gdXRmOFRvQnl0ZXMocHVic3ViVG9waWMpO1xuICAgIGNvbnN0IGNvbnRlbnRUb3BpY0J5dGVzID0gdXRmOFRvQnl0ZXMobWVzc2FnZS5jb250ZW50VG9waWMpO1xuICAgIGxldCBieXRlcztcbiAgICBpZiAobWVzc2FnZS5tZXRhKSB7XG4gICAgICAgIGJ5dGVzID0gY29uY2F0KFtcbiAgICAgICAgICAgIHB1YnN1YlRvcGljQnl0ZXMsXG4gICAgICAgICAgICBtZXNzYWdlLnBheWxvYWQsXG4gICAgICAgICAgICBjb250ZW50VG9waWNCeXRlcyxcbiAgICAgICAgICAgIG1lc3NhZ2UubWV0YVxuICAgICAgICBdKTtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIGJ5dGVzID0gY29uY2F0KFtwdWJzdWJUb3BpY0J5dGVzLCBtZXNzYWdlLnBheWxvYWQsIGNvbnRlbnRUb3BpY0J5dGVzXSk7XG4gICAgfVxuICAgIHJldHVybiBzaGEyNTYoYnl0ZXMpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIG1lc3NhZ2VIYXNoU3RyKHB1YnN1YlRvcGljLCBtZXNzYWdlKSB7XG4gICAgY29uc3QgaGFzaCA9IG1lc3NhZ2VIYXNoKHB1YnN1YlRvcGljLCBtZXNzYWdlKTtcbiAgICBjb25zdCBoYXNoU3RyID0gYnl0ZXNUb1V0ZjgoaGFzaCk7XG4gICAgcmV0dXJuIGhhc2hTdHI7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOlsic2hhMjU2IiwiYnl0ZXNUb1V0ZjgiLCJjb25jYXQiLCJ1dGY4VG9CeXRlcyIsIm1lc3NhZ2VIYXNoIiwicHVic3ViVG9waWMiLCJtZXNzYWdlIiwicHVic3ViVG9waWNCeXRlcyIsImNvbnRlbnRUb3BpY0J5dGVzIiwiY29udGVudFRvcGljIiwiYnl0ZXMiLCJtZXRhIiwicGF5bG9hZCIsIm1lc3NhZ2VIYXNoU3RyIiwiaGFzaCIsImhhc2hTdHIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/sdk/node_modules/@waku/message-hash/dist/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/sdk/node_modules/@waku/proto/dist/generated/filter.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@waku/sdk/node_modules/@waku/proto/dist/generated/filter.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   FilterRequest: () => (/* binding */ FilterRequest),\n/* harmony export */   FilterRpc: () => (/* binding */ FilterRpc),\n/* harmony export */   MessagePush: () => (/* binding */ MessagePush),\n/* harmony export */   RateLimitProof: () => (/* binding */ RateLimitProof),\n/* harmony export */   WakuMessage: () => (/* binding */ WakuMessage)\n/* harmony export */ });\n/* harmony import */ var protons_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! protons-runtime */ \"(ssr)/./node_modules/protons-runtime/dist/src/index.js\");\n/* harmony import */ var uint8arrays_alloc__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! uint8arrays/alloc */ \"(ssr)/./node_modules/uint8arrays/dist/src/alloc.node.js\");\n/* eslint-disable import/export */ /* eslint-disable complexity */ /* eslint-disable @typescript-eslint/no-namespace */ /* eslint-disable @typescript-eslint/no-unnecessary-boolean-literal-compare */ /* eslint-disable @typescript-eslint/no-empty-interface */ \n\nvar FilterRequest;\n(function(FilterRequest) {\n    let ContentFilter;\n    (function(ContentFilter) {\n        let _codec;\n        ContentFilter.codec = ()=>{\n            if (_codec == null) {\n                _codec = (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.message)((obj, w, opts = {})=>{\n                    if (opts.lengthDelimited !== false) {\n                        w.fork();\n                    }\n                    if (obj.contentTopic != null && obj.contentTopic !== \"\") {\n                        w.uint32(10);\n                        w.string(obj.contentTopic);\n                    }\n                    if (opts.lengthDelimited !== false) {\n                        w.ldelim();\n                    }\n                }, (reader, length, opts = {})=>{\n                    const obj = {\n                        contentTopic: \"\"\n                    };\n                    const end = length == null ? reader.len : reader.pos + length;\n                    while(reader.pos < end){\n                        const tag = reader.uint32();\n                        switch(tag >>> 3){\n                            case 1:\n                                {\n                                    obj.contentTopic = reader.string();\n                                    break;\n                                }\n                            default:\n                                {\n                                    reader.skipType(tag & 7);\n                                    break;\n                                }\n                        }\n                    }\n                    return obj;\n                });\n            }\n            return _codec;\n        };\n        ContentFilter.encode = (obj)=>{\n            return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.encodeMessage)(obj, ContentFilter.codec());\n        };\n        ContentFilter.decode = (buf, opts)=>{\n            return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.decodeMessage)(buf, ContentFilter.codec(), opts);\n        };\n    })(ContentFilter = FilterRequest.ContentFilter || (FilterRequest.ContentFilter = {}));\n    let _codec;\n    FilterRequest.codec = ()=>{\n        if (_codec == null) {\n            _codec = (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.message)((obj, w, opts = {})=>{\n                if (opts.lengthDelimited !== false) {\n                    w.fork();\n                }\n                if (obj.subscribe != null && obj.subscribe !== false) {\n                    w.uint32(8);\n                    w.bool(obj.subscribe);\n                }\n                if (obj.topic != null && obj.topic !== \"\") {\n                    w.uint32(18);\n                    w.string(obj.topic);\n                }\n                if (obj.contentFilters != null) {\n                    for (const value of obj.contentFilters){\n                        w.uint32(26);\n                        FilterRequest.ContentFilter.codec().encode(value, w);\n                    }\n                }\n                if (opts.lengthDelimited !== false) {\n                    w.ldelim();\n                }\n            }, (reader, length, opts = {})=>{\n                const obj = {\n                    subscribe: false,\n                    topic: \"\",\n                    contentFilters: []\n                };\n                const end = length == null ? reader.len : reader.pos + length;\n                while(reader.pos < end){\n                    const tag = reader.uint32();\n                    switch(tag >>> 3){\n                        case 1:\n                            {\n                                obj.subscribe = reader.bool();\n                                break;\n                            }\n                        case 2:\n                            {\n                                obj.topic = reader.string();\n                                break;\n                            }\n                        case 3:\n                            {\n                                if (opts.limits?.contentFilters != null && obj.contentFilters.length === opts.limits.contentFilters) {\n                                    throw new protons_runtime__WEBPACK_IMPORTED_MODULE_0__.CodeError('decode error - map field \"contentFilters\" had too many elements', \"ERR_MAX_LENGTH\");\n                                }\n                                obj.contentFilters.push(FilterRequest.ContentFilter.codec().decode(reader, reader.uint32(), {\n                                    limits: opts.limits?.contentFilters$\n                                }));\n                                break;\n                            }\n                        default:\n                            {\n                                reader.skipType(tag & 7);\n                                break;\n                            }\n                    }\n                }\n                return obj;\n            });\n        }\n        return _codec;\n    };\n    FilterRequest.encode = (obj)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.encodeMessage)(obj, FilterRequest.codec());\n    };\n    FilterRequest.decode = (buf, opts)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.decodeMessage)(buf, FilterRequest.codec(), opts);\n    };\n})(FilterRequest || (FilterRequest = {}));\nvar MessagePush;\n(function(MessagePush) {\n    let _codec;\n    MessagePush.codec = ()=>{\n        if (_codec == null) {\n            _codec = (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.message)((obj, w, opts = {})=>{\n                if (opts.lengthDelimited !== false) {\n                    w.fork();\n                }\n                if (obj.messages != null) {\n                    for (const value of obj.messages){\n                        w.uint32(10);\n                        WakuMessage.codec().encode(value, w);\n                    }\n                }\n                if (opts.lengthDelimited !== false) {\n                    w.ldelim();\n                }\n            }, (reader, length, opts = {})=>{\n                const obj = {\n                    messages: []\n                };\n                const end = length == null ? reader.len : reader.pos + length;\n                while(reader.pos < end){\n                    const tag = reader.uint32();\n                    switch(tag >>> 3){\n                        case 1:\n                            {\n                                if (opts.limits?.messages != null && obj.messages.length === opts.limits.messages) {\n                                    throw new protons_runtime__WEBPACK_IMPORTED_MODULE_0__.CodeError('decode error - map field \"messages\" had too many elements', \"ERR_MAX_LENGTH\");\n                                }\n                                obj.messages.push(WakuMessage.codec().decode(reader, reader.uint32(), {\n                                    limits: opts.limits?.messages$\n                                }));\n                                break;\n                            }\n                        default:\n                            {\n                                reader.skipType(tag & 7);\n                                break;\n                            }\n                    }\n                }\n                return obj;\n            });\n        }\n        return _codec;\n    };\n    MessagePush.encode = (obj)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.encodeMessage)(obj, MessagePush.codec());\n    };\n    MessagePush.decode = (buf, opts)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.decodeMessage)(buf, MessagePush.codec(), opts);\n    };\n})(MessagePush || (MessagePush = {}));\nvar FilterRpc;\n(function(FilterRpc) {\n    let _codec;\n    FilterRpc.codec = ()=>{\n        if (_codec == null) {\n            _codec = (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.message)((obj, w, opts = {})=>{\n                if (opts.lengthDelimited !== false) {\n                    w.fork();\n                }\n                if (obj.requestId != null && obj.requestId !== \"\") {\n                    w.uint32(10);\n                    w.string(obj.requestId);\n                }\n                if (obj.request != null) {\n                    w.uint32(18);\n                    FilterRequest.codec().encode(obj.request, w);\n                }\n                if (obj.push != null) {\n                    w.uint32(26);\n                    MessagePush.codec().encode(obj.push, w);\n                }\n                if (opts.lengthDelimited !== false) {\n                    w.ldelim();\n                }\n            }, (reader, length, opts = {})=>{\n                const obj = {\n                    requestId: \"\"\n                };\n                const end = length == null ? reader.len : reader.pos + length;\n                while(reader.pos < end){\n                    const tag = reader.uint32();\n                    switch(tag >>> 3){\n                        case 1:\n                            {\n                                obj.requestId = reader.string();\n                                break;\n                            }\n                        case 2:\n                            {\n                                obj.request = FilterRequest.codec().decode(reader, reader.uint32(), {\n                                    limits: opts.limits?.request\n                                });\n                                break;\n                            }\n                        case 3:\n                            {\n                                obj.push = MessagePush.codec().decode(reader, reader.uint32(), {\n                                    limits: opts.limits?.push\n                                });\n                                break;\n                            }\n                        default:\n                            {\n                                reader.skipType(tag & 7);\n                                break;\n                            }\n                    }\n                }\n                return obj;\n            });\n        }\n        return _codec;\n    };\n    FilterRpc.encode = (obj)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.encodeMessage)(obj, FilterRpc.codec());\n    };\n    FilterRpc.decode = (buf, opts)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.decodeMessage)(buf, FilterRpc.codec(), opts);\n    };\n})(FilterRpc || (FilterRpc = {}));\nvar RateLimitProof;\n(function(RateLimitProof) {\n    let _codec;\n    RateLimitProof.codec = ()=>{\n        if (_codec == null) {\n            _codec = (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.message)((obj, w, opts = {})=>{\n                if (opts.lengthDelimited !== false) {\n                    w.fork();\n                }\n                if (obj.proof != null && obj.proof.byteLength > 0) {\n                    w.uint32(10);\n                    w.bytes(obj.proof);\n                }\n                if (obj.merkleRoot != null && obj.merkleRoot.byteLength > 0) {\n                    w.uint32(18);\n                    w.bytes(obj.merkleRoot);\n                }\n                if (obj.epoch != null && obj.epoch.byteLength > 0) {\n                    w.uint32(26);\n                    w.bytes(obj.epoch);\n                }\n                if (obj.shareX != null && obj.shareX.byteLength > 0) {\n                    w.uint32(34);\n                    w.bytes(obj.shareX);\n                }\n                if (obj.shareY != null && obj.shareY.byteLength > 0) {\n                    w.uint32(42);\n                    w.bytes(obj.shareY);\n                }\n                if (obj.nullifier != null && obj.nullifier.byteLength > 0) {\n                    w.uint32(50);\n                    w.bytes(obj.nullifier);\n                }\n                if (obj.rlnIdentifier != null && obj.rlnIdentifier.byteLength > 0) {\n                    w.uint32(58);\n                    w.bytes(obj.rlnIdentifier);\n                }\n                if (opts.lengthDelimited !== false) {\n                    w.ldelim();\n                }\n            }, (reader, length, opts = {})=>{\n                const obj = {\n                    proof: (0,uint8arrays_alloc__WEBPACK_IMPORTED_MODULE_1__.alloc)(0),\n                    merkleRoot: (0,uint8arrays_alloc__WEBPACK_IMPORTED_MODULE_1__.alloc)(0),\n                    epoch: (0,uint8arrays_alloc__WEBPACK_IMPORTED_MODULE_1__.alloc)(0),\n                    shareX: (0,uint8arrays_alloc__WEBPACK_IMPORTED_MODULE_1__.alloc)(0),\n                    shareY: (0,uint8arrays_alloc__WEBPACK_IMPORTED_MODULE_1__.alloc)(0),\n                    nullifier: (0,uint8arrays_alloc__WEBPACK_IMPORTED_MODULE_1__.alloc)(0),\n                    rlnIdentifier: (0,uint8arrays_alloc__WEBPACK_IMPORTED_MODULE_1__.alloc)(0)\n                };\n                const end = length == null ? reader.len : reader.pos + length;\n                while(reader.pos < end){\n                    const tag = reader.uint32();\n                    switch(tag >>> 3){\n                        case 1:\n                            {\n                                obj.proof = reader.bytes();\n                                break;\n                            }\n                        case 2:\n                            {\n                                obj.merkleRoot = reader.bytes();\n                                break;\n                            }\n                        case 3:\n                            {\n                                obj.epoch = reader.bytes();\n                                break;\n                            }\n                        case 4:\n                            {\n                                obj.shareX = reader.bytes();\n                                break;\n                            }\n                        case 5:\n                            {\n                                obj.shareY = reader.bytes();\n                                break;\n                            }\n                        case 6:\n                            {\n                                obj.nullifier = reader.bytes();\n                                break;\n                            }\n                        case 7:\n                            {\n                                obj.rlnIdentifier = reader.bytes();\n                                break;\n                            }\n                        default:\n                            {\n                                reader.skipType(tag & 7);\n                                break;\n                            }\n                    }\n                }\n                return obj;\n            });\n        }\n        return _codec;\n    };\n    RateLimitProof.encode = (obj)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.encodeMessage)(obj, RateLimitProof.codec());\n    };\n    RateLimitProof.decode = (buf, opts)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.decodeMessage)(buf, RateLimitProof.codec(), opts);\n    };\n})(RateLimitProof || (RateLimitProof = {}));\nvar WakuMessage;\n(function(WakuMessage) {\n    let _codec;\n    WakuMessage.codec = ()=>{\n        if (_codec == null) {\n            _codec = (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.message)((obj, w, opts = {})=>{\n                if (opts.lengthDelimited !== false) {\n                    w.fork();\n                }\n                if (obj.payload != null && obj.payload.byteLength > 0) {\n                    w.uint32(10);\n                    w.bytes(obj.payload);\n                }\n                if (obj.contentTopic != null && obj.contentTopic !== \"\") {\n                    w.uint32(18);\n                    w.string(obj.contentTopic);\n                }\n                if (obj.version != null) {\n                    w.uint32(24);\n                    w.uint32(obj.version);\n                }\n                if (obj.timestamp != null) {\n                    w.uint32(80);\n                    w.sint64(obj.timestamp);\n                }\n                if (obj.meta != null) {\n                    w.uint32(90);\n                    w.bytes(obj.meta);\n                }\n                if (obj.rateLimitProof != null) {\n                    w.uint32(170);\n                    RateLimitProof.codec().encode(obj.rateLimitProof, w);\n                }\n                if (obj.ephemeral != null) {\n                    w.uint32(248);\n                    w.bool(obj.ephemeral);\n                }\n                if (opts.lengthDelimited !== false) {\n                    w.ldelim();\n                }\n            }, (reader, length, opts = {})=>{\n                const obj = {\n                    payload: (0,uint8arrays_alloc__WEBPACK_IMPORTED_MODULE_1__.alloc)(0),\n                    contentTopic: \"\"\n                };\n                const end = length == null ? reader.len : reader.pos + length;\n                while(reader.pos < end){\n                    const tag = reader.uint32();\n                    switch(tag >>> 3){\n                        case 1:\n                            {\n                                obj.payload = reader.bytes();\n                                break;\n                            }\n                        case 2:\n                            {\n                                obj.contentTopic = reader.string();\n                                break;\n                            }\n                        case 3:\n                            {\n                                obj.version = reader.uint32();\n                                break;\n                            }\n                        case 10:\n                            {\n                                obj.timestamp = reader.sint64();\n                                break;\n                            }\n                        case 11:\n                            {\n                                obj.meta = reader.bytes();\n                                break;\n                            }\n                        case 21:\n                            {\n                                obj.rateLimitProof = RateLimitProof.codec().decode(reader, reader.uint32(), {\n                                    limits: opts.limits?.rateLimitProof\n                                });\n                                break;\n                            }\n                        case 31:\n                            {\n                                obj.ephemeral = reader.bool();\n                                break;\n                            }\n                        default:\n                            {\n                                reader.skipType(tag & 7);\n                                break;\n                            }\n                    }\n                }\n                return obj;\n            });\n        }\n        return _codec;\n    };\n    WakuMessage.encode = (obj)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.encodeMessage)(obj, WakuMessage.codec());\n    };\n    WakuMessage.decode = (buf, opts)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.decodeMessage)(buf, WakuMessage.codec(), opts);\n    };\n})(WakuMessage || (WakuMessage = {})); //# sourceMappingURL=filter.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/sdk/node_modules/@waku/proto/dist/generated/filter.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/sdk/node_modules/@waku/proto/dist/generated/filter_v2.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@waku/sdk/node_modules/@waku/proto/dist/generated/filter_v2.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   FilterSubscribeRequest: () => (/* binding */ FilterSubscribeRequest),\n/* harmony export */   FilterSubscribeResponse: () => (/* binding */ FilterSubscribeResponse),\n/* harmony export */   MessagePush: () => (/* binding */ MessagePush),\n/* harmony export */   RateLimitProof: () => (/* binding */ RateLimitProof),\n/* harmony export */   WakuMessage: () => (/* binding */ WakuMessage)\n/* harmony export */ });\n/* harmony import */ var protons_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! protons-runtime */ \"(ssr)/./node_modules/protons-runtime/dist/src/index.js\");\n/* harmony import */ var uint8arrays_alloc__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! uint8arrays/alloc */ \"(ssr)/./node_modules/uint8arrays/dist/src/alloc.node.js\");\n/* eslint-disable import/export */ /* eslint-disable complexity */ /* eslint-disable @typescript-eslint/no-namespace */ /* eslint-disable @typescript-eslint/no-unnecessary-boolean-literal-compare */ /* eslint-disable @typescript-eslint/no-empty-interface */ \n\nvar FilterSubscribeRequest;\n(function(FilterSubscribeRequest) {\n    let FilterSubscribeType;\n    (function(FilterSubscribeType) {\n        FilterSubscribeType[\"SUBSCRIBER_PING\"] = \"SUBSCRIBER_PING\";\n        FilterSubscribeType[\"SUBSCRIBE\"] = \"SUBSCRIBE\";\n        FilterSubscribeType[\"UNSUBSCRIBE\"] = \"UNSUBSCRIBE\";\n        FilterSubscribeType[\"UNSUBSCRIBE_ALL\"] = \"UNSUBSCRIBE_ALL\";\n    })(FilterSubscribeType = FilterSubscribeRequest.FilterSubscribeType || (FilterSubscribeRequest.FilterSubscribeType = {}));\n    let __FilterSubscribeTypeValues;\n    (function(__FilterSubscribeTypeValues) {\n        __FilterSubscribeTypeValues[__FilterSubscribeTypeValues[\"SUBSCRIBER_PING\"] = 0] = \"SUBSCRIBER_PING\";\n        __FilterSubscribeTypeValues[__FilterSubscribeTypeValues[\"SUBSCRIBE\"] = 1] = \"SUBSCRIBE\";\n        __FilterSubscribeTypeValues[__FilterSubscribeTypeValues[\"UNSUBSCRIBE\"] = 2] = \"UNSUBSCRIBE\";\n        __FilterSubscribeTypeValues[__FilterSubscribeTypeValues[\"UNSUBSCRIBE_ALL\"] = 3] = \"UNSUBSCRIBE_ALL\";\n    })(__FilterSubscribeTypeValues || (__FilterSubscribeTypeValues = {}));\n    (function(FilterSubscribeType) {\n        FilterSubscribeType.codec = ()=>{\n            return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.enumeration)(__FilterSubscribeTypeValues);\n        };\n    })(FilterSubscribeType = FilterSubscribeRequest.FilterSubscribeType || (FilterSubscribeRequest.FilterSubscribeType = {}));\n    let _codec;\n    FilterSubscribeRequest.codec = ()=>{\n        if (_codec == null) {\n            _codec = (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.message)((obj, w, opts = {})=>{\n                if (opts.lengthDelimited !== false) {\n                    w.fork();\n                }\n                if (obj.requestId != null && obj.requestId !== \"\") {\n                    w.uint32(10);\n                    w.string(obj.requestId);\n                }\n                if (obj.filterSubscribeType != null && __FilterSubscribeTypeValues[obj.filterSubscribeType] !== 0) {\n                    w.uint32(16);\n                    FilterSubscribeRequest.FilterSubscribeType.codec().encode(obj.filterSubscribeType, w);\n                }\n                if (obj.pubsubTopic != null) {\n                    w.uint32(82);\n                    w.string(obj.pubsubTopic);\n                }\n                if (obj.contentTopics != null) {\n                    for (const value of obj.contentTopics){\n                        w.uint32(90);\n                        w.string(value);\n                    }\n                }\n                if (opts.lengthDelimited !== false) {\n                    w.ldelim();\n                }\n            }, (reader, length, opts = {})=>{\n                const obj = {\n                    requestId: \"\",\n                    filterSubscribeType: FilterSubscribeType.SUBSCRIBER_PING,\n                    contentTopics: []\n                };\n                const end = length == null ? reader.len : reader.pos + length;\n                while(reader.pos < end){\n                    const tag = reader.uint32();\n                    switch(tag >>> 3){\n                        case 1:\n                            {\n                                obj.requestId = reader.string();\n                                break;\n                            }\n                        case 2:\n                            {\n                                obj.filterSubscribeType = FilterSubscribeRequest.FilterSubscribeType.codec().decode(reader);\n                                break;\n                            }\n                        case 10:\n                            {\n                                obj.pubsubTopic = reader.string();\n                                break;\n                            }\n                        case 11:\n                            {\n                                if (opts.limits?.contentTopics != null && obj.contentTopics.length === opts.limits.contentTopics) {\n                                    throw new protons_runtime__WEBPACK_IMPORTED_MODULE_0__.CodeError('decode error - map field \"contentTopics\" had too many elements', \"ERR_MAX_LENGTH\");\n                                }\n                                obj.contentTopics.push(reader.string());\n                                break;\n                            }\n                        default:\n                            {\n                                reader.skipType(tag & 7);\n                                break;\n                            }\n                    }\n                }\n                return obj;\n            });\n        }\n        return _codec;\n    };\n    FilterSubscribeRequest.encode = (obj)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.encodeMessage)(obj, FilterSubscribeRequest.codec());\n    };\n    FilterSubscribeRequest.decode = (buf, opts)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.decodeMessage)(buf, FilterSubscribeRequest.codec(), opts);\n    };\n})(FilterSubscribeRequest || (FilterSubscribeRequest = {}));\nvar FilterSubscribeResponse;\n(function(FilterSubscribeResponse) {\n    let _codec;\n    FilterSubscribeResponse.codec = ()=>{\n        if (_codec == null) {\n            _codec = (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.message)((obj, w, opts = {})=>{\n                if (opts.lengthDelimited !== false) {\n                    w.fork();\n                }\n                if (obj.requestId != null && obj.requestId !== \"\") {\n                    w.uint32(10);\n                    w.string(obj.requestId);\n                }\n                if (obj.statusCode != null && obj.statusCode !== 0) {\n                    w.uint32(80);\n                    w.uint32(obj.statusCode);\n                }\n                if (obj.statusDesc != null) {\n                    w.uint32(90);\n                    w.string(obj.statusDesc);\n                }\n                if (opts.lengthDelimited !== false) {\n                    w.ldelim();\n                }\n            }, (reader, length, opts = {})=>{\n                const obj = {\n                    requestId: \"\",\n                    statusCode: 0\n                };\n                const end = length == null ? reader.len : reader.pos + length;\n                while(reader.pos < end){\n                    const tag = reader.uint32();\n                    switch(tag >>> 3){\n                        case 1:\n                            {\n                                obj.requestId = reader.string();\n                                break;\n                            }\n                        case 10:\n                            {\n                                obj.statusCode = reader.uint32();\n                                break;\n                            }\n                        case 11:\n                            {\n                                obj.statusDesc = reader.string();\n                                break;\n                            }\n                        default:\n                            {\n                                reader.skipType(tag & 7);\n                                break;\n                            }\n                    }\n                }\n                return obj;\n            });\n        }\n        return _codec;\n    };\n    FilterSubscribeResponse.encode = (obj)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.encodeMessage)(obj, FilterSubscribeResponse.codec());\n    };\n    FilterSubscribeResponse.decode = (buf, opts)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.decodeMessage)(buf, FilterSubscribeResponse.codec(), opts);\n    };\n})(FilterSubscribeResponse || (FilterSubscribeResponse = {}));\nvar MessagePush;\n(function(MessagePush) {\n    let _codec;\n    MessagePush.codec = ()=>{\n        if (_codec == null) {\n            _codec = (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.message)((obj, w, opts = {})=>{\n                if (opts.lengthDelimited !== false) {\n                    w.fork();\n                }\n                if (obj.wakuMessage != null) {\n                    w.uint32(10);\n                    WakuMessage.codec().encode(obj.wakuMessage, w);\n                }\n                if (obj.pubsubTopic != null) {\n                    w.uint32(18);\n                    w.string(obj.pubsubTopic);\n                }\n                if (opts.lengthDelimited !== false) {\n                    w.ldelim();\n                }\n            }, (reader, length, opts = {})=>{\n                const obj = {};\n                const end = length == null ? reader.len : reader.pos + length;\n                while(reader.pos < end){\n                    const tag = reader.uint32();\n                    switch(tag >>> 3){\n                        case 1:\n                            {\n                                obj.wakuMessage = WakuMessage.codec().decode(reader, reader.uint32(), {\n                                    limits: opts.limits?.wakuMessage\n                                });\n                                break;\n                            }\n                        case 2:\n                            {\n                                obj.pubsubTopic = reader.string();\n                                break;\n                            }\n                        default:\n                            {\n                                reader.skipType(tag & 7);\n                                break;\n                            }\n                    }\n                }\n                return obj;\n            });\n        }\n        return _codec;\n    };\n    MessagePush.encode = (obj)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.encodeMessage)(obj, MessagePush.codec());\n    };\n    MessagePush.decode = (buf, opts)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.decodeMessage)(buf, MessagePush.codec(), opts);\n    };\n})(MessagePush || (MessagePush = {}));\nvar RateLimitProof;\n(function(RateLimitProof) {\n    let _codec;\n    RateLimitProof.codec = ()=>{\n        if (_codec == null) {\n            _codec = (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.message)((obj, w, opts = {})=>{\n                if (opts.lengthDelimited !== false) {\n                    w.fork();\n                }\n                if (obj.proof != null && obj.proof.byteLength > 0) {\n                    w.uint32(10);\n                    w.bytes(obj.proof);\n                }\n                if (obj.merkleRoot != null && obj.merkleRoot.byteLength > 0) {\n                    w.uint32(18);\n                    w.bytes(obj.merkleRoot);\n                }\n                if (obj.epoch != null && obj.epoch.byteLength > 0) {\n                    w.uint32(26);\n                    w.bytes(obj.epoch);\n                }\n                if (obj.shareX != null && obj.shareX.byteLength > 0) {\n                    w.uint32(34);\n                    w.bytes(obj.shareX);\n                }\n                if (obj.shareY != null && obj.shareY.byteLength > 0) {\n                    w.uint32(42);\n                    w.bytes(obj.shareY);\n                }\n                if (obj.nullifier != null && obj.nullifier.byteLength > 0) {\n                    w.uint32(50);\n                    w.bytes(obj.nullifier);\n                }\n                if (obj.rlnIdentifier != null && obj.rlnIdentifier.byteLength > 0) {\n                    w.uint32(58);\n                    w.bytes(obj.rlnIdentifier);\n                }\n                if (opts.lengthDelimited !== false) {\n                    w.ldelim();\n                }\n            }, (reader, length, opts = {})=>{\n                const obj = {\n                    proof: (0,uint8arrays_alloc__WEBPACK_IMPORTED_MODULE_1__.alloc)(0),\n                    merkleRoot: (0,uint8arrays_alloc__WEBPACK_IMPORTED_MODULE_1__.alloc)(0),\n                    epoch: (0,uint8arrays_alloc__WEBPACK_IMPORTED_MODULE_1__.alloc)(0),\n                    shareX: (0,uint8arrays_alloc__WEBPACK_IMPORTED_MODULE_1__.alloc)(0),\n                    shareY: (0,uint8arrays_alloc__WEBPACK_IMPORTED_MODULE_1__.alloc)(0),\n                    nullifier: (0,uint8arrays_alloc__WEBPACK_IMPORTED_MODULE_1__.alloc)(0),\n                    rlnIdentifier: (0,uint8arrays_alloc__WEBPACK_IMPORTED_MODULE_1__.alloc)(0)\n                };\n                const end = length == null ? reader.len : reader.pos + length;\n                while(reader.pos < end){\n                    const tag = reader.uint32();\n                    switch(tag >>> 3){\n                        case 1:\n                            {\n                                obj.proof = reader.bytes();\n                                break;\n                            }\n                        case 2:\n                            {\n                                obj.merkleRoot = reader.bytes();\n                                break;\n                            }\n                        case 3:\n                            {\n                                obj.epoch = reader.bytes();\n                                break;\n                            }\n                        case 4:\n                            {\n                                obj.shareX = reader.bytes();\n                                break;\n                            }\n                        case 5:\n                            {\n                                obj.shareY = reader.bytes();\n                                break;\n                            }\n                        case 6:\n                            {\n                                obj.nullifier = reader.bytes();\n                                break;\n                            }\n                        case 7:\n                            {\n                                obj.rlnIdentifier = reader.bytes();\n                                break;\n                            }\n                        default:\n                            {\n                                reader.skipType(tag & 7);\n                                break;\n                            }\n                    }\n                }\n                return obj;\n            });\n        }\n        return _codec;\n    };\n    RateLimitProof.encode = (obj)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.encodeMessage)(obj, RateLimitProof.codec());\n    };\n    RateLimitProof.decode = (buf, opts)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.decodeMessage)(buf, RateLimitProof.codec(), opts);\n    };\n})(RateLimitProof || (RateLimitProof = {}));\nvar WakuMessage;\n(function(WakuMessage) {\n    let _codec;\n    WakuMessage.codec = ()=>{\n        if (_codec == null) {\n            _codec = (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.message)((obj, w, opts = {})=>{\n                if (opts.lengthDelimited !== false) {\n                    w.fork();\n                }\n                if (obj.payload != null && obj.payload.byteLength > 0) {\n                    w.uint32(10);\n                    w.bytes(obj.payload);\n                }\n                if (obj.contentTopic != null && obj.contentTopic !== \"\") {\n                    w.uint32(18);\n                    w.string(obj.contentTopic);\n                }\n                if (obj.version != null) {\n                    w.uint32(24);\n                    w.uint32(obj.version);\n                }\n                if (obj.timestamp != null) {\n                    w.uint32(80);\n                    w.sint64(obj.timestamp);\n                }\n                if (obj.meta != null) {\n                    w.uint32(90);\n                    w.bytes(obj.meta);\n                }\n                if (obj.rateLimitProof != null) {\n                    w.uint32(170);\n                    RateLimitProof.codec().encode(obj.rateLimitProof, w);\n                }\n                if (obj.ephemeral != null) {\n                    w.uint32(248);\n                    w.bool(obj.ephemeral);\n                }\n                if (opts.lengthDelimited !== false) {\n                    w.ldelim();\n                }\n            }, (reader, length, opts = {})=>{\n                const obj = {\n                    payload: (0,uint8arrays_alloc__WEBPACK_IMPORTED_MODULE_1__.alloc)(0),\n                    contentTopic: \"\"\n                };\n                const end = length == null ? reader.len : reader.pos + length;\n                while(reader.pos < end){\n                    const tag = reader.uint32();\n                    switch(tag >>> 3){\n                        case 1:\n                            {\n                                obj.payload = reader.bytes();\n                                break;\n                            }\n                        case 2:\n                            {\n                                obj.contentTopic = reader.string();\n                                break;\n                            }\n                        case 3:\n                            {\n                                obj.version = reader.uint32();\n                                break;\n                            }\n                        case 10:\n                            {\n                                obj.timestamp = reader.sint64();\n                                break;\n                            }\n                        case 11:\n                            {\n                                obj.meta = reader.bytes();\n                                break;\n                            }\n                        case 21:\n                            {\n                                obj.rateLimitProof = RateLimitProof.codec().decode(reader, reader.uint32(), {\n                                    limits: opts.limits?.rateLimitProof\n                                });\n                                break;\n                            }\n                        case 31:\n                            {\n                                obj.ephemeral = reader.bool();\n                                break;\n                            }\n                        default:\n                            {\n                                reader.skipType(tag & 7);\n                                break;\n                            }\n                    }\n                }\n                return obj;\n            });\n        }\n        return _codec;\n    };\n    WakuMessage.encode = (obj)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.encodeMessage)(obj, WakuMessage.codec());\n    };\n    WakuMessage.decode = (buf, opts)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.decodeMessage)(buf, WakuMessage.codec(), opts);\n    };\n})(WakuMessage || (WakuMessage = {})); //# sourceMappingURL=filter_v2.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/sdk/node_modules/@waku/proto/dist/generated/filter_v2.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/sdk/node_modules/@waku/proto/dist/generated/light_push.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@waku/sdk/node_modules/@waku/proto/dist/generated/light_push.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PushRequest: () => (/* binding */ PushRequest),\n/* harmony export */   PushResponse: () => (/* binding */ PushResponse),\n/* harmony export */   PushRpc: () => (/* binding */ PushRpc),\n/* harmony export */   RateLimitProof: () => (/* binding */ RateLimitProof),\n/* harmony export */   WakuMessage: () => (/* binding */ WakuMessage)\n/* harmony export */ });\n/* harmony import */ var protons_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! protons-runtime */ \"(ssr)/./node_modules/protons-runtime/dist/src/index.js\");\n/* harmony import */ var uint8arrays_alloc__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! uint8arrays/alloc */ \"(ssr)/./node_modules/uint8arrays/dist/src/alloc.node.js\");\n/* eslint-disable import/export */ /* eslint-disable complexity */ /* eslint-disable @typescript-eslint/no-namespace */ /* eslint-disable @typescript-eslint/no-unnecessary-boolean-literal-compare */ /* eslint-disable @typescript-eslint/no-empty-interface */ \n\nvar PushRequest;\n(function(PushRequest) {\n    let _codec;\n    PushRequest.codec = ()=>{\n        if (_codec == null) {\n            _codec = (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.message)((obj, w, opts = {})=>{\n                if (opts.lengthDelimited !== false) {\n                    w.fork();\n                }\n                if (obj.pubsubTopic != null && obj.pubsubTopic !== \"\") {\n                    w.uint32(10);\n                    w.string(obj.pubsubTopic);\n                }\n                if (obj.message != null) {\n                    w.uint32(18);\n                    WakuMessage.codec().encode(obj.message, w);\n                }\n                if (opts.lengthDelimited !== false) {\n                    w.ldelim();\n                }\n            }, (reader, length, opts = {})=>{\n                const obj = {\n                    pubsubTopic: \"\"\n                };\n                const end = length == null ? reader.len : reader.pos + length;\n                while(reader.pos < end){\n                    const tag = reader.uint32();\n                    switch(tag >>> 3){\n                        case 1:\n                            {\n                                obj.pubsubTopic = reader.string();\n                                break;\n                            }\n                        case 2:\n                            {\n                                obj.message = WakuMessage.codec().decode(reader, reader.uint32(), {\n                                    limits: opts.limits?.message\n                                });\n                                break;\n                            }\n                        default:\n                            {\n                                reader.skipType(tag & 7);\n                                break;\n                            }\n                    }\n                }\n                return obj;\n            });\n        }\n        return _codec;\n    };\n    PushRequest.encode = (obj)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.encodeMessage)(obj, PushRequest.codec());\n    };\n    PushRequest.decode = (buf, opts)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.decodeMessage)(buf, PushRequest.codec(), opts);\n    };\n})(PushRequest || (PushRequest = {}));\nvar PushResponse;\n(function(PushResponse) {\n    let _codec;\n    PushResponse.codec = ()=>{\n        if (_codec == null) {\n            _codec = (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.message)((obj, w, opts = {})=>{\n                if (opts.lengthDelimited !== false) {\n                    w.fork();\n                }\n                if (obj.isSuccess != null && obj.isSuccess !== false) {\n                    w.uint32(8);\n                    w.bool(obj.isSuccess);\n                }\n                if (obj.info != null) {\n                    w.uint32(18);\n                    w.string(obj.info);\n                }\n                if (opts.lengthDelimited !== false) {\n                    w.ldelim();\n                }\n            }, (reader, length, opts = {})=>{\n                const obj = {\n                    isSuccess: false\n                };\n                const end = length == null ? reader.len : reader.pos + length;\n                while(reader.pos < end){\n                    const tag = reader.uint32();\n                    switch(tag >>> 3){\n                        case 1:\n                            {\n                                obj.isSuccess = reader.bool();\n                                break;\n                            }\n                        case 2:\n                            {\n                                obj.info = reader.string();\n                                break;\n                            }\n                        default:\n                            {\n                                reader.skipType(tag & 7);\n                                break;\n                            }\n                    }\n                }\n                return obj;\n            });\n        }\n        return _codec;\n    };\n    PushResponse.encode = (obj)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.encodeMessage)(obj, PushResponse.codec());\n    };\n    PushResponse.decode = (buf, opts)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.decodeMessage)(buf, PushResponse.codec(), opts);\n    };\n})(PushResponse || (PushResponse = {}));\nvar PushRpc;\n(function(PushRpc) {\n    let _codec;\n    PushRpc.codec = ()=>{\n        if (_codec == null) {\n            _codec = (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.message)((obj, w, opts = {})=>{\n                if (opts.lengthDelimited !== false) {\n                    w.fork();\n                }\n                if (obj.requestId != null && obj.requestId !== \"\") {\n                    w.uint32(10);\n                    w.string(obj.requestId);\n                }\n                if (obj.request != null) {\n                    w.uint32(18);\n                    PushRequest.codec().encode(obj.request, w);\n                }\n                if (obj.response != null) {\n                    w.uint32(26);\n                    PushResponse.codec().encode(obj.response, w);\n                }\n                if (opts.lengthDelimited !== false) {\n                    w.ldelim();\n                }\n            }, (reader, length, opts = {})=>{\n                const obj = {\n                    requestId: \"\"\n                };\n                const end = length == null ? reader.len : reader.pos + length;\n                while(reader.pos < end){\n                    const tag = reader.uint32();\n                    switch(tag >>> 3){\n                        case 1:\n                            {\n                                obj.requestId = reader.string();\n                                break;\n                            }\n                        case 2:\n                            {\n                                obj.request = PushRequest.codec().decode(reader, reader.uint32(), {\n                                    limits: opts.limits?.request\n                                });\n                                break;\n                            }\n                        case 3:\n                            {\n                                obj.response = PushResponse.codec().decode(reader, reader.uint32(), {\n                                    limits: opts.limits?.response\n                                });\n                                break;\n                            }\n                        default:\n                            {\n                                reader.skipType(tag & 7);\n                                break;\n                            }\n                    }\n                }\n                return obj;\n            });\n        }\n        return _codec;\n    };\n    PushRpc.encode = (obj)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.encodeMessage)(obj, PushRpc.codec());\n    };\n    PushRpc.decode = (buf, opts)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.decodeMessage)(buf, PushRpc.codec(), opts);\n    };\n})(PushRpc || (PushRpc = {}));\nvar RateLimitProof;\n(function(RateLimitProof) {\n    let _codec;\n    RateLimitProof.codec = ()=>{\n        if (_codec == null) {\n            _codec = (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.message)((obj, w, opts = {})=>{\n                if (opts.lengthDelimited !== false) {\n                    w.fork();\n                }\n                if (obj.proof != null && obj.proof.byteLength > 0) {\n                    w.uint32(10);\n                    w.bytes(obj.proof);\n                }\n                if (obj.merkleRoot != null && obj.merkleRoot.byteLength > 0) {\n                    w.uint32(18);\n                    w.bytes(obj.merkleRoot);\n                }\n                if (obj.epoch != null && obj.epoch.byteLength > 0) {\n                    w.uint32(26);\n                    w.bytes(obj.epoch);\n                }\n                if (obj.shareX != null && obj.shareX.byteLength > 0) {\n                    w.uint32(34);\n                    w.bytes(obj.shareX);\n                }\n                if (obj.shareY != null && obj.shareY.byteLength > 0) {\n                    w.uint32(42);\n                    w.bytes(obj.shareY);\n                }\n                if (obj.nullifier != null && obj.nullifier.byteLength > 0) {\n                    w.uint32(50);\n                    w.bytes(obj.nullifier);\n                }\n                if (obj.rlnIdentifier != null && obj.rlnIdentifier.byteLength > 0) {\n                    w.uint32(58);\n                    w.bytes(obj.rlnIdentifier);\n                }\n                if (opts.lengthDelimited !== false) {\n                    w.ldelim();\n                }\n            }, (reader, length, opts = {})=>{\n                const obj = {\n                    proof: (0,uint8arrays_alloc__WEBPACK_IMPORTED_MODULE_1__.alloc)(0),\n                    merkleRoot: (0,uint8arrays_alloc__WEBPACK_IMPORTED_MODULE_1__.alloc)(0),\n                    epoch: (0,uint8arrays_alloc__WEBPACK_IMPORTED_MODULE_1__.alloc)(0),\n                    shareX: (0,uint8arrays_alloc__WEBPACK_IMPORTED_MODULE_1__.alloc)(0),\n                    shareY: (0,uint8arrays_alloc__WEBPACK_IMPORTED_MODULE_1__.alloc)(0),\n                    nullifier: (0,uint8arrays_alloc__WEBPACK_IMPORTED_MODULE_1__.alloc)(0),\n                    rlnIdentifier: (0,uint8arrays_alloc__WEBPACK_IMPORTED_MODULE_1__.alloc)(0)\n                };\n                const end = length == null ? reader.len : reader.pos + length;\n                while(reader.pos < end){\n                    const tag = reader.uint32();\n                    switch(tag >>> 3){\n                        case 1:\n                            {\n                                obj.proof = reader.bytes();\n                                break;\n                            }\n                        case 2:\n                            {\n                                obj.merkleRoot = reader.bytes();\n                                break;\n                            }\n                        case 3:\n                            {\n                                obj.epoch = reader.bytes();\n                                break;\n                            }\n                        case 4:\n                            {\n                                obj.shareX = reader.bytes();\n                                break;\n                            }\n                        case 5:\n                            {\n                                obj.shareY = reader.bytes();\n                                break;\n                            }\n                        case 6:\n                            {\n                                obj.nullifier = reader.bytes();\n                                break;\n                            }\n                        case 7:\n                            {\n                                obj.rlnIdentifier = reader.bytes();\n                                break;\n                            }\n                        default:\n                            {\n                                reader.skipType(tag & 7);\n                                break;\n                            }\n                    }\n                }\n                return obj;\n            });\n        }\n        return _codec;\n    };\n    RateLimitProof.encode = (obj)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.encodeMessage)(obj, RateLimitProof.codec());\n    };\n    RateLimitProof.decode = (buf, opts)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.decodeMessage)(buf, RateLimitProof.codec(), opts);\n    };\n})(RateLimitProof || (RateLimitProof = {}));\nvar WakuMessage;\n(function(WakuMessage) {\n    let _codec;\n    WakuMessage.codec = ()=>{\n        if (_codec == null) {\n            _codec = (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.message)((obj, w, opts = {})=>{\n                if (opts.lengthDelimited !== false) {\n                    w.fork();\n                }\n                if (obj.payload != null && obj.payload.byteLength > 0) {\n                    w.uint32(10);\n                    w.bytes(obj.payload);\n                }\n                if (obj.contentTopic != null && obj.contentTopic !== \"\") {\n                    w.uint32(18);\n                    w.string(obj.contentTopic);\n                }\n                if (obj.version != null) {\n                    w.uint32(24);\n                    w.uint32(obj.version);\n                }\n                if (obj.timestamp != null) {\n                    w.uint32(80);\n                    w.sint64(obj.timestamp);\n                }\n                if (obj.meta != null) {\n                    w.uint32(90);\n                    w.bytes(obj.meta);\n                }\n                if (obj.rateLimitProof != null) {\n                    w.uint32(170);\n                    RateLimitProof.codec().encode(obj.rateLimitProof, w);\n                }\n                if (obj.ephemeral != null) {\n                    w.uint32(248);\n                    w.bool(obj.ephemeral);\n                }\n                if (opts.lengthDelimited !== false) {\n                    w.ldelim();\n                }\n            }, (reader, length, opts = {})=>{\n                const obj = {\n                    payload: (0,uint8arrays_alloc__WEBPACK_IMPORTED_MODULE_1__.alloc)(0),\n                    contentTopic: \"\"\n                };\n                const end = length == null ? reader.len : reader.pos + length;\n                while(reader.pos < end){\n                    const tag = reader.uint32();\n                    switch(tag >>> 3){\n                        case 1:\n                            {\n                                obj.payload = reader.bytes();\n                                break;\n                            }\n                        case 2:\n                            {\n                                obj.contentTopic = reader.string();\n                                break;\n                            }\n                        case 3:\n                            {\n                                obj.version = reader.uint32();\n                                break;\n                            }\n                        case 10:\n                            {\n                                obj.timestamp = reader.sint64();\n                                break;\n                            }\n                        case 11:\n                            {\n                                obj.meta = reader.bytes();\n                                break;\n                            }\n                        case 21:\n                            {\n                                obj.rateLimitProof = RateLimitProof.codec().decode(reader, reader.uint32(), {\n                                    limits: opts.limits?.rateLimitProof\n                                });\n                                break;\n                            }\n                        case 31:\n                            {\n                                obj.ephemeral = reader.bool();\n                                break;\n                            }\n                        default:\n                            {\n                                reader.skipType(tag & 7);\n                                break;\n                            }\n                    }\n                }\n                return obj;\n            });\n        }\n        return _codec;\n    };\n    WakuMessage.encode = (obj)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.encodeMessage)(obj, WakuMessage.codec());\n    };\n    WakuMessage.decode = (buf, opts)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.decodeMessage)(buf, WakuMessage.codec(), opts);\n    };\n})(WakuMessage || (WakuMessage = {})); //# sourceMappingURL=light_push.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/sdk/node_modules/@waku/proto/dist/generated/light_push.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/sdk/node_modules/@waku/proto/dist/generated/message.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@waku/sdk/node_modules/@waku/proto/dist/generated/message.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RateLimitProof: () => (/* binding */ RateLimitProof),\n/* harmony export */   WakuMessage: () => (/* binding */ WakuMessage)\n/* harmony export */ });\n/* harmony import */ var protons_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! protons-runtime */ \"(ssr)/./node_modules/protons-runtime/dist/src/index.js\");\n/* harmony import */ var uint8arrays_alloc__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! uint8arrays/alloc */ \"(ssr)/./node_modules/uint8arrays/dist/src/alloc.node.js\");\n/* eslint-disable import/export */ /* eslint-disable complexity */ /* eslint-disable @typescript-eslint/no-namespace */ /* eslint-disable @typescript-eslint/no-unnecessary-boolean-literal-compare */ /* eslint-disable @typescript-eslint/no-empty-interface */ \n\nvar RateLimitProof;\n(function(RateLimitProof) {\n    let _codec;\n    RateLimitProof.codec = ()=>{\n        if (_codec == null) {\n            _codec = (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.message)((obj, w, opts = {})=>{\n                if (opts.lengthDelimited !== false) {\n                    w.fork();\n                }\n                if (obj.proof != null && obj.proof.byteLength > 0) {\n                    w.uint32(10);\n                    w.bytes(obj.proof);\n                }\n                if (obj.merkleRoot != null && obj.merkleRoot.byteLength > 0) {\n                    w.uint32(18);\n                    w.bytes(obj.merkleRoot);\n                }\n                if (obj.epoch != null && obj.epoch.byteLength > 0) {\n                    w.uint32(26);\n                    w.bytes(obj.epoch);\n                }\n                if (obj.shareX != null && obj.shareX.byteLength > 0) {\n                    w.uint32(34);\n                    w.bytes(obj.shareX);\n                }\n                if (obj.shareY != null && obj.shareY.byteLength > 0) {\n                    w.uint32(42);\n                    w.bytes(obj.shareY);\n                }\n                if (obj.nullifier != null && obj.nullifier.byteLength > 0) {\n                    w.uint32(50);\n                    w.bytes(obj.nullifier);\n                }\n                if (obj.rlnIdentifier != null && obj.rlnIdentifier.byteLength > 0) {\n                    w.uint32(58);\n                    w.bytes(obj.rlnIdentifier);\n                }\n                if (opts.lengthDelimited !== false) {\n                    w.ldelim();\n                }\n            }, (reader, length, opts = {})=>{\n                const obj = {\n                    proof: (0,uint8arrays_alloc__WEBPACK_IMPORTED_MODULE_1__.alloc)(0),\n                    merkleRoot: (0,uint8arrays_alloc__WEBPACK_IMPORTED_MODULE_1__.alloc)(0),\n                    epoch: (0,uint8arrays_alloc__WEBPACK_IMPORTED_MODULE_1__.alloc)(0),\n                    shareX: (0,uint8arrays_alloc__WEBPACK_IMPORTED_MODULE_1__.alloc)(0),\n                    shareY: (0,uint8arrays_alloc__WEBPACK_IMPORTED_MODULE_1__.alloc)(0),\n                    nullifier: (0,uint8arrays_alloc__WEBPACK_IMPORTED_MODULE_1__.alloc)(0),\n                    rlnIdentifier: (0,uint8arrays_alloc__WEBPACK_IMPORTED_MODULE_1__.alloc)(0)\n                };\n                const end = length == null ? reader.len : reader.pos + length;\n                while(reader.pos < end){\n                    const tag = reader.uint32();\n                    switch(tag >>> 3){\n                        case 1:\n                            {\n                                obj.proof = reader.bytes();\n                                break;\n                            }\n                        case 2:\n                            {\n                                obj.merkleRoot = reader.bytes();\n                                break;\n                            }\n                        case 3:\n                            {\n                                obj.epoch = reader.bytes();\n                                break;\n                            }\n                        case 4:\n                            {\n                                obj.shareX = reader.bytes();\n                                break;\n                            }\n                        case 5:\n                            {\n                                obj.shareY = reader.bytes();\n                                break;\n                            }\n                        case 6:\n                            {\n                                obj.nullifier = reader.bytes();\n                                break;\n                            }\n                        case 7:\n                            {\n                                obj.rlnIdentifier = reader.bytes();\n                                break;\n                            }\n                        default:\n                            {\n                                reader.skipType(tag & 7);\n                                break;\n                            }\n                    }\n                }\n                return obj;\n            });\n        }\n        return _codec;\n    };\n    RateLimitProof.encode = (obj)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.encodeMessage)(obj, RateLimitProof.codec());\n    };\n    RateLimitProof.decode = (buf, opts)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.decodeMessage)(buf, RateLimitProof.codec(), opts);\n    };\n})(RateLimitProof || (RateLimitProof = {}));\nvar WakuMessage;\n(function(WakuMessage) {\n    let _codec;\n    WakuMessage.codec = ()=>{\n        if (_codec == null) {\n            _codec = (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.message)((obj, w, opts = {})=>{\n                if (opts.lengthDelimited !== false) {\n                    w.fork();\n                }\n                if (obj.payload != null && obj.payload.byteLength > 0) {\n                    w.uint32(10);\n                    w.bytes(obj.payload);\n                }\n                if (obj.contentTopic != null && obj.contentTopic !== \"\") {\n                    w.uint32(18);\n                    w.string(obj.contentTopic);\n                }\n                if (obj.version != null) {\n                    w.uint32(24);\n                    w.uint32(obj.version);\n                }\n                if (obj.timestamp != null) {\n                    w.uint32(80);\n                    w.sint64(obj.timestamp);\n                }\n                if (obj.meta != null) {\n                    w.uint32(90);\n                    w.bytes(obj.meta);\n                }\n                if (obj.rateLimitProof != null) {\n                    w.uint32(170);\n                    RateLimitProof.codec().encode(obj.rateLimitProof, w);\n                }\n                if (obj.ephemeral != null) {\n                    w.uint32(248);\n                    w.bool(obj.ephemeral);\n                }\n                if (opts.lengthDelimited !== false) {\n                    w.ldelim();\n                }\n            }, (reader, length, opts = {})=>{\n                const obj = {\n                    payload: (0,uint8arrays_alloc__WEBPACK_IMPORTED_MODULE_1__.alloc)(0),\n                    contentTopic: \"\"\n                };\n                const end = length == null ? reader.len : reader.pos + length;\n                while(reader.pos < end){\n                    const tag = reader.uint32();\n                    switch(tag >>> 3){\n                        case 1:\n                            {\n                                obj.payload = reader.bytes();\n                                break;\n                            }\n                        case 2:\n                            {\n                                obj.contentTopic = reader.string();\n                                break;\n                            }\n                        case 3:\n                            {\n                                obj.version = reader.uint32();\n                                break;\n                            }\n                        case 10:\n                            {\n                                obj.timestamp = reader.sint64();\n                                break;\n                            }\n                        case 11:\n                            {\n                                obj.meta = reader.bytes();\n                                break;\n                            }\n                        case 21:\n                            {\n                                obj.rateLimitProof = RateLimitProof.codec().decode(reader, reader.uint32(), {\n                                    limits: opts.limits?.rateLimitProof\n                                });\n                                break;\n                            }\n                        case 31:\n                            {\n                                obj.ephemeral = reader.bool();\n                                break;\n                            }\n                        default:\n                            {\n                                reader.skipType(tag & 7);\n                                break;\n                            }\n                    }\n                }\n                return obj;\n            });\n        }\n        return _codec;\n    };\n    WakuMessage.encode = (obj)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.encodeMessage)(obj, WakuMessage.codec());\n    };\n    WakuMessage.decode = (buf, opts)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.decodeMessage)(buf, WakuMessage.codec(), opts);\n    };\n})(WakuMessage || (WakuMessage = {})); //# sourceMappingURL=message.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/sdk/node_modules/@waku/proto/dist/generated/message.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/sdk/node_modules/@waku/proto/dist/generated/metadata.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@waku/sdk/node_modules/@waku/proto/dist/generated/metadata.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   WakuMetadataRequest: () => (/* binding */ WakuMetadataRequest),\n/* harmony export */   WakuMetadataResponse: () => (/* binding */ WakuMetadataResponse)\n/* harmony export */ });\n/* harmony import */ var protons_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! protons-runtime */ \"(ssr)/./node_modules/protons-runtime/dist/src/index.js\");\n/* eslint-disable import/export */ /* eslint-disable complexity */ /* eslint-disable @typescript-eslint/no-namespace */ /* eslint-disable @typescript-eslint/no-unnecessary-boolean-literal-compare */ /* eslint-disable @typescript-eslint/no-empty-interface */ \nvar WakuMetadataRequest;\n(function(WakuMetadataRequest) {\n    let _codec;\n    WakuMetadataRequest.codec = ()=>{\n        if (_codec == null) {\n            _codec = (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.message)((obj, w, opts = {})=>{\n                if (opts.lengthDelimited !== false) {\n                    w.fork();\n                }\n                if (obj.clusterId != null) {\n                    w.uint32(8);\n                    w.uint32(obj.clusterId);\n                }\n                if (obj.shards != null) {\n                    for (const value of obj.shards){\n                        w.uint32(16);\n                        w.uint32(value);\n                    }\n                }\n                if (opts.lengthDelimited !== false) {\n                    w.ldelim();\n                }\n            }, (reader, length, opts = {})=>{\n                const obj = {\n                    shards: []\n                };\n                const end = length == null ? reader.len : reader.pos + length;\n                while(reader.pos < end){\n                    const tag = reader.uint32();\n                    switch(tag >>> 3){\n                        case 1:\n                            {\n                                obj.clusterId = reader.uint32();\n                                break;\n                            }\n                        case 2:\n                            {\n                                if (opts.limits?.shards != null && obj.shards.length === opts.limits.shards) {\n                                    throw new protons_runtime__WEBPACK_IMPORTED_MODULE_0__.CodeError('decode error - map field \"shards\" had too many elements', \"ERR_MAX_LENGTH\");\n                                }\n                                obj.shards.push(reader.uint32());\n                                break;\n                            }\n                        default:\n                            {\n                                reader.skipType(tag & 7);\n                                break;\n                            }\n                    }\n                }\n                return obj;\n            });\n        }\n        return _codec;\n    };\n    WakuMetadataRequest.encode = (obj)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.encodeMessage)(obj, WakuMetadataRequest.codec());\n    };\n    WakuMetadataRequest.decode = (buf, opts)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.decodeMessage)(buf, WakuMetadataRequest.codec(), opts);\n    };\n})(WakuMetadataRequest || (WakuMetadataRequest = {}));\nvar WakuMetadataResponse;\n(function(WakuMetadataResponse) {\n    let _codec;\n    WakuMetadataResponse.codec = ()=>{\n        if (_codec == null) {\n            _codec = (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.message)((obj, w, opts = {})=>{\n                if (opts.lengthDelimited !== false) {\n                    w.fork();\n                }\n                if (obj.clusterId != null) {\n                    w.uint32(8);\n                    w.uint32(obj.clusterId);\n                }\n                if (obj.shards != null) {\n                    for (const value of obj.shards){\n                        w.uint32(16);\n                        w.uint32(value);\n                    }\n                }\n                if (opts.lengthDelimited !== false) {\n                    w.ldelim();\n                }\n            }, (reader, length, opts = {})=>{\n                const obj = {\n                    shards: []\n                };\n                const end = length == null ? reader.len : reader.pos + length;\n                while(reader.pos < end){\n                    const tag = reader.uint32();\n                    switch(tag >>> 3){\n                        case 1:\n                            {\n                                obj.clusterId = reader.uint32();\n                                break;\n                            }\n                        case 2:\n                            {\n                                if (opts.limits?.shards != null && obj.shards.length === opts.limits.shards) {\n                                    throw new protons_runtime__WEBPACK_IMPORTED_MODULE_0__.CodeError('decode error - map field \"shards\" had too many elements', \"ERR_MAX_LENGTH\");\n                                }\n                                obj.shards.push(reader.uint32());\n                                break;\n                            }\n                        default:\n                            {\n                                reader.skipType(tag & 7);\n                                break;\n                            }\n                    }\n                }\n                return obj;\n            });\n        }\n        return _codec;\n    };\n    WakuMetadataResponse.encode = (obj)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.encodeMessage)(obj, WakuMetadataResponse.codec());\n    };\n    WakuMetadataResponse.decode = (buf, opts)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.decodeMessage)(buf, WakuMetadataResponse.codec(), opts);\n    };\n})(WakuMetadataResponse || (WakuMetadataResponse = {})); //# sourceMappingURL=metadata.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/sdk/node_modules/@waku/proto/dist/generated/metadata.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/sdk/node_modules/@waku/proto/dist/generated/peer_exchange.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@waku/sdk/node_modules/@waku/proto/dist/generated/peer_exchange.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PeerExchangeQuery: () => (/* binding */ PeerExchangeQuery),\n/* harmony export */   PeerExchangeRPC: () => (/* binding */ PeerExchangeRPC),\n/* harmony export */   PeerExchangeResponse: () => (/* binding */ PeerExchangeResponse),\n/* harmony export */   PeerInfo: () => (/* binding */ PeerInfo)\n/* harmony export */ });\n/* harmony import */ var protons_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! protons-runtime */ \"(ssr)/./node_modules/protons-runtime/dist/src/index.js\");\n/* eslint-disable import/export */ /* eslint-disable complexity */ /* eslint-disable @typescript-eslint/no-namespace */ /* eslint-disable @typescript-eslint/no-unnecessary-boolean-literal-compare */ /* eslint-disable @typescript-eslint/no-empty-interface */ \nvar PeerInfo;\n(function(PeerInfo) {\n    let _codec;\n    PeerInfo.codec = ()=>{\n        if (_codec == null) {\n            _codec = (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.message)((obj, w, opts = {})=>{\n                if (opts.lengthDelimited !== false) {\n                    w.fork();\n                }\n                if (obj.enr != null) {\n                    w.uint32(10);\n                    w.bytes(obj.enr);\n                }\n                if (opts.lengthDelimited !== false) {\n                    w.ldelim();\n                }\n            }, (reader, length, opts = {})=>{\n                const obj = {};\n                const end = length == null ? reader.len : reader.pos + length;\n                while(reader.pos < end){\n                    const tag = reader.uint32();\n                    switch(tag >>> 3){\n                        case 1:\n                            {\n                                obj.enr = reader.bytes();\n                                break;\n                            }\n                        default:\n                            {\n                                reader.skipType(tag & 7);\n                                break;\n                            }\n                    }\n                }\n                return obj;\n            });\n        }\n        return _codec;\n    };\n    PeerInfo.encode = (obj)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.encodeMessage)(obj, PeerInfo.codec());\n    };\n    PeerInfo.decode = (buf, opts)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.decodeMessage)(buf, PeerInfo.codec(), opts);\n    };\n})(PeerInfo || (PeerInfo = {}));\nvar PeerExchangeQuery;\n(function(PeerExchangeQuery) {\n    let _codec;\n    PeerExchangeQuery.codec = ()=>{\n        if (_codec == null) {\n            _codec = (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.message)((obj, w, opts = {})=>{\n                if (opts.lengthDelimited !== false) {\n                    w.fork();\n                }\n                if (obj.numPeers != null) {\n                    w.uint32(8);\n                    w.uint64(obj.numPeers);\n                }\n                if (opts.lengthDelimited !== false) {\n                    w.ldelim();\n                }\n            }, (reader, length, opts = {})=>{\n                const obj = {};\n                const end = length == null ? reader.len : reader.pos + length;\n                while(reader.pos < end){\n                    const tag = reader.uint32();\n                    switch(tag >>> 3){\n                        case 1:\n                            {\n                                obj.numPeers = reader.uint64();\n                                break;\n                            }\n                        default:\n                            {\n                                reader.skipType(tag & 7);\n                                break;\n                            }\n                    }\n                }\n                return obj;\n            });\n        }\n        return _codec;\n    };\n    PeerExchangeQuery.encode = (obj)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.encodeMessage)(obj, PeerExchangeQuery.codec());\n    };\n    PeerExchangeQuery.decode = (buf, opts)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.decodeMessage)(buf, PeerExchangeQuery.codec(), opts);\n    };\n})(PeerExchangeQuery || (PeerExchangeQuery = {}));\nvar PeerExchangeResponse;\n(function(PeerExchangeResponse) {\n    let _codec;\n    PeerExchangeResponse.codec = ()=>{\n        if (_codec == null) {\n            _codec = (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.message)((obj, w, opts = {})=>{\n                if (opts.lengthDelimited !== false) {\n                    w.fork();\n                }\n                if (obj.peerInfos != null) {\n                    for (const value of obj.peerInfos){\n                        w.uint32(10);\n                        PeerInfo.codec().encode(value, w);\n                    }\n                }\n                if (opts.lengthDelimited !== false) {\n                    w.ldelim();\n                }\n            }, (reader, length, opts = {})=>{\n                const obj = {\n                    peerInfos: []\n                };\n                const end = length == null ? reader.len : reader.pos + length;\n                while(reader.pos < end){\n                    const tag = reader.uint32();\n                    switch(tag >>> 3){\n                        case 1:\n                            {\n                                if (opts.limits?.peerInfos != null && obj.peerInfos.length === opts.limits.peerInfos) {\n                                    throw new protons_runtime__WEBPACK_IMPORTED_MODULE_0__.CodeError('decode error - map field \"peerInfos\" had too many elements', \"ERR_MAX_LENGTH\");\n                                }\n                                obj.peerInfos.push(PeerInfo.codec().decode(reader, reader.uint32(), {\n                                    limits: opts.limits?.peerInfos$\n                                }));\n                                break;\n                            }\n                        default:\n                            {\n                                reader.skipType(tag & 7);\n                                break;\n                            }\n                    }\n                }\n                return obj;\n            });\n        }\n        return _codec;\n    };\n    PeerExchangeResponse.encode = (obj)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.encodeMessage)(obj, PeerExchangeResponse.codec());\n    };\n    PeerExchangeResponse.decode = (buf, opts)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.decodeMessage)(buf, PeerExchangeResponse.codec(), opts);\n    };\n})(PeerExchangeResponse || (PeerExchangeResponse = {}));\nvar PeerExchangeRPC;\n(function(PeerExchangeRPC) {\n    let _codec;\n    PeerExchangeRPC.codec = ()=>{\n        if (_codec == null) {\n            _codec = (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.message)((obj, w, opts = {})=>{\n                if (opts.lengthDelimited !== false) {\n                    w.fork();\n                }\n                if (obj.query != null) {\n                    w.uint32(10);\n                    PeerExchangeQuery.codec().encode(obj.query, w);\n                }\n                if (obj.response != null) {\n                    w.uint32(18);\n                    PeerExchangeResponse.codec().encode(obj.response, w);\n                }\n                if (opts.lengthDelimited !== false) {\n                    w.ldelim();\n                }\n            }, (reader, length, opts = {})=>{\n                const obj = {};\n                const end = length == null ? reader.len : reader.pos + length;\n                while(reader.pos < end){\n                    const tag = reader.uint32();\n                    switch(tag >>> 3){\n                        case 1:\n                            {\n                                obj.query = PeerExchangeQuery.codec().decode(reader, reader.uint32(), {\n                                    limits: opts.limits?.query\n                                });\n                                break;\n                            }\n                        case 2:\n                            {\n                                obj.response = PeerExchangeResponse.codec().decode(reader, reader.uint32(), {\n                                    limits: opts.limits?.response\n                                });\n                                break;\n                            }\n                        default:\n                            {\n                                reader.skipType(tag & 7);\n                                break;\n                            }\n                    }\n                }\n                return obj;\n            });\n        }\n        return _codec;\n    };\n    PeerExchangeRPC.encode = (obj)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.encodeMessage)(obj, PeerExchangeRPC.codec());\n    };\n    PeerExchangeRPC.decode = (buf, opts)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.decodeMessage)(buf, PeerExchangeRPC.codec(), opts);\n    };\n})(PeerExchangeRPC || (PeerExchangeRPC = {})); //# sourceMappingURL=peer_exchange.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/sdk/node_modules/@waku/proto/dist/generated/peer_exchange.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/sdk/node_modules/@waku/proto/dist/generated/store.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@waku/sdk/node_modules/@waku/proto/dist/generated/store.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ContentFilter: () => (/* binding */ ContentFilter),\n/* harmony export */   HistoryQuery: () => (/* binding */ HistoryQuery),\n/* harmony export */   HistoryResponse: () => (/* binding */ HistoryResponse),\n/* harmony export */   HistoryRpc: () => (/* binding */ HistoryRpc),\n/* harmony export */   Index: () => (/* binding */ Index),\n/* harmony export */   PagingInfo: () => (/* binding */ PagingInfo),\n/* harmony export */   RateLimitProof: () => (/* binding */ RateLimitProof),\n/* harmony export */   WakuMessage: () => (/* binding */ WakuMessage)\n/* harmony export */ });\n/* harmony import */ var protons_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! protons-runtime */ \"(ssr)/./node_modules/protons-runtime/dist/src/index.js\");\n/* harmony import */ var uint8arrays_alloc__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! uint8arrays/alloc */ \"(ssr)/./node_modules/uint8arrays/dist/src/alloc.node.js\");\n/* eslint-disable import/export */ /* eslint-disable complexity */ /* eslint-disable @typescript-eslint/no-namespace */ /* eslint-disable @typescript-eslint/no-unnecessary-boolean-literal-compare */ /* eslint-disable @typescript-eslint/no-empty-interface */ \n\nvar Index;\n(function(Index) {\n    let _codec;\n    Index.codec = ()=>{\n        if (_codec == null) {\n            _codec = (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.message)((obj, w, opts = {})=>{\n                if (opts.lengthDelimited !== false) {\n                    w.fork();\n                }\n                if (obj.digest != null && obj.digest.byteLength > 0) {\n                    w.uint32(10);\n                    w.bytes(obj.digest);\n                }\n                if (obj.receiverTime != null && obj.receiverTime !== 0n) {\n                    w.uint32(16);\n                    w.sint64(obj.receiverTime);\n                }\n                if (obj.senderTime != null && obj.senderTime !== 0n) {\n                    w.uint32(24);\n                    w.sint64(obj.senderTime);\n                }\n                if (obj.pubsubTopic != null && obj.pubsubTopic !== \"\") {\n                    w.uint32(34);\n                    w.string(obj.pubsubTopic);\n                }\n                if (opts.lengthDelimited !== false) {\n                    w.ldelim();\n                }\n            }, (reader, length, opts = {})=>{\n                const obj = {\n                    digest: (0,uint8arrays_alloc__WEBPACK_IMPORTED_MODULE_1__.alloc)(0),\n                    receiverTime: 0n,\n                    senderTime: 0n,\n                    pubsubTopic: \"\"\n                };\n                const end = length == null ? reader.len : reader.pos + length;\n                while(reader.pos < end){\n                    const tag = reader.uint32();\n                    switch(tag >>> 3){\n                        case 1:\n                            {\n                                obj.digest = reader.bytes();\n                                break;\n                            }\n                        case 2:\n                            {\n                                obj.receiverTime = reader.sint64();\n                                break;\n                            }\n                        case 3:\n                            {\n                                obj.senderTime = reader.sint64();\n                                break;\n                            }\n                        case 4:\n                            {\n                                obj.pubsubTopic = reader.string();\n                                break;\n                            }\n                        default:\n                            {\n                                reader.skipType(tag & 7);\n                                break;\n                            }\n                    }\n                }\n                return obj;\n            });\n        }\n        return _codec;\n    };\n    Index.encode = (obj)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.encodeMessage)(obj, Index.codec());\n    };\n    Index.decode = (buf, opts)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.decodeMessage)(buf, Index.codec(), opts);\n    };\n})(Index || (Index = {}));\nvar PagingInfo;\n(function(PagingInfo) {\n    let Direction;\n    (function(Direction) {\n        Direction[\"BACKWARD\"] = \"BACKWARD\";\n        Direction[\"FORWARD\"] = \"FORWARD\";\n    })(Direction = PagingInfo.Direction || (PagingInfo.Direction = {}));\n    let __DirectionValues;\n    (function(__DirectionValues) {\n        __DirectionValues[__DirectionValues[\"BACKWARD\"] = 0] = \"BACKWARD\";\n        __DirectionValues[__DirectionValues[\"FORWARD\"] = 1] = \"FORWARD\";\n    })(__DirectionValues || (__DirectionValues = {}));\n    (function(Direction) {\n        Direction.codec = ()=>{\n            return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.enumeration)(__DirectionValues);\n        };\n    })(Direction = PagingInfo.Direction || (PagingInfo.Direction = {}));\n    let _codec;\n    PagingInfo.codec = ()=>{\n        if (_codec == null) {\n            _codec = (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.message)((obj, w, opts = {})=>{\n                if (opts.lengthDelimited !== false) {\n                    w.fork();\n                }\n                if (obj.pageSize != null) {\n                    w.uint32(8);\n                    w.uint64(obj.pageSize);\n                }\n                if (obj.cursor != null) {\n                    w.uint32(18);\n                    Index.codec().encode(obj.cursor, w);\n                }\n                if (obj.direction != null) {\n                    w.uint32(24);\n                    PagingInfo.Direction.codec().encode(obj.direction, w);\n                }\n                if (opts.lengthDelimited !== false) {\n                    w.ldelim();\n                }\n            }, (reader, length, opts = {})=>{\n                const obj = {};\n                const end = length == null ? reader.len : reader.pos + length;\n                while(reader.pos < end){\n                    const tag = reader.uint32();\n                    switch(tag >>> 3){\n                        case 1:\n                            {\n                                obj.pageSize = reader.uint64();\n                                break;\n                            }\n                        case 2:\n                            {\n                                obj.cursor = Index.codec().decode(reader, reader.uint32(), {\n                                    limits: opts.limits?.cursor\n                                });\n                                break;\n                            }\n                        case 3:\n                            {\n                                obj.direction = PagingInfo.Direction.codec().decode(reader);\n                                break;\n                            }\n                        default:\n                            {\n                                reader.skipType(tag & 7);\n                                break;\n                            }\n                    }\n                }\n                return obj;\n            });\n        }\n        return _codec;\n    };\n    PagingInfo.encode = (obj)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.encodeMessage)(obj, PagingInfo.codec());\n    };\n    PagingInfo.decode = (buf, opts)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.decodeMessage)(buf, PagingInfo.codec(), opts);\n    };\n})(PagingInfo || (PagingInfo = {}));\nvar ContentFilter;\n(function(ContentFilter) {\n    let _codec;\n    ContentFilter.codec = ()=>{\n        if (_codec == null) {\n            _codec = (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.message)((obj, w, opts = {})=>{\n                if (opts.lengthDelimited !== false) {\n                    w.fork();\n                }\n                if (obj.contentTopic != null && obj.contentTopic !== \"\") {\n                    w.uint32(10);\n                    w.string(obj.contentTopic);\n                }\n                if (opts.lengthDelimited !== false) {\n                    w.ldelim();\n                }\n            }, (reader, length, opts = {})=>{\n                const obj = {\n                    contentTopic: \"\"\n                };\n                const end = length == null ? reader.len : reader.pos + length;\n                while(reader.pos < end){\n                    const tag = reader.uint32();\n                    switch(tag >>> 3){\n                        case 1:\n                            {\n                                obj.contentTopic = reader.string();\n                                break;\n                            }\n                        default:\n                            {\n                                reader.skipType(tag & 7);\n                                break;\n                            }\n                    }\n                }\n                return obj;\n            });\n        }\n        return _codec;\n    };\n    ContentFilter.encode = (obj)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.encodeMessage)(obj, ContentFilter.codec());\n    };\n    ContentFilter.decode = (buf, opts)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.decodeMessage)(buf, ContentFilter.codec(), opts);\n    };\n})(ContentFilter || (ContentFilter = {}));\nvar HistoryQuery;\n(function(HistoryQuery) {\n    let _codec;\n    HistoryQuery.codec = ()=>{\n        if (_codec == null) {\n            _codec = (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.message)((obj, w, opts = {})=>{\n                if (opts.lengthDelimited !== false) {\n                    w.fork();\n                }\n                if (obj.pubsubTopic != null) {\n                    w.uint32(18);\n                    w.string(obj.pubsubTopic);\n                }\n                if (obj.contentFilters != null) {\n                    for (const value of obj.contentFilters){\n                        w.uint32(26);\n                        ContentFilter.codec().encode(value, w);\n                    }\n                }\n                if (obj.pagingInfo != null) {\n                    w.uint32(34);\n                    PagingInfo.codec().encode(obj.pagingInfo, w);\n                }\n                if (obj.startTime != null) {\n                    w.uint32(40);\n                    w.sint64(obj.startTime);\n                }\n                if (obj.endTime != null) {\n                    w.uint32(48);\n                    w.sint64(obj.endTime);\n                }\n                if (opts.lengthDelimited !== false) {\n                    w.ldelim();\n                }\n            }, (reader, length, opts = {})=>{\n                const obj = {\n                    contentFilters: []\n                };\n                const end = length == null ? reader.len : reader.pos + length;\n                while(reader.pos < end){\n                    const tag = reader.uint32();\n                    switch(tag >>> 3){\n                        case 2:\n                            {\n                                obj.pubsubTopic = reader.string();\n                                break;\n                            }\n                        case 3:\n                            {\n                                if (opts.limits?.contentFilters != null && obj.contentFilters.length === opts.limits.contentFilters) {\n                                    throw new protons_runtime__WEBPACK_IMPORTED_MODULE_0__.CodeError('decode error - map field \"contentFilters\" had too many elements', \"ERR_MAX_LENGTH\");\n                                }\n                                obj.contentFilters.push(ContentFilter.codec().decode(reader, reader.uint32(), {\n                                    limits: opts.limits?.contentFilters$\n                                }));\n                                break;\n                            }\n                        case 4:\n                            {\n                                obj.pagingInfo = PagingInfo.codec().decode(reader, reader.uint32(), {\n                                    limits: opts.limits?.pagingInfo\n                                });\n                                break;\n                            }\n                        case 5:\n                            {\n                                obj.startTime = reader.sint64();\n                                break;\n                            }\n                        case 6:\n                            {\n                                obj.endTime = reader.sint64();\n                                break;\n                            }\n                        default:\n                            {\n                                reader.skipType(tag & 7);\n                                break;\n                            }\n                    }\n                }\n                return obj;\n            });\n        }\n        return _codec;\n    };\n    HistoryQuery.encode = (obj)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.encodeMessage)(obj, HistoryQuery.codec());\n    };\n    HistoryQuery.decode = (buf, opts)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.decodeMessage)(buf, HistoryQuery.codec(), opts);\n    };\n})(HistoryQuery || (HistoryQuery = {}));\nvar HistoryResponse;\n(function(HistoryResponse) {\n    let HistoryError;\n    (function(HistoryError) {\n        HistoryError[\"NONE\"] = \"NONE\";\n        HistoryError[\"INVALID_CURSOR\"] = \"INVALID_CURSOR\";\n        HistoryError[\"TOO_MANY_RESULTS\"] = \"TOO_MANY_RESULTS\";\n        HistoryError[\"SERVICE_UNAVAILABLE\"] = \"SERVICE_UNAVAILABLE\";\n    })(HistoryError = HistoryResponse.HistoryError || (HistoryResponse.HistoryError = {}));\n    let __HistoryErrorValues;\n    (function(__HistoryErrorValues) {\n        __HistoryErrorValues[__HistoryErrorValues[\"NONE\"] = 0] = \"NONE\";\n        __HistoryErrorValues[__HistoryErrorValues[\"INVALID_CURSOR\"] = 1] = \"INVALID_CURSOR\";\n        __HistoryErrorValues[__HistoryErrorValues[\"TOO_MANY_RESULTS\"] = 429] = \"TOO_MANY_RESULTS\";\n        __HistoryErrorValues[__HistoryErrorValues[\"SERVICE_UNAVAILABLE\"] = 503] = \"SERVICE_UNAVAILABLE\";\n    })(__HistoryErrorValues || (__HistoryErrorValues = {}));\n    (function(HistoryError) {\n        HistoryError.codec = ()=>{\n            return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.enumeration)(__HistoryErrorValues);\n        };\n    })(HistoryError = HistoryResponse.HistoryError || (HistoryResponse.HistoryError = {}));\n    let _codec;\n    HistoryResponse.codec = ()=>{\n        if (_codec == null) {\n            _codec = (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.message)((obj, w, opts = {})=>{\n                if (opts.lengthDelimited !== false) {\n                    w.fork();\n                }\n                if (obj.messages != null) {\n                    for (const value of obj.messages){\n                        w.uint32(18);\n                        WakuMessage.codec().encode(value, w);\n                    }\n                }\n                if (obj.pagingInfo != null) {\n                    w.uint32(26);\n                    PagingInfo.codec().encode(obj.pagingInfo, w);\n                }\n                if (obj.error != null && __HistoryErrorValues[obj.error] !== 0) {\n                    w.uint32(32);\n                    HistoryResponse.HistoryError.codec().encode(obj.error, w);\n                }\n                if (opts.lengthDelimited !== false) {\n                    w.ldelim();\n                }\n            }, (reader, length, opts = {})=>{\n                const obj = {\n                    messages: [],\n                    error: HistoryError.NONE\n                };\n                const end = length == null ? reader.len : reader.pos + length;\n                while(reader.pos < end){\n                    const tag = reader.uint32();\n                    switch(tag >>> 3){\n                        case 2:\n                            {\n                                if (opts.limits?.messages != null && obj.messages.length === opts.limits.messages) {\n                                    throw new protons_runtime__WEBPACK_IMPORTED_MODULE_0__.CodeError('decode error - map field \"messages\" had too many elements', \"ERR_MAX_LENGTH\");\n                                }\n                                obj.messages.push(WakuMessage.codec().decode(reader, reader.uint32(), {\n                                    limits: opts.limits?.messages$\n                                }));\n                                break;\n                            }\n                        case 3:\n                            {\n                                obj.pagingInfo = PagingInfo.codec().decode(reader, reader.uint32(), {\n                                    limits: opts.limits?.pagingInfo\n                                });\n                                break;\n                            }\n                        case 4:\n                            {\n                                obj.error = HistoryResponse.HistoryError.codec().decode(reader);\n                                break;\n                            }\n                        default:\n                            {\n                                reader.skipType(tag & 7);\n                                break;\n                            }\n                    }\n                }\n                return obj;\n            });\n        }\n        return _codec;\n    };\n    HistoryResponse.encode = (obj)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.encodeMessage)(obj, HistoryResponse.codec());\n    };\n    HistoryResponse.decode = (buf, opts)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.decodeMessage)(buf, HistoryResponse.codec(), opts);\n    };\n})(HistoryResponse || (HistoryResponse = {}));\nvar HistoryRpc;\n(function(HistoryRpc) {\n    let _codec;\n    HistoryRpc.codec = ()=>{\n        if (_codec == null) {\n            _codec = (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.message)((obj, w, opts = {})=>{\n                if (opts.lengthDelimited !== false) {\n                    w.fork();\n                }\n                if (obj.requestId != null && obj.requestId !== \"\") {\n                    w.uint32(10);\n                    w.string(obj.requestId);\n                }\n                if (obj.query != null) {\n                    w.uint32(18);\n                    HistoryQuery.codec().encode(obj.query, w);\n                }\n                if (obj.response != null) {\n                    w.uint32(26);\n                    HistoryResponse.codec().encode(obj.response, w);\n                }\n                if (opts.lengthDelimited !== false) {\n                    w.ldelim();\n                }\n            }, (reader, length, opts = {})=>{\n                const obj = {\n                    requestId: \"\"\n                };\n                const end = length == null ? reader.len : reader.pos + length;\n                while(reader.pos < end){\n                    const tag = reader.uint32();\n                    switch(tag >>> 3){\n                        case 1:\n                            {\n                                obj.requestId = reader.string();\n                                break;\n                            }\n                        case 2:\n                            {\n                                obj.query = HistoryQuery.codec().decode(reader, reader.uint32(), {\n                                    limits: opts.limits?.query\n                                });\n                                break;\n                            }\n                        case 3:\n                            {\n                                obj.response = HistoryResponse.codec().decode(reader, reader.uint32(), {\n                                    limits: opts.limits?.response\n                                });\n                                break;\n                            }\n                        default:\n                            {\n                                reader.skipType(tag & 7);\n                                break;\n                            }\n                    }\n                }\n                return obj;\n            });\n        }\n        return _codec;\n    };\n    HistoryRpc.encode = (obj)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.encodeMessage)(obj, HistoryRpc.codec());\n    };\n    HistoryRpc.decode = (buf, opts)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.decodeMessage)(buf, HistoryRpc.codec(), opts);\n    };\n})(HistoryRpc || (HistoryRpc = {}));\nvar RateLimitProof;\n(function(RateLimitProof) {\n    let _codec;\n    RateLimitProof.codec = ()=>{\n        if (_codec == null) {\n            _codec = (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.message)((obj, w, opts = {})=>{\n                if (opts.lengthDelimited !== false) {\n                    w.fork();\n                }\n                if (obj.proof != null && obj.proof.byteLength > 0) {\n                    w.uint32(10);\n                    w.bytes(obj.proof);\n                }\n                if (obj.merkleRoot != null && obj.merkleRoot.byteLength > 0) {\n                    w.uint32(18);\n                    w.bytes(obj.merkleRoot);\n                }\n                if (obj.epoch != null && obj.epoch.byteLength > 0) {\n                    w.uint32(26);\n                    w.bytes(obj.epoch);\n                }\n                if (obj.shareX != null && obj.shareX.byteLength > 0) {\n                    w.uint32(34);\n                    w.bytes(obj.shareX);\n                }\n                if (obj.shareY != null && obj.shareY.byteLength > 0) {\n                    w.uint32(42);\n                    w.bytes(obj.shareY);\n                }\n                if (obj.nullifier != null && obj.nullifier.byteLength > 0) {\n                    w.uint32(50);\n                    w.bytes(obj.nullifier);\n                }\n                if (obj.rlnIdentifier != null && obj.rlnIdentifier.byteLength > 0) {\n                    w.uint32(58);\n                    w.bytes(obj.rlnIdentifier);\n                }\n                if (opts.lengthDelimited !== false) {\n                    w.ldelim();\n                }\n            }, (reader, length, opts = {})=>{\n                const obj = {\n                    proof: (0,uint8arrays_alloc__WEBPACK_IMPORTED_MODULE_1__.alloc)(0),\n                    merkleRoot: (0,uint8arrays_alloc__WEBPACK_IMPORTED_MODULE_1__.alloc)(0),\n                    epoch: (0,uint8arrays_alloc__WEBPACK_IMPORTED_MODULE_1__.alloc)(0),\n                    shareX: (0,uint8arrays_alloc__WEBPACK_IMPORTED_MODULE_1__.alloc)(0),\n                    shareY: (0,uint8arrays_alloc__WEBPACK_IMPORTED_MODULE_1__.alloc)(0),\n                    nullifier: (0,uint8arrays_alloc__WEBPACK_IMPORTED_MODULE_1__.alloc)(0),\n                    rlnIdentifier: (0,uint8arrays_alloc__WEBPACK_IMPORTED_MODULE_1__.alloc)(0)\n                };\n                const end = length == null ? reader.len : reader.pos + length;\n                while(reader.pos < end){\n                    const tag = reader.uint32();\n                    switch(tag >>> 3){\n                        case 1:\n                            {\n                                obj.proof = reader.bytes();\n                                break;\n                            }\n                        case 2:\n                            {\n                                obj.merkleRoot = reader.bytes();\n                                break;\n                            }\n                        case 3:\n                            {\n                                obj.epoch = reader.bytes();\n                                break;\n                            }\n                        case 4:\n                            {\n                                obj.shareX = reader.bytes();\n                                break;\n                            }\n                        case 5:\n                            {\n                                obj.shareY = reader.bytes();\n                                break;\n                            }\n                        case 6:\n                            {\n                                obj.nullifier = reader.bytes();\n                                break;\n                            }\n                        case 7:\n                            {\n                                obj.rlnIdentifier = reader.bytes();\n                                break;\n                            }\n                        default:\n                            {\n                                reader.skipType(tag & 7);\n                                break;\n                            }\n                    }\n                }\n                return obj;\n            });\n        }\n        return _codec;\n    };\n    RateLimitProof.encode = (obj)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.encodeMessage)(obj, RateLimitProof.codec());\n    };\n    RateLimitProof.decode = (buf, opts)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.decodeMessage)(buf, RateLimitProof.codec(), opts);\n    };\n})(RateLimitProof || (RateLimitProof = {}));\nvar WakuMessage;\n(function(WakuMessage) {\n    let _codec;\n    WakuMessage.codec = ()=>{\n        if (_codec == null) {\n            _codec = (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.message)((obj, w, opts = {})=>{\n                if (opts.lengthDelimited !== false) {\n                    w.fork();\n                }\n                if (obj.payload != null && obj.payload.byteLength > 0) {\n                    w.uint32(10);\n                    w.bytes(obj.payload);\n                }\n                if (obj.contentTopic != null && obj.contentTopic !== \"\") {\n                    w.uint32(18);\n                    w.string(obj.contentTopic);\n                }\n                if (obj.version != null) {\n                    w.uint32(24);\n                    w.uint32(obj.version);\n                }\n                if (obj.timestamp != null) {\n                    w.uint32(80);\n                    w.sint64(obj.timestamp);\n                }\n                if (obj.meta != null) {\n                    w.uint32(90);\n                    w.bytes(obj.meta);\n                }\n                if (obj.rateLimitProof != null) {\n                    w.uint32(170);\n                    RateLimitProof.codec().encode(obj.rateLimitProof, w);\n                }\n                if (obj.ephemeral != null) {\n                    w.uint32(248);\n                    w.bool(obj.ephemeral);\n                }\n                if (opts.lengthDelimited !== false) {\n                    w.ldelim();\n                }\n            }, (reader, length, opts = {})=>{\n                const obj = {\n                    payload: (0,uint8arrays_alloc__WEBPACK_IMPORTED_MODULE_1__.alloc)(0),\n                    contentTopic: \"\"\n                };\n                const end = length == null ? reader.len : reader.pos + length;\n                while(reader.pos < end){\n                    const tag = reader.uint32();\n                    switch(tag >>> 3){\n                        case 1:\n                            {\n                                obj.payload = reader.bytes();\n                                break;\n                            }\n                        case 2:\n                            {\n                                obj.contentTopic = reader.string();\n                                break;\n                            }\n                        case 3:\n                            {\n                                obj.version = reader.uint32();\n                                break;\n                            }\n                        case 10:\n                            {\n                                obj.timestamp = reader.sint64();\n                                break;\n                            }\n                        case 11:\n                            {\n                                obj.meta = reader.bytes();\n                                break;\n                            }\n                        case 21:\n                            {\n                                obj.rateLimitProof = RateLimitProof.codec().decode(reader, reader.uint32(), {\n                                    limits: opts.limits?.rateLimitProof\n                                });\n                                break;\n                            }\n                        case 31:\n                            {\n                                obj.ephemeral = reader.bool();\n                                break;\n                            }\n                        default:\n                            {\n                                reader.skipType(tag & 7);\n                                break;\n                            }\n                    }\n                }\n                return obj;\n            });\n        }\n        return _codec;\n    };\n    WakuMessage.encode = (obj)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.encodeMessage)(obj, WakuMessage.codec());\n    };\n    WakuMessage.decode = (buf, opts)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.decodeMessage)(buf, WakuMessage.codec(), opts);\n    };\n})(WakuMessage || (WakuMessage = {})); //# sourceMappingURL=store.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/sdk/node_modules/@waku/proto/dist/generated/store.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/sdk/node_modules/@waku/proto/dist/generated/topic_only_message.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/@waku/sdk/node_modules/@waku/proto/dist/generated/topic_only_message.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   TopicOnlyMessage: () => (/* binding */ TopicOnlyMessage)\n/* harmony export */ });\n/* harmony import */ var protons_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! protons-runtime */ \"(ssr)/./node_modules/protons-runtime/dist/src/index.js\");\n/* eslint-disable import/export */ /* eslint-disable complexity */ /* eslint-disable @typescript-eslint/no-namespace */ /* eslint-disable @typescript-eslint/no-unnecessary-boolean-literal-compare */ /* eslint-disable @typescript-eslint/no-empty-interface */ \nvar TopicOnlyMessage;\n(function(TopicOnlyMessage) {\n    let _codec;\n    TopicOnlyMessage.codec = ()=>{\n        if (_codec == null) {\n            _codec = (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.message)((obj, w, opts = {})=>{\n                if (opts.lengthDelimited !== false) {\n                    w.fork();\n                }\n                if (obj.contentTopic != null && obj.contentTopic !== \"\") {\n                    w.uint32(18);\n                    w.string(obj.contentTopic);\n                }\n                if (opts.lengthDelimited !== false) {\n                    w.ldelim();\n                }\n            }, (reader, length, opts = {})=>{\n                const obj = {\n                    contentTopic: \"\"\n                };\n                const end = length == null ? reader.len : reader.pos + length;\n                while(reader.pos < end){\n                    const tag = reader.uint32();\n                    switch(tag >>> 3){\n                        case 2:\n                            {\n                                obj.contentTopic = reader.string();\n                                break;\n                            }\n                        default:\n                            {\n                                reader.skipType(tag & 7);\n                                break;\n                            }\n                    }\n                }\n                return obj;\n            });\n        }\n        return _codec;\n    };\n    TopicOnlyMessage.encode = (obj)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.encodeMessage)(obj, TopicOnlyMessage.codec());\n    };\n    TopicOnlyMessage.decode = (buf, opts)=>{\n        return (0,protons_runtime__WEBPACK_IMPORTED_MODULE_0__.decodeMessage)(buf, TopicOnlyMessage.codec(), opts);\n    };\n})(TopicOnlyMessage || (TopicOnlyMessage = {})); //# sourceMappingURL=topic_only_message.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdha3Uvc2RrL25vZGVfbW9kdWxlcy9Ad2FrdS9wcm90by9kaXN0L2dlbmVyYXRlZC90b3BpY19vbmx5X21lc3NhZ2UuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxnQ0FBZ0MsR0FDaEMsNkJBQTZCLEdBQzdCLGtEQUFrRCxHQUNsRCw0RUFBNEUsR0FDNUUsd0RBQXdELEdBQ2dCO0FBQ2pFLElBQUlHLGlCQUFpQjtBQUMzQixVQUFVQSxnQkFBZ0I7SUFDdkIsSUFBSUM7SUFDSkQsaUJBQWlCRSxLQUFLLEdBQUc7UUFDckIsSUFBSUQsVUFBVSxNQUFNO1lBQ2hCQSxTQUFTRix3REFBT0EsQ0FBQyxDQUFDSSxLQUFLQyxHQUFHQyxPQUFPLENBQUMsQ0FBQztnQkFDL0IsSUFBSUEsS0FBS0MsZUFBZSxLQUFLLE9BQU87b0JBQ2hDRixFQUFFRyxJQUFJO2dCQUNWO2dCQUNBLElBQUtKLElBQUlLLFlBQVksSUFBSSxRQUFRTCxJQUFJSyxZQUFZLEtBQUssSUFBSztvQkFDdkRKLEVBQUVLLE1BQU0sQ0FBQztvQkFDVEwsRUFBRU0sTUFBTSxDQUFDUCxJQUFJSyxZQUFZO2dCQUM3QjtnQkFDQSxJQUFJSCxLQUFLQyxlQUFlLEtBQUssT0FBTztvQkFDaENGLEVBQUVPLE1BQU07Z0JBQ1o7WUFDSixHQUFHLENBQUNDLFFBQVFDLFFBQVFSLE9BQU8sQ0FBQyxDQUFDO2dCQUN6QixNQUFNRixNQUFNO29CQUNSSyxjQUFjO2dCQUNsQjtnQkFDQSxNQUFNTSxNQUFNRCxVQUFVLE9BQU9ELE9BQU9HLEdBQUcsR0FBR0gsT0FBT0ksR0FBRyxHQUFHSDtnQkFDdkQsTUFBT0QsT0FBT0ksR0FBRyxHQUFHRixJQUFLO29CQUNyQixNQUFNRyxNQUFNTCxPQUFPSCxNQUFNO29CQUN6QixPQUFRUSxRQUFRO3dCQUNaLEtBQUs7NEJBQUc7Z0NBQ0pkLElBQUlLLFlBQVksR0FBR0ksT0FBT0YsTUFBTTtnQ0FDaEM7NEJBQ0o7d0JBQ0E7NEJBQVM7Z0NBQ0xFLE9BQU9NLFFBQVEsQ0FBQ0QsTUFBTTtnQ0FDdEI7NEJBQ0o7b0JBQ0o7Z0JBQ0o7Z0JBQ0EsT0FBT2Q7WUFDWDtRQUNKO1FBQ0EsT0FBT0Y7SUFDWDtJQUNBRCxpQkFBaUJtQixNQUFNLEdBQUcsQ0FBQ2hCO1FBQ3ZCLE9BQU9MLDhEQUFhQSxDQUFDSyxLQUFLSCxpQkFBaUJFLEtBQUs7SUFDcEQ7SUFDQUYsaUJBQWlCb0IsTUFBTSxHQUFHLENBQUNDLEtBQUtoQjtRQUM1QixPQUFPUiw4REFBYUEsQ0FBQ3dCLEtBQUtyQixpQkFBaUJFLEtBQUssSUFBSUc7SUFDeEQ7QUFDSixHQUFHTCxvQkFBcUJBLENBQUFBLG1CQUFtQixDQUFDLEtBQzVDLDhDQUE4QyIsInNvdXJjZXMiOlsid2VicGFjazovL2ZsdXNoLW5vdGVzLy4vbm9kZV9tb2R1bGVzL0B3YWt1L3Nkay9ub2RlX21vZHVsZXMvQHdha3UvcHJvdG8vZGlzdC9nZW5lcmF0ZWQvdG9waWNfb25seV9tZXNzYWdlLmpzPzU4YWYiXSwic291cmNlc0NvbnRlbnQiOlsiLyogZXNsaW50LWRpc2FibGUgaW1wb3J0L2V4cG9ydCAqL1xuLyogZXNsaW50LWRpc2FibGUgY29tcGxleGl0eSAqL1xuLyogZXNsaW50LWRpc2FibGUgQHR5cGVzY3JpcHQtZXNsaW50L25vLW5hbWVzcGFjZSAqL1xuLyogZXNsaW50LWRpc2FibGUgQHR5cGVzY3JpcHQtZXNsaW50L25vLXVubmVjZXNzYXJ5LWJvb2xlYW4tbGl0ZXJhbC1jb21wYXJlICovXG4vKiBlc2xpbnQtZGlzYWJsZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tZW1wdHktaW50ZXJmYWNlICovXG5pbXBvcnQgeyBkZWNvZGVNZXNzYWdlLCBlbmNvZGVNZXNzYWdlLCBtZXNzYWdlIH0gZnJvbSAncHJvdG9ucy1ydW50aW1lJztcbmV4cG9ydCB2YXIgVG9waWNPbmx5TWVzc2FnZTtcbihmdW5jdGlvbiAoVG9waWNPbmx5TWVzc2FnZSkge1xuICAgIGxldCBfY29kZWM7XG4gICAgVG9waWNPbmx5TWVzc2FnZS5jb2RlYyA9ICgpID0+IHtcbiAgICAgICAgaWYgKF9jb2RlYyA9PSBudWxsKSB7XG4gICAgICAgICAgICBfY29kZWMgPSBtZXNzYWdlKChvYmosIHcsIG9wdHMgPSB7fSkgPT4ge1xuICAgICAgICAgICAgICAgIGlmIChvcHRzLmxlbmd0aERlbGltaXRlZCAhPT0gZmFsc2UpIHtcbiAgICAgICAgICAgICAgICAgICAgdy5mb3JrKCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlmICgob2JqLmNvbnRlbnRUb3BpYyAhPSBudWxsICYmIG9iai5jb250ZW50VG9waWMgIT09ICcnKSkge1xuICAgICAgICAgICAgICAgICAgICB3LnVpbnQzMigxOCk7XG4gICAgICAgICAgICAgICAgICAgIHcuc3RyaW5nKG9iai5jb250ZW50VG9waWMpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpZiAob3B0cy5sZW5ndGhEZWxpbWl0ZWQgIT09IGZhbHNlKSB7XG4gICAgICAgICAgICAgICAgICAgIHcubGRlbGltKCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSwgKHJlYWRlciwgbGVuZ3RoLCBvcHRzID0ge30pID0+IHtcbiAgICAgICAgICAgICAgICBjb25zdCBvYmogPSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnRlbnRUb3BpYzogJydcbiAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgICAgIGNvbnN0IGVuZCA9IGxlbmd0aCA9PSBudWxsID8gcmVhZGVyLmxlbiA6IHJlYWRlci5wb3MgKyBsZW5ndGg7XG4gICAgICAgICAgICAgICAgd2hpbGUgKHJlYWRlci5wb3MgPCBlbmQpIHtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgdGFnID0gcmVhZGVyLnVpbnQzMigpO1xuICAgICAgICAgICAgICAgICAgICBzd2l0Y2ggKHRhZyA+Pj4gMykge1xuICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSAyOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgb2JqLmNvbnRlbnRUb3BpYyA9IHJlYWRlci5zdHJpbmcoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIGRlZmF1bHQ6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZWFkZXIuc2tpcFR5cGUodGFnICYgNyk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcmV0dXJuIG9iajtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBfY29kZWM7XG4gICAgfTtcbiAgICBUb3BpY09ubHlNZXNzYWdlLmVuY29kZSA9IChvYmopID0+IHtcbiAgICAgICAgcmV0dXJuIGVuY29kZU1lc3NhZ2Uob2JqLCBUb3BpY09ubHlNZXNzYWdlLmNvZGVjKCkpO1xuICAgIH07XG4gICAgVG9waWNPbmx5TWVzc2FnZS5kZWNvZGUgPSAoYnVmLCBvcHRzKSA9PiB7XG4gICAgICAgIHJldHVybiBkZWNvZGVNZXNzYWdlKGJ1ZiwgVG9waWNPbmx5TWVzc2FnZS5jb2RlYygpLCBvcHRzKTtcbiAgICB9O1xufSkoVG9waWNPbmx5TWVzc2FnZSB8fCAoVG9waWNPbmx5TWVzc2FnZSA9IHt9KSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD10b3BpY19vbmx5X21lc3NhZ2UuanMubWFwIl0sIm5hbWVzIjpbImRlY29kZU1lc3NhZ2UiLCJlbmNvZGVNZXNzYWdlIiwibWVzc2FnZSIsIlRvcGljT25seU1lc3NhZ2UiLCJfY29kZWMiLCJjb2RlYyIsIm9iaiIsInciLCJvcHRzIiwibGVuZ3RoRGVsaW1pdGVkIiwiZm9yayIsImNvbnRlbnRUb3BpYyIsInVpbnQzMiIsInN0cmluZyIsImxkZWxpbSIsInJlYWRlciIsImxlbmd0aCIsImVuZCIsImxlbiIsInBvcyIsInRhZyIsInNraXBUeXBlIiwiZW5jb2RlIiwiZGVjb2RlIiwiYnVmIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/sdk/node_modules/@waku/proto/dist/generated/topic_only_message.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/sdk/node_modules/@waku/proto/dist/index.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@waku/sdk/node_modules/@waku/proto/dist/index.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PushResponse: () => (/* reexport safe */ _generated_light_push_js__WEBPACK_IMPORTED_MODULE_4__.PushResponse),\n/* harmony export */   TopicOnlyMessage: () => (/* reexport safe */ _generated_topic_only_message_js__WEBPACK_IMPORTED_MODULE_2__.TopicOnlyMessage),\n/* harmony export */   WakuMessage: () => (/* reexport safe */ _generated_filter_js__WEBPACK_IMPORTED_MODULE_1__.WakuMessage),\n/* harmony export */   proto_filter: () => (/* reexport module object */ _generated_filter_js__WEBPACK_IMPORTED_MODULE_1__),\n/* harmony export */   proto_filter_v2: () => (/* reexport module object */ _generated_filter_v2_js__WEBPACK_IMPORTED_MODULE_3__),\n/* harmony export */   proto_lightpush: () => (/* reexport module object */ _generated_light_push_js__WEBPACK_IMPORTED_MODULE_4__),\n/* harmony export */   proto_message: () => (/* reexport module object */ _generated_message_js__WEBPACK_IMPORTED_MODULE_0__),\n/* harmony export */   proto_metadata: () => (/* reexport module object */ _generated_metadata_js__WEBPACK_IMPORTED_MODULE_7__),\n/* harmony export */   proto_peer_exchange: () => (/* reexport module object */ _generated_peer_exchange_js__WEBPACK_IMPORTED_MODULE_6__),\n/* harmony export */   proto_store: () => (/* reexport module object */ _generated_store_js__WEBPACK_IMPORTED_MODULE_5__),\n/* harmony export */   proto_topic_only_message: () => (/* reexport module object */ _generated_topic_only_message_js__WEBPACK_IMPORTED_MODULE_2__)\n/* harmony export */ });\n/* harmony import */ var _generated_message_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./generated/message.js */ \"(ssr)/./node_modules/@waku/sdk/node_modules/@waku/proto/dist/generated/message.js\");\n/* harmony import */ var _generated_filter_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./generated/filter.js */ \"(ssr)/./node_modules/@waku/sdk/node_modules/@waku/proto/dist/generated/filter.js\");\n/* harmony import */ var _generated_topic_only_message_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./generated/topic_only_message.js */ \"(ssr)/./node_modules/@waku/sdk/node_modules/@waku/proto/dist/generated/topic_only_message.js\");\n/* harmony import */ var _generated_filter_v2_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./generated/filter_v2.js */ \"(ssr)/./node_modules/@waku/sdk/node_modules/@waku/proto/dist/generated/filter_v2.js\");\n/* harmony import */ var _generated_light_push_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./generated/light_push.js */ \"(ssr)/./node_modules/@waku/sdk/node_modules/@waku/proto/dist/generated/light_push.js\");\n/* harmony import */ var _generated_store_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./generated/store.js */ \"(ssr)/./node_modules/@waku/sdk/node_modules/@waku/proto/dist/generated/store.js\");\n/* harmony import */ var _generated_peer_exchange_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./generated/peer_exchange.js */ \"(ssr)/./node_modules/@waku/sdk/node_modules/@waku/proto/dist/generated/peer_exchange.js\");\n/* harmony import */ var _generated_metadata_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./generated/metadata.js */ \"(ssr)/./node_modules/@waku/sdk/node_modules/@waku/proto/dist/generated/metadata.js\");\n\n\n\n\n\n\n\n\n\n\n //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdha3Uvc2RrL25vZGVfbW9kdWxlcy9Ad2FrdS9wcm90by9kaXN0L2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBd0Q7QUFDSjtBQUMwQjtBQUNUO0FBQ2Y7QUFDTTtBQUNDO0FBQ0o7QUFDTDtBQUNnQjtBQUNWLENBQzFELGlDQUFpQyIsInNvdXJjZXMiOlsid2VicGFjazovL2ZsdXNoLW5vdGVzLy4vbm9kZV9tb2R1bGVzL0B3YWt1L3Nkay9ub2RlX21vZHVsZXMvQHdha3UvcHJvdG8vZGlzdC9pbmRleC5qcz9jYzgwIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCAqIGFzIHByb3RvX21lc3NhZ2UgZnJvbSBcIi4vZ2VuZXJhdGVkL21lc3NhZ2UuanNcIjtcbmV4cG9ydCB7IFdha3VNZXNzYWdlIH0gZnJvbSBcIi4vZ2VuZXJhdGVkL2ZpbHRlci5qc1wiO1xuZXhwb3J0ICogYXMgcHJvdG9fdG9waWNfb25seV9tZXNzYWdlIGZyb20gXCIuL2dlbmVyYXRlZC90b3BpY19vbmx5X21lc3NhZ2UuanNcIjtcbmV4cG9ydCB7IFRvcGljT25seU1lc3NhZ2UgfSBmcm9tIFwiLi9nZW5lcmF0ZWQvdG9waWNfb25seV9tZXNzYWdlLmpzXCI7XG5leHBvcnQgKiBhcyBwcm90b19maWx0ZXIgZnJvbSBcIi4vZ2VuZXJhdGVkL2ZpbHRlci5qc1wiO1xuZXhwb3J0ICogYXMgcHJvdG9fZmlsdGVyX3YyIGZyb20gXCIuL2dlbmVyYXRlZC9maWx0ZXJfdjIuanNcIjtcbmV4cG9ydCAqIGFzIHByb3RvX2xpZ2h0cHVzaCBmcm9tIFwiLi9nZW5lcmF0ZWQvbGlnaHRfcHVzaC5qc1wiO1xuZXhwb3J0IHsgUHVzaFJlc3BvbnNlIH0gZnJvbSBcIi4vZ2VuZXJhdGVkL2xpZ2h0X3B1c2guanNcIjtcbmV4cG9ydCAqIGFzIHByb3RvX3N0b3JlIGZyb20gXCIuL2dlbmVyYXRlZC9zdG9yZS5qc1wiO1xuZXhwb3J0ICogYXMgcHJvdG9fcGVlcl9leGNoYW5nZSBmcm9tIFwiLi9nZW5lcmF0ZWQvcGVlcl9leGNoYW5nZS5qc1wiO1xuZXhwb3J0ICogYXMgcHJvdG9fbWV0YWRhdGEgZnJvbSAnLi9nZW5lcmF0ZWQvbWV0YWRhdGEuanMnO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbInByb3RvX21lc3NhZ2UiLCJXYWt1TWVzc2FnZSIsInByb3RvX3RvcGljX29ubHlfbWVzc2FnZSIsIlRvcGljT25seU1lc3NhZ2UiLCJwcm90b19maWx0ZXIiLCJwcm90b19maWx0ZXJfdjIiLCJwcm90b19saWdodHB1c2giLCJQdXNoUmVzcG9uc2UiLCJwcm90b19zdG9yZSIsInByb3RvX3BlZXJfZXhjaGFuZ2UiLCJwcm90b19tZXRhZGF0YSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/sdk/node_modules/@waku/proto/dist/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/utils/dist/bytes/index.js":
/*!******************************************************!*\
  !*** ./node_modules/@waku/utils/dist/bytes/index.js ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   bytesToHex: () => (/* binding */ bytesToHex),\n/* harmony export */   bytesToUtf8: () => (/* binding */ bytesToUtf8),\n/* harmony export */   concat: () => (/* binding */ concat),\n/* harmony export */   hexToBytes: () => (/* binding */ hexToBytes),\n/* harmony export */   utf8ToBytes: () => (/* binding */ utf8ToBytes)\n/* harmony export */ });\n/* harmony import */ var uint8arrays_from_string__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! uint8arrays/from-string */ \"(ssr)/./node_modules/uint8arrays/dist/src/from-string.node.js\");\n/* harmony import */ var uint8arrays_to_string__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! uint8arrays/to-string */ \"(ssr)/./node_modules/uint8arrays/dist/src/to-string.node.js\");\n\n\n/**\n * Convert input to a byte array.\n *\n * Handles both `0x` prefixed and non-prefixed strings.\n */ function hexToBytes(hex) {\n    if (typeof hex === \"string\") {\n        const _hex = hex.replace(/^0x/i, \"\");\n        return (0,uint8arrays_from_string__WEBPACK_IMPORTED_MODULE_0__.fromString)(_hex.toLowerCase(), \"base16\");\n    }\n    return hex;\n}\n/**\n * Convert byte array to hex string (no `0x` prefix).\n */ const bytesToHex = (bytes)=>(0,uint8arrays_to_string__WEBPACK_IMPORTED_MODULE_1__.toString)(bytes, \"base16\");\n/**\n * Decode byte array to utf-8 string.\n */ const bytesToUtf8 = (b)=>(0,uint8arrays_to_string__WEBPACK_IMPORTED_MODULE_1__.toString)(b, \"utf8\");\n/**\n * Encode utf-8 string to byte array.\n */ const utf8ToBytes = (s)=>(0,uint8arrays_from_string__WEBPACK_IMPORTED_MODULE_0__.fromString)(s, \"utf8\");\n/**\n * Concatenate using Uint8Arrays as `Buffer` has a different behavior with `DataView`\n */ function concat(byteArrays, totalLength) {\n    const len = totalLength ?? byteArrays.reduce((acc, curr)=>acc + curr.length, 0);\n    const res = new Uint8Array(len);\n    let offset = 0;\n    for (const bytes of byteArrays){\n        res.set(bytes, offset);\n        offset += bytes.length;\n    }\n    return res;\n} //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdha3UvdXRpbHMvZGlzdC9ieXRlcy9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQXFEO0FBQ0o7QUFDakQ7Ozs7Q0FJQyxHQUNNLFNBQVNFLFdBQVdDLEdBQUc7SUFDMUIsSUFBSSxPQUFPQSxRQUFRLFVBQVU7UUFDekIsTUFBTUMsT0FBT0QsSUFBSUUsT0FBTyxDQUFDLFFBQVE7UUFDakMsT0FBT0wsbUVBQVVBLENBQUNJLEtBQUtFLFdBQVcsSUFBSTtJQUMxQztJQUNBLE9BQU9IO0FBQ1g7QUFDQTs7Q0FFQyxHQUNNLE1BQU1JLGFBQWEsQ0FBQ0MsUUFBVVAsK0RBQVFBLENBQUNPLE9BQU8sVUFBVTtBQUMvRDs7Q0FFQyxHQUNNLE1BQU1DLGNBQWMsQ0FBQ0MsSUFBTVQsK0RBQVFBLENBQUNTLEdBQUcsUUFBUTtBQUN0RDs7Q0FFQyxHQUNNLE1BQU1DLGNBQWMsQ0FBQ0MsSUFBTVosbUVBQVVBLENBQUNZLEdBQUcsUUFBUTtBQUN4RDs7Q0FFQyxHQUNNLFNBQVNDLE9BQU9DLFVBQVUsRUFBRUMsV0FBVztJQUMxQyxNQUFNQyxNQUFNRCxlQUFlRCxXQUFXRyxNQUFNLENBQUMsQ0FBQ0MsS0FBS0MsT0FBU0QsTUFBTUMsS0FBS0MsTUFBTSxFQUFFO0lBQy9FLE1BQU1DLE1BQU0sSUFBSUMsV0FBV047SUFDM0IsSUFBSU8sU0FBUztJQUNiLEtBQUssTUFBTWYsU0FBU00sV0FBWTtRQUM1Qk8sSUFBSUcsR0FBRyxDQUFDaEIsT0FBT2U7UUFDZkEsVUFBVWYsTUFBTVksTUFBTTtJQUMxQjtJQUNBLE9BQU9DO0FBQ1gsRUFDQSxpQ0FBaUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mbHVzaC1ub3Rlcy8uL25vZGVfbW9kdWxlcy9Ad2FrdS91dGlscy9kaXN0L2J5dGVzL2luZGV4LmpzPzEwYmQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZnJvbVN0cmluZyB9IGZyb20gXCJ1aW50OGFycmF5cy9mcm9tLXN0cmluZ1wiO1xuaW1wb3J0IHsgdG9TdHJpbmcgfSBmcm9tIFwidWludDhhcnJheXMvdG8tc3RyaW5nXCI7XG4vKipcbiAqIENvbnZlcnQgaW5wdXQgdG8gYSBieXRlIGFycmF5LlxuICpcbiAqIEhhbmRsZXMgYm90aCBgMHhgIHByZWZpeGVkIGFuZCBub24tcHJlZml4ZWQgc3RyaW5ncy5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGhleFRvQnl0ZXMoaGV4KSB7XG4gICAgaWYgKHR5cGVvZiBoZXggPT09IFwic3RyaW5nXCIpIHtcbiAgICAgICAgY29uc3QgX2hleCA9IGhleC5yZXBsYWNlKC9eMHgvaSwgXCJcIik7XG4gICAgICAgIHJldHVybiBmcm9tU3RyaW5nKF9oZXgudG9Mb3dlckNhc2UoKSwgXCJiYXNlMTZcIik7XG4gICAgfVxuICAgIHJldHVybiBoZXg7XG59XG4vKipcbiAqIENvbnZlcnQgYnl0ZSBhcnJheSB0byBoZXggc3RyaW5nIChubyBgMHhgIHByZWZpeCkuXG4gKi9cbmV4cG9ydCBjb25zdCBieXRlc1RvSGV4ID0gKGJ5dGVzKSA9PiB0b1N0cmluZyhieXRlcywgXCJiYXNlMTZcIik7XG4vKipcbiAqIERlY29kZSBieXRlIGFycmF5IHRvIHV0Zi04IHN0cmluZy5cbiAqL1xuZXhwb3J0IGNvbnN0IGJ5dGVzVG9VdGY4ID0gKGIpID0+IHRvU3RyaW5nKGIsIFwidXRmOFwiKTtcbi8qKlxuICogRW5jb2RlIHV0Zi04IHN0cmluZyB0byBieXRlIGFycmF5LlxuICovXG5leHBvcnQgY29uc3QgdXRmOFRvQnl0ZXMgPSAocykgPT4gZnJvbVN0cmluZyhzLCBcInV0ZjhcIik7XG4vKipcbiAqIENvbmNhdGVuYXRlIHVzaW5nIFVpbnQ4QXJyYXlzIGFzIGBCdWZmZXJgIGhhcyBhIGRpZmZlcmVudCBiZWhhdmlvciB3aXRoIGBEYXRhVmlld2BcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNvbmNhdChieXRlQXJyYXlzLCB0b3RhbExlbmd0aCkge1xuICAgIGNvbnN0IGxlbiA9IHRvdGFsTGVuZ3RoID8/IGJ5dGVBcnJheXMucmVkdWNlKChhY2MsIGN1cnIpID0+IGFjYyArIGN1cnIubGVuZ3RoLCAwKTtcbiAgICBjb25zdCByZXMgPSBuZXcgVWludDhBcnJheShsZW4pO1xuICAgIGxldCBvZmZzZXQgPSAwO1xuICAgIGZvciAoY29uc3QgYnl0ZXMgb2YgYnl0ZUFycmF5cykge1xuICAgICAgICByZXMuc2V0KGJ5dGVzLCBvZmZzZXQpO1xuICAgICAgICBvZmZzZXQgKz0gYnl0ZXMubGVuZ3RoO1xuICAgIH1cbiAgICByZXR1cm4gcmVzO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbImZyb21TdHJpbmciLCJ0b1N0cmluZyIsImhleFRvQnl0ZXMiLCJoZXgiLCJfaGV4IiwicmVwbGFjZSIsInRvTG93ZXJDYXNlIiwiYnl0ZXNUb0hleCIsImJ5dGVzIiwiYnl0ZXNUb1V0ZjgiLCJiIiwidXRmOFRvQnl0ZXMiLCJzIiwiY29uY2F0IiwiYnl0ZUFycmF5cyIsInRvdGFsTGVuZ3RoIiwibGVuIiwicmVkdWNlIiwiYWNjIiwiY3VyciIsImxlbmd0aCIsInJlcyIsIlVpbnQ4QXJyYXkiLCJvZmZzZXQiLCJzZXQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/utils/dist/bytes/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/utils/dist/common/group_by.js":
/*!**********************************************************!*\
  !*** ./node_modules/@waku/utils/dist/common/group_by.js ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   groupByContentTopic: () => (/* binding */ groupByContentTopic)\n/* harmony export */ });\nfunction groupByContentTopic(values) {\n    const groupedDecoders = new Map();\n    values.forEach((value)=>{\n        let decs = groupedDecoders.get(value.contentTopic);\n        if (!decs) {\n            groupedDecoders.set(value.contentTopic, []);\n            decs = groupedDecoders.get(value.contentTopic);\n        }\n        decs.push(value);\n    });\n    return groupedDecoders;\n} //# sourceMappingURL=group_by.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdha3UvdXRpbHMvZGlzdC9jb21tb24vZ3JvdXBfYnkuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFPLFNBQVNBLG9CQUFvQkMsTUFBTTtJQUN0QyxNQUFNQyxrQkFBa0IsSUFBSUM7SUFDNUJGLE9BQU9HLE9BQU8sQ0FBQyxDQUFDQztRQUNaLElBQUlDLE9BQU9KLGdCQUFnQkssR0FBRyxDQUFDRixNQUFNRyxZQUFZO1FBQ2pELElBQUksQ0FBQ0YsTUFBTTtZQUNQSixnQkFBZ0JPLEdBQUcsQ0FBQ0osTUFBTUcsWUFBWSxFQUFFLEVBQUU7WUFDMUNGLE9BQU9KLGdCQUFnQkssR0FBRyxDQUFDRixNQUFNRyxZQUFZO1FBQ2pEO1FBQ0FGLEtBQUtJLElBQUksQ0FBQ0w7SUFDZDtJQUNBLE9BQU9IO0FBQ1gsRUFDQSxvQ0FBb0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mbHVzaC1ub3Rlcy8uL25vZGVfbW9kdWxlcy9Ad2FrdS91dGlscy9kaXN0L2NvbW1vbi9ncm91cF9ieS5qcz8zYmJkIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBmdW5jdGlvbiBncm91cEJ5Q29udGVudFRvcGljKHZhbHVlcykge1xuICAgIGNvbnN0IGdyb3VwZWREZWNvZGVycyA9IG5ldyBNYXAoKTtcbiAgICB2YWx1ZXMuZm9yRWFjaCgodmFsdWUpID0+IHtcbiAgICAgICAgbGV0IGRlY3MgPSBncm91cGVkRGVjb2RlcnMuZ2V0KHZhbHVlLmNvbnRlbnRUb3BpYyk7XG4gICAgICAgIGlmICghZGVjcykge1xuICAgICAgICAgICAgZ3JvdXBlZERlY29kZXJzLnNldCh2YWx1ZS5jb250ZW50VG9waWMsIFtdKTtcbiAgICAgICAgICAgIGRlY3MgPSBncm91cGVkRGVjb2RlcnMuZ2V0KHZhbHVlLmNvbnRlbnRUb3BpYyk7XG4gICAgICAgIH1cbiAgICAgICAgZGVjcy5wdXNoKHZhbHVlKTtcbiAgICB9KTtcbiAgICByZXR1cm4gZ3JvdXBlZERlY29kZXJzO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Z3JvdXBfYnkuanMubWFwIl0sIm5hbWVzIjpbImdyb3VwQnlDb250ZW50VG9waWMiLCJ2YWx1ZXMiLCJncm91cGVkRGVjb2RlcnMiLCJNYXAiLCJmb3JFYWNoIiwidmFsdWUiLCJkZWNzIiwiZ2V0IiwiY29udGVudFRvcGljIiwic2V0IiwicHVzaCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/utils/dist/common/group_by.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/utils/dist/common/index.js":
/*!*******************************************************!*\
  !*** ./node_modules/@waku/utils/dist/common/index.js ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   contentTopicToPubsubTopic: () => (/* reexport safe */ _sharding_js__WEBPACK_IMPORTED_MODULE_5__.contentTopicToPubsubTopic),\n/* harmony export */   contentTopicToShardIndex: () => (/* reexport safe */ _sharding_js__WEBPACK_IMPORTED_MODULE_5__.contentTopicToShardIndex),\n/* harmony export */   contentTopicsByPubsubTopic: () => (/* reexport safe */ _sharding_js__WEBPACK_IMPORTED_MODULE_5__.contentTopicsByPubsubTopic),\n/* harmony export */   decodeRelayShard: () => (/* reexport safe */ _relay_shard_codec_js__WEBPACK_IMPORTED_MODULE_7__.decodeRelayShard),\n/* harmony export */   determinePubsubTopic: () => (/* reexport safe */ _sharding_js__WEBPACK_IMPORTED_MODULE_5__.determinePubsubTopic),\n/* harmony export */   encodeRelayShard: () => (/* reexport safe */ _relay_shard_codec_js__WEBPACK_IMPORTED_MODULE_7__.encodeRelayShard),\n/* harmony export */   ensurePubsubTopicIsConfigured: () => (/* reexport safe */ _sharding_js__WEBPACK_IMPORTED_MODULE_5__.ensurePubsubTopicIsConfigured),\n/* harmony export */   ensureShardingConfigured: () => (/* reexport safe */ _sharding_js__WEBPACK_IMPORTED_MODULE_5__.ensureShardingConfigured),\n/* harmony export */   ensureValidContentTopic: () => (/* reexport safe */ _sharding_js__WEBPACK_IMPORTED_MODULE_5__.ensureValidContentTopic),\n/* harmony export */   getPseudoRandomSubset: () => (/* reexport safe */ _random_subset_js__WEBPACK_IMPORTED_MODULE_1__.getPseudoRandomSubset),\n/* harmony export */   getWsMultiaddrFromMultiaddrs: () => (/* binding */ getWsMultiaddrFromMultiaddrs),\n/* harmony export */   groupByContentTopic: () => (/* reexport safe */ _group_by_js__WEBPACK_IMPORTED_MODULE_2__.groupByContentTopic),\n/* harmony export */   isDefined: () => (/* reexport safe */ _is_defined_js__WEBPACK_IMPORTED_MODULE_0__.isDefined),\n/* harmony export */   isMessageSizeUnderCap: () => (/* reexport safe */ _is_size_valid_js__WEBPACK_IMPORTED_MODULE_4__.isMessageSizeUnderCap),\n/* harmony export */   isWireSizeUnderCap: () => (/* reexport safe */ _is_size_valid_js__WEBPACK_IMPORTED_MODULE_4__.isWireSizeUnderCap),\n/* harmony export */   pubsubTopicToSingleShardInfo: () => (/* reexport safe */ _sharding_js__WEBPACK_IMPORTED_MODULE_5__.pubsubTopicToSingleShardInfo),\n/* harmony export */   pushOrInitMapSet: () => (/* reexport safe */ _push_or_init_map_js__WEBPACK_IMPORTED_MODULE_6__.pushOrInitMapSet),\n/* harmony export */   removeItemFromArray: () => (/* binding */ removeItemFromArray),\n/* harmony export */   shardInfoToPubsubTopics: () => (/* reexport safe */ _sharding_js__WEBPACK_IMPORTED_MODULE_5__.shardInfoToPubsubTopics),\n/* harmony export */   singleShardInfoToPubsubTopic: () => (/* reexport safe */ _sharding_js__WEBPACK_IMPORTED_MODULE_5__.singleShardInfoToPubsubTopic),\n/* harmony export */   singleShardInfosToShardInfo: () => (/* reexport safe */ _sharding_js__WEBPACK_IMPORTED_MODULE_5__.singleShardInfosToShardInfo),\n/* harmony export */   toAsyncIterator: () => (/* reexport safe */ _to_async_iterator_js__WEBPACK_IMPORTED_MODULE_3__.toAsyncIterator)\n/* harmony export */ });\n/* harmony import */ var _is_defined_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./is_defined.js */ \"(ssr)/./node_modules/@waku/utils/dist/common/is_defined.js\");\n/* harmony import */ var _random_subset_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./random_subset.js */ \"(ssr)/./node_modules/@waku/utils/dist/common/random_subset.js\");\n/* harmony import */ var _group_by_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./group_by.js */ \"(ssr)/./node_modules/@waku/utils/dist/common/group_by.js\");\n/* harmony import */ var _to_async_iterator_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./to_async_iterator.js */ \"(ssr)/./node_modules/@waku/utils/dist/common/to_async_iterator.js\");\n/* harmony import */ var _is_size_valid_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./is_size_valid.js */ \"(ssr)/./node_modules/@waku/utils/dist/common/is_size_valid.js\");\n/* harmony import */ var _sharding_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./sharding.js */ \"(ssr)/./node_modules/@waku/utils/dist/common/sharding.js\");\n/* harmony import */ var _push_or_init_map_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./push_or_init_map.js */ \"(ssr)/./node_modules/@waku/utils/dist/common/push_or_init_map.js\");\n/* harmony import */ var _relay_shard_codec_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./relay_shard_codec.js */ \"(ssr)/./node_modules/@waku/utils/dist/common/relay_shard_codec.js\");\n\n\n\n\n\n\n\n\nfunction removeItemFromArray(arr, value) {\n    const index = arr.indexOf(value);\n    if (index > -1) {\n        arr.splice(index, 1);\n    }\n    return arr;\n}\nfunction getWsMultiaddrFromMultiaddrs(addresses) {\n    const wsMultiaddr = addresses.find((addr)=>addr.toString().includes(\"ws\") || addr.toString().includes(\"wss\"));\n    if (!wsMultiaddr) {\n        throw new Error(\"No ws multiaddr found in the given addresses\");\n    }\n    return wsMultiaddr;\n} //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdha3UvdXRpbHMvZGlzdC9jb21tb24vaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQWdDO0FBQ0c7QUFDTDtBQUNTO0FBQ0o7QUFDTDtBQUNRO0FBQ0M7QUFDaEMsU0FBU0Esb0JBQW9CQyxHQUFHLEVBQUVDLEtBQUs7SUFDMUMsTUFBTUMsUUFBUUYsSUFBSUcsT0FBTyxDQUFDRjtJQUMxQixJQUFJQyxRQUFRLENBQUMsR0FBRztRQUNaRixJQUFJSSxNQUFNLENBQUNGLE9BQU87SUFDdEI7SUFDQSxPQUFPRjtBQUNYO0FBQ08sU0FBU0ssNkJBQTZCQyxTQUFTO0lBQ2xELE1BQU1DLGNBQWNELFVBQVVFLElBQUksQ0FBQyxDQUFDQyxPQUFTQSxLQUFLQyxRQUFRLEdBQUdDLFFBQVEsQ0FBQyxTQUFTRixLQUFLQyxRQUFRLEdBQUdDLFFBQVEsQ0FBQztJQUN4RyxJQUFJLENBQUNKLGFBQWE7UUFDZCxNQUFNLElBQUlLLE1BQU07SUFDcEI7SUFDQSxPQUFPTDtBQUNYLEVBQ0EsaUNBQWlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZmx1c2gtbm90ZXMvLi9ub2RlX21vZHVsZXMvQHdha3UvdXRpbHMvZGlzdC9jb21tb24vaW5kZXguanM/ZjRkNyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgKiBmcm9tIFwiLi9pc19kZWZpbmVkLmpzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9yYW5kb21fc3Vic2V0LmpzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9ncm91cF9ieS5qc1wiO1xuZXhwb3J0ICogZnJvbSBcIi4vdG9fYXN5bmNfaXRlcmF0b3IuanNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL2lzX3NpemVfdmFsaWQuanNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL3NoYXJkaW5nLmpzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9wdXNoX29yX2luaXRfbWFwLmpzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9yZWxheV9zaGFyZF9jb2RlYy5qc1wiO1xuZXhwb3J0IGZ1bmN0aW9uIHJlbW92ZUl0ZW1Gcm9tQXJyYXkoYXJyLCB2YWx1ZSkge1xuICAgIGNvbnN0IGluZGV4ID0gYXJyLmluZGV4T2YodmFsdWUpO1xuICAgIGlmIChpbmRleCA+IC0xKSB7XG4gICAgICAgIGFyci5zcGxpY2UoaW5kZXgsIDEpO1xuICAgIH1cbiAgICByZXR1cm4gYXJyO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGdldFdzTXVsdGlhZGRyRnJvbU11bHRpYWRkcnMoYWRkcmVzc2VzKSB7XG4gICAgY29uc3Qgd3NNdWx0aWFkZHIgPSBhZGRyZXNzZXMuZmluZCgoYWRkcikgPT4gYWRkci50b1N0cmluZygpLmluY2x1ZGVzKFwid3NcIikgfHwgYWRkci50b1N0cmluZygpLmluY2x1ZGVzKFwid3NzXCIpKTtcbiAgICBpZiAoIXdzTXVsdGlhZGRyKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIk5vIHdzIG11bHRpYWRkciBmb3VuZCBpbiB0aGUgZ2l2ZW4gYWRkcmVzc2VzXCIpO1xuICAgIH1cbiAgICByZXR1cm4gd3NNdWx0aWFkZHI7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOlsicmVtb3ZlSXRlbUZyb21BcnJheSIsImFyciIsInZhbHVlIiwiaW5kZXgiLCJpbmRleE9mIiwic3BsaWNlIiwiZ2V0V3NNdWx0aWFkZHJGcm9tTXVsdGlhZGRycyIsImFkZHJlc3NlcyIsIndzTXVsdGlhZGRyIiwiZmluZCIsImFkZHIiLCJ0b1N0cmluZyIsImluY2x1ZGVzIiwiRXJyb3IiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/utils/dist/common/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/utils/dist/common/is_defined.js":
/*!************************************************************!*\
  !*** ./node_modules/@waku/utils/dist/common/is_defined.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isDefined: () => (/* binding */ isDefined)\n/* harmony export */ });\nfunction isDefined(value) {\n    return Boolean(value);\n} //# sourceMappingURL=is_defined.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdha3UvdXRpbHMvZGlzdC9jb21tb24vaXNfZGVmaW5lZC5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQU8sU0FBU0EsVUFBVUMsS0FBSztJQUMzQixPQUFPQyxRQUFRRDtBQUNuQixFQUNBLHNDQUFzQyIsInNvdXJjZXMiOlsid2VicGFjazovL2ZsdXNoLW5vdGVzLy4vbm9kZV9tb2R1bGVzL0B3YWt1L3V0aWxzL2Rpc3QvY29tbW9uL2lzX2RlZmluZWQuanM/MGZmMCJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZnVuY3Rpb24gaXNEZWZpbmVkKHZhbHVlKSB7XG4gICAgcmV0dXJuIEJvb2xlYW4odmFsdWUpO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aXNfZGVmaW5lZC5qcy5tYXAiXSwibmFtZXMiOlsiaXNEZWZpbmVkIiwidmFsdWUiLCJCb29sZWFuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/utils/dist/common/is_defined.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/utils/dist/common/is_size_valid.js":
/*!***************************************************************!*\
  !*** ./node_modules/@waku/utils/dist/common/is_size_valid.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isMessageSizeUnderCap: () => (/* binding */ isMessageSizeUnderCap),\n/* harmony export */   isWireSizeUnderCap: () => (/* binding */ isWireSizeUnderCap)\n/* harmony export */ });\nconst MB = 1024 ** 2;\nconst SIZE_CAP_IN_MB = 1;\n/**\n * Return whether the size of the message is under the upper limit for the network.\n * This performs a protobuf encoding! If you have access to the fully encoded message,\n * use {@link isSizeUnderCapBuf} instead.\n * @param message\n * @param encoder\n */ async function isMessageSizeUnderCap(encoder, message) {\n    const buf = await encoder.toWire(message);\n    if (!buf) return false;\n    return isWireSizeUnderCap(buf);\n}\nconst isWireSizeUnderCap = (buf)=>buf.length / MB <= SIZE_CAP_IN_MB; //# sourceMappingURL=is_size_valid.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdha3UvdXRpbHMvZGlzdC9jb21tb24vaXNfc2l6ZV92YWxpZC5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBLE1BQU1BLEtBQUssUUFBUTtBQUNuQixNQUFNQyxpQkFBaUI7QUFDdkI7Ozs7OztDQU1DLEdBQ00sZUFBZUMsc0JBQXNCQyxPQUFPLEVBQUVDLE9BQU87SUFDeEQsTUFBTUMsTUFBTSxNQUFNRixRQUFRRyxNQUFNLENBQUNGO0lBQ2pDLElBQUksQ0FBQ0MsS0FDRCxPQUFPO0lBQ1gsT0FBT0UsbUJBQW1CRjtBQUM5QjtBQUNPLE1BQU1FLHFCQUFxQixDQUFDRixNQUFRQSxJQUFJRyxNQUFNLEdBQUdSLE1BQU1DLGVBQWUsQ0FDN0UseUNBQXlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZmx1c2gtbm90ZXMvLi9ub2RlX21vZHVsZXMvQHdha3UvdXRpbHMvZGlzdC9jb21tb24vaXNfc2l6ZV92YWxpZC5qcz80MGI3Il0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IE1CID0gMTAyNCAqKiAyO1xuY29uc3QgU0laRV9DQVBfSU5fTUIgPSAxO1xuLyoqXG4gKiBSZXR1cm4gd2hldGhlciB0aGUgc2l6ZSBvZiB0aGUgbWVzc2FnZSBpcyB1bmRlciB0aGUgdXBwZXIgbGltaXQgZm9yIHRoZSBuZXR3b3JrLlxuICogVGhpcyBwZXJmb3JtcyBhIHByb3RvYnVmIGVuY29kaW5nISBJZiB5b3UgaGF2ZSBhY2Nlc3MgdG8gdGhlIGZ1bGx5IGVuY29kZWQgbWVzc2FnZSxcbiAqIHVzZSB7QGxpbmsgaXNTaXplVW5kZXJDYXBCdWZ9IGluc3RlYWQuXG4gKiBAcGFyYW0gbWVzc2FnZVxuICogQHBhcmFtIGVuY29kZXJcbiAqL1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGlzTWVzc2FnZVNpemVVbmRlckNhcChlbmNvZGVyLCBtZXNzYWdlKSB7XG4gICAgY29uc3QgYnVmID0gYXdhaXQgZW5jb2Rlci50b1dpcmUobWVzc2FnZSk7XG4gICAgaWYgKCFidWYpXG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICByZXR1cm4gaXNXaXJlU2l6ZVVuZGVyQ2FwKGJ1Zik7XG59XG5leHBvcnQgY29uc3QgaXNXaXJlU2l6ZVVuZGVyQ2FwID0gKGJ1ZikgPT4gYnVmLmxlbmd0aCAvIE1CIDw9IFNJWkVfQ0FQX0lOX01CO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aXNfc2l6ZV92YWxpZC5qcy5tYXAiXSwibmFtZXMiOlsiTUIiLCJTSVpFX0NBUF9JTl9NQiIsImlzTWVzc2FnZVNpemVVbmRlckNhcCIsImVuY29kZXIiLCJtZXNzYWdlIiwiYnVmIiwidG9XaXJlIiwiaXNXaXJlU2l6ZVVuZGVyQ2FwIiwibGVuZ3RoIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/utils/dist/common/is_size_valid.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/utils/dist/common/push_or_init_map.js":
/*!******************************************************************!*\
  !*** ./node_modules/@waku/utils/dist/common/push_or_init_map.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   pushOrInitMapSet: () => (/* binding */ pushOrInitMapSet)\n/* harmony export */ });\nfunction pushOrInitMapSet(map, key, newValue) {\n    let arr = map.get(key);\n    if (typeof arr === \"undefined\") {\n        map.set(key, new Set());\n        arr = map.get(key);\n    }\n    arr.add(newValue);\n} //# sourceMappingURL=push_or_init_map.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdha3UvdXRpbHMvZGlzdC9jb21tb24vcHVzaF9vcl9pbml0X21hcC5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQU8sU0FBU0EsaUJBQWlCQyxHQUFHLEVBQUVDLEdBQUcsRUFBRUMsUUFBUTtJQUMvQyxJQUFJQyxNQUFNSCxJQUFJSSxHQUFHLENBQUNIO0lBQ2xCLElBQUksT0FBT0UsUUFBUSxhQUFhO1FBQzVCSCxJQUFJSyxHQUFHLENBQUNKLEtBQUssSUFBSUs7UUFDakJILE1BQU1ILElBQUlJLEdBQUcsQ0FBQ0g7SUFDbEI7SUFDQUUsSUFBSUksR0FBRyxDQUFDTDtBQUNaLEVBQ0EsNENBQTRDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZmx1c2gtbm90ZXMvLi9ub2RlX21vZHVsZXMvQHdha3UvdXRpbHMvZGlzdC9jb21tb24vcHVzaF9vcl9pbml0X21hcC5qcz8xNDFjIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBmdW5jdGlvbiBwdXNoT3JJbml0TWFwU2V0KG1hcCwga2V5LCBuZXdWYWx1ZSkge1xuICAgIGxldCBhcnIgPSBtYXAuZ2V0KGtleSk7XG4gICAgaWYgKHR5cGVvZiBhcnIgPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgICAgbWFwLnNldChrZXksIG5ldyBTZXQoKSk7XG4gICAgICAgIGFyciA9IG1hcC5nZXQoa2V5KTtcbiAgICB9XG4gICAgYXJyLmFkZChuZXdWYWx1ZSk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1wdXNoX29yX2luaXRfbWFwLmpzLm1hcCJdLCJuYW1lcyI6WyJwdXNoT3JJbml0TWFwU2V0IiwibWFwIiwia2V5IiwibmV3VmFsdWUiLCJhcnIiLCJnZXQiLCJzZXQiLCJTZXQiLCJhZGQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/utils/dist/common/push_or_init_map.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/utils/dist/common/random_subset.js":
/*!***************************************************************!*\
  !*** ./node_modules/@waku/utils/dist/common/random_subset.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getPseudoRandomSubset: () => (/* binding */ getPseudoRandomSubset)\n/* harmony export */ });\n/**\n * Return pseudo random subset of the input.\n */ function getPseudoRandomSubset(values, wantedNumber) {\n    if (values.length <= wantedNumber || values.length <= 1) {\n        return values;\n    }\n    return shuffle(values).slice(0, wantedNumber);\n}\nfunction shuffle(arr) {\n    if (arr.length <= 1) {\n        return arr;\n    }\n    const randInt = ()=>{\n        return Math.floor(Math.random() * Math.floor(arr.length));\n    };\n    for(let i = 0; i < arr.length; i++){\n        const j = randInt();\n        const tmp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = tmp;\n    }\n    return arr;\n} //# sourceMappingURL=random_subset.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdha3UvdXRpbHMvZGlzdC9jb21tb24vcmFuZG9tX3N1YnNldC5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7O0NBRUMsR0FDTSxTQUFTQSxzQkFBc0JDLE1BQU0sRUFBRUMsWUFBWTtJQUN0RCxJQUFJRCxPQUFPRSxNQUFNLElBQUlELGdCQUFnQkQsT0FBT0UsTUFBTSxJQUFJLEdBQUc7UUFDckQsT0FBT0Y7SUFDWDtJQUNBLE9BQU9HLFFBQVFILFFBQVFJLEtBQUssQ0FBQyxHQUFHSDtBQUNwQztBQUNBLFNBQVNFLFFBQVFFLEdBQUc7SUFDaEIsSUFBSUEsSUFBSUgsTUFBTSxJQUFJLEdBQUc7UUFDakIsT0FBT0c7SUFDWDtJQUNBLE1BQU1DLFVBQVU7UUFDWixPQUFPQyxLQUFLQyxLQUFLLENBQUNELEtBQUtFLE1BQU0sS0FBS0YsS0FBS0MsS0FBSyxDQUFDSCxJQUFJSCxNQUFNO0lBQzNEO0lBQ0EsSUFBSyxJQUFJUSxJQUFJLEdBQUdBLElBQUlMLElBQUlILE1BQU0sRUFBRVEsSUFBSztRQUNqQyxNQUFNQyxJQUFJTDtRQUNWLE1BQU1NLE1BQU1QLEdBQUcsQ0FBQ0ssRUFBRTtRQUNsQkwsR0FBRyxDQUFDSyxFQUFFLEdBQUdMLEdBQUcsQ0FBQ00sRUFBRTtRQUNmTixHQUFHLENBQUNNLEVBQUUsR0FBR0M7SUFDYjtJQUNBLE9BQU9QO0FBQ1gsRUFDQSx5Q0FBeUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mbHVzaC1ub3Rlcy8uL25vZGVfbW9kdWxlcy9Ad2FrdS91dGlscy9kaXN0L2NvbW1vbi9yYW5kb21fc3Vic2V0LmpzP2M4OTQiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBSZXR1cm4gcHNldWRvIHJhbmRvbSBzdWJzZXQgb2YgdGhlIGlucHV0LlxuICovXG5leHBvcnQgZnVuY3Rpb24gZ2V0UHNldWRvUmFuZG9tU3Vic2V0KHZhbHVlcywgd2FudGVkTnVtYmVyKSB7XG4gICAgaWYgKHZhbHVlcy5sZW5ndGggPD0gd2FudGVkTnVtYmVyIHx8IHZhbHVlcy5sZW5ndGggPD0gMSkge1xuICAgICAgICByZXR1cm4gdmFsdWVzO1xuICAgIH1cbiAgICByZXR1cm4gc2h1ZmZsZSh2YWx1ZXMpLnNsaWNlKDAsIHdhbnRlZE51bWJlcik7XG59XG5mdW5jdGlvbiBzaHVmZmxlKGFycikge1xuICAgIGlmIChhcnIubGVuZ3RoIDw9IDEpIHtcbiAgICAgICAgcmV0dXJuIGFycjtcbiAgICB9XG4gICAgY29uc3QgcmFuZEludCA9ICgpID0+IHtcbiAgICAgICAgcmV0dXJuIE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIE1hdGguZmxvb3IoYXJyLmxlbmd0aCkpO1xuICAgIH07XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBhcnIubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgY29uc3QgaiA9IHJhbmRJbnQoKTtcbiAgICAgICAgY29uc3QgdG1wID0gYXJyW2ldO1xuICAgICAgICBhcnJbaV0gPSBhcnJbal07XG4gICAgICAgIGFycltqXSA9IHRtcDtcbiAgICB9XG4gICAgcmV0dXJuIGFycjtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXJhbmRvbV9zdWJzZXQuanMubWFwIl0sIm5hbWVzIjpbImdldFBzZXVkb1JhbmRvbVN1YnNldCIsInZhbHVlcyIsIndhbnRlZE51bWJlciIsImxlbmd0aCIsInNodWZmbGUiLCJzbGljZSIsImFyciIsInJhbmRJbnQiLCJNYXRoIiwiZmxvb3IiLCJyYW5kb20iLCJpIiwiaiIsInRtcCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/utils/dist/common/random_subset.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/utils/dist/common/relay_shard_codec.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@waku/utils/dist/common/relay_shard_codec.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decodeRelayShard: () => (/* binding */ decodeRelayShard),\n/* harmony export */   encodeRelayShard: () => (/* binding */ encodeRelayShard)\n/* harmony export */ });\nconst decodeRelayShard = (bytes)=>{\n    // explicitly converting to Uint8Array to avoid Buffer\n    // https://github.com/libp2p/js-libp2p/issues/2146\n    bytes = new Uint8Array(bytes);\n    if (bytes.length < 3) throw new Error(\"Insufficient data\");\n    const view = new DataView(bytes.buffer);\n    const clusterId = view.getUint16(0);\n    const shards = [];\n    if (bytes.length === 130) {\n        // rsv format (Bit Vector)\n        for(let i = 0; i < 1024; i++){\n            const byteIndex = Math.floor(i / 8) + 2; // Adjusted for the 2-byte cluster field\n            const bitIndex = 7 - i % 8;\n            if (view.getUint8(byteIndex) & 1 << bitIndex) {\n                shards.push(i);\n            }\n        }\n    } else {\n        // rs format (Index List)\n        const numIndices = view.getUint8(2);\n        for(let i = 0, offset = 3; i < numIndices; i++, offset += 2){\n            if (offset + 1 >= bytes.length) throw new Error(\"Unexpected end of data\");\n            shards.push(view.getUint16(offset));\n        }\n    }\n    return {\n        clusterId,\n        shards\n    };\n};\nconst encodeRelayShard = (shardInfo)=>{\n    const { clusterId, shards } = shardInfo;\n    const totalLength = shards.length >= 64 ? 130 : 3 + 2 * shards.length;\n    const buffer = new ArrayBuffer(totalLength);\n    const view = new DataView(buffer);\n    view.setUint16(0, clusterId);\n    if (shards.length >= 64) {\n        // rsv format (Bit Vector)\n        for (const index of shards){\n            const byteIndex = Math.floor(index / 8) + 2; // Adjusted for the 2-byte cluster field\n            const bitIndex = 7 - index % 8;\n            view.setUint8(byteIndex, view.getUint8(byteIndex) | 1 << bitIndex);\n        }\n    } else {\n        // rs format (Index List)\n        view.setUint8(2, shards.length);\n        for(let i = 0, offset = 3; i < shards.length; i++, offset += 2){\n            view.setUint16(offset, shards[i]);\n        }\n    }\n    return new Uint8Array(buffer);\n}; //# sourceMappingURL=relay_shard_codec.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdha3UvdXRpbHMvZGlzdC9jb21tb24vcmVsYXlfc2hhcmRfY29kZWMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBTyxNQUFNQSxtQkFBbUIsQ0FBQ0M7SUFDN0Isc0RBQXNEO0lBQ3RELGtEQUFrRDtJQUNsREEsUUFBUSxJQUFJQyxXQUFXRDtJQUN2QixJQUFJQSxNQUFNRSxNQUFNLEdBQUcsR0FDZixNQUFNLElBQUlDLE1BQU07SUFDcEIsTUFBTUMsT0FBTyxJQUFJQyxTQUFTTCxNQUFNTSxNQUFNO0lBQ3RDLE1BQU1DLFlBQVlILEtBQUtJLFNBQVMsQ0FBQztJQUNqQyxNQUFNQyxTQUFTLEVBQUU7SUFDakIsSUFBSVQsTUFBTUUsTUFBTSxLQUFLLEtBQUs7UUFDdEIsMEJBQTBCO1FBQzFCLElBQUssSUFBSVEsSUFBSSxHQUFHQSxJQUFJLE1BQU1BLElBQUs7WUFDM0IsTUFBTUMsWUFBWUMsS0FBS0MsS0FBSyxDQUFDSCxJQUFJLEtBQUssR0FBRyx3Q0FBd0M7WUFDakYsTUFBTUksV0FBVyxJQUFLSixJQUFJO1lBQzFCLElBQUlOLEtBQUtXLFFBQVEsQ0FBQ0osYUFBYyxLQUFLRyxVQUFXO2dCQUM1Q0wsT0FBT08sSUFBSSxDQUFDTjtZQUNoQjtRQUNKO0lBQ0osT0FDSztRQUNELHlCQUF5QjtRQUN6QixNQUFNTyxhQUFhYixLQUFLVyxRQUFRLENBQUM7UUFDakMsSUFBSyxJQUFJTCxJQUFJLEdBQUdRLFNBQVMsR0FBR1IsSUFBSU8sWUFBWVAsS0FBS1EsVUFBVSxFQUFHO1lBQzFELElBQUlBLFNBQVMsS0FBS2xCLE1BQU1FLE1BQU0sRUFDMUIsTUFBTSxJQUFJQyxNQUFNO1lBQ3BCTSxPQUFPTyxJQUFJLENBQUNaLEtBQUtJLFNBQVMsQ0FBQ1U7UUFDL0I7SUFDSjtJQUNBLE9BQU87UUFBRVg7UUFBV0U7SUFBTztBQUMvQixFQUFFO0FBQ0ssTUFBTVUsbUJBQW1CLENBQUNDO0lBQzdCLE1BQU0sRUFBRWIsU0FBUyxFQUFFRSxNQUFNLEVBQUUsR0FBR1c7SUFDOUIsTUFBTUMsY0FBY1osT0FBT1AsTUFBTSxJQUFJLEtBQUssTUFBTSxJQUFJLElBQUlPLE9BQU9QLE1BQU07SUFDckUsTUFBTUksU0FBUyxJQUFJZ0IsWUFBWUQ7SUFDL0IsTUFBTWpCLE9BQU8sSUFBSUMsU0FBU0M7SUFDMUJGLEtBQUttQixTQUFTLENBQUMsR0FBR2hCO0lBQ2xCLElBQUlFLE9BQU9QLE1BQU0sSUFBSSxJQUFJO1FBQ3JCLDBCQUEwQjtRQUMxQixLQUFLLE1BQU1zQixTQUFTZixPQUFRO1lBQ3hCLE1BQU1FLFlBQVlDLEtBQUtDLEtBQUssQ0FBQ1csUUFBUSxLQUFLLEdBQUcsd0NBQXdDO1lBQ3JGLE1BQU1WLFdBQVcsSUFBS1UsUUFBUTtZQUM5QnBCLEtBQUtxQixRQUFRLENBQUNkLFdBQVdQLEtBQUtXLFFBQVEsQ0FBQ0osYUFBYyxLQUFLRztRQUM5RDtJQUNKLE9BQ0s7UUFDRCx5QkFBeUI7UUFDekJWLEtBQUtxQixRQUFRLENBQUMsR0FBR2hCLE9BQU9QLE1BQU07UUFDOUIsSUFBSyxJQUFJUSxJQUFJLEdBQUdRLFNBQVMsR0FBR1IsSUFBSUQsT0FBT1AsTUFBTSxFQUFFUSxLQUFLUSxVQUFVLEVBQUc7WUFDN0RkLEtBQUttQixTQUFTLENBQUNMLFFBQVFULE1BQU0sQ0FBQ0MsRUFBRTtRQUNwQztJQUNKO0lBQ0EsT0FBTyxJQUFJVCxXQUFXSztBQUMxQixFQUFFLENBQ0YsNkNBQTZDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZmx1c2gtbm90ZXMvLi9ub2RlX21vZHVsZXMvQHdha3UvdXRpbHMvZGlzdC9jb21tb24vcmVsYXlfc2hhcmRfY29kZWMuanM/ZGViNCJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3QgZGVjb2RlUmVsYXlTaGFyZCA9IChieXRlcykgPT4ge1xuICAgIC8vIGV4cGxpY2l0bHkgY29udmVydGluZyB0byBVaW50OEFycmF5IHRvIGF2b2lkIEJ1ZmZlclxuICAgIC8vIGh0dHBzOi8vZ2l0aHViLmNvbS9saWJwMnAvanMtbGlicDJwL2lzc3Vlcy8yMTQ2XG4gICAgYnl0ZXMgPSBuZXcgVWludDhBcnJheShieXRlcyk7XG4gICAgaWYgKGJ5dGVzLmxlbmd0aCA8IDMpXG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIkluc3VmZmljaWVudCBkYXRhXCIpO1xuICAgIGNvbnN0IHZpZXcgPSBuZXcgRGF0YVZpZXcoYnl0ZXMuYnVmZmVyKTtcbiAgICBjb25zdCBjbHVzdGVySWQgPSB2aWV3LmdldFVpbnQxNigwKTtcbiAgICBjb25zdCBzaGFyZHMgPSBbXTtcbiAgICBpZiAoYnl0ZXMubGVuZ3RoID09PSAxMzApIHtcbiAgICAgICAgLy8gcnN2IGZvcm1hdCAoQml0IFZlY3RvcilcbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCAxMDI0OyBpKyspIHtcbiAgICAgICAgICAgIGNvbnN0IGJ5dGVJbmRleCA9IE1hdGguZmxvb3IoaSAvIDgpICsgMjsgLy8gQWRqdXN0ZWQgZm9yIHRoZSAyLWJ5dGUgY2x1c3RlciBmaWVsZFxuICAgICAgICAgICAgY29uc3QgYml0SW5kZXggPSA3IC0gKGkgJSA4KTtcbiAgICAgICAgICAgIGlmICh2aWV3LmdldFVpbnQ4KGJ5dGVJbmRleCkgJiAoMSA8PCBiaXRJbmRleCkpIHtcbiAgICAgICAgICAgICAgICBzaGFyZHMucHVzaChpKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgLy8gcnMgZm9ybWF0IChJbmRleCBMaXN0KVxuICAgICAgICBjb25zdCBudW1JbmRpY2VzID0gdmlldy5nZXRVaW50OCgyKTtcbiAgICAgICAgZm9yIChsZXQgaSA9IDAsIG9mZnNldCA9IDM7IGkgPCBudW1JbmRpY2VzOyBpKyssIG9mZnNldCArPSAyKSB7XG4gICAgICAgICAgICBpZiAob2Zmc2V0ICsgMSA+PSBieXRlcy5sZW5ndGgpXG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiVW5leHBlY3RlZCBlbmQgb2YgZGF0YVwiKTtcbiAgICAgICAgICAgIHNoYXJkcy5wdXNoKHZpZXcuZ2V0VWludDE2KG9mZnNldCkpO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiB7IGNsdXN0ZXJJZCwgc2hhcmRzIH07XG59O1xuZXhwb3J0IGNvbnN0IGVuY29kZVJlbGF5U2hhcmQgPSAoc2hhcmRJbmZvKSA9PiB7XG4gICAgY29uc3QgeyBjbHVzdGVySWQsIHNoYXJkcyB9ID0gc2hhcmRJbmZvO1xuICAgIGNvbnN0IHRvdGFsTGVuZ3RoID0gc2hhcmRzLmxlbmd0aCA+PSA2NCA/IDEzMCA6IDMgKyAyICogc2hhcmRzLmxlbmd0aDtcbiAgICBjb25zdCBidWZmZXIgPSBuZXcgQXJyYXlCdWZmZXIodG90YWxMZW5ndGgpO1xuICAgIGNvbnN0IHZpZXcgPSBuZXcgRGF0YVZpZXcoYnVmZmVyKTtcbiAgICB2aWV3LnNldFVpbnQxNigwLCBjbHVzdGVySWQpO1xuICAgIGlmIChzaGFyZHMubGVuZ3RoID49IDY0KSB7XG4gICAgICAgIC8vIHJzdiBmb3JtYXQgKEJpdCBWZWN0b3IpXG4gICAgICAgIGZvciAoY29uc3QgaW5kZXggb2Ygc2hhcmRzKSB7XG4gICAgICAgICAgICBjb25zdCBieXRlSW5kZXggPSBNYXRoLmZsb29yKGluZGV4IC8gOCkgKyAyOyAvLyBBZGp1c3RlZCBmb3IgdGhlIDItYnl0ZSBjbHVzdGVyIGZpZWxkXG4gICAgICAgICAgICBjb25zdCBiaXRJbmRleCA9IDcgLSAoaW5kZXggJSA4KTtcbiAgICAgICAgICAgIHZpZXcuc2V0VWludDgoYnl0ZUluZGV4LCB2aWV3LmdldFVpbnQ4KGJ5dGVJbmRleCkgfCAoMSA8PCBiaXRJbmRleCkpO1xuICAgICAgICB9XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICAvLyBycyBmb3JtYXQgKEluZGV4IExpc3QpXG4gICAgICAgIHZpZXcuc2V0VWludDgoMiwgc2hhcmRzLmxlbmd0aCk7XG4gICAgICAgIGZvciAobGV0IGkgPSAwLCBvZmZzZXQgPSAzOyBpIDwgc2hhcmRzLmxlbmd0aDsgaSsrLCBvZmZzZXQgKz0gMikge1xuICAgICAgICAgICAgdmlldy5zZXRVaW50MTYob2Zmc2V0LCBzaGFyZHNbaV0pO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiBuZXcgVWludDhBcnJheShidWZmZXIpO1xufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXJlbGF5X3NoYXJkX2NvZGVjLmpzLm1hcCJdLCJuYW1lcyI6WyJkZWNvZGVSZWxheVNoYXJkIiwiYnl0ZXMiLCJVaW50OEFycmF5IiwibGVuZ3RoIiwiRXJyb3IiLCJ2aWV3IiwiRGF0YVZpZXciLCJidWZmZXIiLCJjbHVzdGVySWQiLCJnZXRVaW50MTYiLCJzaGFyZHMiLCJpIiwiYnl0ZUluZGV4IiwiTWF0aCIsImZsb29yIiwiYml0SW5kZXgiLCJnZXRVaW50OCIsInB1c2giLCJudW1JbmRpY2VzIiwib2Zmc2V0IiwiZW5jb2RlUmVsYXlTaGFyZCIsInNoYXJkSW5mbyIsInRvdGFsTGVuZ3RoIiwiQXJyYXlCdWZmZXIiLCJzZXRVaW50MTYiLCJpbmRleCIsInNldFVpbnQ4Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/utils/dist/common/relay_shard_codec.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/utils/dist/common/sharding.js":
/*!**********************************************************!*\
  !*** ./node_modules/@waku/utils/dist/common/sharding.js ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   contentTopicToPubsubTopic: () => (/* binding */ contentTopicToPubsubTopic),\n/* harmony export */   contentTopicToShardIndex: () => (/* binding */ contentTopicToShardIndex),\n/* harmony export */   contentTopicsByPubsubTopic: () => (/* binding */ contentTopicsByPubsubTopic),\n/* harmony export */   determinePubsubTopic: () => (/* binding */ determinePubsubTopic),\n/* harmony export */   ensurePubsubTopicIsConfigured: () => (/* binding */ ensurePubsubTopicIsConfigured),\n/* harmony export */   ensureShardingConfigured: () => (/* binding */ ensureShardingConfigured),\n/* harmony export */   ensureValidContentTopic: () => (/* binding */ ensureValidContentTopic),\n/* harmony export */   pubsubTopicToSingleShardInfo: () => (/* binding */ pubsubTopicToSingleShardInfo),\n/* harmony export */   shardInfoToPubsubTopics: () => (/* binding */ shardInfoToPubsubTopics),\n/* harmony export */   singleShardInfoToPubsubTopic: () => (/* binding */ singleShardInfoToPubsubTopic),\n/* harmony export */   singleShardInfosToShardInfo: () => (/* binding */ singleShardInfosToShardInfo)\n/* harmony export */ });\n/* harmony import */ var _noble_hashes_sha256__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @noble/hashes/sha256 */ \"(ssr)/./node_modules/@noble/hashes/esm/sha256.js\");\n/* harmony import */ var _waku_interfaces__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @waku/interfaces */ \"(ssr)/./node_modules/@waku/utils/node_modules/@waku/interfaces/dist/index.js\");\n/* harmony import */ var _bytes_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../bytes/index.js */ \"(ssr)/./node_modules/@waku/utils/dist/bytes/index.js\");\n\n\n\nconst singleShardInfoToPubsubTopic = (shardInfo)=>{\n    if (shardInfo.clusterId === undefined || shardInfo.shard === undefined) throw new Error(\"Invalid shard\");\n    return `/waku/2/rs/${shardInfo.clusterId}/${shardInfo.shard}`;\n};\nconst singleShardInfosToShardInfo = (singleShardInfos)=>{\n    if (singleShardInfos.length === 0) throw new Error(\"Invalid shard\");\n    const clusterIds = singleShardInfos.map((shardInfo)=>shardInfo.clusterId);\n    if (new Set(clusterIds).size !== 1) {\n        throw new Error(\"Passed shard infos have different clusterIds\");\n    }\n    const shards = singleShardInfos.map((shardInfo)=>shardInfo.shard).filter((shard)=>shard !== undefined);\n    return {\n        clusterId: singleShardInfos[0].clusterId,\n        shards\n    };\n};\nconst shardInfoToPubsubTopics = (shardInfo)=>{\n    if (\"contentTopics\" in shardInfo && shardInfo.contentTopics) {\n        // Autosharding: explicitly defined content topics\n        return Array.from(new Set(shardInfo.contentTopics.map((contentTopic)=>contentTopicToPubsubTopic(contentTopic, shardInfo.clusterId))));\n    } else if (\"shards\" in shardInfo) {\n        // Static sharding\n        if (shardInfo.shards === undefined) throw new Error(\"Invalid shard\");\n        return Array.from(new Set(shardInfo.shards.map((index)=>`/waku/2/rs/${shardInfo.clusterId ?? _waku_interfaces__WEBPACK_IMPORTED_MODULE_0__.DEFAULT_CLUSTER_ID}/${index}`)));\n    } else if (\"application\" in shardInfo && \"version\" in shardInfo) {\n        // Autosharding: single shard from application and version\n        return [\n            contentTopicToPubsubTopic(`/${shardInfo.application}/${shardInfo.version}/default/default`, shardInfo.clusterId)\n        ];\n    } else {\n        throw new Error(\"Missing required configuration in shard parameters\");\n    }\n};\nconst pubsubTopicToSingleShardInfo = (pubsubTopics)=>{\n    const parts = pubsubTopics.split(\"/\");\n    if (parts.length != 6 || parts[1] !== \"waku\" || parts[2] !== \"2\" || parts[3] !== \"rs\") throw new Error(\"Invalid pubsub topic\");\n    const clusterId = parseInt(parts[4]);\n    const shard = parseInt(parts[5]);\n    if (isNaN(clusterId) || isNaN(shard)) throw new Error(\"Invalid clusterId or shard\");\n    return {\n        clusterId,\n        shard\n    };\n};\n//TODO: move part of BaseProtocol instead of utils\n// return `ProtocolError.TOPIC_NOT_CONFIGURED` instead of throwing\nfunction ensurePubsubTopicIsConfigured(pubsubTopic, configuredTopics) {\n    if (!configuredTopics.includes(pubsubTopic)) {\n        throw new Error(`Pubsub topic ${pubsubTopic} has not been configured on this instance. Configured topics are: ${configuredTopics}. Please update your configuration by passing in the topic during Waku node instantiation.`);\n    }\n}\n/**\n * Given a string, will throw an error if it is not formatted as a valid content topic for autosharding based on https://rfc.vac.dev/spec/51/\n * @param contentTopic String to validate\n * @returns Object with each content topic field as an attribute\n */ function ensureValidContentTopic(contentTopic) {\n    const parts = contentTopic.split(\"/\");\n    if (parts.length < 5 || parts.length > 6) {\n        throw Error(\"Content topic format is invalid\");\n    }\n    // Validate generation field if present\n    let generation = 0;\n    if (parts.length == 6) {\n        generation = parseInt(parts[1]);\n        if (isNaN(generation)) {\n            throw new Error(\"Invalid generation field in content topic\");\n        }\n        if (generation > 0) {\n            throw new Error(\"Generation greater than 0 is not supported\");\n        }\n    }\n    // Validate remaining fields\n    const fields = parts.splice(-4);\n    // Validate application field\n    if (fields[0].length == 0) {\n        throw new Error(\"Application field cannot be empty\");\n    }\n    // Validate version field\n    if (fields[1].length == 0) {\n        throw new Error(\"Version field cannot be empty\");\n    }\n    // Validate topic name field\n    if (fields[2].length == 0) {\n        throw new Error(\"Topic name field cannot be empty\");\n    }\n    // Validate encoding field\n    if (fields[3].length == 0) {\n        throw new Error(\"Encoding field cannot be empty\");\n    }\n    return {\n        generation,\n        application: fields[0],\n        version: fields[1],\n        topicName: fields[2],\n        encoding: fields[3]\n    };\n}\n/**\n * Given a string, determines which autoshard index to use for its pubsub topic.\n * Based on the algorithm described in the RFC: https://rfc.vac.dev/spec/51//#algorithm\n */ function contentTopicToShardIndex(contentTopic, networkShards = 8) {\n    const { application, version } = ensureValidContentTopic(contentTopic);\n    const digest = (0,_noble_hashes_sha256__WEBPACK_IMPORTED_MODULE_2__.sha256)((0,_bytes_index_js__WEBPACK_IMPORTED_MODULE_1__.concat)([\n        (0,_bytes_index_js__WEBPACK_IMPORTED_MODULE_1__.utf8ToBytes)(application),\n        (0,_bytes_index_js__WEBPACK_IMPORTED_MODULE_1__.utf8ToBytes)(version)\n    ]));\n    const dataview = new DataView(digest.buffer.slice(-8));\n    return Number(dataview.getBigUint64(0, false) % BigInt(networkShards));\n}\nfunction contentTopicToPubsubTopic(contentTopic, clusterId = _waku_interfaces__WEBPACK_IMPORTED_MODULE_0__.DEFAULT_CLUSTER_ID, networkShards = 8) {\n    if (!contentTopic) {\n        throw Error(\"Content topic must be specified\");\n    }\n    const shardIndex = contentTopicToShardIndex(contentTopic, networkShards);\n    return `/waku/2/rs/${clusterId}/${shardIndex}`;\n}\n/**\n * Given an array of content topics, groups them together by their Pubsub topic as derived using the algorithm for autosharding.\n * If any of the content topics are not properly formatted, the function will throw an error.\n */ function contentTopicsByPubsubTopic(contentTopics, clusterId = _waku_interfaces__WEBPACK_IMPORTED_MODULE_0__.DEFAULT_CLUSTER_ID, networkShards = 8) {\n    const groupedContentTopics = new Map();\n    for (const contentTopic of contentTopics){\n        const pubsubTopic = contentTopicToPubsubTopic(contentTopic, clusterId, networkShards);\n        let topics = groupedContentTopics.get(pubsubTopic);\n        if (!topics) {\n            groupedContentTopics.set(pubsubTopic, []);\n            topics = groupedContentTopics.get(pubsubTopic);\n        }\n        topics.push(contentTopic);\n    }\n    return groupedContentTopics;\n}\n/**\n * Used when creating encoders/decoders to determine which pubsub topic to use\n */ function determinePubsubTopic(contentTopic, pubsubTopicShardInfo) {\n    if (typeof pubsubTopicShardInfo == \"string\") {\n        return pubsubTopicShardInfo;\n    }\n    return pubsubTopicShardInfo?.shard ? singleShardInfoToPubsubTopic(pubsubTopicShardInfo) : contentTopicToPubsubTopic(contentTopic, pubsubTopicShardInfo?.clusterId || _waku_interfaces__WEBPACK_IMPORTED_MODULE_0__.DEFAULT_CLUSTER_ID);\n}\n/**\n * Validates sharding configuration and sets defaults where possible.\n * @returns Validated sharding parameters, with any missing values set to defaults\n */ const ensureShardingConfigured = (shardInfo)=>{\n    const clusterId = shardInfo.clusterId ?? _waku_interfaces__WEBPACK_IMPORTED_MODULE_0__.DEFAULT_CLUSTER_ID;\n    const shards = \"shards\" in shardInfo ? shardInfo.shards : [];\n    const contentTopics = \"contentTopics\" in shardInfo ? shardInfo.contentTopics : [];\n    const [application, version] = \"application\" in shardInfo && \"version\" in shardInfo ? [\n        shardInfo.application,\n        shardInfo.version\n    ] : [\n        undefined,\n        undefined\n    ];\n    const isShardsConfigured = shards && shards.length > 0;\n    const isContentTopicsConfigured = contentTopics && contentTopics.length > 0;\n    const isApplicationVersionConfigured = application && version;\n    if (isShardsConfigured) {\n        return {\n            shardingParams: {\n                clusterId,\n                shards\n            },\n            shardInfo: {\n                clusterId,\n                shards\n            },\n            pubsubTopics: shardInfoToPubsubTopics({\n                clusterId,\n                shards\n            })\n        };\n    }\n    if (isContentTopicsConfigured) {\n        const pubsubTopics = Array.from(new Set(contentTopics.map((topic)=>contentTopicToPubsubTopic(topic, clusterId))));\n        const shards = Array.from(new Set(contentTopics.map((topic)=>contentTopicToShardIndex(topic))));\n        return {\n            shardingParams: {\n                clusterId,\n                contentTopics\n            },\n            shardInfo: {\n                clusterId,\n                shards\n            },\n            pubsubTopics\n        };\n    }\n    if (isApplicationVersionConfigured) {\n        const pubsubTopic = contentTopicToPubsubTopic(`/${application}/${version}/default/default`, clusterId);\n        return {\n            shardingParams: {\n                clusterId,\n                application,\n                version\n            },\n            shardInfo: {\n                clusterId,\n                shards: [\n                    pubsubTopicToSingleShardInfo(pubsubTopic).shard\n                ]\n            },\n            pubsubTopics: [\n                pubsubTopic\n            ]\n        };\n    }\n    throw new Error(\"Missing minimum required configuration options for static sharding or autosharding.\");\n}; //# sourceMappingURL=sharding.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/utils/dist/common/sharding.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/utils/dist/common/to_async_iterator.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@waku/utils/dist/common/to_async_iterator.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   toAsyncIterator: () => (/* binding */ toAsyncIterator)\n/* harmony export */ });\nconst FRAME_RATE = 60;\n/**\n * Function that transforms IReceiver subscription to iterable stream of data.\n * @param receiver - object that allows to be subscribed to;\n * @param decoder - parameter to be passed to receiver for subscription;\n * @param options - options for receiver for subscription;\n * @param iteratorOptions - optional configuration for iterator;\n * @returns iterator and stop function to terminate it.\n */ async function toAsyncIterator(receiver, decoder, iteratorOptions) {\n    const iteratorDelay = iteratorOptions?.iteratorDelay ?? FRAME_RATE;\n    const messages = [];\n    let unsubscribe;\n    unsubscribe = await receiver.subscribe(decoder, (message)=>{\n        messages.push(message);\n    });\n    const isWithTimeout = Number.isInteger(iteratorOptions?.timeoutMs);\n    const timeoutMs = iteratorOptions?.timeoutMs ?? 0;\n    const startTime = Date.now();\n    async function* iterator() {\n        while(true){\n            if (isWithTimeout && Date.now() - startTime >= timeoutMs) {\n                return;\n            }\n            await wait(iteratorDelay);\n            const message = messages.shift();\n            if (!unsubscribe && messages.length === 0) {\n                return message;\n            }\n            if (!message && unsubscribe) {\n                continue;\n            }\n            yield message;\n        }\n    }\n    return {\n        iterator: iterator(),\n        async stop () {\n            if (unsubscribe) {\n                await unsubscribe();\n                unsubscribe = undefined;\n            }\n        }\n    };\n}\nfunction wait(ms) {\n    return new Promise((resolve)=>{\n        setTimeout(resolve, ms);\n    });\n} //# sourceMappingURL=to_async_iterator.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdha3UvdXRpbHMvZGlzdC9jb21tb24vdG9fYXN5bmNfaXRlcmF0b3IuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE1BQU1BLGFBQWE7QUFDbkI7Ozs7Ozs7Q0FPQyxHQUNNLGVBQWVDLGdCQUFnQkMsUUFBUSxFQUFFQyxPQUFPLEVBQUVDLGVBQWU7SUFDcEUsTUFBTUMsZ0JBQWdCRCxpQkFBaUJDLGlCQUFpQkw7SUFDeEQsTUFBTU0sV0FBVyxFQUFFO0lBQ25CLElBQUlDO0lBQ0pBLGNBQWMsTUFBTUwsU0FBU00sU0FBUyxDQUFDTCxTQUFTLENBQUNNO1FBQzdDSCxTQUFTSSxJQUFJLENBQUNEO0lBQ2xCO0lBQ0EsTUFBTUUsZ0JBQWdCQyxPQUFPQyxTQUFTLENBQUNULGlCQUFpQlU7SUFDeEQsTUFBTUEsWUFBWVYsaUJBQWlCVSxhQUFhO0lBQ2hELE1BQU1DLFlBQVlDLEtBQUtDLEdBQUc7SUFDMUIsZ0JBQWdCQztRQUNaLE1BQU8sS0FBTTtZQUNULElBQUlQLGlCQUFpQkssS0FBS0MsR0FBRyxLQUFLRixhQUFhRCxXQUFXO2dCQUN0RDtZQUNKO1lBQ0EsTUFBTUssS0FBS2Q7WUFDWCxNQUFNSSxVQUFVSCxTQUFTYyxLQUFLO1lBQzlCLElBQUksQ0FBQ2IsZUFBZUQsU0FBU2UsTUFBTSxLQUFLLEdBQUc7Z0JBQ3ZDLE9BQU9aO1lBQ1g7WUFDQSxJQUFJLENBQUNBLFdBQVdGLGFBQWE7Z0JBQ3pCO1lBQ0o7WUFDQSxNQUFNRTtRQUNWO0lBQ0o7SUFDQSxPQUFPO1FBQ0hTLFVBQVVBO1FBQ1YsTUFBTUk7WUFDRixJQUFJZixhQUFhO2dCQUNiLE1BQU1BO2dCQUNOQSxjQUFjZ0I7WUFDbEI7UUFDSjtJQUNKO0FBQ0o7QUFDQSxTQUFTSixLQUFLSyxFQUFFO0lBQ1osT0FBTyxJQUFJQyxRQUFRLENBQUNDO1FBQ2hCQyxXQUFXRCxTQUFTRjtJQUN4QjtBQUNKLEVBQ0EsNkNBQTZDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZmx1c2gtbm90ZXMvLi9ub2RlX21vZHVsZXMvQHdha3UvdXRpbHMvZGlzdC9jb21tb24vdG9fYXN5bmNfaXRlcmF0b3IuanM/OTcwMCJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBGUkFNRV9SQVRFID0gNjA7XG4vKipcbiAqIEZ1bmN0aW9uIHRoYXQgdHJhbnNmb3JtcyBJUmVjZWl2ZXIgc3Vic2NyaXB0aW9uIHRvIGl0ZXJhYmxlIHN0cmVhbSBvZiBkYXRhLlxuICogQHBhcmFtIHJlY2VpdmVyIC0gb2JqZWN0IHRoYXQgYWxsb3dzIHRvIGJlIHN1YnNjcmliZWQgdG87XG4gKiBAcGFyYW0gZGVjb2RlciAtIHBhcmFtZXRlciB0byBiZSBwYXNzZWQgdG8gcmVjZWl2ZXIgZm9yIHN1YnNjcmlwdGlvbjtcbiAqIEBwYXJhbSBvcHRpb25zIC0gb3B0aW9ucyBmb3IgcmVjZWl2ZXIgZm9yIHN1YnNjcmlwdGlvbjtcbiAqIEBwYXJhbSBpdGVyYXRvck9wdGlvbnMgLSBvcHRpb25hbCBjb25maWd1cmF0aW9uIGZvciBpdGVyYXRvcjtcbiAqIEByZXR1cm5zIGl0ZXJhdG9yIGFuZCBzdG9wIGZ1bmN0aW9uIHRvIHRlcm1pbmF0ZSBpdC5cbiAqL1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIHRvQXN5bmNJdGVyYXRvcihyZWNlaXZlciwgZGVjb2RlciwgaXRlcmF0b3JPcHRpb25zKSB7XG4gICAgY29uc3QgaXRlcmF0b3JEZWxheSA9IGl0ZXJhdG9yT3B0aW9ucz8uaXRlcmF0b3JEZWxheSA/PyBGUkFNRV9SQVRFO1xuICAgIGNvbnN0IG1lc3NhZ2VzID0gW107XG4gICAgbGV0IHVuc3Vic2NyaWJlO1xuICAgIHVuc3Vic2NyaWJlID0gYXdhaXQgcmVjZWl2ZXIuc3Vic2NyaWJlKGRlY29kZXIsIChtZXNzYWdlKSA9PiB7XG4gICAgICAgIG1lc3NhZ2VzLnB1c2gobWVzc2FnZSk7XG4gICAgfSk7XG4gICAgY29uc3QgaXNXaXRoVGltZW91dCA9IE51bWJlci5pc0ludGVnZXIoaXRlcmF0b3JPcHRpb25zPy50aW1lb3V0TXMpO1xuICAgIGNvbnN0IHRpbWVvdXRNcyA9IGl0ZXJhdG9yT3B0aW9ucz8udGltZW91dE1zID8/IDA7XG4gICAgY29uc3Qgc3RhcnRUaW1lID0gRGF0ZS5ub3coKTtcbiAgICBhc3luYyBmdW5jdGlvbiogaXRlcmF0b3IoKSB7XG4gICAgICAgIHdoaWxlICh0cnVlKSB7XG4gICAgICAgICAgICBpZiAoaXNXaXRoVGltZW91dCAmJiBEYXRlLm5vdygpIC0gc3RhcnRUaW1lID49IHRpbWVvdXRNcykge1xuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGF3YWl0IHdhaXQoaXRlcmF0b3JEZWxheSk7XG4gICAgICAgICAgICBjb25zdCBtZXNzYWdlID0gbWVzc2FnZXMuc2hpZnQoKTtcbiAgICAgICAgICAgIGlmICghdW5zdWJzY3JpYmUgJiYgbWVzc2FnZXMubGVuZ3RoID09PSAwKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIG1lc3NhZ2U7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoIW1lc3NhZ2UgJiYgdW5zdWJzY3JpYmUpIHtcbiAgICAgICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHlpZWxkIG1lc3NhZ2U7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHtcbiAgICAgICAgaXRlcmF0b3I6IGl0ZXJhdG9yKCksXG4gICAgICAgIGFzeW5jIHN0b3AoKSB7XG4gICAgICAgICAgICBpZiAodW5zdWJzY3JpYmUpIHtcbiAgICAgICAgICAgICAgICBhd2FpdCB1bnN1YnNjcmliZSgpO1xuICAgICAgICAgICAgICAgIHVuc3Vic2NyaWJlID0gdW5kZWZpbmVkO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfTtcbn1cbmZ1bmN0aW9uIHdhaXQobXMpIHtcbiAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUpID0+IHtcbiAgICAgICAgc2V0VGltZW91dChyZXNvbHZlLCBtcyk7XG4gICAgfSk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD10b19hc3luY19pdGVyYXRvci5qcy5tYXAiXSwibmFtZXMiOlsiRlJBTUVfUkFURSIsInRvQXN5bmNJdGVyYXRvciIsInJlY2VpdmVyIiwiZGVjb2RlciIsIml0ZXJhdG9yT3B0aW9ucyIsIml0ZXJhdG9yRGVsYXkiLCJtZXNzYWdlcyIsInVuc3Vic2NyaWJlIiwic3Vic2NyaWJlIiwibWVzc2FnZSIsInB1c2giLCJpc1dpdGhUaW1lb3V0IiwiTnVtYmVyIiwiaXNJbnRlZ2VyIiwidGltZW91dE1zIiwic3RhcnRUaW1lIiwiRGF0ZSIsIm5vdyIsIml0ZXJhdG9yIiwid2FpdCIsInNoaWZ0IiwibGVuZ3RoIiwic3RvcCIsInVuZGVmaW5lZCIsIm1zIiwiUHJvbWlzZSIsInJlc29sdmUiLCJzZXRUaW1lb3V0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/utils/dist/common/to_async_iterator.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/utils/dist/index.js":
/*!************************************************!*\
  !*** ./node_modules/@waku/utils/dist/index.js ***!
  \************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Logger: () => (/* reexport safe */ _logger_index_js__WEBPACK_IMPORTED_MODULE_1__.Logger),\n/* harmony export */   contentTopicToPubsubTopic: () => (/* reexport safe */ _common_index_js__WEBPACK_IMPORTED_MODULE_0__.contentTopicToPubsubTopic),\n/* harmony export */   contentTopicToShardIndex: () => (/* reexport safe */ _common_index_js__WEBPACK_IMPORTED_MODULE_0__.contentTopicToShardIndex),\n/* harmony export */   contentTopicsByPubsubTopic: () => (/* reexport safe */ _common_index_js__WEBPACK_IMPORTED_MODULE_0__.contentTopicsByPubsubTopic),\n/* harmony export */   decodeRelayShard: () => (/* reexport safe */ _common_index_js__WEBPACK_IMPORTED_MODULE_0__.decodeRelayShard),\n/* harmony export */   determinePubsubTopic: () => (/* reexport safe */ _common_index_js__WEBPACK_IMPORTED_MODULE_0__.determinePubsubTopic),\n/* harmony export */   encodeRelayShard: () => (/* reexport safe */ _common_index_js__WEBPACK_IMPORTED_MODULE_0__.encodeRelayShard),\n/* harmony export */   ensurePubsubTopicIsConfigured: () => (/* reexport safe */ _common_index_js__WEBPACK_IMPORTED_MODULE_0__.ensurePubsubTopicIsConfigured),\n/* harmony export */   ensureShardingConfigured: () => (/* reexport safe */ _common_index_js__WEBPACK_IMPORTED_MODULE_0__.ensureShardingConfigured),\n/* harmony export */   ensureValidContentTopic: () => (/* reexport safe */ _common_index_js__WEBPACK_IMPORTED_MODULE_0__.ensureValidContentTopic),\n/* harmony export */   getPseudoRandomSubset: () => (/* reexport safe */ _common_index_js__WEBPACK_IMPORTED_MODULE_0__.getPseudoRandomSubset),\n/* harmony export */   getWsMultiaddrFromMultiaddrs: () => (/* reexport safe */ _common_index_js__WEBPACK_IMPORTED_MODULE_0__.getWsMultiaddrFromMultiaddrs),\n/* harmony export */   groupByContentTopic: () => (/* reexport safe */ _common_index_js__WEBPACK_IMPORTED_MODULE_0__.groupByContentTopic),\n/* harmony export */   isDefined: () => (/* reexport safe */ _common_index_js__WEBPACK_IMPORTED_MODULE_0__.isDefined),\n/* harmony export */   isMessageSizeUnderCap: () => (/* reexport safe */ _common_index_js__WEBPACK_IMPORTED_MODULE_0__.isMessageSizeUnderCap),\n/* harmony export */   isWireSizeUnderCap: () => (/* reexport safe */ _common_index_js__WEBPACK_IMPORTED_MODULE_0__.isWireSizeUnderCap),\n/* harmony export */   pubsubTopicToSingleShardInfo: () => (/* reexport safe */ _common_index_js__WEBPACK_IMPORTED_MODULE_0__.pubsubTopicToSingleShardInfo),\n/* harmony export */   pushOrInitMapSet: () => (/* reexport safe */ _common_index_js__WEBPACK_IMPORTED_MODULE_0__.pushOrInitMapSet),\n/* harmony export */   removeItemFromArray: () => (/* reexport safe */ _common_index_js__WEBPACK_IMPORTED_MODULE_0__.removeItemFromArray),\n/* harmony export */   shardInfoToPubsubTopics: () => (/* reexport safe */ _common_index_js__WEBPACK_IMPORTED_MODULE_0__.shardInfoToPubsubTopics),\n/* harmony export */   singleShardInfoToPubsubTopic: () => (/* reexport safe */ _common_index_js__WEBPACK_IMPORTED_MODULE_0__.singleShardInfoToPubsubTopic),\n/* harmony export */   singleShardInfosToShardInfo: () => (/* reexport safe */ _common_index_js__WEBPACK_IMPORTED_MODULE_0__.singleShardInfosToShardInfo),\n/* harmony export */   toAsyncIterator: () => (/* reexport safe */ _common_index_js__WEBPACK_IMPORTED_MODULE_0__.toAsyncIterator)\n/* harmony export */ });\n/* harmony import */ var _common_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./common/index.js */ \"(ssr)/./node_modules/@waku/utils/dist/common/index.js\");\n/* harmony import */ var _logger_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./logger/index.js */ \"(ssr)/./node_modules/@waku/utils/dist/logger/index.js\");\n\n //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdha3UvdXRpbHMvZGlzdC9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQWtDO0FBQ1MsQ0FDM0MsaUNBQWlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZmx1c2gtbm90ZXMvLi9ub2RlX21vZHVsZXMvQHdha3UvdXRpbHMvZGlzdC9pbmRleC5qcz8zMjRmIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCAqIGZyb20gXCIuL2NvbW1vbi9pbmRleC5qc1wiO1xuZXhwb3J0IHsgTG9nZ2VyIH0gZnJvbSBcIi4vbG9nZ2VyL2luZGV4LmpzXCI7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOlsiTG9nZ2VyIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/utils/dist/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/utils/dist/libp2p/index.js":
/*!*******************************************************!*\
  !*** ./node_modules/@waku/utils/dist/libp2p/index.js ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getConnectedPeersForProtocolAndShard: () => (/* binding */ getConnectedPeersForProtocolAndShard),\n/* harmony export */   getPeersForProtocol: () => (/* binding */ getPeersForProtocol),\n/* harmony export */   selectConnection: () => (/* binding */ selectConnection),\n/* harmony export */   selectRandomPeer: () => (/* binding */ selectRandomPeer),\n/* harmony export */   sortPeersByLatency: () => (/* binding */ sortPeersByLatency)\n/* harmony export */ });\n/* harmony import */ var _bytes_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../bytes/index.js */ \"(ssr)/./node_modules/@waku/utils/dist/bytes/index.js\");\n/* harmony import */ var _common_relay_shard_codec_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../common/relay_shard_codec.js */ \"(ssr)/./node_modules/@waku/utils/dist/common/relay_shard_codec.js\");\n\n\n/**\n * Returns a pseudo-random peer that supports the given protocol.\n * Useful for protocols such as store and light push\n */ function selectRandomPeer(peers) {\n    if (peers.length === 0) return;\n    const index = Math.round(Math.random() * (peers.length - 1));\n    return peers[index];\n}\n/**\n * Function to sort peers by latency from lowest to highest\n * @param peerStore - The Libp2p PeerStore\n * @param peers - The list of peers to choose from\n * @returns Sorted array of peers by latency\n */ async function sortPeersByLatency(peerStore, peers) {\n    if (peers.length === 0) return [];\n    const results = await Promise.all(peers.map(async (peer)=>{\n        try {\n            const pingBytes = (await peerStore.get(peer.id)).metadata.get(\"ping\");\n            if (!pingBytes) return {\n                peer,\n                ping: Infinity\n            };\n            const ping = Number((0,_bytes_index_js__WEBPACK_IMPORTED_MODULE_0__.bytesToUtf8)(pingBytes));\n            return {\n                peer,\n                ping\n            };\n        } catch (error) {\n            return {\n                peer,\n                ping: Infinity\n            };\n        }\n    }));\n    // filter out null values\n    const validResults = results.filter((result)=>result !== null);\n    return validResults.sort((a, b)=>a.ping - b.ping).map((result)=>result.peer);\n}\n/**\n * Returns the list of peers that supports the given protocol.\n */ async function getPeersForProtocol(peerStore, protocols) {\n    const peers = [];\n    await peerStore.forEach((peer)=>{\n        for(let i = 0; i < protocols.length; i++){\n            if (peer.protocols.includes(protocols[i])) {\n                peers.push(peer);\n                break;\n            }\n        }\n    });\n    return peers;\n}\nasync function getConnectedPeersForProtocolAndShard(connections, peerStore, protocols, shardInfo) {\n    const openConnections = connections.filter((connection)=>connection.status === \"open\");\n    const peerPromises = openConnections.map(async (connection)=>{\n        const peer = await peerStore.get(connection.remotePeer);\n        const supportsProtocol = protocols.some((protocol)=>peer.protocols.includes(protocol));\n        if (supportsProtocol) {\n            if (shardInfo) {\n                const encodedPeerShardInfo = peer.metadata.get(\"shardInfo\");\n                const peerShardInfo = encodedPeerShardInfo && (0,_common_relay_shard_codec_js__WEBPACK_IMPORTED_MODULE_1__.decodeRelayShard)(encodedPeerShardInfo);\n                if (peerShardInfo && shardInfo.clusterId === peerShardInfo.clusterId) {\n                    return peer;\n                }\n            } else {\n                return peer;\n            }\n        }\n        return null;\n    });\n    const peersWithNulls = await Promise.all(peerPromises);\n    return peersWithNulls.filter((peer)=>peer !== null);\n}\nfunction selectConnection(connections) {\n    if (!connections.length) return;\n    if (connections.length === 1) return connections[0];\n    let latestConnection;\n    connections.forEach((connection)=>{\n        if (connection.status === \"open\") {\n            if (!latestConnection) {\n                latestConnection = connection;\n            } else if (connection.timeline.open > latestConnection.timeline.open) {\n                latestConnection = connection;\n            }\n        }\n    });\n    return latestConnection;\n} //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/utils/dist/libp2p/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/utils/dist/logger/index.js":
/*!*******************************************************!*\
  !*** ./node_modules/@waku/utils/dist/logger/index.js ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Logger: () => (/* binding */ Logger)\n/* harmony export */ });\n/* harmony import */ var debug__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! debug */ \"(ssr)/./node_modules/debug/src/index.js\");\n\nconst APP_NAME = \"waku\";\nclass Logger {\n    static createDebugNamespace(level, prefix) {\n        return prefix ? `${APP_NAME}:${level}:${prefix}` : `${APP_NAME}:${level}`;\n    }\n    constructor(prefix){\n        this._info = debug__WEBPACK_IMPORTED_MODULE_0__(Logger.createDebugNamespace(\"info\", prefix));\n        this._warn = debug__WEBPACK_IMPORTED_MODULE_0__(Logger.createDebugNamespace(\"warn\", prefix));\n        this._error = debug__WEBPACK_IMPORTED_MODULE_0__(Logger.createDebugNamespace(\"error\", prefix));\n    }\n    get info() {\n        return this._info;\n    }\n    get warn() {\n        return this._warn;\n    }\n    get error() {\n        return this._error;\n    }\n    log(level, ...args) {\n        const logger = this[level];\n        logger(...args);\n    }\n} //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdha3UvdXRpbHMvZGlzdC9sb2dnZXIvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBMEI7QUFDMUIsTUFBTUMsV0FBVztBQUNWLE1BQU1DO0lBSVQsT0FBT0MscUJBQXFCQyxLQUFLLEVBQUVDLE1BQU0sRUFBRTtRQUN2QyxPQUFPQSxTQUFTLENBQUMsRUFBRUosU0FBUyxDQUFDLEVBQUVHLE1BQU0sQ0FBQyxFQUFFQyxPQUFPLENBQUMsR0FBRyxDQUFDLEVBQUVKLFNBQVMsQ0FBQyxFQUFFRyxNQUFNLENBQUM7SUFDN0U7SUFDQUUsWUFBWUQsTUFBTSxDQUFFO1FBQ2hCLElBQUksQ0FBQ0UsS0FBSyxHQUFHUCxrQ0FBS0EsQ0FBQ0UsT0FBT0Msb0JBQW9CLENBQUMsUUFBUUU7UUFDdkQsSUFBSSxDQUFDRyxLQUFLLEdBQUdSLGtDQUFLQSxDQUFDRSxPQUFPQyxvQkFBb0IsQ0FBQyxRQUFRRTtRQUN2RCxJQUFJLENBQUNJLE1BQU0sR0FBR1Qsa0NBQUtBLENBQUNFLE9BQU9DLG9CQUFvQixDQUFDLFNBQVNFO0lBQzdEO0lBQ0EsSUFBSUssT0FBTztRQUNQLE9BQU8sSUFBSSxDQUFDSCxLQUFLO0lBQ3JCO0lBQ0EsSUFBSUksT0FBTztRQUNQLE9BQU8sSUFBSSxDQUFDSCxLQUFLO0lBQ3JCO0lBQ0EsSUFBSUksUUFBUTtRQUNSLE9BQU8sSUFBSSxDQUFDSCxNQUFNO0lBQ3RCO0lBQ0FJLElBQUlULEtBQUssRUFBRSxHQUFHVSxJQUFJLEVBQUU7UUFDaEIsTUFBTUMsU0FBUyxJQUFJLENBQUNYLE1BQU07UUFDMUJXLFVBQVVEO0lBQ2Q7QUFDSixFQUNBLGlDQUFpQyIsInNvdXJjZXMiOlsid2VicGFjazovL2ZsdXNoLW5vdGVzLy4vbm9kZV9tb2R1bGVzL0B3YWt1L3V0aWxzL2Rpc3QvbG9nZ2VyL2luZGV4LmpzP2VhNzciXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGRlYnVnIGZyb20gXCJkZWJ1Z1wiO1xuY29uc3QgQVBQX05BTUUgPSBcIndha3VcIjtcbmV4cG9ydCBjbGFzcyBMb2dnZXIge1xuICAgIF9pbmZvO1xuICAgIF93YXJuO1xuICAgIF9lcnJvcjtcbiAgICBzdGF0aWMgY3JlYXRlRGVidWdOYW1lc3BhY2UobGV2ZWwsIHByZWZpeCkge1xuICAgICAgICByZXR1cm4gcHJlZml4ID8gYCR7QVBQX05BTUV9OiR7bGV2ZWx9OiR7cHJlZml4fWAgOiBgJHtBUFBfTkFNRX06JHtsZXZlbH1gO1xuICAgIH1cbiAgICBjb25zdHJ1Y3RvcihwcmVmaXgpIHtcbiAgICAgICAgdGhpcy5faW5mbyA9IGRlYnVnKExvZ2dlci5jcmVhdGVEZWJ1Z05hbWVzcGFjZShcImluZm9cIiwgcHJlZml4KSk7XG4gICAgICAgIHRoaXMuX3dhcm4gPSBkZWJ1ZyhMb2dnZXIuY3JlYXRlRGVidWdOYW1lc3BhY2UoXCJ3YXJuXCIsIHByZWZpeCkpO1xuICAgICAgICB0aGlzLl9lcnJvciA9IGRlYnVnKExvZ2dlci5jcmVhdGVEZWJ1Z05hbWVzcGFjZShcImVycm9yXCIsIHByZWZpeCkpO1xuICAgIH1cbiAgICBnZXQgaW5mbygpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2luZm87XG4gICAgfVxuICAgIGdldCB3YXJuKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5fd2FybjtcbiAgICB9XG4gICAgZ2V0IGVycm9yKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5fZXJyb3I7XG4gICAgfVxuICAgIGxvZyhsZXZlbCwgLi4uYXJncykge1xuICAgICAgICBjb25zdCBsb2dnZXIgPSB0aGlzW2xldmVsXTtcbiAgICAgICAgbG9nZ2VyKC4uLmFyZ3MpO1xuICAgIH1cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJuYW1lcyI6WyJkZWJ1ZyIsIkFQUF9OQU1FIiwiTG9nZ2VyIiwiY3JlYXRlRGVidWdOYW1lc3BhY2UiLCJsZXZlbCIsInByZWZpeCIsImNvbnN0cnVjdG9yIiwiX2luZm8iLCJfd2FybiIsIl9lcnJvciIsImluZm8iLCJ3YXJuIiwiZXJyb3IiLCJsb2ciLCJhcmdzIiwibG9nZ2VyIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/utils/dist/logger/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/utils/node_modules/@waku/interfaces/dist/connection_manager.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@waku/utils/node_modules/@waku/interfaces/dist/connection_manager.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   EConnectionStateEvents: () => (/* binding */ EConnectionStateEvents),\n/* harmony export */   EPeersByDiscoveryEvents: () => (/* binding */ EPeersByDiscoveryEvents),\n/* harmony export */   Tags: () => (/* binding */ Tags)\n/* harmony export */ });\nvar Tags;\n(function(Tags) {\n    Tags[\"BOOTSTRAP\"] = \"bootstrap\";\n    Tags[\"PEER_EXCHANGE\"] = \"peer-exchange\";\n    Tags[\"LOCAL\"] = \"local-peer-cache\";\n})(Tags || (Tags = {}));\nvar EPeersByDiscoveryEvents;\n(function(EPeersByDiscoveryEvents) {\n    EPeersByDiscoveryEvents[\"PEER_DISCOVERY_BOOTSTRAP\"] = \"peer:discovery:bootstrap\";\n    EPeersByDiscoveryEvents[\"PEER_DISCOVERY_PEER_EXCHANGE\"] = \"peer:discovery:peer-exchange\";\n    EPeersByDiscoveryEvents[\"PEER_CONNECT_BOOTSTRAP\"] = \"peer:connected:bootstrap\";\n    EPeersByDiscoveryEvents[\"PEER_CONNECT_PEER_EXCHANGE\"] = \"peer:connected:peer-exchange\";\n})(EPeersByDiscoveryEvents || (EPeersByDiscoveryEvents = {}));\nvar EConnectionStateEvents;\n(function(EConnectionStateEvents) {\n    EConnectionStateEvents[\"CONNECTION_STATUS\"] = \"waku:connection\";\n})(EConnectionStateEvents || (EConnectionStateEvents = {})); //# sourceMappingURL=connection_manager.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdha3UvdXRpbHMvbm9kZV9tb2R1bGVzL0B3YWt1L2ludGVyZmFjZXMvZGlzdC9jb25uZWN0aW9uX21hbmFnZXIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQU8sSUFBSUEsS0FBSztBQUNmLFVBQVVBLElBQUk7SUFDWEEsSUFBSSxDQUFDLFlBQVksR0FBRztJQUNwQkEsSUFBSSxDQUFDLGdCQUFnQixHQUFHO0lBQ3hCQSxJQUFJLENBQUMsUUFBUSxHQUFHO0FBQ3BCLEdBQUdBLFFBQVNBLENBQUFBLE9BQU8sQ0FBQztBQUNiLElBQUlDLHdCQUF3QjtBQUNsQyxVQUFVQSx1QkFBdUI7SUFDOUJBLHVCQUF1QixDQUFDLDJCQUEyQixHQUFHO0lBQ3REQSx1QkFBdUIsQ0FBQywrQkFBK0IsR0FBRztJQUMxREEsdUJBQXVCLENBQUMseUJBQXlCLEdBQUc7SUFDcERBLHVCQUF1QixDQUFDLDZCQUE2QixHQUFHO0FBQzVELEdBQUdBLDJCQUE0QkEsQ0FBQUEsMEJBQTBCLENBQUM7QUFDbkQsSUFBSUMsdUJBQXVCO0FBQ2pDLFVBQVVBLHNCQUFzQjtJQUM3QkEsc0JBQXNCLENBQUMsb0JBQW9CLEdBQUc7QUFDbEQsR0FBR0EsMEJBQTJCQSxDQUFBQSx5QkFBeUIsQ0FBQyxLQUN4RCw4Q0FBOEMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mbHVzaC1ub3Rlcy8uL25vZGVfbW9kdWxlcy9Ad2FrdS91dGlscy9ub2RlX21vZHVsZXMvQHdha3UvaW50ZXJmYWNlcy9kaXN0L2Nvbm5lY3Rpb25fbWFuYWdlci5qcz9lNmM3Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCB2YXIgVGFncztcbihmdW5jdGlvbiAoVGFncykge1xuICAgIFRhZ3NbXCJCT09UU1RSQVBcIl0gPSBcImJvb3RzdHJhcFwiO1xuICAgIFRhZ3NbXCJQRUVSX0VYQ0hBTkdFXCJdID0gXCJwZWVyLWV4Y2hhbmdlXCI7XG4gICAgVGFnc1tcIkxPQ0FMXCJdID0gXCJsb2NhbC1wZWVyLWNhY2hlXCI7XG59KShUYWdzIHx8IChUYWdzID0ge30pKTtcbmV4cG9ydCB2YXIgRVBlZXJzQnlEaXNjb3ZlcnlFdmVudHM7XG4oZnVuY3Rpb24gKEVQZWVyc0J5RGlzY292ZXJ5RXZlbnRzKSB7XG4gICAgRVBlZXJzQnlEaXNjb3ZlcnlFdmVudHNbXCJQRUVSX0RJU0NPVkVSWV9CT09UU1RSQVBcIl0gPSBcInBlZXI6ZGlzY292ZXJ5OmJvb3RzdHJhcFwiO1xuICAgIEVQZWVyc0J5RGlzY292ZXJ5RXZlbnRzW1wiUEVFUl9ESVNDT1ZFUllfUEVFUl9FWENIQU5HRVwiXSA9IFwicGVlcjpkaXNjb3Zlcnk6cGVlci1leGNoYW5nZVwiO1xuICAgIEVQZWVyc0J5RGlzY292ZXJ5RXZlbnRzW1wiUEVFUl9DT05ORUNUX0JPT1RTVFJBUFwiXSA9IFwicGVlcjpjb25uZWN0ZWQ6Ym9vdHN0cmFwXCI7XG4gICAgRVBlZXJzQnlEaXNjb3ZlcnlFdmVudHNbXCJQRUVSX0NPTk5FQ1RfUEVFUl9FWENIQU5HRVwiXSA9IFwicGVlcjpjb25uZWN0ZWQ6cGVlci1leGNoYW5nZVwiO1xufSkoRVBlZXJzQnlEaXNjb3ZlcnlFdmVudHMgfHwgKEVQZWVyc0J5RGlzY292ZXJ5RXZlbnRzID0ge30pKTtcbmV4cG9ydCB2YXIgRUNvbm5lY3Rpb25TdGF0ZUV2ZW50cztcbihmdW5jdGlvbiAoRUNvbm5lY3Rpb25TdGF0ZUV2ZW50cykge1xuICAgIEVDb25uZWN0aW9uU3RhdGVFdmVudHNbXCJDT05ORUNUSU9OX1NUQVRVU1wiXSA9IFwid2FrdTpjb25uZWN0aW9uXCI7XG59KShFQ29ubmVjdGlvblN0YXRlRXZlbnRzIHx8IChFQ29ubmVjdGlvblN0YXRlRXZlbnRzID0ge30pKTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNvbm5lY3Rpb25fbWFuYWdlci5qcy5tYXAiXSwibmFtZXMiOlsiVGFncyIsIkVQZWVyc0J5RGlzY292ZXJ5RXZlbnRzIiwiRUNvbm5lY3Rpb25TdGF0ZUV2ZW50cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/utils/node_modules/@waku/interfaces/dist/connection_manager.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/utils/node_modules/@waku/interfaces/dist/constants.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@waku/utils/node_modules/@waku/interfaces/dist/constants.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DEFAULT_CLUSTER_ID: () => (/* binding */ DEFAULT_CLUSTER_ID),\n/* harmony export */   DefaultPubsubTopic: () => (/* binding */ DefaultPubsubTopic)\n/* harmony export */ });\n/**\n * DefaultPubsubTopic is the default gossipsub topic to use for Waku.\n */ const DefaultPubsubTopic = \"/waku/2/default-waku/proto\";\n/**\n * The default cluster ID for The Waku Network\n */ const DEFAULT_CLUSTER_ID = 1; //# sourceMappingURL=constants.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdha3UvdXRpbHMvbm9kZV9tb2R1bGVzL0B3YWt1L2ludGVyZmFjZXMvZGlzdC9jb25zdGFudHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTs7Q0FFQyxHQUNNLE1BQU1BLHFCQUFxQiw2QkFBNkI7QUFDL0Q7O0NBRUMsR0FDTSxNQUFNQyxxQkFBcUIsRUFBRSxDQUNwQyxxQ0FBcUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mbHVzaC1ub3Rlcy8uL25vZGVfbW9kdWxlcy9Ad2FrdS91dGlscy9ub2RlX21vZHVsZXMvQHdha3UvaW50ZXJmYWNlcy9kaXN0L2NvbnN0YW50cy5qcz84MTY1Il0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogRGVmYXVsdFB1YnN1YlRvcGljIGlzIHRoZSBkZWZhdWx0IGdvc3NpcHN1YiB0b3BpYyB0byB1c2UgZm9yIFdha3UuXG4gKi9cbmV4cG9ydCBjb25zdCBEZWZhdWx0UHVic3ViVG9waWMgPSBcIi93YWt1LzIvZGVmYXVsdC13YWt1L3Byb3RvXCI7XG4vKipcbiAqIFRoZSBkZWZhdWx0IGNsdXN0ZXIgSUQgZm9yIFRoZSBXYWt1IE5ldHdvcmtcbiAqL1xuZXhwb3J0IGNvbnN0IERFRkFVTFRfQ0xVU1RFUl9JRCA9IDE7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jb25zdGFudHMuanMubWFwIl0sIm5hbWVzIjpbIkRlZmF1bHRQdWJzdWJUb3BpYyIsIkRFRkFVTFRfQ0xVU1RFUl9JRCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/utils/node_modules/@waku/interfaces/dist/constants.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/utils/node_modules/@waku/interfaces/dist/dns_discovery.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@waku/utils/node_modules/@waku/interfaces/dist/dns_discovery.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n //# sourceMappingURL=dns_discovery.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdha3UvdXRpbHMvbm9kZV9tb2R1bGVzL0B3YWt1L2ludGVyZmFjZXMvZGlzdC9kbnNfZGlzY292ZXJ5LmpzIiwibWFwcGluZ3MiOiI7QUFBVSxDQUNWLHlDQUF5QyIsInNvdXJjZXMiOlsid2VicGFjazovL2ZsdXNoLW5vdGVzLy4vbm9kZV9tb2R1bGVzL0B3YWt1L3V0aWxzL25vZGVfbW9kdWxlcy9Ad2FrdS9pbnRlcmZhY2VzL2Rpc3QvZG5zX2Rpc2NvdmVyeS5qcz9kN2IzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCB7fTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRuc19kaXNjb3ZlcnkuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/utils/node_modules/@waku/interfaces/dist/dns_discovery.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/utils/node_modules/@waku/interfaces/dist/enr.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@waku/utils/node_modules/@waku/interfaces/dist/enr.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n //# sourceMappingURL=enr.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdha3UvdXRpbHMvbm9kZV9tb2R1bGVzL0B3YWt1L2ludGVyZmFjZXMvZGlzdC9lbnIuanMiLCJtYXBwaW5ncyI6IjtBQUFVLENBQ1YsK0JBQStCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZmx1c2gtbm90ZXMvLi9ub2RlX21vZHVsZXMvQHdha3UvdXRpbHMvbm9kZV9tb2R1bGVzL0B3YWt1L2ludGVyZmFjZXMvZGlzdC9lbnIuanM/MmZiNCJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQge307XG4vLyMgc291cmNlTWFwcGluZ1VSTD1lbnIuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/utils/node_modules/@waku/interfaces/dist/enr.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/utils/node_modules/@waku/interfaces/dist/filter.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@waku/utils/node_modules/@waku/interfaces/dist/filter.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n //# sourceMappingURL=filter.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdha3UvdXRpbHMvbm9kZV9tb2R1bGVzL0B3YWt1L2ludGVyZmFjZXMvZGlzdC9maWx0ZXIuanMiLCJtYXBwaW5ncyI6IjtBQUFVLENBQ1Ysa0NBQWtDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZmx1c2gtbm90ZXMvLi9ub2RlX21vZHVsZXMvQHdha3UvdXRpbHMvbm9kZV9tb2R1bGVzL0B3YWt1L2ludGVyZmFjZXMvZGlzdC9maWx0ZXIuanM/ZDFiYSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQge307XG4vLyMgc291cmNlTWFwcGluZ1VSTD1maWx0ZXIuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/utils/node_modules/@waku/interfaces/dist/filter.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/utils/node_modules/@waku/interfaces/dist/index.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@waku/utils/node_modules/@waku/interfaces/dist/index.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DEFAULT_CLUSTER_ID: () => (/* reexport safe */ _constants_js__WEBPACK_IMPORTED_MODULE_17__.DEFAULT_CLUSTER_ID),\n/* harmony export */   DefaultPubsubTopic: () => (/* reexport safe */ _constants_js__WEBPACK_IMPORTED_MODULE_17__.DefaultPubsubTopic),\n/* harmony export */   EConnectionStateEvents: () => (/* reexport safe */ _connection_manager_js__WEBPACK_IMPORTED_MODULE_9__.EConnectionStateEvents),\n/* harmony export */   EPeersByDiscoveryEvents: () => (/* reexport safe */ _connection_manager_js__WEBPACK_IMPORTED_MODULE_9__.EPeersByDiscoveryEvents),\n/* harmony export */   PageDirection: () => (/* reexport safe */ _store_js__WEBPACK_IMPORTED_MODULE_7__.PageDirection),\n/* harmony export */   ProtocolError: () => (/* reexport safe */ _protocols_js__WEBPACK_IMPORTED_MODULE_5__.ProtocolError),\n/* harmony export */   Protocols: () => (/* reexport safe */ _protocols_js__WEBPACK_IMPORTED_MODULE_5__.Protocols),\n/* harmony export */   Tags: () => (/* reexport safe */ _connection_manager_js__WEBPACK_IMPORTED_MODULE_9__.Tags)\n/* harmony export */ });\n/* harmony import */ var _enr_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./enr.js */ \"(ssr)/./node_modules/@waku/utils/node_modules/@waku/interfaces/dist/enr.js\");\n/* harmony import */ var _filter_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./filter.js */ \"(ssr)/./node_modules/@waku/utils/node_modules/@waku/interfaces/dist/filter.js\");\n/* harmony import */ var _light_push_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./light_push.js */ \"(ssr)/./node_modules/@waku/utils/node_modules/@waku/interfaces/dist/light_push.js\");\n/* harmony import */ var _message_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./message.js */ \"(ssr)/./node_modules/@waku/utils/node_modules/@waku/interfaces/dist/message.js\");\n/* harmony import */ var _peer_exchange_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./peer_exchange.js */ \"(ssr)/./node_modules/@waku/utils/node_modules/@waku/interfaces/dist/peer_exchange.js\");\n/* harmony import */ var _protocols_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./protocols.js */ \"(ssr)/./node_modules/@waku/utils/node_modules/@waku/interfaces/dist/protocols.js\");\n/* harmony import */ var _relay_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./relay.js */ \"(ssr)/./node_modules/@waku/utils/node_modules/@waku/interfaces/dist/relay.js\");\n/* harmony import */ var _store_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./store.js */ \"(ssr)/./node_modules/@waku/utils/node_modules/@waku/interfaces/dist/store.js\");\n/* harmony import */ var _waku_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./waku.js */ \"(ssr)/./node_modules/@waku/utils/node_modules/@waku/interfaces/dist/waku.js\");\n/* harmony import */ var _connection_manager_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./connection_manager.js */ \"(ssr)/./node_modules/@waku/utils/node_modules/@waku/interfaces/dist/connection_manager.js\");\n/* harmony import */ var _sender_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./sender.js */ \"(ssr)/./node_modules/@waku/utils/node_modules/@waku/interfaces/dist/sender.js\");\n/* harmony import */ var _receiver_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./receiver.js */ \"(ssr)/./node_modules/@waku/utils/node_modules/@waku/interfaces/dist/receiver.js\");\n/* harmony import */ var _misc_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./misc.js */ \"(ssr)/./node_modules/@waku/utils/node_modules/@waku/interfaces/dist/misc.js\");\n/* harmony import */ var _libp2p_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./libp2p.js */ \"(ssr)/./node_modules/@waku/utils/node_modules/@waku/interfaces/dist/libp2p.js\");\n/* harmony import */ var _keep_alive_manager_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./keep_alive_manager.js */ \"(ssr)/./node_modules/@waku/utils/node_modules/@waku/interfaces/dist/keep_alive_manager.js\");\n/* harmony import */ var _dns_discovery_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./dns_discovery.js */ \"(ssr)/./node_modules/@waku/utils/node_modules/@waku/interfaces/dist/dns_discovery.js\");\n/* harmony import */ var _metadata_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./metadata.js */ \"(ssr)/./node_modules/@waku/utils/node_modules/@waku/interfaces/dist/metadata.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./constants.js */ \"(ssr)/./node_modules/@waku/utils/node_modules/@waku/interfaces/dist/constants.js\");\n/* harmony import */ var _local_storage_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./local_storage.js */ \"(ssr)/./node_modules/@waku/utils/node_modules/@waku/interfaces/dist/local_storage.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdha3UvdXRpbHMvbm9kZV9tb2R1bGVzL0B3YWt1L2ludGVyZmFjZXMvZGlzdC9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBeUI7QUFDRztBQUNJO0FBQ0g7QUFDTTtBQUNKO0FBQ0o7QUFDQTtBQUNEO0FBQ2M7QUFDWjtBQUNFO0FBQ0o7QUFDRTtBQUNZO0FBQ0w7QUFDTDtBQUNDO0FBQ0ksQ0FDbkMsaUNBQWlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZmx1c2gtbm90ZXMvLi9ub2RlX21vZHVsZXMvQHdha3UvdXRpbHMvbm9kZV9tb2R1bGVzL0B3YWt1L2ludGVyZmFjZXMvZGlzdC9pbmRleC5qcz9jNmYwIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCAqIGZyb20gXCIuL2Vuci5qc1wiO1xuZXhwb3J0ICogZnJvbSBcIi4vZmlsdGVyLmpzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9saWdodF9wdXNoLmpzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9tZXNzYWdlLmpzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9wZWVyX2V4Y2hhbmdlLmpzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9wcm90b2NvbHMuanNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL3JlbGF5LmpzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9zdG9yZS5qc1wiO1xuZXhwb3J0ICogZnJvbSBcIi4vd2FrdS5qc1wiO1xuZXhwb3J0ICogZnJvbSBcIi4vY29ubmVjdGlvbl9tYW5hZ2VyLmpzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9zZW5kZXIuanNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL3JlY2VpdmVyLmpzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9taXNjLmpzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9saWJwMnAuanNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL2tlZXBfYWxpdmVfbWFuYWdlci5qc1wiO1xuZXhwb3J0ICogZnJvbSBcIi4vZG5zX2Rpc2NvdmVyeS5qc1wiO1xuZXhwb3J0ICogZnJvbSBcIi4vbWV0YWRhdGEuanNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL2NvbnN0YW50cy5qc1wiO1xuZXhwb3J0ICogZnJvbSBcIi4vbG9jYWxfc3RvcmFnZS5qc1wiO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/utils/node_modules/@waku/interfaces/dist/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/utils/node_modules/@waku/interfaces/dist/keep_alive_manager.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@waku/utils/node_modules/@waku/interfaces/dist/keep_alive_manager.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n //# sourceMappingURL=keep_alive_manager.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdha3UvdXRpbHMvbm9kZV9tb2R1bGVzL0B3YWt1L2ludGVyZmFjZXMvZGlzdC9rZWVwX2FsaXZlX21hbmFnZXIuanMiLCJtYXBwaW5ncyI6IjtBQUFVLENBQ1YsOENBQThDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZmx1c2gtbm90ZXMvLi9ub2RlX21vZHVsZXMvQHdha3UvdXRpbHMvbm9kZV9tb2R1bGVzL0B3YWt1L2ludGVyZmFjZXMvZGlzdC9rZWVwX2FsaXZlX21hbmFnZXIuanM/MTYyOSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQge307XG4vLyMgc291cmNlTWFwcGluZ1VSTD1rZWVwX2FsaXZlX21hbmFnZXIuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/utils/node_modules/@waku/interfaces/dist/keep_alive_manager.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/utils/node_modules/@waku/interfaces/dist/libp2p.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@waku/utils/node_modules/@waku/interfaces/dist/libp2p.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n //# sourceMappingURL=libp2p.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdha3UvdXRpbHMvbm9kZV9tb2R1bGVzL0B3YWt1L2ludGVyZmFjZXMvZGlzdC9saWJwMnAuanMiLCJtYXBwaW5ncyI6IjtBQUFVLENBQ1Ysa0NBQWtDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZmx1c2gtbm90ZXMvLi9ub2RlX21vZHVsZXMvQHdha3UvdXRpbHMvbm9kZV9tb2R1bGVzL0B3YWt1L2ludGVyZmFjZXMvZGlzdC9saWJwMnAuanM/MGYyZCJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQge307XG4vLyMgc291cmNlTWFwcGluZ1VSTD1saWJwMnAuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/utils/node_modules/@waku/interfaces/dist/libp2p.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/utils/node_modules/@waku/interfaces/dist/light_push.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@waku/utils/node_modules/@waku/interfaces/dist/light_push.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n //# sourceMappingURL=light_push.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdha3UvdXRpbHMvbm9kZV9tb2R1bGVzL0B3YWt1L2ludGVyZmFjZXMvZGlzdC9saWdodF9wdXNoLmpzIiwibWFwcGluZ3MiOiI7QUFBVSxDQUNWLHNDQUFzQyIsInNvdXJjZXMiOlsid2VicGFjazovL2ZsdXNoLW5vdGVzLy4vbm9kZV9tb2R1bGVzL0B3YWt1L3V0aWxzL25vZGVfbW9kdWxlcy9Ad2FrdS9pbnRlcmZhY2VzL2Rpc3QvbGlnaHRfcHVzaC5qcz85ODFmIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCB7fTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWxpZ2h0X3B1c2guanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/utils/node_modules/@waku/interfaces/dist/light_push.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/utils/node_modules/@waku/interfaces/dist/local_storage.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@waku/utils/node_modules/@waku/interfaces/dist/local_storage.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n //# sourceMappingURL=local_storage.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdha3UvdXRpbHMvbm9kZV9tb2R1bGVzL0B3YWt1L2ludGVyZmFjZXMvZGlzdC9sb2NhbF9zdG9yYWdlLmpzIiwibWFwcGluZ3MiOiI7QUFBVSxDQUNWLHlDQUF5QyIsInNvdXJjZXMiOlsid2VicGFjazovL2ZsdXNoLW5vdGVzLy4vbm9kZV9tb2R1bGVzL0B3YWt1L3V0aWxzL25vZGVfbW9kdWxlcy9Ad2FrdS9pbnRlcmZhY2VzL2Rpc3QvbG9jYWxfc3RvcmFnZS5qcz9kYzhkIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCB7fTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWxvY2FsX3N0b3JhZ2UuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/utils/node_modules/@waku/interfaces/dist/local_storage.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/utils/node_modules/@waku/interfaces/dist/message.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@waku/utils/node_modules/@waku/interfaces/dist/message.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n //# sourceMappingURL=message.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdha3UvdXRpbHMvbm9kZV9tb2R1bGVzL0B3YWt1L2ludGVyZmFjZXMvZGlzdC9tZXNzYWdlLmpzIiwibWFwcGluZ3MiOiI7QUFBVSxDQUNWLG1DQUFtQyIsInNvdXJjZXMiOlsid2VicGFjazovL2ZsdXNoLW5vdGVzLy4vbm9kZV9tb2R1bGVzL0B3YWt1L3V0aWxzL25vZGVfbW9kdWxlcy9Ad2FrdS9pbnRlcmZhY2VzL2Rpc3QvbWVzc2FnZS5qcz85YWNiIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCB7fTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPW1lc3NhZ2UuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/utils/node_modules/@waku/interfaces/dist/message.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/utils/node_modules/@waku/interfaces/dist/metadata.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@waku/utils/node_modules/@waku/interfaces/dist/metadata.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n //# sourceMappingURL=metadata.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdha3UvdXRpbHMvbm9kZV9tb2R1bGVzL0B3YWt1L2ludGVyZmFjZXMvZGlzdC9tZXRhZGF0YS5qcyIsIm1hcHBpbmdzIjoiO0FBQVUsQ0FDVixvQ0FBb0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mbHVzaC1ub3Rlcy8uL25vZGVfbW9kdWxlcy9Ad2FrdS91dGlscy9ub2RlX21vZHVsZXMvQHdha3UvaW50ZXJmYWNlcy9kaXN0L21ldGFkYXRhLmpzPzE0ZDciXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHt9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bWV0YWRhdGEuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/utils/node_modules/@waku/interfaces/dist/metadata.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/utils/node_modules/@waku/interfaces/dist/misc.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@waku/utils/node_modules/@waku/interfaces/dist/misc.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n //# sourceMappingURL=misc.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdha3UvdXRpbHMvbm9kZV9tb2R1bGVzL0B3YWt1L2ludGVyZmFjZXMvZGlzdC9taXNjLmpzIiwibWFwcGluZ3MiOiI7QUFBVSxDQUNWLGdDQUFnQyIsInNvdXJjZXMiOlsid2VicGFjazovL2ZsdXNoLW5vdGVzLy4vbm9kZV9tb2R1bGVzL0B3YWt1L3V0aWxzL25vZGVfbW9kdWxlcy9Ad2FrdS9pbnRlcmZhY2VzL2Rpc3QvbWlzYy5qcz9lMzUwIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCB7fTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPW1pc2MuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/utils/node_modules/@waku/interfaces/dist/misc.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/utils/node_modules/@waku/interfaces/dist/peer_exchange.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@waku/utils/node_modules/@waku/interfaces/dist/peer_exchange.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n //# sourceMappingURL=peer_exchange.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdha3UvdXRpbHMvbm9kZV9tb2R1bGVzL0B3YWt1L2ludGVyZmFjZXMvZGlzdC9wZWVyX2V4Y2hhbmdlLmpzIiwibWFwcGluZ3MiOiI7QUFBVSxDQUNWLHlDQUF5QyIsInNvdXJjZXMiOlsid2VicGFjazovL2ZsdXNoLW5vdGVzLy4vbm9kZV9tb2R1bGVzL0B3YWt1L3V0aWxzL25vZGVfbW9kdWxlcy9Ad2FrdS9pbnRlcmZhY2VzL2Rpc3QvcGVlcl9leGNoYW5nZS5qcz8zOGNiIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCB7fTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXBlZXJfZXhjaGFuZ2UuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/utils/node_modules/@waku/interfaces/dist/peer_exchange.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/utils/node_modules/@waku/interfaces/dist/protocols.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@waku/utils/node_modules/@waku/interfaces/dist/protocols.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ProtocolError: () => (/* binding */ ProtocolError),\n/* harmony export */   Protocols: () => (/* binding */ Protocols)\n/* harmony export */ });\nvar Protocols;\n(function(Protocols) {\n    Protocols[\"Relay\"] = \"relay\";\n    Protocols[\"Store\"] = \"store\";\n    Protocols[\"LightPush\"] = \"lightpush\";\n    Protocols[\"Filter\"] = \"filter\";\n})(Protocols || (Protocols = {}));\nvar ProtocolError;\n(function(ProtocolError) {\n    /** Could not determine the origin of the fault. Best to check connectivity and try again */ ProtocolError[\"GENERIC_FAIL\"] = \"Generic error\";\n    /**\n     * Failure to protobuf encode the message. This is not recoverable and needs\n     * further investigation.\n     */ ProtocolError[\"ENCODE_FAILED\"] = \"Failed to encode\";\n    /**\n     * Failure to protobuf decode the message. May be due to a remote peer issue,\n     * ensuring that messages are sent via several peer enable mitigation of this error.\n     */ ProtocolError[\"DECODE_FAILED\"] = \"Failed to decode\";\n    /**\n     * The message payload is empty, making the message invalid. Ensure that a non-empty\n     * payload is set on the outgoing message.\n     */ ProtocolError[\"EMPTY_PAYLOAD\"] = \"Payload is empty\";\n    /**\n     * The message size is above the maximum message size allowed on the Waku Network.\n     * Compressing the message or using an alternative strategy for large messages is recommended.\n     */ ProtocolError[\"SIZE_TOO_BIG\"] = \"Size is too big\";\n    /**\n     * The PubsubTopic passed to the send function is not configured on the Waku node.\n     * Please ensure that the PubsubTopic is used when initializing the Waku node.\n     */ ProtocolError[\"TOPIC_NOT_CONFIGURED\"] = \"Topic not configured\";\n    /**\n     * Failure to find a peer with suitable protocols. This may due to a connection issue.\n     * Mitigation can be: retrying after a given time period, display connectivity issue\n     * to user or listening for `peer:connected:bootstrap` or `peer:connected:peer-exchange`\n     * on the connection manager before retrying.\n     */ ProtocolError[\"NO_PEER_AVAILABLE\"] = \"No peer available\";\n    /**\n     * The remote peer did not behave as expected. Mitigation for `NO_PEER_AVAILABLE`\n     * or `DECODE_FAILED` can be used.\n     */ ProtocolError[\"REMOTE_PEER_FAULT\"] = \"Remote peer fault\";\n    /**\n     * The remote peer rejected the message. Information provided by the remote peer\n     * is logged. Review message validity, or mitigation for `NO_PEER_AVAILABLE`\n     * or `DECODE_FAILED` can be used.\n     */ ProtocolError[\"REMOTE_PEER_REJECTED\"] = \"Remote peer rejected\";\n    /**\n     * The protocol request timed out without a response. This may be due to a connection issue.\n     * Mitigation can be: retrying after a given time period\n     */ ProtocolError[\"REQUEST_TIMEOUT\"] = \"Request timeout\";\n})(ProtocolError || (ProtocolError = {})); //# sourceMappingURL=protocols.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdha3UvdXRpbHMvbm9kZV9tb2R1bGVzL0B3YWt1L2ludGVyZmFjZXMvZGlzdC9wcm90b2NvbHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBTyxJQUFJQSxVQUFVO0FBQ3BCLFVBQVVBLFNBQVM7SUFDaEJBLFNBQVMsQ0FBQyxRQUFRLEdBQUc7SUFDckJBLFNBQVMsQ0FBQyxRQUFRLEdBQUc7SUFDckJBLFNBQVMsQ0FBQyxZQUFZLEdBQUc7SUFDekJBLFNBQVMsQ0FBQyxTQUFTLEdBQUc7QUFDMUIsR0FBR0EsYUFBY0EsQ0FBQUEsWUFBWSxDQUFDO0FBQ3ZCLElBQUlDLGNBQWM7QUFDeEIsVUFBVUEsYUFBYTtJQUNwQiwwRkFBMEYsR0FDMUZBLGFBQWEsQ0FBQyxlQUFlLEdBQUc7SUFDaEM7OztLQUdDLEdBQ0RBLGFBQWEsQ0FBQyxnQkFBZ0IsR0FBRztJQUNqQzs7O0tBR0MsR0FDREEsYUFBYSxDQUFDLGdCQUFnQixHQUFHO0lBQ2pDOzs7S0FHQyxHQUNEQSxhQUFhLENBQUMsZ0JBQWdCLEdBQUc7SUFDakM7OztLQUdDLEdBQ0RBLGFBQWEsQ0FBQyxlQUFlLEdBQUc7SUFDaEM7OztLQUdDLEdBQ0RBLGFBQWEsQ0FBQyx1QkFBdUIsR0FBRztJQUN4Qzs7Ozs7S0FLQyxHQUNEQSxhQUFhLENBQUMsb0JBQW9CLEdBQUc7SUFDckM7OztLQUdDLEdBQ0RBLGFBQWEsQ0FBQyxvQkFBb0IsR0FBRztJQUNyQzs7OztLQUlDLEdBQ0RBLGFBQWEsQ0FBQyx1QkFBdUIsR0FBRztJQUN4Qzs7O0tBR0MsR0FDREEsYUFBYSxDQUFDLGtCQUFrQixHQUFHO0FBQ3ZDLEdBQUdBLGlCQUFrQkEsQ0FBQUEsZ0JBQWdCLENBQUMsS0FDdEMscUNBQXFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZmx1c2gtbm90ZXMvLi9ub2RlX21vZHVsZXMvQHdha3UvdXRpbHMvbm9kZV9tb2R1bGVzL0B3YWt1L2ludGVyZmFjZXMvZGlzdC9wcm90b2NvbHMuanM/YWNhYSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgdmFyIFByb3RvY29scztcbihmdW5jdGlvbiAoUHJvdG9jb2xzKSB7XG4gICAgUHJvdG9jb2xzW1wiUmVsYXlcIl0gPSBcInJlbGF5XCI7XG4gICAgUHJvdG9jb2xzW1wiU3RvcmVcIl0gPSBcInN0b3JlXCI7XG4gICAgUHJvdG9jb2xzW1wiTGlnaHRQdXNoXCJdID0gXCJsaWdodHB1c2hcIjtcbiAgICBQcm90b2NvbHNbXCJGaWx0ZXJcIl0gPSBcImZpbHRlclwiO1xufSkoUHJvdG9jb2xzIHx8IChQcm90b2NvbHMgPSB7fSkpO1xuZXhwb3J0IHZhciBQcm90b2NvbEVycm9yO1xuKGZ1bmN0aW9uIChQcm90b2NvbEVycm9yKSB7XG4gICAgLyoqIENvdWxkIG5vdCBkZXRlcm1pbmUgdGhlIG9yaWdpbiBvZiB0aGUgZmF1bHQuIEJlc3QgdG8gY2hlY2sgY29ubmVjdGl2aXR5IGFuZCB0cnkgYWdhaW4gKi9cbiAgICBQcm90b2NvbEVycm9yW1wiR0VORVJJQ19GQUlMXCJdID0gXCJHZW5lcmljIGVycm9yXCI7XG4gICAgLyoqXG4gICAgICogRmFpbHVyZSB0byBwcm90b2J1ZiBlbmNvZGUgdGhlIG1lc3NhZ2UuIFRoaXMgaXMgbm90IHJlY292ZXJhYmxlIGFuZCBuZWVkc1xuICAgICAqIGZ1cnRoZXIgaW52ZXN0aWdhdGlvbi5cbiAgICAgKi9cbiAgICBQcm90b2NvbEVycm9yW1wiRU5DT0RFX0ZBSUxFRFwiXSA9IFwiRmFpbGVkIHRvIGVuY29kZVwiO1xuICAgIC8qKlxuICAgICAqIEZhaWx1cmUgdG8gcHJvdG9idWYgZGVjb2RlIHRoZSBtZXNzYWdlLiBNYXkgYmUgZHVlIHRvIGEgcmVtb3RlIHBlZXIgaXNzdWUsXG4gICAgICogZW5zdXJpbmcgdGhhdCBtZXNzYWdlcyBhcmUgc2VudCB2aWEgc2V2ZXJhbCBwZWVyIGVuYWJsZSBtaXRpZ2F0aW9uIG9mIHRoaXMgZXJyb3IuXG4gICAgICovXG4gICAgUHJvdG9jb2xFcnJvcltcIkRFQ09ERV9GQUlMRURcIl0gPSBcIkZhaWxlZCB0byBkZWNvZGVcIjtcbiAgICAvKipcbiAgICAgKiBUaGUgbWVzc2FnZSBwYXlsb2FkIGlzIGVtcHR5LCBtYWtpbmcgdGhlIG1lc3NhZ2UgaW52YWxpZC4gRW5zdXJlIHRoYXQgYSBub24tZW1wdHlcbiAgICAgKiBwYXlsb2FkIGlzIHNldCBvbiB0aGUgb3V0Z29pbmcgbWVzc2FnZS5cbiAgICAgKi9cbiAgICBQcm90b2NvbEVycm9yW1wiRU1QVFlfUEFZTE9BRFwiXSA9IFwiUGF5bG9hZCBpcyBlbXB0eVwiO1xuICAgIC8qKlxuICAgICAqIFRoZSBtZXNzYWdlIHNpemUgaXMgYWJvdmUgdGhlIG1heGltdW0gbWVzc2FnZSBzaXplIGFsbG93ZWQgb24gdGhlIFdha3UgTmV0d29yay5cbiAgICAgKiBDb21wcmVzc2luZyB0aGUgbWVzc2FnZSBvciB1c2luZyBhbiBhbHRlcm5hdGl2ZSBzdHJhdGVneSBmb3IgbGFyZ2UgbWVzc2FnZXMgaXMgcmVjb21tZW5kZWQuXG4gICAgICovXG4gICAgUHJvdG9jb2xFcnJvcltcIlNJWkVfVE9PX0JJR1wiXSA9IFwiU2l6ZSBpcyB0b28gYmlnXCI7XG4gICAgLyoqXG4gICAgICogVGhlIFB1YnN1YlRvcGljIHBhc3NlZCB0byB0aGUgc2VuZCBmdW5jdGlvbiBpcyBub3QgY29uZmlndXJlZCBvbiB0aGUgV2FrdSBub2RlLlxuICAgICAqIFBsZWFzZSBlbnN1cmUgdGhhdCB0aGUgUHVic3ViVG9waWMgaXMgdXNlZCB3aGVuIGluaXRpYWxpemluZyB0aGUgV2FrdSBub2RlLlxuICAgICAqL1xuICAgIFByb3RvY29sRXJyb3JbXCJUT1BJQ19OT1RfQ09ORklHVVJFRFwiXSA9IFwiVG9waWMgbm90IGNvbmZpZ3VyZWRcIjtcbiAgICAvKipcbiAgICAgKiBGYWlsdXJlIHRvIGZpbmQgYSBwZWVyIHdpdGggc3VpdGFibGUgcHJvdG9jb2xzLiBUaGlzIG1heSBkdWUgdG8gYSBjb25uZWN0aW9uIGlzc3VlLlxuICAgICAqIE1pdGlnYXRpb24gY2FuIGJlOiByZXRyeWluZyBhZnRlciBhIGdpdmVuIHRpbWUgcGVyaW9kLCBkaXNwbGF5IGNvbm5lY3Rpdml0eSBpc3N1ZVxuICAgICAqIHRvIHVzZXIgb3IgbGlzdGVuaW5nIGZvciBgcGVlcjpjb25uZWN0ZWQ6Ym9vdHN0cmFwYCBvciBgcGVlcjpjb25uZWN0ZWQ6cGVlci1leGNoYW5nZWBcbiAgICAgKiBvbiB0aGUgY29ubmVjdGlvbiBtYW5hZ2VyIGJlZm9yZSByZXRyeWluZy5cbiAgICAgKi9cbiAgICBQcm90b2NvbEVycm9yW1wiTk9fUEVFUl9BVkFJTEFCTEVcIl0gPSBcIk5vIHBlZXIgYXZhaWxhYmxlXCI7XG4gICAgLyoqXG4gICAgICogVGhlIHJlbW90ZSBwZWVyIGRpZCBub3QgYmVoYXZlIGFzIGV4cGVjdGVkLiBNaXRpZ2F0aW9uIGZvciBgTk9fUEVFUl9BVkFJTEFCTEVgXG4gICAgICogb3IgYERFQ09ERV9GQUlMRURgIGNhbiBiZSB1c2VkLlxuICAgICAqL1xuICAgIFByb3RvY29sRXJyb3JbXCJSRU1PVEVfUEVFUl9GQVVMVFwiXSA9IFwiUmVtb3RlIHBlZXIgZmF1bHRcIjtcbiAgICAvKipcbiAgICAgKiBUaGUgcmVtb3RlIHBlZXIgcmVqZWN0ZWQgdGhlIG1lc3NhZ2UuIEluZm9ybWF0aW9uIHByb3ZpZGVkIGJ5IHRoZSByZW1vdGUgcGVlclxuICAgICAqIGlzIGxvZ2dlZC4gUmV2aWV3IG1lc3NhZ2UgdmFsaWRpdHksIG9yIG1pdGlnYXRpb24gZm9yIGBOT19QRUVSX0FWQUlMQUJMRWBcbiAgICAgKiBvciBgREVDT0RFX0ZBSUxFRGAgY2FuIGJlIHVzZWQuXG4gICAgICovXG4gICAgUHJvdG9jb2xFcnJvcltcIlJFTU9URV9QRUVSX1JFSkVDVEVEXCJdID0gXCJSZW1vdGUgcGVlciByZWplY3RlZFwiO1xuICAgIC8qKlxuICAgICAqIFRoZSBwcm90b2NvbCByZXF1ZXN0IHRpbWVkIG91dCB3aXRob3V0IGEgcmVzcG9uc2UuIFRoaXMgbWF5IGJlIGR1ZSB0byBhIGNvbm5lY3Rpb24gaXNzdWUuXG4gICAgICogTWl0aWdhdGlvbiBjYW4gYmU6IHJldHJ5aW5nIGFmdGVyIGEgZ2l2ZW4gdGltZSBwZXJpb2RcbiAgICAgKi9cbiAgICBQcm90b2NvbEVycm9yW1wiUkVRVUVTVF9USU1FT1VUXCJdID0gXCJSZXF1ZXN0IHRpbWVvdXRcIjtcbn0pKFByb3RvY29sRXJyb3IgfHwgKFByb3RvY29sRXJyb3IgPSB7fSkpO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cHJvdG9jb2xzLmpzLm1hcCJdLCJuYW1lcyI6WyJQcm90b2NvbHMiLCJQcm90b2NvbEVycm9yIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/utils/node_modules/@waku/interfaces/dist/protocols.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/utils/node_modules/@waku/interfaces/dist/receiver.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@waku/utils/node_modules/@waku/interfaces/dist/receiver.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n //# sourceMappingURL=receiver.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdha3UvdXRpbHMvbm9kZV9tb2R1bGVzL0B3YWt1L2ludGVyZmFjZXMvZGlzdC9yZWNlaXZlci5qcyIsIm1hcHBpbmdzIjoiO0FBQVUsQ0FDVixvQ0FBb0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mbHVzaC1ub3Rlcy8uL25vZGVfbW9kdWxlcy9Ad2FrdS91dGlscy9ub2RlX21vZHVsZXMvQHdha3UvaW50ZXJmYWNlcy9kaXN0L3JlY2VpdmVyLmpzPzQ5MjEiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHt9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cmVjZWl2ZXIuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/utils/node_modules/@waku/interfaces/dist/receiver.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/utils/node_modules/@waku/interfaces/dist/relay.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@waku/utils/node_modules/@waku/interfaces/dist/relay.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n //# sourceMappingURL=relay.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdha3UvdXRpbHMvbm9kZV9tb2R1bGVzL0B3YWt1L2ludGVyZmFjZXMvZGlzdC9yZWxheS5qcyIsIm1hcHBpbmdzIjoiO0FBQVUsQ0FDVixpQ0FBaUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mbHVzaC1ub3Rlcy8uL25vZGVfbW9kdWxlcy9Ad2FrdS91dGlscy9ub2RlX21vZHVsZXMvQHdha3UvaW50ZXJmYWNlcy9kaXN0L3JlbGF5LmpzP2JkMjYiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHt9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cmVsYXkuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/utils/node_modules/@waku/interfaces/dist/relay.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/utils/node_modules/@waku/interfaces/dist/sender.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@waku/utils/node_modules/@waku/interfaces/dist/sender.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n //# sourceMappingURL=sender.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdha3UvdXRpbHMvbm9kZV9tb2R1bGVzL0B3YWt1L2ludGVyZmFjZXMvZGlzdC9zZW5kZXIuanMiLCJtYXBwaW5ncyI6IjtBQUFVLENBQ1Ysa0NBQWtDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZmx1c2gtbm90ZXMvLi9ub2RlX21vZHVsZXMvQHdha3UvdXRpbHMvbm9kZV9tb2R1bGVzL0B3YWt1L2ludGVyZmFjZXMvZGlzdC9zZW5kZXIuanM/YTU5MCJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQge307XG4vLyMgc291cmNlTWFwcGluZ1VSTD1zZW5kZXIuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/utils/node_modules/@waku/interfaces/dist/sender.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/utils/node_modules/@waku/interfaces/dist/store.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@waku/utils/node_modules/@waku/interfaces/dist/store.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PageDirection: () => (/* binding */ PageDirection)\n/* harmony export */ });\nvar PageDirection;\n(function(PageDirection) {\n    PageDirection[\"BACKWARD\"] = \"backward\";\n    PageDirection[\"FORWARD\"] = \"forward\";\n})(PageDirection || (PageDirection = {})); //# sourceMappingURL=store.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdha3UvdXRpbHMvbm9kZV9tb2R1bGVzL0B3YWt1L2ludGVyZmFjZXMvZGlzdC9zdG9yZS5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQU8sSUFBSUEsY0FBYztBQUN4QixVQUFVQSxhQUFhO0lBQ3BCQSxhQUFhLENBQUMsV0FBVyxHQUFHO0lBQzVCQSxhQUFhLENBQUMsVUFBVSxHQUFHO0FBQy9CLEdBQUdBLGlCQUFrQkEsQ0FBQUEsZ0JBQWdCLENBQUMsS0FDdEMsaUNBQWlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZmx1c2gtbm90ZXMvLi9ub2RlX21vZHVsZXMvQHdha3UvdXRpbHMvbm9kZV9tb2R1bGVzL0B3YWt1L2ludGVyZmFjZXMvZGlzdC9zdG9yZS5qcz9kMWViIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCB2YXIgUGFnZURpcmVjdGlvbjtcbihmdW5jdGlvbiAoUGFnZURpcmVjdGlvbikge1xuICAgIFBhZ2VEaXJlY3Rpb25bXCJCQUNLV0FSRFwiXSA9IFwiYmFja3dhcmRcIjtcbiAgICBQYWdlRGlyZWN0aW9uW1wiRk9SV0FSRFwiXSA9IFwiZm9yd2FyZFwiO1xufSkoUGFnZURpcmVjdGlvbiB8fCAoUGFnZURpcmVjdGlvbiA9IHt9KSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1zdG9yZS5qcy5tYXAiXSwibmFtZXMiOlsiUGFnZURpcmVjdGlvbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/utils/node_modules/@waku/interfaces/dist/store.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@waku/utils/node_modules/@waku/interfaces/dist/waku.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@waku/utils/node_modules/@waku/interfaces/dist/waku.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n //# sourceMappingURL=waku.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdha3UvdXRpbHMvbm9kZV9tb2R1bGVzL0B3YWt1L2ludGVyZmFjZXMvZGlzdC93YWt1LmpzIiwibWFwcGluZ3MiOiI7QUFBVSxDQUNWLGdDQUFnQyIsInNvdXJjZXMiOlsid2VicGFjazovL2ZsdXNoLW5vdGVzLy4vbm9kZV9tb2R1bGVzL0B3YWt1L3V0aWxzL25vZGVfbW9kdWxlcy9Ad2FrdS9pbnRlcmZhY2VzL2Rpc3Qvd2FrdS5qcz81NTYwIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCB7fTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXdha3UuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@waku/utils/node_modules/@waku/interfaces/dist/waku.js\n");

/***/ })

};
;