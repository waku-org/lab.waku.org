"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/race-event";
exports.ids = ["vendor-chunks/race-event"];
exports.modules = {

/***/ "(ssr)/./node_modules/race-event/dist/src/index.js":
/*!***************************************************!*\
  !*** ./node_modules/race-event/dist/src/index.js ***!
  \***************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AbortError: () => (/* binding */ AbortError),\n/* harmony export */   raceEvent: () => (/* binding */ raceEvent)\n/* harmony export */ });\n/**\n * @packageDocumentation\n *\n * Race an event against an AbortSignal, taking care to remove any event\n * listeners that were added.\n *\n * @example Getting started\n *\n * ```TypeScript\n * import { raceEvent } from 'race-event'\n *\n * const controller = new AbortController()\n * const emitter = new EventTarget()\n *\n * setTimeout(() => {\n *   controller.abort()\n * }, 500)\n *\n * setTimeout(() => {\n *   // too late\n *   emitter.dispatchEvent(new CustomEvent('event'))\n * }, 1000)\n *\n * // throws an AbortError\n * const resolve = await raceEvent(emitter, 'event', controller.signal)\n * ```\n *\n * @example Customising the thrown AbortError\n *\n * The error message and `.code` property of the thrown `AbortError` can be\n * specified by passing options:\n *\n * ```TypeScript\n * import { raceEvent } from 'race-event'\n *\n * const controller = new AbortController()\n * const emitter = new EventTarget()\n *\n * setTimeout(() => {\n *   controller.abort()\n * }, 500)\n *\n * // throws a Error: Oh no!\n * const resolve = await raceEvent(emitter, 'event', controller.signal, {\n *   errorMessage: 'Oh no!',\n *   errorCode: 'ERR_OH_NO'\n * })\n * ```\n *\n * @example Only resolving on specific events\n *\n * Where multiple events with the same type are emitted, a `filter` function can\n * be passed to only resolve on one of them:\n *\n * ```TypeScript\n * import { raceEvent } from 'race-event'\n *\n * const controller = new AbortController()\n * const emitter = new EventTarget()\n *\n * // throws a Error: Oh no!\n * const resolve = await raceEvent(emitter, 'event', controller.signal, {\n *   filter: (evt: Event) => {\n *     return evt.detail.foo === 'bar'\n *   }\n * })\n * ```\n *\n * @example Terminating early by throwing from the filter\n *\n * You can cause listening for the event to cease and all event listeners to be\n * removed by throwing from the filter:\n *\n * ```TypeScript\n * import { raceEvent } from 'race-event'\n *\n * const controller = new AbortController()\n * const emitter = new EventTarget()\n *\n * // throws Error: Cannot continue\n * const resolve = await raceEvent(emitter, 'event', controller.signal, {\n *   filter: (evt) => {\n *     if (...reasons) {\n *       throw new Error('Cannot continue')\n *     }\n *\n *     return true\n *   }\n * })\n * ```\n */ /**\n * An abort error class that extends error\n */ class AbortError extends Error {\n    constructor(message, code){\n        super(message ?? \"The operation was aborted\");\n        this.type = \"aborted\";\n        this.name = \"AbortError\";\n        this.code = code ?? \"ABORT_ERR\";\n    }\n}\n/**\n * Race a promise against an abort signal\n */ async function raceEvent(emitter, eventName, signal, opts) {\n    // create the error here so we have more context in the stack trace\n    const error = new AbortError(opts?.errorMessage, opts?.errorCode);\n    if (signal?.aborted === true) {\n        return Promise.reject(error);\n    }\n    return new Promise((resolve, reject)=>{\n        const eventListener = (evt)=>{\n            try {\n                if (opts?.filter?.(evt) === false) {\n                    return;\n                }\n            } catch (err) {\n                emitter.removeEventListener(eventName, eventListener);\n                signal?.removeEventListener(\"abort\", abortListener);\n                reject(err);\n                return;\n            }\n            emitter.removeEventListener(eventName, eventListener);\n            signal?.removeEventListener(\"abort\", abortListener);\n            resolve(evt);\n        };\n        const abortListener = ()=>{\n            emitter.removeEventListener(eventName, eventListener);\n            signal?.removeEventListener(\"abort\", abortListener);\n            reject(error);\n        };\n        emitter.addEventListener(eventName, eventListener);\n        signal?.addEventListener(\"abort\", abortListener);\n    });\n} //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmFjZS1ldmVudC9kaXN0L3NyYy9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Q0EwRkMsR0FDRDs7Q0FFQyxHQUNNLE1BQU1BLG1CQUFtQkM7SUFHNUJDLFlBQVlDLE9BQU8sRUFBRUMsSUFBSSxDQUFFO1FBQ3ZCLEtBQUssQ0FBQ0QsV0FBVztRQUNqQixJQUFJLENBQUNFLElBQUksR0FBRztRQUNaLElBQUksQ0FBQ0MsSUFBSSxHQUFHO1FBQ1osSUFBSSxDQUFDRixJQUFJLEdBQUdBLFFBQVE7SUFDeEI7QUFDSjtBQUNBOztDQUVDLEdBQ00sZUFBZUcsVUFBVUMsT0FBTyxFQUFFQyxTQUFTLEVBQUVDLE1BQU0sRUFBRUMsSUFBSTtJQUM1RCxtRUFBbUU7SUFDbkUsTUFBTUMsUUFBUSxJQUFJWixXQUFXVyxNQUFNRSxjQUFjRixNQUFNRztJQUN2RCxJQUFJSixRQUFRSyxZQUFZLE1BQU07UUFDMUIsT0FBT0MsUUFBUUMsTUFBTSxDQUFDTDtJQUMxQjtJQUNBLE9BQU8sSUFBSUksUUFBUSxDQUFDRSxTQUFTRDtRQUN6QixNQUFNRSxnQkFBZ0IsQ0FBQ0M7WUFDbkIsSUFBSTtnQkFDQSxJQUFJVCxNQUFNVSxTQUFTRCxTQUFTLE9BQU87b0JBQy9CO2dCQUNKO1lBQ0osRUFDQSxPQUFPRSxLQUFLO2dCQUNSZCxRQUFRZSxtQkFBbUIsQ0FBQ2QsV0FBV1U7Z0JBQ3ZDVCxRQUFRYSxvQkFBb0IsU0FBU0M7Z0JBQ3JDUCxPQUFPSztnQkFDUDtZQUNKO1lBQ0FkLFFBQVFlLG1CQUFtQixDQUFDZCxXQUFXVTtZQUN2Q1QsUUFBUWEsb0JBQW9CLFNBQVNDO1lBQ3JDTixRQUFRRTtRQUNaO1FBQ0EsTUFBTUksZ0JBQWdCO1lBQ2xCaEIsUUFBUWUsbUJBQW1CLENBQUNkLFdBQVdVO1lBQ3ZDVCxRQUFRYSxvQkFBb0IsU0FBU0M7WUFDckNQLE9BQU9MO1FBQ1g7UUFDQUosUUFBUWlCLGdCQUFnQixDQUFDaEIsV0FBV1U7UUFDcENULFFBQVFlLGlCQUFpQixTQUFTRDtJQUN0QztBQUNKLEVBQ0EsaUNBQWlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZmx1c2gtbm90ZXMvLi9ub2RlX21vZHVsZXMvcmFjZS1ldmVudC9kaXN0L3NyYy9pbmRleC5qcz9mOGE0Il0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQHBhY2thZ2VEb2N1bWVudGF0aW9uXG4gKlxuICogUmFjZSBhbiBldmVudCBhZ2FpbnN0IGFuIEFib3J0U2lnbmFsLCB0YWtpbmcgY2FyZSB0byByZW1vdmUgYW55IGV2ZW50XG4gKiBsaXN0ZW5lcnMgdGhhdCB3ZXJlIGFkZGVkLlxuICpcbiAqIEBleGFtcGxlIEdldHRpbmcgc3RhcnRlZFxuICpcbiAqIGBgYFR5cGVTY3JpcHRcbiAqIGltcG9ydCB7IHJhY2VFdmVudCB9IGZyb20gJ3JhY2UtZXZlbnQnXG4gKlxuICogY29uc3QgY29udHJvbGxlciA9IG5ldyBBYm9ydENvbnRyb2xsZXIoKVxuICogY29uc3QgZW1pdHRlciA9IG5ldyBFdmVudFRhcmdldCgpXG4gKlxuICogc2V0VGltZW91dCgoKSA9PiB7XG4gKiAgIGNvbnRyb2xsZXIuYWJvcnQoKVxuICogfSwgNTAwKVxuICpcbiAqIHNldFRpbWVvdXQoKCkgPT4ge1xuICogICAvLyB0b28gbGF0ZVxuICogICBlbWl0dGVyLmRpc3BhdGNoRXZlbnQobmV3IEN1c3RvbUV2ZW50KCdldmVudCcpKVxuICogfSwgMTAwMClcbiAqXG4gKiAvLyB0aHJvd3MgYW4gQWJvcnRFcnJvclxuICogY29uc3QgcmVzb2x2ZSA9IGF3YWl0IHJhY2VFdmVudChlbWl0dGVyLCAnZXZlbnQnLCBjb250cm9sbGVyLnNpZ25hbClcbiAqIGBgYFxuICpcbiAqIEBleGFtcGxlIEN1c3RvbWlzaW5nIHRoZSB0aHJvd24gQWJvcnRFcnJvclxuICpcbiAqIFRoZSBlcnJvciBtZXNzYWdlIGFuZCBgLmNvZGVgIHByb3BlcnR5IG9mIHRoZSB0aHJvd24gYEFib3J0RXJyb3JgIGNhbiBiZVxuICogc3BlY2lmaWVkIGJ5IHBhc3Npbmcgb3B0aW9uczpcbiAqXG4gKiBgYGBUeXBlU2NyaXB0XG4gKiBpbXBvcnQgeyByYWNlRXZlbnQgfSBmcm9tICdyYWNlLWV2ZW50J1xuICpcbiAqIGNvbnN0IGNvbnRyb2xsZXIgPSBuZXcgQWJvcnRDb250cm9sbGVyKClcbiAqIGNvbnN0IGVtaXR0ZXIgPSBuZXcgRXZlbnRUYXJnZXQoKVxuICpcbiAqIHNldFRpbWVvdXQoKCkgPT4ge1xuICogICBjb250cm9sbGVyLmFib3J0KClcbiAqIH0sIDUwMClcbiAqXG4gKiAvLyB0aHJvd3MgYSBFcnJvcjogT2ggbm8hXG4gKiBjb25zdCByZXNvbHZlID0gYXdhaXQgcmFjZUV2ZW50KGVtaXR0ZXIsICdldmVudCcsIGNvbnRyb2xsZXIuc2lnbmFsLCB7XG4gKiAgIGVycm9yTWVzc2FnZTogJ09oIG5vIScsXG4gKiAgIGVycm9yQ29kZTogJ0VSUl9PSF9OTydcbiAqIH0pXG4gKiBgYGBcbiAqXG4gKiBAZXhhbXBsZSBPbmx5IHJlc29sdmluZyBvbiBzcGVjaWZpYyBldmVudHNcbiAqXG4gKiBXaGVyZSBtdWx0aXBsZSBldmVudHMgd2l0aCB0aGUgc2FtZSB0eXBlIGFyZSBlbWl0dGVkLCBhIGBmaWx0ZXJgIGZ1bmN0aW9uIGNhblxuICogYmUgcGFzc2VkIHRvIG9ubHkgcmVzb2x2ZSBvbiBvbmUgb2YgdGhlbTpcbiAqXG4gKiBgYGBUeXBlU2NyaXB0XG4gKiBpbXBvcnQgeyByYWNlRXZlbnQgfSBmcm9tICdyYWNlLWV2ZW50J1xuICpcbiAqIGNvbnN0IGNvbnRyb2xsZXIgPSBuZXcgQWJvcnRDb250cm9sbGVyKClcbiAqIGNvbnN0IGVtaXR0ZXIgPSBuZXcgRXZlbnRUYXJnZXQoKVxuICpcbiAqIC8vIHRocm93cyBhIEVycm9yOiBPaCBubyFcbiAqIGNvbnN0IHJlc29sdmUgPSBhd2FpdCByYWNlRXZlbnQoZW1pdHRlciwgJ2V2ZW50JywgY29udHJvbGxlci5zaWduYWwsIHtcbiAqICAgZmlsdGVyOiAoZXZ0OiBFdmVudCkgPT4ge1xuICogICAgIHJldHVybiBldnQuZGV0YWlsLmZvbyA9PT0gJ2JhcidcbiAqICAgfVxuICogfSlcbiAqIGBgYFxuICpcbiAqIEBleGFtcGxlIFRlcm1pbmF0aW5nIGVhcmx5IGJ5IHRocm93aW5nIGZyb20gdGhlIGZpbHRlclxuICpcbiAqIFlvdSBjYW4gY2F1c2UgbGlzdGVuaW5nIGZvciB0aGUgZXZlbnQgdG8gY2Vhc2UgYW5kIGFsbCBldmVudCBsaXN0ZW5lcnMgdG8gYmVcbiAqIHJlbW92ZWQgYnkgdGhyb3dpbmcgZnJvbSB0aGUgZmlsdGVyOlxuICpcbiAqIGBgYFR5cGVTY3JpcHRcbiAqIGltcG9ydCB7IHJhY2VFdmVudCB9IGZyb20gJ3JhY2UtZXZlbnQnXG4gKlxuICogY29uc3QgY29udHJvbGxlciA9IG5ldyBBYm9ydENvbnRyb2xsZXIoKVxuICogY29uc3QgZW1pdHRlciA9IG5ldyBFdmVudFRhcmdldCgpXG4gKlxuICogLy8gdGhyb3dzIEVycm9yOiBDYW5ub3QgY29udGludWVcbiAqIGNvbnN0IHJlc29sdmUgPSBhd2FpdCByYWNlRXZlbnQoZW1pdHRlciwgJ2V2ZW50JywgY29udHJvbGxlci5zaWduYWwsIHtcbiAqICAgZmlsdGVyOiAoZXZ0KSA9PiB7XG4gKiAgICAgaWYgKC4uLnJlYXNvbnMpIHtcbiAqICAgICAgIHRocm93IG5ldyBFcnJvcignQ2Fubm90IGNvbnRpbnVlJylcbiAqICAgICB9XG4gKlxuICogICAgIHJldHVybiB0cnVlXG4gKiAgIH1cbiAqIH0pXG4gKiBgYGBcbiAqL1xuLyoqXG4gKiBBbiBhYm9ydCBlcnJvciBjbGFzcyB0aGF0IGV4dGVuZHMgZXJyb3JcbiAqL1xuZXhwb3J0IGNsYXNzIEFib3J0RXJyb3IgZXh0ZW5kcyBFcnJvciB7XG4gICAgdHlwZTtcbiAgICBjb2RlO1xuICAgIGNvbnN0cnVjdG9yKG1lc3NhZ2UsIGNvZGUpIHtcbiAgICAgICAgc3VwZXIobWVzc2FnZSA/PyAnVGhlIG9wZXJhdGlvbiB3YXMgYWJvcnRlZCcpO1xuICAgICAgICB0aGlzLnR5cGUgPSAnYWJvcnRlZCc7XG4gICAgICAgIHRoaXMubmFtZSA9ICdBYm9ydEVycm9yJztcbiAgICAgICAgdGhpcy5jb2RlID0gY29kZSA/PyAnQUJPUlRfRVJSJztcbiAgICB9XG59XG4vKipcbiAqIFJhY2UgYSBwcm9taXNlIGFnYWluc3QgYW4gYWJvcnQgc2lnbmFsXG4gKi9cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiByYWNlRXZlbnQoZW1pdHRlciwgZXZlbnROYW1lLCBzaWduYWwsIG9wdHMpIHtcbiAgICAvLyBjcmVhdGUgdGhlIGVycm9yIGhlcmUgc28gd2UgaGF2ZSBtb3JlIGNvbnRleHQgaW4gdGhlIHN0YWNrIHRyYWNlXG4gICAgY29uc3QgZXJyb3IgPSBuZXcgQWJvcnRFcnJvcihvcHRzPy5lcnJvck1lc3NhZ2UsIG9wdHM/LmVycm9yQ29kZSk7XG4gICAgaWYgKHNpZ25hbD8uYWJvcnRlZCA9PT0gdHJ1ZSkge1xuICAgICAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QoZXJyb3IpO1xuICAgIH1cbiAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgICAgICBjb25zdCBldmVudExpc3RlbmVyID0gKGV2dCkgPT4ge1xuICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICBpZiAob3B0cz8uZmlsdGVyPy4oZXZ0KSA9PT0gZmFsc2UpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNhdGNoIChlcnIpIHtcbiAgICAgICAgICAgICAgICBlbWl0dGVyLnJlbW92ZUV2ZW50TGlzdGVuZXIoZXZlbnROYW1lLCBldmVudExpc3RlbmVyKTtcbiAgICAgICAgICAgICAgICBzaWduYWw/LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ2Fib3J0JywgYWJvcnRMaXN0ZW5lcik7XG4gICAgICAgICAgICAgICAgcmVqZWN0KGVycik7XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZW1pdHRlci5yZW1vdmVFdmVudExpc3RlbmVyKGV2ZW50TmFtZSwgZXZlbnRMaXN0ZW5lcik7XG4gICAgICAgICAgICBzaWduYWw/LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ2Fib3J0JywgYWJvcnRMaXN0ZW5lcik7XG4gICAgICAgICAgICByZXNvbHZlKGV2dCk7XG4gICAgICAgIH07XG4gICAgICAgIGNvbnN0IGFib3J0TGlzdGVuZXIgPSAoKSA9PiB7XG4gICAgICAgICAgICBlbWl0dGVyLnJlbW92ZUV2ZW50TGlzdGVuZXIoZXZlbnROYW1lLCBldmVudExpc3RlbmVyKTtcbiAgICAgICAgICAgIHNpZ25hbD8ucmVtb3ZlRXZlbnRMaXN0ZW5lcignYWJvcnQnLCBhYm9ydExpc3RlbmVyKTtcbiAgICAgICAgICAgIHJlamVjdChlcnJvcik7XG4gICAgICAgIH07XG4gICAgICAgIGVtaXR0ZXIuYWRkRXZlbnRMaXN0ZW5lcihldmVudE5hbWUsIGV2ZW50TGlzdGVuZXIpO1xuICAgICAgICBzaWduYWw/LmFkZEV2ZW50TGlzdGVuZXIoJ2Fib3J0JywgYWJvcnRMaXN0ZW5lcik7XG4gICAgfSk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOlsiQWJvcnRFcnJvciIsIkVycm9yIiwiY29uc3RydWN0b3IiLCJtZXNzYWdlIiwiY29kZSIsInR5cGUiLCJuYW1lIiwicmFjZUV2ZW50IiwiZW1pdHRlciIsImV2ZW50TmFtZSIsInNpZ25hbCIsIm9wdHMiLCJlcnJvciIsImVycm9yTWVzc2FnZSIsImVycm9yQ29kZSIsImFib3J0ZWQiLCJQcm9taXNlIiwicmVqZWN0IiwicmVzb2x2ZSIsImV2ZW50TGlzdGVuZXIiLCJldnQiLCJmaWx0ZXIiLCJlcnIiLCJyZW1vdmVFdmVudExpc3RlbmVyIiwiYWJvcnRMaXN0ZW5lciIsImFkZEV2ZW50TGlzdGVuZXIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/race-event/dist/src/index.js\n");

/***/ })

};
;