"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/multiformats";
exports.ids = ["vendor-chunks/multiformats"];
exports.modules = {

/***/ "(ssr)/./node_modules/multiformats/dist/src/bases/base.js":
/*!**********************************************************!*\
  !*** ./node_modules/multiformats/dist/src/bases/base.js ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Codec: () => (/* binding */ Codec),\n/* harmony export */   baseX: () => (/* binding */ baseX),\n/* harmony export */   from: () => (/* binding */ from),\n/* harmony export */   or: () => (/* binding */ or),\n/* harmony export */   rfc4648: () => (/* binding */ rfc4648)\n/* harmony export */ });\n/* harmony import */ var _bytes_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../bytes.js */ \"(ssr)/./node_modules/multiformats/dist/src/bytes.js\");\n/* harmony import */ var _vendor_base_x_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../vendor/base-x.js */ \"(ssr)/./node_modules/multiformats/dist/src/vendor/base-x.js\");\n\n\n/**\n * Class represents both BaseEncoder and MultibaseEncoder meaning it\n * can be used to encode to multibase or base encode without multibase\n * prefix.\n */ class Encoder {\n    constructor(name, prefix, baseEncode){\n        this.name = name;\n        this.prefix = prefix;\n        this.baseEncode = baseEncode;\n    }\n    encode(bytes) {\n        if (bytes instanceof Uint8Array) {\n            return `${this.prefix}${this.baseEncode(bytes)}`;\n        } else {\n            throw Error(\"Unknown type, must be binary type\");\n        }\n    }\n}\n/**\n * Class represents both BaseDecoder and MultibaseDecoder so it could be used\n * to decode multibases (with matching prefix) or just base decode strings\n * with corresponding base encoding.\n */ class Decoder {\n    constructor(name, prefix, baseDecode){\n        this.name = name;\n        this.prefix = prefix;\n        /* c8 ignore next 3 */ if (prefix.codePointAt(0) === undefined) {\n            throw new Error(\"Invalid prefix character\");\n        }\n        this.prefixCodePoint = prefix.codePointAt(0);\n        this.baseDecode = baseDecode;\n    }\n    decode(text) {\n        if (typeof text === \"string\") {\n            if (text.codePointAt(0) !== this.prefixCodePoint) {\n                throw Error(`Unable to decode multibase string ${JSON.stringify(text)}, ${this.name} decoder only supports inputs prefixed with ${this.prefix}`);\n            }\n            return this.baseDecode(text.slice(this.prefix.length));\n        } else {\n            throw Error(\"Can only multibase decode strings\");\n        }\n    }\n    or(decoder) {\n        return or(this, decoder);\n    }\n}\nclass ComposedDecoder {\n    constructor(decoders){\n        this.decoders = decoders;\n    }\n    or(decoder) {\n        return or(this, decoder);\n    }\n    decode(input) {\n        const prefix = input[0];\n        const decoder = this.decoders[prefix];\n        if (decoder != null) {\n            return decoder.decode(input);\n        } else {\n            throw RangeError(`Unable to decode multibase string ${JSON.stringify(input)}, only inputs prefixed with ${Object.keys(this.decoders)} are supported`);\n        }\n    }\n}\nfunction or(left, right) {\n    // eslint-disable-next-line @typescript-eslint/consistent-type-assertions\n    return new ComposedDecoder({\n        ...left.decoders ?? {\n            [left.prefix]: left\n        },\n        ...right.decoders ?? {\n            [right.prefix]: right\n        }\n    });\n}\nclass Codec {\n    constructor(name, prefix, baseEncode, baseDecode){\n        this.name = name;\n        this.prefix = prefix;\n        this.baseEncode = baseEncode;\n        this.baseDecode = baseDecode;\n        this.encoder = new Encoder(name, prefix, baseEncode);\n        this.decoder = new Decoder(name, prefix, baseDecode);\n    }\n    encode(input) {\n        return this.encoder.encode(input);\n    }\n    decode(input) {\n        return this.decoder.decode(input);\n    }\n}\nfunction from({ name, prefix, encode, decode }) {\n    return new Codec(name, prefix, encode, decode);\n}\nfunction baseX({ name, prefix, alphabet }) {\n    const { encode, decode } = (0,_vendor_base_x_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(alphabet, name);\n    return from({\n        prefix,\n        name,\n        encode,\n        decode: (text)=>(0,_bytes_js__WEBPACK_IMPORTED_MODULE_0__.coerce)(decode(text))\n    });\n}\nfunction decode(string, alphabet, bitsPerChar, name) {\n    // Build the character lookup table:\n    const codes = {};\n    for(let i = 0; i < alphabet.length; ++i){\n        codes[alphabet[i]] = i;\n    }\n    // Count the padding bytes:\n    let end = string.length;\n    while(string[end - 1] === \"=\"){\n        --end;\n    }\n    // Allocate the output:\n    const out = new Uint8Array(end * bitsPerChar / 8 | 0);\n    // Parse the data:\n    let bits = 0; // Number of bits currently in the buffer\n    let buffer = 0; // Bits waiting to be written out, MSB first\n    let written = 0; // Next byte to write\n    for(let i = 0; i < end; ++i){\n        // Read one character from the string:\n        const value = codes[string[i]];\n        if (value === undefined) {\n            throw new SyntaxError(`Non-${name} character`);\n        }\n        // Append the bits to the buffer:\n        buffer = buffer << bitsPerChar | value;\n        bits += bitsPerChar;\n        // Write out some bits if the buffer has a byte's worth:\n        if (bits >= 8) {\n            bits -= 8;\n            out[written++] = 0xff & buffer >> bits;\n        }\n    }\n    // Verify that we have received just enough bits:\n    if (bits >= bitsPerChar || (0xff & buffer << 8 - bits) !== 0) {\n        throw new SyntaxError(\"Unexpected end of data\");\n    }\n    return out;\n}\nfunction encode(data, alphabet, bitsPerChar) {\n    const pad = alphabet[alphabet.length - 1] === \"=\";\n    const mask = (1 << bitsPerChar) - 1;\n    let out = \"\";\n    let bits = 0; // Number of bits currently in the buffer\n    let buffer = 0; // Bits waiting to be written out, MSB first\n    for(let i = 0; i < data.length; ++i){\n        // Slurp data into the buffer:\n        buffer = buffer << 8 | data[i];\n        bits += 8;\n        // Write out as much as we can:\n        while(bits > bitsPerChar){\n            bits -= bitsPerChar;\n            out += alphabet[mask & buffer >> bits];\n        }\n    }\n    // Partial character:\n    if (bits !== 0) {\n        out += alphabet[mask & buffer << bitsPerChar - bits];\n    }\n    // Add padding characters until we hit a byte boundary:\n    if (pad) {\n        while((out.length * bitsPerChar & 7) !== 0){\n            out += \"=\";\n        }\n    }\n    return out;\n}\n/**\n * RFC4648 Factory\n */ function rfc4648({ name, prefix, bitsPerChar, alphabet }) {\n    return from({\n        prefix,\n        name,\n        encode (input) {\n            return encode(input, alphabet, bitsPerChar);\n        },\n        decode (input) {\n            return decode(input, alphabet, bitsPerChar, name);\n        }\n    });\n} //# sourceMappingURL=base.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/multiformats/dist/src/bases/base.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/multiformats/dist/src/bases/base10.js":
/*!************************************************************!*\
  !*** ./node_modules/multiformats/dist/src/bases/base10.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   base10: () => (/* binding */ base10)\n/* harmony export */ });\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ \"(ssr)/./node_modules/multiformats/dist/src/bases/base.js\");\n\nconst base10 = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.baseX)({\n    prefix: \"9\",\n    name: \"base10\",\n    alphabet: \"0123456789\"\n}); //# sourceMappingURL=base10.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL2Rpc3Qvc3JjL2Jhc2VzL2Jhc2UxMC5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFrQztBQUMzQixNQUFNQyxTQUFTRCwrQ0FBS0EsQ0FBQztJQUN4QkUsUUFBUTtJQUNSQyxNQUFNO0lBQ05DLFVBQVU7QUFDZCxHQUFHLENBQ0gsa0NBQWtDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZmx1c2gtbm90ZXMvLi9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL2Rpc3Qvc3JjL2Jhc2VzL2Jhc2UxMC5qcz84ODIzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGJhc2VYIH0gZnJvbSAnLi9iYXNlLmpzJztcbmV4cG9ydCBjb25zdCBiYXNlMTAgPSBiYXNlWCh7XG4gICAgcHJlZml4OiAnOScsXG4gICAgbmFtZTogJ2Jhc2UxMCcsXG4gICAgYWxwaGFiZXQ6ICcwMTIzNDU2Nzg5J1xufSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1iYXNlMTAuanMubWFwIl0sIm5hbWVzIjpbImJhc2VYIiwiYmFzZTEwIiwicHJlZml4IiwibmFtZSIsImFscGhhYmV0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/multiformats/dist/src/bases/base10.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/multiformats/dist/src/bases/base16.js":
/*!************************************************************!*\
  !*** ./node_modules/multiformats/dist/src/bases/base16.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   base16: () => (/* binding */ base16),\n/* harmony export */   base16upper: () => (/* binding */ base16upper)\n/* harmony export */ });\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ \"(ssr)/./node_modules/multiformats/dist/src/bases/base.js\");\n\nconst base16 = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n    prefix: \"f\",\n    name: \"base16\",\n    alphabet: \"0123456789abcdef\",\n    bitsPerChar: 4\n});\nconst base16upper = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n    prefix: \"F\",\n    name: \"base16upper\",\n    alphabet: \"0123456789ABCDEF\",\n    bitsPerChar: 4\n}); //# sourceMappingURL=base16.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL2Rpc3Qvc3JjL2Jhc2VzL2Jhc2UxNi5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBb0M7QUFDN0IsTUFBTUMsU0FBU0QsaURBQU9BLENBQUM7SUFDMUJFLFFBQVE7SUFDUkMsTUFBTTtJQUNOQyxVQUFVO0lBQ1ZDLGFBQWE7QUFDakIsR0FBRztBQUNJLE1BQU1DLGNBQWNOLGlEQUFPQSxDQUFDO0lBQy9CRSxRQUFRO0lBQ1JDLE1BQU07SUFDTkMsVUFBVTtJQUNWQyxhQUFhO0FBQ2pCLEdBQUcsQ0FDSCxrQ0FBa0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mbHVzaC1ub3Rlcy8uL25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvZGlzdC9zcmMvYmFzZXMvYmFzZTE2LmpzPzIyN2YiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgcmZjNDY0OCB9IGZyb20gJy4vYmFzZS5qcyc7XG5leHBvcnQgY29uc3QgYmFzZTE2ID0gcmZjNDY0OCh7XG4gICAgcHJlZml4OiAnZicsXG4gICAgbmFtZTogJ2Jhc2UxNicsXG4gICAgYWxwaGFiZXQ6ICcwMTIzNDU2Nzg5YWJjZGVmJyxcbiAgICBiaXRzUGVyQ2hhcjogNFxufSk7XG5leHBvcnQgY29uc3QgYmFzZTE2dXBwZXIgPSByZmM0NjQ4KHtcbiAgICBwcmVmaXg6ICdGJyxcbiAgICBuYW1lOiAnYmFzZTE2dXBwZXInLFxuICAgIGFscGhhYmV0OiAnMDEyMzQ1Njc4OUFCQ0RFRicsXG4gICAgYml0c1BlckNoYXI6IDRcbn0pO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YmFzZTE2LmpzLm1hcCJdLCJuYW1lcyI6WyJyZmM0NjQ4IiwiYmFzZTE2IiwicHJlZml4IiwibmFtZSIsImFscGhhYmV0IiwiYml0c1BlckNoYXIiLCJiYXNlMTZ1cHBlciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/multiformats/dist/src/bases/base16.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/multiformats/dist/src/bases/base2.js":
/*!***********************************************************!*\
  !*** ./node_modules/multiformats/dist/src/bases/base2.js ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   base2: () => (/* binding */ base2)\n/* harmony export */ });\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ \"(ssr)/./node_modules/multiformats/dist/src/bases/base.js\");\n\nconst base2 = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n    prefix: \"0\",\n    name: \"base2\",\n    alphabet: \"01\",\n    bitsPerChar: 1\n}); //# sourceMappingURL=base2.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL2Rpc3Qvc3JjL2Jhc2VzL2Jhc2UyLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQW9DO0FBQzdCLE1BQU1DLFFBQVFELGlEQUFPQSxDQUFDO0lBQ3pCRSxRQUFRO0lBQ1JDLE1BQU07SUFDTkMsVUFBVTtJQUNWQyxhQUFhO0FBQ2pCLEdBQUcsQ0FDSCxpQ0FBaUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mbHVzaC1ub3Rlcy8uL25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvZGlzdC9zcmMvYmFzZXMvYmFzZTIuanM/MjU0MCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyByZmM0NjQ4IH0gZnJvbSAnLi9iYXNlLmpzJztcbmV4cG9ydCBjb25zdCBiYXNlMiA9IHJmYzQ2NDgoe1xuICAgIHByZWZpeDogJzAnLFxuICAgIG5hbWU6ICdiYXNlMicsXG4gICAgYWxwaGFiZXQ6ICcwMScsXG4gICAgYml0c1BlckNoYXI6IDFcbn0pO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YmFzZTIuanMubWFwIl0sIm5hbWVzIjpbInJmYzQ2NDgiLCJiYXNlMiIsInByZWZpeCIsIm5hbWUiLCJhbHBoYWJldCIsImJpdHNQZXJDaGFyIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/multiformats/dist/src/bases/base2.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/multiformats/dist/src/bases/base256emoji.js":
/*!******************************************************************!*\
  !*** ./node_modules/multiformats/dist/src/bases/base256emoji.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   base256emoji: () => (/* binding */ base256emoji)\n/* harmony export */ });\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ \"(ssr)/./node_modules/multiformats/dist/src/bases/base.js\");\n\nconst alphabet = Array.from(\"\\uD83D\\uDE80\\uD83E\\uDE90☄\\uD83D\\uDEF0\\uD83C\\uDF0C\\uD83C\\uDF11\\uD83C\\uDF12\\uD83C\\uDF13\\uD83C\\uDF14\\uD83C\\uDF15\\uD83C\\uDF16\\uD83C\\uDF17\\uD83C\\uDF18\\uD83C\\uDF0D\\uD83C\\uDF0F\\uD83C\\uDF0E\\uD83D\\uDC09☀\\uD83D\\uDCBB\\uD83D\\uDDA5\\uD83D\\uDCBE\\uD83D\\uDCBF\\uD83D\\uDE02❤\\uD83D\\uDE0D\\uD83E\\uDD23\\uD83D\\uDE0A\\uD83D\\uDE4F\\uD83D\\uDC95\\uD83D\\uDE2D\\uD83D\\uDE18\\uD83D\\uDC4D\\uD83D\\uDE05\\uD83D\\uDC4F\\uD83D\\uDE01\\uD83D\\uDD25\\uD83E\\uDD70\\uD83D\\uDC94\\uD83D\\uDC96\\uD83D\\uDC99\\uD83D\\uDE22\\uD83E\\uDD14\\uD83D\\uDE06\\uD83D\\uDE44\\uD83D\\uDCAA\\uD83D\\uDE09☺\\uD83D\\uDC4C\\uD83E\\uDD17\\uD83D\\uDC9C\\uD83D\\uDE14\\uD83D\\uDE0E\\uD83D\\uDE07\\uD83C\\uDF39\\uD83E\\uDD26\\uD83C\\uDF89\\uD83D\\uDC9E✌✨\\uD83E\\uDD37\\uD83D\\uDE31\\uD83D\\uDE0C\\uD83C\\uDF38\\uD83D\\uDE4C\\uD83D\\uDE0B\\uD83D\\uDC97\\uD83D\\uDC9A\\uD83D\\uDE0F\\uD83D\\uDC9B\\uD83D\\uDE42\\uD83D\\uDC93\\uD83E\\uDD29\\uD83D\\uDE04\\uD83D\\uDE00\\uD83D\\uDDA4\\uD83D\\uDE03\\uD83D\\uDCAF\\uD83D\\uDE48\\uD83D\\uDC47\\uD83C\\uDFB6\\uD83D\\uDE12\\uD83E\\uDD2D❣\\uD83D\\uDE1C\\uD83D\\uDC8B\\uD83D\\uDC40\\uD83D\\uDE2A\\uD83D\\uDE11\\uD83D\\uDCA5\\uD83D\\uDE4B\\uD83D\\uDE1E\\uD83D\\uDE29\\uD83D\\uDE21\\uD83E\\uDD2A\\uD83D\\uDC4A\\uD83E\\uDD73\\uD83D\\uDE25\\uD83E\\uDD24\\uD83D\\uDC49\\uD83D\\uDC83\\uD83D\\uDE33✋\\uD83D\\uDE1A\\uD83D\\uDE1D\\uD83D\\uDE34\\uD83C\\uDF1F\\uD83D\\uDE2C\\uD83D\\uDE43\\uD83C\\uDF40\\uD83C\\uDF37\\uD83D\\uDE3B\\uD83D\\uDE13⭐✅\\uD83E\\uDD7A\\uD83C\\uDF08\\uD83D\\uDE08\\uD83E\\uDD18\\uD83D\\uDCA6✔\\uD83D\\uDE23\\uD83C\\uDFC3\\uD83D\\uDC90☹\\uD83C\\uDF8A\\uD83D\\uDC98\\uD83D\\uDE20☝\\uD83D\\uDE15\\uD83C\\uDF3A\\uD83C\\uDF82\\uD83C\\uDF3B\\uD83D\\uDE10\\uD83D\\uDD95\\uD83D\\uDC9D\\uD83D\\uDE4A\\uD83D\\uDE39\\uD83D\\uDDE3\\uD83D\\uDCAB\\uD83D\\uDC80\\uD83D\\uDC51\\uD83C\\uDFB5\\uD83E\\uDD1E\\uD83D\\uDE1B\\uD83D\\uDD34\\uD83D\\uDE24\\uD83C\\uDF3C\\uD83D\\uDE2B⚽\\uD83E\\uDD19☕\\uD83C\\uDFC6\\uD83E\\uDD2B\\uD83D\\uDC48\\uD83D\\uDE2E\\uD83D\\uDE46\\uD83C\\uDF7B\\uD83C\\uDF43\\uD83D\\uDC36\\uD83D\\uDC81\\uD83D\\uDE32\\uD83C\\uDF3F\\uD83E\\uDDE1\\uD83C\\uDF81⚡\\uD83C\\uDF1E\\uD83C\\uDF88❌✊\\uD83D\\uDC4B\\uD83D\\uDE30\\uD83E\\uDD28\\uD83D\\uDE36\\uD83E\\uDD1D\\uD83D\\uDEB6\\uD83D\\uDCB0\\uD83C\\uDF53\\uD83D\\uDCA2\\uD83E\\uDD1F\\uD83D\\uDE41\\uD83D\\uDEA8\\uD83D\\uDCA8\\uD83E\\uDD2C✈\\uD83C\\uDF80\\uD83C\\uDF7A\\uD83E\\uDD13\\uD83D\\uDE19\\uD83D\\uDC9F\\uD83C\\uDF31\\uD83D\\uDE16\\uD83D\\uDC76\\uD83E\\uDD74▶➡❓\\uD83D\\uDC8E\\uD83D\\uDCB8⬇\\uD83D\\uDE28\\uD83C\\uDF1A\\uD83E\\uDD8B\\uD83D\\uDE37\\uD83D\\uDD7A⚠\\uD83D\\uDE45\\uD83D\\uDE1F\\uD83D\\uDE35\\uD83D\\uDC4E\\uD83E\\uDD32\\uD83E\\uDD20\\uD83E\\uDD27\\uD83D\\uDCCC\\uD83D\\uDD35\\uD83D\\uDC85\\uD83E\\uDDD0\\uD83D\\uDC3E\\uD83C\\uDF52\\uD83D\\uDE17\\uD83E\\uDD11\\uD83C\\uDF0A\\uD83E\\uDD2F\\uD83D\\uDC37☎\\uD83D\\uDCA7\\uD83D\\uDE2F\\uD83D\\uDC86\\uD83D\\uDC46\\uD83C\\uDFA4\\uD83D\\uDE47\\uD83C\\uDF51❄\\uD83C\\uDF34\\uD83D\\uDCA3\\uD83D\\uDC38\\uD83D\\uDC8C\\uD83D\\uDCCD\\uD83E\\uDD40\\uD83E\\uDD22\\uD83D\\uDC45\\uD83D\\uDCA1\\uD83D\\uDCA9\\uD83D\\uDC50\\uD83D\\uDCF8\\uD83D\\uDC7B\\uD83E\\uDD10\\uD83E\\uDD2E\\uD83C\\uDFBC\\uD83E\\uDD75\\uD83D\\uDEA9\\uD83C\\uDF4E\\uD83C\\uDF4A\\uD83D\\uDC7C\\uD83D\\uDC8D\\uD83D\\uDCE3\\uD83E\\uDD42\");\nconst alphabetBytesToChars = alphabet.reduce((p, c, i)=>{\n    p[i] = c;\n    return p;\n}, []);\nconst alphabetCharsToBytes = alphabet.reduce((p, c, i)=>{\n    p[c.codePointAt(0)] = i;\n    return p;\n}, []);\nfunction encode(data) {\n    return data.reduce((p, c)=>{\n        p += alphabetBytesToChars[c];\n        return p;\n    }, \"\");\n}\nfunction decode(str) {\n    const byts = [];\n    for (const char of str){\n        const byt = alphabetCharsToBytes[char.codePointAt(0)];\n        if (byt === undefined) {\n            throw new Error(`Non-base256emoji character: ${char}`);\n        }\n        byts.push(byt);\n    }\n    return new Uint8Array(byts);\n}\nconst base256emoji = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.from)({\n    prefix: \"\\uD83D\\uDE80\",\n    name: \"base256emoji\",\n    encode,\n    decode\n}); //# sourceMappingURL=base256emoji.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL2Rpc3Qvc3JjL2Jhc2VzL2Jhc2UyNTZlbW9qaS5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFpQztBQUNqQyxNQUFNQyxXQUFXQyxNQUFNRixJQUFJLENBQUM7QUFDNUIsTUFBTUcsdUJBQXdCRixTQUFTRyxNQUFNLENBQUMsQ0FBQ0MsR0FBR0MsR0FBR0M7SUFBUUYsQ0FBQyxDQUFDRSxFQUFFLEdBQUdEO0lBQUcsT0FBT0Q7QUFBRyxHQUFJLEVBQUU7QUFDdkYsTUFBTUcsdUJBQXdCUCxTQUFTRyxNQUFNLENBQUMsQ0FBQ0MsR0FBR0MsR0FBR0M7SUFBUUYsQ0FBQyxDQUFDQyxFQUFFRyxXQUFXLENBQUMsR0FBRyxHQUFHRjtJQUFHLE9BQU9GO0FBQUcsR0FBSSxFQUFFO0FBQ3RHLFNBQVNLLE9BQU9DLElBQUk7SUFDaEIsT0FBT0EsS0FBS1AsTUFBTSxDQUFDLENBQUNDLEdBQUdDO1FBQ25CRCxLQUFLRixvQkFBb0IsQ0FBQ0csRUFBRTtRQUM1QixPQUFPRDtJQUNYLEdBQUc7QUFDUDtBQUNBLFNBQVNPLE9BQU9DLEdBQUc7SUFDZixNQUFNQyxPQUFPLEVBQUU7SUFDZixLQUFLLE1BQU1DLFFBQVFGLElBQUs7UUFDcEIsTUFBTUcsTUFBTVIsb0JBQW9CLENBQUNPLEtBQUtOLFdBQVcsQ0FBQyxHQUFHO1FBQ3JELElBQUlPLFFBQVFDLFdBQVc7WUFDbkIsTUFBTSxJQUFJQyxNQUFNLENBQUMsNEJBQTRCLEVBQUVILEtBQUssQ0FBQztRQUN6RDtRQUNBRCxLQUFLSyxJQUFJLENBQUNIO0lBQ2Q7SUFDQSxPQUFPLElBQUlJLFdBQVdOO0FBQzFCO0FBQ08sTUFBTU8sZUFBZXJCLDhDQUFJQSxDQUFDO0lBQzdCc0IsUUFBUTtJQUNSQyxNQUFNO0lBQ05iO0lBQ0FFO0FBQ0osR0FBRyxDQUNILHdDQUF3QyIsInNvdXJjZXMiOlsid2VicGFjazovL2ZsdXNoLW5vdGVzLy4vbm9kZV9tb2R1bGVzL211bHRpZm9ybWF0cy9kaXN0L3NyYy9iYXNlcy9iYXNlMjU2ZW1vamkuanM/Zjg5NSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBmcm9tIH0gZnJvbSAnLi9iYXNlLmpzJztcbmNvbnN0IGFscGhhYmV0ID0gQXJyYXkuZnJvbSgn8J+agPCfqpDimITwn5uw8J+MjPCfjJHwn4yS8J+Mk/CfjJTwn4yV8J+MlvCfjJfwn4yY8J+MjfCfjI/wn4yO8J+QieKYgPCfkrvwn5al8J+SvvCfkr/wn5iC4p2k8J+YjfCfpKPwn5iK8J+Zj/CfkpXwn5it8J+YmPCfkY3wn5iF8J+Rj/CfmIHwn5Sl8J+lsPCfkpTwn5KW8J+SmfCfmKLwn6SU8J+YhvCfmYTwn5Kq8J+YieKYuvCfkYzwn6SX8J+SnPCfmJTwn5iO8J+Yh/CfjLnwn6Sm8J+OifCfkp7inIzinKjwn6S38J+YsfCfmIzwn4y48J+ZjPCfmIvwn5KX8J+SmvCfmI/wn5Kb8J+ZgvCfkpPwn6Sp8J+YhPCfmIDwn5ak8J+Yg/Cfkq/wn5mI8J+Rh/Cfjrbwn5iS8J+kreKdo/CfmJzwn5KL8J+RgPCfmKrwn5iR8J+SpfCfmYvwn5ie8J+YqfCfmKHwn6Sq8J+RivCfpbPwn5il8J+kpPCfkYnwn5KD8J+Ys+Kci/CfmJrwn5id8J+YtPCfjJ/wn5is8J+Zg/CfjYDwn4y38J+Yu/CfmJPirZDinIXwn6W68J+MiPCfmIjwn6SY8J+SpuKclPCfmKPwn4+D8J+SkOKYufCfjorwn5KY8J+YoOKYnfCfmJXwn4y68J+OgvCfjLvwn5iQ8J+WlfCfkp3wn5mK8J+YufCfl6Pwn5Kr8J+SgPCfkZHwn4618J+knvCfmJvwn5S08J+YpPCfjLzwn5ir4pq98J+kmeKYlfCfj4bwn6Sr8J+RiPCfmK7wn5mG8J+Nu/CfjYPwn5C28J+SgfCfmLLwn4y/8J+nofCfjoHimqHwn4ye8J+OiOKdjOKcivCfkYvwn5iw8J+kqPCfmLbwn6Sd8J+atvCfkrDwn42T8J+SovCfpJ/wn5mB8J+aqPCfkqjwn6Ss4pyI8J+OgPCfjbrwn6ST8J+YmfCfkp/wn4yx8J+YlvCfkbbwn6W04pa24p6h4p2T8J+SjvCfkrjirIfwn5io8J+MmvCfpovwn5i38J+VuuKaoPCfmYXwn5if8J+YtfCfkY7wn6Sy8J+koPCfpKfwn5OM8J+UtfCfkoXwn6eQ8J+QvvCfjZLwn5iX8J+kkfCfjIrwn6Sv8J+Qt+KYjvCfkqfwn5iv8J+ShvCfkYbwn46k8J+Zh/CfjZHinYTwn4y08J+So/CfkLjwn5KM8J+TjfCfpYDwn6Si8J+RhfCfkqHwn5Kp8J+RkPCfk7jwn5G78J+kkPCfpK7wn4688J+ltfCfmqnwn42O8J+NivCfkbzwn5KN8J+To/CfpYInKTtcbmNvbnN0IGFscGhhYmV0Qnl0ZXNUb0NoYXJzID0gKGFscGhhYmV0LnJlZHVjZSgocCwgYywgaSkgPT4geyBwW2ldID0gYzsgcmV0dXJuIHA7IH0sIChbXSkpKTtcbmNvbnN0IGFscGhhYmV0Q2hhcnNUb0J5dGVzID0gKGFscGhhYmV0LnJlZHVjZSgocCwgYywgaSkgPT4geyBwW2MuY29kZVBvaW50QXQoMCldID0gaTsgcmV0dXJuIHA7IH0sIChbXSkpKTtcbmZ1bmN0aW9uIGVuY29kZShkYXRhKSB7XG4gICAgcmV0dXJuIGRhdGEucmVkdWNlKChwLCBjKSA9PiB7XG4gICAgICAgIHAgKz0gYWxwaGFiZXRCeXRlc1RvQ2hhcnNbY107XG4gICAgICAgIHJldHVybiBwO1xuICAgIH0sICcnKTtcbn1cbmZ1bmN0aW9uIGRlY29kZShzdHIpIHtcbiAgICBjb25zdCBieXRzID0gW107XG4gICAgZm9yIChjb25zdCBjaGFyIG9mIHN0cikge1xuICAgICAgICBjb25zdCBieXQgPSBhbHBoYWJldENoYXJzVG9CeXRlc1tjaGFyLmNvZGVQb2ludEF0KDApXTtcbiAgICAgICAgaWYgKGJ5dCA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYE5vbi1iYXNlMjU2ZW1vamkgY2hhcmFjdGVyOiAke2NoYXJ9YCk7XG4gICAgICAgIH1cbiAgICAgICAgYnl0cy5wdXNoKGJ5dCk7XG4gICAgfVxuICAgIHJldHVybiBuZXcgVWludDhBcnJheShieXRzKTtcbn1cbmV4cG9ydCBjb25zdCBiYXNlMjU2ZW1vamkgPSBmcm9tKHtcbiAgICBwcmVmaXg6ICfwn5qAJyxcbiAgICBuYW1lOiAnYmFzZTI1NmVtb2ppJyxcbiAgICBlbmNvZGUsXG4gICAgZGVjb2RlXG59KTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWJhc2UyNTZlbW9qaS5qcy5tYXAiXSwibmFtZXMiOlsiZnJvbSIsImFscGhhYmV0IiwiQXJyYXkiLCJhbHBoYWJldEJ5dGVzVG9DaGFycyIsInJlZHVjZSIsInAiLCJjIiwiaSIsImFscGhhYmV0Q2hhcnNUb0J5dGVzIiwiY29kZVBvaW50QXQiLCJlbmNvZGUiLCJkYXRhIiwiZGVjb2RlIiwic3RyIiwiYnl0cyIsImNoYXIiLCJieXQiLCJ1bmRlZmluZWQiLCJFcnJvciIsInB1c2giLCJVaW50OEFycmF5IiwiYmFzZTI1NmVtb2ppIiwicHJlZml4IiwibmFtZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/multiformats/dist/src/bases/base256emoji.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/multiformats/dist/src/bases/base32.js":
/*!************************************************************!*\
  !*** ./node_modules/multiformats/dist/src/bases/base32.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   base32: () => (/* binding */ base32),\n/* harmony export */   base32hex: () => (/* binding */ base32hex),\n/* harmony export */   base32hexpad: () => (/* binding */ base32hexpad),\n/* harmony export */   base32hexpadupper: () => (/* binding */ base32hexpadupper),\n/* harmony export */   base32hexupper: () => (/* binding */ base32hexupper),\n/* harmony export */   base32pad: () => (/* binding */ base32pad),\n/* harmony export */   base32padupper: () => (/* binding */ base32padupper),\n/* harmony export */   base32upper: () => (/* binding */ base32upper),\n/* harmony export */   base32z: () => (/* binding */ base32z)\n/* harmony export */ });\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ \"(ssr)/./node_modules/multiformats/dist/src/bases/base.js\");\n\nconst base32 = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n    prefix: \"b\",\n    name: \"base32\",\n    alphabet: \"abcdefghijklmnopqrstuvwxyz234567\",\n    bitsPerChar: 5\n});\nconst base32upper = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n    prefix: \"B\",\n    name: \"base32upper\",\n    alphabet: \"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567\",\n    bitsPerChar: 5\n});\nconst base32pad = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n    prefix: \"c\",\n    name: \"base32pad\",\n    alphabet: \"abcdefghijklmnopqrstuvwxyz234567=\",\n    bitsPerChar: 5\n});\nconst base32padupper = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n    prefix: \"C\",\n    name: \"base32padupper\",\n    alphabet: \"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=\",\n    bitsPerChar: 5\n});\nconst base32hex = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n    prefix: \"v\",\n    name: \"base32hex\",\n    alphabet: \"0123456789abcdefghijklmnopqrstuv\",\n    bitsPerChar: 5\n});\nconst base32hexupper = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n    prefix: \"V\",\n    name: \"base32hexupper\",\n    alphabet: \"0123456789ABCDEFGHIJKLMNOPQRSTUV\",\n    bitsPerChar: 5\n});\nconst base32hexpad = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n    prefix: \"t\",\n    name: \"base32hexpad\",\n    alphabet: \"0123456789abcdefghijklmnopqrstuv=\",\n    bitsPerChar: 5\n});\nconst base32hexpadupper = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n    prefix: \"T\",\n    name: \"base32hexpadupper\",\n    alphabet: \"0123456789ABCDEFGHIJKLMNOPQRSTUV=\",\n    bitsPerChar: 5\n});\nconst base32z = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n    prefix: \"h\",\n    name: \"base32z\",\n    alphabet: \"ybndrfg8ejkmcpqxot1uwisza345h769\",\n    bitsPerChar: 5\n}); //# sourceMappingURL=base32.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL2Rpc3Qvc3JjL2Jhc2VzL2Jhc2UzMi5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7O0FBQW9DO0FBQzdCLE1BQU1DLFNBQVNELGlEQUFPQSxDQUFDO0lBQzFCRSxRQUFRO0lBQ1JDLE1BQU07SUFDTkMsVUFBVTtJQUNWQyxhQUFhO0FBQ2pCLEdBQUc7QUFDSSxNQUFNQyxjQUFjTixpREFBT0EsQ0FBQztJQUMvQkUsUUFBUTtJQUNSQyxNQUFNO0lBQ05DLFVBQVU7SUFDVkMsYUFBYTtBQUNqQixHQUFHO0FBQ0ksTUFBTUUsWUFBWVAsaURBQU9BLENBQUM7SUFDN0JFLFFBQVE7SUFDUkMsTUFBTTtJQUNOQyxVQUFVO0lBQ1ZDLGFBQWE7QUFDakIsR0FBRztBQUNJLE1BQU1HLGlCQUFpQlIsaURBQU9BLENBQUM7SUFDbENFLFFBQVE7SUFDUkMsTUFBTTtJQUNOQyxVQUFVO0lBQ1ZDLGFBQWE7QUFDakIsR0FBRztBQUNJLE1BQU1JLFlBQVlULGlEQUFPQSxDQUFDO0lBQzdCRSxRQUFRO0lBQ1JDLE1BQU07SUFDTkMsVUFBVTtJQUNWQyxhQUFhO0FBQ2pCLEdBQUc7QUFDSSxNQUFNSyxpQkFBaUJWLGlEQUFPQSxDQUFDO0lBQ2xDRSxRQUFRO0lBQ1JDLE1BQU07SUFDTkMsVUFBVTtJQUNWQyxhQUFhO0FBQ2pCLEdBQUc7QUFDSSxNQUFNTSxlQUFlWCxpREFBT0EsQ0FBQztJQUNoQ0UsUUFBUTtJQUNSQyxNQUFNO0lBQ05DLFVBQVU7SUFDVkMsYUFBYTtBQUNqQixHQUFHO0FBQ0ksTUFBTU8sb0JBQW9CWixpREFBT0EsQ0FBQztJQUNyQ0UsUUFBUTtJQUNSQyxNQUFNO0lBQ05DLFVBQVU7SUFDVkMsYUFBYTtBQUNqQixHQUFHO0FBQ0ksTUFBTVEsVUFBVWIsaURBQU9BLENBQUM7SUFDM0JFLFFBQVE7SUFDUkMsTUFBTTtJQUNOQyxVQUFVO0lBQ1ZDLGFBQWE7QUFDakIsR0FBRyxDQUNILGtDQUFrQyIsInNvdXJjZXMiOlsid2VicGFjazovL2ZsdXNoLW5vdGVzLy4vbm9kZV9tb2R1bGVzL211bHRpZm9ybWF0cy9kaXN0L3NyYy9iYXNlcy9iYXNlMzIuanM/NGI5MyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyByZmM0NjQ4IH0gZnJvbSAnLi9iYXNlLmpzJztcbmV4cG9ydCBjb25zdCBiYXNlMzIgPSByZmM0NjQ4KHtcbiAgICBwcmVmaXg6ICdiJyxcbiAgICBuYW1lOiAnYmFzZTMyJyxcbiAgICBhbHBoYWJldDogJ2FiY2RlZmdoaWprbG1ub3BxcnN0dXZ3eHl6MjM0NTY3JyxcbiAgICBiaXRzUGVyQ2hhcjogNVxufSk7XG5leHBvcnQgY29uc3QgYmFzZTMydXBwZXIgPSByZmM0NjQ4KHtcbiAgICBwcmVmaXg6ICdCJyxcbiAgICBuYW1lOiAnYmFzZTMydXBwZXInLFxuICAgIGFscGhhYmV0OiAnQUJDREVGR0hJSktMTU5PUFFSU1RVVldYWVoyMzQ1NjcnLFxuICAgIGJpdHNQZXJDaGFyOiA1XG59KTtcbmV4cG9ydCBjb25zdCBiYXNlMzJwYWQgPSByZmM0NjQ4KHtcbiAgICBwcmVmaXg6ICdjJyxcbiAgICBuYW1lOiAnYmFzZTMycGFkJyxcbiAgICBhbHBoYWJldDogJ2FiY2RlZmdoaWprbG1ub3BxcnN0dXZ3eHl6MjM0NTY3PScsXG4gICAgYml0c1BlckNoYXI6IDVcbn0pO1xuZXhwb3J0IGNvbnN0IGJhc2UzMnBhZHVwcGVyID0gcmZjNDY0OCh7XG4gICAgcHJlZml4OiAnQycsXG4gICAgbmFtZTogJ2Jhc2UzMnBhZHVwcGVyJyxcbiAgICBhbHBoYWJldDogJ0FCQ0RFRkdISUpLTE1OT1BRUlNUVVZXWFlaMjM0NTY3PScsXG4gICAgYml0c1BlckNoYXI6IDVcbn0pO1xuZXhwb3J0IGNvbnN0IGJhc2UzMmhleCA9IHJmYzQ2NDgoe1xuICAgIHByZWZpeDogJ3YnLFxuICAgIG5hbWU6ICdiYXNlMzJoZXgnLFxuICAgIGFscGhhYmV0OiAnMDEyMzQ1Njc4OWFiY2RlZmdoaWprbG1ub3BxcnN0dXYnLFxuICAgIGJpdHNQZXJDaGFyOiA1XG59KTtcbmV4cG9ydCBjb25zdCBiYXNlMzJoZXh1cHBlciA9IHJmYzQ2NDgoe1xuICAgIHByZWZpeDogJ1YnLFxuICAgIG5hbWU6ICdiYXNlMzJoZXh1cHBlcicsXG4gICAgYWxwaGFiZXQ6ICcwMTIzNDU2Nzg5QUJDREVGR0hJSktMTU5PUFFSU1RVVicsXG4gICAgYml0c1BlckNoYXI6IDVcbn0pO1xuZXhwb3J0IGNvbnN0IGJhc2UzMmhleHBhZCA9IHJmYzQ2NDgoe1xuICAgIHByZWZpeDogJ3QnLFxuICAgIG5hbWU6ICdiYXNlMzJoZXhwYWQnLFxuICAgIGFscGhhYmV0OiAnMDEyMzQ1Njc4OWFiY2RlZmdoaWprbG1ub3BxcnN0dXY9JyxcbiAgICBiaXRzUGVyQ2hhcjogNVxufSk7XG5leHBvcnQgY29uc3QgYmFzZTMyaGV4cGFkdXBwZXIgPSByZmM0NjQ4KHtcbiAgICBwcmVmaXg6ICdUJyxcbiAgICBuYW1lOiAnYmFzZTMyaGV4cGFkdXBwZXInLFxuICAgIGFscGhhYmV0OiAnMDEyMzQ1Njc4OUFCQ0RFRkdISUpLTE1OT1BRUlNUVVY9JyxcbiAgICBiaXRzUGVyQ2hhcjogNVxufSk7XG5leHBvcnQgY29uc3QgYmFzZTMyeiA9IHJmYzQ2NDgoe1xuICAgIHByZWZpeDogJ2gnLFxuICAgIG5hbWU6ICdiYXNlMzJ6JyxcbiAgICBhbHBoYWJldDogJ3libmRyZmc4ZWprbWNwcXhvdDF1d2lzemEzNDVoNzY5JyxcbiAgICBiaXRzUGVyQ2hhcjogNVxufSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1iYXNlMzIuanMubWFwIl0sIm5hbWVzIjpbInJmYzQ2NDgiLCJiYXNlMzIiLCJwcmVmaXgiLCJuYW1lIiwiYWxwaGFiZXQiLCJiaXRzUGVyQ2hhciIsImJhc2UzMnVwcGVyIiwiYmFzZTMycGFkIiwiYmFzZTMycGFkdXBwZXIiLCJiYXNlMzJoZXgiLCJiYXNlMzJoZXh1cHBlciIsImJhc2UzMmhleHBhZCIsImJhc2UzMmhleHBhZHVwcGVyIiwiYmFzZTMyeiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/multiformats/dist/src/bases/base32.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/multiformats/dist/src/bases/base36.js":
/*!************************************************************!*\
  !*** ./node_modules/multiformats/dist/src/bases/base36.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   base36: () => (/* binding */ base36),\n/* harmony export */   base36upper: () => (/* binding */ base36upper)\n/* harmony export */ });\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ \"(ssr)/./node_modules/multiformats/dist/src/bases/base.js\");\n\nconst base36 = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.baseX)({\n    prefix: \"k\",\n    name: \"base36\",\n    alphabet: \"0123456789abcdefghijklmnopqrstuvwxyz\"\n});\nconst base36upper = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.baseX)({\n    prefix: \"K\",\n    name: \"base36upper\",\n    alphabet: \"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n}); //# sourceMappingURL=base36.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL2Rpc3Qvc3JjL2Jhc2VzL2Jhc2UzNi5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBa0M7QUFDM0IsTUFBTUMsU0FBU0QsK0NBQUtBLENBQUM7SUFDeEJFLFFBQVE7SUFDUkMsTUFBTTtJQUNOQyxVQUFVO0FBQ2QsR0FBRztBQUNJLE1BQU1DLGNBQWNMLCtDQUFLQSxDQUFDO0lBQzdCRSxRQUFRO0lBQ1JDLE1BQU07SUFDTkMsVUFBVTtBQUNkLEdBQUcsQ0FDSCxrQ0FBa0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mbHVzaC1ub3Rlcy8uL25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvZGlzdC9zcmMvYmFzZXMvYmFzZTM2LmpzP2Q3MGQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgYmFzZVggfSBmcm9tICcuL2Jhc2UuanMnO1xuZXhwb3J0IGNvbnN0IGJhc2UzNiA9IGJhc2VYKHtcbiAgICBwcmVmaXg6ICdrJyxcbiAgICBuYW1lOiAnYmFzZTM2JyxcbiAgICBhbHBoYWJldDogJzAxMjM0NTY3ODlhYmNkZWZnaGlqa2xtbm9wcXJzdHV2d3h5eidcbn0pO1xuZXhwb3J0IGNvbnN0IGJhc2UzNnVwcGVyID0gYmFzZVgoe1xuICAgIHByZWZpeDogJ0snLFxuICAgIG5hbWU6ICdiYXNlMzZ1cHBlcicsXG4gICAgYWxwaGFiZXQ6ICcwMTIzNDU2Nzg5QUJDREVGR0hJSktMTU5PUFFSU1RVVldYWVonXG59KTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWJhc2UzNi5qcy5tYXAiXSwibmFtZXMiOlsiYmFzZVgiLCJiYXNlMzYiLCJwcmVmaXgiLCJuYW1lIiwiYWxwaGFiZXQiLCJiYXNlMzZ1cHBlciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/multiformats/dist/src/bases/base36.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/multiformats/dist/src/bases/base58.js":
/*!************************************************************!*\
  !*** ./node_modules/multiformats/dist/src/bases/base58.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   base58btc: () => (/* binding */ base58btc),\n/* harmony export */   base58flickr: () => (/* binding */ base58flickr)\n/* harmony export */ });\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ \"(ssr)/./node_modules/multiformats/dist/src/bases/base.js\");\n\nconst base58btc = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.baseX)({\n    name: \"base58btc\",\n    prefix: \"z\",\n    alphabet: \"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz\"\n});\nconst base58flickr = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.baseX)({\n    name: \"base58flickr\",\n    prefix: \"Z\",\n    alphabet: \"123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ\"\n}); //# sourceMappingURL=base58.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL2Rpc3Qvc3JjL2Jhc2VzL2Jhc2U1OC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBa0M7QUFDM0IsTUFBTUMsWUFBWUQsK0NBQUtBLENBQUM7SUFDM0JFLE1BQU07SUFDTkMsUUFBUTtJQUNSQyxVQUFVO0FBQ2QsR0FBRztBQUNJLE1BQU1DLGVBQWVMLCtDQUFLQSxDQUFDO0lBQzlCRSxNQUFNO0lBQ05DLFFBQVE7SUFDUkMsVUFBVTtBQUNkLEdBQUcsQ0FDSCxrQ0FBa0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mbHVzaC1ub3Rlcy8uL25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvZGlzdC9zcmMvYmFzZXMvYmFzZTU4LmpzP2U3ZmEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgYmFzZVggfSBmcm9tICcuL2Jhc2UuanMnO1xuZXhwb3J0IGNvbnN0IGJhc2U1OGJ0YyA9IGJhc2VYKHtcbiAgICBuYW1lOiAnYmFzZTU4YnRjJyxcbiAgICBwcmVmaXg6ICd6JyxcbiAgICBhbHBoYWJldDogJzEyMzQ1Njc4OUFCQ0RFRkdISktMTU5QUVJTVFVWV1hZWmFiY2RlZmdoaWprbW5vcHFyc3R1dnd4eXonXG59KTtcbmV4cG9ydCBjb25zdCBiYXNlNThmbGlja3IgPSBiYXNlWCh7XG4gICAgbmFtZTogJ2Jhc2U1OGZsaWNrcicsXG4gICAgcHJlZml4OiAnWicsXG4gICAgYWxwaGFiZXQ6ICcxMjM0NTY3ODlhYmNkZWZnaGlqa21ub3BxcnN0dXZ3eHl6QUJDREVGR0hKS0xNTlBRUlNUVVZXWFlaJ1xufSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1iYXNlNTguanMubWFwIl0sIm5hbWVzIjpbImJhc2VYIiwiYmFzZTU4YnRjIiwibmFtZSIsInByZWZpeCIsImFscGhhYmV0IiwiYmFzZTU4ZmxpY2tyIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/multiformats/dist/src/bases/base58.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/multiformats/dist/src/bases/base64.js":
/*!************************************************************!*\
  !*** ./node_modules/multiformats/dist/src/bases/base64.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   base64: () => (/* binding */ base64),\n/* harmony export */   base64pad: () => (/* binding */ base64pad),\n/* harmony export */   base64url: () => (/* binding */ base64url),\n/* harmony export */   base64urlpad: () => (/* binding */ base64urlpad)\n/* harmony export */ });\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ \"(ssr)/./node_modules/multiformats/dist/src/bases/base.js\");\n\nconst base64 = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n    prefix: \"m\",\n    name: \"base64\",\n    alphabet: \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\",\n    bitsPerChar: 6\n});\nconst base64pad = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n    prefix: \"M\",\n    name: \"base64pad\",\n    alphabet: \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\",\n    bitsPerChar: 6\n});\nconst base64url = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n    prefix: \"u\",\n    name: \"base64url\",\n    alphabet: \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_\",\n    bitsPerChar: 6\n});\nconst base64urlpad = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n    prefix: \"U\",\n    name: \"base64urlpad\",\n    alphabet: \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=\",\n    bitsPerChar: 6\n}); //# sourceMappingURL=base64.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL2Rpc3Qvc3JjL2Jhc2VzL2Jhc2U2NC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFvQztBQUM3QixNQUFNQyxTQUFTRCxpREFBT0EsQ0FBQztJQUMxQkUsUUFBUTtJQUNSQyxNQUFNO0lBQ05DLFVBQVU7SUFDVkMsYUFBYTtBQUNqQixHQUFHO0FBQ0ksTUFBTUMsWUFBWU4saURBQU9BLENBQUM7SUFDN0JFLFFBQVE7SUFDUkMsTUFBTTtJQUNOQyxVQUFVO0lBQ1ZDLGFBQWE7QUFDakIsR0FBRztBQUNJLE1BQU1FLFlBQVlQLGlEQUFPQSxDQUFDO0lBQzdCRSxRQUFRO0lBQ1JDLE1BQU07SUFDTkMsVUFBVTtJQUNWQyxhQUFhO0FBQ2pCLEdBQUc7QUFDSSxNQUFNRyxlQUFlUixpREFBT0EsQ0FBQztJQUNoQ0UsUUFBUTtJQUNSQyxNQUFNO0lBQ05DLFVBQVU7SUFDVkMsYUFBYTtBQUNqQixHQUFHLENBQ0gsa0NBQWtDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZmx1c2gtbm90ZXMvLi9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL2Rpc3Qvc3JjL2Jhc2VzL2Jhc2U2NC5qcz84NjIxIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHJmYzQ2NDggfSBmcm9tICcuL2Jhc2UuanMnO1xuZXhwb3J0IGNvbnN0IGJhc2U2NCA9IHJmYzQ2NDgoe1xuICAgIHByZWZpeDogJ20nLFxuICAgIG5hbWU6ICdiYXNlNjQnLFxuICAgIGFscGhhYmV0OiAnQUJDREVGR0hJSktMTU5PUFFSU1RVVldYWVphYmNkZWZnaGlqa2xtbm9wcXJzdHV2d3h5ejAxMjM0NTY3ODkrLycsXG4gICAgYml0c1BlckNoYXI6IDZcbn0pO1xuZXhwb3J0IGNvbnN0IGJhc2U2NHBhZCA9IHJmYzQ2NDgoe1xuICAgIHByZWZpeDogJ00nLFxuICAgIG5hbWU6ICdiYXNlNjRwYWQnLFxuICAgIGFscGhhYmV0OiAnQUJDREVGR0hJSktMTU5PUFFSU1RVVldYWVphYmNkZWZnaGlqa2xtbm9wcXJzdHV2d3h5ejAxMjM0NTY3ODkrLz0nLFxuICAgIGJpdHNQZXJDaGFyOiA2XG59KTtcbmV4cG9ydCBjb25zdCBiYXNlNjR1cmwgPSByZmM0NjQ4KHtcbiAgICBwcmVmaXg6ICd1JyxcbiAgICBuYW1lOiAnYmFzZTY0dXJsJyxcbiAgICBhbHBoYWJldDogJ0FCQ0RFRkdISUpLTE1OT1BRUlNUVVZXWFlaYWJjZGVmZ2hpamtsbW5vcHFyc3R1dnd4eXowMTIzNDU2Nzg5LV8nLFxuICAgIGJpdHNQZXJDaGFyOiA2XG59KTtcbmV4cG9ydCBjb25zdCBiYXNlNjR1cmxwYWQgPSByZmM0NjQ4KHtcbiAgICBwcmVmaXg6ICdVJyxcbiAgICBuYW1lOiAnYmFzZTY0dXJscGFkJyxcbiAgICBhbHBoYWJldDogJ0FCQ0RFRkdISUpLTE1OT1BRUlNUVVZXWFlaYWJjZGVmZ2hpamtsbW5vcHFyc3R1dnd4eXowMTIzNDU2Nzg5LV89JyxcbiAgICBiaXRzUGVyQ2hhcjogNlxufSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1iYXNlNjQuanMubWFwIl0sIm5hbWVzIjpbInJmYzQ2NDgiLCJiYXNlNjQiLCJwcmVmaXgiLCJuYW1lIiwiYWxwaGFiZXQiLCJiaXRzUGVyQ2hhciIsImJhc2U2NHBhZCIsImJhc2U2NHVybCIsImJhc2U2NHVybHBhZCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/multiformats/dist/src/bases/base64.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/multiformats/dist/src/bases/base8.js":
/*!***********************************************************!*\
  !*** ./node_modules/multiformats/dist/src/bases/base8.js ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   base8: () => (/* binding */ base8)\n/* harmony export */ });\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ \"(ssr)/./node_modules/multiformats/dist/src/bases/base.js\");\n\nconst base8 = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n    prefix: \"7\",\n    name: \"base8\",\n    alphabet: \"01234567\",\n    bitsPerChar: 3\n}); //# sourceMappingURL=base8.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL2Rpc3Qvc3JjL2Jhc2VzL2Jhc2U4LmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQW9DO0FBQzdCLE1BQU1DLFFBQVFELGlEQUFPQSxDQUFDO0lBQ3pCRSxRQUFRO0lBQ1JDLE1BQU07SUFDTkMsVUFBVTtJQUNWQyxhQUFhO0FBQ2pCLEdBQUcsQ0FDSCxpQ0FBaUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mbHVzaC1ub3Rlcy8uL25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvZGlzdC9zcmMvYmFzZXMvYmFzZTguanM/ZGE4OCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyByZmM0NjQ4IH0gZnJvbSAnLi9iYXNlLmpzJztcbmV4cG9ydCBjb25zdCBiYXNlOCA9IHJmYzQ2NDgoe1xuICAgIHByZWZpeDogJzcnLFxuICAgIG5hbWU6ICdiYXNlOCcsXG4gICAgYWxwaGFiZXQ6ICcwMTIzNDU2NycsXG4gICAgYml0c1BlckNoYXI6IDNcbn0pO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YmFzZTguanMubWFwIl0sIm5hbWVzIjpbInJmYzQ2NDgiLCJiYXNlOCIsInByZWZpeCIsIm5hbWUiLCJhbHBoYWJldCIsImJpdHNQZXJDaGFyIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/multiformats/dist/src/bases/base8.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/multiformats/dist/src/bases/identity.js":
/*!**************************************************************!*\
  !*** ./node_modules/multiformats/dist/src/bases/identity.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   identity: () => (/* binding */ identity)\n/* harmony export */ });\n/* harmony import */ var _bytes_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../bytes.js */ \"(ssr)/./node_modules/multiformats/dist/src/bytes.js\");\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./base.js */ \"(ssr)/./node_modules/multiformats/dist/src/bases/base.js\");\n\n\nconst identity = (0,_base_js__WEBPACK_IMPORTED_MODULE_1__.from)({\n    prefix: \"\\x00\",\n    name: \"identity\",\n    encode: (buf)=>(0,_bytes_js__WEBPACK_IMPORTED_MODULE_0__.toString)(buf),\n    decode: (str)=>(0,_bytes_js__WEBPACK_IMPORTED_MODULE_0__.fromString)(str)\n}); //# sourceMappingURL=identity.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL2Rpc3Qvc3JjL2Jhc2VzL2lkZW50aXR5LmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFtRDtBQUNsQjtBQUMxQixNQUFNRyxXQUFXRCw4Q0FBSUEsQ0FBQztJQUN6QkUsUUFBUTtJQUNSQyxNQUFNO0lBQ05DLFFBQVEsQ0FBQ0MsTUFBUU4sbURBQVFBLENBQUNNO0lBQzFCQyxRQUFRLENBQUNDLE1BQVFULHFEQUFVQSxDQUFDUztBQUNoQyxHQUFHLENBQ0gsb0NBQW9DIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZmx1c2gtbm90ZXMvLi9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL2Rpc3Qvc3JjL2Jhc2VzL2lkZW50aXR5LmpzPzNiNmUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZnJvbVN0cmluZywgdG9TdHJpbmcgfSBmcm9tICcuLi9ieXRlcy5qcyc7XG5pbXBvcnQgeyBmcm9tIH0gZnJvbSAnLi9iYXNlLmpzJztcbmV4cG9ydCBjb25zdCBpZGVudGl0eSA9IGZyb20oe1xuICAgIHByZWZpeDogJ1xceDAwJyxcbiAgICBuYW1lOiAnaWRlbnRpdHknLFxuICAgIGVuY29kZTogKGJ1ZikgPT4gdG9TdHJpbmcoYnVmKSxcbiAgICBkZWNvZGU6IChzdHIpID0+IGZyb21TdHJpbmcoc3RyKVxufSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pZGVudGl0eS5qcy5tYXAiXSwibmFtZXMiOlsiZnJvbVN0cmluZyIsInRvU3RyaW5nIiwiZnJvbSIsImlkZW50aXR5IiwicHJlZml4IiwibmFtZSIsImVuY29kZSIsImJ1ZiIsImRlY29kZSIsInN0ciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/multiformats/dist/src/bases/identity.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/multiformats/dist/src/bases/interface.js":
/*!***************************************************************!*\
  !*** ./node_modules/multiformats/dist/src/bases/interface.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n// Base encoders / decoders just base encode / decode between binary and\n// textual representation. They are unaware of multibase.\n //# sourceMappingURL=interface.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL2Rpc3Qvc3JjL2Jhc2VzL2ludGVyZmFjZS5qcyIsIm1hcHBpbmdzIjoiO0FBQUEsd0VBQXdFO0FBQ3hFLHlEQUF5RDtBQUMvQyxDQUNWLHFDQUFxQyIsInNvdXJjZXMiOlsid2VicGFjazovL2ZsdXNoLW5vdGVzLy4vbm9kZV9tb2R1bGVzL211bHRpZm9ybWF0cy9kaXN0L3NyYy9iYXNlcy9pbnRlcmZhY2UuanM/YTRmNiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBCYXNlIGVuY29kZXJzIC8gZGVjb2RlcnMganVzdCBiYXNlIGVuY29kZSAvIGRlY29kZSBiZXR3ZWVuIGJpbmFyeSBhbmRcbi8vIHRleHR1YWwgcmVwcmVzZW50YXRpb24uIFRoZXkgYXJlIHVuYXdhcmUgb2YgbXVsdGliYXNlLlxuZXhwb3J0IHt9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW50ZXJmYWNlLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/multiformats/dist/src/bases/interface.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/multiformats/dist/src/basics.js":
/*!******************************************************!*\
  !*** ./node_modules/multiformats/dist/src/basics.js ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CID: () => (/* reexport safe */ _index_js__WEBPACK_IMPORTED_MODULE_14__.CID),\n/* harmony export */   bases: () => (/* binding */ bases),\n/* harmony export */   bytes: () => (/* reexport safe */ _index_js__WEBPACK_IMPORTED_MODULE_14__.bytes),\n/* harmony export */   codecs: () => (/* binding */ codecs),\n/* harmony export */   digest: () => (/* reexport safe */ _index_js__WEBPACK_IMPORTED_MODULE_14__.digest),\n/* harmony export */   hasher: () => (/* reexport safe */ _index_js__WEBPACK_IMPORTED_MODULE_14__.hasher),\n/* harmony export */   hashes: () => (/* binding */ hashes),\n/* harmony export */   varint: () => (/* reexport safe */ _index_js__WEBPACK_IMPORTED_MODULE_14__.varint)\n/* harmony export */ });\n/* harmony import */ var _bases_base10_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./bases/base10.js */ \"(ssr)/./node_modules/multiformats/dist/src/bases/base10.js\");\n/* harmony import */ var _bases_base16_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./bases/base16.js */ \"(ssr)/./node_modules/multiformats/dist/src/bases/base16.js\");\n/* harmony import */ var _bases_base2_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./bases/base2.js */ \"(ssr)/./node_modules/multiformats/dist/src/bases/base2.js\");\n/* harmony import */ var _bases_base256emoji_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./bases/base256emoji.js */ \"(ssr)/./node_modules/multiformats/dist/src/bases/base256emoji.js\");\n/* harmony import */ var _bases_base32_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./bases/base32.js */ \"(ssr)/./node_modules/multiformats/dist/src/bases/base32.js\");\n/* harmony import */ var _bases_base36_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./bases/base36.js */ \"(ssr)/./node_modules/multiformats/dist/src/bases/base36.js\");\n/* harmony import */ var _bases_base58_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./bases/base58.js */ \"(ssr)/./node_modules/multiformats/dist/src/bases/base58.js\");\n/* harmony import */ var _bases_base64_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./bases/base64.js */ \"(ssr)/./node_modules/multiformats/dist/src/bases/base64.js\");\n/* harmony import */ var _bases_base8_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./bases/base8.js */ \"(ssr)/./node_modules/multiformats/dist/src/bases/base8.js\");\n/* harmony import */ var _bases_identity_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./bases/identity.js */ \"(ssr)/./node_modules/multiformats/dist/src/bases/identity.js\");\n/* harmony import */ var _codecs_json_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./codecs/json.js */ \"(ssr)/./node_modules/multiformats/dist/src/codecs/json.js\");\n/* harmony import */ var _codecs_raw_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./codecs/raw.js */ \"(ssr)/./node_modules/multiformats/dist/src/codecs/raw.js\");\n/* harmony import */ var _hashes_identity_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./hashes/identity.js */ \"(ssr)/./node_modules/multiformats/dist/src/hashes/identity.js\");\n/* harmony import */ var _hashes_sha2_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./hashes/sha2.js */ \"(ssr)/./node_modules/multiformats/dist/src/hashes/sha2.js\");\n/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./index.js */ \"(ssr)/./node_modules/multiformats/dist/src/index.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst bases = {\n    ..._bases_identity_js__WEBPACK_IMPORTED_MODULE_9__,\n    ..._bases_base2_js__WEBPACK_IMPORTED_MODULE_2__,\n    ..._bases_base8_js__WEBPACK_IMPORTED_MODULE_8__,\n    ..._bases_base10_js__WEBPACK_IMPORTED_MODULE_0__,\n    ..._bases_base16_js__WEBPACK_IMPORTED_MODULE_1__,\n    ..._bases_base32_js__WEBPACK_IMPORTED_MODULE_4__,\n    ..._bases_base36_js__WEBPACK_IMPORTED_MODULE_5__,\n    ..._bases_base58_js__WEBPACK_IMPORTED_MODULE_6__,\n    ..._bases_base64_js__WEBPACK_IMPORTED_MODULE_7__,\n    ..._bases_base256emoji_js__WEBPACK_IMPORTED_MODULE_3__\n};\nconst hashes = {\n    ..._hashes_sha2_js__WEBPACK_IMPORTED_MODULE_13__,\n    ..._hashes_identity_js__WEBPACK_IMPORTED_MODULE_12__\n};\nconst codecs = {\n    raw: _codecs_raw_js__WEBPACK_IMPORTED_MODULE_11__,\n    json: _codecs_json_js__WEBPACK_IMPORTED_MODULE_10__\n};\n //# sourceMappingURL=basics.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL2Rpc3Qvc3JjL2Jhc2ljcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUE0QztBQUNBO0FBQ0Y7QUFDYztBQUNaO0FBQ0E7QUFDQTtBQUNBO0FBQ0Y7QUFDVTtBQUNYO0FBQ0Y7QUFDVTtBQUNSO0FBQ3VCO0FBQ3pELE1BQU1tQixRQUFRO0lBQUUsR0FBR1YsK0NBQVk7SUFBRSxHQUFHUCw0Q0FBSztJQUFFLEdBQUdNLDRDQUFLO0lBQUUsR0FBR1IsNkNBQU07SUFBRSxHQUFHQyw2Q0FBTTtJQUFFLEdBQUdHLDZDQUFNO0lBQUUsR0FBR0MsNkNBQU07SUFBRSxHQUFHQyw2Q0FBTTtJQUFFLEdBQUdDLDZDQUFNO0lBQUUsR0FBR0osbURBQVk7QUFBQyxFQUFFO0FBQ3pJLE1BQU1pQixTQUFTO0lBQUUsR0FBR1AsNkNBQUk7SUFBRSxHQUFHRCxpREFBUTtBQUFDLEVBQUU7QUFDeEMsTUFBTVMsU0FBUztJQUFFVixHQUFHQSw4Q0FBQUE7SUFBRUQsSUFBSUEsK0NBQUFBO0FBQUMsRUFBRTtBQUNVLENBQzlDLGtDQUFrQyIsInNvdXJjZXMiOlsid2VicGFjazovL2ZsdXNoLW5vdGVzLy4vbm9kZV9tb2R1bGVzL211bHRpZm9ybWF0cy9kaXN0L3NyYy9iYXNpY3MuanM/ZTkxZCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBiYXNlMTAgZnJvbSAnLi9iYXNlcy9iYXNlMTAuanMnO1xuaW1wb3J0ICogYXMgYmFzZTE2IGZyb20gJy4vYmFzZXMvYmFzZTE2LmpzJztcbmltcG9ydCAqIGFzIGJhc2UyIGZyb20gJy4vYmFzZXMvYmFzZTIuanMnO1xuaW1wb3J0ICogYXMgYmFzZTI1NmVtb2ppIGZyb20gJy4vYmFzZXMvYmFzZTI1NmVtb2ppLmpzJztcbmltcG9ydCAqIGFzIGJhc2UzMiBmcm9tICcuL2Jhc2VzL2Jhc2UzMi5qcyc7XG5pbXBvcnQgKiBhcyBiYXNlMzYgZnJvbSAnLi9iYXNlcy9iYXNlMzYuanMnO1xuaW1wb3J0ICogYXMgYmFzZTU4IGZyb20gJy4vYmFzZXMvYmFzZTU4LmpzJztcbmltcG9ydCAqIGFzIGJhc2U2NCBmcm9tICcuL2Jhc2VzL2Jhc2U2NC5qcyc7XG5pbXBvcnQgKiBhcyBiYXNlOCBmcm9tICcuL2Jhc2VzL2Jhc2U4LmpzJztcbmltcG9ydCAqIGFzIGlkZW50aXR5QmFzZSBmcm9tICcuL2Jhc2VzL2lkZW50aXR5LmpzJztcbmltcG9ydCAqIGFzIGpzb24gZnJvbSAnLi9jb2RlY3MvanNvbi5qcyc7XG5pbXBvcnQgKiBhcyByYXcgZnJvbSAnLi9jb2RlY3MvcmF3LmpzJztcbmltcG9ydCAqIGFzIGlkZW50aXR5IGZyb20gJy4vaGFzaGVzL2lkZW50aXR5LmpzJztcbmltcG9ydCAqIGFzIHNoYTIgZnJvbSAnLi9oYXNoZXMvc2hhMi5qcyc7XG5pbXBvcnQgeyBDSUQsIGhhc2hlciwgZGlnZXN0LCB2YXJpbnQsIGJ5dGVzIH0gZnJvbSAnLi9pbmRleC5qcyc7XG5leHBvcnQgY29uc3QgYmFzZXMgPSB7IC4uLmlkZW50aXR5QmFzZSwgLi4uYmFzZTIsIC4uLmJhc2U4LCAuLi5iYXNlMTAsIC4uLmJhc2UxNiwgLi4uYmFzZTMyLCAuLi5iYXNlMzYsIC4uLmJhc2U1OCwgLi4uYmFzZTY0LCAuLi5iYXNlMjU2ZW1vamkgfTtcbmV4cG9ydCBjb25zdCBoYXNoZXMgPSB7IC4uLnNoYTIsIC4uLmlkZW50aXR5IH07XG5leHBvcnQgY29uc3QgY29kZWNzID0geyByYXcsIGpzb24gfTtcbmV4cG9ydCB7IENJRCwgaGFzaGVyLCBkaWdlc3QsIHZhcmludCwgYnl0ZXMgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWJhc2ljcy5qcy5tYXAiXSwibmFtZXMiOlsiYmFzZTEwIiwiYmFzZTE2IiwiYmFzZTIiLCJiYXNlMjU2ZW1vamkiLCJiYXNlMzIiLCJiYXNlMzYiLCJiYXNlNTgiLCJiYXNlNjQiLCJiYXNlOCIsImlkZW50aXR5QmFzZSIsImpzb24iLCJyYXciLCJpZGVudGl0eSIsInNoYTIiLCJDSUQiLCJoYXNoZXIiLCJkaWdlc3QiLCJ2YXJpbnQiLCJieXRlcyIsImJhc2VzIiwiaGFzaGVzIiwiY29kZWNzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/multiformats/dist/src/basics.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/multiformats/dist/src/block/interface.js":
/*!***************************************************************!*\
  !*** ./node_modules/multiformats/dist/src/block/interface.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n //# sourceMappingURL=interface.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL2Rpc3Qvc3JjL2Jsb2NrL2ludGVyZmFjZS5qcyIsIm1hcHBpbmdzIjoiO0FBQVUsQ0FDVixxQ0FBcUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mbHVzaC1ub3Rlcy8uL25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvZGlzdC9zcmMvYmxvY2svaW50ZXJmYWNlLmpzP2IzZTQiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHt9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW50ZXJmYWNlLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/multiformats/dist/src/block/interface.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/multiformats/dist/src/bytes.js":
/*!*****************************************************!*\
  !*** ./node_modules/multiformats/dist/src/bytes.js ***!
  \*****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   coerce: () => (/* binding */ coerce),\n/* harmony export */   empty: () => (/* binding */ empty),\n/* harmony export */   equals: () => (/* binding */ equals),\n/* harmony export */   fromHex: () => (/* binding */ fromHex),\n/* harmony export */   fromString: () => (/* binding */ fromString),\n/* harmony export */   isBinary: () => (/* binding */ isBinary),\n/* harmony export */   toHex: () => (/* binding */ toHex),\n/* harmony export */   toString: () => (/* binding */ toString)\n/* harmony export */ });\nconst empty = new Uint8Array(0);\nfunction toHex(d) {\n    return d.reduce((hex, byte)=>hex + byte.toString(16).padStart(2, \"0\"), \"\");\n}\nfunction fromHex(hex) {\n    const hexes = hex.match(/../g);\n    return hexes != null ? new Uint8Array(hexes.map((b)=>parseInt(b, 16))) : empty;\n}\nfunction equals(aa, bb) {\n    if (aa === bb) return true;\n    if (aa.byteLength !== bb.byteLength) {\n        return false;\n    }\n    for(let ii = 0; ii < aa.byteLength; ii++){\n        if (aa[ii] !== bb[ii]) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction coerce(o) {\n    if (o instanceof Uint8Array && o.constructor.name === \"Uint8Array\") return o;\n    if (o instanceof ArrayBuffer) return new Uint8Array(o);\n    if (ArrayBuffer.isView(o)) {\n        return new Uint8Array(o.buffer, o.byteOffset, o.byteLength);\n    }\n    throw new Error(\"Unknown type, must be binary type\");\n}\nfunction isBinary(o) {\n    return o instanceof ArrayBuffer || ArrayBuffer.isView(o);\n}\nfunction fromString(str) {\n    return new TextEncoder().encode(str);\n}\nfunction toString(b) {\n    return new TextDecoder().decode(b);\n} //# sourceMappingURL=bytes.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL2Rpc3Qvc3JjL2J5dGVzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBQU8sTUFBTUEsUUFBUSxJQUFJQyxXQUFXLEdBQUc7QUFDaEMsU0FBU0MsTUFBTUMsQ0FBQztJQUNuQixPQUFPQSxFQUFFQyxNQUFNLENBQUMsQ0FBQ0MsS0FBS0MsT0FBU0QsTUFBTUMsS0FBS0MsUUFBUSxDQUFDLElBQUlDLFFBQVEsQ0FBQyxHQUFHLE1BQU07QUFDN0U7QUFDTyxTQUFTQyxRQUFRSixHQUFHO0lBQ3ZCLE1BQU1LLFFBQVFMLElBQUlNLEtBQUssQ0FBQztJQUN4QixPQUFPRCxTQUFTLE9BQU8sSUFBSVQsV0FBV1MsTUFBTUUsR0FBRyxDQUFDQyxDQUFBQSxJQUFLQyxTQUFTRCxHQUFHLFFBQVFiO0FBQzdFO0FBQ08sU0FBU2UsT0FBT0MsRUFBRSxFQUFFQyxFQUFFO0lBQ3pCLElBQUlELE9BQU9DLElBQ1AsT0FBTztJQUNYLElBQUlELEdBQUdFLFVBQVUsS0FBS0QsR0FBR0MsVUFBVSxFQUFFO1FBQ2pDLE9BQU87SUFDWDtJQUNBLElBQUssSUFBSUMsS0FBSyxHQUFHQSxLQUFLSCxHQUFHRSxVQUFVLEVBQUVDLEtBQU07UUFDdkMsSUFBSUgsRUFBRSxDQUFDRyxHQUFHLEtBQUtGLEVBQUUsQ0FBQ0UsR0FBRyxFQUFFO1lBQ25CLE9BQU87UUFDWDtJQUNKO0lBQ0EsT0FBTztBQUNYO0FBQ08sU0FBU0MsT0FBT0MsQ0FBQztJQUNwQixJQUFJQSxhQUFhcEIsY0FBY29CLEVBQUVDLFdBQVcsQ0FBQ0MsSUFBSSxLQUFLLGNBQ2xELE9BQU9GO0lBQ1gsSUFBSUEsYUFBYUcsYUFDYixPQUFPLElBQUl2QixXQUFXb0I7SUFDMUIsSUFBSUcsWUFBWUMsTUFBTSxDQUFDSixJQUFJO1FBQ3ZCLE9BQU8sSUFBSXBCLFdBQVdvQixFQUFFSyxNQUFNLEVBQUVMLEVBQUVNLFVBQVUsRUFBRU4sRUFBRUgsVUFBVTtJQUM5RDtJQUNBLE1BQU0sSUFBSVUsTUFBTTtBQUNwQjtBQUNPLFNBQVNDLFNBQVNSLENBQUM7SUFDdEIsT0FBT0EsYUFBYUcsZUFBZUEsWUFBWUMsTUFBTSxDQUFDSjtBQUMxRDtBQUNPLFNBQVNTLFdBQVdDLEdBQUc7SUFDMUIsT0FBTyxJQUFJQyxjQUFjQyxNQUFNLENBQUNGO0FBQ3BDO0FBQ08sU0FBU3hCLFNBQVNNLENBQUM7SUFDdEIsT0FBTyxJQUFJcUIsY0FBY0MsTUFBTSxDQUFDdEI7QUFDcEMsRUFDQSxpQ0FBaUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mbHVzaC1ub3Rlcy8uL25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvZGlzdC9zcmMvYnl0ZXMuanM/ZTNhMSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3QgZW1wdHkgPSBuZXcgVWludDhBcnJheSgwKTtcbmV4cG9ydCBmdW5jdGlvbiB0b0hleChkKSB7XG4gICAgcmV0dXJuIGQucmVkdWNlKChoZXgsIGJ5dGUpID0+IGhleCArIGJ5dGUudG9TdHJpbmcoMTYpLnBhZFN0YXJ0KDIsICcwJyksICcnKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBmcm9tSGV4KGhleCkge1xuICAgIGNvbnN0IGhleGVzID0gaGV4Lm1hdGNoKC8uLi9nKTtcbiAgICByZXR1cm4gaGV4ZXMgIT0gbnVsbCA/IG5ldyBVaW50OEFycmF5KGhleGVzLm1hcChiID0+IHBhcnNlSW50KGIsIDE2KSkpIDogZW1wdHk7XG59XG5leHBvcnQgZnVuY3Rpb24gZXF1YWxzKGFhLCBiYikge1xuICAgIGlmIChhYSA9PT0gYmIpXG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgIGlmIChhYS5ieXRlTGVuZ3RoICE9PSBiYi5ieXRlTGVuZ3RoKSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgZm9yIChsZXQgaWkgPSAwOyBpaSA8IGFhLmJ5dGVMZW5ndGg7IGlpKyspIHtcbiAgICAgICAgaWYgKGFhW2lpXSAhPT0gYmJbaWldKSB7XG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHRydWU7XG59XG5leHBvcnQgZnVuY3Rpb24gY29lcmNlKG8pIHtcbiAgICBpZiAobyBpbnN0YW5jZW9mIFVpbnQ4QXJyYXkgJiYgby5jb25zdHJ1Y3Rvci5uYW1lID09PSAnVWludDhBcnJheScpXG4gICAgICAgIHJldHVybiBvO1xuICAgIGlmIChvIGluc3RhbmNlb2YgQXJyYXlCdWZmZXIpXG4gICAgICAgIHJldHVybiBuZXcgVWludDhBcnJheShvKTtcbiAgICBpZiAoQXJyYXlCdWZmZXIuaXNWaWV3KG8pKSB7XG4gICAgICAgIHJldHVybiBuZXcgVWludDhBcnJheShvLmJ1ZmZlciwgby5ieXRlT2Zmc2V0LCBvLmJ5dGVMZW5ndGgpO1xuICAgIH1cbiAgICB0aHJvdyBuZXcgRXJyb3IoJ1Vua25vd24gdHlwZSwgbXVzdCBiZSBiaW5hcnkgdHlwZScpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGlzQmluYXJ5KG8pIHtcbiAgICByZXR1cm4gbyBpbnN0YW5jZW9mIEFycmF5QnVmZmVyIHx8IEFycmF5QnVmZmVyLmlzVmlldyhvKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBmcm9tU3RyaW5nKHN0cikge1xuICAgIHJldHVybiBuZXcgVGV4dEVuY29kZXIoKS5lbmNvZGUoc3RyKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiB0b1N0cmluZyhiKSB7XG4gICAgcmV0dXJuIG5ldyBUZXh0RGVjb2RlcigpLmRlY29kZShiKTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWJ5dGVzLmpzLm1hcCJdLCJuYW1lcyI6WyJlbXB0eSIsIlVpbnQ4QXJyYXkiLCJ0b0hleCIsImQiLCJyZWR1Y2UiLCJoZXgiLCJieXRlIiwidG9TdHJpbmciLCJwYWRTdGFydCIsImZyb21IZXgiLCJoZXhlcyIsIm1hdGNoIiwibWFwIiwiYiIsInBhcnNlSW50IiwiZXF1YWxzIiwiYWEiLCJiYiIsImJ5dGVMZW5ndGgiLCJpaSIsImNvZXJjZSIsIm8iLCJjb25zdHJ1Y3RvciIsIm5hbWUiLCJBcnJheUJ1ZmZlciIsImlzVmlldyIsImJ1ZmZlciIsImJ5dGVPZmZzZXQiLCJFcnJvciIsImlzQmluYXJ5IiwiZnJvbVN0cmluZyIsInN0ciIsIlRleHRFbmNvZGVyIiwiZW5jb2RlIiwiVGV4dERlY29kZXIiLCJkZWNvZGUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/multiformats/dist/src/bytes.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/multiformats/dist/src/cid.js":
/*!***************************************************!*\
  !*** ./node_modules/multiformats/dist/src/cid.js ***!
  \***************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CID: () => (/* binding */ CID),\n/* harmony export */   format: () => (/* binding */ format),\n/* harmony export */   fromJSON: () => (/* binding */ fromJSON),\n/* harmony export */   toJSON: () => (/* binding */ toJSON)\n/* harmony export */ });\n/* harmony import */ var _bases_base32_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./bases/base32.js */ \"(ssr)/./node_modules/multiformats/dist/src/bases/base32.js\");\n/* harmony import */ var _bases_base58_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./bases/base58.js */ \"(ssr)/./node_modules/multiformats/dist/src/bases/base58.js\");\n/* harmony import */ var _bytes_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./bytes.js */ \"(ssr)/./node_modules/multiformats/dist/src/bytes.js\");\n/* harmony import */ var _hashes_digest_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./hashes/digest.js */ \"(ssr)/./node_modules/multiformats/dist/src/hashes/digest.js\");\n/* harmony import */ var _varint_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./varint.js */ \"(ssr)/./node_modules/multiformats/dist/src/varint.js\");\n/* harmony import */ var _link_interface_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./link/interface.js */ \"(ssr)/./node_modules/multiformats/dist/src/link/interface.js\");\n\n\n\n\n\n// This way TS will also expose all the types from module\n\nfunction format(link, base) {\n    const { bytes, version } = link;\n    switch(version){\n        case 0:\n            return toStringV0(bytes, baseCache(link), base ?? _bases_base58_js__WEBPACK_IMPORTED_MODULE_1__.base58btc.encoder);\n        default:\n            return toStringV1(bytes, baseCache(link), base ?? _bases_base32_js__WEBPACK_IMPORTED_MODULE_0__.base32.encoder);\n    }\n}\nfunction toJSON(link) {\n    return {\n        \"/\": format(link)\n    };\n}\nfunction fromJSON(json) {\n    return CID.parse(json[\"/\"]);\n}\nconst cache = new WeakMap();\nfunction baseCache(cid) {\n    const baseCache = cache.get(cid);\n    if (baseCache == null) {\n        const baseCache = new Map();\n        cache.set(cid, baseCache);\n        return baseCache;\n    }\n    return baseCache;\n}\nlet prop;\nclass CID {\n    static{\n        prop = Symbol.toStringTag;\n    }\n    /**\n     * @param version - Version of the CID\n     * @param code - Code of the codec content is encoded in, see https://github.com/multiformats/multicodec/blob/master/table.csv\n     * @param multihash - (Multi)hash of the of the content.\n     */ constructor(version, code, multihash, bytes){\n        this[prop] = \"CID\";\n        this.code = code;\n        this.version = version;\n        this.multihash = multihash;\n        this.bytes = bytes;\n        // flag to serializers that this is a CID and\n        // should be treated specially\n        this[\"/\"] = bytes;\n    }\n    /**\n     * Signalling `cid.asCID === cid` has been replaced with `cid['/'] === cid.bytes`\n     * please either use `CID.asCID(cid)` or switch to new signalling mechanism\n     *\n     * @deprecated\n     */ get asCID() {\n        return this;\n    }\n    // ArrayBufferView\n    get byteOffset() {\n        return this.bytes.byteOffset;\n    }\n    // ArrayBufferView\n    get byteLength() {\n        return this.bytes.byteLength;\n    }\n    toV0() {\n        switch(this.version){\n            case 0:\n                {\n                    return this;\n                }\n            case 1:\n                {\n                    const { code, multihash } = this;\n                    if (code !== DAG_PB_CODE) {\n                        throw new Error(\"Cannot convert a non dag-pb CID to CIDv0\");\n                    }\n                    // sha2-256\n                    if (multihash.code !== SHA_256_CODE) {\n                        throw new Error(\"Cannot convert non sha2-256 multihash CID to CIDv0\");\n                    }\n                    return CID.createV0(multihash);\n                }\n            default:\n                {\n                    throw Error(`Can not convert CID version ${this.version} to version 0. This is a bug please report`);\n                }\n        }\n    }\n    toV1() {\n        switch(this.version){\n            case 0:\n                {\n                    const { code, digest } = this.multihash;\n                    const multihash = _hashes_digest_js__WEBPACK_IMPORTED_MODULE_3__.create(code, digest);\n                    return CID.createV1(this.code, multihash);\n                }\n            case 1:\n                {\n                    return this;\n                }\n            default:\n                {\n                    throw Error(`Can not convert CID version ${this.version} to version 1. This is a bug please report`);\n                }\n        }\n    }\n    equals(other) {\n        return CID.equals(this, other);\n    }\n    static equals(self, other) {\n        const unknown = other;\n        return unknown != null && self.code === unknown.code && self.version === unknown.version && _hashes_digest_js__WEBPACK_IMPORTED_MODULE_3__.equals(self.multihash, unknown.multihash);\n    }\n    toString(base) {\n        return format(this, base);\n    }\n    toJSON() {\n        return {\n            \"/\": format(this)\n        };\n    }\n    link() {\n        return this;\n    }\n    // Legacy\n    [Symbol.for(\"nodejs.util.inspect.custom\")]() {\n        return `CID(${this.toString()})`;\n    }\n    /**\n     * Takes any input `value` and returns a `CID` instance if it was\n     * a `CID` otherwise returns `null`. If `value` is instanceof `CID`\n     * it will return value back. If `value` is not instance of this CID\n     * class, but is compatible CID it will return new instance of this\n     * `CID` class. Otherwise returns null.\n     *\n     * This allows two different incompatible versions of CID library to\n     * co-exist and interop as long as binary interface is compatible.\n     */ static asCID(input) {\n        if (input == null) {\n            return null;\n        }\n        const value = input;\n        if (value instanceof CID) {\n            // If value is instance of CID then we're all set.\n            return value;\n        } else if (value[\"/\"] != null && value[\"/\"] === value.bytes || value.asCID === value) {\n            // If value isn't instance of this CID class but `this.asCID === this` or\n            // `value['/'] === value.bytes` is true it is CID instance coming from a\n            // different implementation (diff version or duplicate). In that case we\n            // rebase it to this `CID` implementation so caller is guaranteed to get\n            // instance with expected API.\n            const { version, code, multihash, bytes } = value;\n            return new CID(version, code, multihash, bytes ?? encodeCID(version, code, multihash.bytes));\n        } else if (value[cidSymbol] === true) {\n            // If value is a CID from older implementation that used to be tagged via\n            // symbol we still rebase it to the this `CID` implementation by\n            // delegating that to a constructor.\n            const { version, multihash, code } = value;\n            const digest = _hashes_digest_js__WEBPACK_IMPORTED_MODULE_3__.decode(multihash);\n            return CID.create(version, code, digest);\n        } else {\n            // Otherwise value is not a CID (or an incompatible version of it) in\n            // which case we return `null`.\n            return null;\n        }\n    }\n    /**\n     * @param version - Version of the CID\n     * @param code - Code of the codec content is encoded in, see https://github.com/multiformats/multicodec/blob/master/table.csv\n     * @param digest - (Multi)hash of the of the content.\n     */ static create(version, code, digest) {\n        if (typeof code !== \"number\") {\n            throw new Error(\"String codecs are no longer supported\");\n        }\n        if (!(digest.bytes instanceof Uint8Array)) {\n            throw new Error(\"Invalid digest\");\n        }\n        switch(version){\n            case 0:\n                {\n                    if (code !== DAG_PB_CODE) {\n                        throw new Error(`Version 0 CID must use dag-pb (code: ${DAG_PB_CODE}) block encoding`);\n                    } else {\n                        return new CID(version, code, digest, digest.bytes);\n                    }\n                }\n            case 1:\n                {\n                    const bytes = encodeCID(version, code, digest.bytes);\n                    return new CID(version, code, digest, bytes);\n                }\n            default:\n                {\n                    throw new Error(\"Invalid version\");\n                }\n        }\n    }\n    /**\n     * Simplified version of `create` for CIDv0.\n     */ static createV0(digest) {\n        return CID.create(0, DAG_PB_CODE, digest);\n    }\n    /**\n     * Simplified version of `create` for CIDv1.\n     *\n     * @param code - Content encoding format code.\n     * @param digest - Multihash of the content.\n     */ static createV1(code, digest) {\n        return CID.create(1, code, digest);\n    }\n    /**\n     * Decoded a CID from its binary representation. The byte array must contain\n     * only the CID with no additional bytes.\n     *\n     * An error will be thrown if the bytes provided do not contain a valid\n     * binary representation of a CID.\n     */ static decode(bytes) {\n        const [cid, remainder] = CID.decodeFirst(bytes);\n        if (remainder.length !== 0) {\n            throw new Error(\"Incorrect length\");\n        }\n        return cid;\n    }\n    /**\n     * Decoded a CID from its binary representation at the beginning of a byte\n     * array.\n     *\n     * Returns an array with the first element containing the CID and the second\n     * element containing the remainder of the original byte array. The remainder\n     * will be a zero-length byte array if the provided bytes only contained a\n     * binary CID representation.\n     */ static decodeFirst(bytes) {\n        const specs = CID.inspectBytes(bytes);\n        const prefixSize = specs.size - specs.multihashSize;\n        const multihashBytes = (0,_bytes_js__WEBPACK_IMPORTED_MODULE_2__.coerce)(bytes.subarray(prefixSize, prefixSize + specs.multihashSize));\n        if (multihashBytes.byteLength !== specs.multihashSize) {\n            throw new Error(\"Incorrect length\");\n        }\n        const digestBytes = multihashBytes.subarray(specs.multihashSize - specs.digestSize);\n        const digest = new _hashes_digest_js__WEBPACK_IMPORTED_MODULE_3__.Digest(specs.multihashCode, specs.digestSize, digestBytes, multihashBytes);\n        const cid = specs.version === 0 ? CID.createV0(digest) : CID.createV1(specs.codec, digest);\n        return [\n            cid,\n            bytes.subarray(specs.size)\n        ];\n    }\n    /**\n     * Inspect the initial bytes of a CID to determine its properties.\n     *\n     * Involves decoding up to 4 varints. Typically this will require only 4 to 6\n     * bytes but for larger multicodec code values and larger multihash digest\n     * lengths these varints can be quite large. It is recommended that at least\n     * 10 bytes be made available in the `initialBytes` argument for a complete\n     * inspection.\n     */ static inspectBytes(initialBytes) {\n        let offset = 0;\n        const next = ()=>{\n            const [i, length] = _varint_js__WEBPACK_IMPORTED_MODULE_4__.decode(initialBytes.subarray(offset));\n            offset += length;\n            return i;\n        };\n        let version = next();\n        let codec = DAG_PB_CODE;\n        if (version === 18) {\n            // CIDv0\n            version = 0;\n            offset = 0;\n        } else {\n            codec = next();\n        }\n        if (version !== 0 && version !== 1) {\n            throw new RangeError(`Invalid CID version ${version}`);\n        }\n        const prefixSize = offset;\n        const multihashCode = next(); // multihash code\n        const digestSize = next(); // multihash length\n        const size = offset + digestSize;\n        const multihashSize = size - prefixSize;\n        return {\n            version,\n            codec,\n            multihashCode,\n            digestSize,\n            multihashSize,\n            size\n        };\n    }\n    /**\n     * Takes cid in a string representation and creates an instance. If `base`\n     * decoder is not provided will use a default from the configuration. It will\n     * throw an error if encoding of the CID is not compatible with supplied (or\n     * a default decoder).\n     */ static parse(source, base) {\n        const [prefix, bytes] = parseCIDtoBytes(source, base);\n        const cid = CID.decode(bytes);\n        if (cid.version === 0 && source[0] !== \"Q\") {\n            throw Error(\"Version 0 CID string must not include multibase prefix\");\n        }\n        // Cache string representation to avoid computing it on `this.toString()`\n        baseCache(cid).set(prefix, source);\n        return cid;\n    }\n}\nfunction parseCIDtoBytes(source, base) {\n    switch(source[0]){\n        // CIDv0 is parsed differently\n        case \"Q\":\n            {\n                const decoder = base ?? _bases_base58_js__WEBPACK_IMPORTED_MODULE_1__.base58btc;\n                return [\n                    _bases_base58_js__WEBPACK_IMPORTED_MODULE_1__.base58btc.prefix,\n                    decoder.decode(`${_bases_base58_js__WEBPACK_IMPORTED_MODULE_1__.base58btc.prefix}${source}`)\n                ];\n            }\n        case _bases_base58_js__WEBPACK_IMPORTED_MODULE_1__.base58btc.prefix:\n            {\n                const decoder = base ?? _bases_base58_js__WEBPACK_IMPORTED_MODULE_1__.base58btc;\n                return [\n                    _bases_base58_js__WEBPACK_IMPORTED_MODULE_1__.base58btc.prefix,\n                    decoder.decode(source)\n                ];\n            }\n        case _bases_base32_js__WEBPACK_IMPORTED_MODULE_0__.base32.prefix:\n            {\n                const decoder = base ?? _bases_base32_js__WEBPACK_IMPORTED_MODULE_0__.base32;\n                return [\n                    _bases_base32_js__WEBPACK_IMPORTED_MODULE_0__.base32.prefix,\n                    decoder.decode(source)\n                ];\n            }\n        default:\n            {\n                if (base == null) {\n                    throw Error(\"To parse non base32 or base58btc encoded CID multibase decoder must be provided\");\n                }\n                return [\n                    source[0],\n                    base.decode(source)\n                ];\n            }\n    }\n}\nfunction toStringV0(bytes, cache, base) {\n    const { prefix } = base;\n    if (prefix !== _bases_base58_js__WEBPACK_IMPORTED_MODULE_1__.base58btc.prefix) {\n        throw Error(`Cannot string encode V0 in ${base.name} encoding`);\n    }\n    const cid = cache.get(prefix);\n    if (cid == null) {\n        const cid = base.encode(bytes).slice(1);\n        cache.set(prefix, cid);\n        return cid;\n    } else {\n        return cid;\n    }\n}\nfunction toStringV1(bytes, cache, base) {\n    const { prefix } = base;\n    const cid = cache.get(prefix);\n    if (cid == null) {\n        const cid = base.encode(bytes);\n        cache.set(prefix, cid);\n        return cid;\n    } else {\n        return cid;\n    }\n}\nconst DAG_PB_CODE = 0x70;\nconst SHA_256_CODE = 0x12;\nfunction encodeCID(version, code, multihash) {\n    const codeOffset = _varint_js__WEBPACK_IMPORTED_MODULE_4__.encodingLength(version);\n    const hashOffset = codeOffset + _varint_js__WEBPACK_IMPORTED_MODULE_4__.encodingLength(code);\n    const bytes = new Uint8Array(hashOffset + multihash.byteLength);\n    _varint_js__WEBPACK_IMPORTED_MODULE_4__.encodeTo(version, bytes, 0);\n    _varint_js__WEBPACK_IMPORTED_MODULE_4__.encodeTo(code, bytes, codeOffset);\n    bytes.set(multihash, hashOffset);\n    return bytes;\n}\nconst cidSymbol = Symbol.for(\"@ipld/js-cid/CID\"); //# sourceMappingURL=cid.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/multiformats/dist/src/cid.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/multiformats/dist/src/codecs/interface.js":
/*!****************************************************************!*\
  !*** ./node_modules/multiformats/dist/src/codecs/interface.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n //# sourceMappingURL=interface.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL2Rpc3Qvc3JjL2NvZGVjcy9pbnRlcmZhY2UuanMiLCJtYXBwaW5ncyI6IjtBQUFVLENBQ1YscUNBQXFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZmx1c2gtbm90ZXMvLi9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL2Rpc3Qvc3JjL2NvZGVjcy9pbnRlcmZhY2UuanM/Mzk3YSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQge307XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbnRlcmZhY2UuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/multiformats/dist/src/codecs/interface.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/multiformats/dist/src/codecs/json.js":
/*!***********************************************************!*\
  !*** ./node_modules/multiformats/dist/src/codecs/json.js ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   code: () => (/* binding */ code),\n/* harmony export */   decode: () => (/* binding */ decode),\n/* harmony export */   encode: () => (/* binding */ encode),\n/* harmony export */   name: () => (/* binding */ name)\n/* harmony export */ });\nconst textEncoder = new TextEncoder();\nconst textDecoder = new TextDecoder();\nconst name = \"json\";\nconst code = 0x0200;\nfunction encode(node) {\n    return textEncoder.encode(JSON.stringify(node));\n}\nfunction decode(data) {\n    return JSON.parse(textDecoder.decode(data));\n} //# sourceMappingURL=json.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL2Rpc3Qvc3JjL2NvZGVjcy9qc29uLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQSxNQUFNQSxjQUFjLElBQUlDO0FBQ3hCLE1BQU1DLGNBQWMsSUFBSUM7QUFDakIsTUFBTUMsT0FBTyxPQUFPO0FBQ3BCLE1BQU1DLE9BQU8sT0FBTztBQUNwQixTQUFTQyxPQUFPQyxJQUFJO0lBQ3ZCLE9BQU9QLFlBQVlNLE1BQU0sQ0FBQ0UsS0FBS0MsU0FBUyxDQUFDRjtBQUM3QztBQUNPLFNBQVNHLE9BQU9DLElBQUk7SUFDdkIsT0FBT0gsS0FBS0ksS0FBSyxDQUFDVixZQUFZUSxNQUFNLENBQUNDO0FBQ3pDLEVBQ0EsZ0NBQWdDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZmx1c2gtbm90ZXMvLi9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL2Rpc3Qvc3JjL2NvZGVjcy9qc29uLmpzP2MzZjgiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgdGV4dEVuY29kZXIgPSBuZXcgVGV4dEVuY29kZXIoKTtcbmNvbnN0IHRleHREZWNvZGVyID0gbmV3IFRleHREZWNvZGVyKCk7XG5leHBvcnQgY29uc3QgbmFtZSA9ICdqc29uJztcbmV4cG9ydCBjb25zdCBjb2RlID0gMHgwMjAwO1xuZXhwb3J0IGZ1bmN0aW9uIGVuY29kZShub2RlKSB7XG4gICAgcmV0dXJuIHRleHRFbmNvZGVyLmVuY29kZShKU09OLnN0cmluZ2lmeShub2RlKSk7XG59XG5leHBvcnQgZnVuY3Rpb24gZGVjb2RlKGRhdGEpIHtcbiAgICByZXR1cm4gSlNPTi5wYXJzZSh0ZXh0RGVjb2Rlci5kZWNvZGUoZGF0YSkpO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9anNvbi5qcy5tYXAiXSwibmFtZXMiOlsidGV4dEVuY29kZXIiLCJUZXh0RW5jb2RlciIsInRleHREZWNvZGVyIiwiVGV4dERlY29kZXIiLCJuYW1lIiwiY29kZSIsImVuY29kZSIsIm5vZGUiLCJKU09OIiwic3RyaW5naWZ5IiwiZGVjb2RlIiwiZGF0YSIsInBhcnNlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/multiformats/dist/src/codecs/json.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/multiformats/dist/src/codecs/raw.js":
/*!**********************************************************!*\
  !*** ./node_modules/multiformats/dist/src/codecs/raw.js ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   code: () => (/* binding */ code),\n/* harmony export */   decode: () => (/* binding */ decode),\n/* harmony export */   encode: () => (/* binding */ encode),\n/* harmony export */   name: () => (/* binding */ name)\n/* harmony export */ });\n/* harmony import */ var _bytes_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../bytes.js */ \"(ssr)/./node_modules/multiformats/dist/src/bytes.js\");\n\nconst name = \"raw\";\nconst code = 0x55;\nfunction encode(node) {\n    return (0,_bytes_js__WEBPACK_IMPORTED_MODULE_0__.coerce)(node);\n}\nfunction decode(data) {\n    return (0,_bytes_js__WEBPACK_IMPORTED_MODULE_0__.coerce)(data);\n} //# sourceMappingURL=raw.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL2Rpc3Qvc3JjL2NvZGVjcy9yYXcuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBcUM7QUFDOUIsTUFBTUMsT0FBTyxNQUFNO0FBQ25CLE1BQU1DLE9BQU8sS0FBSztBQUNsQixTQUFTQyxPQUFPQyxJQUFJO0lBQ3ZCLE9BQU9KLGlEQUFNQSxDQUFDSTtBQUNsQjtBQUNPLFNBQVNDLE9BQU9DLElBQUk7SUFDdkIsT0FBT04saURBQU1BLENBQUNNO0FBQ2xCLEVBQ0EsK0JBQStCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZmx1c2gtbm90ZXMvLi9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL2Rpc3Qvc3JjL2NvZGVjcy9yYXcuanM/OThhMyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjb2VyY2UgfSBmcm9tICcuLi9ieXRlcy5qcyc7XG5leHBvcnQgY29uc3QgbmFtZSA9ICdyYXcnO1xuZXhwb3J0IGNvbnN0IGNvZGUgPSAweDU1O1xuZXhwb3J0IGZ1bmN0aW9uIGVuY29kZShub2RlKSB7XG4gICAgcmV0dXJuIGNvZXJjZShub2RlKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBkZWNvZGUoZGF0YSkge1xuICAgIHJldHVybiBjb2VyY2UoZGF0YSk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1yYXcuanMubWFwIl0sIm5hbWVzIjpbImNvZXJjZSIsIm5hbWUiLCJjb2RlIiwiZW5jb2RlIiwibm9kZSIsImRlY29kZSIsImRhdGEiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/multiformats/dist/src/codecs/raw.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/multiformats/dist/src/hashes/digest.js":
/*!*************************************************************!*\
  !*** ./node_modules/multiformats/dist/src/hashes/digest.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Digest: () => (/* binding */ Digest),\n/* harmony export */   create: () => (/* binding */ create),\n/* harmony export */   decode: () => (/* binding */ decode),\n/* harmony export */   equals: () => (/* binding */ equals)\n/* harmony export */ });\n/* harmony import */ var _bytes_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../bytes.js */ \"(ssr)/./node_modules/multiformats/dist/src/bytes.js\");\n/* harmony import */ var _varint_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../varint.js */ \"(ssr)/./node_modules/multiformats/dist/src/varint.js\");\n\n\n/**\n * Creates a multihash digest.\n */ function create(code, digest) {\n    const size = digest.byteLength;\n    const sizeOffset = _varint_js__WEBPACK_IMPORTED_MODULE_1__.encodingLength(code);\n    const digestOffset = sizeOffset + _varint_js__WEBPACK_IMPORTED_MODULE_1__.encodingLength(size);\n    const bytes = new Uint8Array(digestOffset + size);\n    _varint_js__WEBPACK_IMPORTED_MODULE_1__.encodeTo(code, bytes, 0);\n    _varint_js__WEBPACK_IMPORTED_MODULE_1__.encodeTo(size, bytes, sizeOffset);\n    bytes.set(digest, digestOffset);\n    return new Digest(code, size, digest, bytes);\n}\n/**\n * Turns bytes representation of multihash digest into an instance.\n */ function decode(multihash) {\n    const bytes = (0,_bytes_js__WEBPACK_IMPORTED_MODULE_0__.coerce)(multihash);\n    const [code, sizeOffset] = _varint_js__WEBPACK_IMPORTED_MODULE_1__.decode(bytes);\n    const [size, digestOffset] = _varint_js__WEBPACK_IMPORTED_MODULE_1__.decode(bytes.subarray(sizeOffset));\n    const digest = bytes.subarray(sizeOffset + digestOffset);\n    if (digest.byteLength !== size) {\n        throw new Error(\"Incorrect length\");\n    }\n    return new Digest(code, size, digest, bytes);\n}\nfunction equals(a, b) {\n    if (a === b) {\n        return true;\n    } else {\n        const data = b;\n        return a.code === data.code && a.size === data.size && data.bytes instanceof Uint8Array && (0,_bytes_js__WEBPACK_IMPORTED_MODULE_0__.equals)(a.bytes, data.bytes);\n    }\n}\n/**\n * Represents a multihash digest which carries information about the\n * hashing algorithm and an actual hash digest.\n */ class Digest {\n    /**\n     * Creates a multihash digest.\n     */ constructor(code, size, digest, bytes){\n        this.code = code;\n        this.size = size;\n        this.digest = digest;\n        this.bytes = bytes;\n    }\n} //# sourceMappingURL=digest.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL2Rpc3Qvc3JjL2hhc2hlcy9kaWdlc3QuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQTJEO0FBQ3BCO0FBQ3ZDOztDQUVDLEdBQ00sU0FBU0ksT0FBT0MsSUFBSSxFQUFFQyxNQUFNO0lBQy9CLE1BQU1DLE9BQU9ELE9BQU9FLFVBQVU7SUFDOUIsTUFBTUMsYUFBYU4sc0RBQXFCLENBQUNFO0lBQ3pDLE1BQU1NLGVBQWVGLGFBQWFOLHNEQUFxQixDQUFDSTtJQUN4RCxNQUFNSyxRQUFRLElBQUlDLFdBQVdGLGVBQWVKO0lBQzVDSixnREFBZSxDQUFDRSxNQUFNTyxPQUFPO0lBQzdCVCxnREFBZSxDQUFDSSxNQUFNSyxPQUFPSDtJQUM3QkcsTUFBTUcsR0FBRyxDQUFDVCxRQUFRSztJQUNsQixPQUFPLElBQUlLLE9BQU9YLE1BQU1FLE1BQU1ELFFBQVFNO0FBQzFDO0FBQ0E7O0NBRUMsR0FDTSxTQUFTSyxPQUFPQyxTQUFTO0lBQzVCLE1BQU1OLFFBQVFaLGlEQUFNQSxDQUFDa0I7SUFDckIsTUFBTSxDQUFDYixNQUFNSSxXQUFXLEdBQUdOLDhDQUFhLENBQUNTO0lBQ3pDLE1BQU0sQ0FBQ0wsTUFBTUksYUFBYSxHQUFHUiw4Q0FBYSxDQUFDUyxNQUFNTyxRQUFRLENBQUNWO0lBQzFELE1BQU1ILFNBQVNNLE1BQU1PLFFBQVEsQ0FBQ1YsYUFBYUU7SUFDM0MsSUFBSUwsT0FBT0UsVUFBVSxLQUFLRCxNQUFNO1FBQzVCLE1BQU0sSUFBSWEsTUFBTTtJQUNwQjtJQUNBLE9BQU8sSUFBSUosT0FBT1gsTUFBTUUsTUFBTUQsUUFBUU07QUFDMUM7QUFDTyxTQUFTWCxPQUFPb0IsQ0FBQyxFQUFFQyxDQUFDO0lBQ3ZCLElBQUlELE1BQU1DLEdBQUc7UUFDVCxPQUFPO0lBQ1gsT0FDSztRQUNELE1BQU1DLE9BQU9EO1FBQ2IsT0FBUUQsRUFBRWhCLElBQUksS0FBS2tCLEtBQUtsQixJQUFJLElBQ3hCZ0IsRUFBRWQsSUFBSSxLQUFLZ0IsS0FBS2hCLElBQUksSUFDcEJnQixLQUFLWCxLQUFLLFlBQVlDLGNBQ3RCWCxpREFBVUEsQ0FBQ21CLEVBQUVULEtBQUssRUFBRVcsS0FBS1gsS0FBSztJQUN0QztBQUNKO0FBQ0E7OztDQUdDLEdBQ00sTUFBTUk7SUFLVDs7S0FFQyxHQUNEUSxZQUFZbkIsSUFBSSxFQUFFRSxJQUFJLEVBQUVELE1BQU0sRUFBRU0sS0FBSyxDQUFFO1FBQ25DLElBQUksQ0FBQ1AsSUFBSSxHQUFHQTtRQUNaLElBQUksQ0FBQ0UsSUFBSSxHQUFHQTtRQUNaLElBQUksQ0FBQ0QsTUFBTSxHQUFHQTtRQUNkLElBQUksQ0FBQ00sS0FBSyxHQUFHQTtJQUNqQjtBQUNKLEVBQ0Esa0NBQWtDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZmx1c2gtbm90ZXMvLi9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL2Rpc3Qvc3JjL2hhc2hlcy9kaWdlc3QuanM/ZDJmYSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjb2VyY2UsIGVxdWFscyBhcyBlcXVhbEJ5dGVzIH0gZnJvbSAnLi4vYnl0ZXMuanMnO1xuaW1wb3J0ICogYXMgdmFyaW50IGZyb20gJy4uL3ZhcmludC5qcyc7XG4vKipcbiAqIENyZWF0ZXMgYSBtdWx0aWhhc2ggZGlnZXN0LlxuICovXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlKGNvZGUsIGRpZ2VzdCkge1xuICAgIGNvbnN0IHNpemUgPSBkaWdlc3QuYnl0ZUxlbmd0aDtcbiAgICBjb25zdCBzaXplT2Zmc2V0ID0gdmFyaW50LmVuY29kaW5nTGVuZ3RoKGNvZGUpO1xuICAgIGNvbnN0IGRpZ2VzdE9mZnNldCA9IHNpemVPZmZzZXQgKyB2YXJpbnQuZW5jb2RpbmdMZW5ndGgoc2l6ZSk7XG4gICAgY29uc3QgYnl0ZXMgPSBuZXcgVWludDhBcnJheShkaWdlc3RPZmZzZXQgKyBzaXplKTtcbiAgICB2YXJpbnQuZW5jb2RlVG8oY29kZSwgYnl0ZXMsIDApO1xuICAgIHZhcmludC5lbmNvZGVUbyhzaXplLCBieXRlcywgc2l6ZU9mZnNldCk7XG4gICAgYnl0ZXMuc2V0KGRpZ2VzdCwgZGlnZXN0T2Zmc2V0KTtcbiAgICByZXR1cm4gbmV3IERpZ2VzdChjb2RlLCBzaXplLCBkaWdlc3QsIGJ5dGVzKTtcbn1cbi8qKlxuICogVHVybnMgYnl0ZXMgcmVwcmVzZW50YXRpb24gb2YgbXVsdGloYXNoIGRpZ2VzdCBpbnRvIGFuIGluc3RhbmNlLlxuICovXG5leHBvcnQgZnVuY3Rpb24gZGVjb2RlKG11bHRpaGFzaCkge1xuICAgIGNvbnN0IGJ5dGVzID0gY29lcmNlKG11bHRpaGFzaCk7XG4gICAgY29uc3QgW2NvZGUsIHNpemVPZmZzZXRdID0gdmFyaW50LmRlY29kZShieXRlcyk7XG4gICAgY29uc3QgW3NpemUsIGRpZ2VzdE9mZnNldF0gPSB2YXJpbnQuZGVjb2RlKGJ5dGVzLnN1YmFycmF5KHNpemVPZmZzZXQpKTtcbiAgICBjb25zdCBkaWdlc3QgPSBieXRlcy5zdWJhcnJheShzaXplT2Zmc2V0ICsgZGlnZXN0T2Zmc2V0KTtcbiAgICBpZiAoZGlnZXN0LmJ5dGVMZW5ndGggIT09IHNpemUpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdJbmNvcnJlY3QgbGVuZ3RoJyk7XG4gICAgfVxuICAgIHJldHVybiBuZXcgRGlnZXN0KGNvZGUsIHNpemUsIGRpZ2VzdCwgYnl0ZXMpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGVxdWFscyhhLCBiKSB7XG4gICAgaWYgKGEgPT09IGIpIHtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICBjb25zdCBkYXRhID0gYjtcbiAgICAgICAgcmV0dXJuIChhLmNvZGUgPT09IGRhdGEuY29kZSAmJlxuICAgICAgICAgICAgYS5zaXplID09PSBkYXRhLnNpemUgJiZcbiAgICAgICAgICAgIGRhdGEuYnl0ZXMgaW5zdGFuY2VvZiBVaW50OEFycmF5ICYmXG4gICAgICAgICAgICBlcXVhbEJ5dGVzKGEuYnl0ZXMsIGRhdGEuYnl0ZXMpKTtcbiAgICB9XG59XG4vKipcbiAqIFJlcHJlc2VudHMgYSBtdWx0aWhhc2ggZGlnZXN0IHdoaWNoIGNhcnJpZXMgaW5mb3JtYXRpb24gYWJvdXQgdGhlXG4gKiBoYXNoaW5nIGFsZ29yaXRobSBhbmQgYW4gYWN0dWFsIGhhc2ggZGlnZXN0LlxuICovXG5leHBvcnQgY2xhc3MgRGlnZXN0IHtcbiAgICBjb2RlO1xuICAgIHNpemU7XG4gICAgZGlnZXN0O1xuICAgIGJ5dGVzO1xuICAgIC8qKlxuICAgICAqIENyZWF0ZXMgYSBtdWx0aWhhc2ggZGlnZXN0LlxuICAgICAqL1xuICAgIGNvbnN0cnVjdG9yKGNvZGUsIHNpemUsIGRpZ2VzdCwgYnl0ZXMpIHtcbiAgICAgICAgdGhpcy5jb2RlID0gY29kZTtcbiAgICAgICAgdGhpcy5zaXplID0gc2l6ZTtcbiAgICAgICAgdGhpcy5kaWdlc3QgPSBkaWdlc3Q7XG4gICAgICAgIHRoaXMuYnl0ZXMgPSBieXRlcztcbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1kaWdlc3QuanMubWFwIl0sIm5hbWVzIjpbImNvZXJjZSIsImVxdWFscyIsImVxdWFsQnl0ZXMiLCJ2YXJpbnQiLCJjcmVhdGUiLCJjb2RlIiwiZGlnZXN0Iiwic2l6ZSIsImJ5dGVMZW5ndGgiLCJzaXplT2Zmc2V0IiwiZW5jb2RpbmdMZW5ndGgiLCJkaWdlc3RPZmZzZXQiLCJieXRlcyIsIlVpbnQ4QXJyYXkiLCJlbmNvZGVUbyIsInNldCIsIkRpZ2VzdCIsImRlY29kZSIsIm11bHRpaGFzaCIsInN1YmFycmF5IiwiRXJyb3IiLCJhIiwiYiIsImRhdGEiLCJjb25zdHJ1Y3RvciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/multiformats/dist/src/hashes/digest.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/multiformats/dist/src/hashes/hasher.js":
/*!*************************************************************!*\
  !*** ./node_modules/multiformats/dist/src/hashes/hasher.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Hasher: () => (/* binding */ Hasher),\n/* harmony export */   from: () => (/* binding */ from)\n/* harmony export */ });\n/* harmony import */ var _digest_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./digest.js */ \"(ssr)/./node_modules/multiformats/dist/src/hashes/digest.js\");\n\nfunction from({ name, code, encode }) {\n    return new Hasher(name, code, encode);\n}\n/**\n * Hasher represents a hashing algorithm implementation that produces as\n * `MultihashDigest`.\n */ class Hasher {\n    constructor(name, code, encode){\n        this.name = name;\n        this.code = code;\n        this.encode = encode;\n    }\n    digest(input) {\n        if (input instanceof Uint8Array) {\n            const result = this.encode(input);\n            return result instanceof Uint8Array ? _digest_js__WEBPACK_IMPORTED_MODULE_0__.create(this.code, result) : result.then((digest)=>_digest_js__WEBPACK_IMPORTED_MODULE_0__.create(this.code, digest));\n        } else {\n            throw Error(\"Unknown type, must be binary type\");\n        /* c8 ignore next 1 */ }\n    }\n} //# sourceMappingURL=hasher.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL2Rpc3Qvc3JjL2hhc2hlcy9oYXNoZXIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQXNDO0FBQy9CLFNBQVNDLEtBQUssRUFBRUMsSUFBSSxFQUFFQyxJQUFJLEVBQUVDLE1BQU0sRUFBRTtJQUN2QyxPQUFPLElBQUlDLE9BQU9ILE1BQU1DLE1BQU1DO0FBQ2xDO0FBQ0E7OztDQUdDLEdBQ00sTUFBTUM7SUFJVEMsWUFBWUosSUFBSSxFQUFFQyxJQUFJLEVBQUVDLE1BQU0sQ0FBRTtRQUM1QixJQUFJLENBQUNGLElBQUksR0FBR0E7UUFDWixJQUFJLENBQUNDLElBQUksR0FBR0E7UUFDWixJQUFJLENBQUNDLE1BQU0sR0FBR0E7SUFDbEI7SUFDQUcsT0FBT0MsS0FBSyxFQUFFO1FBQ1YsSUFBSUEsaUJBQWlCQyxZQUFZO1lBQzdCLE1BQU1DLFNBQVMsSUFBSSxDQUFDTixNQUFNLENBQUNJO1lBQzNCLE9BQU9FLGtCQUFrQkQsYUFDbkJULDhDQUFhLENBQUMsSUFBSSxDQUFDRyxJQUFJLEVBQUVPLFVBRXpCQSxPQUFPRSxJQUFJLENBQUNMLENBQUFBLFNBQVVQLDhDQUFhLENBQUMsSUFBSSxDQUFDRyxJQUFJLEVBQUVJO1FBQ3pELE9BQ0s7WUFDRCxNQUFNTSxNQUFNO1FBQ1osb0JBQW9CLEdBQ3hCO0lBQ0o7QUFDSixFQUNBLGtDQUFrQyIsInNvdXJjZXMiOlsid2VicGFjazovL2ZsdXNoLW5vdGVzLy4vbm9kZV9tb2R1bGVzL211bHRpZm9ybWF0cy9kaXN0L3NyYy9oYXNoZXMvaGFzaGVyLmpzPzU4NmUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgRGlnZXN0IGZyb20gJy4vZGlnZXN0LmpzJztcbmV4cG9ydCBmdW5jdGlvbiBmcm9tKHsgbmFtZSwgY29kZSwgZW5jb2RlIH0pIHtcbiAgICByZXR1cm4gbmV3IEhhc2hlcihuYW1lLCBjb2RlLCBlbmNvZGUpO1xufVxuLyoqXG4gKiBIYXNoZXIgcmVwcmVzZW50cyBhIGhhc2hpbmcgYWxnb3JpdGhtIGltcGxlbWVudGF0aW9uIHRoYXQgcHJvZHVjZXMgYXNcbiAqIGBNdWx0aWhhc2hEaWdlc3RgLlxuICovXG5leHBvcnQgY2xhc3MgSGFzaGVyIHtcbiAgICBuYW1lO1xuICAgIGNvZGU7XG4gICAgZW5jb2RlO1xuICAgIGNvbnN0cnVjdG9yKG5hbWUsIGNvZGUsIGVuY29kZSkge1xuICAgICAgICB0aGlzLm5hbWUgPSBuYW1lO1xuICAgICAgICB0aGlzLmNvZGUgPSBjb2RlO1xuICAgICAgICB0aGlzLmVuY29kZSA9IGVuY29kZTtcbiAgICB9XG4gICAgZGlnZXN0KGlucHV0KSB7XG4gICAgICAgIGlmIChpbnB1dCBpbnN0YW5jZW9mIFVpbnQ4QXJyYXkpIHtcbiAgICAgICAgICAgIGNvbnN0IHJlc3VsdCA9IHRoaXMuZW5jb2RlKGlucHV0KTtcbiAgICAgICAgICAgIHJldHVybiByZXN1bHQgaW5zdGFuY2VvZiBVaW50OEFycmF5XG4gICAgICAgICAgICAgICAgPyBEaWdlc3QuY3JlYXRlKHRoaXMuY29kZSwgcmVzdWx0KVxuICAgICAgICAgICAgICAgIC8qIGM4IGlnbm9yZSBuZXh0IDEgKi9cbiAgICAgICAgICAgICAgICA6IHJlc3VsdC50aGVuKGRpZ2VzdCA9PiBEaWdlc3QuY3JlYXRlKHRoaXMuY29kZSwgZGlnZXN0KSk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICB0aHJvdyBFcnJvcignVW5rbm93biB0eXBlLCBtdXN0IGJlIGJpbmFyeSB0eXBlJyk7XG4gICAgICAgICAgICAvKiBjOCBpZ25vcmUgbmV4dCAxICovXG4gICAgICAgIH1cbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1oYXNoZXIuanMubWFwIl0sIm5hbWVzIjpbIkRpZ2VzdCIsImZyb20iLCJuYW1lIiwiY29kZSIsImVuY29kZSIsIkhhc2hlciIsImNvbnN0cnVjdG9yIiwiZGlnZXN0IiwiaW5wdXQiLCJVaW50OEFycmF5IiwicmVzdWx0IiwiY3JlYXRlIiwidGhlbiIsIkVycm9yIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/multiformats/dist/src/hashes/hasher.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/multiformats/dist/src/hashes/identity.js":
/*!***************************************************************!*\
  !*** ./node_modules/multiformats/dist/src/hashes/identity.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   identity: () => (/* binding */ identity)\n/* harmony export */ });\n/* harmony import */ var _bytes_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../bytes.js */ \"(ssr)/./node_modules/multiformats/dist/src/bytes.js\");\n/* harmony import */ var _digest_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./digest.js */ \"(ssr)/./node_modules/multiformats/dist/src/hashes/digest.js\");\n\n\nconst code = 0x0;\nconst name = \"identity\";\nconst encode = _bytes_js__WEBPACK_IMPORTED_MODULE_0__.coerce;\nfunction digest(input) {\n    return _digest_js__WEBPACK_IMPORTED_MODULE_1__.create(code, encode(input));\n}\nconst identity = {\n    code,\n    name,\n    encode,\n    digest\n}; //# sourceMappingURL=identity.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL2Rpc3Qvc3JjL2hhc2hlcy9pZGVudGl0eS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBcUM7QUFDQztBQUN0QyxNQUFNRSxPQUFPO0FBQ2IsTUFBTUMsT0FBTztBQUNiLE1BQU1DLFNBQVNKLDZDQUFNQTtBQUNyQixTQUFTSyxPQUFPQyxLQUFLO0lBQ2pCLE9BQU9MLDhDQUFhLENBQUNDLE1BQU1FLE9BQU9FO0FBQ3RDO0FBQ08sTUFBTUUsV0FBVztJQUFFTjtJQUFNQztJQUFNQztJQUFRQztBQUFPLEVBQUUsQ0FDdkQsb0NBQW9DIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZmx1c2gtbm90ZXMvLi9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL2Rpc3Qvc3JjL2hhc2hlcy9pZGVudGl0eS5qcz9iNDBkIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNvZXJjZSB9IGZyb20gJy4uL2J5dGVzLmpzJztcbmltcG9ydCAqIGFzIERpZ2VzdCBmcm9tICcuL2RpZ2VzdC5qcyc7XG5jb25zdCBjb2RlID0gMHgwO1xuY29uc3QgbmFtZSA9ICdpZGVudGl0eSc7XG5jb25zdCBlbmNvZGUgPSBjb2VyY2U7XG5mdW5jdGlvbiBkaWdlc3QoaW5wdXQpIHtcbiAgICByZXR1cm4gRGlnZXN0LmNyZWF0ZShjb2RlLCBlbmNvZGUoaW5wdXQpKTtcbn1cbmV4cG9ydCBjb25zdCBpZGVudGl0eSA9IHsgY29kZSwgbmFtZSwgZW5jb2RlLCBkaWdlc3QgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWlkZW50aXR5LmpzLm1hcCJdLCJuYW1lcyI6WyJjb2VyY2UiLCJEaWdlc3QiLCJjb2RlIiwibmFtZSIsImVuY29kZSIsImRpZ2VzdCIsImlucHV0IiwiY3JlYXRlIiwiaWRlbnRpdHkiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/multiformats/dist/src/hashes/identity.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/multiformats/dist/src/hashes/interface.js":
/*!****************************************************************!*\
  !*** ./node_modules/multiformats/dist/src/hashes/interface.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n// # Multihash\n //# sourceMappingURL=interface.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL2Rpc3Qvc3JjL2hhc2hlcy9pbnRlcmZhY2UuanMiLCJtYXBwaW5ncyI6IjtBQUFBLGNBQWM7QUFDSixDQUNWLHFDQUFxQyIsInNvdXJjZXMiOlsid2VicGFjazovL2ZsdXNoLW5vdGVzLy4vbm9kZV9tb2R1bGVzL211bHRpZm9ybWF0cy9kaXN0L3NyYy9oYXNoZXMvaW50ZXJmYWNlLmpzPzU5NjkiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gIyBNdWx0aWhhc2hcbmV4cG9ydCB7fTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWludGVyZmFjZS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/multiformats/dist/src/hashes/interface.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/multiformats/dist/src/hashes/sha2.js":
/*!***********************************************************!*\
  !*** ./node_modules/multiformats/dist/src/hashes/sha2.js ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   sha256: () => (/* binding */ sha256),\n/* harmony export */   sha512: () => (/* binding */ sha512)\n/* harmony export */ });\n/* harmony import */ var crypto__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! crypto */ \"crypto\");\n/* harmony import */ var _bytes_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../bytes.js */ \"(ssr)/./node_modules/multiformats/dist/src/bytes.js\");\n/* harmony import */ var _hasher_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./hasher.js */ \"(ssr)/./node_modules/multiformats/dist/src/hashes/hasher.js\");\n\n\n\nconst sha256 = (0,_hasher_js__WEBPACK_IMPORTED_MODULE_2__.from)({\n    name: \"sha2-256\",\n    code: 0x12,\n    encode: (input)=>(0,_bytes_js__WEBPACK_IMPORTED_MODULE_1__.coerce)(crypto__WEBPACK_IMPORTED_MODULE_0__.createHash(\"sha256\").update(input).digest())\n});\nconst sha512 = (0,_hasher_js__WEBPACK_IMPORTED_MODULE_2__.from)({\n    name: \"sha2-512\",\n    code: 0x13,\n    encode: (input)=>(0,_bytes_js__WEBPACK_IMPORTED_MODULE_1__.coerce)(crypto__WEBPACK_IMPORTED_MODULE_0__.createHash(\"sha512\").update(input).digest())\n}); //# sourceMappingURL=sha2.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL2Rpc3Qvc3JjL2hhc2hlcy9zaGEyLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQTRCO0FBQ1M7QUFDRjtBQUM1QixNQUFNRyxTQUFTRCxnREFBSUEsQ0FBQztJQUN2QkUsTUFBTTtJQUNOQyxNQUFNO0lBQ05DLFFBQVEsQ0FBQ0MsUUFBVU4saURBQU1BLENBQUNELDhDQUFpQixDQUFDLFVBQVVTLE1BQU0sQ0FBQ0YsT0FBT0csTUFBTTtBQUM5RSxHQUFHO0FBQ0ksTUFBTUMsU0FBU1QsZ0RBQUlBLENBQUM7SUFDdkJFLE1BQU07SUFDTkMsTUFBTTtJQUNOQyxRQUFRQyxDQUFBQSxRQUFTTixpREFBTUEsQ0FBQ0QsOENBQWlCLENBQUMsVUFBVVMsTUFBTSxDQUFDRixPQUFPRyxNQUFNO0FBQzVFLEdBQUcsQ0FDSCxnQ0FBZ0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mbHVzaC1ub3Rlcy8uL25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvZGlzdC9zcmMvaGFzaGVzL3NoYTIuanM/MGRiMSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgY3J5cHRvIGZyb20gJ2NyeXB0byc7XG5pbXBvcnQgeyBjb2VyY2UgfSBmcm9tICcuLi9ieXRlcy5qcyc7XG5pbXBvcnQgeyBmcm9tIH0gZnJvbSAnLi9oYXNoZXIuanMnO1xuZXhwb3J0IGNvbnN0IHNoYTI1NiA9IGZyb20oe1xuICAgIG5hbWU6ICdzaGEyLTI1NicsXG4gICAgY29kZTogMHgxMixcbiAgICBlbmNvZGU6IChpbnB1dCkgPT4gY29lcmNlKGNyeXB0by5jcmVhdGVIYXNoKCdzaGEyNTYnKS51cGRhdGUoaW5wdXQpLmRpZ2VzdCgpKVxufSk7XG5leHBvcnQgY29uc3Qgc2hhNTEyID0gZnJvbSh7XG4gICAgbmFtZTogJ3NoYTItNTEyJyxcbiAgICBjb2RlOiAweDEzLFxuICAgIGVuY29kZTogaW5wdXQgPT4gY29lcmNlKGNyeXB0by5jcmVhdGVIYXNoKCdzaGE1MTInKS51cGRhdGUoaW5wdXQpLmRpZ2VzdCgpKVxufSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1zaGEyLmpzLm1hcCJdLCJuYW1lcyI6WyJjcnlwdG8iLCJjb2VyY2UiLCJmcm9tIiwic2hhMjU2IiwibmFtZSIsImNvZGUiLCJlbmNvZGUiLCJpbnB1dCIsImNyZWF0ZUhhc2giLCJ1cGRhdGUiLCJkaWdlc3QiLCJzaGE1MTIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/multiformats/dist/src/hashes/sha2.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/multiformats/dist/src/index.js":
/*!*****************************************************!*\
  !*** ./node_modules/multiformats/dist/src/index.js ***!
  \*****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CID: () => (/* reexport safe */ _cid_js__WEBPACK_IMPORTED_MODULE_1__.CID),\n/* harmony export */   bytes: () => (/* reexport module object */ _bytes_js__WEBPACK_IMPORTED_MODULE_0__),\n/* harmony export */   digest: () => (/* reexport module object */ _hashes_digest_js__WEBPACK_IMPORTED_MODULE_2__),\n/* harmony export */   hasher: () => (/* reexport module object */ _hashes_hasher_js__WEBPACK_IMPORTED_MODULE_3__),\n/* harmony export */   varint: () => (/* reexport module object */ _varint_js__WEBPACK_IMPORTED_MODULE_4__)\n/* harmony export */ });\n/* harmony import */ var _bytes_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./bytes.js */ \"(ssr)/./node_modules/multiformats/dist/src/bytes.js\");\n/* harmony import */ var _cid_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./cid.js */ \"(ssr)/./node_modules/multiformats/dist/src/cid.js\");\n/* harmony import */ var _hashes_digest_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./hashes/digest.js */ \"(ssr)/./node_modules/multiformats/dist/src/hashes/digest.js\");\n/* harmony import */ var _hashes_hasher_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./hashes/hasher.js */ \"(ssr)/./node_modules/multiformats/dist/src/hashes/hasher.js\");\n/* harmony import */ var _varint_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./varint.js */ \"(ssr)/./node_modules/multiformats/dist/src/varint.js\");\n/* harmony import */ var _interface_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./interface.js */ \"(ssr)/./node_modules/multiformats/dist/src/interface.js\");\n/**\n * @packageDocumentation\n *\n * This library defines common interfaces and low level building blocks for various interrelated multiformat technologies (multicodec, multihash, multibase, and CID). They can be used to implement custom base encoders / decoders / codecs, codec encoders /decoders and multihash hashers that comply to the interface that layers above assume.\n *\n * This library provides implementations for most basics and many others can be found in linked repositories.\n *\n * ```TypeScript\n * import { CID } from 'multiformats/cid'\n * import * as json from 'multiformats/codecs/json'\n * import { sha256 } from 'multiformats/hashes/sha2'\n *\n * const bytes = json.encode({ hello: 'world' })\n *\n * const hash = await sha256.digest(bytes)\n * const cid = CID.create(1, json.code, hash)\n * //> CID(bagaaierasords4njcts6vs7qvdjfcvgnume4hqohf65zsfguprqphs3icwea)\n * ```\n *\n * ## Creating Blocks\n *\n * ```TypeScript\n * import * as Block from 'multiformats/block'\n * import * as codec from '@ipld/dag-cbor'\n * import { sha256 as hasher } from 'multiformats/hashes/sha2'\n *\n * const value = { hello: 'world' }\n *\n * // encode a block\n * let block = await Block.encode({ value, codec, hasher })\n *\n * block.value // { hello: 'world' }\n * block.bytes // Uint8Array\n * block.cid   // CID() w/ sha2-256 hash address and dag-cbor codec\n *\n * // you can also decode blocks from their binary state\n * block = await Block.decode({ bytes: block.bytes, codec, hasher })\n *\n * // if you have the cid you can also verify the hash on decode\n * block = await Block.create({ bytes: block.bytes, cid: block.cid, codec, hasher })\n * ```\n *\n * ## Multibase Encoders / Decoders / Codecs\n *\n * CIDs can be serialized to string representation using multibase encoders that implement [`MultibaseEncoder`](https://github.com/multiformats/js-multiformats/blob/master/src/bases/interface.ts) interface. This library provides quite a few implementations that can be imported:\n *\n * ```TypeScript\n * import { base64 } from \"multiformats/bases/base64\"\n * cid.toString(base64.encoder)\n * //> 'mAYAEEiCTojlxqRTl6svwqNJRVM2jCcPBxy+7mRTUfGDzy2gViA'\n * ```\n *\n * Parsing CID string serialized CIDs requires multibase decoder that implements [`MultibaseDecoder`](https://github.com/multiformats/js-multiformats/blob/master/src/bases/interface.ts) interface. This library provides a decoder for every encoder it provides:\n *\n * ```TypeScript\n * CID.parse('mAYAEEiCTojlxqRTl6svwqNJRVM2jCcPBxy+7mRTUfGDzy2gViA', base64.decoder)\n * //> CID(bagaaierasords4njcts6vs7qvdjfcvgnume4hqohf65zsfguprqphs3icwea)\n * ```\n *\n * Dual of multibase encoder & decoder is defined as multibase codec and it exposes\n * them as `encoder` and `decoder` properties. For added convenience codecs also\n * implement `MultibaseEncoder` and `MultibaseDecoder` interfaces so they could be\n * used as either or both:\n *\n * ```TypeScript\n * cid.toString(base64)\n * CID.parse(cid.toString(base64), base64)\n * ```\n *\n * **Note:** CID implementation comes bundled with `base32` and `base58btc`\n * multibase codecs so that CIDs can be base serialized to (version specific)\n * default base encoding and parsed without having to supply base encoders/decoders:\n *\n * ```TypeScript\n * const v1 = CID.parse('bagaaierasords4njcts6vs7qvdjfcvgnume4hqohf65zsfguprqphs3icwea')\n * v1.toString()\n * //> 'bagaaierasords4njcts6vs7qvdjfcvgnume4hqohf65zsfguprqphs3icwea'\n *\n * const v0 = CID.parse('QmdfTbBqBPQ7VNxZEYEj14VmRuZBkqFbiwReogJgS1zR1n')\n * v0.toString()\n * //> 'QmdfTbBqBPQ7VNxZEYEj14VmRuZBkqFbiwReogJgS1zR1n'\n * v0.toV1().toString()\n * //> 'bafybeihdwdcefgh4dqkjv67uzcmw7ojee6xedzdetojuzjevtenxquvyku'\n * ```\n *\n * ## Multicodec Encoders / Decoders / Codecs\n *\n * This library defines [`BlockEncoder`, `BlockDecoder` and `BlockCodec` interfaces](https://github.com/multiformats/js-multiformats/blob/master/src/codecs/interface.ts).\n * Codec implementations should conform to the `BlockCodec` interface which implements both `BlockEncoder` and `BlockDecoder`.\n * Here is an example implementation of JSON `BlockCodec`.\n *\n * ```TypeScript\n * export const { name, code, encode, decode } = {\n *   name: 'json',\n *   code: 0x0200,\n *   encode: json => new TextEncoder().encode(JSON.stringify(json)),\n *   decode: bytes => JSON.parse(new TextDecoder().decode(bytes))\n * }\n * ```\n *\n * ## Multihash Hashers\n *\n * This library defines [`MultihashHasher` and `MultihashDigest` interfaces](https://github.com/multiformats/js-multiformats/blob/master/src/hashes/interface.ts) and convinient function for implementing them:\n *\n * ```TypeScript\n * import * as hasher from 'multiformats/hashes/hasher'\n *\n * const sha256 = hasher.from({\n *   // As per multiformats table\n *   // https://github.com/multiformats/multicodec/blob/master/table.csv#L9\n *   name: 'sha2-256',\n *   code: 0x12,\n *\n *   encode: (input) => new Uint8Array(crypto.createHash('sha256').update(input).digest())\n * })\n *\n * const hash = await sha256.digest(json.encode({ hello: 'world' }))\n * CID.create(1, json.code, hash)\n *\n * //> CID(bagaaierasords4njcts6vs7qvdjfcvgnume4hqohf65zsfguprqphs3icwea)\n * ```\n *\n * ## Traversal\n *\n * This library contains higher-order functions for traversing graphs of data easily.\n *\n * `walk()` walks through the links in each block of a DAG calling a user-supplied loader function for each one, in depth-first order with no duplicate block visits. The loader should return a `Block` object and can be used to inspect and collect block ordering for a full DAG walk. The loader should `throw` on error, and return `null` if a block should be skipped by `walk()`.\n *\n * ```TypeScript\n * import { walk } from 'multiformats/traversal'\n * import * as Block from 'multiformats/block'\n * import * as codec from 'multiformats/codecs/json'\n * import { sha256 as hasher } from 'multiformats/hashes/sha2'\n *\n * // build a DAG (a single block for this simple example)\n * const value = { hello: 'world' }\n * const block = await Block.encode({ value, codec, hasher })\n * const { cid } = block\n * console.log(cid)\n * //> CID(bagaaierasords4njcts6vs7qvdjfcvgnume4hqohf65zsfguprqphs3icwea)\n *\n * // create a loader function that also collects CIDs of blocks in\n * // their traversal order\n * const load = (cid, blocks) => async (cid) => {\n *   // fetch a block using its cid\n *   // e.g.: const block = await fetchBlockByCID(cid)\n *   blocks.push(cid)\n *   return block\n * }\n *\n * // collect blocks in this DAG starting from the root `cid`\n * const blocks = []\n * await walk({ cid, load: load(cid, blocks) })\n *\n * console.log(blocks)\n * //> [CID(bagaaierasords4njcts6vs7qvdjfcvgnume4hqohf65zsfguprqphs3icwea)]\n * ```\n *\n * ## Legacy interface\n *\n * [`blockcodec-to-ipld-format`](https://github.com/ipld/js-blockcodec-to-ipld-format) converts a multiformats [`BlockCodec`](https://github.com/multiformats/js-multiformats/blob/master/src/codecs/interface.ts#L21) into an\n * [`interface-ipld-format`](https://github.com/ipld/interface-ipld-format) for use with the [`ipld`](https://github.com/ipld/ipld) package. This can help bridge IPLD codecs implemented using the structure and interfaces defined here to existing code that assumes, or requires `interface-ipld-format`. This bridge also includes the relevant TypeScript definitions.\n *\n * ## Implementations\n *\n * By default, no base encodings (other than base32 & base58btc), hash functions,\n * or codec implementations are exposed by `multiformats`, you need to\n * import the ones you need yourself.\n *\n * ### Multibase codecs\n *\n * | bases                                                         | import                      | repo                                                                                              |\n * | ------------------------------------------------------------- | --------------------------- | ------------------------------------------------------------------------------------------------- |\n * | `base16`                                                      | `multiformats/bases/base16` | [multiformats/js-multiformats](https://github.com/multiformats/js-multiformats/tree/master/bases) |\n * | `base32`, `base32pad`, `base32hex`, `base32hexpad`, `base32z` | `multiformats/bases/base32` | [multiformats/js-multiformats](https://github.com/multiformats/js-multiformats/tree/master/bases) |\n * | `base64`, `base64pad`, `base64url`, `base64urlpad`            | `multiformats/bases/base64` | [multiformats/js-multiformats](https://github.com/multiformats/js-multiformats/tree/master/bases) |\n * | `base58btc`, `base58flick4`                                   | `multiformats/bases/base58` | [multiformats/js-multiformats](https://github.com/multiformats/js-multiformats/tree/master/bases) |\n *\n * Other (less useful) bases implemented in [multiformats/js-multiformats](https://github.com/multiformats/js-multiformats/tree/master/bases) include: `base2`, `base8`, `base10`, `base36` and `base256emoji`.\n *\n * ### Multihash hashers\n *\n * | hashes                                                                                                                          | import                         | repo                                                                                                               |\n * | ------------------------------------------------------------------------------------------------------------------------------- | ------------------------------ | ------------------------------------------------------------------------------------------------------------------ |\n * | `sha2-256`, `sha2-512`                                                                                                          | `multiformats/hashes/sha2`     | [multiformats/js-multiformats](https://github.com/multiformats/js-multiformats/tree/master/src/hashes)             |\n * | `sha3-224`, `sha3-256`, `sha3-384`,`sha3-512`, `shake-128`, `shake-256`, `keccak-224`, `keccak-256`, `keccak-384`, `keccak-512` | `@multiformats/sha3`           | [multiformats/js-sha3](https://github.com/multiformats/js-sha3)                                                    |\n * | `identity`                                                                                                                      | `multiformats/hashes/identity` | [multiformats/js-multiformats](https://github.com/multiformats/js-multiformats/tree/master/src/hashes/identity.js) |\n * | `murmur3-128`, `murmur3-32`                                                                                                     | `@multiformats/murmur3`        | [multiformats/js-murmur3](https://github.com/multiformats/js-murmur3)                                              |\n * | `blake2b-*`, `blake2s-*`                                                                                                        | `@multiformats/blake2`         | [multiformats/js-blake2](https://github.com/multiformats/js-blake2)                                                |\n *\n * ### IPLD codecs (multicodec)\n *\n * | codec      | import                     | repo                                                                                                   |\n * | ---------- | -------------------------- | ------------------------------------------------------------------------------------------------------ |\n * | `raw`      | `multiformats/codecs/raw`  | [multiformats/js-multiformats](https://github.com/multiformats/js-multiformats/tree/master/src/codecs) |\n * | `json`     | `multiformats/codecs/json` | [multiformats/js-multiformats](https://github.com/multiformats/js-multiformats/tree/master/src/codecs) |\n * | `dag-cbor` | `@ipld/dag-cbor`           | [ipld/js-dag-cbor](https://github.com/ipld/js-dag-cbor)                                                |\n * | `dag-json` | `@ipld/dag-json`           | [ipld/js-dag-json](https://github.com/ipld/js-dag-json)                                                |\n * | `dag-pb`   | `@ipld/dag-pb`             | [ipld/js-dag-pb](https://github.com/ipld/js-dag-pb)                                                    |\n * | `dag-jose` | `dag-jose`                 | [ceramicnetwork/js-dag-jose](https://github.com/ceramicnetwork/js-dag-jose)                            |\n */ \n\n\n\n\n// This way TS will also expose all the types from module\n\n //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL2Rpc3Qvc3JjL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7O0FBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0NBd01DLEdBQ21DO0FBQ0w7QUFDYztBQUNBO0FBQ1A7QUFDdEMseURBQXlEO0FBQzFCO0FBQ2UsQ0FDOUMsaUNBQWlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZmx1c2gtbm90ZXMvLi9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL2Rpc3Qvc3JjL2luZGV4LmpzP2M4Y2MiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAcGFja2FnZURvY3VtZW50YXRpb25cbiAqXG4gKiBUaGlzIGxpYnJhcnkgZGVmaW5lcyBjb21tb24gaW50ZXJmYWNlcyBhbmQgbG93IGxldmVsIGJ1aWxkaW5nIGJsb2NrcyBmb3IgdmFyaW91cyBpbnRlcnJlbGF0ZWQgbXVsdGlmb3JtYXQgdGVjaG5vbG9naWVzIChtdWx0aWNvZGVjLCBtdWx0aWhhc2gsIG11bHRpYmFzZSwgYW5kIENJRCkuIFRoZXkgY2FuIGJlIHVzZWQgdG8gaW1wbGVtZW50IGN1c3RvbSBiYXNlIGVuY29kZXJzIC8gZGVjb2RlcnMgLyBjb2RlY3MsIGNvZGVjIGVuY29kZXJzIC9kZWNvZGVycyBhbmQgbXVsdGloYXNoIGhhc2hlcnMgdGhhdCBjb21wbHkgdG8gdGhlIGludGVyZmFjZSB0aGF0IGxheWVycyBhYm92ZSBhc3N1bWUuXG4gKlxuICogVGhpcyBsaWJyYXJ5IHByb3ZpZGVzIGltcGxlbWVudGF0aW9ucyBmb3IgbW9zdCBiYXNpY3MgYW5kIG1hbnkgb3RoZXJzIGNhbiBiZSBmb3VuZCBpbiBsaW5rZWQgcmVwb3NpdG9yaWVzLlxuICpcbiAqIGBgYFR5cGVTY3JpcHRcbiAqIGltcG9ydCB7IENJRCB9IGZyb20gJ211bHRpZm9ybWF0cy9jaWQnXG4gKiBpbXBvcnQgKiBhcyBqc29uIGZyb20gJ211bHRpZm9ybWF0cy9jb2RlY3MvanNvbidcbiAqIGltcG9ydCB7IHNoYTI1NiB9IGZyb20gJ211bHRpZm9ybWF0cy9oYXNoZXMvc2hhMidcbiAqXG4gKiBjb25zdCBieXRlcyA9IGpzb24uZW5jb2RlKHsgaGVsbG86ICd3b3JsZCcgfSlcbiAqXG4gKiBjb25zdCBoYXNoID0gYXdhaXQgc2hhMjU2LmRpZ2VzdChieXRlcylcbiAqIGNvbnN0IGNpZCA9IENJRC5jcmVhdGUoMSwganNvbi5jb2RlLCBoYXNoKVxuICogLy8+IENJRChiYWdhYWllcmFzb3JkczRuamN0czZ2czdxdmRqZmN2Z251bWU0aHFvaGY2NXpzZmd1cHJxcGhzM2ljd2VhKVxuICogYGBgXG4gKlxuICogIyMgQ3JlYXRpbmcgQmxvY2tzXG4gKlxuICogYGBgVHlwZVNjcmlwdFxuICogaW1wb3J0ICogYXMgQmxvY2sgZnJvbSAnbXVsdGlmb3JtYXRzL2Jsb2NrJ1xuICogaW1wb3J0ICogYXMgY29kZWMgZnJvbSAnQGlwbGQvZGFnLWNib3InXG4gKiBpbXBvcnQgeyBzaGEyNTYgYXMgaGFzaGVyIH0gZnJvbSAnbXVsdGlmb3JtYXRzL2hhc2hlcy9zaGEyJ1xuICpcbiAqIGNvbnN0IHZhbHVlID0geyBoZWxsbzogJ3dvcmxkJyB9XG4gKlxuICogLy8gZW5jb2RlIGEgYmxvY2tcbiAqIGxldCBibG9jayA9IGF3YWl0IEJsb2NrLmVuY29kZSh7IHZhbHVlLCBjb2RlYywgaGFzaGVyIH0pXG4gKlxuICogYmxvY2sudmFsdWUgLy8geyBoZWxsbzogJ3dvcmxkJyB9XG4gKiBibG9jay5ieXRlcyAvLyBVaW50OEFycmF5XG4gKiBibG9jay5jaWQgICAvLyBDSUQoKSB3LyBzaGEyLTI1NiBoYXNoIGFkZHJlc3MgYW5kIGRhZy1jYm9yIGNvZGVjXG4gKlxuICogLy8geW91IGNhbiBhbHNvIGRlY29kZSBibG9ja3MgZnJvbSB0aGVpciBiaW5hcnkgc3RhdGVcbiAqIGJsb2NrID0gYXdhaXQgQmxvY2suZGVjb2RlKHsgYnl0ZXM6IGJsb2NrLmJ5dGVzLCBjb2RlYywgaGFzaGVyIH0pXG4gKlxuICogLy8gaWYgeW91IGhhdmUgdGhlIGNpZCB5b3UgY2FuIGFsc28gdmVyaWZ5IHRoZSBoYXNoIG9uIGRlY29kZVxuICogYmxvY2sgPSBhd2FpdCBCbG9jay5jcmVhdGUoeyBieXRlczogYmxvY2suYnl0ZXMsIGNpZDogYmxvY2suY2lkLCBjb2RlYywgaGFzaGVyIH0pXG4gKiBgYGBcbiAqXG4gKiAjIyBNdWx0aWJhc2UgRW5jb2RlcnMgLyBEZWNvZGVycyAvIENvZGVjc1xuICpcbiAqIENJRHMgY2FuIGJlIHNlcmlhbGl6ZWQgdG8gc3RyaW5nIHJlcHJlc2VudGF0aW9uIHVzaW5nIG11bHRpYmFzZSBlbmNvZGVycyB0aGF0IGltcGxlbWVudCBbYE11bHRpYmFzZUVuY29kZXJgXShodHRwczovL2dpdGh1Yi5jb20vbXVsdGlmb3JtYXRzL2pzLW11bHRpZm9ybWF0cy9ibG9iL21hc3Rlci9zcmMvYmFzZXMvaW50ZXJmYWNlLnRzKSBpbnRlcmZhY2UuIFRoaXMgbGlicmFyeSBwcm92aWRlcyBxdWl0ZSBhIGZldyBpbXBsZW1lbnRhdGlvbnMgdGhhdCBjYW4gYmUgaW1wb3J0ZWQ6XG4gKlxuICogYGBgVHlwZVNjcmlwdFxuICogaW1wb3J0IHsgYmFzZTY0IH0gZnJvbSBcIm11bHRpZm9ybWF0cy9iYXNlcy9iYXNlNjRcIlxuICogY2lkLnRvU3RyaW5nKGJhc2U2NC5lbmNvZGVyKVxuICogLy8+ICdtQVlBRUVpQ1Rvamx4cVJUbDZzdndxTkpSVk0yakNjUEJ4eSs3bVJUVWZHRHp5MmdWaUEnXG4gKiBgYGBcbiAqXG4gKiBQYXJzaW5nIENJRCBzdHJpbmcgc2VyaWFsaXplZCBDSURzIHJlcXVpcmVzIG11bHRpYmFzZSBkZWNvZGVyIHRoYXQgaW1wbGVtZW50cyBbYE11bHRpYmFzZURlY29kZXJgXShodHRwczovL2dpdGh1Yi5jb20vbXVsdGlmb3JtYXRzL2pzLW11bHRpZm9ybWF0cy9ibG9iL21hc3Rlci9zcmMvYmFzZXMvaW50ZXJmYWNlLnRzKSBpbnRlcmZhY2UuIFRoaXMgbGlicmFyeSBwcm92aWRlcyBhIGRlY29kZXIgZm9yIGV2ZXJ5IGVuY29kZXIgaXQgcHJvdmlkZXM6XG4gKlxuICogYGBgVHlwZVNjcmlwdFxuICogQ0lELnBhcnNlKCdtQVlBRUVpQ1Rvamx4cVJUbDZzdndxTkpSVk0yakNjUEJ4eSs3bVJUVWZHRHp5MmdWaUEnLCBiYXNlNjQuZGVjb2RlcilcbiAqIC8vPiBDSUQoYmFnYWFpZXJhc29yZHM0bmpjdHM2dnM3cXZkamZjdmdudW1lNGhxb2hmNjV6c2ZndXBycXBoczNpY3dlYSlcbiAqIGBgYFxuICpcbiAqIER1YWwgb2YgbXVsdGliYXNlIGVuY29kZXIgJiBkZWNvZGVyIGlzIGRlZmluZWQgYXMgbXVsdGliYXNlIGNvZGVjIGFuZCBpdCBleHBvc2VzXG4gKiB0aGVtIGFzIGBlbmNvZGVyYCBhbmQgYGRlY29kZXJgIHByb3BlcnRpZXMuIEZvciBhZGRlZCBjb252ZW5pZW5jZSBjb2RlY3MgYWxzb1xuICogaW1wbGVtZW50IGBNdWx0aWJhc2VFbmNvZGVyYCBhbmQgYE11bHRpYmFzZURlY29kZXJgIGludGVyZmFjZXMgc28gdGhleSBjb3VsZCBiZVxuICogdXNlZCBhcyBlaXRoZXIgb3IgYm90aDpcbiAqXG4gKiBgYGBUeXBlU2NyaXB0XG4gKiBjaWQudG9TdHJpbmcoYmFzZTY0KVxuICogQ0lELnBhcnNlKGNpZC50b1N0cmluZyhiYXNlNjQpLCBiYXNlNjQpXG4gKiBgYGBcbiAqXG4gKiAqKk5vdGU6KiogQ0lEIGltcGxlbWVudGF0aW9uIGNvbWVzIGJ1bmRsZWQgd2l0aCBgYmFzZTMyYCBhbmQgYGJhc2U1OGJ0Y2BcbiAqIG11bHRpYmFzZSBjb2RlY3Mgc28gdGhhdCBDSURzIGNhbiBiZSBiYXNlIHNlcmlhbGl6ZWQgdG8gKHZlcnNpb24gc3BlY2lmaWMpXG4gKiBkZWZhdWx0IGJhc2UgZW5jb2RpbmcgYW5kIHBhcnNlZCB3aXRob3V0IGhhdmluZyB0byBzdXBwbHkgYmFzZSBlbmNvZGVycy9kZWNvZGVyczpcbiAqXG4gKiBgYGBUeXBlU2NyaXB0XG4gKiBjb25zdCB2MSA9IENJRC5wYXJzZSgnYmFnYWFpZXJhc29yZHM0bmpjdHM2dnM3cXZkamZjdmdudW1lNGhxb2hmNjV6c2ZndXBycXBoczNpY3dlYScpXG4gKiB2MS50b1N0cmluZygpXG4gKiAvLz4gJ2JhZ2FhaWVyYXNvcmRzNG5qY3RzNnZzN3F2ZGpmY3ZnbnVtZTRocW9oZjY1enNmZ3VwcnFwaHMzaWN3ZWEnXG4gKlxuICogY29uc3QgdjAgPSBDSUQucGFyc2UoJ1FtZGZUYkJxQlBRN1ZOeFpFWUVqMTRWbVJ1WkJrcUZiaXdSZW9nSmdTMXpSMW4nKVxuICogdjAudG9TdHJpbmcoKVxuICogLy8+ICdRbWRmVGJCcUJQUTdWTnhaRVlFajE0Vm1SdVpCa3FGYml3UmVvZ0pnUzF6UjFuJ1xuICogdjAudG9WMSgpLnRvU3RyaW5nKClcbiAqIC8vPiAnYmFmeWJlaWhkd2RjZWZnaDRkcWtqdjY3dXpjbXc3b2plZTZ4ZWR6ZGV0b2p1empldnRlbnhxdXZ5a3UnXG4gKiBgYGBcbiAqXG4gKiAjIyBNdWx0aWNvZGVjIEVuY29kZXJzIC8gRGVjb2RlcnMgLyBDb2RlY3NcbiAqXG4gKiBUaGlzIGxpYnJhcnkgZGVmaW5lcyBbYEJsb2NrRW5jb2RlcmAsIGBCbG9ja0RlY29kZXJgIGFuZCBgQmxvY2tDb2RlY2AgaW50ZXJmYWNlc10oaHR0cHM6Ly9naXRodWIuY29tL211bHRpZm9ybWF0cy9qcy1tdWx0aWZvcm1hdHMvYmxvYi9tYXN0ZXIvc3JjL2NvZGVjcy9pbnRlcmZhY2UudHMpLlxuICogQ29kZWMgaW1wbGVtZW50YXRpb25zIHNob3VsZCBjb25mb3JtIHRvIHRoZSBgQmxvY2tDb2RlY2AgaW50ZXJmYWNlIHdoaWNoIGltcGxlbWVudHMgYm90aCBgQmxvY2tFbmNvZGVyYCBhbmQgYEJsb2NrRGVjb2RlcmAuXG4gKiBIZXJlIGlzIGFuIGV4YW1wbGUgaW1wbGVtZW50YXRpb24gb2YgSlNPTiBgQmxvY2tDb2RlY2AuXG4gKlxuICogYGBgVHlwZVNjcmlwdFxuICogZXhwb3J0IGNvbnN0IHsgbmFtZSwgY29kZSwgZW5jb2RlLCBkZWNvZGUgfSA9IHtcbiAqICAgbmFtZTogJ2pzb24nLFxuICogICBjb2RlOiAweDAyMDAsXG4gKiAgIGVuY29kZToganNvbiA9PiBuZXcgVGV4dEVuY29kZXIoKS5lbmNvZGUoSlNPTi5zdHJpbmdpZnkoanNvbikpLFxuICogICBkZWNvZGU6IGJ5dGVzID0+IEpTT04ucGFyc2UobmV3IFRleHREZWNvZGVyKCkuZGVjb2RlKGJ5dGVzKSlcbiAqIH1cbiAqIGBgYFxuICpcbiAqICMjIE11bHRpaGFzaCBIYXNoZXJzXG4gKlxuICogVGhpcyBsaWJyYXJ5IGRlZmluZXMgW2BNdWx0aWhhc2hIYXNoZXJgIGFuZCBgTXVsdGloYXNoRGlnZXN0YCBpbnRlcmZhY2VzXShodHRwczovL2dpdGh1Yi5jb20vbXVsdGlmb3JtYXRzL2pzLW11bHRpZm9ybWF0cy9ibG9iL21hc3Rlci9zcmMvaGFzaGVzL2ludGVyZmFjZS50cykgYW5kIGNvbnZpbmllbnQgZnVuY3Rpb24gZm9yIGltcGxlbWVudGluZyB0aGVtOlxuICpcbiAqIGBgYFR5cGVTY3JpcHRcbiAqIGltcG9ydCAqIGFzIGhhc2hlciBmcm9tICdtdWx0aWZvcm1hdHMvaGFzaGVzL2hhc2hlcidcbiAqXG4gKiBjb25zdCBzaGEyNTYgPSBoYXNoZXIuZnJvbSh7XG4gKiAgIC8vIEFzIHBlciBtdWx0aWZvcm1hdHMgdGFibGVcbiAqICAgLy8gaHR0cHM6Ly9naXRodWIuY29tL211bHRpZm9ybWF0cy9tdWx0aWNvZGVjL2Jsb2IvbWFzdGVyL3RhYmxlLmNzdiNMOVxuICogICBuYW1lOiAnc2hhMi0yNTYnLFxuICogICBjb2RlOiAweDEyLFxuICpcbiAqICAgZW5jb2RlOiAoaW5wdXQpID0+IG5ldyBVaW50OEFycmF5KGNyeXB0by5jcmVhdGVIYXNoKCdzaGEyNTYnKS51cGRhdGUoaW5wdXQpLmRpZ2VzdCgpKVxuICogfSlcbiAqXG4gKiBjb25zdCBoYXNoID0gYXdhaXQgc2hhMjU2LmRpZ2VzdChqc29uLmVuY29kZSh7IGhlbGxvOiAnd29ybGQnIH0pKVxuICogQ0lELmNyZWF0ZSgxLCBqc29uLmNvZGUsIGhhc2gpXG4gKlxuICogLy8+IENJRChiYWdhYWllcmFzb3JkczRuamN0czZ2czdxdmRqZmN2Z251bWU0aHFvaGY2NXpzZmd1cHJxcGhzM2ljd2VhKVxuICogYGBgXG4gKlxuICogIyMgVHJhdmVyc2FsXG4gKlxuICogVGhpcyBsaWJyYXJ5IGNvbnRhaW5zIGhpZ2hlci1vcmRlciBmdW5jdGlvbnMgZm9yIHRyYXZlcnNpbmcgZ3JhcGhzIG9mIGRhdGEgZWFzaWx5LlxuICpcbiAqIGB3YWxrKClgIHdhbGtzIHRocm91Z2ggdGhlIGxpbmtzIGluIGVhY2ggYmxvY2sgb2YgYSBEQUcgY2FsbGluZyBhIHVzZXItc3VwcGxpZWQgbG9hZGVyIGZ1bmN0aW9uIGZvciBlYWNoIG9uZSwgaW4gZGVwdGgtZmlyc3Qgb3JkZXIgd2l0aCBubyBkdXBsaWNhdGUgYmxvY2sgdmlzaXRzLiBUaGUgbG9hZGVyIHNob3VsZCByZXR1cm4gYSBgQmxvY2tgIG9iamVjdCBhbmQgY2FuIGJlIHVzZWQgdG8gaW5zcGVjdCBhbmQgY29sbGVjdCBibG9jayBvcmRlcmluZyBmb3IgYSBmdWxsIERBRyB3YWxrLiBUaGUgbG9hZGVyIHNob3VsZCBgdGhyb3dgIG9uIGVycm9yLCBhbmQgcmV0dXJuIGBudWxsYCBpZiBhIGJsb2NrIHNob3VsZCBiZSBza2lwcGVkIGJ5IGB3YWxrKClgLlxuICpcbiAqIGBgYFR5cGVTY3JpcHRcbiAqIGltcG9ydCB7IHdhbGsgfSBmcm9tICdtdWx0aWZvcm1hdHMvdHJhdmVyc2FsJ1xuICogaW1wb3J0ICogYXMgQmxvY2sgZnJvbSAnbXVsdGlmb3JtYXRzL2Jsb2NrJ1xuICogaW1wb3J0ICogYXMgY29kZWMgZnJvbSAnbXVsdGlmb3JtYXRzL2NvZGVjcy9qc29uJ1xuICogaW1wb3J0IHsgc2hhMjU2IGFzIGhhc2hlciB9IGZyb20gJ211bHRpZm9ybWF0cy9oYXNoZXMvc2hhMidcbiAqXG4gKiAvLyBidWlsZCBhIERBRyAoYSBzaW5nbGUgYmxvY2sgZm9yIHRoaXMgc2ltcGxlIGV4YW1wbGUpXG4gKiBjb25zdCB2YWx1ZSA9IHsgaGVsbG86ICd3b3JsZCcgfVxuICogY29uc3QgYmxvY2sgPSBhd2FpdCBCbG9jay5lbmNvZGUoeyB2YWx1ZSwgY29kZWMsIGhhc2hlciB9KVxuICogY29uc3QgeyBjaWQgfSA9IGJsb2NrXG4gKiBjb25zb2xlLmxvZyhjaWQpXG4gKiAvLz4gQ0lEKGJhZ2FhaWVyYXNvcmRzNG5qY3RzNnZzN3F2ZGpmY3ZnbnVtZTRocW9oZjY1enNmZ3VwcnFwaHMzaWN3ZWEpXG4gKlxuICogLy8gY3JlYXRlIGEgbG9hZGVyIGZ1bmN0aW9uIHRoYXQgYWxzbyBjb2xsZWN0cyBDSURzIG9mIGJsb2NrcyBpblxuICogLy8gdGhlaXIgdHJhdmVyc2FsIG9yZGVyXG4gKiBjb25zdCBsb2FkID0gKGNpZCwgYmxvY2tzKSA9PiBhc3luYyAoY2lkKSA9PiB7XG4gKiAgIC8vIGZldGNoIGEgYmxvY2sgdXNpbmcgaXRzIGNpZFxuICogICAvLyBlLmcuOiBjb25zdCBibG9jayA9IGF3YWl0IGZldGNoQmxvY2tCeUNJRChjaWQpXG4gKiAgIGJsb2Nrcy5wdXNoKGNpZClcbiAqICAgcmV0dXJuIGJsb2NrXG4gKiB9XG4gKlxuICogLy8gY29sbGVjdCBibG9ja3MgaW4gdGhpcyBEQUcgc3RhcnRpbmcgZnJvbSB0aGUgcm9vdCBgY2lkYFxuICogY29uc3QgYmxvY2tzID0gW11cbiAqIGF3YWl0IHdhbGsoeyBjaWQsIGxvYWQ6IGxvYWQoY2lkLCBibG9ja3MpIH0pXG4gKlxuICogY29uc29sZS5sb2coYmxvY2tzKVxuICogLy8+IFtDSUQoYmFnYWFpZXJhc29yZHM0bmpjdHM2dnM3cXZkamZjdmdudW1lNGhxb2hmNjV6c2ZndXBycXBoczNpY3dlYSldXG4gKiBgYGBcbiAqXG4gKiAjIyBMZWdhY3kgaW50ZXJmYWNlXG4gKlxuICogW2BibG9ja2NvZGVjLXRvLWlwbGQtZm9ybWF0YF0oaHR0cHM6Ly9naXRodWIuY29tL2lwbGQvanMtYmxvY2tjb2RlYy10by1pcGxkLWZvcm1hdCkgY29udmVydHMgYSBtdWx0aWZvcm1hdHMgW2BCbG9ja0NvZGVjYF0oaHR0cHM6Ly9naXRodWIuY29tL211bHRpZm9ybWF0cy9qcy1tdWx0aWZvcm1hdHMvYmxvYi9tYXN0ZXIvc3JjL2NvZGVjcy9pbnRlcmZhY2UudHMjTDIxKSBpbnRvIGFuXG4gKiBbYGludGVyZmFjZS1pcGxkLWZvcm1hdGBdKGh0dHBzOi8vZ2l0aHViLmNvbS9pcGxkL2ludGVyZmFjZS1pcGxkLWZvcm1hdCkgZm9yIHVzZSB3aXRoIHRoZSBbYGlwbGRgXShodHRwczovL2dpdGh1Yi5jb20vaXBsZC9pcGxkKSBwYWNrYWdlLiBUaGlzIGNhbiBoZWxwIGJyaWRnZSBJUExEIGNvZGVjcyBpbXBsZW1lbnRlZCB1c2luZyB0aGUgc3RydWN0dXJlIGFuZCBpbnRlcmZhY2VzIGRlZmluZWQgaGVyZSB0byBleGlzdGluZyBjb2RlIHRoYXQgYXNzdW1lcywgb3IgcmVxdWlyZXMgYGludGVyZmFjZS1pcGxkLWZvcm1hdGAuIFRoaXMgYnJpZGdlIGFsc28gaW5jbHVkZXMgdGhlIHJlbGV2YW50IFR5cGVTY3JpcHQgZGVmaW5pdGlvbnMuXG4gKlxuICogIyMgSW1wbGVtZW50YXRpb25zXG4gKlxuICogQnkgZGVmYXVsdCwgbm8gYmFzZSBlbmNvZGluZ3MgKG90aGVyIHRoYW4gYmFzZTMyICYgYmFzZTU4YnRjKSwgaGFzaCBmdW5jdGlvbnMsXG4gKiBvciBjb2RlYyBpbXBsZW1lbnRhdGlvbnMgYXJlIGV4cG9zZWQgYnkgYG11bHRpZm9ybWF0c2AsIHlvdSBuZWVkIHRvXG4gKiBpbXBvcnQgdGhlIG9uZXMgeW91IG5lZWQgeW91cnNlbGYuXG4gKlxuICogIyMjIE11bHRpYmFzZSBjb2RlY3NcbiAqXG4gKiB8IGJhc2VzICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCBpbXBvcnQgICAgICAgICAgICAgICAgICAgICAgfCByZXBvICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHxcbiAqIHwgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSB8IC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSB8IC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gfFxuICogfCBgYmFzZTE2YCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgYG11bHRpZm9ybWF0cy9iYXNlcy9iYXNlMTZgIHwgW211bHRpZm9ybWF0cy9qcy1tdWx0aWZvcm1hdHNdKGh0dHBzOi8vZ2l0aHViLmNvbS9tdWx0aWZvcm1hdHMvanMtbXVsdGlmb3JtYXRzL3RyZWUvbWFzdGVyL2Jhc2VzKSB8XG4gKiB8IGBiYXNlMzJgLCBgYmFzZTMycGFkYCwgYGJhc2UzMmhleGAsIGBiYXNlMzJoZXhwYWRgLCBgYmFzZTMyemAgfCBgbXVsdGlmb3JtYXRzL2Jhc2VzL2Jhc2UzMmAgfCBbbXVsdGlmb3JtYXRzL2pzLW11bHRpZm9ybWF0c10oaHR0cHM6Ly9naXRodWIuY29tL211bHRpZm9ybWF0cy9qcy1tdWx0aWZvcm1hdHMvdHJlZS9tYXN0ZXIvYmFzZXMpIHxcbiAqIHwgYGJhc2U2NGAsIGBiYXNlNjRwYWRgLCBgYmFzZTY0dXJsYCwgYGJhc2U2NHVybHBhZGAgICAgICAgICAgICB8IGBtdWx0aWZvcm1hdHMvYmFzZXMvYmFzZTY0YCB8IFttdWx0aWZvcm1hdHMvanMtbXVsdGlmb3JtYXRzXShodHRwczovL2dpdGh1Yi5jb20vbXVsdGlmb3JtYXRzL2pzLW11bHRpZm9ybWF0cy90cmVlL21hc3Rlci9iYXNlcykgfFxuICogfCBgYmFzZTU4YnRjYCwgYGJhc2U1OGZsaWNrNGAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgYG11bHRpZm9ybWF0cy9iYXNlcy9iYXNlNThgIHwgW211bHRpZm9ybWF0cy9qcy1tdWx0aWZvcm1hdHNdKGh0dHBzOi8vZ2l0aHViLmNvbS9tdWx0aWZvcm1hdHMvanMtbXVsdGlmb3JtYXRzL3RyZWUvbWFzdGVyL2Jhc2VzKSB8XG4gKlxuICogT3RoZXIgKGxlc3MgdXNlZnVsKSBiYXNlcyBpbXBsZW1lbnRlZCBpbiBbbXVsdGlmb3JtYXRzL2pzLW11bHRpZm9ybWF0c10oaHR0cHM6Ly9naXRodWIuY29tL211bHRpZm9ybWF0cy9qcy1tdWx0aWZvcm1hdHMvdHJlZS9tYXN0ZXIvYmFzZXMpIGluY2x1ZGU6IGBiYXNlMmAsIGBiYXNlOGAsIGBiYXNlMTBgLCBgYmFzZTM2YCBhbmQgYGJhc2UyNTZlbW9qaWAuXG4gKlxuICogIyMjIE11bHRpaGFzaCBoYXNoZXJzXG4gKlxuICogfCBoYXNoZXMgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgaW1wb3J0ICAgICAgICAgICAgICAgICAgICAgICAgIHwgcmVwbyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHxcbiAqIHwgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSB8IC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSB8IC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSB8XG4gKiB8IGBzaGEyLTI1NmAsIGBzaGEyLTUxMmAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCBgbXVsdGlmb3JtYXRzL2hhc2hlcy9zaGEyYCAgICAgfCBbbXVsdGlmb3JtYXRzL2pzLW11bHRpZm9ybWF0c10oaHR0cHM6Ly9naXRodWIuY29tL211bHRpZm9ybWF0cy9qcy1tdWx0aWZvcm1hdHMvdHJlZS9tYXN0ZXIvc3JjL2hhc2hlcykgICAgICAgICAgICAgfFxuICogfCBgc2hhMy0yMjRgLCBgc2hhMy0yNTZgLCBgc2hhMy0zODRgLGBzaGEzLTUxMmAsIGBzaGFrZS0xMjhgLCBgc2hha2UtMjU2YCwgYGtlY2Nhay0yMjRgLCBga2VjY2FrLTI1NmAsIGBrZWNjYWstMzg0YCwgYGtlY2Nhay01MTJgIHwgYEBtdWx0aWZvcm1hdHMvc2hhM2AgICAgICAgICAgIHwgW211bHRpZm9ybWF0cy9qcy1zaGEzXShodHRwczovL2dpdGh1Yi5jb20vbXVsdGlmb3JtYXRzL2pzLXNoYTMpICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHxcbiAqIHwgYGlkZW50aXR5YCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8IGBtdWx0aWZvcm1hdHMvaGFzaGVzL2lkZW50aXR5YCB8IFttdWx0aWZvcm1hdHMvanMtbXVsdGlmb3JtYXRzXShodHRwczovL2dpdGh1Yi5jb20vbXVsdGlmb3JtYXRzL2pzLW11bHRpZm9ybWF0cy90cmVlL21hc3Rlci9zcmMvaGFzaGVzL2lkZW50aXR5LmpzKSB8XG4gKiB8IGBtdXJtdXIzLTEyOGAsIGBtdXJtdXIzLTMyYCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCBgQG11bHRpZm9ybWF0cy9tdXJtdXIzYCAgICAgICAgfCBbbXVsdGlmb3JtYXRzL2pzLW11cm11cjNdKGh0dHBzOi8vZ2l0aHViLmNvbS9tdWx0aWZvcm1hdHMvanMtbXVybXVyMykgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfFxuICogfCBgYmxha2UyYi0qYCwgYGJsYWtlMnMtKmAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgYEBtdWx0aWZvcm1hdHMvYmxha2UyYCAgICAgICAgIHwgW211bHRpZm9ybWF0cy9qcy1ibGFrZTJdKGh0dHBzOi8vZ2l0aHViLmNvbS9tdWx0aWZvcm1hdHMvanMtYmxha2UyKSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHxcbiAqXG4gKiAjIyMgSVBMRCBjb2RlY3MgKG11bHRpY29kZWMpXG4gKlxuICogfCBjb2RlYyAgICAgIHwgaW1wb3J0ICAgICAgICAgICAgICAgICAgICAgfCByZXBvICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfFxuICogfCAtLS0tLS0tLS0tIHwgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gfCAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gfFxuICogfCBgcmF3YCAgICAgIHwgYG11bHRpZm9ybWF0cy9jb2RlY3MvcmF3YCAgfCBbbXVsdGlmb3JtYXRzL2pzLW11bHRpZm9ybWF0c10oaHR0cHM6Ly9naXRodWIuY29tL211bHRpZm9ybWF0cy9qcy1tdWx0aWZvcm1hdHMvdHJlZS9tYXN0ZXIvc3JjL2NvZGVjcykgfFxuICogfCBganNvbmAgICAgIHwgYG11bHRpZm9ybWF0cy9jb2RlY3MvanNvbmAgfCBbbXVsdGlmb3JtYXRzL2pzLW11bHRpZm9ybWF0c10oaHR0cHM6Ly9naXRodWIuY29tL211bHRpZm9ybWF0cy9qcy1tdWx0aWZvcm1hdHMvdHJlZS9tYXN0ZXIvc3JjL2NvZGVjcykgfFxuICogfCBgZGFnLWNib3JgIHwgYEBpcGxkL2RhZy1jYm9yYCAgICAgICAgICAgfCBbaXBsZC9qcy1kYWctY2Jvcl0oaHR0cHM6Ly9naXRodWIuY29tL2lwbGQvanMtZGFnLWNib3IpICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfFxuICogfCBgZGFnLWpzb25gIHwgYEBpcGxkL2RhZy1qc29uYCAgICAgICAgICAgfCBbaXBsZC9qcy1kYWctanNvbl0oaHR0cHM6Ly9naXRodWIuY29tL2lwbGQvanMtZGFnLWpzb24pICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfFxuICogfCBgZGFnLXBiYCAgIHwgYEBpcGxkL2RhZy1wYmAgICAgICAgICAgICAgfCBbaXBsZC9qcy1kYWctcGJdKGh0dHBzOi8vZ2l0aHViLmNvbS9pcGxkL2pzLWRhZy1wYikgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfFxuICogfCBgZGFnLWpvc2VgIHwgYGRhZy1qb3NlYCAgICAgICAgICAgICAgICAgfCBbY2VyYW1pY25ldHdvcmsvanMtZGFnLWpvc2VdKGh0dHBzOi8vZ2l0aHViLmNvbS9jZXJhbWljbmV0d29yay9qcy1kYWctam9zZSkgICAgICAgICAgICAgICAgICAgICAgICAgICAgfFxuICovXG5pbXBvcnQgKiBhcyBieXRlcyBmcm9tICcuL2J5dGVzLmpzJztcbmltcG9ydCB7IENJRCB9IGZyb20gJy4vY2lkLmpzJztcbmltcG9ydCAqIGFzIGRpZ2VzdCBmcm9tICcuL2hhc2hlcy9kaWdlc3QuanMnO1xuaW1wb3J0ICogYXMgaGFzaGVyIGZyb20gJy4vaGFzaGVzL2hhc2hlci5qcyc7XG5pbXBvcnQgKiBhcyB2YXJpbnQgZnJvbSAnLi92YXJpbnQuanMnO1xuLy8gVGhpcyB3YXkgVFMgd2lsbCBhbHNvIGV4cG9zZSBhbGwgdGhlIHR5cGVzIGZyb20gbW9kdWxlXG5leHBvcnQgKiBmcm9tICcuL2ludGVyZmFjZS5qcyc7XG5leHBvcnQgeyBDSUQsIGhhc2hlciwgZGlnZXN0LCB2YXJpbnQsIGJ5dGVzIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOlsiYnl0ZXMiLCJDSUQiLCJkaWdlc3QiLCJoYXNoZXIiLCJ2YXJpbnQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/multiformats/dist/src/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/multiformats/dist/src/interface.js":
/*!*********************************************************!*\
  !*** ./node_modules/multiformats/dist/src/interface.js ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _bases_interface_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./bases/interface.js */ \"(ssr)/./node_modules/multiformats/dist/src/bases/interface.js\");\n/* harmony import */ var _hashes_interface_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./hashes/interface.js */ \"(ssr)/./node_modules/multiformats/dist/src/hashes/interface.js\");\n/* harmony import */ var _codecs_interface_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./codecs/interface.js */ \"(ssr)/./node_modules/multiformats/dist/src/codecs/interface.js\");\n/* harmony import */ var _link_interface_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./link/interface.js */ \"(ssr)/./node_modules/multiformats/dist/src/link/interface.js\");\n/* harmony import */ var _block_interface_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./block/interface.js */ \"(ssr)/./node_modules/multiformats/dist/src/block/interface.js\");\n\n\n\n\n //# sourceMappingURL=interface.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL2Rpc3Qvc3JjL2ludGVyZmFjZS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBcUM7QUFDQztBQUNBO0FBQ0Y7QUFDQyxDQUNyQyxxQ0FBcUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mbHVzaC1ub3Rlcy8uL25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvZGlzdC9zcmMvaW50ZXJmYWNlLmpzPzIyZjAiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0ICogZnJvbSAnLi9iYXNlcy9pbnRlcmZhY2UuanMnO1xuZXhwb3J0ICogZnJvbSAnLi9oYXNoZXMvaW50ZXJmYWNlLmpzJztcbmV4cG9ydCAqIGZyb20gJy4vY29kZWNzL2ludGVyZmFjZS5qcyc7XG5leHBvcnQgKiBmcm9tICcuL2xpbmsvaW50ZXJmYWNlLmpzJztcbmV4cG9ydCAqIGZyb20gJy4vYmxvY2svaW50ZXJmYWNlLmpzJztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWludGVyZmFjZS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/multiformats/dist/src/interface.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/multiformats/dist/src/link/interface.js":
/*!**************************************************************!*\
  !*** ./node_modules/multiformats/dist/src/link/interface.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* eslint-disable @typescript-eslint/no-unnecessary-type-constraint */ /* eslint-disable no-use-before-define */  //# sourceMappingURL=interface.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL2Rpc3Qvc3JjL2xpbmsvaW50ZXJmYWNlLmpzIiwibWFwcGluZ3MiOiI7QUFBQSxvRUFBb0UsR0FDcEUsdUNBQXVDLEdBQzdCLENBQ1YscUNBQXFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZmx1c2gtbm90ZXMvLi9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL2Rpc3Qvc3JjL2xpbmsvaW50ZXJmYWNlLmpzP2IyNTgiXSwic291cmNlc0NvbnRlbnQiOlsiLyogZXNsaW50LWRpc2FibGUgQHR5cGVzY3JpcHQtZXNsaW50L25vLXVubmVjZXNzYXJ5LXR5cGUtY29uc3RyYWludCAqL1xuLyogZXNsaW50LWRpc2FibGUgbm8tdXNlLWJlZm9yZS1kZWZpbmUgKi9cbmV4cG9ydCB7fTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWludGVyZmFjZS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/multiformats/dist/src/link/interface.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/multiformats/dist/src/varint.js":
/*!******************************************************!*\
  !*** ./node_modules/multiformats/dist/src/varint.js ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decode: () => (/* binding */ decode),\n/* harmony export */   encodeTo: () => (/* binding */ encodeTo),\n/* harmony export */   encodingLength: () => (/* binding */ encodingLength)\n/* harmony export */ });\n/* harmony import */ var _vendor_varint_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./vendor/varint.js */ \"(ssr)/./node_modules/multiformats/dist/src/vendor/varint.js\");\n\nfunction decode(data, offset = 0) {\n    const code = _vendor_varint_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].decode(data, offset);\n    return [\n        code,\n        _vendor_varint_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].decode.bytes\n    ];\n}\nfunction encodeTo(int, target, offset = 0) {\n    _vendor_varint_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].encode(int, target, offset);\n    return target;\n}\nfunction encodingLength(int) {\n    return _vendor_varint_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].encodingLength(int);\n} //# sourceMappingURL=varint.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL2Rpc3Qvc3JjL3ZhcmludC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQXdDO0FBQ2pDLFNBQVNDLE9BQU9DLElBQUksRUFBRUMsU0FBUyxDQUFDO0lBQ25DLE1BQU1DLE9BQU9KLHlEQUFNQSxDQUFDQyxNQUFNLENBQUNDLE1BQU1DO0lBQ2pDLE9BQU87UUFBQ0M7UUFBTUoseURBQU1BLENBQUNDLE1BQU0sQ0FBQ0ksS0FBSztLQUFDO0FBQ3RDO0FBQ08sU0FBU0MsU0FBU0MsR0FBRyxFQUFFQyxNQUFNLEVBQUVMLFNBQVMsQ0FBQztJQUM1Q0gseURBQU1BLENBQUNTLE1BQU0sQ0FBQ0YsS0FBS0MsUUFBUUw7SUFDM0IsT0FBT0s7QUFDWDtBQUNPLFNBQVNFLGVBQWVILEdBQUc7SUFDOUIsT0FBT1AseURBQU1BLENBQUNVLGNBQWMsQ0FBQ0g7QUFDakMsRUFDQSxrQ0FBa0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mbHVzaC1ub3Rlcy8uL25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvZGlzdC9zcmMvdmFyaW50LmpzPzkzZDIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHZhcmludCBmcm9tICcuL3ZlbmRvci92YXJpbnQuanMnO1xuZXhwb3J0IGZ1bmN0aW9uIGRlY29kZShkYXRhLCBvZmZzZXQgPSAwKSB7XG4gICAgY29uc3QgY29kZSA9IHZhcmludC5kZWNvZGUoZGF0YSwgb2Zmc2V0KTtcbiAgICByZXR1cm4gW2NvZGUsIHZhcmludC5kZWNvZGUuYnl0ZXNdO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGVuY29kZVRvKGludCwgdGFyZ2V0LCBvZmZzZXQgPSAwKSB7XG4gICAgdmFyaW50LmVuY29kZShpbnQsIHRhcmdldCwgb2Zmc2V0KTtcbiAgICByZXR1cm4gdGFyZ2V0O1xufVxuZXhwb3J0IGZ1bmN0aW9uIGVuY29kaW5nTGVuZ3RoKGludCkge1xuICAgIHJldHVybiB2YXJpbnQuZW5jb2RpbmdMZW5ndGgoaW50KTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXZhcmludC5qcy5tYXAiXSwibmFtZXMiOlsidmFyaW50IiwiZGVjb2RlIiwiZGF0YSIsIm9mZnNldCIsImNvZGUiLCJieXRlcyIsImVuY29kZVRvIiwiaW50IiwidGFyZ2V0IiwiZW5jb2RlIiwiZW5jb2RpbmdMZW5ndGgiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/multiformats/dist/src/varint.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/multiformats/dist/src/vendor/base-x.js":
/*!*************************************************************!*\
  !*** ./node_modules/multiformats/dist/src/vendor/base-x.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* eslint-disable */ // base-x encoding / decoding\n// Copyright (c) 2018 base-x contributors\n// Copyright (c) 2014-2018 The Bitcoin Core developers (base58.cpp)\n// Distributed under the MIT software license, see the accompanying\n// file LICENSE or http://www.opensource.org/licenses/mit-license.php.\n/**\n * @param {string} ALPHABET\n * @param {any} name\n */ function base(ALPHABET, name) {\n    if (ALPHABET.length >= 255) {\n        throw new TypeError(\"Alphabet too long\");\n    }\n    var BASE_MAP = new Uint8Array(256);\n    for(var j = 0; j < BASE_MAP.length; j++){\n        BASE_MAP[j] = 255;\n    }\n    for(var i = 0; i < ALPHABET.length; i++){\n        var x = ALPHABET.charAt(i);\n        var xc = x.charCodeAt(0);\n        if (BASE_MAP[xc] !== 255) {\n            throw new TypeError(x + \" is ambiguous\");\n        }\n        BASE_MAP[xc] = i;\n    }\n    var BASE = ALPHABET.length;\n    var LEADER = ALPHABET.charAt(0);\n    var FACTOR = Math.log(BASE) / Math.log(256); // log(BASE) / log(256), rounded up\n    var iFACTOR = Math.log(256) / Math.log(BASE); // log(256) / log(BASE), rounded up\n    /**\n     * @param {any[] | Iterable<number>} source\n     */ function encode(source) {\n        // @ts-ignore\n        if (source instanceof Uint8Array) ;\n        else if (ArrayBuffer.isView(source)) {\n            source = new Uint8Array(source.buffer, source.byteOffset, source.byteLength);\n        } else if (Array.isArray(source)) {\n            source = Uint8Array.from(source);\n        }\n        if (!(source instanceof Uint8Array)) {\n            throw new TypeError(\"Expected Uint8Array\");\n        }\n        if (source.length === 0) {\n            return \"\";\n        }\n        // Skip & count leading zeroes.\n        var zeroes = 0;\n        var length = 0;\n        var pbegin = 0;\n        var pend = source.length;\n        while(pbegin !== pend && source[pbegin] === 0){\n            pbegin++;\n            zeroes++;\n        }\n        // Allocate enough space in big-endian base58 representation.\n        var size = (pend - pbegin) * iFACTOR + 1 >>> 0;\n        var b58 = new Uint8Array(size);\n        // Process the bytes.\n        while(pbegin !== pend){\n            var carry = source[pbegin];\n            // Apply \"b58 = b58 * 256 + ch\".\n            var i = 0;\n            for(var it1 = size - 1; (carry !== 0 || i < length) && it1 !== -1; it1--, i++){\n                carry += 256 * b58[it1] >>> 0;\n                b58[it1] = carry % BASE >>> 0;\n                carry = carry / BASE >>> 0;\n            }\n            if (carry !== 0) {\n                throw new Error(\"Non-zero carry\");\n            }\n            length = i;\n            pbegin++;\n        }\n        // Skip leading zeroes in base58 result.\n        var it2 = size - length;\n        while(it2 !== size && b58[it2] === 0){\n            it2++;\n        }\n        // Translate the result into a string.\n        var str = LEADER.repeat(zeroes);\n        for(; it2 < size; ++it2){\n            str += ALPHABET.charAt(b58[it2]);\n        }\n        return str;\n    }\n    /**\n     * @param {string | string[]} source\n     */ function decodeUnsafe(source) {\n        if (typeof source !== \"string\") {\n            throw new TypeError(\"Expected String\");\n        }\n        if (source.length === 0) {\n            return new Uint8Array();\n        }\n        var psz = 0;\n        // Skip leading spaces.\n        if (source[psz] === \" \") {\n            return;\n        }\n        // Skip and count leading '1's.\n        var zeroes = 0;\n        var length = 0;\n        while(source[psz] === LEADER){\n            zeroes++;\n            psz++;\n        }\n        // Allocate enough space in big-endian base256 representation.\n        var size = (source.length - psz) * FACTOR + 1 >>> 0; // log(58) / log(256), rounded up.\n        var b256 = new Uint8Array(size);\n        // Process the characters.\n        while(source[psz]){\n            // Decode character\n            var carry = BASE_MAP[source.charCodeAt(psz)];\n            // Invalid character\n            if (carry === 255) {\n                return;\n            }\n            var i = 0;\n            for(var it3 = size - 1; (carry !== 0 || i < length) && it3 !== -1; it3--, i++){\n                carry += BASE * b256[it3] >>> 0;\n                b256[it3] = carry % 256 >>> 0;\n                carry = carry / 256 >>> 0;\n            }\n            if (carry !== 0) {\n                throw new Error(\"Non-zero carry\");\n            }\n            length = i;\n            psz++;\n        }\n        // Skip trailing spaces.\n        if (source[psz] === \" \") {\n            return;\n        }\n        // Skip leading zeroes in b256.\n        var it4 = size - length;\n        while(it4 !== size && b256[it4] === 0){\n            it4++;\n        }\n        var vch = new Uint8Array(zeroes + (size - it4));\n        var j = zeroes;\n        while(it4 !== size){\n            vch[j++] = b256[it4++];\n        }\n        return vch;\n    }\n    /**\n     * @param {string | string[]} string\n     */ function decode(string) {\n        var buffer = decodeUnsafe(string);\n        if (buffer) {\n            return buffer;\n        }\n        throw new Error(`Non-${name} character`);\n    }\n    return {\n        encode: encode,\n        decodeUnsafe: decodeUnsafe,\n        decode: decode\n    };\n}\nvar src = base;\nvar _brrp__multiformats_scope_baseX = src;\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_brrp__multiformats_scope_baseX); //# sourceMappingURL=base-x.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/multiformats/dist/src/vendor/base-x.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/multiformats/dist/src/vendor/varint.js":
/*!*************************************************************!*\
  !*** ./node_modules/multiformats/dist/src/vendor/varint.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* eslint-disable */ var encode_1 = encode;\nvar MSB = 0x80, REST = 0x7F, MSBALL = ~REST, INT = Math.pow(2, 31);\n/**\n * @param {number} num\n * @param {number[]} out\n * @param {number} offset\n */ function encode(num, out, offset) {\n    out = out || [];\n    offset = offset || 0;\n    var oldOffset = offset;\n    while(num >= INT){\n        out[offset++] = num & 0xFF | MSB;\n        num /= 128;\n    }\n    while(num & MSBALL){\n        out[offset++] = num & 0xFF | MSB;\n        num >>>= 7;\n    }\n    out[offset] = num | 0;\n    // @ts-ignore\n    encode.bytes = offset - oldOffset + 1;\n    return out;\n}\nvar decode = read;\nvar MSB$1 = 0x80, REST$1 = 0x7F;\n/**\n * @param {string | any[]} buf\n * @param {number} offset\n */ function read(buf, offset) {\n    var res = 0, offset = offset || 0, shift = 0, counter = offset, b, l = buf.length;\n    do {\n        if (counter >= l) {\n            // @ts-ignore\n            read.bytes = 0;\n            throw new RangeError(\"Could not decode varint\");\n        }\n        b = buf[counter++];\n        res += shift < 28 ? (b & REST$1) << shift : (b & REST$1) * Math.pow(2, shift);\n        shift += 7;\n    }while (b >= MSB$1);\n    // @ts-ignore\n    read.bytes = counter - offset;\n    return res;\n}\nvar N1 = Math.pow(2, 7);\nvar N2 = Math.pow(2, 14);\nvar N3 = Math.pow(2, 21);\nvar N4 = Math.pow(2, 28);\nvar N5 = Math.pow(2, 35);\nvar N6 = Math.pow(2, 42);\nvar N7 = Math.pow(2, 49);\nvar N8 = Math.pow(2, 56);\nvar N9 = Math.pow(2, 63);\nvar length = function(/** @type {number} */ value) {\n    return value < N1 ? 1 : value < N2 ? 2 : value < N3 ? 3 : value < N4 ? 4 : value < N5 ? 5 : value < N6 ? 6 : value < N7 ? 7 : value < N8 ? 8 : value < N9 ? 9 : 10;\n};\nvar varint = {\n    encode: encode_1,\n    decode: decode,\n    encodingLength: length\n};\nvar _brrp_varint = varint;\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_brrp_varint); //# sourceMappingURL=varint.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL2Rpc3Qvc3JjL3ZlbmRvci92YXJpbnQuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBLGtCQUFrQixHQUNsQixJQUFJQSxXQUFXQztBQUNmLElBQUlDLE1BQU0sTUFBTUMsT0FBTyxNQUFNQyxTQUFTLENBQUNELE1BQU1FLE1BQU1DLEtBQUtDLEdBQUcsQ0FBQyxHQUFHO0FBQy9EOzs7O0NBSUMsR0FDRCxTQUFTTixPQUFPTyxHQUFHLEVBQUVDLEdBQUcsRUFBRUMsTUFBTTtJQUM1QkQsTUFBTUEsT0FBTyxFQUFFO0lBQ2ZDLFNBQVNBLFVBQVU7SUFDbkIsSUFBSUMsWUFBWUQ7SUFDaEIsTUFBT0YsT0FBT0gsSUFBSztRQUNmSSxHQUFHLENBQUNDLFNBQVMsR0FBRyxNQUFPLE9BQVFSO1FBQy9CTSxPQUFPO0lBQ1g7SUFDQSxNQUFPQSxNQUFNSixPQUFRO1FBQ2pCSyxHQUFHLENBQUNDLFNBQVMsR0FBRyxNQUFPLE9BQVFSO1FBQy9CTSxTQUFTO0lBQ2I7SUFDQUMsR0FBRyxDQUFDQyxPQUFPLEdBQUdGLE1BQU07SUFDcEIsYUFBYTtJQUNiUCxPQUFPVyxLQUFLLEdBQUdGLFNBQVNDLFlBQVk7SUFDcEMsT0FBT0Y7QUFDWDtBQUNBLElBQUlJLFNBQVNDO0FBQ2IsSUFBSUMsUUFBUSxNQUFNQyxTQUFTO0FBQzNCOzs7Q0FHQyxHQUNELFNBQVNGLEtBQUtHLEdBQUcsRUFBRVAsTUFBTTtJQUNyQixJQUFJUSxNQUFNLEdBQUdSLFNBQVNBLFVBQVUsR0FBR1MsUUFBUSxHQUFHQyxVQUFVVixRQUFRVyxHQUFHQyxJQUFJTCxJQUFJTSxNQUFNO0lBQ2pGLEdBQUc7UUFDQyxJQUFJSCxXQUFXRSxHQUFHO1lBQ2QsYUFBYTtZQUNiUixLQUFLRixLQUFLLEdBQUc7WUFDYixNQUFNLElBQUlZLFdBQVc7UUFDekI7UUFDQUgsSUFBSUosR0FBRyxDQUFDRyxVQUFVO1FBQ2xCRixPQUFPQyxRQUFRLEtBQ1QsQ0FBQ0UsSUFBSUwsTUFBSyxLQUFNRyxRQUNoQixDQUFDRSxJQUFJTCxNQUFLLElBQUtWLEtBQUtDLEdBQUcsQ0FBQyxHQUFHWTtRQUNqQ0EsU0FBUztJQUNiLFFBQVNFLEtBQUtOLE9BQU87SUFDckIsYUFBYTtJQUNiRCxLQUFLRixLQUFLLEdBQUdRLFVBQVVWO0lBQ3ZCLE9BQU9RO0FBQ1g7QUFDQSxJQUFJTyxLQUFLbkIsS0FBS0MsR0FBRyxDQUFDLEdBQUc7QUFDckIsSUFBSW1CLEtBQUtwQixLQUFLQyxHQUFHLENBQUMsR0FBRztBQUNyQixJQUFJb0IsS0FBS3JCLEtBQUtDLEdBQUcsQ0FBQyxHQUFHO0FBQ3JCLElBQUlxQixLQUFLdEIsS0FBS0MsR0FBRyxDQUFDLEdBQUc7QUFDckIsSUFBSXNCLEtBQUt2QixLQUFLQyxHQUFHLENBQUMsR0FBRztBQUNyQixJQUFJdUIsS0FBS3hCLEtBQUtDLEdBQUcsQ0FBQyxHQUFHO0FBQ3JCLElBQUl3QixLQUFLekIsS0FBS0MsR0FBRyxDQUFDLEdBQUc7QUFDckIsSUFBSXlCLEtBQUsxQixLQUFLQyxHQUFHLENBQUMsR0FBRztBQUNyQixJQUFJMEIsS0FBSzNCLEtBQUtDLEdBQUcsQ0FBQyxHQUFHO0FBQ3JCLElBQUlnQixTQUFTLFNBQVUsbUJBQW1CLEdBQUdXLEtBQUs7SUFDOUMsT0FBUUEsUUFBUVQsS0FBSyxJQUNmUyxRQUFRUixLQUFLLElBQ1RRLFFBQVFQLEtBQUssSUFDVE8sUUFBUU4sS0FBSyxJQUNUTSxRQUFRTCxLQUFLLElBQ1RLLFFBQVFKLEtBQUssSUFDVEksUUFBUUgsS0FBSyxJQUNURyxRQUFRRixLQUFLLElBQ1RFLFFBQVFELEtBQUssSUFDVDtBQUMxQztBQUNBLElBQUlFLFNBQVM7SUFDVGxDLFFBQVFEO0lBQ1JhLFFBQVFBO0lBQ1J1QixnQkFBZ0JiO0FBQ3BCO0FBQ0EsSUFBSWMsZUFBZUY7QUFDbkIsaUVBQWVFLFlBQVlBLEVBQUMsQ0FDNUIsa0NBQWtDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZmx1c2gtbm90ZXMvLi9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL2Rpc3Qvc3JjL3ZlbmRvci92YXJpbnQuanM/Y2M2NCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiBlc2xpbnQtZGlzYWJsZSAqL1xudmFyIGVuY29kZV8xID0gZW5jb2RlO1xudmFyIE1TQiA9IDB4ODAsIFJFU1QgPSAweDdGLCBNU0JBTEwgPSB+UkVTVCwgSU5UID0gTWF0aC5wb3coMiwgMzEpO1xuLyoqXG4gKiBAcGFyYW0ge251bWJlcn0gbnVtXG4gKiBAcGFyYW0ge251bWJlcltdfSBvdXRcbiAqIEBwYXJhbSB7bnVtYmVyfSBvZmZzZXRcbiAqL1xuZnVuY3Rpb24gZW5jb2RlKG51bSwgb3V0LCBvZmZzZXQpIHtcbiAgICBvdXQgPSBvdXQgfHwgW107XG4gICAgb2Zmc2V0ID0gb2Zmc2V0IHx8IDA7XG4gICAgdmFyIG9sZE9mZnNldCA9IG9mZnNldDtcbiAgICB3aGlsZSAobnVtID49IElOVCkge1xuICAgICAgICBvdXRbb2Zmc2V0KytdID0gKG51bSAmIDB4RkYpIHwgTVNCO1xuICAgICAgICBudW0gLz0gMTI4O1xuICAgIH1cbiAgICB3aGlsZSAobnVtICYgTVNCQUxMKSB7XG4gICAgICAgIG91dFtvZmZzZXQrK10gPSAobnVtICYgMHhGRikgfCBNU0I7XG4gICAgICAgIG51bSA+Pj49IDc7XG4gICAgfVxuICAgIG91dFtvZmZzZXRdID0gbnVtIHwgMDtcbiAgICAvLyBAdHMtaWdub3JlXG4gICAgZW5jb2RlLmJ5dGVzID0gb2Zmc2V0IC0gb2xkT2Zmc2V0ICsgMTtcbiAgICByZXR1cm4gb3V0O1xufVxudmFyIGRlY29kZSA9IHJlYWQ7XG52YXIgTVNCJDEgPSAweDgwLCBSRVNUJDEgPSAweDdGO1xuLyoqXG4gKiBAcGFyYW0ge3N0cmluZyB8IGFueVtdfSBidWZcbiAqIEBwYXJhbSB7bnVtYmVyfSBvZmZzZXRcbiAqL1xuZnVuY3Rpb24gcmVhZChidWYsIG9mZnNldCkge1xuICAgIHZhciByZXMgPSAwLCBvZmZzZXQgPSBvZmZzZXQgfHwgMCwgc2hpZnQgPSAwLCBjb3VudGVyID0gb2Zmc2V0LCBiLCBsID0gYnVmLmxlbmd0aDtcbiAgICBkbyB7XG4gICAgICAgIGlmIChjb3VudGVyID49IGwpIHtcbiAgICAgICAgICAgIC8vIEB0cy1pZ25vcmVcbiAgICAgICAgICAgIHJlYWQuYnl0ZXMgPSAwO1xuICAgICAgICAgICAgdGhyb3cgbmV3IFJhbmdlRXJyb3IoJ0NvdWxkIG5vdCBkZWNvZGUgdmFyaW50Jyk7XG4gICAgICAgIH1cbiAgICAgICAgYiA9IGJ1Zltjb3VudGVyKytdO1xuICAgICAgICByZXMgKz0gc2hpZnQgPCAyOFxuICAgICAgICAgICAgPyAoYiAmIFJFU1QkMSkgPDwgc2hpZnRcbiAgICAgICAgICAgIDogKGIgJiBSRVNUJDEpICogTWF0aC5wb3coMiwgc2hpZnQpO1xuICAgICAgICBzaGlmdCArPSA3O1xuICAgIH0gd2hpbGUgKGIgPj0gTVNCJDEpO1xuICAgIC8vIEB0cy1pZ25vcmVcbiAgICByZWFkLmJ5dGVzID0gY291bnRlciAtIG9mZnNldDtcbiAgICByZXR1cm4gcmVzO1xufVxudmFyIE4xID0gTWF0aC5wb3coMiwgNyk7XG52YXIgTjIgPSBNYXRoLnBvdygyLCAxNCk7XG52YXIgTjMgPSBNYXRoLnBvdygyLCAyMSk7XG52YXIgTjQgPSBNYXRoLnBvdygyLCAyOCk7XG52YXIgTjUgPSBNYXRoLnBvdygyLCAzNSk7XG52YXIgTjYgPSBNYXRoLnBvdygyLCA0Mik7XG52YXIgTjcgPSBNYXRoLnBvdygyLCA0OSk7XG52YXIgTjggPSBNYXRoLnBvdygyLCA1Nik7XG52YXIgTjkgPSBNYXRoLnBvdygyLCA2Myk7XG52YXIgbGVuZ3RoID0gZnVuY3Rpb24gKC8qKiBAdHlwZSB7bnVtYmVyfSAqLyB2YWx1ZSkge1xuICAgIHJldHVybiAodmFsdWUgPCBOMSA/IDFcbiAgICAgICAgOiB2YWx1ZSA8IE4yID8gMlxuICAgICAgICAgICAgOiB2YWx1ZSA8IE4zID8gM1xuICAgICAgICAgICAgICAgIDogdmFsdWUgPCBONCA/IDRcbiAgICAgICAgICAgICAgICAgICAgOiB2YWx1ZSA8IE41ID8gNVxuICAgICAgICAgICAgICAgICAgICAgICAgOiB2YWx1ZSA8IE42ID8gNlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDogdmFsdWUgPCBONyA/IDdcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgOiB2YWx1ZSA8IE44ID8gOFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgOiB2YWx1ZSA8IE45ID8gOVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDogMTApO1xufTtcbnZhciB2YXJpbnQgPSB7XG4gICAgZW5jb2RlOiBlbmNvZGVfMSxcbiAgICBkZWNvZGU6IGRlY29kZSxcbiAgICBlbmNvZGluZ0xlbmd0aDogbGVuZ3RoXG59O1xudmFyIF9icnJwX3ZhcmludCA9IHZhcmludDtcbmV4cG9ydCBkZWZhdWx0IF9icnJwX3ZhcmludDtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXZhcmludC5qcy5tYXAiXSwibmFtZXMiOlsiZW5jb2RlXzEiLCJlbmNvZGUiLCJNU0IiLCJSRVNUIiwiTVNCQUxMIiwiSU5UIiwiTWF0aCIsInBvdyIsIm51bSIsIm91dCIsIm9mZnNldCIsIm9sZE9mZnNldCIsImJ5dGVzIiwiZGVjb2RlIiwicmVhZCIsIk1TQiQxIiwiUkVTVCQxIiwiYnVmIiwicmVzIiwic2hpZnQiLCJjb3VudGVyIiwiYiIsImwiLCJsZW5ndGgiLCJSYW5nZUVycm9yIiwiTjEiLCJOMiIsIk4zIiwiTjQiLCJONSIsIk42IiwiTjciLCJOOCIsIk45IiwidmFsdWUiLCJ2YXJpbnQiLCJlbmNvZGluZ0xlbmd0aCIsIl9icnJwX3ZhcmludCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/multiformats/dist/src/vendor/varint.js\n");

/***/ })

};
;