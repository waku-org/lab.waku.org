"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/uint8-varint";
exports.ids = ["vendor-chunks/uint8-varint"];
exports.modules = {

/***/ "(ssr)/./node_modules/uint8-varint/dist/src/index.js":
/*!*****************************************************!*\
  !*** ./node_modules/uint8-varint/dist/src/index.js ***!
  \*****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decode: () => (/* binding */ decode),\n/* harmony export */   decodeUint8Array: () => (/* binding */ decodeUint8Array),\n/* harmony export */   decodeUint8ArrayList: () => (/* binding */ decodeUint8ArrayList),\n/* harmony export */   encode: () => (/* binding */ encode),\n/* harmony export */   encodeUint8Array: () => (/* binding */ encodeUint8Array),\n/* harmony export */   encodeUint8ArrayList: () => (/* binding */ encodeUint8ArrayList),\n/* harmony export */   encodingLength: () => (/* binding */ encodingLength)\n/* harmony export */ });\n/* harmony import */ var uint8arrays_alloc__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! uint8arrays/alloc */ \"(ssr)/./node_modules/uint8arrays/dist/src/alloc.node.js\");\n/* eslint-disable no-fallthrough */ \nconst N1 = Math.pow(2, 7);\nconst N2 = Math.pow(2, 14);\nconst N3 = Math.pow(2, 21);\nconst N4 = Math.pow(2, 28);\nconst N5 = Math.pow(2, 35);\nconst N6 = Math.pow(2, 42);\nconst N7 = Math.pow(2, 49);\n/** Most significant bit of a byte */ const MSB = 0x80;\n/** Rest of the bits in a byte */ const REST = 0x7f;\nfunction encodingLength(value) {\n    if (value < N1) {\n        return 1;\n    }\n    if (value < N2) {\n        return 2;\n    }\n    if (value < N3) {\n        return 3;\n    }\n    if (value < N4) {\n        return 4;\n    }\n    if (value < N5) {\n        return 5;\n    }\n    if (value < N6) {\n        return 6;\n    }\n    if (value < N7) {\n        return 7;\n    }\n    if (Number.MAX_SAFE_INTEGER != null && value > Number.MAX_SAFE_INTEGER) {\n        throw new RangeError(\"Could not encode varint\");\n    }\n    return 8;\n}\nfunction encodeUint8Array(value, buf, offset = 0) {\n    switch(encodingLength(value)){\n        case 8:\n            {\n                buf[offset++] = value & 0xFF | MSB;\n                value /= 128;\n            }\n        case 7:\n            {\n                buf[offset++] = value & 0xFF | MSB;\n                value /= 128;\n            }\n        case 6:\n            {\n                buf[offset++] = value & 0xFF | MSB;\n                value /= 128;\n            }\n        case 5:\n            {\n                buf[offset++] = value & 0xFF | MSB;\n                value /= 128;\n            }\n        case 4:\n            {\n                buf[offset++] = value & 0xFF | MSB;\n                value >>>= 7;\n            }\n        case 3:\n            {\n                buf[offset++] = value & 0xFF | MSB;\n                value >>>= 7;\n            }\n        case 2:\n            {\n                buf[offset++] = value & 0xFF | MSB;\n                value >>>= 7;\n            }\n        case 1:\n            {\n                buf[offset++] = value & 0xFF;\n                value >>>= 7;\n                break;\n            }\n        default:\n            throw new Error(\"unreachable\");\n    }\n    return buf;\n}\nfunction encodeUint8ArrayList(value, buf, offset = 0) {\n    switch(encodingLength(value)){\n        case 8:\n            {\n                buf.set(offset++, value & 0xFF | MSB);\n                value /= 128;\n            }\n        case 7:\n            {\n                buf.set(offset++, value & 0xFF | MSB);\n                value /= 128;\n            }\n        case 6:\n            {\n                buf.set(offset++, value & 0xFF | MSB);\n                value /= 128;\n            }\n        case 5:\n            {\n                buf.set(offset++, value & 0xFF | MSB);\n                value /= 128;\n            }\n        case 4:\n            {\n                buf.set(offset++, value & 0xFF | MSB);\n                value >>>= 7;\n            }\n        case 3:\n            {\n                buf.set(offset++, value & 0xFF | MSB);\n                value >>>= 7;\n            }\n        case 2:\n            {\n                buf.set(offset++, value & 0xFF | MSB);\n                value >>>= 7;\n            }\n        case 1:\n            {\n                buf.set(offset++, value & 0xFF);\n                value >>>= 7;\n                break;\n            }\n        default:\n            throw new Error(\"unreachable\");\n    }\n    return buf;\n}\nfunction decodeUint8Array(buf, offset) {\n    let b = buf[offset];\n    let res = 0;\n    res += b & REST;\n    if (b < MSB) {\n        return res;\n    }\n    b = buf[offset + 1];\n    res += (b & REST) << 7;\n    if (b < MSB) {\n        return res;\n    }\n    b = buf[offset + 2];\n    res += (b & REST) << 14;\n    if (b < MSB) {\n        return res;\n    }\n    b = buf[offset + 3];\n    res += (b & REST) << 21;\n    if (b < MSB) {\n        return res;\n    }\n    b = buf[offset + 4];\n    res += (b & REST) * N4;\n    if (b < MSB) {\n        return res;\n    }\n    b = buf[offset + 5];\n    res += (b & REST) * N5;\n    if (b < MSB) {\n        return res;\n    }\n    b = buf[offset + 6];\n    res += (b & REST) * N6;\n    if (b < MSB) {\n        return res;\n    }\n    b = buf[offset + 7];\n    res += (b & REST) * N7;\n    if (b < MSB) {\n        return res;\n    }\n    throw new RangeError(\"Could not decode varint\");\n}\nfunction decodeUint8ArrayList(buf, offset) {\n    let b = buf.get(offset);\n    let res = 0;\n    res += b & REST;\n    if (b < MSB) {\n        return res;\n    }\n    b = buf.get(offset + 1);\n    res += (b & REST) << 7;\n    if (b < MSB) {\n        return res;\n    }\n    b = buf.get(offset + 2);\n    res += (b & REST) << 14;\n    if (b < MSB) {\n        return res;\n    }\n    b = buf.get(offset + 3);\n    res += (b & REST) << 21;\n    if (b < MSB) {\n        return res;\n    }\n    b = buf.get(offset + 4);\n    res += (b & REST) * N4;\n    if (b < MSB) {\n        return res;\n    }\n    b = buf.get(offset + 5);\n    res += (b & REST) * N5;\n    if (b < MSB) {\n        return res;\n    }\n    b = buf.get(offset + 6);\n    res += (b & REST) * N6;\n    if (b < MSB) {\n        return res;\n    }\n    b = buf.get(offset + 7);\n    res += (b & REST) * N7;\n    if (b < MSB) {\n        return res;\n    }\n    throw new RangeError(\"Could not decode varint\");\n}\nfunction encode(value, buf, offset = 0) {\n    if (buf == null) {\n        buf = (0,uint8arrays_alloc__WEBPACK_IMPORTED_MODULE_0__.allocUnsafe)(encodingLength(value));\n    }\n    if (buf instanceof Uint8Array) {\n        return encodeUint8Array(value, buf, offset);\n    } else {\n        return encodeUint8ArrayList(value, buf, offset);\n    }\n}\nfunction decode(buf, offset = 0) {\n    if (buf instanceof Uint8Array) {\n        return decodeUint8Array(buf, offset);\n    } else {\n        return decodeUint8ArrayList(buf, offset);\n    }\n} //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/uint8-varint/dist/src/index.js\n");

/***/ })

};
;