"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/utf8-codec";
exports.ids = ["vendor-chunks/utf8-codec"];
exports.modules = {

/***/ "(ssr)/./node_modules/utf8-codec/index.mjs":
/*!*******************************************!*\
  !*** ./node_modules/utf8-codec/index.mjs ***!
  \*******************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decode: () => (/* binding */ decode),\n/* harmony export */   encode: () => (/* binding */ encode),\n/* harmony export */   encodingLength: () => (/* binding */ encodingLength),\n/* harmony export */   name: () => (/* binding */ name)\n/* harmony export */ });\nconst SURROGATE_A = 55296;\nconst SURROGATE_B = 56320;\nconst name = \"utf8\";\nfunction encodingLength(str) {\n    let len = 0;\n    const strLen = str.length;\n    for(let i = 0; i < strLen; i += 1){\n        const code = str.charCodeAt(i);\n        if (code <= 0x7F) {\n            len += 1;\n        } else if (code <= 0x07FF) {\n            len += 2;\n        } else if ((code & 0xF800) !== SURROGATE_A) {\n            len += 3;\n        } else {\n            const next = i + 1;\n            if (next === strLen || code >= SURROGATE_B) {\n                len += 3;\n            } else {\n                const nextCode = str.charCodeAt(next);\n                if ((nextCode & 0xFC00) !== SURROGATE_B) {\n                    len += 3;\n                } else {\n                    i = next;\n                    len += 4;\n                }\n            }\n        }\n    }\n    return len;\n}\nfunction encode(str, buf, offset) {\n    const strLen = str.length;\n    if (offset === undefined || offset === null) {\n        offset = 0;\n    }\n    if (buf === undefined) {\n        buf = new Uint8Array(encodingLength(str) + offset);\n    }\n    let off = offset;\n    for(let i = 0; i < strLen; i += 1){\n        let code = str.charCodeAt(i);\n        if (code <= 0x7F) {\n            buf[off++] = code;\n        } else if (code <= 0x07FF) {\n            buf[off++] = 192 | (code & 1984) >> 6;\n            buf[off++] = 128 | code & 63;\n        } else if ((code & 0xF800) !== SURROGATE_A) {\n            buf[off++] = 224 | (code & 61440) >> 12;\n            buf[off++] = 128 | (code & 4032) >> 6;\n            buf[off++] = 128 | code & 63;\n        } else {\n            const next = i + 1;\n            if (next === strLen || code >= SURROGATE_B) {\n                // Incorrectly started surrogate pair\n                buf[off++] = 0xef;\n                buf[off++] = 0xbf;\n                buf[off++] = 0xbd;\n            } else {\n                const nextCode = str.charCodeAt(next);\n                if ((nextCode & 0xFC00) !== SURROGATE_B) {\n                    // Incorrect surrogate pair\n                    buf[off++] = 0xef;\n                    buf[off++] = 0xbf;\n                    buf[off++] = 0xbd;\n                } else {\n                    i = next;\n                    code = 65536 | (code & 1023) << 10 | nextCode & 1023;\n                    buf[off++] = 240 | (code & 1835008) >> 18;\n                    buf[off++] = 128 | (code & 258048) >> 12;\n                    buf[off++] = 128 | (code & 4032) >> 6;\n                    buf[off++] = 128 | code & 63;\n                }\n            }\n        }\n    }\n    encode.bytes = off - offset;\n    return buf;\n}\nencode.bytes = 0;\nfunction decode(buf, start, end) {\n    let result = \"\";\n    if (start === undefined || start === null) {\n        start = 0;\n    }\n    if (end === undefined || end === null) {\n        end = buf.length;\n    }\n    for(let offset = start; offset < end;){\n        const code = buf[offset++];\n        let num;\n        if (code <= 128) {\n            num = code;\n        } else if (code > 191 && code < 224) {\n            num = (code & 31) << 6 | buf[offset++] & 63;\n        } else if (code > 239 && code < 365) {\n            num = ((code & 7) << 18 | (buf[offset++] & 63) << 12 | (buf[offset++] & 63) << 6 | buf[offset++] & 63) - 0x10000;\n            const numA = SURROGATE_A | num >> 10 & 1023;\n            result += String.fromCharCode(numA);\n            num = SURROGATE_B | num & 1023;\n        } else {\n            num = (code & 15) << 12 | (buf[offset++] & 63) << 6 | buf[offset++] & 63;\n        }\n        result += String.fromCharCode(num);\n    }\n    decode.bytes = end - start;\n    return result;\n}\ndecode.bytes = 0;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/utf8-codec/index.mjs\n");

/***/ })

};
;